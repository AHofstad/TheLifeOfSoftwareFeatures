commit 4a5bd47b6a8d48f6c0045399e667f2c521faa213
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 11 13:40:29 2024 -0500

    üé® Apply MUL_TERN

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 6cc8b6157e..26f7a07d58 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -130,7 +130,7 @@ public:
   }
 
   // Accessors
-  static uint16_t pixels() { return adaneo1.numPixels() * TERN1(NEOPIXEL2_INSERIES, 2); }
+  static uint16_t pixels() { return MUL_TERN(NEOPIXEL2_INSERIES, adaneo1.numPixels(), 2); }
 
   static uint32_t pixel_color(const uint16_t n) {
     #if ENABLED(NEOPIXEL2_INSERIES)

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 3801ded6aa..6cc8b6157e 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -58,7 +58,7 @@
   #define MULTIPLE_NEOPIXEL_TYPES 1
 #endif
 
-#if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
+#if ANY(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
   #define CONJOINED_NEOPIXEL 1
 #endif
 

commit f0c8c9182090f8929ec4766683ec2d6902d4bc00
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 3 20:44:24 2023 -0600

    üßë‚Äçüíª Width/Magnitude-based types (#25458)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 7c8d018013..3801ded6aa 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -66,7 +66,7 @@
 // Types
 // ------------------------
 
-typedef IF<(TERN0(NEOPIXEL_LED, NEOPIXEL_PIXELS > 127)), int16_t, int8_t>::type pixel_index_t;
+typedef value_t(TERN0(NEOPIXEL_LED, NEOPIXEL_PIXELS)) pixel_index_t;
 
 // ------------------------
 // Classes

commit 866e7d3128a7c526a76b8826df70b3769177385d
Author: Daranbalt4 <119883952+Daranbalt4@users.noreply.github.com>
Date:   Mon Feb 27 04:23:52 2023 +0100

    ‚ú® LCD_BACKLIGHT_TIMEOUT for Neopixel LCD (#25438)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 2048e2c2ee..7c8d018013 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -91,6 +91,7 @@ public:
     static void set_background_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w);
     static void set_background_color(const uint8_t (&rgbw)[4]) { set_background_color(rgbw[0], rgbw[1], rgbw[2], rgbw[3]); }
     static void reset_background_color();
+    static void set_background_off();
   #endif
 
   static void begin() {

commit 5a2cc41f9c967f8183b4a8eb5547c4a6034c244f
Author: qwertymodo <qwertymodo@gmail.com>
Date:   Fri Aug 5 22:07:30 2022 -0700

    ‚ú® M150 K ‚Äì Keep unspecified components (#24315)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index d71aa25770..2048e2c2ee 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -131,6 +131,13 @@ public:
   // Accessors
   static uint16_t pixels() { return adaneo1.numPixels() * TERN1(NEOPIXEL2_INSERIES, 2); }
 
+  static uint32_t pixel_color(const uint16_t n) {
+    #if ENABLED(NEOPIXEL2_INSERIES)
+      if (n >= NEOPIXEL_PIXELS) return adaneo2.getPixelColor(n - (NEOPIXEL_PIXELS));
+    #endif
+    return adaneo1.getPixelColor(n);
+  }
+
   static uint8_t brightness() { return adaneo1.getBrightness(); }
 
   static uint32_t Color(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED, uint8_t w)) {
@@ -174,6 +181,7 @@ extern Marlin_NeoPixel neo;
 
     // Accessors
     static uint16_t pixels() { return adaneo.numPixels();}
+    static uint32_t pixel_color(const uint16_t n) { return adaneo.getPixelColor(n); }
     static uint8_t brightness() { return adaneo.getBrightness(); }
     static uint32_t Color(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED2, uint8_t w)) {
       return adaneo.Color(r, g, b OPTARG(HAS_WHITE_LED2, w));

commit de8e4361104c31cab943cc321e2055c18272edd6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 22 19:08:00 2022 -0500

    üßë‚Äçüíª Add neo.set_background_color(rgbw)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 1a38ed1a19..d71aa25770 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -88,7 +88,8 @@ public:
   static void set_color(const uint32_t c);
 
   #ifdef NEOPIXEL_BKGD_INDEX_FIRST
-    static void set_background_color(uint8_t r, uint8_t g, uint8_t b, uint8_t w);
+    static void set_background_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w);
+    static void set_background_color(const uint8_t (&rgbw)[4]) { set_background_color(rgbw[0], rgbw[1], rgbw[2], rgbw[3]); }
     static void reset_background_color();
   #endif
 

commit f07fc7e96f512f4900619049761f75d28f9e0403
Author: GHGiampy <83699429+GHGiampy@users.noreply.github.com>
Date:   Wed Feb 2 00:35:38 2022 +0100

    üö∏ Case Light, LED menus for E3V2 DWIN Enhanced UI (#23590)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index ae75316b8f..1a38ed1a19 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -25,8 +25,6 @@
  * NeoPixel support
  */
 
-#define MAX_NEOPIXELS 127
-
 #ifndef _NEOPIXEL_INCLUDE_
   #error "Always include 'leds.h' and not 'neopixel.h' directly."
 #endif
@@ -68,7 +66,7 @@
 // Types
 // ------------------------
 
-typedef IF<(MAX_NEOPIXELS > 127), int16_t, int8_t>::type pixel_index_t;
+typedef IF<(TERN0(NEOPIXEL_LED, NEOPIXEL_PIXELS > 127)), int16_t, int8_t>::type pixel_index_t;
 
 // ------------------------
 // Classes

commit 6fb2d8a25f096d084348a6f6930f515d947474d4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 02:57:24 2021 -0600

    üßë‚Äçüíª Remove extraneous 'inline' hints

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 814ae9c8d8..ae75316b8f 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -94,12 +94,12 @@ public:
     static void reset_background_color();
   #endif
 
-  static inline void begin() {
+  static void begin() {
     adaneo1.begin();
     TERN_(CONJOINED_NEOPIXEL, adaneo2.begin());
   }
 
-  static inline void set_pixel_color(const uint16_t n, const uint32_t c) {
+  static void set_pixel_color(const uint16_t n, const uint32_t c) {
     #if ENABLED(NEOPIXEL2_INSERIES)
       if (n >= NEOPIXEL_PIXELS) adaneo2.setPixelColor(n - (NEOPIXEL_PIXELS), c);
       else adaneo1.setPixelColor(n, c);
@@ -109,12 +109,12 @@ public:
     #endif
   }
 
-  static inline void set_brightness(const uint8_t b) {
+  static void set_brightness(const uint8_t b) {
     adaneo1.setBrightness(b);
     TERN_(CONJOINED_NEOPIXEL, adaneo2.setBrightness(b));
   }
 
-  static inline void show() {
+  static void show() {
     // Some platforms cannot maintain PWM output when NeoPixel disables interrupts for long durations.
     TERN_(HAS_PAUSE_SERVO_OUTPUT, PAUSE_SERVO_OUTPUT());
     adaneo1.show();
@@ -130,11 +130,11 @@ public:
   }
 
   // Accessors
-  static inline uint16_t pixels() { return adaneo1.numPixels() * TERN1(NEOPIXEL2_INSERIES, 2); }
+  static uint16_t pixels() { return adaneo1.numPixels() * TERN1(NEOPIXEL2_INSERIES, 2); }
 
-  static inline uint8_t brightness() { return adaneo1.getBrightness(); }
+  static uint8_t brightness() { return adaneo1.getBrightness(); }
 
-  static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED, uint8_t w)) {
+  static uint32_t Color(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED, uint8_t w)) {
     return adaneo1.Color(r, g, b OPTARG(HAS_WHITE_LED, w));
   }
 };
@@ -165,18 +165,18 @@ extern Marlin_NeoPixel neo;
 
     static void set_color(const uint32_t c);
 
-    static inline void begin() { adaneo.begin(); }
-    static inline void set_pixel_color(const uint16_t n, const uint32_t c) { adaneo.setPixelColor(n, c); }
-    static inline void set_brightness(const uint8_t b) { adaneo.setBrightness(b); }
-    static inline void show() {
+    static void begin() { adaneo.begin(); }
+    static void set_pixel_color(const uint16_t n, const uint32_t c) { adaneo.setPixelColor(n, c); }
+    static void set_brightness(const uint8_t b) { adaneo.setBrightness(b); }
+    static void show() {
       adaneo.show();
       adaneo.setPin(NEOPIXEL2_PIN);
     }
 
     // Accessors
-    static inline uint16_t pixels() { return adaneo.numPixels();}
-    static inline uint8_t brightness() { return adaneo.getBrightness(); }
-    static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED2, uint8_t w)) {
+    static uint16_t pixels() { return adaneo.numPixels();}
+    static uint8_t brightness() { return adaneo.getBrightness(); }
+    static uint32_t Color(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED2, uint8_t w)) {
       return adaneo.Color(r, g, b OPTARG(HAS_WHITE_LED2, w));
     }
   };

commit ba3239145429e15901bb642a7225204f95b8e308
Author: GHGiampy <83699429+GHGiampy@users.noreply.github.com>
Date:   Mon Dec 20 09:44:43 2021 +0100

    üßë‚Äçüíª Option allowing > 127 Neopixels (#23322)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index b2c16459f5..814ae9c8d8 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -25,6 +25,8 @@
  * NeoPixel support
  */
 
+#define MAX_NEOPIXELS 127
+
 #ifndef _NEOPIXEL_INCLUDE_
   #error "Always include 'leds.h' and not 'neopixel.h' directly."
 #endif
@@ -63,7 +65,13 @@
 #endif
 
 // ------------------------
-// Function prototypes
+// Types
+// ------------------------
+
+typedef IF<(MAX_NEOPIXELS > 127), int16_t, int8_t>::type pixel_index_t;
+
+// ------------------------
+// Classes
 // ------------------------
 
 class Marlin_NeoPixel {
@@ -74,7 +82,7 @@ private:
   #endif
 
 public:
-  static int8_t neoindex;
+  static pixel_index_t neoindex;
 
   static void init();
   static void set_color_startup(const uint32_t c);
@@ -150,7 +158,7 @@ extern Marlin_NeoPixel neo;
     static Adafruit_NeoPixel adaneo;
 
   public:
-    static int8_t neoindex;
+    static pixel_index_t neoindex;
 
     static void init();
     static void set_color_startup(const uint32_t c);

commit 59f01b417ad4b2a6a2f56758cf1ac797edaa4a6f
Author: Grumpy <dfouche8@gmail.com>
Date:   Tue Jun 22 08:12:39 2021 +1200

    üêõ Fix dual Neopixels (#22174)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index e577948cd8..b2c16459f5 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -114,7 +114,6 @@ public:
       #if CONJOINED_NEOPIXEL
         adaneo2.show();
       #else
-        IF_DISABLED(NEOPIXEL2_SEPARATE, adaneo1.setPin(NEOPIXEL2_PIN));
         adaneo1.show();
         adaneo1.setPin(NEOPIXEL_PIN);
       #endif

commit e60c38b6220678b3b9f3a3b31516852f8d25b3b0
Author: ellensp <ellensp@hotmail.com>
Date:   Wed May 26 11:38:23 2021 +1200

    ‚ôªÔ∏è LEDs refactor and extend (#21962)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index acf2e7f54d..e577948cd8 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -25,6 +25,10 @@
  * NeoPixel support
  */
 
+#ifndef _NEOPIXEL_INCLUDE_
+  #error "Always include 'leds.h' and not 'neopixel.h' directly."
+#endif
+
 // ------------------------
 // Includes
 // ------------------------
@@ -38,24 +42,24 @@
 // Defines
 // ------------------------
 
-#if defined(NEOPIXEL2_TYPE) && NEOPIXEL2_TYPE != NEOPIXEL_TYPE && DISABLED(NEOPIXEL2_SEPARATE)
-  #define MULTIPLE_NEOPIXEL_TYPES 1
-#endif
+#define _NEO_IS_RGB(N) (N == NEO_RGB || N == NEO_RBG || N == NEO_GRB || N == NEO_GBR || N == NEO_BRG || N == NEO_BGR)
 
-#if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
-  #define CONJOINED_NEOPIXEL 1
+#if !_NEO_IS_RGB(NEOPIXEL_TYPE)
+  #define HAS_WHITE_LED 1
 #endif
 
-#if NEOPIXEL_TYPE == NEO_RGB || NEOPIXEL_TYPE == NEO_RBG || NEOPIXEL_TYPE == NEO_GRB || NEOPIXEL_TYPE == NEO_GBR || NEOPIXEL_TYPE == NEO_BRG || NEOPIXEL_TYPE == NEO_BGR
-  #define NEOPIXEL_IS_RGB 1
+#if HAS_WHITE_LED
+  #define NEO_WHITE 0, 0, 0, 255
 #else
-  #define NEOPIXEL_IS_RGBW 1
+  #define NEO_WHITE 255, 255, 255
 #endif
 
-#if NEOPIXEL_IS_RGB
-  #define NEO_WHITE 255, 255, 255, 0
-#else
-  #define NEO_WHITE 0, 0, 0, 255
+#if defined(NEOPIXEL2_TYPE) && NEOPIXEL2_TYPE != NEOPIXEL_TYPE && DISABLED(NEOPIXEL2_SEPARATE)
+  #define MULTIPLE_NEOPIXEL_TYPES 1
+#endif
+
+#if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
+  #define CONJOINED_NEOPIXEL 1
 #endif
 
 // ------------------------
@@ -64,11 +68,10 @@
 
 class Marlin_NeoPixel {
 private:
-  static Adafruit_NeoPixel adaneo1
-    #if CONJOINED_NEOPIXEL
-      , adaneo2
-    #endif
-  ;
+  static Adafruit_NeoPixel adaneo1;
+  #if CONJOINED_NEOPIXEL
+    static Adafruit_NeoPixel adaneo2;
+  #endif
 
 public:
   static int8_t neoindex;
@@ -78,8 +81,9 @@ public:
 
   static void set_color(const uint32_t c);
 
-  #ifdef NEOPIXEL_BKGD_LED_INDEX
-    static void set_color_background();
+  #ifdef NEOPIXEL_BKGD_INDEX_FIRST
+    static void set_background_color(uint8_t r, uint8_t g, uint8_t b, uint8_t w);
+    static void reset_background_color();
   #endif
 
   static inline void begin() {
@@ -93,9 +97,7 @@ public:
       else adaneo1.setPixelColor(n, c);
     #else
       adaneo1.setPixelColor(n, c);
-      #if MULTIPLE_NEOPIXEL_TYPES
-        adaneo2.setPixelColor(n, c);
-      #endif
+      TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setPixelColor(n, c));
     #endif
   }
 
@@ -120,15 +122,13 @@ public:
     TERN_(HAS_PAUSE_SERVO_OUTPUT, RESUME_SERVO_OUTPUT());
   }
 
-  #if 0
-    bool set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
-  #endif
-
   // Accessors
-  static inline uint16_t pixels() { TERN(NEOPIXEL2_INSERIES, return adaneo1.numPixels() * 2, return adaneo1.numPixels()); }
+  static inline uint16_t pixels() { return adaneo1.numPixels() * TERN1(NEOPIXEL2_INSERIES, 2); }
+
   static inline uint8_t brightness() { return adaneo1.getBrightness(); }
-  static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b, uint8_t w) {
-    return adaneo1.Color(r, g, b, w);
+
+  static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED, uint8_t w)) {
+    return adaneo1.Color(r, g, b OPTARG(HAS_WHITE_LED, w));
   }
 };
 
@@ -137,15 +137,12 @@ extern Marlin_NeoPixel neo;
 // Neo pixel channel 2
 #if ENABLED(NEOPIXEL2_SEPARATE)
 
-  #if NEOPIXEL2_TYPE == NEO_RGB || NEOPIXEL2_TYPE == NEO_RBG || NEOPIXEL2_TYPE == NEO_GRB || NEOPIXEL2_TYPE == NEO_GBR || NEOPIXEL2_TYPE == NEO_BRG || NEOPIXEL2_TYPE == NEO_BGR
+  #if _NEO_IS_RGB(NEOPIXEL2_TYPE)
     #define NEOPIXEL2_IS_RGB 1
+    #define NEO2_WHITE 255, 255, 255
   #else
     #define NEOPIXEL2_IS_RGBW 1
-  #endif
-
-  #if NEOPIXEL2_IS_RGB
-    #define NEO2_WHITE 255, 255, 255, 0
-  #else
+    #define HAS_WHITE_LED2 1      // A white component can be passed for NEOPIXEL2
     #define NEO2_WHITE 0, 0, 0, 255
   #endif
 
@@ -172,11 +169,13 @@ extern Marlin_NeoPixel neo;
     // Accessors
     static inline uint16_t pixels() { return adaneo.numPixels();}
     static inline uint8_t brightness() { return adaneo.getBrightness(); }
-    static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b, uint8_t w) {
-      return adaneo.Color(r, g, b, w);
+    static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED2, uint8_t w)) {
+      return adaneo.Color(r, g, b OPTARG(HAS_WHITE_LED2, w));
     }
   };
 
   extern Marlin_NeoPixel2 neo2;
 
 #endif // NEOPIXEL2_SEPARATE
+
+#undef _NEO_IS_RGB

commit 2c8f5662313f35fb3728fb691615977ac360cd3e
Author: Jason Smith <jason.inet@gmail.com>
Date:   Fri Dec 4 22:02:58 2020 -0800

    Suspend Servos for STM32+NeoPixel (#19963)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index d7354207fc..acf2e7f54d 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -105,6 +105,8 @@ public:
   }
 
   static inline void show() {
+    // Some platforms cannot maintain PWM output when NeoPixel disables interrupts for long durations.
+    TERN_(HAS_PAUSE_SERVO_OUTPUT, PAUSE_SERVO_OUTPUT());
     adaneo1.show();
     #if PIN_EXISTS(NEOPIXEL2)
       #if CONJOINED_NEOPIXEL
@@ -115,6 +117,7 @@ public:
         adaneo1.setPin(NEOPIXEL_PIN);
       #endif
     #endif
+    TERN_(HAS_PAUSE_SERVO_OUTPUT, RESUME_SERVO_OUTPUT());
   }
 
   #if 0

commit 06bf3ccfb7a19c972e5f40816d49e3860711f976
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Nov 7 18:28:29 2020 -0600

    Add alternative TERN macros

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 42046fa563..d7354207fc 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -110,7 +110,7 @@ public:
       #if CONJOINED_NEOPIXEL
         adaneo2.show();
       #else
-        TERN(NEOPIXEL2_SEPARATE,,adaneo1.setPin(NEOPIXEL2_PIN));
+        IF_DISABLED(NEOPIXEL2_SEPARATE, adaneo1.setPin(NEOPIXEL2_PIN));
         adaneo1.show();
         adaneo1.setPin(NEOPIXEL_PIN);
       #endif

commit 26858fdebfff14960bc2234b5346f7caf9690bd6
Author: Zachary Annand <baconfixation@gmail.com>
Date:   Thu Sep 3 17:43:52 2020 -0500

    Separate Neopixel followup (#19250)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index f8300c4d98..42046fa563 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -110,7 +110,7 @@ public:
       #if CONJOINED_NEOPIXEL
         adaneo2.show();
       #else
-        TERN_(NEOPIXEL2_SEPARATE,adaneo1.setPin(NEOPIXEL2_PIN));
+        TERN(NEOPIXEL2_SEPARATE,,adaneo1.setPin(NEOPIXEL2_PIN));
         adaneo1.show();
         adaneo1.setPin(NEOPIXEL_PIN);
       #endif

commit 09ddb5a7246ef8ec189d35f0e1303229ee6e5cd4
Author: Zachary Annand <baconfixation@gmail.com>
Date:   Tue Sep 1 17:03:28 2020 -0500

    Separate Neopixel followup (#19224)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 09a5cf8b39..f8300c4d98 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -110,7 +110,7 @@ public:
       #if CONJOINED_NEOPIXEL
         adaneo2.show();
       #else
-        TERN_(NEOPIXEL2_SEPARATE,,adaneo1.setPin(NEOPIXEL2_PIN));
+        TERN_(NEOPIXEL2_SEPARATE,adaneo1.setPin(NEOPIXEL2_PIN));
         adaneo1.show();
         adaneo1.setPin(NEOPIXEL_PIN);
       #endif

commit 41c7ae5d5466c3a234ac52a97e7b91afa16774b8
Author: Zachary Annand <baconfixation@gmail.com>
Date:   Mon Aug 31 16:06:24 2020 -0500

    Separate Neopixels followup (#19179)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 81a0a8b1c6..09a5cf8b39 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -110,7 +110,7 @@ public:
       #if CONJOINED_NEOPIXEL
         adaneo2.show();
       #else
-        adaneo1.setPin(NEOPIXEL2_PIN);
+        TERN_(NEOPIXEL2_SEPARATE,,adaneo1.setPin(NEOPIXEL2_PIN));
         adaneo1.show();
         adaneo1.setPin(NEOPIXEL_PIN);
       #endif
@@ -133,7 +133,7 @@ extern Marlin_NeoPixel neo;
 
 // Neo pixel channel 2
 #if ENABLED(NEOPIXEL2_SEPARATE)
-  
+
   #if NEOPIXEL2_TYPE == NEO_RGB || NEOPIXEL2_TYPE == NEO_RBG || NEOPIXEL2_TYPE == NEO_GRB || NEOPIXEL2_TYPE == NEO_GBR || NEOPIXEL2_TYPE == NEO_BRG || NEOPIXEL2_TYPE == NEO_BGR
     #define NEOPIXEL2_IS_RGB 1
   #else
@@ -161,7 +161,10 @@ extern Marlin_NeoPixel neo;
     static inline void begin() { adaneo.begin(); }
     static inline void set_pixel_color(const uint16_t n, const uint32_t c) { adaneo.setPixelColor(n, c); }
     static inline void set_brightness(const uint8_t b) { adaneo.setBrightness(b); }
-    static inline void show() { adaneo.show(); }
+    static inline void show() {
+      adaneo.show();
+      adaneo.setPin(NEOPIXEL2_PIN);
+    }
 
     // Accessors
     static inline uint16_t pixels() { return adaneo.numPixels();}

commit 97ec6c1be6f7b3b2e185be9f1637639815acbb1a
Author: Zachary Annand <baconfixation@gmail.com>
Date:   Thu Aug 27 14:18:16 2020 -0500

    Independent Neopixel option (#19115)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 0d9fdefc06..81a0a8b1c6 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -38,10 +38,14 @@
 // Defines
 // ------------------------
 
-#if defined(NEOPIXEL2_TYPE) && NEOPIXEL2_TYPE != NEOPIXEL_TYPE
+#if defined(NEOPIXEL2_TYPE) && NEOPIXEL2_TYPE != NEOPIXEL_TYPE && DISABLED(NEOPIXEL2_SEPARATE)
   #define MULTIPLE_NEOPIXEL_TYPES 1
 #endif
 
+#if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
+  #define CONJOINED_NEOPIXEL 1
+#endif
+
 #if NEOPIXEL_TYPE == NEO_RGB || NEOPIXEL_TYPE == NEO_RBG || NEOPIXEL_TYPE == NEO_GRB || NEOPIXEL_TYPE == NEO_GBR || NEOPIXEL_TYPE == NEO_BRG || NEOPIXEL_TYPE == NEO_BGR
   #define NEOPIXEL_IS_RGB 1
 #else
@@ -61,7 +65,7 @@
 class Marlin_NeoPixel {
 private:
   static Adafruit_NeoPixel adaneo1
-    #if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
+    #if CONJOINED_NEOPIXEL
       , adaneo2
     #endif
   ;
@@ -80,11 +84,7 @@ public:
 
   static inline void begin() {
     adaneo1.begin();
-    #if ENABLED(NEOPIXEL2_INSERIES)
-      adaneo2.begin();
-    #else
-      TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.begin());
-    #endif
+    TERN_(CONJOINED_NEOPIXEL, adaneo2.begin());
   }
 
   static inline void set_pixel_color(const uint16_t n, const uint32_t c) {
@@ -93,23 +93,21 @@ public:
       else adaneo1.setPixelColor(n, c);
     #else
       adaneo1.setPixelColor(n, c);
-      TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setPixelColor(n, c));
+      #if MULTIPLE_NEOPIXEL_TYPES
+        adaneo2.setPixelColor(n, c);
+      #endif
     #endif
   }
 
   static inline void set_brightness(const uint8_t b) {
     adaneo1.setBrightness(b);
-    #if ENABLED(NEOPIXEL2_INSERIES)
-      adaneo2.setBrightness(b);
-    #else
-      TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setBrightness(b));
-    #endif
+    TERN_(CONJOINED_NEOPIXEL, adaneo2.setBrightness(b));
   }
 
   static inline void show() {
     adaneo1.show();
     #if PIN_EXISTS(NEOPIXEL2)
-      #if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
+      #if CONJOINED_NEOPIXEL
         adaneo2.show();
       #else
         adaneo1.setPin(NEOPIXEL2_PIN);
@@ -132,3 +130,47 @@ public:
 };
 
 extern Marlin_NeoPixel neo;
+
+// Neo pixel channel 2
+#if ENABLED(NEOPIXEL2_SEPARATE)
+  
+  #if NEOPIXEL2_TYPE == NEO_RGB || NEOPIXEL2_TYPE == NEO_RBG || NEOPIXEL2_TYPE == NEO_GRB || NEOPIXEL2_TYPE == NEO_GBR || NEOPIXEL2_TYPE == NEO_BRG || NEOPIXEL2_TYPE == NEO_BGR
+    #define NEOPIXEL2_IS_RGB 1
+  #else
+    #define NEOPIXEL2_IS_RGBW 1
+  #endif
+
+  #if NEOPIXEL2_IS_RGB
+    #define NEO2_WHITE 255, 255, 255, 0
+  #else
+    #define NEO2_WHITE 0, 0, 0, 255
+  #endif
+
+  class Marlin_NeoPixel2 {
+  private:
+    static Adafruit_NeoPixel adaneo;
+
+  public:
+    static int8_t neoindex;
+
+    static void init();
+    static void set_color_startup(const uint32_t c);
+
+    static void set_color(const uint32_t c);
+
+    static inline void begin() { adaneo.begin(); }
+    static inline void set_pixel_color(const uint16_t n, const uint32_t c) { adaneo.setPixelColor(n, c); }
+    static inline void set_brightness(const uint8_t b) { adaneo.setBrightness(b); }
+    static inline void show() { adaneo.show(); }
+
+    // Accessors
+    static inline uint16_t pixels() { return adaneo.numPixels();}
+    static inline uint8_t brightness() { return adaneo.getBrightness(); }
+    static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b, uint8_t w) {
+      return adaneo.Color(r, g, b, w);
+    }
+  };
+
+  extern Marlin_NeoPixel2 neo2;
+
+#endif // NEOPIXEL2_SEPARATE

commit c488070859c1995fe957938b1b6302c4eeef1ea3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 23:57:51 2020 -0500

    Minor cleanup w/r/t LEDs

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index c3c8e2fbdc..0d9fdefc06 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -65,17 +65,15 @@ private:
       , adaneo2
     #endif
   ;
-  static int8_t neoindex;
 
 public:
+  static int8_t neoindex;
+
   static void init();
   static void set_color_startup(const uint32_t c);
 
   static void set_color(const uint32_t c);
 
-  FORCE_INLINE static void set_neo_index(const int8_t neoIndex) { neoindex = neoIndex; }
-  FORCE_INLINE static int8_t get_neo_index() { return neoindex; }
-
   #ifdef NEOPIXEL_BKGD_LED_INDEX
     static void set_color_background();
   #endif

commit 638f6f0f0607399bce82123663f5463380f83ce4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 03:14:11 2020 -0500

    Neopixel => NeoPixel

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 0155785e9a..c3c8e2fbdc 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -22,7 +22,7 @@
 #pragma once
 
 /**
- * Neopixel support
+ * NeoPixel support
  */
 
 // ------------------------

commit 5038cddfd54cf4b8484d10e7378fb2acd2b5f2ad
Author: ellensp <ellensp@hotmail.com>
Date:   Sat Aug 15 01:25:45 2020 +1200

    Add option to arrange Neopixel sets in series  (#18992)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 17057498d4..0155785e9a 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -61,7 +61,7 @@
 class Marlin_NeoPixel {
 private:
   static Adafruit_NeoPixel adaneo1
-    #if MULTIPLE_NEOPIXEL_TYPES
+    #if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
       , adaneo2
     #endif
   ;
@@ -82,23 +82,36 @@ public:
 
   static inline void begin() {
     adaneo1.begin();
-    TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.begin());
+    #if ENABLED(NEOPIXEL2_INSERIES)
+      adaneo2.begin();
+    #else
+      TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.begin());
+    #endif
   }
 
   static inline void set_pixel_color(const uint16_t n, const uint32_t c) {
-    adaneo1.setPixelColor(n, c);
-    TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setPixelColor(n, c));
+    #if ENABLED(NEOPIXEL2_INSERIES)
+      if (n >= NEOPIXEL_PIXELS) adaneo2.setPixelColor(n - (NEOPIXEL_PIXELS), c);
+      else adaneo1.setPixelColor(n, c);
+    #else
+      adaneo1.setPixelColor(n, c);
+      TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setPixelColor(n, c));
+    #endif
   }
 
   static inline void set_brightness(const uint8_t b) {
     adaneo1.setBrightness(b);
-    TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setBrightness(b));
+    #if ENABLED(NEOPIXEL2_INSERIES)
+      adaneo2.setBrightness(b);
+    #else
+      TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setBrightness(b));
+    #endif
   }
 
   static inline void show() {
     adaneo1.show();
     #if PIN_EXISTS(NEOPIXEL2)
-      #if MULTIPLE_NEOPIXEL_TYPES
+      #if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
         adaneo2.show();
       #else
         adaneo1.setPin(NEOPIXEL2_PIN);
@@ -113,7 +126,7 @@ public:
   #endif
 
   // Accessors
-  static inline uint16_t pixels() { return adaneo1.numPixels(); }
+  static inline uint16_t pixels() { TERN(NEOPIXEL2_INSERIES, return adaneo1.numPixels() * 2, return adaneo1.numPixels()); }
   static inline uint8_t brightness() { return adaneo1.getBrightness(); }
   static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b, uint8_t w) {
     return adaneo1.Color(r, g, b, w);

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 631e4fa004..17057498d4 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit 91dc74ff16d5edb0d8ab5c809614acad25426553
Author: ellensp <ellensp@hotmail.com>
Date:   Sat Jul 4 09:33:09 2020 +1200

    M150 I to set Neopixel by index (#18490)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 1b1b74fdfe..631e4fa004 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -65,6 +65,7 @@ private:
       , adaneo2
     #endif
   ;
+  static int8_t neoindex;
 
 public:
   static void init();
@@ -72,6 +73,9 @@ public:
 
   static void set_color(const uint32_t c);
 
+  FORCE_INLINE static void set_neo_index(const int8_t neoIndex) { neoindex = neoIndex; }
+  FORCE_INLINE static int8_t get_neo_index() { return neoindex; }
+
   #ifdef NEOPIXEL_BKGD_LED_INDEX
     static void set_color_background();
   #endif

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 11e435b830..1b1b74fdfe 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -38,10 +38,15 @@
 // Defines
 // ------------------------
 
-#define MULTIPLE_NEOPIXEL_TYPES (defined(NEOPIXEL2_TYPE) && (NEOPIXEL2_TYPE != NEOPIXEL_TYPE))
+#if defined(NEOPIXEL2_TYPE) && NEOPIXEL2_TYPE != NEOPIXEL_TYPE
+  #define MULTIPLE_NEOPIXEL_TYPES 1
+#endif
 
-#define NEOPIXEL_IS_RGB  (NEOPIXEL_TYPE == NEO_RGB || NEOPIXEL_TYPE == NEO_RBG || NEOPIXEL_TYPE == NEO_GRB || NEOPIXEL_TYPE == NEO_GBR || NEOPIXEL_TYPE == NEO_BRG || NEOPIXEL_TYPE == NEO_BGR)
-#define NEOPIXEL_IS_RGBW !NEOPIXEL_IS_RGB
+#if NEOPIXEL_TYPE == NEO_RGB || NEOPIXEL_TYPE == NEO_RBG || NEOPIXEL_TYPE == NEO_GRB || NEOPIXEL_TYPE == NEO_GBR || NEOPIXEL_TYPE == NEO_BRG || NEOPIXEL_TYPE == NEO_BGR
+  #define NEOPIXEL_IS_RGB 1
+#else
+  #define NEOPIXEL_IS_RGBW 1
+#endif
 
 #if NEOPIXEL_IS_RGB
   #define NEO_WHITE 255, 255, 255, 0
@@ -73,23 +78,17 @@ public:
 
   static inline void begin() {
     adaneo1.begin();
-    #if MULTIPLE_NEOPIXEL_TYPES
-      adaneo2.begin();
-    #endif
+    TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.begin());
   }
 
   static inline void set_pixel_color(const uint16_t n, const uint32_t c) {
     adaneo1.setPixelColor(n, c);
-    #if MULTIPLE_NEOPIXEL_TYPES
-      adaneo2.setPixelColor(n, c);
-    #endif
+    TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setPixelColor(n, c));
   }
 
   static inline void set_brightness(const uint8_t b) {
     adaneo1.setBrightness(b);
-    #if MULTIPLE_NEOPIXEL_TYPES
-      adaneo2.setBrightness(b);
-    #endif
+    TERN_(MULTIPLE_NEOPIXEL_TYPES, adaneo2.setBrightness(b));
   }
 
   static inline void show() {

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index e0a3d7c389..11e435b830 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 24706aedbdf16be41071ed77228d419f5fb9bd4c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 29 17:36:21 2019 -0500

    Fix Neopixel typos

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index b8c8b12ad6..e0a3d7c389 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -66,11 +66,9 @@ public:
   static void set_color_startup(const uint32_t c);
 
   static void set_color(const uint32_t c);
-  static void set_color_background();
-  //bool set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
 
   #ifdef NEOPIXEL_BKGD_LED_INDEX
-    static void set_pixel_color(const uint16_t n, const uint32_t c);
+    static void set_color_background();
   #endif
 
   static inline void begin() {
@@ -107,6 +105,10 @@ public:
     #endif
   }
 
+  #if 0
+    bool set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
+  #endif
+
   // Accessors
   static inline uint16_t pixels() { return adaneo1.numPixels(); }
   static inline uint8_t brightness() { return adaneo1.getBrightness(); }

commit e5aa45329305be8ac5e277305d52a449a41bfc98
Author: Tim Moore <tim@youngmoores.com>
Date:   Sat Jul 20 21:14:09 2019 -0700

    Add support for 2 Neopixel strips (#14667)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 713300b287..b8c8b12ad6 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -25,11 +25,21 @@
  * Neopixel support
  */
 
+// ------------------------
+// Includes
+// ------------------------
+
 #include "../../inc/MarlinConfig.h"
 
 #include <Adafruit_NeoPixel.h>
 #include <stdint.h>
 
+// ------------------------
+// Defines
+// ------------------------
+
+#define MULTIPLE_NEOPIXEL_TYPES (defined(NEOPIXEL2_TYPE) && (NEOPIXEL2_TYPE != NEOPIXEL_TYPE))
+
 #define NEOPIXEL_IS_RGB  (NEOPIXEL_TYPE == NEO_RGB || NEOPIXEL_TYPE == NEO_RBG || NEOPIXEL_TYPE == NEO_GRB || NEOPIXEL_TYPE == NEO_GBR || NEOPIXEL_TYPE == NEO_BRG || NEOPIXEL_TYPE == NEO_BGR)
 #define NEOPIXEL_IS_RGBW !NEOPIXEL_IS_RGB
 
@@ -39,8 +49,70 @@
   #define NEO_WHITE 0, 0, 0, 255
 #endif
 
-void setup_neopixel();
-void set_neopixel_color(const uint32_t color);
-//bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
+// ------------------------
+// Function prototypes
+// ------------------------
+
+class Marlin_NeoPixel {
+private:
+  static Adafruit_NeoPixel adaneo1
+    #if MULTIPLE_NEOPIXEL_TYPES
+      , adaneo2
+    #endif
+  ;
+
+public:
+  static void init();
+  static void set_color_startup(const uint32_t c);
+
+  static void set_color(const uint32_t c);
+  static void set_color_background();
+  //bool set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
+
+  #ifdef NEOPIXEL_BKGD_LED_INDEX
+    static void set_pixel_color(const uint16_t n, const uint32_t c);
+  #endif
+
+  static inline void begin() {
+    adaneo1.begin();
+    #if MULTIPLE_NEOPIXEL_TYPES
+      adaneo2.begin();
+    #endif
+  }
+
+  static inline void set_pixel_color(const uint16_t n, const uint32_t c) {
+    adaneo1.setPixelColor(n, c);
+    #if MULTIPLE_NEOPIXEL_TYPES
+      adaneo2.setPixelColor(n, c);
+    #endif
+  }
+
+  static inline void set_brightness(const uint8_t b) {
+    adaneo1.setBrightness(b);
+    #if MULTIPLE_NEOPIXEL_TYPES
+      adaneo2.setBrightness(b);
+    #endif
+  }
+
+  static inline void show() {
+    adaneo1.show();
+    #if PIN_EXISTS(NEOPIXEL2)
+      #if MULTIPLE_NEOPIXEL_TYPES
+        adaneo2.show();
+      #else
+        adaneo1.setPin(NEOPIXEL2_PIN);
+        adaneo1.show();
+        adaneo1.setPin(NEOPIXEL_PIN);
+      #endif
+    #endif
+  }
+
+  // Accessors
+  static inline uint16_t pixels() { return adaneo1.numPixels(); }
+  static inline uint8_t brightness() { return adaneo1.getBrightness(); }
+  static inline uint32_t Color(uint8_t r, uint8_t g, uint8_t b, uint8_t w) {
+    return adaneo1.Color(r, g, b, w);
+  }
+};
 
-extern Adafruit_NeoPixel pixels;
+extern Marlin_NeoPixel neo;

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index d1dbedf8ce..713300b287 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index f761877c9a..d1dbedf8ce 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit f5eab912ed6d336f2c37a688a0ec822ed3d42fcc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 4 02:25:55 2018 -0600

    Apply #pragma once, misc cleanup (#12322)
    
    * Apply #pragma once in headers
    * Adjust some thermistors formatting
    * Misc cleanup and formatting

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 9f24b0287a..f761877c9a 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -19,14 +19,12 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 /**
  * Neopixel support
  */
 
-#ifndef __NEOPIXEL_H__
-#define __NEOPIXEL_H__
-
 #include "../../inc/MarlinConfig.h"
 
 #include <Adafruit_NeoPixel.h>
@@ -46,5 +44,3 @@ void set_neopixel_color(const uint32_t color);
 //bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
 
 extern Adafruit_NeoPixel pixels;
-
-#endif // __NEOPIXEL_H__

commit e37dd645488ffc4377b6ec818c1e38e55b5903b7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 28 01:07:10 2017 -0600

    Apply LEDColor, language fixes

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 28ea61d302..9f24b0287a 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -43,7 +43,7 @@
 
 void setup_neopixel();
 void set_neopixel_color(const uint32_t color);
-bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
+//bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
 
 extern Adafruit_NeoPixel pixels;
 

commit cf0f78336b7557f7aca81e841c1e6b74c3f1be07
Author: Tannoo <tannoo@msn.com>
Date:   Thu Nov 9 16:39:01 2017 -0700

    New Feature: LED_CONTROL_MENU

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 2b937f1b87..28ea61d302 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -36,13 +36,14 @@
 #define NEOPIXEL_IS_RGBW !NEOPIXEL_IS_RGB
 
 #if NEOPIXEL_IS_RGB
-  #define NEO_WHITE 255, 255, 255
+  #define NEO_WHITE 255, 255, 255, 0
 #else
   #define NEO_WHITE 0, 0, 0, 255
 #endif
 
 void setup_neopixel();
 void set_neopixel_color(const uint32_t color);
+bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
 
 extern Adafruit_NeoPixel pixels;
 

commit 3ac581eac92d31287580ea6da5357f3d6cd82db5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 25 15:50:36 2017 -0500

    Neopixel changes for parity with 1.1.x

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 265b93d19d..2b937f1b87 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -27,11 +27,22 @@
 #ifndef __NEOPIXEL_H__
 #define __NEOPIXEL_H__
 
+#include "../../inc/MarlinConfig.h"
+
 #include <Adafruit_NeoPixel.h>
 #include <stdint.h>
 
+#define NEOPIXEL_IS_RGB  (NEOPIXEL_TYPE == NEO_RGB || NEOPIXEL_TYPE == NEO_RBG || NEOPIXEL_TYPE == NEO_GRB || NEOPIXEL_TYPE == NEO_GBR || NEOPIXEL_TYPE == NEO_BRG || NEOPIXEL_TYPE == NEO_BGR)
+#define NEOPIXEL_IS_RGBW !NEOPIXEL_IS_RGB
+
+#if NEOPIXEL_IS_RGB
+  #define NEO_WHITE 255, 255, 255
+#else
+  #define NEO_WHITE 0, 0, 0, 255
+#endif
+
 void setup_neopixel();
-bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
+void set_neopixel_color(const uint32_t color);
 
 extern Adafruit_NeoPixel pixels;
 

commit a11e6a1022b8f70be237fad82a9b6ba22b2db7b1
Author: Slawomir Ciunczyk <s.ciunczyk@moye.eu>
Date:   Thu Oct 5 13:45:36 2017 +0200

    Different NEOPIXEL types
    
    Same as #7728 but for 2.0.x,
    Lot of cleanup and remove references in whole code to other "LED files" than leds.h. Now will be much easier to add next drivers/libraries. e.g. FastLED. But bad news, currently FastLED is suporting only RGB devices (no RGBW)

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
index 76ca7fabcc..265b93d19d 100644
--- a/Marlin/src/feature/leds/neopixel.h
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -31,7 +31,7 @@
 #include <stdint.h>
 
 void setup_neopixel();
-bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const bool isSequence);
+bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p);
 
 extern Adafruit_NeoPixel pixels;
 

commit 8fbb833de9309c53abb73dba7d33b76f0068c61a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 8 14:47:47 2017 -0500

    Encapsulate RGB(W) LEDs

diff --git a/Marlin/src/feature/leds/neopixel.h b/Marlin/src/feature/leds/neopixel.h
new file mode 100644
index 0000000000..76ca7fabcc
--- /dev/null
+++ b/Marlin/src/feature/leds/neopixel.h
@@ -0,0 +1,38 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Neopixel support
+ */
+
+#ifndef __NEOPIXEL_H__
+#define __NEOPIXEL_H__
+
+#include <Adafruit_NeoPixel.h>
+#include <stdint.h>
+
+void setup_neopixel();
+bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const bool isSequence);
+
+extern Adafruit_NeoPixel pixels;
+
+#endif // __NEOPIXEL_H__
