commit 401ba6613b1f9079ebd392adc8b0692c1525ab4f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Dec 21 15:25:48 2023 -0600

    üîß Up to 12 PWM fans

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 9eec9d1987..c8edae94f1 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -143,7 +143,7 @@
 // Can also be overridden in Configuration_adv.h
 // If you can afford it, try the 3-frame fan animation!
 // Don't compile in the fan animation with no fan
-#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && BED_OR_CHAMBER) || ALL(STATUS_COMBINE_HEATERS, HAS_HEATED_CHAMBER))
+#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && (HAS_HEATED_BED || HAS_TEMP_CHAMBER)) || ALL(STATUS_COMBINE_HEATERS, HAS_HEATED_CHAMBER))
   #undef STATUS_FAN_FRAMES
 #elif !STATUS_FAN_FRAMES
   #define STATUS_FAN_FRAMES 2
@@ -200,18 +200,22 @@
     #undef STATUS_LOGO_WIDTH
   #endif
 
-  #if !defined(STATUS_HEATERS_X) && ((HAS_HOTEND && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN))
-    #define _STATUS_HEATERS_X(H,S,N) ((LCD_PIXEL_WIDTH - (H * (S + N)) - (_EXTRA_WIDTH) + (STATUS_LOGO_WIDTH)) / 2)
-    #if STATUS_HOTEND1_WIDTH
-      #if HOTENDS > 2
-        #define STATUS_HEATERS_X _STATUS_HEATERS_X(HOTENDS, STATUS_HOTEND1_WIDTH, 6)
+  #ifndef STATUS_HEATERS_X
+    #define _BED_OR_CHAMBER_OR_FAN (HAS_HEATED_BED || HAS_TEMP_CHAMBER || HAS_FAN)
+    #if (HAS_HOTEND && STATUS_LOGO_WIDTH && _BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !_BED_OR_CHAMBER_OR_FAN)
+      #define _STATUS_HEATERS_X(H,S,N) ((LCD_PIXEL_WIDTH - (H * (S + N)) - (_EXTRA_WIDTH) + (STATUS_LOGO_WIDTH)) / 2)
+      #if STATUS_HOTEND1_WIDTH
+        #if HOTENDS > 2
+          #define STATUS_HEATERS_X _STATUS_HEATERS_X(HOTENDS, STATUS_HOTEND1_WIDTH, 6)
+        #else
+          #define STATUS_HEATERS_X _STATUS_HEATERS_X(HOTENDS, STATUS_HOTEND1_WIDTH, 4)
+        #endif
       #else
-        #define STATUS_HEATERS_X _STATUS_HEATERS_X(HOTENDS, STATUS_HOTEND1_WIDTH, 4)
+        #define STATUS_HEATERS_X _STATUS_HEATERS_X(1, STATUS_HEATERS_WIDTH, 4)
       #endif
-    #else
-      #define STATUS_HEATERS_X _STATUS_HEATERS_X(1, STATUS_HEATERS_WIDTH, 4)
     #endif
   #endif
+  #undef _BED_OR_CHAMBER_OR_FAN
 #endif
 
 //

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 8d0ab4efbe..9eec9d1987 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -143,7 +143,7 @@
 // Can also be overridden in Configuration_adv.h
 // If you can afford it, try the 3-frame fan animation!
 // Don't compile in the fan animation with no fan
-#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && BED_OR_CHAMBER) || BOTH(STATUS_COMBINE_HEATERS, HAS_HEATED_CHAMBER))
+#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && BED_OR_CHAMBER) || ALL(STATUS_COMBINE_HEATERS, HAS_HEATED_CHAMBER))
   #undef STATUS_FAN_FRAMES
 #elif !STATUS_FAN_FRAMES
   #define STATUS_FAN_FRAMES 2
@@ -253,7 +253,7 @@
         ((STATUS_CHAMBER_WIDTH || STATUS_FAN_WIDTH  ||  STATUS_BED_WIDTH) && STATUS_HOTEND_BITMAPS == 4)
     #define STATUS_HEATERS_X 5
   #else
-    #if BOTH(STATUS_COMBINE_HEATERS, HAS_HEATED_BED) && HOTENDS <= 4
+    #if ALL(STATUS_COMBINE_HEATERS, HAS_HEATED_BED) && HOTENDS <= 4
       #define STATUS_HEATERS_X 5
     #else
       #define STATUS_HEATERS_X 8 // Like the included bitmaps
@@ -742,22 +742,22 @@
 #if HAS_FAN0 && STATUS_FAN_WIDTH && HOTENDS <= 4 && defined(STATUS_FAN_FRAMES)
   #define DO_DRAW_FAN 1
 #endif
-#if BOTH(HAS_HOTEND, STATUS_HOTEND_ANIM)
+#if ALL(HAS_HOTEND, STATUS_HOTEND_ANIM)
   #define ANIM_HOTEND 1
 #endif
-#if BOTH(DO_DRAW_BED, STATUS_BED_ANIM)
+#if ALL(DO_DRAW_BED, STATUS_BED_ANIM)
   #define ANIM_BED 1
 #endif
-#if BOTH(DO_DRAW_CHAMBER, STATUS_CHAMBER_ANIM)
+#if ALL(DO_DRAW_CHAMBER, STATUS_CHAMBER_ANIM)
   #define ANIM_CHAMBER 1
 #endif
-#if BOTH(DO_DRAW_CUTTER, STATUS_CUTTER_ANIM)
+#if ALL(DO_DRAW_CUTTER, STATUS_CUTTER_ANIM)
   #define ANIM_CUTTER 1
 #endif
-#if BOTH(DO_DRAW_COOLER, STATUS_COOLER_ANIM)
+#if ALL(DO_DRAW_COOLER, STATUS_COOLER_ANIM)
   #define ANIM_COOLER 1
 #endif
-#if BOTH(DO_DRAW_FLOWMETER, STATUS_FLOWMETER_ANIM)
+#if ALL(DO_DRAW_FLOWMETER, STATUS_FLOWMETER_ANIM)
   #define ANIM_FLOWMETER 1
 #endif
 #if ANIM_HOTEND || ANIM_BED || ANIM_CHAMBER || ANIM_CUTTER

commit 0b32c3900f68895d8a454d164e225dbcea608a83
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 22 20:39:53 2022 -0500

    üßë‚Äçüíª Improve STATUS_BED_X

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index f17dd06365..8d0ab4efbe 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -37,6 +37,7 @@
 
   #undef STATUS_HEATERS_X
   #undef STATUS_BED_X
+
   /**
    * Custom _Statusscreen.h files can define:
    * - A custom logo image

commit ad38699c115585134841b479a112f723e17d0b17
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 12 17:08:57 2021 -0500

    üö∏ Better bed position

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index dfbf7b4291..f17dd06365 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -480,7 +480,7 @@
     #endif
 
     #ifndef STATUS_CUTTER_TEXT_X
-      #define STATUS_CUTTER_TEXT_X (STATUS_CUTTER_X -1)
+      #define STATUS_CUTTER_TEXT_X (STATUS_CUTTER_X - 1)
     #endif
 
     #ifndef STATUS_CUTTER_TEXT_Y
@@ -488,12 +488,12 @@
     #endif
 
     static_assert(
-      sizeof(status_cutter_bmp) == (STATUS_CUTTER_BYTEWIDTH) * (STATUS_CUTTER_HEIGHT(0)),
+      sizeof(status_cutter_bmp) == (STATUS_CUTTER_BYTEWIDTH) * STATUS_CUTTER_HEIGHT(0),
       "Status cutter bitmap (status_cutter_bmp) dimensions don't match data."
     );
     #ifdef STATUS_CUTTER_ANIM
       static_assert(
-        sizeof(status_cutter_on_bmp) == (STATUS_CUTTER_BYTEWIDTH) * (STATUS_CUTTER_HEIGHT(1)),
+        sizeof(status_cutter_on_bmp) == (STATUS_CUTTER_BYTEWIDTH) * STATUS_CUTTER_HEIGHT(1),
         "Status cutter bitmap (status_cutter_on_bmp) dimensions don't match data."
       );
     #endif
@@ -530,12 +530,12 @@
   #endif
 
   static_assert(
-    sizeof(status_chamber_bmp) == (STATUS_CHAMBER_BYTEWIDTH) * (STATUS_CHAMBER_HEIGHT(0)),
+    sizeof(status_chamber_bmp) == (STATUS_CHAMBER_BYTEWIDTH) * STATUS_CHAMBER_HEIGHT(0),
     "Status chamber bitmap (status_chamber_bmp) dimensions don't match data."
   );
   #ifdef STATUS_CHAMBER_ANIM
     static_assert(
-      sizeof(status_chamber_on_bmp) == (STATUS_CHAMBER_BYTEWIDTH) * (STATUS_CHAMBER_HEIGHT(1)),
+      sizeof(status_chamber_on_bmp) == (STATUS_CHAMBER_BYTEWIDTH) * STATUS_CHAMBER_HEIGHT(1),
       "Status chamber bitmap (status_chamber_on_bmp) dimensions don't match data."
     );
   #endif
@@ -565,12 +565,12 @@
     #endif
 
     static_assert(
-      sizeof(status_cooler_bmp1) == (STATUS_COOLER_BYTEWIDTH) * (STATUS_COOLER_HEIGHT(0)),
+      sizeof(status_cooler_bmp1) == (STATUS_COOLER_BYTEWIDTH) * STATUS_COOLER_HEIGHT(0),
       "Status cooler bitmap (status_cooler_bmp1) dimensions don't match data."
     );
     #ifdef STATUS_COOLER_ANIM
       static_assert(
-        sizeof(status_cooler_bmp2) == (STATUS_COOLER_BYTEWIDTH) * (STATUS_COOLER_HEIGHT(1)),
+        sizeof(status_cooler_bmp2) == (STATUS_COOLER_BYTEWIDTH) * STATUS_COOLER_HEIGHT(1),
         "Status cooler bitmap (status_cooler_bmp2) dimensions don't match data."
       );
     #endif
@@ -647,7 +647,7 @@
 #if STATUS_BED_WIDTH && !STATUS_HEATERS_WIDTH
 
   #ifndef STATUS_BED_X
-    #define STATUS_BED_X (LCD_PIXEL_WIDTH - (STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_BED_BYTEWIDTH) * 8)
+    #define STATUS_BED_X (LCD_PIXEL_WIDTH - (STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_BED_BYTEWIDTH) * 8 - TERN0(STATUS_HEAT_PERCENT, 4))
   #endif
 
   #ifndef STATUS_BED_HEIGHT
@@ -667,12 +667,12 @@
   #endif
 
   static_assert(
-    sizeof(status_bed_bmp) == (STATUS_BED_BYTEWIDTH) * (STATUS_BED_HEIGHT(0)),
+    sizeof(status_bed_bmp) == (STATUS_BED_BYTEWIDTH) * STATUS_BED_HEIGHT(0),
     "Status bed bitmap (status_bed_bmp) dimensions don't match data."
   );
   #ifdef STATUS_BED_ANIM
     static_assert(
-      sizeof(status_bed_on_bmp) == (STATUS_BED_BYTEWIDTH) * (STATUS_BED_HEIGHT(1)),
+      sizeof(status_bed_on_bmp) == (STATUS_BED_BYTEWIDTH) * STATUS_BED_HEIGHT(1),
       "Status bed bitmap (status_bed_on_bmp) dimensions don't match data."
     );
   #endif

commit 286f6ba0bd2ab4d405fc83d913399130fa063f9a
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sun Jul 18 20:11:24 2021 -0500

    üêõ Fix Ammeter display on DOGM (#22384)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 6aa2bab0da..dfbf7b4291 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -624,7 +624,7 @@
     #define STATUS_AMMETER_X (LCD_PIXEL_WIDTH - (STATUS_AMMETER_BYTEWIDTH + STATUS_FLOWMETER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH + STATUS_COOLER_BYTEWIDTH) * 8)
   #endif
   #ifndef STATUS_AMMETER_HEIGHT
-    #define STATUS_AMMETER_HEIGHT(S) (sizeof(status_ammeter_bmp1) / (STATUS_AMMETER_BYTEWIDTH))
+    #define STATUS_AMMETER_HEIGHT(S) (sizeof(status_ammeter_bmp_mA) / (STATUS_AMMETER_BYTEWIDTH))
   #endif
   #ifndef STATUS_AMMETER_Y
     #define STATUS_AMMETER_Y(S) (18 - STATUS_AMMETER_HEIGHT(S))
@@ -633,8 +633,8 @@
     #define STATUS_AMMETER_TEXT_X (STATUS_AMMETER_X + 7)
   #endif
   static_assert(
-    sizeof(status_ammeter_bmp1) == (STATUS_AMMETER_BYTEWIDTH) * STATUS_AMMETER_HEIGHT(0),
-    "Status ammeter bitmap (status_ammeter_bmp1) dimensions don't match data."
+    sizeof(status_ammeter_bmp_mA) == (STATUS_AMMETER_BYTEWIDTH) * STATUS_AMMETER_HEIGHT(0),
+    "Status ammeter bitmap (status_ammeter_bmp_mA) dimensions don't match data."
   );
 #endif
 

commit d320545066676338d4a0142268931bb66eedfccc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 8 07:51:28 2021 -0500

    üé® Laser Ammeter followup (#22079)
    
    Followup to #21835

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index db0b66777d..6aa2bab0da 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -110,14 +110,13 @@
 //
 // Laser Ammeter
 //
-#if !STATUS_AMMETER_WIDTH && ENABLED(I2C_AMMETER)
-  #include "status/ammeter.h"
-#endif
-#ifndef STATUS_AMMETER_WIDTH
-  #define STATUS_AMMETER_WIDTH 0
-#endif
-#ifndef STATUS_AMMETER_BYTEWIDTH
-  #define STATUS_AMMETER_BYTEWIDTH BW(STATUS_AMMETER_WIDTH)
+#if ENABLED(I2C_AMMETER)
+  #if !STATUS_AMMETER_WIDTH
+    #include "status/ammeter.h"
+  #endif
+  #ifndef STATUS_AMMETER_WIDTH
+    #define STATUS_AMMETER_WIDTH 0
+  #endif
 #endif
 
 //
@@ -614,30 +613,29 @@
   #endif
 #endif
 
-#if ENABLED(I2C_AMMETER)
-  #if STATUS_AMMETER_WIDTH
-
-    #ifndef STATUS_AMMETER_X
-      #define STATUS_AMMETER_X (LCD_PIXEL_WIDTH - (STATUS_AMMETER_BYTEWIDTH + STATUS_FLOWMETER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH + STATUS_COOLER_BYTEWIDTH) * 8)
-    #endif
-
-    #ifndef STATUS_AMMETER_HEIGHT
-      #define STATUS_AMMETER_HEIGHT(S) (sizeof(status_ammeter_bmp1) / (STATUS_AMMETER_BYTEWIDTH))
-    #endif
-
-    #ifndef STATUS_AMMETER_Y
-      #define STATUS_AMMETER_Y(S) (18 - STATUS_AMMETER_HEIGHT(S))
-    #endif
-
-    #ifndef STATUS_AMMETER_TEXT_X
-      #define STATUS_AMMETER_TEXT_X (STATUS_AMMETER_X + 7)
-    #endif
-
-    static_assert(
-      sizeof(status_ammeter_bmp1) == (STATUS_AMMETER_BYTEWIDTH) * STATUS_AMMETER_HEIGHT(0),
-      "Status ammeter bitmap (status_ammeter_bmp1) dimensions don't match data."
-    );
+//
+// I2C Laser Ammeter
+//
+#if ENABLED(I2C_AMMETER) && STATUS_AMMETER_WIDTH
+  #ifndef STATUS_AMMETER_BYTEWIDTH
+    #define STATUS_AMMETER_BYTEWIDTH BW(STATUS_AMMETER_WIDTH)
   #endif
+  #ifndef STATUS_AMMETER_X
+    #define STATUS_AMMETER_X (LCD_PIXEL_WIDTH - (STATUS_AMMETER_BYTEWIDTH + STATUS_FLOWMETER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH + STATUS_COOLER_BYTEWIDTH) * 8)
+  #endif
+  #ifndef STATUS_AMMETER_HEIGHT
+    #define STATUS_AMMETER_HEIGHT(S) (sizeof(status_ammeter_bmp1) / (STATUS_AMMETER_BYTEWIDTH))
+  #endif
+  #ifndef STATUS_AMMETER_Y
+    #define STATUS_AMMETER_Y(S) (18 - STATUS_AMMETER_HEIGHT(S))
+  #endif
+  #ifndef STATUS_AMMETER_TEXT_X
+    #define STATUS_AMMETER_TEXT_X (STATUS_AMMETER_X + 7)
+  #endif
+  static_assert(
+    sizeof(status_ammeter_bmp1) == (STATUS_AMMETER_BYTEWIDTH) * STATUS_AMMETER_HEIGHT(0),
+    "Status ammeter bitmap (status_ammeter_bmp1) dimensions don't match data."
+  );
 #endif
 
 //

commit 002e1d49fe7e39ca82730876f0a384bb60ce4190
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Mon Jun 7 14:15:09 2021 -0500

    Add Laser Based I2C Ammeter Feature (#21835)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 61d22a28ec..db0b66777d 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -107,7 +107,18 @@
   #define STATUS_FLOWMETER_BYTEWIDTH BW(STATUS_FLOWMETER_WIDTH)
 #endif
 
-
+//
+// Laser Ammeter
+//
+#if !STATUS_AMMETER_WIDTH && ENABLED(I2C_AMMETER)
+  #include "status/ammeter.h"
+#endif
+#ifndef STATUS_AMMETER_WIDTH
+  #define STATUS_AMMETER_WIDTH 0
+#endif
+#ifndef STATUS_AMMETER_BYTEWIDTH
+  #define STATUS_AMMETER_BYTEWIDTH BW(STATUS_AMMETER_WIDTH)
+#endif
 
 //
 // Bed
@@ -603,6 +614,32 @@
   #endif
 #endif
 
+#if ENABLED(I2C_AMMETER)
+  #if STATUS_AMMETER_WIDTH
+
+    #ifndef STATUS_AMMETER_X
+      #define STATUS_AMMETER_X (LCD_PIXEL_WIDTH - (STATUS_AMMETER_BYTEWIDTH + STATUS_FLOWMETER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH + STATUS_COOLER_BYTEWIDTH) * 8)
+    #endif
+
+    #ifndef STATUS_AMMETER_HEIGHT
+      #define STATUS_AMMETER_HEIGHT(S) (sizeof(status_ammeter_bmp1) / (STATUS_AMMETER_BYTEWIDTH))
+    #endif
+
+    #ifndef STATUS_AMMETER_Y
+      #define STATUS_AMMETER_Y(S) (18 - STATUS_AMMETER_HEIGHT(S))
+    #endif
+
+    #ifndef STATUS_AMMETER_TEXT_X
+      #define STATUS_AMMETER_TEXT_X (STATUS_AMMETER_X + 7)
+    #endif
+
+    static_assert(
+      sizeof(status_ammeter_bmp1) == (STATUS_AMMETER_BYTEWIDTH) * STATUS_AMMETER_HEIGHT(0),
+      "Status ammeter bitmap (status_ammeter_bmp1) dimensions don't match data."
+    );
+  #endif
+#endif
+
 //
 // Bed Bitmap Properties
 //
@@ -696,6 +733,9 @@
 #if ENABLED(LASER_COOLANT_FLOW_METER)
   #define DO_DRAW_FLOWMETER 1
 #endif
+#if ENABLED(I2C_AMMETER)
+  #define DO_DRAW_AMMETER 1
+#endif
 
 #if HAS_TEMP_CHAMBER && STATUS_CHAMBER_WIDTH && HOTENDS <= 4
   #define DO_DRAW_CHAMBER 1

commit 6bb10b189897dcaef5a6da496dfd4f1631689f1b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Apr 20 00:44:19 2021 -0500

    Changes supporting "Prussia3D" MK3 (#21617)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 6d2c5369dc..61d22a28ec 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -281,7 +281,9 @@
     #define STATUS_HOTEND8_WIDTH STATUS_HOTEND7_WIDTH
   #endif
 
-  constexpr uint8_t status_hotend_width[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_WIDTH, STATUS_HOTEND2_WIDTH, STATUS_HOTEND3_WIDTH, STATUS_HOTEND4_WIDTH, STATUS_HOTEND5_WIDTH, STATUS_HOTEND6_WIDTH, STATUS_HOTEND7_WIDTH, STATUS_HOTEND8_WIDTH);
+  #define _SHNAME(N,T) STATUS_HOTEND##N##_##T,
+
+  constexpr uint8_t status_hotend_width[HOTENDS] = { REPEAT2_S(1, INCREMENT(HOTENDS), _SHNAME, WIDTH) };
   #define STATUS_HOTEND_WIDTH(N) status_hotend_width[N]
 
   #ifndef STATUS_HOTEND1_BYTEWIDTH
@@ -309,7 +311,7 @@
     #define STATUS_HOTEND8_BYTEWIDTH BW(STATUS_HOTEND8_WIDTH)
   #endif
 
-  constexpr uint8_t status_hotend_bytewidth[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_BYTEWIDTH, STATUS_HOTEND2_BYTEWIDTH, STATUS_HOTEND3_BYTEWIDTH, STATUS_HOTEND4_BYTEWIDTH, STATUS_HOTEND5_BYTEWIDTH, STATUS_HOTEND6_BYTEWIDTH, STATUS_HOTEND7_BYTEWIDTH, STATUS_HOTEND8_BYTEWIDTH);
+  constexpr uint8_t status_hotend_bytewidth[HOTENDS] = { REPEAT2_S(1, INCREMENT(HOTENDS), _SHNAME, BYTEWIDTH) };
   #define STATUS_HOTEND_BYTEWIDTH(N) status_hotend_bytewidth[N]
 
   #ifndef STATUS_HOTEND1_X
@@ -339,7 +341,7 @@
       #define STATUS_HOTEND8_X STATUS_HOTEND7_X + STATUS_HEATERS_XSPACE
     #endif
 
-    constexpr uint8_t status_hotend_x[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_X, STATUS_HOTEND2_X, STATUS_HOTEND3_X, STATUS_HOTEND4_X, STATUS_HOTEND5_X, STATUS_HOTEND6_X, STATUS_HOTEND7_X, STATUS_HOTEND8_X);
+    constexpr uint8_t status_hotend_x[HOTENDS] = { REPEAT2_S(1, INCREMENT(HOTENDS), _SHNAME, X) };
     #define STATUS_HOTEND_X(N) status_hotend_x[N]
   #elif HAS_MULTI_HOTEND
     #define STATUS_HOTEND_X(N) ((N) ? STATUS_HOTEND2_X : STATUS_HOTEND1_X)
@@ -370,13 +372,15 @@
       #ifndef STATUS_HOTEND8_TEXT_X
         #define STATUS_HOTEND8_TEXT_X STATUS_HOTEND7_TEXT_X + STATUS_HEATERS_XSPACE
       #endif
-      constexpr uint8_t status_hotend_text_x[] = ARRAY_N(HOTENDS, STATUS_HOTEND1_TEXT_X, STATUS_HOTEND2_TEXT_X, STATUS_HOTEND3_TEXT_X, STATUS_HOTEND4_TEXT_X, STATUS_HOTEND5_TEXT_X, STATUS_HOTEND6_TEXT_X, STATUS_HOTEND7_TEXT_X, STATUS_HOTEND8_TEXT_X);
+      constexpr uint8_t status_hotend_text_x[HOTENDS] = { REPEAT2_S(1, INCREMENT(HOTENDS), _SHNAME, TEXT_X) };
       #define STATUS_HOTEND_TEXT_X(N) status_hotend_text_x[N]
     #else
       #define STATUS_HOTEND_TEXT_X(N) (STATUS_HOTEND1_X + 6 + (N) * (STATUS_HEATERS_XSPACE))
     #endif
   #endif
 
+  #undef _SHNAME
+
   #if STATUS_HOTEND_BITMAPS > 1 && DISABLED(STATUS_HOTEND_NUMBERLESS)
     #define TEST_BITMAP_OFF status_hotend1_a_bmp
     #define TEST_BITMAP_ON  status_hotend1_b_bmp

commit 1e357b3c74b6c2fa0642484f0cfa5efbe32e802d
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Mon Apr 12 17:52:18 2021 -0500

    Tweak cooler / flowmeter icons (#21573)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index f0e37aa249..6d2c5369dc 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -547,7 +547,7 @@
     #endif
 
     #ifndef STATUS_COOLER_TEXT_X
-      #define STATUS_COOLER_TEXT_X (STATUS_COOLER_X + 8)
+      #define STATUS_COOLER_TEXT_X (STATUS_COOLER_X + 12)
     #endif
 
     static_assert(
@@ -583,7 +583,7 @@
     #endif
 
     #ifndef STATUS_FLOWMETER_TEXT_X
-      #define STATUS_FLOWMETER_TEXT_X (STATUS_FLOWMETER_X + 8)
+      #define STATUS_FLOWMETER_TEXT_X (STATUS_FLOWMETER_X + 12)
     #endif
 
     static_assert(

commit 235ba926021709e293f33b7229690406761298e4
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Thu Apr 1 19:29:49 2021 -0500

    Followup to Laser Flow Meter (#21498)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 396b05b084..f0e37aa249 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -97,7 +97,7 @@
 //
 // Laser Flowmeter
 //
-#if !STATUS_FLOWMETER_WIDTH && HAS_FLOWMETER
+#if !STATUS_FLOWMETER_WIDTH && ENABLED(LASER_COOLANT_FLOW_METER)
   #include "status/cooler.h"
 #endif
 #ifndef STATUS_FLOWMETER_WIDTH
@@ -567,7 +567,7 @@
 //
 //  Flowmeter Bitmap Properties
 //
-#if HAS_FLOWMETER
+#if ENABLED(LASER_COOLANT_FLOW_METER)
   #if STATUS_FLOWMETER_WIDTH
 
     #ifndef STATUS_FLOWMETER_X
@@ -689,7 +689,7 @@
 #if HAS_COOLER
   #define DO_DRAW_COOLER 1
 #endif
-#if HAS_FLOWMETER
+#if ENABLED(LASER_COOLANT_FLOW_METER)
   #define DO_DRAW_FLOWMETER 1
 #endif
 

commit ccdbffbf3f599f0860c643647ce6c40f1eb5a4cd
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Mon Mar 29 01:41:56 2021 -0500

    Laser Coolant Flow Meter / Safety Shutdown (#21431)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index d0dc288613..396b05b084 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -77,9 +77,12 @@
 #ifndef STATUS_CUTTER_WIDTH
   #define STATUS_CUTTER_WIDTH 0
 #endif
+  #ifndef STATUS_CUTTER_BYTEWIDTH
+    #define STATUS_CUTTER_BYTEWIDTH BW(STATUS_CUTTER_WIDTH)
+  #endif
 
 //
-// Laser Cooler
+// Laser cooler
 //
 #if !STATUS_COOLER_WIDTH && HAS_COOLER
   #include "status/cooler.h"
@@ -87,6 +90,24 @@
 #ifndef STATUS_COOLER_WIDTH
   #define STATUS_COOLER_WIDTH 0
 #endif
+#ifndef STATUS_COOLER_BYTEWIDTH
+  #define STATUS_COOLER_BYTEWIDTH BW(STATUS_COOLER_WIDTH)
+#endif
+
+//
+// Laser Flowmeter
+//
+#if !STATUS_FLOWMETER_WIDTH && HAS_FLOWMETER
+  #include "status/cooler.h"
+#endif
+#ifndef STATUS_FLOWMETER_WIDTH
+  #define STATUS_FLOWMETER_WIDTH 0
+#endif
+#ifndef STATUS_FLOWMETER_BYTEWIDTH
+  #define STATUS_FLOWMETER_BYTEWIDTH BW(STATUS_FLOWMETER_WIDTH)
+#endif
+
+
 
 //
 // Bed
@@ -425,46 +446,45 @@
 //
 // Cutter Bitmap Properties
 //
-#ifndef STATUS_CUTTER_BYTEWIDTH
-  #define STATUS_CUTTER_BYTEWIDTH BW(STATUS_CUTTER_WIDTH)
-#endif
-#if STATUS_CUTTER_WIDTH
+#if HAS_CUTTER
+  #if STATUS_CUTTER_WIDTH
 
-  #ifndef STATUS_CUTTER_X
-    #define STATUS_CUTTER_X (LCD_PIXEL_WIDTH - (STATUS_CUTTER_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH) * 8)
-  #endif
+    #ifndef STATUS_CUTTER_X
+      #define STATUS_CUTTER_X (LCD_PIXEL_WIDTH - (STATUS_CUTTER_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH) * 8)
+    #endif
 
-  #ifndef STATUS_CUTTER_HEIGHT
-    #ifdef STATUS_CUTTER_ANIM
-      #define STATUS_CUTTER_HEIGHT(S) ((S) ? sizeof(status_cutter_on_bmp) / (STATUS_CUTTER_BYTEWIDTH) : sizeof(status_cutter_bmp) / (STATUS_CUTTER_BYTEWIDTH))
-    #else
-      #define STATUS_CUTTER_HEIGHT(S) (sizeof(status_cutter_bmp) / (STATUS_CUTTER_BYTEWIDTH))
+    #ifndef STATUS_CUTTER_HEIGHT
+      #ifdef STATUS_CUTTER_ANIM
+        #define STATUS_CUTTER_HEIGHT(S) ((S) ? sizeof(status_cutter_on_bmp) / (STATUS_CUTTER_BYTEWIDTH) : sizeof(status_cutter_bmp) / (STATUS_CUTTER_BYTEWIDTH))
+      #else
+        #define STATUS_CUTTER_HEIGHT(S) (sizeof(status_cutter_bmp) / (STATUS_CUTTER_BYTEWIDTH))
+      #endif
     #endif
-  #endif
 
-  #ifndef STATUS_CUTTER_Y
-    #define STATUS_CUTTER_Y(S) 4
-  #endif
+    #ifndef STATUS_CUTTER_Y
+      #define STATUS_CUTTER_Y(S) 4
+    #endif
 
-  #ifndef STATUS_CUTTER_TEXT_X
-    #define STATUS_CUTTER_TEXT_X (STATUS_CUTTER_X -1)
-  #endif
+    #ifndef STATUS_CUTTER_TEXT_X
+      #define STATUS_CUTTER_TEXT_X (STATUS_CUTTER_X -1)
+    #endif
 
-  #ifndef STATUS_CUTTER_TEXT_Y
-    #define STATUS_CUTTER_TEXT_Y 28
-  #endif
+    #ifndef STATUS_CUTTER_TEXT_Y
+      #define STATUS_CUTTER_TEXT_Y 28
+    #endif
 
-  static_assert(
-    sizeof(status_cutter_bmp) == (STATUS_CUTTER_BYTEWIDTH) * (STATUS_CUTTER_HEIGHT(0)),
-    "Status cutter bitmap (status_cutter_bmp) dimensions don't match data."
-  );
-  #ifdef STATUS_CUTTER_ANIM
     static_assert(
-      sizeof(status_cutter_on_bmp) == (STATUS_CUTTER_BYTEWIDTH) * (STATUS_CUTTER_HEIGHT(1)),
-      "Status cutter bitmap (status_cutter_on_bmp) dimensions don't match data."
+      sizeof(status_cutter_bmp) == (STATUS_CUTTER_BYTEWIDTH) * (STATUS_CUTTER_HEIGHT(0)),
+      "Status cutter bitmap (status_cutter_bmp) dimensions don't match data."
     );
-  #endif
+    #ifdef STATUS_CUTTER_ANIM
+      static_assert(
+        sizeof(status_cutter_on_bmp) == (STATUS_CUTTER_BYTEWIDTH) * (STATUS_CUTTER_HEIGHT(1)),
+        "Status cutter bitmap (status_cutter_on_bmp) dimensions don't match data."
+      );
+    #endif
 
+  #endif
 #endif
 
 //
@@ -511,42 +531,72 @@
 //
 // Cooler Bitmap Properties
 //
-#ifndef STATUS_COOLER_BYTEWIDTH
-  #define STATUS_COOLER_BYTEWIDTH BW(STATUS_COOLER_WIDTH)
-#endif
-#if STATUS_COOLER_WIDTH
+#if HAS_COOLER
+  #if STATUS_COOLER_WIDTH
 
-  #ifndef STATUS_COOLER_X
-    #define STATUS_COOLER_X (LCD_PIXEL_WIDTH - (STATUS_COOLER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH) * 8)
-  #endif
+    #ifndef STATUS_COOLER_X
+      #define STATUS_COOLER_X (LCD_PIXEL_WIDTH - (STATUS_COOLER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH) * 8)
+    #endif
+
+    #ifndef STATUS_COOLER_HEIGHT
+      #define STATUS_COOLER_HEIGHT(S) (sizeof(status_cooler_bmp1) / (STATUS_COOLER_BYTEWIDTH))
+    #endif
+
+    #ifndef STATUS_COOLER_Y
+      #define STATUS_COOLER_Y(S) (18 - STATUS_COOLER_HEIGHT(S))
+    #endif
 
-  #ifndef STATUS_COOLER_HEIGHT
+    #ifndef STATUS_COOLER_TEXT_X
+      #define STATUS_COOLER_TEXT_X (STATUS_COOLER_X + 8)
+    #endif
+
+    static_assert(
+      sizeof(status_cooler_bmp1) == (STATUS_COOLER_BYTEWIDTH) * (STATUS_COOLER_HEIGHT(0)),
+      "Status cooler bitmap (status_cooler_bmp1) dimensions don't match data."
+    );
     #ifdef STATUS_COOLER_ANIM
-      #define STATUS_COOLER_HEIGHT(S) ((S) ? sizeof(status_cooler_on_bmp) / (STATUS_COOLER_BYTEWIDTH) : sizeof(status_cooler_bmp) / (STATUS_COOLER_BYTEWIDTH))
-    #else
-      #define STATUS_COOLER_HEIGHT(S) (sizeof(status_cooler_bmp) / (STATUS_COOLER_BYTEWIDTH))
+      static_assert(
+        sizeof(status_cooler_bmp2) == (STATUS_COOLER_BYTEWIDTH) * (STATUS_COOLER_HEIGHT(1)),
+        "Status cooler bitmap (status_cooler_bmp2) dimensions don't match data."
+      );
     #endif
-  #endif
 
-  #ifndef STATUS_COOLER_Y
-    #define STATUS_COOLER_Y(S) (18 - STATUS_COOLER_HEIGHT(S))
   #endif
+#endif
 
-  #ifndef STATUS_COOLER_TEXT_X
-    #define STATUS_COOLER_TEXT_X (STATUS_COOLER_X + 8)
-  #endif
+//
+//  Flowmeter Bitmap Properties
+//
+#if HAS_FLOWMETER
+  #if STATUS_FLOWMETER_WIDTH
+
+    #ifndef STATUS_FLOWMETER_X
+      #define STATUS_FLOWMETER_X (LCD_PIXEL_WIDTH - (STATUS_FLOWMETER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH + STATUS_COOLER_BYTEWIDTH) * 8)
+    #endif
+
+    #ifndef STATUS_FLOWMETER_HEIGHT
+      #define STATUS_FLOWMETER_HEIGHT(S) (sizeof(status_flowmeter_bmp1) / (STATUS_FLOWMETER_BYTEWIDTH))
+    #endif
+
+    #ifndef STATUS_FLOWMETER_Y
+      #define STATUS_FLOWMETER_Y(S) (20 - STATUS_FLOWMETER_HEIGHT(S))
+    #endif
+
+    #ifndef STATUS_FLOWMETER_TEXT_X
+      #define STATUS_FLOWMETER_TEXT_X (STATUS_FLOWMETER_X + 8)
+    #endif
 
-  static_assert(
-    sizeof(status_cooler_bmp) == (STATUS_COOLER_BYTEWIDTH) * (STATUS_COOLER_HEIGHT(0)),
-    "Status cooler bitmap (status_cooler_bmp) dimensions don't match data."
-  );
-  #ifdef STATUS_COOLER_ANIM
     static_assert(
-      sizeof(status_cooler_on_bmp) == (STATUS_COOLER_BYTEWIDTH) * (STATUS_COOLER_HEIGHT(1)),
-      "Status cooler bitmap (status_cooler_on_bmp) dimensions don't match data."
+      sizeof(status_flowmeter_bmp1) == (STATUS_FLOWMETER_BYTEWIDTH) * STATUS_FLOWMETER_HEIGHT(0),
+      "Status flowmeter bitmap (status_flowmeter_bmp1) dimensions don't match data."
     );
+    #ifdef STATUS_COOLER_ANIM
+      static_assert(
+        sizeof(status_flowmeter_bmp2) == (STATUS_FLOWMETER_BYTEWIDTH) * STATUS_FLOWMETER_HEIGHT(1),
+        "Status flowmeter bitmap (status_flowmeter_bmp2) dimensions don't match data."
+      );
+    #endif
   #endif
-
 #endif
 
 //
@@ -639,6 +689,9 @@
 #if HAS_COOLER
   #define DO_DRAW_COOLER 1
 #endif
+#if HAS_FLOWMETER
+  #define DO_DRAW_FLOWMETER 1
+#endif
 
 #if HAS_TEMP_CHAMBER && STATUS_CHAMBER_WIDTH && HOTENDS <= 4
   #define DO_DRAW_CHAMBER 1
@@ -661,6 +714,9 @@
 #if BOTH(DO_DRAW_COOLER, STATUS_COOLER_ANIM)
   #define ANIM_COOLER 1
 #endif
+#if BOTH(DO_DRAW_FLOWMETER, STATUS_FLOWMETER_ANIM)
+  #define ANIM_FLOWMETER 1
+#endif
 #if ANIM_HOTEND || ANIM_BED || ANIM_CHAMBER || ANIM_CUTTER
   #define ANIM_HBCC 1
 #endif

commit b95e548ddbcbc1c088eabc17992d0a06f82ac167
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sat Mar 6 14:13:28 2021 -0600

    Cooler (for Laser) - M143, M193 (#21255)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 61fee3e048..d0dc288613 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -78,6 +78,16 @@
   #define STATUS_CUTTER_WIDTH 0
 #endif
 
+//
+// Laser Cooler
+//
+#if !STATUS_COOLER_WIDTH && HAS_COOLER
+  #include "status/cooler.h"
+#endif
+#ifndef STATUS_COOLER_WIDTH
+  #define STATUS_COOLER_WIDTH 0
+#endif
+
 //
 // Bed
 //
@@ -498,6 +508,47 @@
 
 #endif
 
+//
+// Cooler Bitmap Properties
+//
+#ifndef STATUS_COOLER_BYTEWIDTH
+  #define STATUS_COOLER_BYTEWIDTH BW(STATUS_COOLER_WIDTH)
+#endif
+#if STATUS_COOLER_WIDTH
+
+  #ifndef STATUS_COOLER_X
+    #define STATUS_COOLER_X (LCD_PIXEL_WIDTH - (STATUS_COOLER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH) * 8)
+  #endif
+
+  #ifndef STATUS_COOLER_HEIGHT
+    #ifdef STATUS_COOLER_ANIM
+      #define STATUS_COOLER_HEIGHT(S) ((S) ? sizeof(status_cooler_on_bmp) / (STATUS_COOLER_BYTEWIDTH) : sizeof(status_cooler_bmp) / (STATUS_COOLER_BYTEWIDTH))
+    #else
+      #define STATUS_COOLER_HEIGHT(S) (sizeof(status_cooler_bmp) / (STATUS_COOLER_BYTEWIDTH))
+    #endif
+  #endif
+
+  #ifndef STATUS_COOLER_Y
+    #define STATUS_COOLER_Y(S) (18 - STATUS_COOLER_HEIGHT(S))
+  #endif
+
+  #ifndef STATUS_COOLER_TEXT_X
+    #define STATUS_COOLER_TEXT_X (STATUS_COOLER_X + 8)
+  #endif
+
+  static_assert(
+    sizeof(status_cooler_bmp) == (STATUS_COOLER_BYTEWIDTH) * (STATUS_COOLER_HEIGHT(0)),
+    "Status cooler bitmap (status_cooler_bmp) dimensions don't match data."
+  );
+  #ifdef STATUS_COOLER_ANIM
+    static_assert(
+      sizeof(status_cooler_on_bmp) == (STATUS_COOLER_BYTEWIDTH) * (STATUS_COOLER_HEIGHT(1)),
+      "Status cooler bitmap (status_cooler_on_bmp) dimensions don't match data."
+    );
+  #endif
+
+#endif
+
 //
 // Bed Bitmap Properties
 //
@@ -585,6 +636,10 @@
 #if HAS_CUTTER && !DO_DRAW_BED
   #define DO_DRAW_CUTTER 1
 #endif
+#if HAS_COOLER
+  #define DO_DRAW_COOLER 1
+#endif
+
 #if HAS_TEMP_CHAMBER && STATUS_CHAMBER_WIDTH && HOTENDS <= 4
   #define DO_DRAW_CHAMBER 1
 #endif
@@ -603,6 +658,9 @@
 #if BOTH(DO_DRAW_CUTTER, STATUS_CUTTER_ANIM)
   #define ANIM_CUTTER 1
 #endif
+#if BOTH(DO_DRAW_COOLER, STATUS_COOLER_ANIM)
+  #define ANIM_COOLER 1
+#endif
 #if ANIM_HOTEND || ANIM_BED || ANIM_CHAMBER || ANIM_CUTTER
   #define ANIM_HBCC 1
 #endif

commit 2c983d6c7afc6bd88b900fcfbadbeb1308079fbb
Author: Alexander D. Kanevskiy <kad@kad.name>
Date:   Mon Jan 25 09:53:48 2021 +0200

    Fix sign warning (#20872)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 15578e21d9..61fee3e048 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -193,7 +193,7 @@
     #define STATUS_LOGO_HEIGHT (sizeof(status_logo_bmp) / (STATUS_LOGO_BYTEWIDTH))
   #endif
   #ifndef STATUS_LOGO_Y
-    #define STATUS_LOGO_Y _MAX(0L, (28L - _MIN(28L, STATUS_LOGO_HEIGHT)) / 2L)
+    #define STATUS_LOGO_Y _MAX(0U, (28U - _MIN(28U, STATUS_LOGO_HEIGHT)) / 2U)
   #endif
   static_assert(
     sizeof(status_logo_bmp) == (STATUS_LOGO_BYTEWIDTH) * (STATUS_LOGO_HEIGHT),

commit 83097657d5fffc0051778a72cf39e7ba3a23212b
Author: Alexander D. Kanevskiy <kad@kad.name>
Date:   Mon Nov 2 01:44:46 2020 +0200

    Y-center GLCD status logo, reorganize (#19954)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index e76b7da598..15578e21d9 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -57,805 +57,43 @@
 // Default Status Screen Heater or Hotends bitmaps
 //
 #if !STATUS_HEATERS_WIDTH && !STATUS_HOTEND1_WIDTH
-
   #if ENABLED(STATUS_COMBINE_HEATERS)
-
-    #undef STATUS_HOTEND_ANIM
-    #undef STATUS_BED_ANIM
-    #define STATUS_HEATERS_XSPACE 24
-
-    //
-    // Status Screen Combined Heater bitmaps
-    //
-    #if HAS_HEATED_BED && HOTENDS <= 4
-
-      #if HOTENDS == 0
-
-        #define STATUS_HEATERS_WIDTH 96
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000
-        };
-
-      #elif HOTENDS == 1
-
-        #define STATUS_HEATERS_WIDTH 96
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
-          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
-          B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000,
-          B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000
-        };
-
-      #elif HOTENDS == 2
-
-        #define STATUS_HEATERS_WIDTH 96
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
-          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000,
-          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000
-        };
-
-      #elif HOTENDS == 3
-
-        #define STATUS_HEATERS_WIDTH 96
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000100,B00010000,B01000000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000010,B00001000,B00100000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000010,B00001000,B00100000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000100,B00010000,B01000000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00001000,B00100000,B10000000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00010000,B01000001,B00000000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00001000,B00100000,B10000000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000100,B00010000,B01000000,
-          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00011111,B11111111,B11111000,
-          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00011111,B11111111,B11111000
-        };
-
-      #else // HOTENDS > 3
-
-        #define STATUS_HEATERS_WIDTH 120
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000100,B00010000,B01000000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00000010,B00001000,B00100000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000010,B00001000,B00100000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00000100,B00010000,B01000000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00001000,B00100000,B10000000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00010000,B01000001,B00000000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00010000,B01000001,B00000000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00001000,B00100000,B10000000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000100,B00010000,B01000000,
-          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00011111,B11111111,B11111000,
-          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00011111,B11111111,B11111000
-        };
-
-      #endif // HOTENDS
-
-      #define STATUS_BED_TEXT_X (STATUS_HEATERS_WIDTH - 10)
-
-    #else // !HAS_HEATED_BED || HOTENDS > 3
-
-      #if HOTENDS == 0
-
-        #define STATUS_HEATERS_WIDTH  0
-
-      #elif HOTENDS == 1
-
-        #define STATUS_HEATERS_WIDTH  12
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,
-          B00111111,B11110000,
-          B00111111,B11110000,
-          B00111111,B11110000,
-          B00011111,B11100000,
-          B00011111,B11100000,
-          B00111111,B11110000,
-          B00111111,B11110000,
-          B00111111,B11110000,
-          B00001111,B11000000,
-          B00000111,B10000000,
-          B00000011,B00000000
-        };
-
-      #elif HOTENDS == 2
-
-        #define STATUS_HEATERS_WIDTH  36
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,
-          B00001111,B11000000,B00000000,B00001111,B11000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,
-          B00000011,B00000000,B00000000,B00000011,B00000000
-        };
-
-      #elif HOTENDS == 3
-
-        #define STATUS_HEATERS_WIDTH  60
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,
-          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,
-          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
-        };
-
-      #elif HOTENDS == 4
-
-        #define STATUS_HEATERS_WIDTH  84
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,
-          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,
-          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
-        };
-
-      #else // HOTENDS > 4
-
-        #define STATUS_HEATERS_WIDTH  108
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111000,B01110000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B11110000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00111000,B11110000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00011111,B01100000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00011111,B01100000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00111100,B11110000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,
-          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,
-          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
-        };
-
-      #endif // HOTENDS
-
-    #endif // !HAS_HEATED_BED || HOTENDS > 3
-
-  #else // !STATUS_COMBINE_HEATERS
-
-    //
-    // Status Screen Hotends bitmaps
-    //
+    #include "status/combined.h"
+  #else
     #if HAS_HOTEND
-
-      #define STATUS_HOTEND1_WIDTH  16
-
-      #define MAX_HOTEND_BITMAPS     5
-      #if HOTENDS > MAX_HOTEND_BITMAPS
-        #define STATUS_HOTEND_BITMAPS MAX_HOTEND_BITMAPS
-      #else
-        #define STATUS_HOTEND_BITMAPS HOTENDS
-      #endif
-
-      #if HOTENDS == 1 || ENABLED(STATUS_HOTEND_NUMBERLESS)
-
-        const unsigned char status_hotend_a_bmp[] PROGMEM = {
-          B00011111,B11100000,
-          B00111111,B11110000,
-          B00111111,B11110000,
-          B00111111,B11110000,
-          B00011111,B11100000,
-          B00011111,B11100000,
-          B00111111,B11110000,
-          B00111111,B11110000,
-          B00111111,B11110000,
-          B00001111,B11000000,
-          B00000111,B10000000,
-          B00000011,B00000000
-        };
-
-        #ifdef STATUS_HOTEND_ANIM
-
-          const unsigned char status_hotend_b_bmp[] PROGMEM = {
-            B00011111,B11100000,
-            B00100000,B00010000,
-            B00100000,B00010000,
-            B00100000,B00010000,
-            B00010000,B00100000,
-            B00010000,B00100000,
-            B00100000,B00010000,
-            B00100000,B00010000,
-            B00110000,B00110000,
-            B00001000,B01000000,
-            B00000100,B10000000,
-            B00000011,B00000000
-          };
-
-        #endif
-
-      #elif HOTENDS >= 2
-
-        #ifdef STATUS_HOTEND_ANIM
-
-          const unsigned char status_hotend1_a_bmp[] PROGMEM = {
-            B00011111,B11100000,
-            B00111111,B11110000,
-            B00111110,B11110000,
-            B00111100,B11110000,
-            B00011010,B11100000,
-            B00011110,B11100000,
-            B00111110,B11110000,
-            B00111110,B11110000,
-            B00111110,B11110000,
-            B00001111,B11000000,
-            B00000111,B10000000,
-            B00000011,B00000000
-          };
-
-          const unsigned char status_hotend1_b_bmp[] PROGMEM = {
-            B00011111,B11100000,
-            B00100000,B00010000,
-            B00100001,B00010000,
-            B00100011,B00010000,
-            B00010101,B00100000,
-            B00010001,B00100000,
-            B00100001,B00010000,
-            B00100001,B00010000,
-            B00110001,B00110000,
-            B00001000,B01000000,
-            B00000100,B10000000,
-            B00000011,B00000000
-          };
-
-          const unsigned char status_hotend2_a_bmp[] PROGMEM = {
-            B00011111,B11100000,
-            B00111111,B11110000,
-            B00111100,B11110000,
-            B00111011,B01110000,
-            B00011111,B01100000,
-            B00011110,B11100000,
-            B00111101,B11110000,
-            B00111011,B11110000,
-            B00111000,B01110000,
-            B00001111,B11000000,
-            B00000111,B10000000,
-            B00000011,B00000000
-          };
-
-          const unsigned char status_hotend2_b_bmp[] PROGMEM = {
-            B00011111,B11100000,
-            B00100000,B00010000,
-            B00100011,B00010000,
-            B00100100,B10010000,
-            B00010000,B10100000,
-            B00010001,B00100000,
-            B00100010,B00010000,
-            B00100100,B00010000,
-            B00110111,B10110000,
-            B00001000,B01000000,
-            B00000100,B10000000,
-            B00000011,B00000000
-          };
-
-        #else
-
-          const unsigned char status_hotend1_a_bmp[] PROGMEM = {
-            B00011111,B11100000,
-            B00111110,B11110000,
-            B00111100,B11110000,
-            B00111010,B11110000,
-            B00011110,B11100000,
-            B00011110,B11100000,
-            B00111110,B11110000,
-            B00111110,B11110000,
-            B00111111,B11110000,
-            B00001111,B11000000,
-            B00000111,B10000000,
-            B00000011,B00000000
-          };
-
-          const unsigned char status_hotend2_a_bmp[] PROGMEM = {
-            B00011111,B11100000,
-            B00111100,B11110000,
-            B00111011,B01110000,
-            B00111111,B01110000,
-            B00011110,B11100000,
-            B00011101,B11100000,
-            B00111011,B11110000,
-            B00111000,B01110000,
-            B00111111,B11110000,
-            B00001111,B11000000,
-            B00000111,B10000000,
-            B00000011,B00000000
-          };
-
-        #endif
-
-        #if STATUS_HOTEND_BITMAPS >= 3
-
-          #ifdef STATUS_HOTEND_ANIM
-
-            const unsigned char status_hotend3_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111111,B11110000,
-              B00111100,B11110000,
-              B00111011,B01110000,
-              B00011111,B01100000,
-              B00011100,B11100000,
-              B00111111,B01110000,
-              B00111011,B01110000,
-              B00111100,B11110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
-
-            const unsigned char status_hotend3_b_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00100000,B00010000,
-              B00100011,B00010000,
-              B00100100,B10010000,
-              B00010000,B10100000,
-              B00010011,B00100000,
-              B00100000,B10010000,
-              B00100100,B10010000,
-              B00110011,B00110000,
-              B00001000,B01000000,
-              B00000100,B10000000,
-              B00000011,B00000000
-            };
-
-          #else
-
-            const unsigned char status_hotend3_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111100,B11110000,
-              B00111011,B01110000,
-              B00111111,B01110000,
-              B00011100,B11100000,
-              B00011111,B01100000,
-              B00111011,B01110000,
-              B00111100,B11110000,
-              B00111111,B11110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
-
-          #endif
-
-        #endif
-
-        #if STATUS_HOTEND_BITMAPS >= 4
-
-          #ifdef STATUS_HOTEND_ANIM
-
-            const unsigned char status_hotend4_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111111,B11110000,
-              B00111011,B01110000,
-              B00111011,B01110000,
-              B00011011,B01100000,
-              B00011011,B01100000,
-              B00111000,B00110000,
-              B00111111,B01110000,
-              B00111111,B01110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
-
-            const unsigned char status_hotend4_b_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00100000,B00010000,
-              B00100100,B10010000,
-              B00100100,B10010000,
-              B00010100,B10100000,
-              B00010100,B10100000,
-              B00100111,B11010000,
-              B00100000,B10010000,
-              B00110000,B10110000,
-              B00001000,B01000000,
-              B00000100,B10000000,
-              B00000011,B00000000
-            };
-
-          #else
-
-            const unsigned char status_hotend4_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111011,B01110000,
-              B00111011,B01110000,
-              B00111011,B01110000,
-              B00011011,B01100000,
-              B00011000,B00100000,
-              B00111111,B01110000,
-              B00111111,B01110000,
-              B00111111,B11110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
-
-          #endif
-
-        #endif
-
-        #if STATUS_HOTEND_BITMAPS >= 5
-
-          #ifdef STATUS_HOTEND_ANIM
-
-            const unsigned char status_hotend5_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111111,B11110000,
-              B00111000,B01110000,
-              B00111011,B11110000,
-              B00011000,B11100000,
-              B00011111,B01100000,
-              B00111111,B01110000,
-              B00111011,B01110000,
-              B00111100,B11110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
-
-            const unsigned char status_hotend5_b_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00100000,B00010000,
-              B00100111,B10010000,
-              B00100100,B00010000,
-              B00010111,B00100000,
-              B00010000,B10100000,
-              B00100000,B10010000,
-              B00100100,B10010000,
-              B00110011,B00110000,
-              B00001000,B01000000,
-              B00000100,B10000000,
-              B00000011,B00000000
-            };
-
-          #else
-
-            const unsigned char status_hotend5_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111000,B01110000,
-              B00111011,B11110000,
-              B00111000,B11110000,
-              B00011111,B01100000,
-              B00011111,B01100000,
-              B00111011,B01110000,
-              B00111100,B11110000,
-              B00111111,B11110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
-
-          #endif
-
-        #endif
-
-      #endif
-
+      #include "status/hotend.h"
     #else
       #define STATUS_HEATERS_HEIGHT 20
     #endif
-
   #endif
+#endif
 
-#endif // !STATUS_HEATERS_WIDTH && !STATUS_HOTEND1_WIDTH
-
-// LASER / SPINDLE
+//
+// Laser / Spindle
+//
 #if !STATUS_CUTTER_WIDTH && HAS_CUTTER
-  #define STATUS_CUTTER_WIDTH 24
-  #define STATUS_CUTTER_X 80
-  #if ENABLED(LASER_FEATURE)
-    #ifdef STATUS_CUTTER_ANIM
-      const unsigned char status_cutter_on_bmp[] PROGMEM = {
-        B00000000,B00100100,B00000000,
-        B00000000,B01100110,B00000000,
-        B00000000,B11000011,B00000000,
-        B00000001,B10011001,B10000000,
-        B00000011,B00100100,B11000000,
-        B00000000,B01000010,B00000000,
-        B00000000,B01000010,B00000000,
-        B00000011,B00100100,B11000000,
-        B00000001,B10011001,B10000000,
-        B00000000,B11000011,B00000000,
-        B00000000,B01100110,B00000000,
-        B00000000,B00100100,B00000000
-      };
-      const unsigned char status_cutter_bmp[] PROGMEM = {
-        B00000000,B00100100,B00000000,
-        B00000000,B01100110,B00000000,
-        B00000000,B00000000,B00000000,
-        B00000001,B00000000,B10000000,
-        B00000011,B00000000,B11000000,
-        B00000000,B00011000,B00000000,
-        B00000000,B00011000,B00000000,
-        B00000011,B00000000,B11000000,
-        B00000001,B00000000,B10000000,
-        B00000000,B00000000,B00000000,
-        B00000000,B01100110,B00000000,
-        B00000000,B00100100,B00000000
-      };
-    #else
-      const unsigned char status_cutter_bmp[] PROGMEM = {
-        B00000000,B00100100,B00000000,
-        B00000000,B01100110,B00000000,
-        B00000000,B11000011,B00000000,
-        B00000001,B10000001,B10000000,
-        B00000011,B00000000,B11000000,
-        B00000000,B00000000,B00000000,
-        B00000000,B00000000,B00000000,
-        B00000011,B00000000,B11000000,
-        B00000001,B10000001,B10000000,
-        B00000000,B11000011,B00000000,
-        B00000000,B01100110,B00000000,
-        B00000000,B00100100,B00000000
-      };
-    #endif
-  #else
-    #ifdef STATUS_CUTTER_ANIM
-      const unsigned char status_cutter_on_bmp[] PROGMEM = {
-        B00000001,B11111110,B10000000,
-        B00000000,B11000000,B00000000,
-        B00000001,B10000000,B10000000,
-        B00000001,B00000000,B10000000,
-        B00000001,B11111100,B10000000,
-        B00000000,B11100000,B00000000,
-        B00000001,B11000000,B10000000,
-        B00000000,B10000001,B00000000,
-        B00000000,B01111010,B00000000,
-        B00000000,B00110100,B00000000,
-        B00000000,B00011000,B00000000,
-        B00000000,B00000000,B00000000
-      };
-      const unsigned char status_cutter_bmp[] PROGMEM = {
-        B00000001,B11111110,B10000000,
-        B00000000,B11000000,B00000000,
-        B00000001,B10000000,B10000000,
-        B00000001,B00000000,B10000000,
-        B00000001,B11111100,B10000000,
-        B00000000,B11100000,B00000000,
-        B00000001,B11000000,B10000000,
-        B00000000,B10000001,B00000000,
-        B00000000,B01111010,B00000000,
-        B00000000,B00110100,B00000000,
-        B00000000,B00011000,B00000000,
-        B00000000,B00000000,B00000000
-      };
-    #else
-      const unsigned char status_cutter_bmp[] PROGMEM = {
-        B00000001,B11000010,B10000000,
-        B00000001,B00011100,B10000000,
-        B00000000,B11100001,B00000000,
-        B00000001,B00001110,B10000000,
-        B00000001,B01110000,B10000000,
-        B00000000,B10000111,B10000000,
-        B00000001,B00111111,B10000000,
-        B00000000,B11111111,B00000000,
-        B00000000,B01111110,B00000000,
-        B00000000,B00111100,B00000000,
-        B00000000,B00011000,B00000000,
-        B00000000,B00000000,B00000000
-      };
-    #endif
-  #endif
-#endif // LASER / SPINDLE
+  #include "status/cutter.h"
+#endif
+#ifndef STATUS_CUTTER_WIDTH
+  #define STATUS_CUTTER_WIDTH 0
+#endif
 
 //
-// Default Status Screen Bed bitmaps
+// Bed
 //
 #if !STATUS_BED_WIDTH && HAS_HEATED_BED && DISABLED(STATUS_COMBINE_HEATERS)
-
-  #if ENABLED(STATUS_ALT_BED_BITMAP)
-
-    #define STATUS_BED_ANIM
-    #define STATUS_BED_WIDTH  24
-    #ifndef STATUS_BED_X
-      #define STATUS_BED_X   (LCD_PIXEL_WIDTH - (STATUS_BED_BYTEWIDTH + STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH) * 8)
-    #endif
-    #define STATUS_BED_TEXT_X (STATUS_BED_X + 11)
-
-    const unsigned char status_bed_bmp[] PROGMEM = {
-      B11111111,B11111111,B11000000,
-      B01000000,B00000000,B00100000,
-      B00100000,B00000000,B00010000,
-      B00010000,B00000000,B00001000,
-      B00001000,B00000000,B00000100,
-      B00000100,B00000000,B00000010,
-      B00000011,B11111111,B11111111
-    };
-
-    const unsigned char status_bed_on_bmp[] PROGMEM = {
-      B00000010,B00100010,B00000000,
-      B00000100,B01000100,B00000000,
-      B00000100,B01000100,B00000000,
-      B00000010,B00100010,B00000000,
-      B00000001,B00010001,B00000000,
-      B11111111,B11111111,B11000000,
-      B01000000,B10001000,B10100000,
-      B00100001,B00010001,B00010000,
-      B00010010,B00100010,B00001000,
-      B00001000,B00000000,B00000100,
-      B00000100,B00000000,B00000010,
-      B00000011,B11111111,B11111111
-    };
-
-  #else
-
-    #define STATUS_BED_WIDTH  21
-    #ifndef STATUS_BED_X
-      #define STATUS_BED_X   (LCD_PIXEL_WIDTH - (STATUS_BED_BYTEWIDTH + STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH) * 8)
-    #endif
-
-    #ifdef STATUS_BED_ANIM
-
-      const unsigned char status_bed_bmp[] PROGMEM = {
-        B00011111,B11111111,B11111000,
-        B00011111,B11111111,B11111000
-      };
-
-      const unsigned char status_bed_on_bmp[] PROGMEM = {
-        B00000100,B00010000,B01000000,
-        B00000010,B00001000,B00100000,
-        B00000010,B00001000,B00100000,
-        B00000100,B00010000,B01000000,
-        B00001000,B00100000,B10000000,
-        B00010000,B01000001,B00000000,
-        B00010000,B01000001,B00000000,
-        B00001000,B00100000,B10000000,
-        B00000100,B00010000,B01000000,
-        B00000000,B00000000,B00000000,
-        B00011111,B11111111,B11111000,
-        B00011111,B11111111,B11111000
-      };
-
-    #else
-
-      const unsigned char status_bed_bmp[] PROGMEM = {
-        B00000100,B00010000,B01000000,
-        B00000010,B00001000,B00100000,
-        B00000010,B00001000,B00100000,
-        B00000100,B00010000,B01000000,
-        B00001000,B00100000,B10000000,
-        B00010000,B01000001,B00000000,
-        B00010000,B01000001,B00000000,
-        B00001000,B00100000,B10000000,
-        B00000100,B00010000,B01000000,
-        B00000000,B00000000,B00000000,
-        B00011111,B11111111,B11111000,
-        B00011111,B11111111,B11111000
-      };
-
-    #endif
-
-  #endif
+  #include "status/bed.h"
 #endif
-
 #ifndef STATUS_BED_WIDTH
   #define STATUS_BED_WIDTH 0
 #endif
 
+//
+// Chamber
+//
 #if !STATUS_CHAMBER_WIDTH && HAS_TEMP_CHAMBER && ((HOTENDS <= 4 && !HAS_HEATED_BED) || (HOTENDS <= 3 && HAS_HEATED_BED))
-  #define STATUS_CHAMBER_WIDTH 21
-  #if STATUS_HEATERS_WIDTH
-    #if ENABLED(STATUS_COMBINE_HEATERS)
-      #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - 2 - (STATUS_CHAMBER_BYTEWIDTH) * 8)
-    #elif HAS_FAN0 && HAS_HEATED_BED && HOTENDS <= 2
-      #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - 2 - (STATUS_HEATERS_BYTEWIDTH - STATUS_CHAMBER_BYTEWIDTH) * 8)
-    #elif HAS_FAN0 && !HAS_HEATED_BED
-      #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - (STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH) * 8)
-    #else
-      #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - (STATUS_CHAMBER_BYTEWIDTH) * 8)
-    #endif
-  #endif
-
-  #ifdef STATUS_CHAMBER_ANIM
-
-    const unsigned char status_chamber_bmp[] PROGMEM = {
-      B00011111,B11111111,B11111000,
-      B00010000,B00000000,B00001000,
-      B00010000,B00000000,B00001000,
-      B00010000,B00000000,B00001000,
-      B00010000,B00000000,B00001000,
-      B00010000,B00000000,B00001000,
-      B00010000,B00000000,B00001000,
-      B00010000,B00000000,B00001000,
-      B00010000,B00000000,B00001000,
-      B00010000,B00000000,B00001000,
-      B00011111,B11111111,B11111000,
-      B00011111,B11111111,B11111000
-    };
-    const unsigned char status_chamber_on_bmp[] PROGMEM = {
-      B00011111,B11111111,B11111000,
-      B00010000,B00000000,B00001000,
-      B00010000,B10000100,B00001000,
-      B00010000,B01000010,B00001000,
-      B00010000,B01000010,B00001000,
-      B00010000,B10000100,B00001000,
-      B00010001,B00001000,B00001000,
-      B00010001,B00001000,B00001000,
-      B00010000,B10000100,B00001000,
-      B00010000,B00000000,B00001000,
-      B00011111,B11111111,B11111000,
-      B00011111,B11111111,B11111000
-    };
-
-  #else
-
-    const unsigned char status_chamber_bmp[] PROGMEM = {
-      B00011111,B11111111,B11111000,
-      B00010000,B00000000,B00001000,
-      B00010000,B10000100,B00001000,
-      B00010000,B01000010,B00001000,
-      B00010000,B01000010,B00001000,
-      B00010000,B10000100,B00001000,
-      B00010001,B00001000,B00001000,
-      B00010001,B00001000,B00001000,
-      B00010000,B10000100,B00001000,
-      B00010000,B00000000,B00001000,
-      B00011111,B11111111,B11111000,
-      B00011111,B11111111,B11111000
-    };
-
-  #endif
+  #include "status/chamber.h"
 #endif
-
 #ifndef STATUS_CHAMBER_WIDTH
   #define STATUS_CHAMBER_WIDTH 0
 #endif
@@ -881,427 +119,7 @@
 // Provide default Fan Bitmaps
 //
 #if !STATUS_FAN_WIDTH && STATUS_FAN_FRAMES > 0
-
-  // Provide a fan animation if none exists
-
-  #if STATUS_FAN_FRAMES <= 2
-
-    #define STATUS_FAN_Y      2
-    #define STATUS_FAN_WIDTH 20
-
-    #if ENABLED(STATUS_ALT_FAN_BITMAP)
-
-      const unsigned char status_fan0_bmp[] PROGMEM = {
-        B00000001,B11111110,B00000000,
-        B00000110,B00000001,B10000000,
-        B00001000,B11111100,B01000000,
-        B00010000,B11111100,B00100000,
-        B00010000,B01111000,B00100000,
-        B00100000,B00110000,B00010000,
-        B00101100,B00000000,B11010000,
-        B00101110,B00110001,B11010000,
-        B00101111,B01111011,B11010000,
-        B00101111,B01111011,B11010000,
-        B00101110,B00110001,B11010000,
-        B00101100,B00000000,B11010000,
-        B00100000,B00110000,B00010000,
-        B00010000,B01111000,B00100000,
-        B00010000,B11111100,B00100000,
-        B00001000,B11111100,B01000000,
-        B00000110,B00000001,B10000000,
-        B00000001,B11111110,B00000000
-      };
-
-      #if STATUS_FAN_FRAMES == 2
-        const unsigned char status_fan1_bmp[] PROGMEM = {
-          B00000001,B11111110,B00000000,
-          B00000110,B00000001,B10000000,
-          B00001001,B10000110,B01000000,
-          B00010011,B10000111,B00100000,
-          B00010111,B10000111,B10100000,
-          B00101111,B10000111,B11010000,
-          B00101111,B00000011,B11010000,
-          B00100000,B00110000,B00010000,
-          B00100000,B01111000,B00010000,
-          B00100000,B01111000,B00010000,
-          B00100000,B00110000,B00010000,
-          B00101111,B00000011,B11010000,
-          B00101111,B10000111,B11010000,
-          B00010111,B10000111,B10100000,
-          B00010011,B10000111,B00100000,
-          B00001001,B10000110,B01000000,
-          B00000110,B00000001,B10000000,
-          B00000001,B11111110,B00000000
-        };
-      #endif
-
-    #else // !STATUS_ALT_FAN_BITMAP
-
-      const unsigned char status_fan0_bmp[] PROGMEM = {
-        B00111111,B11111111,B11110000,
-        B00111000,B00000000,B01110000,
-        B00110000,B11111100,B00110000,
-        B00100000,B11111100,B00010000,
-        B00100000,B01111000,B00010000,
-        B00100000,B00110000,B00010000,
-        B00101100,B00000000,B11010000,
-        B00101110,B00110001,B11010000,
-        B00101111,B01111011,B11010000,
-        B00101111,B01111011,B11010000,
-        B00101110,B00110001,B11010000,
-        B00101100,B00000000,B11010000,
-        B00100000,B00110000,B00010000,
-        B00100000,B01111000,B00010000,
-        B00100000,B11111100,B00010000,
-        B00110000,B11111100,B00110000,
-        B00111000,B00000000,B01110000,
-        B00111111,B11111111,B11110000
-      };
-
-      #if STATUS_FAN_FRAMES == 2
-        const unsigned char status_fan1_bmp[] PROGMEM = {
-          B00111111,B11111111,B11110000,
-          B00111000,B00000000,B01110000,
-          B00110001,B10000110,B00110000,
-          B00100011,B10000111,B00010000,
-          B00100111,B10000111,B10010000,
-          B00101111,B10000111,B11010000,
-          B00101111,B00000011,B11010000,
-          B00100000,B00110000,B00010000,
-          B00100000,B01111000,B00010000,
-          B00100000,B01111000,B00010000,
-          B00100000,B00110000,B00010000,
-          B00101111,B00000011,B11010000,
-          B00101111,B10000111,B11010000,
-          B00100111,B10000111,B10010000,
-          B00100011,B10000111,B00010000,
-          B00110001,B10000110,B00110000,
-          B00111000,B00000000,B01110000,
-          B00111111,B11111111,B11110000
-        };
-      #endif
-
-    #endif // !STATUS_ALT_FAN_BITMAP
-
-  #elif STATUS_FAN_FRAMES == 3
-
-    #define STATUS_FAN_WIDTH 20
-
-    #if ENABLED(STATUS_ALT_FAN_BITMAP)
-
-      const unsigned char status_fan0_bmp[] PROGMEM = {
-        B00000001,B11111111,B00000000,
-        B00000110,B00000000,B11000000,
-        B00001001,B00000001,B00100000,
-        B00010111,B10000011,B11010000,
-        B00010111,B10000011,B11010000,
-        B00101111,B11000111,B11101000,
-        B00100111,B11000111,B11001000,
-        B00100001,B11111111,B00001000,
-        B00100000,B01111100,B00001000,
-        B00100000,B01111100,B00001000,
-        B00100000,B01111100,B00001000,
-        B00100001,B11111111,B00001000,
-        B00100111,B11000111,B11001000,
-        B00101111,B11000111,B11101000,
-        B00010111,B10000011,B11010000,
-        B00010111,B10000011,B11010000,
-        B00001001,B00000001,B00100000,
-        B00000110,B00000000,B11000000,
-        B00000001,B11111111,B00000000
-      };
-      const unsigned char status_fan1_bmp[] PROGMEM = {
-        B00000001,B11111111,B00000000,
-        B00000110,B00110000,B11000000,
-        B00001001,B11110000,B00100000,
-        B00010001,B11110000,B00010000,
-        B00010000,B11110000,B00010000,
-        B00100000,B11110000,B01101000,
-        B00100000,B00110001,B11101000,
-        B00100000,B00111001,B11101000,
-        B00100000,B01111111,B11111000,
-        B00111111,B11111111,B11111000,
-        B00111111,B11111100,B00001000,
-        B00101111,B00111000,B00001000,
-        B00101110,B00011000,B00001000,
-        B00101100,B00011110,B00001000,
-        B00010000,B00011110,B00010000,
-        B00010000,B00011111,B00010000,
-        B00001000,B00011111,B00100000,
-        B00000110,B00011000,B11000000,
-        B00000001,B11111111,B00000000
-      };
-      const unsigned char status_fan2_bmp[] PROGMEM = {
-        B00000001,B11111111,B00000000,
-        B00000110,B00011000,B11000000,
-        B00001000,B00011111,B00100000,
-        B00010000,B00011111,B10010000,
-        B00010100,B00011111,B00010000,
-        B00101110,B00011110,B00001000,
-        B00101111,B00011100,B00001000,
-        B00101111,B10111000,B00001000,
-        B00111111,B11111100,B00001000,
-        B00111111,B11111111,B11111000,
-        B00100000,B01111111,B11111000,
-        B00100000,B00111011,B11101000,
-        B00100000,B01110001,B11101000,
-        B00100000,B11110000,B11101000,
-        B00010001,B11110000,B01010000,
-        B00010011,B11110000,B00010000,
-        B00001001,B11110000,B00100000,
-        B00000110,B00110000,B11000000,
-        B00000001,B11111111,B00000000
-      };
-
-    #else // !STATUS_ALT_FAN_BITMAP
-
-      const unsigned char status_fan0_bmp[] PROGMEM = {
-        B00111111,B11111111,B11111000,
-        B00111110,B00000000,B11111000,
-        B00111001,B00000001,B00111000,
-        B00110111,B10000011,B11011000,
-        B00110111,B10000011,B11011000,
-        B00101111,B11000111,B11101000,
-        B00100111,B11000111,B11001000,
-        B00100001,B11111111,B00001000,
-        B00100000,B01111100,B00001000,
-        B00100000,B01111100,B00001000,
-        B00100000,B01111100,B00001000,
-        B00100001,B11111111,B00001000,
-        B00100111,B11000111,B11001000,
-        B00101111,B11000111,B11101000,
-        B00110111,B10000011,B11011000,
-        B00110111,B10000011,B11011000,
-        B00111001,B00000001,B00111000,
-        B00111110,B00000000,B11111000,
-        B00111111,B11111111,B11111000
-      };
-      const unsigned char status_fan1_bmp[] PROGMEM = {
-        B00111111,B11111111,B11111000,
-        B00111110,B00110000,B11111000,
-        B00111001,B11110000,B00111000,
-        B00110001,B11110000,B00011000,
-        B00110000,B11110000,B00011000,
-        B00100000,B11110000,B01101000,
-        B00100000,B00110001,B11101000,
-        B00100000,B00111001,B11101000,
-        B00100000,B01111111,B11111000,
-        B00111111,B11111111,B11111000,
-        B00111111,B11111100,B00001000,
-        B00101111,B00111000,B00001000,
-        B00101110,B00011000,B00001000,
-        B00101100,B00011110,B00001000,
-        B00110000,B00011110,B00011000,
-        B00110000,B00011111,B00011000,
-        B00111000,B00011111,B00111000,
-        B00111110,B00011000,B11111000,
-        B00111111,B11111111,B11111000
-      };
-      const unsigned char status_fan2_bmp[] PROGMEM = {
-        B00111111,B11111111,B11111000,
-        B00111110,B00011000,B11111000,
-        B00111000,B00011111,B00111000,
-        B00110000,B00011111,B10011000,
-        B00110100,B00011111,B00011000,
-        B00101110,B00011110,B00001000,
-        B00101111,B00011100,B00001000,
-        B00101111,B10111000,B00001000,
-        B00111111,B11111100,B00001000,
-        B00111111,B11111111,B11111000,
-        B00100000,B01111111,B11111000,
-        B00100000,B00111011,B11101000,
-        B00100000,B01110001,B11101000,
-        B00100000,B11110000,B11101000,
-        B00110001,B11110000,B01011000,
-        B00110011,B11110000,B00011000,
-        B00111001,B11110000,B00111000,
-        B00111110,B00110000,B11111000,
-        B00111111,B11111111,B11111000
-      };
-
-    #endif // !STATUS_ALT_FAN_BITMAP
-
-  #elif STATUS_FAN_FRAMES == 4
-
-    #define STATUS_FAN_WIDTH 20
-
-    #if ENABLED(STATUS_ALT_FAN_BITMAP)
-
-      const unsigned char status_fan0_bmp[] PROGMEM = {
-        B00000001,B11111111,B00000000,
-        B00000110,B00000000,B11000000,
-        B00001000,B00111111,B00100000,
-        B00010000,B01111110,B00010000,
-        B00010000,B01111100,B00010000,
-        B00101000,B01111100,B00001000,
-        B00101100,B00111000,B00001000,
-        B00101111,B00111001,B11001000,
-        B00101111,B11111111,B11101000,
-        B00101111,B11000111,B11101000,
-        B00101111,B11111111,B11101000,
-        B00100111,B00111001,B11101000,
-        B00100000,B00111000,B01101000,
-        B00100000,B01111100,B00101000,
-        B00010000,B01111100,B00010000,
-        B00010000,B11111100,B00010000,
-        B00001001,B11111000,B00100000,
-        B00000110,B00000000,B11000000,
-        B00000001,B11111111,B00000000
-      };
-      const unsigned char status_fan1_bmp[] PROGMEM = {
-        B00000001,B11111111,B00000000,
-        B00000110,B00000000,B11000000,
-        B00001000,B00001111,B00100000,
-        B00010100,B00011111,B11010000,
-        B00010110,B00011111,B10010000,
-        B00101111,B00011111,B00001000,
-        B00101111,B10011110,B00001000,
-        B00101111,B11111100,B00001000,
-        B00101111,B11011100,B00001000,
-        B00100111,B11101111,B11001000,
-        B00100000,B01110111,B11101000,
-        B00100000,B01111111,B11101000,
-        B00100000,B11110011,B11101000,
-        B00100001,B11110001,B11101000,
-        B00010011,B11110000,B11010000,
-        B00010111,B11110000,B01010000,
-        B00001001,B11100000,B00100000,
-        B00000110,B00000000,B11000000,
-        B00000001,B11111111,B00000000
-      };
-      const unsigned char status_fan2_bmp[] PROGMEM = {
-        B00000001,B11111111,B00000000,
-        B00000110,B10000000,B11000000,
-        B00001001,B10000000,B00100000,
-        B00010111,B10000001,B11010000,
-        B00010111,B11000011,B11010000,
-        B00100111,B11000111,B11101000,
-        B00100011,B11000111,B11111000,
-        B00100001,B11111111,B10001000,
-        B00100000,B01101100,B00001000,
-        B00100000,B01101100,B00001000,
-        B00100000,B01101100,B00001000,
-        B00100011,B11111111,B00001000,
-        B00111111,B11000111,B10001000,
-        B00101111,B11000111,B11001000,
-        B00010111,B10000111,B11010000,
-        B00010111,B00000011,B11010000,
-        B00001000,B00000011,B00100000,
-        B00000110,B00000010,B11000000,
-        B00000001,B11111111,B00000000
-      };
-      const unsigned char status_fan3_bmp[] PROGMEM = {
-        B00000001,B11111111,B00000000,
-        B00000110,B00000000,B11000000,
-        B00001001,B11110000,B00100000,
-        B00010001,B11100000,B00010000,
-        B00010001,B11100000,B00010000,
-        B00100001,B11100001,B11101000,
-        B00100000,B11110011,B11101000,
-        B00100000,B01111111,B11101000,
-        B00100000,B01110111,B11101000,
-        B00101000,B11101110,B00101000,
-        B00101111,B11011100,B00001000,
-        B00101111,B11111100,B00001000,
-        B00101111,B10011110,B00001000,
-        B00101111,B00001111,B00001000,
-        B00010000,B00001111,B00010000,
-        B00010000,B00001111,B00010000,
-        B00001000,B00011111,B00100000,
-        B00000110,B00000000,B11000000,
-        B00000001,B11111111,B00000000
-      };
-
-    #else // !STATUS_ALT_FAN_BITMAP
-
-      const unsigned char status_fan0_bmp[] PROGMEM = {
-        B00111111,B11111111,B11111000,
-        B00111110,B00000000,B11111000,
-        B00111000,B00111111,B00111000,
-        B00110000,B01111110,B00011000,
-        B00110000,B01111100,B00011000,
-        B00101000,B01111100,B00001000,
-        B00101100,B00111000,B00001000,
-        B00101111,B00111001,B11001000,
-        B00101111,B11111111,B11101000,
-        B00101111,B11000111,B11101000,
-        B00101111,B11111111,B11101000,
-        B00100111,B00111001,B11101000,
-        B00100000,B00111000,B01101000,
-        B00100000,B01111100,B00101000,
-        B00110000,B01111100,B00011000,
-        B00110000,B11111100,B00011000,
-        B00111001,B11111000,B00111000,
-        B00111110,B00000000,B11111000,
-        B00111111,B11111111,B11111000
-      };
-      const unsigned char status_fan1_bmp[] PROGMEM = {
-        B00111111,B11111111,B11111000,
-        B00111110,B00000000,B11111000,
-        B00111000,B00001111,B00111000,
-        B00110100,B00011111,B11011000,
-        B00110110,B00011111,B10011000,
-        B00101111,B00011111,B00001000,
-        B00101111,B10011110,B00001000,
-        B00101111,B11111100,B00001000,
-        B00101111,B11011100,B00001000,
-        B00100111,B11101111,B11001000,
-        B00100000,B01110111,B11101000,
-        B00100000,B01111111,B11101000,
-        B00100000,B11110011,B11101000,
-        B00100001,B11110001,B11101000,
-        B00110011,B11110000,B11011000,
-        B00110111,B11110000,B01011000,
-        B00111001,B11100000,B00111000,
-        B00111110,B00000000,B11111000,
-        B00111111,B11111111,B11111000
-      };
-      const unsigned char status_fan2_bmp[] PROGMEM = {
-        B00111111,B11111111,B11111000,
-        B00111110,B10000000,B11111000,
-        B00111001,B10000000,B00111000,
-        B00110111,B10000001,B11011000,
-        B00110111,B11000011,B11011000,
-        B00100111,B11000111,B11101000,
-        B00100011,B11000111,B11111000,
-        B00100001,B11111111,B10001000,
-        B00100000,B01101100,B00001000,
-        B00100000,B01101100,B00001000,
-        B00100000,B01101100,B00001000,
-        B00100011,B11111111,B00001000,
-        B00111111,B11000111,B10001000,
-        B00101111,B11000111,B11001000,
-        B00110111,B10000111,B11011000,
-        B00110111,B00000011,B11011000,
-        B00111000,B00000011,B00111000,
-        B00111110,B00000010,B11111000,
-        B00111111,B11111111,B11111000
-      };
-      const unsigned char status_fan3_bmp[] PROGMEM = {
-        B00111111,B11111111,B11111000,
-        B00111110,B00000000,B11111000,
-        B00111001,B11110000,B00111000,
-        B00110001,B11100000,B00011000,
-        B00110001,B11100000,B00011000,
-        B00100001,B11100001,B11101000,
-        B00100000,B11110011,B11101000,
-        B00100000,B01111111,B11101000,
-        B00100000,B01110111,B11101000,
-        B00101000,B11101110,B00101000,
-        B00101111,B11011100,B00001000,
-        B00101111,B11111100,B00001000,
-        B00101111,B10011110,B00001000,
-        B00101111,B00001111,B00001000,
-        B00110000,B00001111,B00011000,
-        B00110000,B00001111,B00011000,
-        B00111000,B00011111,B00111000,
-        B00111110,B00000000,B11111000,
-        B00111111,B11111111,B11111000
-      };
-
-    #endif // !STATUS_ALT_FAN_BITMAP
-
-  #endif
+  #include "status/fan.h"
 #else
   #undef STATUS_FAN_FRAMES
   #define STATUS_FAN_WIDTH 0
@@ -1325,7 +143,6 @@
 #endif
 
 #if ENABLED(CUSTOM_STATUS_SCREEN_IMAGE)
-
   //
   // Disable the logo bitmap if insufficient space
   //
@@ -1341,7 +158,7 @@
     #undef STATUS_LOGO_WIDTH
   #endif
 
-  #if !defined(STATUS_HEATERS_X) && ((HAS_MULTI_HOTEND && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN))
+  #if !defined(STATUS_HEATERS_X) && ((HAS_HOTEND && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN))
     #define _STATUS_HEATERS_X(H,S,N) ((LCD_PIXEL_WIDTH - (H * (S + N)) - (_EXTRA_WIDTH) + (STATUS_LOGO_WIDTH)) / 2)
     #if STATUS_HOTEND1_WIDTH
       #if HOTENDS > 2
@@ -1353,7 +170,6 @@
       #define STATUS_HEATERS_X _STATUS_HEATERS_X(1, STATUS_HEATERS_WIDTH, 4)
     #endif
   #endif
-
 #endif
 
 //
@@ -1367,14 +183,18 @@
 #endif
 #if STATUS_LOGO_WIDTH
   #ifndef STATUS_LOGO_X
-    #define STATUS_LOGO_X 0
-  #endif
-  #ifndef STATUS_LOGO_Y
-    #define STATUS_LOGO_Y _MIN(0U, (20 - (STATUS_LOGO_HEIGHT)) / 2)
+    #ifdef STATUS_HEATERS_X
+      #define STATUS_LOGO_X ((STATUS_HEATERS_X - (STATUS_LOGO_WIDTH) - 1) / 2)
+    #else
+      #define STATUS_LOGO_X 0
+    #endif
   #endif
   #ifndef STATUS_LOGO_HEIGHT
     #define STATUS_LOGO_HEIGHT (sizeof(status_logo_bmp) / (STATUS_LOGO_BYTEWIDTH))
   #endif
+  #ifndef STATUS_LOGO_Y
+    #define STATUS_LOGO_Y _MAX(0L, (28L - _MIN(28L, STATUS_LOGO_HEIGHT)) / 2L)
+  #endif
   static_assert(
     sizeof(status_logo_bmp) == (STATUS_LOGO_BYTEWIDTH) * (STATUS_LOGO_HEIGHT),
     "Status logo bitmap (status_logo_bmp) dimensions don't match data."

commit eaf6777a6643a6fab23ceaaa4699cb2466ea6b83
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 16 19:36:25 2020 -0500

    Rename ultralcd => marlinui

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index c6ad566cff..e76b7da598 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -29,7 +29,7 @@
  */
 
 #include "../../inc/MarlinConfig.h"
-#include "ultralcd_DOGM.h"
+#include "marlinui_DOGM.h"
 
 #define BW(N) ((N + 7) / 8)
 

commit c762b7c91b03415d37bbb96c5b2b6b8308ee3ba8
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Oct 11 17:06:57 2020 -0700

    Fix various errors, warnings in example config builds (#19686)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 70802f905e..c6ad566cff 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1341,7 +1341,7 @@
     #undef STATUS_LOGO_WIDTH
   #endif
 
-  #if (HAS_MULTI_HOTEND && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN)
+  #if !defined(STATUS_HEATERS_X) && ((HAS_MULTI_HOTEND && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN))
     #define _STATUS_HEATERS_X(H,S,N) ((LCD_PIXEL_WIDTH - (H * (S + N)) - (_EXTRA_WIDTH) + (STATUS_LOGO_WIDTH)) / 2)
     #if STATUS_HOTEND1_WIDTH
       #if HOTENDS > 2

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 8bf37fcd02..70802f905e 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit 21cc924b75c037d87152ad57ec22cde8ada9fa8b
Author: ellensp <ellensp@hotmail.com>
Date:   Wed Jul 1 18:10:46 2020 +1200

    Fix missing parenthesis (#18473)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index e34e098dfa..8bf37fcd02 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1370,7 +1370,7 @@
     #define STATUS_LOGO_X 0
   #endif
   #ifndef STATUS_LOGO_Y
-    #define STATUS_LOGO_Y _MIN(0U, ((20 - (STATUS_LOGO_HEIGHT)) / 2)
+    #define STATUS_LOGO_Y _MIN(0U, (20 - (STATUS_LOGO_HEIGHT)) / 2)
   #endif
   #ifndef STATUS_LOGO_HEIGHT
     #define STATUS_LOGO_HEIGHT (sizeof(status_logo_bmp) / (STATUS_LOGO_BYTEWIDTH))

commit 4275466f4930ce554419f5f03f07119b8a9aec04
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 24 19:44:50 2020 -0500

    Fix issues with no hotend / bed / fan (#18395)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 6d09228d78..e34e098dfa 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -860,8 +860,6 @@
   #define STATUS_CHAMBER_WIDTH 0
 #endif
 
-#define BED_OR_CHAMBER_OR_FAN (BED_OR_CHAMBER || HAS_FAN0)
-
 // Can also be overridden in Configuration_adv.h
 // If you can afford it, try the 3-frame fan animation!
 // Don't compile in the fan animation with no fan

commit f604560c630dc05e51f9b6cad26569153e96de33
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jun 14 15:26:52 2020 -0500

    Tweak dogm_Statusscreen.h

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index d2517c3db7..6d09228d78 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1372,7 +1372,7 @@
     #define STATUS_LOGO_X 0
   #endif
   #ifndef STATUS_LOGO_Y
-    #define STATUS_LOGO_Y _MIN(0U, (10 - (STATUS_LOGO_HEIGHT) / 2))
+    #define STATUS_LOGO_Y _MIN(0U, ((20 - (STATUS_LOGO_HEIGHT)) / 2)
   #endif
   #ifndef STATUS_LOGO_HEIGHT
     #define STATUS_LOGO_HEIGHT (sizeof(status_logo_bmp) / (STATUS_LOGO_BYTEWIDTH))

commit 785f442c8c937b49d9d90bfef8b1e98314ccd524
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun May 31 02:13:53 2020 -0500

    Group some sanity checks

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 4ae0bf4ac0..d2517c3db7 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1520,7 +1520,7 @@
       #endif
       #ifndef STATUS_HOTEND8_TEXT_X
         #define STATUS_HOTEND8_TEXT_X STATUS_HOTEND7_TEXT_X + STATUS_HEATERS_XSPACE
-      #endif      
+      #endif
       constexpr uint8_t status_hotend_text_x[] = ARRAY_N(HOTENDS, STATUS_HOTEND1_TEXT_X, STATUS_HOTEND2_TEXT_X, STATUS_HOTEND3_TEXT_X, STATUS_HOTEND4_TEXT_X, STATUS_HOTEND5_TEXT_X, STATUS_HOTEND6_TEXT_X, STATUS_HOTEND7_TEXT_X, STATUS_HOTEND8_TEXT_X);
       #define STATUS_HOTEND_TEXT_X(N) status_hotend_text_x[N]
     #else

commit 8c0c8e40463d2145e8a48fc1e23d4cd86b0a7849
Author: Jason Smith <jason.inet@gmail.com>
Date:   Mon May 25 13:42:31 2020 -0700

    8 Extruders + Graphical LCD fix (#18079)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 1095a97c0e..4ae0bf4ac0 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1425,8 +1425,14 @@
   #ifndef STATUS_HOTEND6_WIDTH
     #define STATUS_HOTEND6_WIDTH STATUS_HOTEND5_WIDTH
   #endif
+  #ifndef STATUS_HOTEND7_WIDTH
+    #define STATUS_HOTEND7_WIDTH STATUS_HOTEND6_WIDTH
+  #endif
+  #ifndef STATUS_HOTEND8_WIDTH
+    #define STATUS_HOTEND8_WIDTH STATUS_HOTEND7_WIDTH
+  #endif
 
-  constexpr uint8_t status_hotend_width[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_WIDTH, STATUS_HOTEND2_WIDTH, STATUS_HOTEND3_WIDTH, STATUS_HOTEND4_WIDTH, STATUS_HOTEND5_WIDTH, STATUS_HOTEND6_WIDTH);
+  constexpr uint8_t status_hotend_width[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_WIDTH, STATUS_HOTEND2_WIDTH, STATUS_HOTEND3_WIDTH, STATUS_HOTEND4_WIDTH, STATUS_HOTEND5_WIDTH, STATUS_HOTEND6_WIDTH, STATUS_HOTEND7_WIDTH, STATUS_HOTEND8_WIDTH);
   #define STATUS_HOTEND_WIDTH(N) status_hotend_width[N]
 
   #ifndef STATUS_HOTEND1_BYTEWIDTH
@@ -1447,8 +1453,14 @@
   #ifndef STATUS_HOTEND6_BYTEWIDTH
     #define STATUS_HOTEND6_BYTEWIDTH BW(STATUS_HOTEND6_WIDTH)
   #endif
+  #ifndef STATUS_HOTEND7_BYTEWIDTH
+    #define STATUS_HOTEND7_BYTEWIDTH BW(STATUS_HOTEND7_WIDTH)
+  #endif
+  #ifndef STATUS_HOTEND8_BYTEWIDTH
+    #define STATUS_HOTEND8_BYTEWIDTH BW(STATUS_HOTEND8_WIDTH)
+  #endif
 
-  constexpr uint8_t status_hotend_bytewidth[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_BYTEWIDTH, STATUS_HOTEND2_BYTEWIDTH, STATUS_HOTEND3_BYTEWIDTH, STATUS_HOTEND4_BYTEWIDTH, STATUS_HOTEND5_BYTEWIDTH, STATUS_HOTEND6_BYTEWIDTH);
+  constexpr uint8_t status_hotend_bytewidth[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_BYTEWIDTH, STATUS_HOTEND2_BYTEWIDTH, STATUS_HOTEND3_BYTEWIDTH, STATUS_HOTEND4_BYTEWIDTH, STATUS_HOTEND5_BYTEWIDTH, STATUS_HOTEND6_BYTEWIDTH, STATUS_HOTEND7_BYTEWIDTH, STATUS_HOTEND8_BYTEWIDTH);
   #define STATUS_HOTEND_BYTEWIDTH(N) status_hotend_bytewidth[N]
 
   #ifndef STATUS_HOTEND1_X
@@ -1471,8 +1483,14 @@
     #ifndef STATUS_HOTEND6_X
       #define STATUS_HOTEND6_X STATUS_HOTEND5_X + STATUS_HEATERS_XSPACE
     #endif
+    #ifndef STATUS_HOTEND7_X
+      #define STATUS_HOTEND7_X STATUS_HOTEND6_X + STATUS_HEATERS_XSPACE
+    #endif
+    #ifndef STATUS_HOTEND8_X
+      #define STATUS_HOTEND8_X STATUS_HOTEND7_X + STATUS_HEATERS_XSPACE
+    #endif
 
-    constexpr uint8_t status_hotend_x[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_X, STATUS_HOTEND2_X, STATUS_HOTEND3_X, STATUS_HOTEND4_X, STATUS_HOTEND5_X, STATUS_HOTEND6_X);
+    constexpr uint8_t status_hotend_x[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_X, STATUS_HOTEND2_X, STATUS_HOTEND3_X, STATUS_HOTEND4_X, STATUS_HOTEND5_X, STATUS_HOTEND6_X, STATUS_HOTEND7_X, STATUS_HOTEND8_X);
     #define STATUS_HOTEND_X(N) status_hotend_x[N]
   #elif HAS_MULTI_HOTEND
     #define STATUS_HOTEND_X(N) ((N) ? STATUS_HOTEND2_X : STATUS_HOTEND1_X)
@@ -1497,7 +1515,13 @@
       #ifndef STATUS_HOTEND6_TEXT_X
         #define STATUS_HOTEND6_TEXT_X STATUS_HOTEND5_TEXT_X + STATUS_HEATERS_XSPACE
       #endif
-      constexpr uint8_t status_hotend_text_x[] = ARRAY_N(HOTENDS, STATUS_HOTEND1_TEXT_X, STATUS_HOTEND2_TEXT_X, STATUS_HOTEND3_TEXT_X, STATUS_HOTEND4_TEXT_X, STATUS_HOTEND5_TEXT_X, STATUS_HOTEND6_TEXT_X);
+      #ifndef STATUS_HOTEND7_TEXT_X
+        #define STATUS_HOTEND7_TEXT_X STATUS_HOTEND6_TEXT_X + STATUS_HEATERS_XSPACE
+      #endif
+      #ifndef STATUS_HOTEND8_TEXT_X
+        #define STATUS_HOTEND8_TEXT_X STATUS_HOTEND7_TEXT_X + STATUS_HEATERS_XSPACE
+      #endif      
+      constexpr uint8_t status_hotend_text_x[] = ARRAY_N(HOTENDS, STATUS_HOTEND1_TEXT_X, STATUS_HOTEND2_TEXT_X, STATUS_HOTEND3_TEXT_X, STATUS_HOTEND4_TEXT_X, STATUS_HOTEND5_TEXT_X, STATUS_HOTEND6_TEXT_X, STATUS_HOTEND7_TEXT_X, STATUS_HOTEND8_TEXT_X);
       #define STATUS_HOTEND_TEXT_X(N) status_hotend_text_x[N]
     #else
       #define STATUS_HOTEND_TEXT_X(N) (STATUS_HOTEND1_X + 6 + (N) * (STATUS_HEATERS_XSPACE))

commit 01c646a892c9cd36baf577ca9be344e3490a7727
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 22:35:25 2020 -0500

    Apply more HAS_HOTEND

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 6583a767d9..1095a97c0e 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1749,7 +1749,7 @@
 #if HAS_FAN0 && STATUS_FAN_WIDTH && HOTENDS <= 4 && defined(STATUS_FAN_FRAMES)
   #define DO_DRAW_FAN 1
 #endif
-#if HOTENDS && ENABLED(STATUS_HOTEND_ANIM)
+#if BOTH(HAS_HOTEND, STATUS_HOTEND_ANIM)
   #define ANIM_HOTEND 1
 #endif
 #if BOTH(DO_DRAW_BED, STATUS_BED_ANIM)

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 281bc81509..6583a767d9 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -865,7 +865,7 @@
 // Can also be overridden in Configuration_adv.h
 // If you can afford it, try the 3-frame fan animation!
 // Don't compile in the fan animation with no fan
-#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && BED_OR_CHAMBER) || (ENABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_CHAMBER))
+#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && BED_OR_CHAMBER) || BOTH(STATUS_COMBINE_HEATERS, HAS_HEATED_CHAMBER))
   #undef STATUS_FAN_FRAMES
 #elif !STATUS_FAN_FRAMES
   #define STATUS_FAN_FRAMES 2
@@ -1393,7 +1393,7 @@
         ((STATUS_CHAMBER_WIDTH || STATUS_FAN_WIDTH  ||  STATUS_BED_WIDTH) && STATUS_HOTEND_BITMAPS == 4)
     #define STATUS_HEATERS_X 5
   #else
-    #if ENABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS <= 4
+    #if BOTH(STATUS_COMBINE_HEATERS, HAS_HEATED_BED) && HOTENDS <= 4
       #define STATUS_HEATERS_X 5
     #else
       #define STATUS_HEATERS_X 8 // Like the included bitmaps
@@ -1752,13 +1752,13 @@
 #if HOTENDS && ENABLED(STATUS_HOTEND_ANIM)
   #define ANIM_HOTEND 1
 #endif
-#if DO_DRAW_BED && ENABLED(STATUS_BED_ANIM)
+#if BOTH(DO_DRAW_BED, STATUS_BED_ANIM)
   #define ANIM_BED 1
 #endif
-#if DO_DRAW_CHAMBER && ENABLED(STATUS_CHAMBER_ANIM)
+#if BOTH(DO_DRAW_CHAMBER, STATUS_CHAMBER_ANIM)
   #define ANIM_CHAMBER 1
 #endif
-#if DO_DRAW_CUTTER && ENABLED(STATUS_CUTTER_ANIM)
+#if BOTH(DO_DRAW_CUTTER, STATUS_CUTTER_ANIM)
   #define ANIM_CUTTER 1
 #endif
 #if ANIM_HOTEND || ANIM_BED || ANIM_CHAMBER || ANIM_CUTTER

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 741f07330f..281bc81509 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1731,16 +1731,36 @@
   #endif
 #endif
 
-#define DO_DRAW_LOGO (STATUS_LOGO_WIDTH && ENABLED(CUSTOM_STATUS_SCREEN_IMAGE))
-#define DO_DRAW_HOTENDS (HOTENDS > 0)
-#define DO_DRAW_BED (HAS_HEATED_BED && HOTENDS <= 4)
-#define DO_DRAW_CUTTER (HAS_CUTTER && !DO_DRAW_BED)
-#define DO_DRAW_CHAMBER (HAS_TEMP_CHAMBER && STATUS_CHAMBER_WIDTH && HOTENDS <= 4)
-#define DO_DRAW_FAN (HAS_FAN0 && STATUS_FAN_WIDTH && HOTENDS <= 4 && defined(STATUS_FAN_FRAMES))
-
-#define ANIM_HOTEND (HOTENDS && ENABLED(STATUS_HOTEND_ANIM))
-#define ANIM_BED (DO_DRAW_BED && ENABLED(STATUS_BED_ANIM))
-#define ANIM_CHAMBER (DO_DRAW_CHAMBER && ENABLED(STATUS_CHAMBER_ANIM))
-#define ANIM_CUTTER (DO_DRAW_CUTTER && ENABLED(STATUS_CUTTER_ANIM))
-
-#define ANIM_HBCC (ANIM_HOTEND || ANIM_BED || ANIM_CHAMBER || ANIM_CUTTER)
+#if STATUS_LOGO_WIDTH && ENABLED(CUSTOM_STATUS_SCREEN_IMAGE)
+  #define DO_DRAW_LOGO 1
+#endif
+#if HOTENDS > 0
+  #define DO_DRAW_HOTENDS 1
+#endif
+#if HAS_HEATED_BED && HOTENDS <= 4
+  #define DO_DRAW_BED 1
+#endif
+#if HAS_CUTTER && !DO_DRAW_BED
+  #define DO_DRAW_CUTTER 1
+#endif
+#if HAS_TEMP_CHAMBER && STATUS_CHAMBER_WIDTH && HOTENDS <= 4
+  #define DO_DRAW_CHAMBER 1
+#endif
+#if HAS_FAN0 && STATUS_FAN_WIDTH && HOTENDS <= 4 && defined(STATUS_FAN_FRAMES)
+  #define DO_DRAW_FAN 1
+#endif
+#if HOTENDS && ENABLED(STATUS_HOTEND_ANIM)
+  #define ANIM_HOTEND 1
+#endif
+#if DO_DRAW_BED && ENABLED(STATUS_BED_ANIM)
+  #define ANIM_BED 1
+#endif
+#if DO_DRAW_CHAMBER && ENABLED(STATUS_CHAMBER_ANIM)
+  #define ANIM_CHAMBER 1
+#endif
+#if DO_DRAW_CUTTER && ENABLED(STATUS_CUTTER_ANIM)
+  #define ANIM_CUTTER 1
+#endif
+#if ANIM_HOTEND || ANIM_BED || ANIM_CHAMBER || ANIM_CUTTER
+  #define ANIM_HBCC 1
+#endif

commit 15f6f53638a6778d22a17e1900fb3a9fdc92dade
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 19 23:56:55 2020 -0500

    Add HAS_HOTEND, etc.

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 8295e9e058..741f07330f 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -278,7 +278,7 @@
     //
     // Status Screen Hotends bitmaps
     //
-    #if HOTENDS
+    #if HAS_HOTEND
 
       #define STATUS_HOTEND1_WIDTH  16
 
@@ -1343,7 +1343,7 @@
     #undef STATUS_LOGO_WIDTH
   #endif
 
-  #if (HOTENDS > 1 && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN)
+  #if (HAS_MULTI_HOTEND && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN)
     #define _STATUS_HEATERS_X(H,S,N) ((LCD_PIXEL_WIDTH - (H * (S + N)) - (_EXTRA_WIDTH) + (STATUS_LOGO_WIDTH)) / 2)
     #if STATUS_HOTEND1_WIDTH
       #if HOTENDS > 2
@@ -1474,7 +1474,7 @@
 
     constexpr uint8_t status_hotend_x[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_X, STATUS_HOTEND2_X, STATUS_HOTEND3_X, STATUS_HOTEND4_X, STATUS_HOTEND5_X, STATUS_HOTEND6_X);
     #define STATUS_HOTEND_X(N) status_hotend_x[N]
-  #elif HOTENDS > 1
+  #elif HAS_MULTI_HOTEND
     #define STATUS_HOTEND_X(N) ((N) ? STATUS_HOTEND2_X : STATUS_HOTEND1_X)
   #else
     #define STATUS_HOTEND_X(N) STATUS_HOTEND1_X

commit e3321920f3bab800812ed0d2395fb00fe80072fb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 12 17:21:02 2020 -0500

    Update Marlin website links to https

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 3384f5798a..8295e9e058 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -25,7 +25,7 @@
  * Standard Marlin Status Screen bitmaps
  *
  * Use the Marlin Bitmap Converter to make your own:
- * http://marlinfw.org/tools/u8glib/converter.html
+ * https://marlinfw.org/tools/u8glib/converter.html
  */
 
 #include "../../inc/MarlinConfig.h"

commit 870a1f753acfaed0cbffe2ba406e4d3c02316503
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Mar 1 20:21:30 2020 -0600

    Fix undefined STATUS_CHAMBER_WIDTH

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 3656b02e08..3384f5798a 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -854,7 +854,9 @@
     };
 
   #endif
-#else // HAS_HEATED_CHAMBER
+#endif
+
+#ifndef STATUS_CHAMBER_WIDTH
   #define STATUS_CHAMBER_WIDTH 0
 #endif
 

commit 6fd7f4fe1bfeed6c3b145c760752a379c3bb5cf0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 26 08:09:57 2020 -0600

    Fix unified status bed temp display

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 11d4d7093c..3656b02e08 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -785,7 +785,9 @@
     #endif
 
   #endif
-#else
+#endif
+
+#ifndef STATUS_BED_WIDTH
   #define STATUS_BED_WIDTH 0
 #endif
 
@@ -1729,7 +1731,7 @@
 
 #define DO_DRAW_LOGO (STATUS_LOGO_WIDTH && ENABLED(CUSTOM_STATUS_SCREEN_IMAGE))
 #define DO_DRAW_HOTENDS (HOTENDS > 0)
-#define DO_DRAW_BED (HAS_HEATED_BED && STATUS_BED_WIDTH && HOTENDS <= 4)
+#define DO_DRAW_BED (HAS_HEATED_BED && HOTENDS <= 4)
 #define DO_DRAW_CUTTER (HAS_CUTTER && !DO_DRAW_BED)
 #define DO_DRAW_CHAMBER (HAS_TEMP_CHAMBER && STATUS_CHAMBER_WIDTH && HOTENDS <= 4)
 #define DO_DRAW_FAN (HAS_FAN0 && STATUS_FAN_WIDTH && HOTENDS <= 4 && defined(STATUS_FAN_FRAMES))

commit 3e685777a8789e6704d982881b2d94a9f42d4a3a
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Feb 25 04:07:36 2020 -0500

    Fix LCD cutter/bed icons overlapping (#16956)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 32a22b9f45..11d4d7093c 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1729,8 +1729,8 @@
 
 #define DO_DRAW_LOGO (STATUS_LOGO_WIDTH && ENABLED(CUSTOM_STATUS_SCREEN_IMAGE))
 #define DO_DRAW_HOTENDS (HOTENDS > 0)
-#define DO_DRAW_CUTTER (HAS_CUTTER)
 #define DO_DRAW_BED (HAS_HEATED_BED && STATUS_BED_WIDTH && HOTENDS <= 4)
+#define DO_DRAW_CUTTER (HAS_CUTTER && !DO_DRAW_BED)
 #define DO_DRAW_CHAMBER (HAS_TEMP_CHAMBER && STATUS_CHAMBER_WIDTH && HOTENDS <= 4)
 #define DO_DRAW_FAN (HAS_FAN0 && STATUS_FAN_WIDTH && HOTENDS <= 4 && defined(STATUS_FAN_FRAMES))
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index fbc7a8128a..32a22b9f45 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 92ad97372973a770cce2ee34fd131482a3dd312b
Author: Jason Smith <jason.inet@gmail.com>
Date:   Wed Jan 1 19:58:16 2020 -0800

    Fix some DOGM warnings (#16363)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index f9bfd00cec..fbc7a8128a 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1368,7 +1368,7 @@
     #define STATUS_LOGO_X 0
   #endif
   #ifndef STATUS_LOGO_Y
-    #define STATUS_LOGO_Y _MIN(0, 10 - (STATUS_LOGO_HEIGHT) / 2)
+    #define STATUS_LOGO_Y _MIN(0U, (10 - (STATUS_LOGO_HEIGHT) / 2))
   #endif
   #ifndef STATUS_LOGO_HEIGHT
     #define STATUS_LOGO_HEIGHT (sizeof(status_logo_bmp) / (STATUS_LOGO_BYTEWIDTH))

commit 6a514a1e8e96bcd26985615377523d1e45ca7b10
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 8 21:46:23 2019 -0500

    Move status screen defines

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 96f68e2b2d..f9bfd00cec 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1726,3 +1726,17 @@
     #endif
   #endif
 #endif
+
+#define DO_DRAW_LOGO (STATUS_LOGO_WIDTH && ENABLED(CUSTOM_STATUS_SCREEN_IMAGE))
+#define DO_DRAW_HOTENDS (HOTENDS > 0)
+#define DO_DRAW_CUTTER (HAS_CUTTER)
+#define DO_DRAW_BED (HAS_HEATED_BED && STATUS_BED_WIDTH && HOTENDS <= 4)
+#define DO_DRAW_CHAMBER (HAS_TEMP_CHAMBER && STATUS_CHAMBER_WIDTH && HOTENDS <= 4)
+#define DO_DRAW_FAN (HAS_FAN0 && STATUS_FAN_WIDTH && HOTENDS <= 4 && defined(STATUS_FAN_FRAMES))
+
+#define ANIM_HOTEND (HOTENDS && ENABLED(STATUS_HOTEND_ANIM))
+#define ANIM_BED (DO_DRAW_BED && ENABLED(STATUS_BED_ANIM))
+#define ANIM_CHAMBER (DO_DRAW_CHAMBER && ENABLED(STATUS_CHAMBER_ANIM))
+#define ANIM_CUTTER (DO_DRAW_CUTTER && ENABLED(STATUS_CUTTER_ANIM))
+
+#define ANIM_HBCC (ANIM_HOTEND || ANIM_BED || ANIM_CHAMBER || ANIM_CUTTER)

commit 01e4b0c067c23defa78a7c68bef872f132728875
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Sun Dec 1 21:20:15 2019 -0600

    Add Laser / Spindle bitmap for LCD (#16068)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 78b8deafa2..96f68e2b2d 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -598,6 +598,105 @@
 
 #endif // !STATUS_HEATERS_WIDTH && !STATUS_HOTEND1_WIDTH
 
+// LASER / SPINDLE
+#if !STATUS_CUTTER_WIDTH && HAS_CUTTER
+  #define STATUS_CUTTER_WIDTH 24
+  #define STATUS_CUTTER_X 80
+  #if ENABLED(LASER_FEATURE)
+    #ifdef STATUS_CUTTER_ANIM
+      const unsigned char status_cutter_on_bmp[] PROGMEM = {
+        B00000000,B00100100,B00000000,
+        B00000000,B01100110,B00000000,
+        B00000000,B11000011,B00000000,
+        B00000001,B10011001,B10000000,
+        B00000011,B00100100,B11000000,
+        B00000000,B01000010,B00000000,
+        B00000000,B01000010,B00000000,
+        B00000011,B00100100,B11000000,
+        B00000001,B10011001,B10000000,
+        B00000000,B11000011,B00000000,
+        B00000000,B01100110,B00000000,
+        B00000000,B00100100,B00000000
+      };
+      const unsigned char status_cutter_bmp[] PROGMEM = {
+        B00000000,B00100100,B00000000,
+        B00000000,B01100110,B00000000,
+        B00000000,B00000000,B00000000,
+        B00000001,B00000000,B10000000,
+        B00000011,B00000000,B11000000,
+        B00000000,B00011000,B00000000,
+        B00000000,B00011000,B00000000,
+        B00000011,B00000000,B11000000,
+        B00000001,B00000000,B10000000,
+        B00000000,B00000000,B00000000,
+        B00000000,B01100110,B00000000,
+        B00000000,B00100100,B00000000
+      };
+    #else
+      const unsigned char status_cutter_bmp[] PROGMEM = {
+        B00000000,B00100100,B00000000,
+        B00000000,B01100110,B00000000,
+        B00000000,B11000011,B00000000,
+        B00000001,B10000001,B10000000,
+        B00000011,B00000000,B11000000,
+        B00000000,B00000000,B00000000,
+        B00000000,B00000000,B00000000,
+        B00000011,B00000000,B11000000,
+        B00000001,B10000001,B10000000,
+        B00000000,B11000011,B00000000,
+        B00000000,B01100110,B00000000,
+        B00000000,B00100100,B00000000
+      };
+    #endif
+  #else
+    #ifdef STATUS_CUTTER_ANIM
+      const unsigned char status_cutter_on_bmp[] PROGMEM = {
+        B00000001,B11111110,B10000000,
+        B00000000,B11000000,B00000000,
+        B00000001,B10000000,B10000000,
+        B00000001,B00000000,B10000000,
+        B00000001,B11111100,B10000000,
+        B00000000,B11100000,B00000000,
+        B00000001,B11000000,B10000000,
+        B00000000,B10000001,B00000000,
+        B00000000,B01111010,B00000000,
+        B00000000,B00110100,B00000000,
+        B00000000,B00011000,B00000000,
+        B00000000,B00000000,B00000000
+      };
+      const unsigned char status_cutter_bmp[] PROGMEM = {
+        B00000001,B11111110,B10000000,
+        B00000000,B11000000,B00000000,
+        B00000001,B10000000,B10000000,
+        B00000001,B00000000,B10000000,
+        B00000001,B11111100,B10000000,
+        B00000000,B11100000,B00000000,
+        B00000001,B11000000,B10000000,
+        B00000000,B10000001,B00000000,
+        B00000000,B01111010,B00000000,
+        B00000000,B00110100,B00000000,
+        B00000000,B00011000,B00000000,
+        B00000000,B00000000,B00000000
+      };
+    #else
+      const unsigned char status_cutter_bmp[] PROGMEM = {
+        B00000001,B11000010,B10000000,
+        B00000001,B00011100,B10000000,
+        B00000000,B11100001,B00000000,
+        B00000001,B00001110,B10000000,
+        B00000001,B01110000,B10000000,
+        B00000000,B10000111,B10000000,
+        B00000001,B00111111,B10000000,
+        B00000000,B11111111,B00000000,
+        B00000000,B01111110,B00000000,
+        B00000000,B00111100,B00000000,
+        B00000000,B00011000,B00000000,
+        B00000000,B00000000,B00000000
+      };
+    #endif
+  #endif
+#endif // LASER / SPINDLE
+
 //
 // Default Status Screen Bed bitmaps
 //
@@ -1467,6 +1566,51 @@
 
 #endif
 
+//
+// Cutter Bitmap Properties
+//
+#ifndef STATUS_CUTTER_BYTEWIDTH
+  #define STATUS_CUTTER_BYTEWIDTH BW(STATUS_CUTTER_WIDTH)
+#endif
+#if STATUS_CUTTER_WIDTH
+
+  #ifndef STATUS_CUTTER_X
+    #define STATUS_CUTTER_X (LCD_PIXEL_WIDTH - (STATUS_CUTTER_BYTEWIDTH + STATUS_CUTTER_BYTEWIDTH) * 8)
+  #endif
+
+  #ifndef STATUS_CUTTER_HEIGHT
+    #ifdef STATUS_CUTTER_ANIM
+      #define STATUS_CUTTER_HEIGHT(S) ((S) ? sizeof(status_cutter_on_bmp) / (STATUS_CUTTER_BYTEWIDTH) : sizeof(status_cutter_bmp) / (STATUS_CUTTER_BYTEWIDTH))
+    #else
+      #define STATUS_CUTTER_HEIGHT(S) (sizeof(status_cutter_bmp) / (STATUS_CUTTER_BYTEWIDTH))
+    #endif
+  #endif
+
+  #ifndef STATUS_CUTTER_Y
+    #define STATUS_CUTTER_Y(S) 4
+  #endif
+
+  #ifndef STATUS_CUTTER_TEXT_X
+    #define STATUS_CUTTER_TEXT_X (STATUS_CUTTER_X -1)
+  #endif
+
+  #ifndef STATUS_CUTTER_TEXT_Y
+    #define STATUS_CUTTER_TEXT_Y 28
+  #endif
+
+  static_assert(
+    sizeof(status_cutter_bmp) == (STATUS_CUTTER_BYTEWIDTH) * (STATUS_CUTTER_HEIGHT(0)),
+    "Status cutter bitmap (status_cutter_bmp) dimensions don't match data."
+  );
+  #ifdef STATUS_CUTTER_ANIM
+    static_assert(
+      sizeof(status_cutter_on_bmp) == (STATUS_CUTTER_BYTEWIDTH) * (STATUS_CUTTER_HEIGHT(1)),
+      "Status cutter bitmap (status_cutter_on_bmp) dimensions don't match data."
+    );
+  #endif
+
+#endif
+
 //
 // Chamber Bitmap Properties
 //

commit 3dc49fd1c6f0be7b765300c433c905c273f36711
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Dec 1 20:06:00 2019 -0600

    Split up hotend / bed drawing

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index d0de7da976..78b8deafa2 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1462,7 +1462,8 @@
 
 #else // HOTENDS == 0
 
-  //#error "Incomplete status header"
+  #define STATUS_HOTEND_TEXT_X(N) 0
+  #define STATUS_HEATERS_Y 0
 
 #endif
 

commit 5d81d7cefe98e63442e3babee6b21b2df8f02fa8
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Fri Oct 4 16:18:18 2019 -0500

    if no HOTENDS

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index a09e778809..d0de7da976 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1232,7 +1232,7 @@
     #define _HEATERS_WIDTH (HOTENDS * (STATUS_HEATERS_XSPACE)) // as many hotends as possible
   #elif STATUS_HEATERS_WIDTH
     #define _HEATERS_WIDTH STATUS_HEATERS_WIDTH
-  #else
+  #elif HOTENDS
     #error "Status screen heaters region was not specified."
   #endif
   #if STATUS_LOGO_WIDTH > (LCD_PIXEL_WIDTH - (_EXTRA_WIDTH + _HEATERS_WIDTH))

commit c44b5fd13acd7f399e2efbafc4f04bfdec54721c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 18 16:41:43 2019 -0500

    Try to fit logo by narrowing icons

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 46fc9f7f19..a09e778809 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1206,20 +1206,42 @@
   #define STATUS_FAN_WIDTH 0
 #endif
 
+#define _EXTRA_WIDTH (STATUS_FAN_WIDTH + STATUS_CHAMBER_WIDTH + STATUS_BED_WIDTH)
+
+//
+// Heater Bitmap X Space Requirements
+//
+#if !defined(STATUS_HEATERS_XSPACE) && (STATUS_HOTEND1_WIDTH || STATUS_HEATERS_WIDTH)
+  #if (HOTENDS == 3 || HOTENDS == 4) && ENABLED(STATUS_COMBINE_HEATERS)
+    // If more heaters or they're combined, 3 bytes
+    #define STATUS_HEATERS_XSPACE 24
+  #elif STATUS_LOGO_WIDTH > (LCD_PIXEL_WIDTH - (_EXTRA_WIDTH) - 26 * (HOTENDS)) // 128 - (20 + 24 + 26) == 58
+    // If the logo won't fit at 26 width
+    #define STATUS_HEATERS_XSPACE 24
+  #else
+    #define STATUS_HEATERS_XSPACE 26
+  #endif
+#endif
+
 #if ENABLED(CUSTOM_STATUS_SCREEN_IMAGE)
 
-  #if STATUS_HOTEND1_WIDTH
-    #define HAS_SPACES ((LCD_PIXEL_WIDTH - (HOTENDS * STATUS_HOTEND1_WIDTH) - STATUS_BED_WIDTH - STATUS_CHAMBER_WIDTH - STATUS_FAN_WIDTH - 24) < STATUS_LOGO_WIDTH ? true : false)
+  //
+  // Disable the logo bitmap if insufficient space
+  //
+  #if STATUS_HEATERS_XSPACE
+    #define _HEATERS_WIDTH (HOTENDS * (STATUS_HEATERS_XSPACE)) // as many hotends as possible
   #elif STATUS_HEATERS_WIDTH
-    #define HAS_SPACES (((LCD_PIXEL_WIDTH - STATUS_HEATERS_WIDTH - STATUS_BED_WIDTH - STATUS_CHAMBER_WIDTH - STATUS_FAN_WIDTH - 20) < STATUS_LOGO_WIDTH) ? true : false)
+    #define _HEATERS_WIDTH STATUS_HEATERS_WIDTH
+  #else
+    #error "Status screen heaters region was not specified."
   #endif
-
-  #if HAS_SPACES
+  #if STATUS_LOGO_WIDTH > (LCD_PIXEL_WIDTH - (_EXTRA_WIDTH + _HEATERS_WIDTH))
+    #warning "Unable to fit custom Status Screen logo. Disabling."
     #undef STATUS_LOGO_WIDTH
   #endif
 
   #if (HOTENDS > 1 && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN)
-    #define _STATUS_HEATERS_X(H,S,N) (((LCD_PIXEL_WIDTH - (H * (S + N)) - STATUS_LOGO_WIDTH - STATUS_BED_WIDTH - STATUS_CHAMBER_WIDTH - STATUS_FAN_WIDTH) / 2) + STATUS_LOGO_WIDTH)
+    #define _STATUS_HEATERS_X(H,S,N) ((LCD_PIXEL_WIDTH - (H * (S + N)) - (_EXTRA_WIDTH) + (STATUS_LOGO_WIDTH)) / 2)
     #if STATUS_HOTEND1_WIDTH
       #if HOTENDS > 2
         #define STATUS_HEATERS_X _STATUS_HEATERS_X(HOTENDS, STATUS_HOTEND1_WIDTH, 6)
@@ -1259,33 +1281,21 @@
 #endif
 
 //
-// Heater Bitmap Properties
+// Hotend Heater Bitmap starting X position
 //
-#if STATUS_HOTEND1_WIDTH || STATUS_HEATERS_WIDTH
-
-  #ifndef STATUS_HEATERS_XSPACE
-    #if (HOTENDS == 3 || HOTENDS == 4) && ENABLED(STATUS_COMBINE_HEATERS)
-      #define STATUS_HEATERS_XSPACE 24
-    #else
-      #define STATUS_HEATERS_XSPACE 26 // Like the included bitmaps
-    #endif
-  #endif
-
-  #ifndef STATUS_HEATERS_X
-    #if STATUS_LOGO_BYTEWIDTH
-      #define STATUS_HEATERS_X (STATUS_LOGO_BYTEWIDTH * 8)
-    #elif ((STATUS_CHAMBER_WIDTH || STATUS_FAN_WIDTH) && (STATUS_BED_WIDTH  && STATUS_HOTEND_BITMAPS == 3)) || \
-          ((STATUS_CHAMBER_WIDTH || STATUS_FAN_WIDTH  ||  STATUS_BED_WIDTH) && STATUS_HOTEND_BITMAPS == 4)
+#if !defined(STATUS_HEATERS_X) && (STATUS_HOTEND1_WIDTH || STATUS_HEATERS_WIDTH)
+  #if STATUS_LOGO_BYTEWIDTH
+    #define STATUS_HEATERS_X (STATUS_LOGO_BYTEWIDTH * 8)
+  #elif ((STATUS_CHAMBER_WIDTH || STATUS_FAN_WIDTH) && (STATUS_BED_WIDTH  && STATUS_HOTEND_BITMAPS == 3)) || \
+        ((STATUS_CHAMBER_WIDTH || STATUS_FAN_WIDTH  ||  STATUS_BED_WIDTH) && STATUS_HOTEND_BITMAPS == 4)
+    #define STATUS_HEATERS_X 5
+  #else
+    #if ENABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS <= 4
       #define STATUS_HEATERS_X 5
     #else
-      #if ENABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS <= 4
-        #define STATUS_HEATERS_X 5
-      #else
-        #define STATUS_HEATERS_X 8 // Like the included bitmaps
-      #endif
+      #define STATUS_HEATERS_X 8 // Like the included bitmaps
     #endif
   #endif
-
 #endif
 
 #if STATUS_HOTEND1_WIDTH

commit 584c86bed1d81548da03681bd3b3c6bd54ae0fe3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 10 02:20:49 2019 -0500

    More "zero extruders" changes (#15213)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index aff3a3ae1c..46fc9f7f19 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -69,10 +69,28 @@
     //
     #if HAS_HEATED_BED && HOTENDS <= 4
 
-      #if HOTENDS == 1
+      #if HOTENDS == 0
+
+        #define STATUS_HEATERS_WIDTH 96
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000
+        };
+
+      #elif HOTENDS == 1
 
         #define STATUS_HEATERS_WIDTH 96
-        #define STATUS_BED_TEXT_X   (STATUS_HEATERS_WIDTH - 10)
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
@@ -92,7 +110,6 @@
       #elif HOTENDS == 2
 
         #define STATUS_HEATERS_WIDTH 96
-        #define STATUS_BED_TEXT_X   (STATUS_HEATERS_WIDTH - 10)
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
@@ -112,7 +129,6 @@
       #elif HOTENDS == 3
 
         #define STATUS_HEATERS_WIDTH 96
-        #define STATUS_BED_TEXT_X   (STATUS_HEATERS_WIDTH - 10)
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000100,B00010000,B01000000,
@@ -132,7 +148,6 @@
       #else // HOTENDS > 3
 
         #define STATUS_HEATERS_WIDTH 120
-        #define STATUS_BED_TEXT_X   (STATUS_HEATERS_WIDTH - 10)
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000100,B00010000,B01000000,
@@ -151,9 +166,15 @@
 
       #endif // HOTENDS
 
+      #define STATUS_BED_TEXT_X (STATUS_HEATERS_WIDTH - 10)
+
     #else // !HAS_HEATED_BED || HOTENDS > 3
 
-      #if HOTENDS == 1
+      #if HOTENDS == 0
+
+        #define STATUS_HEATERS_WIDTH  0
+
+      #elif HOTENDS == 1
 
         #define STATUS_HEATERS_WIDTH  12
 
@@ -229,7 +250,7 @@
           B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
         };
 
-      #elif HOTENDS > 4
+      #else // HOTENDS > 4
 
         #define STATUS_HEATERS_WIDTH  108
 
@@ -304,105 +325,101 @@
 
         #endif
 
-      #else
-
-        #if HOTENDS >= 2
-
-          #ifdef STATUS_HOTEND_ANIM
+      #elif HOTENDS >= 2
 
-            const unsigned char status_hotend1_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111111,B11110000,
-              B00111110,B11110000,
-              B00111100,B11110000,
-              B00011010,B11100000,
-              B00011110,B11100000,
-              B00111110,B11110000,
-              B00111110,B11110000,
-              B00111110,B11110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
+        #ifdef STATUS_HOTEND_ANIM
 
-            const unsigned char status_hotend1_b_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00100000,B00010000,
-              B00100001,B00010000,
-              B00100011,B00010000,
-              B00010101,B00100000,
-              B00010001,B00100000,
-              B00100001,B00010000,
-              B00100001,B00010000,
-              B00110001,B00110000,
-              B00001000,B01000000,
-              B00000100,B10000000,
-              B00000011,B00000000
-            };
+          const unsigned char status_hotend1_a_bmp[] PROGMEM = {
+            B00011111,B11100000,
+            B00111111,B11110000,
+            B00111110,B11110000,
+            B00111100,B11110000,
+            B00011010,B11100000,
+            B00011110,B11100000,
+            B00111110,B11110000,
+            B00111110,B11110000,
+            B00111110,B11110000,
+            B00001111,B11000000,
+            B00000111,B10000000,
+            B00000011,B00000000
+          };
 
-            const unsigned char status_hotend2_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111111,B11110000,
-              B00111100,B11110000,
-              B00111011,B01110000,
-              B00011111,B01100000,
-              B00011110,B11100000,
-              B00111101,B11110000,
-              B00111011,B11110000,
-              B00111000,B01110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
+          const unsigned char status_hotend1_b_bmp[] PROGMEM = {
+            B00011111,B11100000,
+            B00100000,B00010000,
+            B00100001,B00010000,
+            B00100011,B00010000,
+            B00010101,B00100000,
+            B00010001,B00100000,
+            B00100001,B00010000,
+            B00100001,B00010000,
+            B00110001,B00110000,
+            B00001000,B01000000,
+            B00000100,B10000000,
+            B00000011,B00000000
+          };
 
-            const unsigned char status_hotend2_b_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00100000,B00010000,
-              B00100011,B00010000,
-              B00100100,B10010000,
-              B00010000,B10100000,
-              B00010001,B00100000,
-              B00100010,B00010000,
-              B00100100,B00010000,
-              B00110111,B10110000,
-              B00001000,B01000000,
-              B00000100,B10000000,
-              B00000011,B00000000
-            };
+          const unsigned char status_hotend2_a_bmp[] PROGMEM = {
+            B00011111,B11100000,
+            B00111111,B11110000,
+            B00111100,B11110000,
+            B00111011,B01110000,
+            B00011111,B01100000,
+            B00011110,B11100000,
+            B00111101,B11110000,
+            B00111011,B11110000,
+            B00111000,B01110000,
+            B00001111,B11000000,
+            B00000111,B10000000,
+            B00000011,B00000000
+          };
 
-          #else
+          const unsigned char status_hotend2_b_bmp[] PROGMEM = {
+            B00011111,B11100000,
+            B00100000,B00010000,
+            B00100011,B00010000,
+            B00100100,B10010000,
+            B00010000,B10100000,
+            B00010001,B00100000,
+            B00100010,B00010000,
+            B00100100,B00010000,
+            B00110111,B10110000,
+            B00001000,B01000000,
+            B00000100,B10000000,
+            B00000011,B00000000
+          };
 
-            const unsigned char status_hotend1_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111110,B11110000,
-              B00111100,B11110000,
-              B00111010,B11110000,
-              B00011110,B11100000,
-              B00011110,B11100000,
-              B00111110,B11110000,
-              B00111110,B11110000,
-              B00111111,B11110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
+        #else
 
-            const unsigned char status_hotend2_a_bmp[] PROGMEM = {
-              B00011111,B11100000,
-              B00111100,B11110000,
-              B00111011,B01110000,
-              B00111111,B01110000,
-              B00011110,B11100000,
-              B00011101,B11100000,
-              B00111011,B11110000,
-              B00111000,B01110000,
-              B00111111,B11110000,
-              B00001111,B11000000,
-              B00000111,B10000000,
-              B00000011,B00000000
-            };
+          const unsigned char status_hotend1_a_bmp[] PROGMEM = {
+            B00011111,B11100000,
+            B00111110,B11110000,
+            B00111100,B11110000,
+            B00111010,B11110000,
+            B00011110,B11100000,
+            B00011110,B11100000,
+            B00111110,B11110000,
+            B00111110,B11110000,
+            B00111111,B11110000,
+            B00001111,B11000000,
+            B00000111,B10000000,
+            B00000011,B00000000
+          };
 
-          #endif
+          const unsigned char status_hotend2_a_bmp[] PROGMEM = {
+            B00011111,B11100000,
+            B00111100,B11110000,
+            B00111011,B01110000,
+            B00111111,B01110000,
+            B00011110,B11100000,
+            B00011101,B11100000,
+            B00111011,B11110000,
+            B00111000,B01110000,
+            B00111111,B11110000,
+            B00001111,B11000000,
+            B00000111,B10000000,
+            B00000011,B00000000
+          };
 
         #endif
 
@@ -573,6 +590,8 @@
 
       #endif
 
+    #else
+      #define STATUS_HEATERS_HEIGHT 20
     #endif
 
   #endif
@@ -1431,6 +1450,10 @@
     "Status heaters bitmap (status_heaters_bmp) dimensions don't match data."
   );
 
+#else // HOTENDS == 0
+
+  //#error "Incomplete status header"
+
 #endif
 
 //

commit 8bca3fcf2c4be3ea707860ebb9a1bfa1c03e2d7e
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Sun Sep 8 02:20:18 2019 -0500

    Display chamber with HAS_TEMP_CHAMBER (#15194)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 821018bc0a..aff3a3ae1c 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -671,10 +671,8 @@
   #define STATUS_BED_WIDTH 0
 #endif
 
-#if !STATUS_CHAMBER_WIDTH && HAS_HEATED_CHAMBER && ((HOTENDS <= 4 && !HAS_HEATED_BED) || (HOTENDS <= 3 && HAS_HEATED_BED))
-
+#if !STATUS_CHAMBER_WIDTH && HAS_TEMP_CHAMBER && ((HOTENDS <= 4 && !HAS_HEATED_BED) || (HOTENDS <= 3 && HAS_HEATED_BED))
   #define STATUS_CHAMBER_WIDTH 21
-
   #if STATUS_HEATERS_WIDTH
     #if ENABLED(STATUS_COMBINE_HEATERS)
       #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - 2 - (STATUS_CHAMBER_BYTEWIDTH) * 8)
@@ -703,7 +701,6 @@
       B00011111,B11111111,B11111000,
       B00011111,B11111111,B11111000
     };
-
     const unsigned char status_chamber_on_bmp[] PROGMEM = {
       B00011111,B11111111,B11111000,
       B00010000,B00000000,B00001000,
@@ -741,13 +738,12 @@
   #define STATUS_CHAMBER_WIDTH 0
 #endif
 
-#define BED_CHAM (HAS_HEATED_BED || HAS_HEATED_CHAMBER)
-#define BED_CHAM_FAN (BED_CHAM || HAS_FAN0)
+#define BED_OR_CHAMBER_OR_FAN (BED_OR_CHAMBER || HAS_FAN0)
 
 // Can also be overridden in Configuration_adv.h
 // If you can afford it, try the 3-frame fan animation!
 // Don't compile in the fan animation with no fan
-#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && BED_CHAM) || (ENABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_CHAMBER))
+#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && BED_OR_CHAMBER) || (ENABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_CHAMBER))
   #undef STATUS_FAN_FRAMES
 #elif !STATUS_FAN_FRAMES
   #define STATUS_FAN_FRAMES 2
@@ -1203,7 +1199,7 @@
     #undef STATUS_LOGO_WIDTH
   #endif
 
-  #if (HOTENDS > 1 && STATUS_LOGO_WIDTH && BED_CHAM_FAN) || ( HOTENDS >= 3 && !BED_CHAM_FAN)
+  #if (HOTENDS > 1 && STATUS_LOGO_WIDTH && BED_OR_CHAMBER_OR_FAN) || (HOTENDS >= 3 && !BED_OR_CHAMBER_OR_FAN)
     #define _STATUS_HEATERS_X(H,S,N) (((LCD_PIXEL_WIDTH - (H * (S + N)) - STATUS_LOGO_WIDTH - STATUS_BED_WIDTH - STATUS_CHAMBER_WIDTH - STATUS_FAN_WIDTH) / 2) + STATUS_LOGO_WIDTH)
     #if STATUS_HOTEND1_WIDTH
       #if HOTENDS > 2

commit 6172cd2528e056e7ebcb710ebeec3eeb0d9696e5
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Sat Sep 7 11:52:57 2019 +0200

    CHAMBER integration to GLCD (#14981)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index ed2978a42b..821018bc0a 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -29,11 +29,14 @@
  */
 
 #include "../../inc/MarlinConfig.h"
+#include "ultralcd_DOGM.h"
 
 #define BW(N) ((N + 7) / 8)
 
-#if ENABLED(CUSTOM_STATUS_SCREEN_IMAGE)
+#if ENABLED(CUSTOM_STATUS_SCREEN_IMAGE) && DISABLED(STATUS_COMBINE_HEATERS)
 
+  #undef STATUS_HEATERS_X
+  #undef STATUS_BED_X
   /**
    * Custom _Statusscreen.h files can define:
    * - A custom logo image
@@ -50,54 +53,26 @@
 
 #endif
 
-#if ENABLED(STATUS_COMBINE_HEATERS)
-  #undef STATUS_HOTEND_ANIM
-  #undef STATUS_BED_ANIM
-#endif
-
 //
 // Default Status Screen Heater or Hotends bitmaps
 //
-
 #if !STATUS_HEATERS_WIDTH && !STATUS_HOTEND1_WIDTH
 
   #if ENABLED(STATUS_COMBINE_HEATERS)
 
+    #undef STATUS_HOTEND_ANIM
+    #undef STATUS_BED_ANIM
+    #define STATUS_HEATERS_XSPACE 24
+
     //
     // Status Screen Combined Heater bitmaps
     //
+    #if HAS_HEATED_BED && HOTENDS <= 4
 
-    #if HAS_HEATED_BED && HOTENDS == 0
-      #define STATUS_HEATERS_X 80
-    #endif
-
-    #if HAS_HEATED_BED && HOTENDS <= 3
-
-      #define STATUS_BED_WIDTH  21
-
-      #if HOTENDS == 0
-
-        #define STATUS_HEATERS_WIDTH  21
-
-        const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00000100,B00010000,B01000000,
-          B00000010,B00001000,B00100000,
-          B00000010,B00001000,B00100000,
-          B00000100,B00010000,B01000000,
-          B00001000,B00100000,B10000000,
-          B00010000,B01000001,B00000000,
-          B00010000,B01000001,B00000000,
-          B00001000,B00100000,B10000000,
-          B00000100,B00010000,B01000000,
-          B00000000,B00000000,B00000000,
-          B00011111,B11111111,B11111000,
-          B00011111,B11111111,B11111000
-        };
-
-      #elif HOTENDS == 1
+      #if HOTENDS == 1
 
-        #define STATUS_HEATERS_WIDTH  90
-        #define STATUS_BED_X 80
+        #define STATUS_HEATERS_WIDTH 96
+        #define STATUS_BED_TEXT_X   (STATUS_HEATERS_WIDTH - 10)
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
@@ -116,7 +91,8 @@
 
       #elif HOTENDS == 2
 
-        #define STATUS_HEATERS_WIDTH  90
+        #define STATUS_HEATERS_WIDTH 96
+        #define STATUS_BED_TEXT_X   (STATUS_HEATERS_WIDTH - 10)
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
@@ -133,9 +109,10 @@
           B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000
         };
 
-      #else // HOTENDS > 2
+      #elif HOTENDS == 3
 
-        #define STATUS_HEATERS_WIDTH  90
+        #define STATUS_HEATERS_WIDTH 96
+        #define STATUS_BED_TEXT_X   (STATUS_HEATERS_WIDTH - 10)
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000100,B00010000,B01000000,
@@ -152,13 +129,33 @@
           B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00011111,B11111111,B11111000
         };
 
+      #else // HOTENDS > 3
+
+        #define STATUS_HEATERS_WIDTH 120
+        #define STATUS_BED_TEXT_X   (STATUS_HEATERS_WIDTH - 10)
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000100,B00010000,B01000000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00000010,B00001000,B00100000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000010,B00001000,B00100000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00000100,B00010000,B01000000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00001000,B00100000,B10000000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00010000,B01000001,B00000000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00010000,B01000001,B00000000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00001000,B00100000,B10000000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000100,B00010000,B01000000,
+          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,
+          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00011111,B11111111,B11111000,
+          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00011111,B11111111,B11111000
+        };
+
       #endif // HOTENDS
 
     #else // !HAS_HEATED_BED || HOTENDS > 3
 
       #if HOTENDS == 1
 
-        #define STATUS_HEATERS_WIDTH  11
+        #define STATUS_HEATERS_WIDTH  12
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,
@@ -213,7 +210,7 @@
           B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
         };
 
-      #elif HOTENDS > 3
+      #elif HOTENDS == 4
 
         #define STATUS_HEATERS_WIDTH  84
 
@@ -232,6 +229,25 @@
           B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
         };
 
+      #elif HOTENDS > 4
+
+        #define STATUS_HEATERS_WIDTH  108
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111000,B01110000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B11110000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00111000,B11110000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00011111,B01100000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00011111,B01100000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00111100,B11110000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,
+          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,
+          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,
+          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
+        };
+
       #endif // HOTENDS
 
     #endif // !HAS_HEATED_BED || HOTENDS > 3
@@ -241,10 +257,16 @@
     //
     // Status Screen Hotends bitmaps
     //
-
     #if HOTENDS
 
-      #define STATUS_HOTEND1_WIDTH  12
+      #define STATUS_HOTEND1_WIDTH  16
+
+      #define MAX_HOTEND_BITMAPS     5
+      #if HOTENDS > MAX_HOTEND_BITMAPS
+        #define STATUS_HOTEND_BITMAPS MAX_HOTEND_BITMAPS
+      #else
+        #define STATUS_HOTEND_BITMAPS HOTENDS
+      #endif
 
       #if HOTENDS == 1 || ENABLED(STATUS_HOTEND_NUMBERLESS)
 
@@ -286,17 +308,6 @@
 
         #if HOTENDS >= 2
 
-          #if HAS_HEATED_BED
-            #define MAX_HOTEND_BITMAPS 3
-          #else
-            #define MAX_HOTEND_BITMAPS 4
-          #endif
-          #if HOTENDS > MAX_HOTEND_BITMAPS
-            #define STATUS_HOTEND_BITMAPS MAX_HOTEND_BITMAPS
-          #else
-            #define STATUS_HOTEND_BITMAPS HOTENDS
-          #endif
-
           #ifdef STATUS_HOTEND_ANIM
 
             const unsigned char status_hotend1_a_bmp[] PROGMEM = {
@@ -450,7 +461,7 @@
 
         #endif
 
-        #if STATUS_HOTEND_BITMAPS >= 4 && !HAS_HEATED_BED
+        #if STATUS_HOTEND_BITMAPS >= 4
 
           #ifdef STATUS_HOTEND_ANIM
 
@@ -505,7 +516,7 @@
 
         #endif
 
-        #if STATUS_HOTEND_BITMAPS >= 5 && !HAS_HEATED_BED
+        #if STATUS_HOTEND_BITMAPS >= 5
 
           #ifdef STATUS_HOTEND_ANIM
 
@@ -571,17 +582,16 @@
 //
 // Default Status Screen Bed bitmaps
 //
-
-#if !STATUS_BED_WIDTH && DISABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS < 4
+#if !STATUS_BED_WIDTH && HAS_HEATED_BED && DISABLED(STATUS_COMBINE_HEATERS)
 
   #if ENABLED(STATUS_ALT_BED_BITMAP)
 
     #define STATUS_BED_ANIM
     #define STATUS_BED_WIDTH  24
     #ifndef STATUS_BED_X
-      #define STATUS_BED_X    72
+      #define STATUS_BED_X   (LCD_PIXEL_WIDTH - (STATUS_BED_BYTEWIDTH + STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH) * 8)
     #endif
-    #define STATUS_BED_TEXT_X (STATUS_BED_X + 13)
+    #define STATUS_BED_TEXT_X (STATUS_BED_X + 11)
 
     const unsigned char status_bed_bmp[] PROGMEM = {
       B11111111,B11111111,B11000000,
@@ -612,7 +622,7 @@
 
     #define STATUS_BED_WIDTH  21
     #ifndef STATUS_BED_X
-      #define STATUS_BED_X    80
+      #define STATUS_BED_X   (LCD_PIXEL_WIDTH - (STATUS_BED_BYTEWIDTH + STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH) * 8)
     #endif
 
     #ifdef STATUS_BED_ANIM
@@ -657,81 +667,104 @@
     #endif
 
   #endif
+#else
+  #define STATUS_BED_WIDTH 0
+#endif
 
-#endif // !STATUS_BED_WIDTH && !STATUS_COMBINE_HEATERS && HAS_HEATED_BED && HOTENDS < 4
+#if !STATUS_CHAMBER_WIDTH && HAS_HEATED_CHAMBER && ((HOTENDS <= 4 && !HAS_HEATED_BED) || (HOTENDS <= 3 && HAS_HEATED_BED))
 
-#if HAS_HEATED_CHAMBER
+  #define STATUS_CHAMBER_WIDTH 21
 
-  #define STATUS_CHAMBER_WIDTH 16
+  #if STATUS_HEATERS_WIDTH
+    #if ENABLED(STATUS_COMBINE_HEATERS)
+      #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - 2 - (STATUS_CHAMBER_BYTEWIDTH) * 8)
+    #elif HAS_FAN0 && HAS_HEATED_BED && HOTENDS <= 2
+      #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - 2 - (STATUS_HEATERS_BYTEWIDTH - STATUS_CHAMBER_BYTEWIDTH) * 8)
+    #elif HAS_FAN0 && !HAS_HEATED_BED
+      #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - (STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH) * 8)
+    #else
+      #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - (STATUS_CHAMBER_BYTEWIDTH) * 8)
+    #endif
+  #endif
 
   #ifdef STATUS_CHAMBER_ANIM
 
     const unsigned char status_chamber_bmp[] PROGMEM = {
-      B11111111,B11111111,
-      B10000000,B00000001,
-      B10000000,B00000001,
-      B10000000,B00000001,
-      B10000000,B00000001,
-      B10000000,B00000001,
-      B10000000,B00000001,
-      B10000000,B00000001,
-      B10000000,B00000001,
-      B10000000,B00000001,
-      B11111111,B11111111,
-      B11111111,B11111111
+      B00011111,B11111111,B11111000,
+      B00010000,B00000000,B00001000,
+      B00010000,B00000000,B00001000,
+      B00010000,B00000000,B00001000,
+      B00010000,B00000000,B00001000,
+      B00010000,B00000000,B00001000,
+      B00010000,B00000000,B00001000,
+      B00010000,B00000000,B00001000,
+      B00010000,B00000000,B00001000,
+      B00010000,B00000000,B00001000,
+      B00011111,B11111111,B11111000,
+      B00011111,B11111111,B11111000
     };
 
     const unsigned char status_chamber_on_bmp[] PROGMEM = {
-      B11111111,B11111111,
-      B10000000,B00000001,
-      B10000100,B00100001,
-      B10000010,B00010001,
-      B10000010,B00010001,
-      B10000100,B00100001,
-      B10001000,B01000001,
-      B10001000,B01000001,
-      B10000100,B00100001,
-      B10000000,B00000001,
-      B11111111,B11111111,
-      B11111111,B11111111
+      B00011111,B11111111,B11111000,
+      B00010000,B00000000,B00001000,
+      B00010000,B10000100,B00001000,
+      B00010000,B01000010,B00001000,
+      B00010000,B01000010,B00001000,
+      B00010000,B10000100,B00001000,
+      B00010001,B00001000,B00001000,
+      B00010001,B00001000,B00001000,
+      B00010000,B10000100,B00001000,
+      B00010000,B00000000,B00001000,
+      B00011111,B11111111,B11111000,
+      B00011111,B11111111,B11111000
     };
 
   #else
 
     const unsigned char status_chamber_bmp[] PROGMEM = {
-      B11111111,B11111111,
-      B10000000,B00000001,
-      B10000100,B00100001,
-      B10000010,B00010001,
-      B10000010,B00010001,
-      B10000100,B00100001,
-      B10001000,B01000001,
-      B10001000,B01000001,
-      B10000100,B00100001,
-      B10000000,B00000001,
-      B11111111,B11111111,
-      B11111111,B11111111
+      B00011111,B11111111,B11111000,
+      B00010000,B00000000,B00001000,
+      B00010000,B10000100,B00001000,
+      B00010000,B01000010,B00001000,
+      B00010000,B01000010,B00001000,
+      B00010000,B10000100,B00001000,
+      B00010001,B00001000,B00001000,
+      B00010001,B00001000,B00001000,
+      B00010000,B10000100,B00001000,
+      B00010000,B00000000,B00001000,
+      B00011111,B11111111,B11111000,
+      B00011111,B11111111,B11111000
     };
 
   #endif
+#else // HAS_HEATED_CHAMBER
+  #define STATUS_CHAMBER_WIDTH 0
+#endif
 
-#endif // HAS_HEATED_CHAMBER
+#define BED_CHAM (HAS_HEATED_BED || HAS_HEATED_CHAMBER)
+#define BED_CHAM_FAN (BED_CHAM || HAS_FAN0)
 
-// Can also be overridden in Configuration.h
+// Can also be overridden in Configuration_adv.h
 // If you can afford it, try the 3-frame fan animation!
 // Don't compile in the fan animation with no fan
-#if !HAS_FAN0
+#if !HAS_FAN0 || (HOTENDS == 5 || (HOTENDS == 4 && BED_CHAM) || (ENABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_CHAMBER))
   #undef STATUS_FAN_FRAMES
-#elif !defined(STATUS_FAN_FRAMES)
+#elif !STATUS_FAN_FRAMES
   #define STATUS_FAN_FRAMES 2
 #elif STATUS_FAN_FRAMES > 4
   #error "A maximum of 4 fan animation frames is currently supported."
 #endif
 
+#if HOTENDS > 4
+  #undef STATUS_LOGO_WIDTH
+  #undef STATUS_HEATERS_XSPACE
+  #define STATUS_HEATERS_XSPACE 24
+#endif
+
 //
 // Provide default Fan Bitmaps
 //
-#if !defined(STATUS_FAN_WIDTH) && STATUS_FAN_FRAMES > 0
+#if !STATUS_FAN_WIDTH && STATUS_FAN_FRAMES > 0
 
   // Provide a fan animation if none exists
 
@@ -836,7 +869,7 @@
 
   #elif STATUS_FAN_FRAMES == 3
 
-    #define STATUS_FAN_WIDTH 21
+    #define STATUS_FAN_WIDTH 20
 
     #if ENABLED(STATUS_ALT_FAN_BITMAP)
 
@@ -974,7 +1007,7 @@
 
   #elif STATUS_FAN_FRAMES == 4
 
-    #define STATUS_FAN_WIDTH 21
+    #define STATUS_FAN_WIDTH 20
 
     #if ENABLED(STATUS_ALT_FAN_BITMAP)
 
@@ -1153,6 +1186,35 @@
     #endif // !STATUS_ALT_FAN_BITMAP
 
   #endif
+#else
+  #undef STATUS_FAN_FRAMES
+  #define STATUS_FAN_WIDTH 0
+#endif
+
+#if ENABLED(CUSTOM_STATUS_SCREEN_IMAGE)
+
+  #if STATUS_HOTEND1_WIDTH
+    #define HAS_SPACES ((LCD_PIXEL_WIDTH - (HOTENDS * STATUS_HOTEND1_WIDTH) - STATUS_BED_WIDTH - STATUS_CHAMBER_WIDTH - STATUS_FAN_WIDTH - 24) < STATUS_LOGO_WIDTH ? true : false)
+  #elif STATUS_HEATERS_WIDTH
+    #define HAS_SPACES (((LCD_PIXEL_WIDTH - STATUS_HEATERS_WIDTH - STATUS_BED_WIDTH - STATUS_CHAMBER_WIDTH - STATUS_FAN_WIDTH - 20) < STATUS_LOGO_WIDTH) ? true : false)
+  #endif
+
+  #if HAS_SPACES
+    #undef STATUS_LOGO_WIDTH
+  #endif
+
+  #if (HOTENDS > 1 && STATUS_LOGO_WIDTH && BED_CHAM_FAN) || ( HOTENDS >= 3 && !BED_CHAM_FAN)
+    #define _STATUS_HEATERS_X(H,S,N) (((LCD_PIXEL_WIDTH - (H * (S + N)) - STATUS_LOGO_WIDTH - STATUS_BED_WIDTH - STATUS_CHAMBER_WIDTH - STATUS_FAN_WIDTH) / 2) + STATUS_LOGO_WIDTH)
+    #if STATUS_HOTEND1_WIDTH
+      #if HOTENDS > 2
+        #define STATUS_HEATERS_X _STATUS_HEATERS_X(HOTENDS, STATUS_HOTEND1_WIDTH, 6)
+      #else
+        #define STATUS_HEATERS_X _STATUS_HEATERS_X(HOTENDS, STATUS_HOTEND1_WIDTH, 4)
+      #endif
+    #else
+      #define STATUS_HEATERS_X _STATUS_HEATERS_X(1, STATUS_HEATERS_WIDTH, 4)
+    #endif
+  #endif
 
 #endif
 
@@ -1187,14 +1249,25 @@
 #if STATUS_HOTEND1_WIDTH || STATUS_HEATERS_WIDTH
 
   #ifndef STATUS_HEATERS_XSPACE
-    #define STATUS_HEATERS_XSPACE 24 // Like the included bitmaps
+    #if (HOTENDS == 3 || HOTENDS == 4) && ENABLED(STATUS_COMBINE_HEATERS)
+      #define STATUS_HEATERS_XSPACE 24
+    #else
+      #define STATUS_HEATERS_XSPACE 26 // Like the included bitmaps
+    #endif
   #endif
 
   #ifndef STATUS_HEATERS_X
     #if STATUS_LOGO_BYTEWIDTH
-      #define STATUS_HEATERS_X ((STATUS_LOGO_BYTEWIDTH + 0) * 8)
+      #define STATUS_HEATERS_X (STATUS_LOGO_BYTEWIDTH * 8)
+    #elif ((STATUS_CHAMBER_WIDTH || STATUS_FAN_WIDTH) && (STATUS_BED_WIDTH  && STATUS_HOTEND_BITMAPS == 3)) || \
+          ((STATUS_CHAMBER_WIDTH || STATUS_FAN_WIDTH  ||  STATUS_BED_WIDTH) && STATUS_HOTEND_BITMAPS == 4)
+      #define STATUS_HEATERS_X 5
     #else
-      #define STATUS_HEATERS_X 8 // Like the included bitmaps
+      #if ENABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS <= 4
+        #define STATUS_HEATERS_X 5
+      #else
+        #define STATUS_HEATERS_X 8 // Like the included bitmaps
+      #endif
     #endif
   #endif
 
@@ -1205,7 +1278,6 @@
   //
   // Hotend images. A base hotend image and optional "ON" state image.
   //
-
   #ifndef STATUS_HOTEND_BITMAPS
     #define STATUS_HOTEND_BITMAPS 1
   #endif
@@ -1257,20 +1329,21 @@
   #ifndef STATUS_HOTEND2_X
     #define STATUS_HOTEND2_X STATUS_HOTEND1_X + STATUS_HEATERS_XSPACE
   #endif
-  #ifndef STATUS_HOTEND3_X
-    #define STATUS_HOTEND3_X STATUS_HOTEND2_X + STATUS_HEATERS_XSPACE
-  #endif
-  #ifndef STATUS_HOTEND4_X
-    #define STATUS_HOTEND4_X STATUS_HOTEND3_X + STATUS_HEATERS_XSPACE
-  #endif
-  #ifndef STATUS_HOTEND5_X
-    #define STATUS_HOTEND5_X STATUS_HOTEND4_X + STATUS_HEATERS_XSPACE
-  #endif
-  #ifndef STATUS_HOTEND6_X
-    #define STATUS_HOTEND6_X STATUS_HOTEND5_X + STATUS_HEATERS_XSPACE
-  #endif
 
   #if HOTENDS > 2
+    #ifndef STATUS_HOTEND3_X
+      #define STATUS_HOTEND3_X STATUS_HOTEND2_X + STATUS_HEATERS_XSPACE
+    #endif
+    #ifndef STATUS_HOTEND4_X
+      #define STATUS_HOTEND4_X STATUS_HOTEND3_X + STATUS_HEATERS_XSPACE
+    #endif
+    #ifndef STATUS_HOTEND5_X
+      #define STATUS_HOTEND5_X STATUS_HOTEND4_X + STATUS_HEATERS_XSPACE
+    #endif
+    #ifndef STATUS_HOTEND6_X
+      #define STATUS_HOTEND6_X STATUS_HOTEND5_X + STATUS_HEATERS_XSPACE
+    #endif
+
     constexpr uint8_t status_hotend_x[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_X, STATUS_HOTEND2_X, STATUS_HOTEND3_X, STATUS_HOTEND4_X, STATUS_HOTEND5_X, STATUS_HOTEND6_X);
     #define STATUS_HOTEND_X(N) status_hotend_x[N]
   #elif HOTENDS > 1
@@ -1303,7 +1376,7 @@
     #endif
   #endif
 
-  #if STATUS_HOTEND_BITMAPS > 1
+  #if STATUS_HOTEND_BITMAPS > 1 && DISABLED(STATUS_HOTEND_NUMBERLESS)
     #define TEST_BITMAP_OFF status_hotend1_a_bmp
     #define TEST_BITMAP_ON  status_hotend1_b_bmp
   #else
@@ -1341,7 +1414,11 @@
     #define STATUS_HOTEND_X(N) (STATUS_HEATERS_X + 2 + (N) * (STATUS_HEATERS_XSPACE))
   #endif
   #ifndef STATUS_HOTEND_TEXT_X
-    #define STATUS_HOTEND_TEXT_X(N) (STATUS_HEATERS_X + 6 + (N) * (STATUS_HEATERS_XSPACE))
+    #if HOTENDS == 4 && STATUS_LOGO_WIDTH
+      #define STATUS_HOTEND_TEXT_X(N) (STATUS_HEATERS_X + 6 + (N) * (STATUS_HEATERS_XSPACE))
+    #else
+      #define STATUS_HOTEND_TEXT_X(N) (STATUS_HEATERS_X + 6 + (N) * (STATUS_HEATERS_XSPACE))
+    #endif
   #endif
   #ifndef STATUS_HEATERS_BYTEWIDTH
     #define STATUS_HEATERS_BYTEWIDTH BW(STATUS_HEATERS_WIDTH)
@@ -1363,16 +1440,13 @@
 //
 // Chamber Bitmap Properties
 //
-#ifndef STATUS_CHAMBER_WIDTH
-  #define STATUS_CHAMBER_WIDTH 0
-#endif
 #ifndef STATUS_CHAMBER_BYTEWIDTH
   #define STATUS_CHAMBER_BYTEWIDTH BW(STATUS_CHAMBER_WIDTH)
 #endif
-#if STATUS_CHAMBER_WIDTH && !STATUS_HEATERS_WIDTH
+#if STATUS_CHAMBER_WIDTH
 
   #ifndef STATUS_CHAMBER_X
-    #define STATUS_CHAMBER_X (128 - (STATUS_FAN_BYTEWIDTH + STATUS_CHAMBER_BYTEWIDTH) * 8)
+    #define STATUS_CHAMBER_X (LCD_PIXEL_WIDTH - (STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH) * 8)
   #endif
 
   #ifndef STATUS_CHAMBER_HEIGHT
@@ -1388,7 +1462,7 @@
   #endif
 
   #ifndef STATUS_CHAMBER_TEXT_X
-    #define STATUS_CHAMBER_TEXT_X (STATUS_CHAMBER_X + 7)
+    #define STATUS_CHAMBER_TEXT_X (STATUS_CHAMBER_X + 11)
   #endif
 
   static_assert(
@@ -1407,16 +1481,13 @@
 //
 // Bed Bitmap Properties
 //
-#ifndef STATUS_BED_WIDTH
-  #define STATUS_BED_WIDTH 0
-#endif
 #ifndef STATUS_BED_BYTEWIDTH
   #define STATUS_BED_BYTEWIDTH BW(STATUS_BED_WIDTH)
 #endif
 #if STATUS_BED_WIDTH && !STATUS_HEATERS_WIDTH
 
   #ifndef STATUS_BED_X
-    #define STATUS_BED_X (128 - (STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_BED_BYTEWIDTH) * 8)
+    #define STATUS_BED_X (LCD_PIXEL_WIDTH - (STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_BED_BYTEWIDTH) * 8)
   #endif
 
   #ifndef STATUS_BED_HEIGHT
@@ -1432,7 +1503,7 @@
   #endif
 
   #ifndef STATUS_BED_TEXT_X
-    #define STATUS_BED_TEXT_X (STATUS_BED_X + 11)
+    #define STATUS_BED_TEXT_X (STATUS_BED_X + 9)
   #endif
 
   static_assert(
@@ -1445,27 +1516,23 @@
       "Status bed bitmap (status_bed_on_bmp) dimensions don't match data."
     );
   #endif
-
 #endif
 
 //
 // Fan Bitmap Properties
 //
-#ifndef STATUS_FAN_WIDTH
-  #define STATUS_FAN_WIDTH 0
-#endif
 #ifndef STATUS_FAN_BYTEWIDTH
   #define STATUS_FAN_BYTEWIDTH BW(STATUS_FAN_WIDTH)
 #endif
 #if STATUS_FAN_FRAMES
   #ifndef STATUS_FAN_X
-    #define STATUS_FAN_X (128 - (STATUS_FAN_BYTEWIDTH) * 8)
+    #define STATUS_FAN_X (LCD_PIXEL_WIDTH - (STATUS_FAN_BYTEWIDTH) * 8)
   #endif
   #ifndef STATUS_FAN_Y
     #define STATUS_FAN_Y 1
   #endif
   #ifndef STATUS_FAN_TEXT_X
-    #define STATUS_FAN_TEXT_X 103
+    #define STATUS_FAN_TEXT_X (STATUS_FAN_X - 1)
   #endif
   #ifndef STATUS_FAN_TEXT_Y
     #define STATUS_FAN_TEXT_Y 28

commit 6715fd159c56351efa83eaad48da30ce3121bcba
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Sun Aug 18 01:40:01 2019 +0200

    Animated Marlin boot screen (#14961)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 6f0d10831a..ed2978a42b 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1220,10 +1220,10 @@
     #define STATUS_HOTEND4_WIDTH STATUS_HOTEND3_WIDTH
   #endif
   #ifndef STATUS_HOTEND5_WIDTH
-    #define STATUS_HOTEND5_WIDTH STATUS_HOTEND5_WIDTH
+    #define STATUS_HOTEND5_WIDTH STATUS_HOTEND4_WIDTH
   #endif
   #ifndef STATUS_HOTEND6_WIDTH
-    #define STATUS_HOTEND6_WIDTH STATUS_HOTEND6_WIDTH
+    #define STATUS_HOTEND6_WIDTH STATUS_HOTEND5_WIDTH
   #endif
 
   constexpr uint8_t status_hotend_width[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_WIDTH, STATUS_HOTEND2_WIDTH, STATUS_HOTEND3_WIDTH, STATUS_HOTEND4_WIDTH, STATUS_HOTEND5_WIDTH, STATUS_HOTEND6_WIDTH);
@@ -1264,10 +1264,10 @@
     #define STATUS_HOTEND4_X STATUS_HOTEND3_X + STATUS_HEATERS_XSPACE
   #endif
   #ifndef STATUS_HOTEND5_X
-    #define STATUS_HOTEND5_X STATUS_HOTEND5_X + STATUS_HEATERS_XSPACE
+    #define STATUS_HOTEND5_X STATUS_HOTEND4_X + STATUS_HEATERS_XSPACE
   #endif
   #ifndef STATUS_HOTEND6_X
-    #define STATUS_HOTEND6_X STATUS_HOTEND6_X + STATUS_HEATERS_XSPACE
+    #define STATUS_HOTEND6_X STATUS_HOTEND5_X + STATUS_HEATERS_XSPACE
   #endif
 
   #if HOTENDS > 2
@@ -1291,10 +1291,10 @@
         #define STATUS_HOTEND4_TEXT_X STATUS_HOTEND3_TEXT_X + STATUS_HEATERS_XSPACE
       #endif
       #ifndef STATUS_HOTEND5_TEXT_X
-        #define STATUS_HOTEND5_TEXT_X STATUS_HOTEND5_TEXT_X + STATUS_HEATERS_XSPACE
+        #define STATUS_HOTEND5_TEXT_X STATUS_HOTEND4_TEXT_X + STATUS_HEATERS_XSPACE
       #endif
       #ifndef STATUS_HOTEND6_TEXT_X
-        #define STATUS_HOTEND6_TEXT_X STATUS_HOTEND6_TEXT_X + STATUS_HEATERS_XSPACE
+        #define STATUS_HOTEND6_TEXT_X STATUS_HOTEND5_TEXT_X + STATUS_HEATERS_XSPACE
       #endif
       constexpr uint8_t status_hotend_text_x[] = ARRAY_N(HOTENDS, STATUS_HOTEND1_TEXT_X, STATUS_HOTEND2_TEXT_X, STATUS_HOTEND3_TEXT_X, STATUS_HOTEND4_TEXT_X, STATUS_HOTEND5_TEXT_X, STATUS_HOTEND6_TEXT_X);
       #define STATUS_HOTEND_TEXT_X(N) status_hotend_text_x[N]

commit 750a16ad385dca893d482cb51d8af2ac3f8a1da1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 5 18:01:21 2019 -0500

    Fix MIN/MAX function collision with macros

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 8031db2d73..6f0d10831a 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1170,7 +1170,7 @@
     #define STATUS_LOGO_X 0
   #endif
   #ifndef STATUS_LOGO_Y
-    #define STATUS_LOGO_Y MIN(0, 10 - (STATUS_LOGO_HEIGHT) / 2)
+    #define STATUS_LOGO_Y _MIN(0, 10 - (STATUS_LOGO_HEIGHT) / 2)
   #endif
   #ifndef STATUS_LOGO_HEIGHT
     #define STATUS_LOGO_HEIGHT (sizeof(status_logo_bmp) / (STATUS_LOGO_BYTEWIDTH))

commit b6546ea33a0f6eebee520dda516e04d3b68ded55
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jul 4 22:44:12 2019 -0500

    Add include guards to some headers

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index df5f83e5ce..8031db2d73 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -19,6 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 /**
  * Standard Marlin Status Screen bitmaps

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 8e31841fc4..df5f83e5ce 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 123e58d9c3c8cf85236d8c0d6f74427b0f4196a1
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Thu May 30 19:31:50 2019 -0400

    Heated Chamber for Graphical LCD (#14190)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 438d57ac7f..8e31841fc4 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -659,6 +659,63 @@
 
 #endif // !STATUS_BED_WIDTH && !STATUS_COMBINE_HEATERS && HAS_HEATED_BED && HOTENDS < 4
 
+#if HAS_HEATED_CHAMBER
+
+  #define STATUS_CHAMBER_WIDTH 16
+
+  #ifdef STATUS_CHAMBER_ANIM
+
+    const unsigned char status_chamber_bmp[] PROGMEM = {
+      B11111111,B11111111,
+      B10000000,B00000001,
+      B10000000,B00000001,
+      B10000000,B00000001,
+      B10000000,B00000001,
+      B10000000,B00000001,
+      B10000000,B00000001,
+      B10000000,B00000001,
+      B10000000,B00000001,
+      B10000000,B00000001,
+      B11111111,B11111111,
+      B11111111,B11111111
+    };
+
+    const unsigned char status_chamber_on_bmp[] PROGMEM = {
+      B11111111,B11111111,
+      B10000000,B00000001,
+      B10000100,B00100001,
+      B10000010,B00010001,
+      B10000010,B00010001,
+      B10000100,B00100001,
+      B10001000,B01000001,
+      B10001000,B01000001,
+      B10000100,B00100001,
+      B10000000,B00000001,
+      B11111111,B11111111,
+      B11111111,B11111111
+    };
+
+  #else
+
+    const unsigned char status_chamber_bmp[] PROGMEM = {
+      B11111111,B11111111,
+      B10000000,B00000001,
+      B10000100,B00100001,
+      B10000010,B00010001,
+      B10000010,B00010001,
+      B10000100,B00100001,
+      B10001000,B01000001,
+      B10001000,B01000001,
+      B10000100,B00100001,
+      B10000000,B00000001,
+      B11111111,B11111111,
+      B11111111,B11111111
+    };
+
+  #endif
+
+#endif // HAS_HEATED_CHAMBER
+
 // Can also be overridden in Configuration.h
 // If you can afford it, try the 3-frame fan animation!
 // Don't compile in the fan animation with no fan
@@ -1302,6 +1359,50 @@
 
 #endif
 
+//
+// Chamber Bitmap Properties
+//
+#ifndef STATUS_CHAMBER_WIDTH
+  #define STATUS_CHAMBER_WIDTH 0
+#endif
+#ifndef STATUS_CHAMBER_BYTEWIDTH
+  #define STATUS_CHAMBER_BYTEWIDTH BW(STATUS_CHAMBER_WIDTH)
+#endif
+#if STATUS_CHAMBER_WIDTH && !STATUS_HEATERS_WIDTH
+
+  #ifndef STATUS_CHAMBER_X
+    #define STATUS_CHAMBER_X (128 - (STATUS_FAN_BYTEWIDTH + STATUS_CHAMBER_BYTEWIDTH) * 8)
+  #endif
+
+  #ifndef STATUS_CHAMBER_HEIGHT
+    #ifdef STATUS_CHAMBER_ANIM
+      #define STATUS_CHAMBER_HEIGHT(S) ((S) ? sizeof(status_chamber_on_bmp) / (STATUS_CHAMBER_BYTEWIDTH) : sizeof(status_chamber_bmp) / (STATUS_CHAMBER_BYTEWIDTH))
+    #else
+      #define STATUS_CHAMBER_HEIGHT(S) (sizeof(status_chamber_bmp) / (STATUS_CHAMBER_BYTEWIDTH))
+    #endif
+  #endif
+
+  #ifndef STATUS_CHAMBER_Y
+    #define STATUS_CHAMBER_Y(S) (20 - STATUS_CHAMBER_HEIGHT(S))
+  #endif
+
+  #ifndef STATUS_CHAMBER_TEXT_X
+    #define STATUS_CHAMBER_TEXT_X (STATUS_CHAMBER_X + 7)
+  #endif
+
+  static_assert(
+    sizeof(status_chamber_bmp) == (STATUS_CHAMBER_BYTEWIDTH) * (STATUS_CHAMBER_HEIGHT(0)),
+    "Status chamber bitmap (status_chamber_bmp) dimensions don't match data."
+  );
+  #ifdef STATUS_CHAMBER_ANIM
+    static_assert(
+      sizeof(status_chamber_on_bmp) == (STATUS_CHAMBER_BYTEWIDTH) * (STATUS_CHAMBER_HEIGHT(1)),
+      "Status chamber bitmap (status_chamber_on_bmp) dimensions don't match data."
+    );
+  #endif
+
+#endif
+
 //
 // Bed Bitmap Properties
 //
@@ -1314,7 +1415,7 @@
 #if STATUS_BED_WIDTH && !STATUS_HEATERS_WIDTH
 
   #ifndef STATUS_BED_X
-    #define STATUS_BED_X (128 - (STATUS_FAN_BYTEWIDTH + STATUS_BED_BYTEWIDTH) * 8)
+    #define STATUS_BED_X (128 - (STATUS_CHAMBER_BYTEWIDTH + STATUS_FAN_BYTEWIDTH + STATUS_BED_BYTEWIDTH) * 8)
   #endif
 
   #ifndef STATUS_BED_HEIGHT

commit 6214c997c0800cf47d2d786ee4e338900c576d51
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 13 04:26:40 2019 -0500

    Remove includes of <binary.h>

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index f93395f884..438d57ac7f 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -27,8 +27,6 @@
  * http://marlinfw.org/tools/u8glib/converter.html
  */
 
-#include <binary.h>
-
 #include "../../inc/MarlinConfig.h"
 
 #define BW(N) ((N + 7) / 8)

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index a8092ad3a6..f93395f884 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 637fb20c7540f3fe3dbc955bff5162d0eb089401
Author: kAdonis <35379348+kAdonis@users.noreply.github.com>
Date:   Thu Jan 3 13:03:06 2019 +0100

    Allow 4 fan animation frames (#12772)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 8c1d3af86c..a8092ad3a6 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -668,8 +668,8 @@
   #undef STATUS_FAN_FRAMES
 #elif !defined(STATUS_FAN_FRAMES)
   #define STATUS_FAN_FRAMES 2
-#elif STATUS_FAN_FRAMES > 3
-  #error "Only 3 fan animation frames currently supported."
+#elif STATUS_FAN_FRAMES > 4
+  #error "A maximum of 4 fan animation frames is currently supported."
 #endif
 
 //

commit daf07e4200592ecd9cee639e2b9ecbb43462a558
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Dec 9 11:59:58 2018 -0600

    Align classic bed icon consistently

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 22248e18fb..8c1d3af86c 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -74,25 +74,25 @@
 
     #if HAS_HEATED_BED && HOTENDS <= 3
 
-      #define STATUS_BED_WIDTH  18
+      #define STATUS_BED_WIDTH  21
 
       #if HOTENDS == 0
 
-        #define STATUS_HEATERS_WIDTH  18
+        #define STATUS_HEATERS_WIDTH  21
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00100000,B10000010,B00000000,
+          B00000100,B00010000,B01000000,
+          B00000010,B00001000,B00100000,
+          B00000010,B00001000,B00100000,
+          B00000100,B00010000,B01000000,
+          B00001000,B00100000,B10000000,
           B00010000,B01000001,B00000000,
           B00010000,B01000001,B00000000,
-          B00100000,B10000010,B00000000,
-          B01000001,B00000100,B00000000,
-          B10000010,B00001000,B00000000,
-          B10000010,B00001000,B00000000,
-          B01000001,B00000100,B00000000,
-          B00100000,B10000010,B00000000,
+          B00001000,B00100000,B10000000,
+          B00000100,B00010000,B01000000,
           B00000000,B00000000,B00000000,
-          B11111111,B11111111,B11000000,
-          B11111111,B11111111,B11000000
+          B00011111,B11111111,B11111000,
+          B00011111,B11111111,B11111000
         };
 
       #elif HOTENDS == 1
@@ -101,18 +101,18 @@
         #define STATUS_BED_X 80
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
+          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
+          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
           B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
-          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,
-          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,
-          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
           B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
-          B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,
-          B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000
+          B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000,
+          B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000
         };
 
       #elif HOTENDS == 2
@@ -120,18 +120,18 @@
         #define STATUS_HEATERS_WIDTH  90
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000010,B00001000,B00100000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00001000,B00100000,B10000000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000100,B00010000,B01000000,
           B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,
-          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000
+          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000,
+          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111000
         };
 
       #else // HOTENDS > 2
@@ -139,18 +139,18 @@
         #define STATUS_HEATERS_WIDTH  90
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
-          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,
-          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,
-          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,
-          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,
-          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,
-          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,
-          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,
-          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,
-          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,
+          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000100,B00010000,B01000000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000010,B00001000,B00100000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000010,B00001000,B00100000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000100,B00010000,B01000000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00001000,B00100000,B10000000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00010000,B01000001,B00000000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00001000,B00100000,B10000000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000100,B00010000,B01000000,
           B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,
-          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,
-          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000
+          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00011111,B11111111,B11111000,
+          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00011111,B11111111,B11111000
         };
 
       #endif // HOTENDS
@@ -611,7 +611,7 @@
 
   #else
 
-    #define STATUS_BED_WIDTH  18
+    #define STATUS_BED_WIDTH  21
     #ifndef STATUS_BED_X
       #define STATUS_BED_X    80
     #endif
@@ -619,8 +619,8 @@
     #ifdef STATUS_BED_ANIM
 
       const unsigned char status_bed_bmp[] PROGMEM = {
-        B11111111,B11111111,B11000000,
-        B11111111,B11111111,B11000000
+        B00011111,B11111111,B11111000,
+        B00011111,B11111111,B11111000
       };
 
       const unsigned char status_bed_on_bmp[] PROGMEM = {

commit 7a361ad36aff4a6dc89ebb7dd66c02a532b6cb2c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Dec 3 05:55:33 2018 -0600

    Alternative fan image option (#12579)
    
    * Alternative fan bitmap
    * Move bed over by 3px

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 9a0f079442..22248e18fb 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -582,7 +582,7 @@
     #ifndef STATUS_BED_X
       #define STATUS_BED_X    72
     #endif
-    #define STATUS_BED_TEXT_X STATUS_BED_X + 13
+    #define STATUS_BED_TEXT_X (STATUS_BED_X + 13)
 
     const unsigned char status_bed_bmp[] PROGMEM = {
       B11111111,B11111111,B11000000,
@@ -624,35 +624,35 @@
       };
 
       const unsigned char status_bed_on_bmp[] PROGMEM = {
-        B00100000,B10000010,B00000000,
+        B00000100,B00010000,B01000000,
+        B00000010,B00001000,B00100000,
+        B00000010,B00001000,B00100000,
+        B00000100,B00010000,B01000000,
+        B00001000,B00100000,B10000000,
         B00010000,B01000001,B00000000,
         B00010000,B01000001,B00000000,
-        B00100000,B10000010,B00000000,
-        B01000001,B00000100,B00000000,
-        B10000010,B00001000,B00000000,
-        B10000010,B00001000,B00000000,
-        B01000001,B00000100,B00000000,
-        B00100000,B10000010,B00000000,
+        B00001000,B00100000,B10000000,
+        B00000100,B00010000,B01000000,
         B00000000,B00000000,B00000000,
-        B11111111,B11111111,B11000000,
-        B11111111,B11111111,B11000000
+        B00011111,B11111111,B11111000,
+        B00011111,B11111111,B11111000
       };
 
     #else
 
       const unsigned char status_bed_bmp[] PROGMEM = {
-        B00100000,B10000010,B00000000,
+        B00000100,B00010000,B01000000,
+        B00000010,B00001000,B00100000,
+        B00000010,B00001000,B00100000,
+        B00000100,B00010000,B01000000,
+        B00001000,B00100000,B10000000,
         B00010000,B01000001,B00000000,
         B00010000,B01000001,B00000000,
-        B00100000,B10000010,B00000000,
-        B01000001,B00000100,B00000000,
-        B10000010,B00001000,B00000000,
-        B10000010,B00001000,B00000000,
-        B01000001,B00000100,B00000000,
-        B00100000,B10000010,B00000000,
+        B00001000,B00100000,B10000000,
+        B00000100,B00010000,B01000000,
         B00000000,B00000000,B00000000,
-        B11111111,B11111111,B11000000,
-        B11111111,B11111111,B11000000
+        B00011111,B11111111,B11111000,
+        B00011111,B11111111,B11111000
       };
 
     #endif
@@ -684,206 +684,417 @@
     #define STATUS_FAN_Y      2
     #define STATUS_FAN_WIDTH 20
 
-    const unsigned char status_fan0_bmp[] PROGMEM = {
-      B00111111,B11111111,B11110000,
-      B00111000,B00000000,B01110000,
-      B00110000,B11111100,B00110000,
-      B00100000,B11111100,B00010000,
-      B00100000,B01111000,B00010000,
-      B00100000,B00110000,B00010000,
-      B00101100,B00000000,B11010000,
-      B00101110,B00110001,B11010000,
-      B00101111,B01111011,B11010000,
-      B00101111,B01111011,B11010000,
-      B00101110,B00110001,B11010000,
-      B00101100,B00000000,B11010000,
-      B00100000,B00110000,B00010000,
-      B00100000,B01111000,B00010000,
-      B00100000,B11111100,B00010000,
-      B00110000,B11111100,B00110000,
-      B00111000,B00000000,B01110000,
-      B00111111,B11111111,B11110000
-    };
+    #if ENABLED(STATUS_ALT_FAN_BITMAP)
 
-    #if STATUS_FAN_FRAMES == 2
-      const unsigned char status_fan1_bmp[] PROGMEM = {
+      const unsigned char status_fan0_bmp[] PROGMEM = {
+        B00000001,B11111110,B00000000,
+        B00000110,B00000001,B10000000,
+        B00001000,B11111100,B01000000,
+        B00010000,B11111100,B00100000,
+        B00010000,B01111000,B00100000,
+        B00100000,B00110000,B00010000,
+        B00101100,B00000000,B11010000,
+        B00101110,B00110001,B11010000,
+        B00101111,B01111011,B11010000,
+        B00101111,B01111011,B11010000,
+        B00101110,B00110001,B11010000,
+        B00101100,B00000000,B11010000,
+        B00100000,B00110000,B00010000,
+        B00010000,B01111000,B00100000,
+        B00010000,B11111100,B00100000,
+        B00001000,B11111100,B01000000,
+        B00000110,B00000001,B10000000,
+        B00000001,B11111110,B00000000
+      };
+
+      #if STATUS_FAN_FRAMES == 2
+        const unsigned char status_fan1_bmp[] PROGMEM = {
+          B00000001,B11111110,B00000000,
+          B00000110,B00000001,B10000000,
+          B00001001,B10000110,B01000000,
+          B00010011,B10000111,B00100000,
+          B00010111,B10000111,B10100000,
+          B00101111,B10000111,B11010000,
+          B00101111,B00000011,B11010000,
+          B00100000,B00110000,B00010000,
+          B00100000,B01111000,B00010000,
+          B00100000,B01111000,B00010000,
+          B00100000,B00110000,B00010000,
+          B00101111,B00000011,B11010000,
+          B00101111,B10000111,B11010000,
+          B00010111,B10000111,B10100000,
+          B00010011,B10000111,B00100000,
+          B00001001,B10000110,B01000000,
+          B00000110,B00000001,B10000000,
+          B00000001,B11111110,B00000000
+        };
+      #endif
+
+    #else // !STATUS_ALT_FAN_BITMAP
+
+      const unsigned char status_fan0_bmp[] PROGMEM = {
         B00111111,B11111111,B11110000,
         B00111000,B00000000,B01110000,
-        B00110001,B10000110,B00110000,
-        B00100011,B10000111,B00010000,
-        B00100111,B10000111,B10010000,
-        B00101111,B10000111,B11010000,
-        B00101111,B00000011,B11010000,
-        B00100000,B00110000,B00010000,
-        B00100000,B01111000,B00010000,
+        B00110000,B11111100,B00110000,
+        B00100000,B11111100,B00010000,
         B00100000,B01111000,B00010000,
         B00100000,B00110000,B00010000,
-        B00101111,B00000011,B11010000,
-        B00101111,B10000111,B11010000,
-        B00100111,B10000111,B10010000,
-        B00100011,B10000111,B00010000,
-        B00110001,B10000110,B00110000,
+        B00101100,B00000000,B11010000,
+        B00101110,B00110001,B11010000,
+        B00101111,B01111011,B11010000,
+        B00101111,B01111011,B11010000,
+        B00101110,B00110001,B11010000,
+        B00101100,B00000000,B11010000,
+        B00100000,B00110000,B00010000,
+        B00100000,B01111000,B00010000,
+        B00100000,B11111100,B00010000,
+        B00110000,B11111100,B00110000,
         B00111000,B00000000,B01110000,
         B00111111,B11111111,B11110000
       };
-    #endif
+
+      #if STATUS_FAN_FRAMES == 2
+        const unsigned char status_fan1_bmp[] PROGMEM = {
+          B00111111,B11111111,B11110000,
+          B00111000,B00000000,B01110000,
+          B00110001,B10000110,B00110000,
+          B00100011,B10000111,B00010000,
+          B00100111,B10000111,B10010000,
+          B00101111,B10000111,B11010000,
+          B00101111,B00000011,B11010000,
+          B00100000,B00110000,B00010000,
+          B00100000,B01111000,B00010000,
+          B00100000,B01111000,B00010000,
+          B00100000,B00110000,B00010000,
+          B00101111,B00000011,B11010000,
+          B00101111,B10000111,B11010000,
+          B00100111,B10000111,B10010000,
+          B00100011,B10000111,B00010000,
+          B00110001,B10000110,B00110000,
+          B00111000,B00000000,B01110000,
+          B00111111,B11111111,B11110000
+        };
+      #endif
+
+    #endif // !STATUS_ALT_FAN_BITMAP
 
   #elif STATUS_FAN_FRAMES == 3
 
     #define STATUS_FAN_WIDTH 21
 
-    const unsigned char status_fan0_bmp[] PROGMEM = {
-      B00111111,B11111111,B11111000,
-      B00111110,B00000000,B11111000,
-      B00111001,B00000001,B00111000,
-      B00110111,B10000011,B11011000,
-      B00110111,B10000011,B11011000,
-      B00101111,B11000111,B11101000,
-      B00100111,B11000111,B11001000,
-      B00100001,B11111111,B00001000,
-      B00100000,B01111100,B00001000,
-      B00100000,B01111100,B00001000,
-      B00100000,B01111100,B00001000,
-      B00100001,B11111111,B00001000,
-      B00100111,B11000111,B11001000,
-      B00101111,B11000111,B11101000,
-      B00110111,B10000011,B11011000,
-      B00110111,B10000011,B11011000,
-      B00111001,B00000001,B00111000,
-      B00111110,B00000000,B11111000,
-      B00111111,B11111111,B11111000
-    };
-    const unsigned char status_fan1_bmp[] PROGMEM = {
-      B00111111,B11111111,B11111000,
-      B00111110,B00110000,B11111000,
-      B00111001,B11110000,B00111000,
-      B00110001,B11110000,B00011000,
-      B00110000,B11110000,B00011000,
-      B00100000,B11110000,B01101000,
-      B00100000,B00110001,B11101000,
-      B00100000,B00111001,B11101000,
-      B00100000,B01111111,B11111000,
-      B00111111,B11111111,B11111000,
-      B00111111,B11111100,B00001000,
-      B00101111,B00111000,B00001000,
-      B00101110,B00011000,B00001000,
-      B00101100,B00011110,B00001000,
-      B00110000,B00011110,B00011000,
-      B00110000,B00011111,B00011000,
-      B00111000,B00011111,B00111000,
-      B00111110,B00011000,B11111000,
-      B00111111,B11111111,B11111000
-    };
-    const unsigned char status_fan2_bmp[] PROGMEM = {
-      B00111111,B11111111,B11111000,
-      B00111110,B00011000,B11111000,
-      B00111000,B00011111,B00111000,
-      B00110000,B00011111,B10011000,
-      B00110100,B00011111,B00011000,
-      B00101110,B00011110,B00001000,
-      B00101111,B00011100,B00001000,
-      B00101111,B10111000,B00001000,
-      B00111111,B11111100,B00001000,
-      B00111111,B11111111,B11111000,
-      B00100000,B01111111,B11111000,
-      B00100000,B00111011,B11101000,
-      B00100000,B01110001,B11101000,
-      B00100000,B11110000,B11101000,
-      B00110001,B11110000,B01011000,
-      B00110011,B11110000,B00011000,
-      B00111001,B11110000,B00111000,
-      B00111110,B00110000,B11111000,
-      B00111111,B11111111,B11111000
-    };
+    #if ENABLED(STATUS_ALT_FAN_BITMAP)
+
+      const unsigned char status_fan0_bmp[] PROGMEM = {
+        B00000001,B11111111,B00000000,
+        B00000110,B00000000,B11000000,
+        B00001001,B00000001,B00100000,
+        B00010111,B10000011,B11010000,
+        B00010111,B10000011,B11010000,
+        B00101111,B11000111,B11101000,
+        B00100111,B11000111,B11001000,
+        B00100001,B11111111,B00001000,
+        B00100000,B01111100,B00001000,
+        B00100000,B01111100,B00001000,
+        B00100000,B01111100,B00001000,
+        B00100001,B11111111,B00001000,
+        B00100111,B11000111,B11001000,
+        B00101111,B11000111,B11101000,
+        B00010111,B10000011,B11010000,
+        B00010111,B10000011,B11010000,
+        B00001001,B00000001,B00100000,
+        B00000110,B00000000,B11000000,
+        B00000001,B11111111,B00000000
+      };
+      const unsigned char status_fan1_bmp[] PROGMEM = {
+        B00000001,B11111111,B00000000,
+        B00000110,B00110000,B11000000,
+        B00001001,B11110000,B00100000,
+        B00010001,B11110000,B00010000,
+        B00010000,B11110000,B00010000,
+        B00100000,B11110000,B01101000,
+        B00100000,B00110001,B11101000,
+        B00100000,B00111001,B11101000,
+        B00100000,B01111111,B11111000,
+        B00111111,B11111111,B11111000,
+        B00111111,B11111100,B00001000,
+        B00101111,B00111000,B00001000,
+        B00101110,B00011000,B00001000,
+        B00101100,B00011110,B00001000,
+        B00010000,B00011110,B00010000,
+        B00010000,B00011111,B00010000,
+        B00001000,B00011111,B00100000,
+        B00000110,B00011000,B11000000,
+        B00000001,B11111111,B00000000
+      };
+      const unsigned char status_fan2_bmp[] PROGMEM = {
+        B00000001,B11111111,B00000000,
+        B00000110,B00011000,B11000000,
+        B00001000,B00011111,B00100000,
+        B00010000,B00011111,B10010000,
+        B00010100,B00011111,B00010000,
+        B00101110,B00011110,B00001000,
+        B00101111,B00011100,B00001000,
+        B00101111,B10111000,B00001000,
+        B00111111,B11111100,B00001000,
+        B00111111,B11111111,B11111000,
+        B00100000,B01111111,B11111000,
+        B00100000,B00111011,B11101000,
+        B00100000,B01110001,B11101000,
+        B00100000,B11110000,B11101000,
+        B00010001,B11110000,B01010000,
+        B00010011,B11110000,B00010000,
+        B00001001,B11110000,B00100000,
+        B00000110,B00110000,B11000000,
+        B00000001,B11111111,B00000000
+      };
+
+    #else // !STATUS_ALT_FAN_BITMAP
+
+      const unsigned char status_fan0_bmp[] PROGMEM = {
+        B00111111,B11111111,B11111000,
+        B00111110,B00000000,B11111000,
+        B00111001,B00000001,B00111000,
+        B00110111,B10000011,B11011000,
+        B00110111,B10000011,B11011000,
+        B00101111,B11000111,B11101000,
+        B00100111,B11000111,B11001000,
+        B00100001,B11111111,B00001000,
+        B00100000,B01111100,B00001000,
+        B00100000,B01111100,B00001000,
+        B00100000,B01111100,B00001000,
+        B00100001,B11111111,B00001000,
+        B00100111,B11000111,B11001000,
+        B00101111,B11000111,B11101000,
+        B00110111,B10000011,B11011000,
+        B00110111,B10000011,B11011000,
+        B00111001,B00000001,B00111000,
+        B00111110,B00000000,B11111000,
+        B00111111,B11111111,B11111000
+      };
+      const unsigned char status_fan1_bmp[] PROGMEM = {
+        B00111111,B11111111,B11111000,
+        B00111110,B00110000,B11111000,
+        B00111001,B11110000,B00111000,
+        B00110001,B11110000,B00011000,
+        B00110000,B11110000,B00011000,
+        B00100000,B11110000,B01101000,
+        B00100000,B00110001,B11101000,
+        B00100000,B00111001,B11101000,
+        B00100000,B01111111,B11111000,
+        B00111111,B11111111,B11111000,
+        B00111111,B11111100,B00001000,
+        B00101111,B00111000,B00001000,
+        B00101110,B00011000,B00001000,
+        B00101100,B00011110,B00001000,
+        B00110000,B00011110,B00011000,
+        B00110000,B00011111,B00011000,
+        B00111000,B00011111,B00111000,
+        B00111110,B00011000,B11111000,
+        B00111111,B11111111,B11111000
+      };
+      const unsigned char status_fan2_bmp[] PROGMEM = {
+        B00111111,B11111111,B11111000,
+        B00111110,B00011000,B11111000,
+        B00111000,B00011111,B00111000,
+        B00110000,B00011111,B10011000,
+        B00110100,B00011111,B00011000,
+        B00101110,B00011110,B00001000,
+        B00101111,B00011100,B00001000,
+        B00101111,B10111000,B00001000,
+        B00111111,B11111100,B00001000,
+        B00111111,B11111111,B11111000,
+        B00100000,B01111111,B11111000,
+        B00100000,B00111011,B11101000,
+        B00100000,B01110001,B11101000,
+        B00100000,B11110000,B11101000,
+        B00110001,B11110000,B01011000,
+        B00110011,B11110000,B00011000,
+        B00111001,B11110000,B00111000,
+        B00111110,B00110000,B11111000,
+        B00111111,B11111111,B11111000
+      };
+
+    #endif // !STATUS_ALT_FAN_BITMAP
 
   #elif STATUS_FAN_FRAMES == 4
 
     #define STATUS_FAN_WIDTH 21
 
-    const unsigned char status_fan0_bmp[] PROGMEM = {
-      B00111111,B11111111,B11111000,
-      B00111110,B00000000,B11111000,
-      B00111000,B00111111,B00111000,
-      B00110000,B01111110,B00011000,
-      B00110000,B01111100,B00011000,
-      B00101000,B01111100,B00001000,
-      B00101100,B00111000,B00001000,
-      B00101111,B00111001,B11001000,
-      B00101111,B11111111,B11101000,
-      B00101111,B11000111,B11101000,
-      B00101111,B11111111,B11101000,
-      B00100111,B00111001,B11101000,
-      B00100000,B00111000,B01101000,
-      B00100000,B01111100,B00101000,
-      B00110000,B01111100,B00011000,
-      B00110000,B11111100,B00011000,
-      B00111001,B11111000,B00111000,
-      B00111110,B00000000,B11111000,
-      B00111111,B11111111,B11111000
-    };
-    const unsigned char status_fan1_bmp[] PROGMEM = {
-      B00111111,B11111111,B11111000,
-      B00111110,B00000000,B11111000,
-      B00111000,B00001111,B00111000,
-      B00110100,B00011111,B11011000,
-      B00110110,B00011111,B10011000,
-      B00101111,B00011111,B00001000,
-      B00101111,B10011110,B00001000,
-      B00101111,B11111100,B00001000,
-      B00101111,B11011100,B00001000,
-      B00100111,B11101111,B11001000,
-      B00100000,B01110111,B11101000,
-      B00100000,B01111111,B11101000,
-      B00100000,B11110011,B11101000,
-      B00100001,B11110001,B11101000,
-      B00110011,B11110000,B11011000,
-      B00110111,B11110000,B01011000,
-      B00111001,B11100000,B00111000,
-      B00111110,B00000000,B11111000,
-      B00111111,B11111111,B11111000
-    };
-    const unsigned char status_fan2_bmp[] PROGMEM = {
-      B00111111,B11111111,B11111000,
-      B00111110,B10000000,B11111000,
-      B00111001,B10000000,B00111000,
-      B00110111,B10000001,B11011000,
-      B00110111,B11000011,B11011000,
-      B00100111,B11000111,B11101000,
-      B00100011,B11000111,B11111000,
-      B00100001,B11111111,B10001000,
-      B00100000,B01101100,B00001000,
-      B00100000,B01101100,B00001000,
-      B00100000,B01101100,B00001000,
-      B00100011,B11111111,B00001000,
-      B00111111,B11000111,B10001000,
-      B00101111,B11000111,B11001000,
-      B00110111,B10000111,B11011000,
-      B00110111,B00000011,B11011000,
-      B00111000,B00000011,B00111000,
-      B00111110,B00000010,B11111000,
-      B00111111,B11111111,B11111000
-    };
-    const unsigned char status_fan3_bmp[] PROGMEM = {
-      B00111111,B11111111,B11111000,
-      B00111110,B00000000,B11111000,
-      B00111001,B11110000,B00111000,
-      B00110001,B11100000,B00011000,
-      B00110001,B11100000,B00011000,
-      B00100001,B11100001,B11101000,
-      B00100000,B11110011,B11101000,
-      B00100000,B01111111,B11101000,
-      B00100000,B01110111,B11101000,
-      B00101000,B11101110,B00101000,
-      B00101111,B11011100,B00001000,
-      B00101111,B11111100,B00001000,
-      B00101111,B10011110,B00001000,
-      B00101111,B00001111,B00001000,
-      B00110000,B00001111,B00011000,
-      B00110000,B00001111,B00011000,
-      B00111000,B00011111,B00111000,
-      B00111110,B00000000,B11111000,
-      B00111111,B11111111,B11111000
-    };
+    #if ENABLED(STATUS_ALT_FAN_BITMAP)
+
+      const unsigned char status_fan0_bmp[] PROGMEM = {
+        B00000001,B11111111,B00000000,
+        B00000110,B00000000,B11000000,
+        B00001000,B00111111,B00100000,
+        B00010000,B01111110,B00010000,
+        B00010000,B01111100,B00010000,
+        B00101000,B01111100,B00001000,
+        B00101100,B00111000,B00001000,
+        B00101111,B00111001,B11001000,
+        B00101111,B11111111,B11101000,
+        B00101111,B11000111,B11101000,
+        B00101111,B11111111,B11101000,
+        B00100111,B00111001,B11101000,
+        B00100000,B00111000,B01101000,
+        B00100000,B01111100,B00101000,
+        B00010000,B01111100,B00010000,
+        B00010000,B11111100,B00010000,
+        B00001001,B11111000,B00100000,
+        B00000110,B00000000,B11000000,
+        B00000001,B11111111,B00000000
+      };
+      const unsigned char status_fan1_bmp[] PROGMEM = {
+        B00000001,B11111111,B00000000,
+        B00000110,B00000000,B11000000,
+        B00001000,B00001111,B00100000,
+        B00010100,B00011111,B11010000,
+        B00010110,B00011111,B10010000,
+        B00101111,B00011111,B00001000,
+        B00101111,B10011110,B00001000,
+        B00101111,B11111100,B00001000,
+        B00101111,B11011100,B00001000,
+        B00100111,B11101111,B11001000,
+        B00100000,B01110111,B11101000,
+        B00100000,B01111111,B11101000,
+        B00100000,B11110011,B11101000,
+        B00100001,B11110001,B11101000,
+        B00010011,B11110000,B11010000,
+        B00010111,B11110000,B01010000,
+        B00001001,B11100000,B00100000,
+        B00000110,B00000000,B11000000,
+        B00000001,B11111111,B00000000
+      };
+      const unsigned char status_fan2_bmp[] PROGMEM = {
+        B00000001,B11111111,B00000000,
+        B00000110,B10000000,B11000000,
+        B00001001,B10000000,B00100000,
+        B00010111,B10000001,B11010000,
+        B00010111,B11000011,B11010000,
+        B00100111,B11000111,B11101000,
+        B00100011,B11000111,B11111000,
+        B00100001,B11111111,B10001000,
+        B00100000,B01101100,B00001000,
+        B00100000,B01101100,B00001000,
+        B00100000,B01101100,B00001000,
+        B00100011,B11111111,B00001000,
+        B00111111,B11000111,B10001000,
+        B00101111,B11000111,B11001000,
+        B00010111,B10000111,B11010000,
+        B00010111,B00000011,B11010000,
+        B00001000,B00000011,B00100000,
+        B00000110,B00000010,B11000000,
+        B00000001,B11111111,B00000000
+      };
+      const unsigned char status_fan3_bmp[] PROGMEM = {
+        B00000001,B11111111,B00000000,
+        B00000110,B00000000,B11000000,
+        B00001001,B11110000,B00100000,
+        B00010001,B11100000,B00010000,
+        B00010001,B11100000,B00010000,
+        B00100001,B11100001,B11101000,
+        B00100000,B11110011,B11101000,
+        B00100000,B01111111,B11101000,
+        B00100000,B01110111,B11101000,
+        B00101000,B11101110,B00101000,
+        B00101111,B11011100,B00001000,
+        B00101111,B11111100,B00001000,
+        B00101111,B10011110,B00001000,
+        B00101111,B00001111,B00001000,
+        B00010000,B00001111,B00010000,
+        B00010000,B00001111,B00010000,
+        B00001000,B00011111,B00100000,
+        B00000110,B00000000,B11000000,
+        B00000001,B11111111,B00000000
+      };
+
+    #else // !STATUS_ALT_FAN_BITMAP
+
+      const unsigned char status_fan0_bmp[] PROGMEM = {
+        B00111111,B11111111,B11111000,
+        B00111110,B00000000,B11111000,
+        B00111000,B00111111,B00111000,
+        B00110000,B01111110,B00011000,
+        B00110000,B01111100,B00011000,
+        B00101000,B01111100,B00001000,
+        B00101100,B00111000,B00001000,
+        B00101111,B00111001,B11001000,
+        B00101111,B11111111,B11101000,
+        B00101111,B11000111,B11101000,
+        B00101111,B11111111,B11101000,
+        B00100111,B00111001,B11101000,
+        B00100000,B00111000,B01101000,
+        B00100000,B01111100,B00101000,
+        B00110000,B01111100,B00011000,
+        B00110000,B11111100,B00011000,
+        B00111001,B11111000,B00111000,
+        B00111110,B00000000,B11111000,
+        B00111111,B11111111,B11111000
+      };
+      const unsigned char status_fan1_bmp[] PROGMEM = {
+        B00111111,B11111111,B11111000,
+        B00111110,B00000000,B11111000,
+        B00111000,B00001111,B00111000,
+        B00110100,B00011111,B11011000,
+        B00110110,B00011111,B10011000,
+        B00101111,B00011111,B00001000,
+        B00101111,B10011110,B00001000,
+        B00101111,B11111100,B00001000,
+        B00101111,B11011100,B00001000,
+        B00100111,B11101111,B11001000,
+        B00100000,B01110111,B11101000,
+        B00100000,B01111111,B11101000,
+        B00100000,B11110011,B11101000,
+        B00100001,B11110001,B11101000,
+        B00110011,B11110000,B11011000,
+        B00110111,B11110000,B01011000,
+        B00111001,B11100000,B00111000,
+        B00111110,B00000000,B11111000,
+        B00111111,B11111111,B11111000
+      };
+      const unsigned char status_fan2_bmp[] PROGMEM = {
+        B00111111,B11111111,B11111000,
+        B00111110,B10000000,B11111000,
+        B00111001,B10000000,B00111000,
+        B00110111,B10000001,B11011000,
+        B00110111,B11000011,B11011000,
+        B00100111,B11000111,B11101000,
+        B00100011,B11000111,B11111000,
+        B00100001,B11111111,B10001000,
+        B00100000,B01101100,B00001000,
+        B00100000,B01101100,B00001000,
+        B00100000,B01101100,B00001000,
+        B00100011,B11111111,B00001000,
+        B00111111,B11000111,B10001000,
+        B00101111,B11000111,B11001000,
+        B00110111,B10000111,B11011000,
+        B00110111,B00000011,B11011000,
+        B00111000,B00000011,B00111000,
+        B00111110,B00000010,B11111000,
+        B00111111,B11111111,B11111000
+      };
+      const unsigned char status_fan3_bmp[] PROGMEM = {
+        B00111111,B11111111,B11111000,
+        B00111110,B00000000,B11111000,
+        B00111001,B11110000,B00111000,
+        B00110001,B11100000,B00011000,
+        B00110001,B11100000,B00011000,
+        B00100001,B11100001,B11101000,
+        B00100000,B11110011,B11101000,
+        B00100000,B01111111,B11101000,
+        B00100000,B01110111,B11101000,
+        B00101000,B11101110,B00101000,
+        B00101111,B11011100,B00001000,
+        B00101111,B11111100,B00001000,
+        B00101111,B10011110,B00001000,
+        B00101111,B00001111,B00001000,
+        B00110000,B00001111,B00011000,
+        B00110000,B00001111,B00011000,
+        B00111000,B00011111,B00111000,
+        B00111110,B00000000,B11111000,
+        B00111111,B11111111,B11111000
+      };
+
+    #endif // !STATUS_ALT_FAN_BITMAP
 
   #endif
 
@@ -1121,7 +1332,7 @@
   #endif
 
   #ifndef STATUS_BED_TEXT_X
-    #define STATUS_BED_TEXT_X (STATUS_BED_X + 8)
+    #define STATUS_BED_TEXT_X (STATUS_BED_X + 11)
   #endif
 
   static_assert(

commit 4f9ec9ab4518c74e34daa1164eb2587e7e39d7a6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Nov 27 21:15:52 2018 -0600

    Add heating progress bars (#12543)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 027fa1cd0c..9a0f079442 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -31,6 +31,8 @@
 
 #include "../../inc/MarlinConfig.h"
 
+#define BW(N) ((N + 7) / 8)
+
 #if ENABLED(CUSTOM_STATUS_SCREEN_IMAGE)
 
   /**
@@ -49,13 +51,18 @@
 
 #endif
 
+#if ENABLED(STATUS_COMBINE_HEATERS)
+  #undef STATUS_HOTEND_ANIM
+  #undef STATUS_BED_ANIM
+#endif
+
 //
 // Default Status Screen Heater or Hotends bitmaps
 //
 
 #if !STATUS_HEATERS_WIDTH && !STATUS_HOTEND1_WIDTH
 
-  #ifdef STATUS_COMBINE_HEATERS
+  #if ENABLED(STATUS_COMBINE_HEATERS)
 
     //
     // Status Screen Combined Heater bitmaps
@@ -67,6 +74,8 @@
 
     #if HAS_HEATED_BED && HOTENDS <= 3
 
+      #define STATUS_BED_WIDTH  18
+
       #if HOTENDS == 0
 
         #define STATUS_HEATERS_WIDTH  18
@@ -89,6 +98,7 @@
       #elif HOTENDS == 1
 
         #define STATUS_HEATERS_WIDTH  90
+        #define STATUS_BED_X 80
 
         const unsigned char status_heaters_bmp[] PROGMEM = {
           B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
@@ -237,7 +247,7 @@
 
       #define STATUS_HOTEND1_WIDTH  12
 
-      #if HOTENDS == 1 || defined(STATUS_HOTEND_NUMBERLESS)
+      #if HOTENDS == 1 || ENABLED(STATUS_HOTEND_NUMBERLESS)
 
         const unsigned char status_hotend_a_bmp[] PROGMEM = {
           B00011111,B11100000,
@@ -563,9 +573,9 @@
 // Default Status Screen Bed bitmaps
 //
 
-#if !STATUS_BED_WIDTH && !defined(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS < 4
+#if !STATUS_BED_WIDTH && DISABLED(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS < 4
 
-  #ifdef STATUS_ALT_BED_BITMAP
+  #if ENABLED(STATUS_ALT_BED_BITMAP)
 
     #define STATUS_BED_ANIM
     #define STATUS_BED_WIDTH  24
@@ -886,7 +896,7 @@
   #define STATUS_LOGO_WIDTH 0
 #endif
 #ifndef STATUS_LOGO_BYTEWIDTH
-  #define STATUS_LOGO_BYTEWIDTH ((STATUS_LOGO_WIDTH + 7) / 8)
+  #define STATUS_LOGO_BYTEWIDTH BW(STATUS_LOGO_WIDTH)
 #endif
 #if STATUS_LOGO_WIDTH
   #ifndef STATUS_LOGO_X
@@ -953,22 +963,22 @@
   #define STATUS_HOTEND_WIDTH(N) status_hotend_width[N]
 
   #ifndef STATUS_HOTEND1_BYTEWIDTH
-    #define STATUS_HOTEND1_BYTEWIDTH ((STATUS_HOTEND1_WIDTH + 7) / 8)
+    #define STATUS_HOTEND1_BYTEWIDTH BW(STATUS_HOTEND1_WIDTH)
   #endif
   #ifndef STATUS_HOTEND2_BYTEWIDTH
-    #define STATUS_HOTEND2_BYTEWIDTH ((STATUS_HOTEND2_WIDTH + 7) / 8)
+    #define STATUS_HOTEND2_BYTEWIDTH BW(STATUS_HOTEND2_WIDTH)
   #endif
   #ifndef STATUS_HOTEND3_BYTEWIDTH
-    #define STATUS_HOTEND3_BYTEWIDTH ((STATUS_HOTEND3_WIDTH + 7) / 8)
+    #define STATUS_HOTEND3_BYTEWIDTH BW(STATUS_HOTEND3_WIDTH)
   #endif
   #ifndef STATUS_HOTEND4_BYTEWIDTH
-    #define STATUS_HOTEND4_BYTEWIDTH ((STATUS_HOTEND4_WIDTH + 7) / 8)
+    #define STATUS_HOTEND4_BYTEWIDTH BW(STATUS_HOTEND4_WIDTH)
   #endif
   #ifndef STATUS_HOTEND5_BYTEWIDTH
-    #define STATUS_HOTEND5_BYTEWIDTH ((STATUS_HOTEND5_WIDTH + 7) / 8)
+    #define STATUS_HOTEND5_BYTEWIDTH BW(STATUS_HOTEND5_WIDTH)
   #endif
   #ifndef STATUS_HOTEND6_BYTEWIDTH
-    #define STATUS_HOTEND6_BYTEWIDTH ((STATUS_HOTEND6_WIDTH + 7) / 8)
+    #define STATUS_HOTEND6_BYTEWIDTH BW(STATUS_HOTEND6_WIDTH)
   #endif
 
   constexpr uint8_t status_hotend_bytewidth[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_BYTEWIDTH, STATUS_HOTEND2_BYTEWIDTH, STATUS_HOTEND3_BYTEWIDTH, STATUS_HOTEND4_BYTEWIDTH, STATUS_HOTEND5_BYTEWIDTH, STATUS_HOTEND6_BYTEWIDTH);
@@ -1054,11 +1064,20 @@
 
 #elif STATUS_HEATERS_WIDTH
 
+  #ifndef STATUS_HEATERS_XSPACE
+    #define STATUS_HEATERS_XSPACE 24
+  #endif
+  #ifndef STATUS_HOTEND_WIDTH
+    #define STATUS_HOTEND_WIDTH(N) 10
+  #endif
+  #ifndef STATUS_HOTEND_X
+    #define STATUS_HOTEND_X(N) (STATUS_HEATERS_X + 2 + (N) * (STATUS_HEATERS_XSPACE))
+  #endif
   #ifndef STATUS_HOTEND_TEXT_X
     #define STATUS_HOTEND_TEXT_X(N) (STATUS_HEATERS_X + 6 + (N) * (STATUS_HEATERS_XSPACE))
   #endif
   #ifndef STATUS_HEATERS_BYTEWIDTH
-    #define STATUS_HEATERS_BYTEWIDTH ((STATUS_HEATERS_WIDTH + 7) / 8)
+    #define STATUS_HEATERS_BYTEWIDTH BW(STATUS_HEATERS_WIDTH)
   #endif
   #ifndef STATUS_HEATERS_HEIGHT
     #define STATUS_HEATERS_HEIGHT (sizeof(status_heaters_bmp) / (STATUS_HEATERS_BYTEWIDTH))
@@ -1081,9 +1100,9 @@
   #define STATUS_BED_WIDTH 0
 #endif
 #ifndef STATUS_BED_BYTEWIDTH
-  #define STATUS_BED_BYTEWIDTH ((STATUS_BED_WIDTH + 7) / 8)
+  #define STATUS_BED_BYTEWIDTH BW(STATUS_BED_WIDTH)
 #endif
-#if STATUS_BED_WIDTH
+#if STATUS_BED_WIDTH && !STATUS_HEATERS_WIDTH
 
   #ifndef STATUS_BED_X
     #define STATUS_BED_X (128 - (STATUS_FAN_BYTEWIDTH + STATUS_BED_BYTEWIDTH) * 8)
@@ -1125,7 +1144,7 @@
   #define STATUS_FAN_WIDTH 0
 #endif
 #ifndef STATUS_FAN_BYTEWIDTH
-  #define STATUS_FAN_BYTEWIDTH ((STATUS_FAN_WIDTH + 7) / 8)
+  #define STATUS_FAN_BYTEWIDTH BW(STATUS_FAN_WIDTH)
 #endif
 #if STATUS_FAN_FRAMES
   #ifndef STATUS_FAN_X

commit b57343c25546067218451a9c8d315d2d87386735
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Nov 23 23:14:56 2018 -0600

    Put status screen options in Configuration_adv.h

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 544fe1afce..027fa1cd0c 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -47,16 +47,7 @@
     #error "Your custom _Statusscreen.h needs to be converted for Marlin 2.0."
   #endif
 
-#else // !CUSTOM_STATUS_SCREEN_IMAGE
-
-  //#define STATUS_COMBINE_HEATERS
-  //#define STATUS_HOTEND_NUMBERLESS
-  #define STATUS_HOTEND_INVERTED
-  #define STATUS_HOTEND_ANIM
-  #define STATUS_BED_ANIM
-  //#define ALTERNATE_BED_BITMAP
-
-#endif // !CUSTOM_STATUS_SCREEN_IMAGE
+#endif
 
 //
 // Default Status Screen Heater or Hotends bitmaps
@@ -574,7 +565,7 @@
 
 #if !STATUS_BED_WIDTH && !defined(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS < 4
 
-  #ifdef ALTERNATE_BED_BITMAP
+  #ifdef STATUS_ALT_BED_BITMAP
 
     #define STATUS_BED_ANIM
     #define STATUS_BED_WIDTH  24
@@ -662,25 +653,23 @@
 
 // Can also be overridden in Configuration.h
 // If you can afford it, try the 3-frame fan animation!
-#ifndef FAN_ANIM_FRAMES
-  #define FAN_ANIM_FRAMES 2
-#elif FAN_ANIM_FRAMES > 3
-  #error "Only 3 fan animation frames currently supported."
-#endif
-
 // Don't compile in the fan animation with no fan
 #if !HAS_FAN0
-  #undef FAN_ANIM_FRAMES
+  #undef STATUS_FAN_FRAMES
+#elif !defined(STATUS_FAN_FRAMES)
+  #define STATUS_FAN_FRAMES 2
+#elif STATUS_FAN_FRAMES > 3
+  #error "Only 3 fan animation frames currently supported."
 #endif
 
 //
 // Provide default Fan Bitmaps
 //
-#if !defined(STATUS_FAN_WIDTH) && FAN_ANIM_FRAMES > 0
+#if !defined(STATUS_FAN_WIDTH) && STATUS_FAN_FRAMES > 0
 
   // Provide a fan animation if none exists
 
-  #if FAN_ANIM_FRAMES <= 2
+  #if STATUS_FAN_FRAMES <= 2
 
     #define STATUS_FAN_Y      2
     #define STATUS_FAN_WIDTH 20
@@ -706,7 +695,7 @@
       B00111111,B11111111,B11110000
     };
 
-    #if FAN_ANIM_FRAMES == 2
+    #if STATUS_FAN_FRAMES == 2
       const unsigned char status_fan1_bmp[] PROGMEM = {
         B00111111,B11111111,B11110000,
         B00111000,B00000000,B01110000,
@@ -729,7 +718,7 @@
       };
     #endif
 
-  #elif FAN_ANIM_FRAMES == 3
+  #elif STATUS_FAN_FRAMES == 3
 
     #define STATUS_FAN_WIDTH 21
 
@@ -797,7 +786,7 @@
       B00111111,B11111111,B11111000
     };
 
-  #elif FAN_ANIM_FRAMES == 4
+  #elif STATUS_FAN_FRAMES == 4
 
     #define STATUS_FAN_WIDTH 21
 
@@ -1138,7 +1127,7 @@
 #ifndef STATUS_FAN_BYTEWIDTH
   #define STATUS_FAN_BYTEWIDTH ((STATUS_FAN_WIDTH + 7) / 8)
 #endif
-#if FAN_ANIM_FRAMES
+#if STATUS_FAN_FRAMES
   #ifndef STATUS_FAN_X
     #define STATUS_FAN_X (128 - (STATUS_FAN_BYTEWIDTH) * 8)
   #endif
@@ -1156,11 +1145,11 @@
   #endif
   #define FAN_BMP_SIZE (STATUS_FAN_BYTEWIDTH) * (STATUS_FAN_HEIGHT)
   static_assert(sizeof(status_fan0_bmp) == FAN_BMP_SIZE, "Status fan bitmap (status_fan0_bmp) dimensions don't match data.");
-  #if FAN_ANIM_FRAMES > 1
+  #if STATUS_FAN_FRAMES > 1
     static_assert(sizeof(status_fan1_bmp) == FAN_BMP_SIZE, "Status fan bitmap (status_fan1_bmp) dimensions don't match data.");
-    #if FAN_ANIM_FRAMES > 2
+    #if STATUS_FAN_FRAMES > 2
       static_assert(sizeof(status_fan2_bmp) == FAN_BMP_SIZE, "Status fan bitmap (status_fan2_bmp) dimensions don't match data.");
-      #if FAN_ANIM_FRAMES > 3
+      #if STATUS_FAN_FRAMES > 3
         static_assert(sizeof(status_fan3_bmp) == FAN_BMP_SIZE, "Status fan bitmap (status_fan3_bmp) dimensions don't match data.");
       #endif
     #endif

commit ee423dcdd0e89d96b5d3b9461d71737abe8b5186
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 21 00:50:06 2018 -0600

    Invert hotend bitmaps, by default

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index b5baa34137..544fe1afce 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -49,8 +49,9 @@
 
 #else // !CUSTOM_STATUS_SCREEN_IMAGE
 
-  //#define COMBINED_HEATER_BITMAP
+  //#define STATUS_COMBINE_HEATERS
   //#define STATUS_HOTEND_NUMBERLESS
+  #define STATUS_HOTEND_INVERTED
   #define STATUS_HOTEND_ANIM
   #define STATUS_BED_ANIM
   //#define ALTERNATE_BED_BITMAP
@@ -63,7 +64,7 @@
 
 #if !STATUS_HEATERS_WIDTH && !STATUS_HOTEND1_WIDTH
 
-  #ifdef COMBINED_HEATER_BITMAP
+  #ifdef STATUS_COMBINE_HEATERS
 
     //
     // Status Screen Combined Heater bitmaps
@@ -235,7 +236,7 @@
 
     #endif // !HAS_HEATED_BED || HOTENDS > 3
 
-  #else // !COMBINED_HEATER_BITMAP
+  #else // !STATUS_COMBINE_HEATERS
 
     //
     // Status Screen Hotends bitmaps
@@ -247,7 +248,7 @@
 
       #if HOTENDS == 1 || defined(STATUS_HOTEND_NUMBERLESS)
 
-        const unsigned char status_hotend_bmp[] PROGMEM = {
+        const unsigned char status_hotend_a_bmp[] PROGMEM = {
           B00011111,B11100000,
           B00111111,B11110000,
           B00111111,B11110000,
@@ -264,7 +265,7 @@
 
         #ifdef STATUS_HOTEND_ANIM
 
-          const unsigned char status_hotend_on_bmp[] PROGMEM = {
+          const unsigned char status_hotend_b_bmp[] PROGMEM = {
             B00011111,B11100000,
             B00100000,B00010000,
             B00100000,B00010000,
@@ -298,7 +299,7 @@
 
           #ifdef STATUS_HOTEND_ANIM
 
-            const unsigned char status_hotend1_bmp[] PROGMEM = {
+            const unsigned char status_hotend1_a_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00111111,B11110000,
               B00111110,B11110000,
@@ -313,7 +314,7 @@
               B00000011,B00000000
             };
 
-            const unsigned char status_hotend1_on_bmp[] PROGMEM = {
+            const unsigned char status_hotend1_b_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00100000,B00010000,
               B00100001,B00010000,
@@ -328,7 +329,7 @@
               B00000011,B00000000
             };
 
-            const unsigned char status_hotend2_bmp[] PROGMEM = {
+            const unsigned char status_hotend2_a_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00111111,B11110000,
               B00111100,B11110000,
@@ -343,7 +344,7 @@
               B00000011,B00000000
             };
 
-            const unsigned char status_hotend2_on_bmp[] PROGMEM = {
+            const unsigned char status_hotend2_b_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00100000,B00010000,
               B00100011,B00010000,
@@ -360,7 +361,7 @@
 
           #else
 
-            const unsigned char status_hotend1_bmp[] PROGMEM = {
+            const unsigned char status_hotend1_a_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00111110,B11110000,
               B00111100,B11110000,
@@ -375,7 +376,7 @@
               B00000011,B00000000
             };
 
-            const unsigned char status_hotend2_bmp[] PROGMEM = {
+            const unsigned char status_hotend2_a_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00111100,B11110000,
               B00111011,B01110000,
@@ -394,11 +395,11 @@
 
         #endif
 
-        #if HOTENDS >= 3
+        #if STATUS_HOTEND_BITMAPS >= 3
 
           #ifdef STATUS_HOTEND_ANIM
 
-            const unsigned char status_hotend3_bmp[] PROGMEM = {
+            const unsigned char status_hotend3_a_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00111111,B11110000,
               B00111100,B11110000,
@@ -413,7 +414,7 @@
               B00000011,B00000000
             };
 
-            const unsigned char status_hotend3_on_bmp[] PROGMEM = {
+            const unsigned char status_hotend3_b_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00100000,B00010000,
               B00100011,B00010000,
@@ -430,7 +431,7 @@
 
           #else
 
-            const unsigned char status_hotend3_bmp[] PROGMEM = {
+            const unsigned char status_hotend3_a_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00111100,B11110000,
               B00111011,B01110000,
@@ -449,11 +450,11 @@
 
         #endif
 
-        #if HOTENDS >= 4 && !HAS_HEATED_BED
+        #if STATUS_HOTEND_BITMAPS >= 4 && !HAS_HEATED_BED
 
           #ifdef STATUS_HOTEND_ANIM
 
-            const unsigned char status_hotend4_bmp[] PROGMEM = {
+            const unsigned char status_hotend4_a_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00111111,B11110000,
               B00111011,B01110000,
@@ -468,7 +469,7 @@
               B00000011,B00000000
             };
 
-            const unsigned char status_hotend4_on_bmp[] PROGMEM = {
+            const unsigned char status_hotend4_b_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00100000,B00010000,
               B00100100,B10010000,
@@ -485,7 +486,7 @@
 
           #else
 
-            const unsigned char status_hotend4_bmp[] PROGMEM = {
+            const unsigned char status_hotend4_a_bmp[] PROGMEM = {
               B00011111,B11100000,
               B00111011,B01110000,
               B00111011,B01110000,
@@ -504,6 +505,61 @@
 
         #endif
 
+        #if STATUS_HOTEND_BITMAPS >= 5 && !HAS_HEATED_BED
+
+          #ifdef STATUS_HOTEND_ANIM
+
+            const unsigned char status_hotend5_a_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111111,B11110000,
+              B00111000,B01110000,
+              B00111011,B11110000,
+              B00011000,B11100000,
+              B00011111,B01100000,
+              B00111111,B01110000,
+              B00111011,B01110000,
+              B00111100,B11110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+            const unsigned char status_hotend5_b_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00100000,B00010000,
+              B00100111,B10010000,
+              B00100100,B00010000,
+              B00010111,B00100000,
+              B00010000,B10100000,
+              B00100000,B10010000,
+              B00100100,B10010000,
+              B00110011,B00110000,
+              B00001000,B01000000,
+              B00000100,B10000000,
+              B00000011,B00000000
+            };
+
+          #else
+
+            const unsigned char status_hotend5_a_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111000,B01110000,
+              B00111011,B11110000,
+              B00111000,B11110000,
+              B00011111,B01100000,
+              B00011111,B01100000,
+              B00111011,B01110000,
+              B00111100,B11110000,
+              B00111111,B11110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+          #endif
+
+        #endif
+
       #endif
 
     #endif
@@ -516,7 +572,7 @@
 // Default Status Screen Bed bitmaps
 //
 
-#if !STATUS_BED_WIDTH && !defined(COMBINED_HEATER_BITMAP) && HAS_HEATED_BED && HOTENDS < 4
+#if !STATUS_BED_WIDTH && !defined(STATUS_COMBINE_HEATERS) && HAS_HEATED_BED && HOTENDS < 4
 
   #ifdef ALTERNATE_BED_BITMAP
 
@@ -602,7 +658,7 @@
 
   #endif
 
-#endif // !STATUS_BED_WIDTH && !COMBINED_HEATER_BITMAP && HAS_HEATED_BED && HOTENDS < 4
+#endif // !STATUS_BED_WIDTH && !STATUS_COMBINE_HEATERS && HAS_HEATED_BED && HOTENDS < 4
 
 // Can also be overridden in Configuration.h
 // If you can afford it, try the 3-frame fan animation!
@@ -982,11 +1038,11 @@
   #endif
 
   #if STATUS_HOTEND_BITMAPS > 1
-    #define TEST_BITMAP_OFF status_hotend1_bmp
-    #define TEST_BITMAP_ON  status_hotend1_on_bmp
+    #define TEST_BITMAP_OFF status_hotend1_a_bmp
+    #define TEST_BITMAP_ON  status_hotend1_b_bmp
   #else
-    #define TEST_BITMAP_OFF status_hotend_bmp
-    #define TEST_BITMAP_ON  status_hotend_on_bmp
+    #define TEST_BITMAP_OFF status_hotend_a_bmp
+    #define TEST_BITMAP_ON  status_hotend_b_bmp
   #endif
   #ifndef STATUS_HEATERS_HEIGHT
     #define STATUS_HEATERS_HEIGHT (sizeof(TEST_BITMAP_OFF) / (STATUS_HOTEND1_BYTEWIDTH))

commit 4def8b3b5e01498d0a4358898784b08b886c3202
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Nov 20 07:36:37 2018 -0600

    Expanded options for _Statusscreen.h (#12455)
    
    See the PR for full details. The updated system will be documented on the website in the near future.

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index c5701ea86b..b5baa34137 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -34,1080 +34,1079 @@
 #if ENABLED(CUSTOM_STATUS_SCREEN_IMAGE)
 
   /**
-   * Custom _Statusscreen.h files must define STATUS_SCREENWIDTH and status_screen[012]_bmp.
-   * There's no need to define STATUS_SCREENHEIGHT since it's calculated automatically.
-   * You can also define these to modify drawing and animation:
+   * Custom _Statusscreen.h files can define:
+   * - A custom logo image
+   * - A custom heater bitmap
+   * - A custom fan bitmap / animation
    *
-   *  - STATUS_SCREEN_X
-   *  - STATUS_SCREEN_{BED,FAN}_TEXT_X
-   *  - STATUS_SCREEN_HOTEND_TEXT_X(i)
-   *  - FAN_ANIM_FRAMES
+   * See the included examples for guidance
    */
   #include "../../../_Statusscreen.h"
 
+  #ifdef STATUS_SCREENWIDTH
+    #error "Your custom _Statusscreen.h needs to be converted for Marlin 2.0."
+  #endif
+
 #else // !CUSTOM_STATUS_SCREEN_IMAGE
 
-  // Can also be overridden in Configuration.h
-  // If you can afford it, try the 3-frame fan animation!
-  #ifndef FAN_ANIM_FRAMES
-    #define FAN_ANIM_FRAMES 2
-  #endif
+  //#define COMBINED_HEATER_BITMAP
+  //#define STATUS_HOTEND_NUMBERLESS
+  #define STATUS_HOTEND_ANIM
+  #define STATUS_BED_ANIM
+  //#define ALTERNATE_BED_BITMAP
 
-  #if HAS_HEATED_BED && HOTENDS <= 3
-
-    #define STATUS_SCREEN_X        (  8 + (HOTENDS ? 0 : 64))
-    #define STATUS_SCREENWIDTH     (120 - (HOTENDS ? 0 : 64))
-
-    #if HOTENDS == 0
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B00000000,B00100000,B10000010,B00000000,B00100001,B11111111,B00001000,
-          B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
-          B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
-          B00000000,B00100000,B10000010,B00000000,B00100000,B01111100,B00001000,
-          B00000000,B01000001,B00000100,B00000000,B00100001,B11111111,B00001000,
-          B00000000,B10000010,B00001000,B00000000,B00100111,B11000111,B11001000,
-          B00000000,B10000010,B00001000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B01000001,B00000100,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00100000,B10000010,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B11111111,B11111111,B11000000,B00111110,B00000000,B11111000,
-          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
-          B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
-          B00000000,B00100000,B10000010,B00000000,B00100000,B00111001,B11101000,
-          B00000000,B00010000,B01000001,B00000000,B00100000,B01111111,B11111000,
-          B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00100000,B10000010,B00000000,B00111111,B11111100,B00001000,
-          B00000000,B01000001,B00000100,B00000000,B00101111,B00111000,B00001000,
-          B00000000,B10000010,B00001000,B00000000,B00101110,B00011000,B00001000,
-          B00000000,B10000010,B00001000,B00000000,B00101100,B00011110,B00001000,
-          B00000000,B01000001,B00000100,B00000000,B00110000,B00011110,B00011000,
-          B00000000,B00100000,B10000010,B00000000,B00110000,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B11111111,B11111111,B11000000,B00111110,B00011000,B11111000,
-          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
-          B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
-          B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
-          B00000000,B00100000,B10000010,B00000000,B00101111,B10111000,B00001000,
-          B00000000,B00010000,B01000001,B00000000,B00111111,B11111100,B00001000,
-          B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00100000,B10000010,B00000000,B00100000,B01111111,B11111000,
-          B00000000,B01000001,B00000100,B00000000,B00100000,B00111011,B11101000,
-          B00000000,B10000010,B00001000,B00000000,B00100000,B01110001,B11101000,
-          B00000000,B10000010,B00001000,B00000000,B00100000,B11110000,B11101000,
-          B00000000,B01000001,B00000100,B00000000,B00110001,B11110000,B01011000,
-          B00000000,B00100000,B10000010,B00000000,B00110011,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B11111111,B11111111,B11000000,B00111110,B00110000,B11111000,
-          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-      #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
-          B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
-          B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
-          B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
-          B00000000,B01000001,B00000100,B00000000,B00101100,B00000000,B11010000,
-          B00000000,B10000010,B00001000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B10000010,B00001000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B01000001,B00000100,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00100000,B10000010,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
-          B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B01000001,B00000100,B00000000,B00101111,B00000011,B11010000,
-          B00000000,B10000010,B00001000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B10000010,B00001000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B01000001,B00000100,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00100000,B10000010,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
-          B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
-        };
-      #endif
+#endif // !CUSTOM_STATUS_SCREEN_IMAGE
 
-    #elif HOTENDS == 1
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100001,B11111111,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111100,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100001,B11111111,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100111,B11000111,B11001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101111,B11000111,B11101000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110111,B10000011,B11011000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110111,B10000011,B11011000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00000000,B11111000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00111001,B11101000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111111,B11111000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00111111,B11111100,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101111,B00111000,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101110,B00011000,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101100,B00011110,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110000,B00011110,B00011000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110000,B00011111,B00011000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00011000,B11111000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101111,B10111000,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111100,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111111,B11111000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100000,B00111011,B11101000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B01110001,B11101000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B11110000,B11101000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110001,B11110000,B01011000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110011,B11110000,B00011000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00110000,B11111000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-      #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B00110000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B01111000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100000,B11111100,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110000,B11111100,B00110000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101111,B10000111,B11010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100111,B10000111,B10010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100011,B10000111,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110001,B10000110,B00110000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
-        };
-      #endif
+//
+// Default Status Screen Heater or Hotends bitmaps
+//
 
-    #elif HOTENDS == 2
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100001,B11111111,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100001,B11111111,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100111,B11000111,B11001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101111,B11000111,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110111,B10000011,B11011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110111,B10000011,B11011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00000000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00111001,B11101000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111111,B11111000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00111111,B11111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101111,B00111000,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101110,B00011000,B00001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101100,B00011110,B00001000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110000,B00011110,B00011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110000,B00011111,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00011000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101111,B10111000,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111111,B11111000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100000,B00111011,B11101000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B01110001,B11101000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B11110000,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110001,B11110000,B01011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110011,B11110000,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00110000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-      #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101100,B00000000,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B01111000,B00010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100000,B11111100,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110000,B11111100,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101111,B00000011,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101111,B10000111,B11010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100111,B10000111,B10010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100011,B10000111,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110001,B10000110,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
-        };
-      #endif
+#if !STATUS_HEATERS_WIDTH && !STATUS_HOTEND1_WIDTH
 
-    #else // HOTENDS > 2
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00100001,B11111111,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00100001,B11111111,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00100111,B11000111,B11001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00101111,B11000111,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00110111,B10000011,B11011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110111,B10000011,B11011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00000000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00100000,B00111001,B11101000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111111,B11111000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00111111,B11111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00101111,B00111000,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00101110,B00011000,B00001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00101100,B00011110,B00001000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00110000,B00011110,B00011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110000,B00011111,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00011000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00101111,B10111000,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111111,B11111000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00100000,B00111011,B11101000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00100000,B01110001,B11101000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00100000,B11110000,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00110001,B11110000,B01011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110011,B11110000,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00110000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
-        };
-      #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00101100,B00000000,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00100000,B01111000,B00010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00100000,B11111100,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110000,B11111100,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00101111,B00000011,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00101111,B10000111,B11010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00100111,B10000111,B10010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00100011,B10000111,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110001,B10000110,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
-        };
-      #endif
+  #ifdef COMBINED_HEATER_BITMAP
 
-    #endif // HOTENDS
-
-  #else // !HAS_HEATED_BED || HOTENDS > 3
-
-    #define STATUS_SCREEN_X        (  8 + (HOTENDS ? 0 : 96))
-    #define STATUS_SCREENWIDTH     (120 - (HOTENDS ? 0 : 96))
-
-    #if HOTENDS == 0
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00111111,B11111111,B11111000,
-          B00111110,B00000000,B11111000,
-          B00111001,B00000001,B00111000,
-          B00110111,B10000011,B11011000,
-          B00110111,B10000011,B11011000,
-          B00101111,B11000111,B11101000,
-          B00100111,B11000111,B11001000,
-          B00100001,B11111111,B00001000,
-          B00100000,B01111100,B00001000,
-          B00100000,B01111100,B00001000,
-          B00100000,B01111100,B00001000,
-          B00100001,B11111111,B00001000,
-          B00100111,B11000111,B11001000,
-          B00101111,B11000111,B11101000,
-          B00110111,B10000011,B11011000,
-          B00110111,B10000011,B11011000,
-          B00111001,B00000001,B00111000,
-          B00111110,B00000000,B11111000,
-          B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00111111,B11111111,B11111000,
-          B00111110,B00110000,B11111000,
-          B00111001,B11110000,B00111000,
-          B00110001,B11110000,B00011000,
-          B00110000,B11110000,B00011000,
-          B00100000,B11110000,B01101000,
-          B00100000,B00110001,B11101000,
-          B00100000,B00111001,B11101000,
-          B00100000,B01111111,B11111000,
-          B00111111,B11111111,B11111000,
-          B00111111,B11111100,B00001000,
-          B00101111,B00111000,B00001000,
-          B00101110,B00011000,B00001000,
-          B00101100,B00011110,B00001000,
-          B00110000,B00011110,B00011000,
-          B00110000,B00011111,B00011000,
-          B00111000,B00011111,B00111000,
-          B00111110,B00011000,B11111000,
-          B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00111111,B11111111,B11111000,
-          B00111110,B00011000,B11111000,
-          B00111000,B00011111,B00111000,
-          B00110000,B00011111,B10011000,
-          B00110100,B00011111,B00011000,
-          B00101110,B00011110,B00001000,
-          B00101111,B00011100,B00001000,
-          B00101111,B10111000,B00001000,
-          B00111111,B11111100,B00001000,
-          B00111111,B11111111,B11111000,
-          B00100000,B01111111,B11111000,
-          B00100000,B00111011,B11101000,
-          B00100000,B01110001,B11101000,
-          B00100000,B11110000,B11101000,
-          B00110001,B11110000,B01011000,
-          B00110011,B11110000,B00011000,
-          B00111001,B11110000,B00111000,
-          B00111110,B00110000,B11111000,
-          B00111111,B11111111,B11111000
-        };
-      #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00111111,B11111111,B11110000,
-          B00111000,B00000000,B01110000,
-          B00110000,B11111100,B00110000,
-          B00100000,B11111100,B00010000,
-          B00100000,B01111000,B00010000,
-          B00100000,B00110000,B00010000,
-          B00101100,B00000000,B11010000,
-          B00101110,B00110001,B11010000,
-          B00101111,B01111011,B11010000,
-          B00101111,B01111011,B11010000,
-          B00101110,B00110001,B11010000,
-          B00101100,B00000000,B11010000,
-          B00100000,B00110000,B00010000,
-          B00100000,B01111000,B00010000,
-          B00100000,B11111100,B00010000,
-          B00110000,B11111100,B00110000,
-          B00111000,B00000000,B01110000,
-          B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00111111,B11111111,B11110000,
-          B00111000,B00000000,B01110000,
-          B00110001,B10000110,B00110000,
-          B00100011,B10000111,B00010000,
-          B00100111,B10000111,B10010000,
-          B00101111,B10000111,B11010000,
-          B00101111,B00000011,B11010000,
-          B00100000,B00110000,B00010000,
-          B00100000,B01111000,B00010000,
-          B00100000,B01111000,B00010000,
-          B00100000,B00110000,B00010000,
-          B00101111,B00000011,B11010000,
-          B00101111,B10000111,B11010000,
-          B00100111,B10000111,B10010000,
-          B00100011,B10000111,B00010000,
-          B00110001,B10000110,B00110000,
-          B00111000,B00000000,B01110000,
-          B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000
-        };
-      #endif
+    //
+    // Status Screen Combined Heater bitmaps
+    //
 
-    #elif HOTENDS == 1
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111001,B11101000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00111000,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011000,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00011110,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011110,B00011000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B00011000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10111000,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111011,B11101000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01110001,B11101000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B11101000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B01011000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110011,B11110000,B00011000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
-        };
-      #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
-        };
-      #endif
+    #if HAS_HEATED_BED && HOTENDS == 0
+      #define STATUS_HEATERS_X 80
+    #endif
 
-    #elif HOTENDS == 2
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111001,B11101000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00111000,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011000,B00001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00011110,B00001000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011110,B00011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
-        };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10111000,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111011,B11101000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01110001,B11101000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B01011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110011,B11110000,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
-        };
-      #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+    #if HAS_HEATED_BED && HOTENDS <= 3
+
+      #if HOTENDS == 0
+
+        #define STATUS_HEATERS_WIDTH  18
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00100000,B10000010,B00000000,
+          B00010000,B01000001,B00000000,
+          B00010000,B01000001,B00000000,
+          B00100000,B10000010,B00000000,
+          B01000001,B00000100,B00000000,
+          B10000010,B00001000,B00000000,
+          B10000010,B00001000,B00000000,
+          B01000001,B00000100,B00000000,
+          B00100000,B10000010,B00000000,
+          B00000000,B00000000,B00000000,
+          B11111111,B11111111,B11000000,
+          B11111111,B11111111,B11000000
         };
-      #endif
 
-    #elif HOTENDS == 3
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+      #elif HOTENDS == 1
+
+        #define STATUS_HEATERS_WIDTH  90
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,
+          B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,
+          B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
+          B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,
+          B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000
         };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111001,B11101000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00101111,B00111000,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011000,B00001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00101100,B00011110,B00001000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011110,B00011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+
+      #elif HOTENDS == 2
+
+        #define STATUS_HEATERS_WIDTH  90
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,
+          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
+          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,
+          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000
         };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00101111,B10111000,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111011,B11101000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00100000,B01110001,B11101000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B01011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110011,B11110000,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+
+      #else // HOTENDS > 2
+
+        #define STATUS_HEATERS_WIDTH  90
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,
+          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,
+          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,
+          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000
         };
-      #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+
+      #endif // HOTENDS
+
+    #else // !HAS_HEATED_BED || HOTENDS > 3
+
+      #if HOTENDS == 1
+
+        #define STATUS_HEATERS_WIDTH  11
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,
+          B00111111,B11110000,
+          B00111111,B11110000,
+          B00111111,B11110000,
+          B00011111,B11100000,
+          B00011111,B11100000,
+          B00111111,B11110000,
+          B00111111,B11110000,
+          B00111111,B11110000,
+          B00001111,B11000000,
+          B00000111,B10000000,
+          B00000011,B00000000
         };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+
+      #elif HOTENDS == 2
+
+        #define STATUS_HEATERS_WIDTH  36
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,B00000000,B00011111,B11100000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,
+          B00001111,B11000000,B00000000,B00001111,B11000000,
+          B00000111,B10000000,B00000000,B00000111,B10000000,
+          B00000011,B00000000,B00000000,B00000011,B00000000
         };
-      #endif
 
-    #elif HOTENDS > 3
-
-      #if FAN_ANIM_FRAMES == 3
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100001,B11111111,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111100,B00001000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00100001,B11111111,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00100111,B11000111,B11001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00101111,B11000111,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00110111,B10000011,B11011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110111,B10000011,B11011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111001,B00000001,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111110,B00000000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00111111,B11111111,B11111000
+      #elif HOTENDS == 3
+
+        #define STATUS_HEATERS_WIDTH  60
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,
+          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,
+          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,
+          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
         };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B00111001,B11101000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111111,B11111000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00111111,B11111100,B00001000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00101111,B00111000,B00001000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00101110,B00011000,B00001000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00101100,B00011110,B00001000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00110000,B00011110,B00011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110000,B00011111,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111000,B00011111,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111110,B00011000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00111111,B11111111,B11111000
+
+      #elif HOTENDS > 3
+
+        #define STATUS_HEATERS_WIDTH  84
+
+        const unsigned char status_heaters_bmp[] PROGMEM = {
+          B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,
+          B00111110,B11110000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,
+          B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,
+          B00111010,B11110000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,
+          B00011110,B11100000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,
+          B00011110,B11100000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,
+          B00111110,B11110000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,
+          B00111110,B11110000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,
+          B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,
+          B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,
+          B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,
+          B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000
         };
-        const unsigned char status_screen2_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00101111,B10111000,B00001000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B11111100,B00001000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111111,B11111111,B11111000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111111,B11111000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00100000,B00111011,B11101000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00100000,B01110001,B11101000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B11110000,B11101000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00110001,B11110000,B01011000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110011,B11110000,B00011000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111001,B11110000,B00111000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111110,B00110000,B11111000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00111111,B11111111,B11111000
+
+      #endif // HOTENDS
+
+    #endif // !HAS_HEATED_BED || HOTENDS > 3
+
+  #else // !COMBINED_HEATER_BITMAP
+
+    //
+    // Status Screen Hotends bitmaps
+    //
+
+    #if HOTENDS
+
+      #define STATUS_HOTEND1_WIDTH  12
+
+      #if HOTENDS == 1 || defined(STATUS_HOTEND_NUMBERLESS)
+
+        const unsigned char status_hotend_bmp[] PROGMEM = {
+          B00011111,B11100000,
+          B00111111,B11110000,
+          B00111111,B11110000,
+          B00111111,B11110000,
+          B00011111,B11100000,
+          B00011111,B11100000,
+          B00111111,B11110000,
+          B00111111,B11110000,
+          B00111111,B11110000,
+          B00001111,B11000000,
+          B00000111,B10000000,
+          B00000011,B00000000
         };
+
+        #ifdef STATUS_HOTEND_ANIM
+
+          const unsigned char status_hotend_on_bmp[] PROGMEM = {
+            B00011111,B11100000,
+            B00100000,B00010000,
+            B00100000,B00010000,
+            B00100000,B00010000,
+            B00010000,B00100000,
+            B00010000,B00100000,
+            B00100000,B00010000,
+            B00100000,B00010000,
+            B00110000,B00110000,
+            B00001000,B01000000,
+            B00000100,B10000000,
+            B00000011,B00000000
+          };
+
+        #endif
+
       #else
-        const unsigned char status_screen0_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00101110,B00110001,B11010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00101111,B01111011,B11010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00101111,B01111011,B11010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00101110,B00110001,B11010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00101100,B00000000,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B01111000,B00010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00100000,B11111100,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110000,B11111100,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000
-        };
-        const unsigned char status_screen1_bmp[] PROGMEM = {
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
-          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
-          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B00110000,B00010000,
-          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111000,B00010000,
-          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111000,B00010000,
-          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B00110000,B00010000,
-          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00101111,B00000011,B11010000,
-          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00101111,B10000111,B11010000,
-          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00100111,B10000111,B10010000,
-          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00100011,B10000111,B00010000,
-          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110001,B10000110,B00110000,
-          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111000,B00000000,B01110000,
-          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111111,B11111111,B11110000,
-          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000
-        };
+
+        #if HOTENDS >= 2
+
+          #if HAS_HEATED_BED
+            #define MAX_HOTEND_BITMAPS 3
+          #else
+            #define MAX_HOTEND_BITMAPS 4
+          #endif
+          #if HOTENDS > MAX_HOTEND_BITMAPS
+            #define STATUS_HOTEND_BITMAPS MAX_HOTEND_BITMAPS
+          #else
+            #define STATUS_HOTEND_BITMAPS HOTENDS
+          #endif
+
+          #ifdef STATUS_HOTEND_ANIM
+
+            const unsigned char status_hotend1_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111111,B11110000,
+              B00111110,B11110000,
+              B00111100,B11110000,
+              B00011010,B11100000,
+              B00011110,B11100000,
+              B00111110,B11110000,
+              B00111110,B11110000,
+              B00111110,B11110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+            const unsigned char status_hotend1_on_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00100000,B00010000,
+              B00100001,B00010000,
+              B00100011,B00010000,
+              B00010101,B00100000,
+              B00010001,B00100000,
+              B00100001,B00010000,
+              B00100001,B00010000,
+              B00110001,B00110000,
+              B00001000,B01000000,
+              B00000100,B10000000,
+              B00000011,B00000000
+            };
+
+            const unsigned char status_hotend2_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111111,B11110000,
+              B00111100,B11110000,
+              B00111011,B01110000,
+              B00011111,B01100000,
+              B00011110,B11100000,
+              B00111101,B11110000,
+              B00111011,B11110000,
+              B00111000,B01110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+            const unsigned char status_hotend2_on_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00100000,B00010000,
+              B00100011,B00010000,
+              B00100100,B10010000,
+              B00010000,B10100000,
+              B00010001,B00100000,
+              B00100010,B00010000,
+              B00100100,B00010000,
+              B00110111,B10110000,
+              B00001000,B01000000,
+              B00000100,B10000000,
+              B00000011,B00000000
+            };
+
+          #else
+
+            const unsigned char status_hotend1_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111110,B11110000,
+              B00111100,B11110000,
+              B00111010,B11110000,
+              B00011110,B11100000,
+              B00011110,B11100000,
+              B00111110,B11110000,
+              B00111110,B11110000,
+              B00111111,B11110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+            const unsigned char status_hotend2_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111100,B11110000,
+              B00111011,B01110000,
+              B00111111,B01110000,
+              B00011110,B11100000,
+              B00011101,B11100000,
+              B00111011,B11110000,
+              B00111000,B01110000,
+              B00111111,B11110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+          #endif
+
+        #endif
+
+        #if HOTENDS >= 3
+
+          #ifdef STATUS_HOTEND_ANIM
+
+            const unsigned char status_hotend3_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111111,B11110000,
+              B00111100,B11110000,
+              B00111011,B01110000,
+              B00011111,B01100000,
+              B00011100,B11100000,
+              B00111111,B01110000,
+              B00111011,B01110000,
+              B00111100,B11110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+            const unsigned char status_hotend3_on_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00100000,B00010000,
+              B00100011,B00010000,
+              B00100100,B10010000,
+              B00010000,B10100000,
+              B00010011,B00100000,
+              B00100000,B10010000,
+              B00100100,B10010000,
+              B00110011,B00110000,
+              B00001000,B01000000,
+              B00000100,B10000000,
+              B00000011,B00000000
+            };
+
+          #else
+
+            const unsigned char status_hotend3_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111100,B11110000,
+              B00111011,B01110000,
+              B00111111,B01110000,
+              B00011100,B11100000,
+              B00011111,B01100000,
+              B00111011,B01110000,
+              B00111100,B11110000,
+              B00111111,B11110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+          #endif
+
+        #endif
+
+        #if HOTENDS >= 4 && !HAS_HEATED_BED
+
+          #ifdef STATUS_HOTEND_ANIM
+
+            const unsigned char status_hotend4_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111111,B11110000,
+              B00111011,B01110000,
+              B00111011,B01110000,
+              B00011011,B01100000,
+              B00011011,B01100000,
+              B00111000,B00110000,
+              B00111111,B01110000,
+              B00111111,B01110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+            const unsigned char status_hotend4_on_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00100000,B00010000,
+              B00100100,B10010000,
+              B00100100,B10010000,
+              B00010100,B10100000,
+              B00010100,B10100000,
+              B00100111,B11010000,
+              B00100000,B10010000,
+              B00110000,B10110000,
+              B00001000,B01000000,
+              B00000100,B10000000,
+              B00000011,B00000000
+            };
+
+          #else
+
+            const unsigned char status_hotend4_bmp[] PROGMEM = {
+              B00011111,B11100000,
+              B00111011,B01110000,
+              B00111011,B01110000,
+              B00111011,B01110000,
+              B00011011,B01100000,
+              B00011000,B00100000,
+              B00111111,B01110000,
+              B00111111,B01110000,
+              B00111111,B11110000,
+              B00001111,B11000000,
+              B00000111,B10000000,
+              B00000011,B00000000
+            };
+
+          #endif
+
+        #endif
+
       #endif
 
-    #endif // HOTENDS
+    #endif
+
+  #endif
+
+#endif // !STATUS_HEATERS_WIDTH && !STATUS_HOTEND1_WIDTH
 
-  #endif // !HAS_HEATED_BED || HOTENDS > 3
+//
+// Default Status Screen Bed bitmaps
+//
 
-#endif // !CUSTOM_STATUS_SCREEN_IMAGE
+#if !STATUS_BED_WIDTH && !defined(COMBINED_HEATER_BITMAP) && HAS_HEATED_BED && HOTENDS < 4
+
+  #ifdef ALTERNATE_BED_BITMAP
+
+    #define STATUS_BED_ANIM
+    #define STATUS_BED_WIDTH  24
+    #ifndef STATUS_BED_X
+      #define STATUS_BED_X    72
+    #endif
+    #define STATUS_BED_TEXT_X STATUS_BED_X + 13
+
+    const unsigned char status_bed_bmp[] PROGMEM = {
+      B11111111,B11111111,B11000000,
+      B01000000,B00000000,B00100000,
+      B00100000,B00000000,B00010000,
+      B00010000,B00000000,B00001000,
+      B00001000,B00000000,B00000100,
+      B00000100,B00000000,B00000010,
+      B00000011,B11111111,B11111111
+    };
+
+    const unsigned char status_bed_on_bmp[] PROGMEM = {
+      B00000010,B00100010,B00000000,
+      B00000100,B01000100,B00000000,
+      B00000100,B01000100,B00000000,
+      B00000010,B00100010,B00000000,
+      B00000001,B00010001,B00000000,
+      B11111111,B11111111,B11000000,
+      B01000000,B10001000,B10100000,
+      B00100001,B00010001,B00010000,
+      B00010010,B00100010,B00001000,
+      B00001000,B00000000,B00000100,
+      B00000100,B00000000,B00000010,
+      B00000011,B11111111,B11111111
+    };
+
+  #else
+
+    #define STATUS_BED_WIDTH  18
+    #ifndef STATUS_BED_X
+      #define STATUS_BED_X    80
+    #endif
+
+    #ifdef STATUS_BED_ANIM
+
+      const unsigned char status_bed_bmp[] PROGMEM = {
+        B11111111,B11111111,B11000000,
+        B11111111,B11111111,B11000000
+      };
+
+      const unsigned char status_bed_on_bmp[] PROGMEM = {
+        B00100000,B10000010,B00000000,
+        B00010000,B01000001,B00000000,
+        B00010000,B01000001,B00000000,
+        B00100000,B10000010,B00000000,
+        B01000001,B00000100,B00000000,
+        B10000010,B00001000,B00000000,
+        B10000010,B00001000,B00000000,
+        B01000001,B00000100,B00000000,
+        B00100000,B10000010,B00000000,
+        B00000000,B00000000,B00000000,
+        B11111111,B11111111,B11000000,
+        B11111111,B11111111,B11000000
+      };
+
+    #else
 
+      const unsigned char status_bed_bmp[] PROGMEM = {
+        B00100000,B10000010,B00000000,
+        B00010000,B01000001,B00000000,
+        B00010000,B01000001,B00000000,
+        B00100000,B10000010,B00000000,
+        B01000001,B00000100,B00000000,
+        B10000010,B00001000,B00000000,
+        B10000010,B00001000,B00000000,
+        B01000001,B00000100,B00000000,
+        B00100000,B10000010,B00000000,
+        B00000000,B00000000,B00000000,
+        B11111111,B11111111,B11000000,
+        B11111111,B11111111,B11000000
+      };
+
+    #endif
+
+  #endif
+
+#endif // !STATUS_BED_WIDTH && !COMBINED_HEATER_BITMAP && HAS_HEATED_BED && HOTENDS < 4
+
+// Can also be overridden in Configuration.h
+// If you can afford it, try the 3-frame fan animation!
 #ifndef FAN_ANIM_FRAMES
   #define FAN_ANIM_FRAMES 2
 #elif FAN_ANIM_FRAMES > 3
   #error "Only 3 fan animation frames currently supported."
 #endif
-#ifndef STATUS_SCREEN_X
-  #define STATUS_SCREEN_X 0
+
+// Don't compile in the fan animation with no fan
+#if !HAS_FAN0
+  #undef FAN_ANIM_FRAMES
 #endif
-#ifndef STATUS_SCREEN_Y
-  #define STATUS_SCREEN_Y 1
+
+//
+// Provide default Fan Bitmaps
+//
+#if !defined(STATUS_FAN_WIDTH) && FAN_ANIM_FRAMES > 0
+
+  // Provide a fan animation if none exists
+
+  #if FAN_ANIM_FRAMES <= 2
+
+    #define STATUS_FAN_Y      2
+    #define STATUS_FAN_WIDTH 20
+
+    const unsigned char status_fan0_bmp[] PROGMEM = {
+      B00111111,B11111111,B11110000,
+      B00111000,B00000000,B01110000,
+      B00110000,B11111100,B00110000,
+      B00100000,B11111100,B00010000,
+      B00100000,B01111000,B00010000,
+      B00100000,B00110000,B00010000,
+      B00101100,B00000000,B11010000,
+      B00101110,B00110001,B11010000,
+      B00101111,B01111011,B11010000,
+      B00101111,B01111011,B11010000,
+      B00101110,B00110001,B11010000,
+      B00101100,B00000000,B11010000,
+      B00100000,B00110000,B00010000,
+      B00100000,B01111000,B00010000,
+      B00100000,B11111100,B00010000,
+      B00110000,B11111100,B00110000,
+      B00111000,B00000000,B01110000,
+      B00111111,B11111111,B11110000
+    };
+
+    #if FAN_ANIM_FRAMES == 2
+      const unsigned char status_fan1_bmp[] PROGMEM = {
+        B00111111,B11111111,B11110000,
+        B00111000,B00000000,B01110000,
+        B00110001,B10000110,B00110000,
+        B00100011,B10000111,B00010000,
+        B00100111,B10000111,B10010000,
+        B00101111,B10000111,B11010000,
+        B00101111,B00000011,B11010000,
+        B00100000,B00110000,B00010000,
+        B00100000,B01111000,B00010000,
+        B00100000,B01111000,B00010000,
+        B00100000,B00110000,B00010000,
+        B00101111,B00000011,B11010000,
+        B00101111,B10000111,B11010000,
+        B00100111,B10000111,B10010000,
+        B00100011,B10000111,B00010000,
+        B00110001,B10000110,B00110000,
+        B00111000,B00000000,B01110000,
+        B00111111,B11111111,B11110000
+      };
+    #endif
+
+  #elif FAN_ANIM_FRAMES == 3
+
+    #define STATUS_FAN_WIDTH 21
+
+    const unsigned char status_fan0_bmp[] PROGMEM = {
+      B00111111,B11111111,B11111000,
+      B00111110,B00000000,B11111000,
+      B00111001,B00000001,B00111000,
+      B00110111,B10000011,B11011000,
+      B00110111,B10000011,B11011000,
+      B00101111,B11000111,B11101000,
+      B00100111,B11000111,B11001000,
+      B00100001,B11111111,B00001000,
+      B00100000,B01111100,B00001000,
+      B00100000,B01111100,B00001000,
+      B00100000,B01111100,B00001000,
+      B00100001,B11111111,B00001000,
+      B00100111,B11000111,B11001000,
+      B00101111,B11000111,B11101000,
+      B00110111,B10000011,B11011000,
+      B00110111,B10000011,B11011000,
+      B00111001,B00000001,B00111000,
+      B00111110,B00000000,B11111000,
+      B00111111,B11111111,B11111000
+    };
+    const unsigned char status_fan1_bmp[] PROGMEM = {
+      B00111111,B11111111,B11111000,
+      B00111110,B00110000,B11111000,
+      B00111001,B11110000,B00111000,
+      B00110001,B11110000,B00011000,
+      B00110000,B11110000,B00011000,
+      B00100000,B11110000,B01101000,
+      B00100000,B00110001,B11101000,
+      B00100000,B00111001,B11101000,
+      B00100000,B01111111,B11111000,
+      B00111111,B11111111,B11111000,
+      B00111111,B11111100,B00001000,
+      B00101111,B00111000,B00001000,
+      B00101110,B00011000,B00001000,
+      B00101100,B00011110,B00001000,
+      B00110000,B00011110,B00011000,
+      B00110000,B00011111,B00011000,
+      B00111000,B00011111,B00111000,
+      B00111110,B00011000,B11111000,
+      B00111111,B11111111,B11111000
+    };
+    const unsigned char status_fan2_bmp[] PROGMEM = {
+      B00111111,B11111111,B11111000,
+      B00111110,B00011000,B11111000,
+      B00111000,B00011111,B00111000,
+      B00110000,B00011111,B10011000,
+      B00110100,B00011111,B00011000,
+      B00101110,B00011110,B00001000,
+      B00101111,B00011100,B00001000,
+      B00101111,B10111000,B00001000,
+      B00111111,B11111100,B00001000,
+      B00111111,B11111111,B11111000,
+      B00100000,B01111111,B11111000,
+      B00100000,B00111011,B11101000,
+      B00100000,B01110001,B11101000,
+      B00100000,B11110000,B11101000,
+      B00110001,B11110000,B01011000,
+      B00110011,B11110000,B00011000,
+      B00111001,B11110000,B00111000,
+      B00111110,B00110000,B11111000,
+      B00111111,B11111111,B11111000
+    };
+
+  #elif FAN_ANIM_FRAMES == 4
+
+    #define STATUS_FAN_WIDTH 21
+
+    const unsigned char status_fan0_bmp[] PROGMEM = {
+      B00111111,B11111111,B11111000,
+      B00111110,B00000000,B11111000,
+      B00111000,B00111111,B00111000,
+      B00110000,B01111110,B00011000,
+      B00110000,B01111100,B00011000,
+      B00101000,B01111100,B00001000,
+      B00101100,B00111000,B00001000,
+      B00101111,B00111001,B11001000,
+      B00101111,B11111111,B11101000,
+      B00101111,B11000111,B11101000,
+      B00101111,B11111111,B11101000,
+      B00100111,B00111001,B11101000,
+      B00100000,B00111000,B01101000,
+      B00100000,B01111100,B00101000,
+      B00110000,B01111100,B00011000,
+      B00110000,B11111100,B00011000,
+      B00111001,B11111000,B00111000,
+      B00111110,B00000000,B11111000,
+      B00111111,B11111111,B11111000
+    };
+    const unsigned char status_fan1_bmp[] PROGMEM = {
+      B00111111,B11111111,B11111000,
+      B00111110,B00000000,B11111000,
+      B00111000,B00001111,B00111000,
+      B00110100,B00011111,B11011000,
+      B00110110,B00011111,B10011000,
+      B00101111,B00011111,B00001000,
+      B00101111,B10011110,B00001000,
+      B00101111,B11111100,B00001000,
+      B00101111,B11011100,B00001000,
+      B00100111,B11101111,B11001000,
+      B00100000,B01110111,B11101000,
+      B00100000,B01111111,B11101000,
+      B00100000,B11110011,B11101000,
+      B00100001,B11110001,B11101000,
+      B00110011,B11110000,B11011000,
+      B00110111,B11110000,B01011000,
+      B00111001,B11100000,B00111000,
+      B00111110,B00000000,B11111000,
+      B00111111,B11111111,B11111000
+    };
+    const unsigned char status_fan2_bmp[] PROGMEM = {
+      B00111111,B11111111,B11111000,
+      B00111110,B10000000,B11111000,
+      B00111001,B10000000,B00111000,
+      B00110111,B10000001,B11011000,
+      B00110111,B11000011,B11011000,
+      B00100111,B11000111,B11101000,
+      B00100011,B11000111,B11111000,
+      B00100001,B11111111,B10001000,
+      B00100000,B01101100,B00001000,
+      B00100000,B01101100,B00001000,
+      B00100000,B01101100,B00001000,
+      B00100011,B11111111,B00001000,
+      B00111111,B11000111,B10001000,
+      B00101111,B11000111,B11001000,
+      B00110111,B10000111,B11011000,
+      B00110111,B00000011,B11011000,
+      B00111000,B00000011,B00111000,
+      B00111110,B00000010,B11111000,
+      B00111111,B11111111,B11111000
+    };
+    const unsigned char status_fan3_bmp[] PROGMEM = {
+      B00111111,B11111111,B11111000,
+      B00111110,B00000000,B11111000,
+      B00111001,B11110000,B00111000,
+      B00110001,B11100000,B00011000,
+      B00110001,B11100000,B00011000,
+      B00100001,B11100001,B11101000,
+      B00100000,B11110011,B11101000,
+      B00100000,B01111111,B11101000,
+      B00100000,B01110111,B11101000,
+      B00101000,B11101110,B00101000,
+      B00101111,B11011100,B00001000,
+      B00101111,B11111100,B00001000,
+      B00101111,B10011110,B00001000,
+      B00101111,B00001111,B00001000,
+      B00110000,B00001111,B00011000,
+      B00110000,B00001111,B00011000,
+      B00111000,B00011111,B00111000,
+      B00111110,B00000000,B11111000,
+      B00111111,B11111111,B11111000
+    };
+
+  #endif
+
 #endif
-#ifndef STATUS_BMP_BYTEWIDTH
-  #define STATUS_BMP_BYTEWIDTH ((STATUS_SCREENWIDTH + 7) / 8)
+
+//
+// Custom Logo Bitmap Properties
+//
+#ifndef STATUS_LOGO_WIDTH
+  #define STATUS_LOGO_WIDTH 0
 #endif
-#ifndef STATUS_SCREENHEIGHT
-  #define STATUS_SCREENHEIGHT (sizeof(status_screen0_bmp) / (STATUS_BMP_BYTEWIDTH))
+#ifndef STATUS_LOGO_BYTEWIDTH
+  #define STATUS_LOGO_BYTEWIDTH ((STATUS_LOGO_WIDTH + 7) / 8)
 #endif
-#ifndef STATUS_SCREEN_HOTEND_TEXT_X
-  #define STATUS_SCREEN_HOTEND_TEXT_X(i) (5 + (i) * 25)
+#if STATUS_LOGO_WIDTH
+  #ifndef STATUS_LOGO_X
+    #define STATUS_LOGO_X 0
+  #endif
+  #ifndef STATUS_LOGO_Y
+    #define STATUS_LOGO_Y MIN(0, 10 - (STATUS_LOGO_HEIGHT) / 2)
+  #endif
+  #ifndef STATUS_LOGO_HEIGHT
+    #define STATUS_LOGO_HEIGHT (sizeof(status_logo_bmp) / (STATUS_LOGO_BYTEWIDTH))
+  #endif
+  static_assert(
+    sizeof(status_logo_bmp) == (STATUS_LOGO_BYTEWIDTH) * (STATUS_LOGO_HEIGHT),
+    "Status logo bitmap (status_logo_bmp) dimensions don't match data."
+  );
 #endif
-#ifndef STATUS_SCREEN_BED_TEXT_X
-  #define STATUS_SCREEN_BED_TEXT_X 81
+
+//
+// Heater Bitmap Properties
+//
+#if STATUS_HOTEND1_WIDTH || STATUS_HEATERS_WIDTH
+
+  #ifndef STATUS_HEATERS_XSPACE
+    #define STATUS_HEATERS_XSPACE 24 // Like the included bitmaps
+  #endif
+
+  #ifndef STATUS_HEATERS_X
+    #if STATUS_LOGO_BYTEWIDTH
+      #define STATUS_HEATERS_X ((STATUS_LOGO_BYTEWIDTH + 0) * 8)
+    #else
+      #define STATUS_HEATERS_X 8 // Like the included bitmaps
+    #endif
+  #endif
+
 #endif
-#ifndef STATUS_SCREEN_FAN_TEXT_X
-  #define STATUS_SCREEN_FAN_TEXT_X 103
+
+#if STATUS_HOTEND1_WIDTH
+
+  //
+  // Hotend images. A base hotend image and optional "ON" state image.
+  //
+
+  #ifndef STATUS_HOTEND_BITMAPS
+    #define STATUS_HOTEND_BITMAPS 1
+  #endif
+
+  #ifndef STATUS_HOTEND2_WIDTH
+    #define STATUS_HOTEND2_WIDTH STATUS_HOTEND1_WIDTH
+  #endif
+  #ifndef STATUS_HOTEND3_WIDTH
+    #define STATUS_HOTEND3_WIDTH STATUS_HOTEND2_WIDTH
+  #endif
+  #ifndef STATUS_HOTEND4_WIDTH
+    #define STATUS_HOTEND4_WIDTH STATUS_HOTEND3_WIDTH
+  #endif
+  #ifndef STATUS_HOTEND5_WIDTH
+    #define STATUS_HOTEND5_WIDTH STATUS_HOTEND5_WIDTH
+  #endif
+  #ifndef STATUS_HOTEND6_WIDTH
+    #define STATUS_HOTEND6_WIDTH STATUS_HOTEND6_WIDTH
+  #endif
+
+  constexpr uint8_t status_hotend_width[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_WIDTH, STATUS_HOTEND2_WIDTH, STATUS_HOTEND3_WIDTH, STATUS_HOTEND4_WIDTH, STATUS_HOTEND5_WIDTH, STATUS_HOTEND6_WIDTH);
+  #define STATUS_HOTEND_WIDTH(N) status_hotend_width[N]
+
+  #ifndef STATUS_HOTEND1_BYTEWIDTH
+    #define STATUS_HOTEND1_BYTEWIDTH ((STATUS_HOTEND1_WIDTH + 7) / 8)
+  #endif
+  #ifndef STATUS_HOTEND2_BYTEWIDTH
+    #define STATUS_HOTEND2_BYTEWIDTH ((STATUS_HOTEND2_WIDTH + 7) / 8)
+  #endif
+  #ifndef STATUS_HOTEND3_BYTEWIDTH
+    #define STATUS_HOTEND3_BYTEWIDTH ((STATUS_HOTEND3_WIDTH + 7) / 8)
+  #endif
+  #ifndef STATUS_HOTEND4_BYTEWIDTH
+    #define STATUS_HOTEND4_BYTEWIDTH ((STATUS_HOTEND4_WIDTH + 7) / 8)
+  #endif
+  #ifndef STATUS_HOTEND5_BYTEWIDTH
+    #define STATUS_HOTEND5_BYTEWIDTH ((STATUS_HOTEND5_WIDTH + 7) / 8)
+  #endif
+  #ifndef STATUS_HOTEND6_BYTEWIDTH
+    #define STATUS_HOTEND6_BYTEWIDTH ((STATUS_HOTEND6_WIDTH + 7) / 8)
+  #endif
+
+  constexpr uint8_t status_hotend_bytewidth[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_BYTEWIDTH, STATUS_HOTEND2_BYTEWIDTH, STATUS_HOTEND3_BYTEWIDTH, STATUS_HOTEND4_BYTEWIDTH, STATUS_HOTEND5_BYTEWIDTH, STATUS_HOTEND6_BYTEWIDTH);
+  #define STATUS_HOTEND_BYTEWIDTH(N) status_hotend_bytewidth[N]
+
+  #ifndef STATUS_HOTEND1_X
+    #define STATUS_HOTEND1_X STATUS_HEATERS_X
+  #endif
+  #ifndef STATUS_HOTEND2_X
+    #define STATUS_HOTEND2_X STATUS_HOTEND1_X + STATUS_HEATERS_XSPACE
+  #endif
+  #ifndef STATUS_HOTEND3_X
+    #define STATUS_HOTEND3_X STATUS_HOTEND2_X + STATUS_HEATERS_XSPACE
+  #endif
+  #ifndef STATUS_HOTEND4_X
+    #define STATUS_HOTEND4_X STATUS_HOTEND3_X + STATUS_HEATERS_XSPACE
+  #endif
+  #ifndef STATUS_HOTEND5_X
+    #define STATUS_HOTEND5_X STATUS_HOTEND5_X + STATUS_HEATERS_XSPACE
+  #endif
+  #ifndef STATUS_HOTEND6_X
+    #define STATUS_HOTEND6_X STATUS_HOTEND6_X + STATUS_HEATERS_XSPACE
+  #endif
+
+  #if HOTENDS > 2
+    constexpr uint8_t status_hotend_x[HOTENDS] = ARRAY_N(HOTENDS, STATUS_HOTEND1_X, STATUS_HOTEND2_X, STATUS_HOTEND3_X, STATUS_HOTEND4_X, STATUS_HOTEND5_X, STATUS_HOTEND6_X);
+    #define STATUS_HOTEND_X(N) status_hotend_x[N]
+  #elif HOTENDS > 1
+    #define STATUS_HOTEND_X(N) ((N) ? STATUS_HOTEND2_X : STATUS_HOTEND1_X)
+  #else
+    #define STATUS_HOTEND_X(N) STATUS_HOTEND1_X
+  #endif
+
+  #ifndef STATUS_HOTEND_TEXT_X
+    #ifdef STATUS_HOTEND1_TEXT_X
+      #ifndef STATUS_HOTEND2_TEXT_X
+        #define STATUS_HOTEND2_TEXT_X STATUS_HOTEND1_TEXT_X + STATUS_HEATERS_XSPACE
+      #endif
+      #ifndef STATUS_HOTEND3_TEXT_X
+        #define STATUS_HOTEND3_TEXT_X STATUS_HOTEND2_TEXT_X + STATUS_HEATERS_XSPACE
+      #endif
+      #ifndef STATUS_HOTEND4_TEXT_X
+        #define STATUS_HOTEND4_TEXT_X STATUS_HOTEND3_TEXT_X + STATUS_HEATERS_XSPACE
+      #endif
+      #ifndef STATUS_HOTEND5_TEXT_X
+        #define STATUS_HOTEND5_TEXT_X STATUS_HOTEND5_TEXT_X + STATUS_HEATERS_XSPACE
+      #endif
+      #ifndef STATUS_HOTEND6_TEXT_X
+        #define STATUS_HOTEND6_TEXT_X STATUS_HOTEND6_TEXT_X + STATUS_HEATERS_XSPACE
+      #endif
+      constexpr uint8_t status_hotend_text_x[] = ARRAY_N(HOTENDS, STATUS_HOTEND1_TEXT_X, STATUS_HOTEND2_TEXT_X, STATUS_HOTEND3_TEXT_X, STATUS_HOTEND4_TEXT_X, STATUS_HOTEND5_TEXT_X, STATUS_HOTEND6_TEXT_X);
+      #define STATUS_HOTEND_TEXT_X(N) status_hotend_text_x[N]
+    #else
+      #define STATUS_HOTEND_TEXT_X(N) (STATUS_HOTEND1_X + 6 + (N) * (STATUS_HEATERS_XSPACE))
+    #endif
+  #endif
+
+  #if STATUS_HOTEND_BITMAPS > 1
+    #define TEST_BITMAP_OFF status_hotend1_bmp
+    #define TEST_BITMAP_ON  status_hotend1_on_bmp
+  #else
+    #define TEST_BITMAP_OFF status_hotend_bmp
+    #define TEST_BITMAP_ON  status_hotend_on_bmp
+  #endif
+  #ifndef STATUS_HEATERS_HEIGHT
+    #define STATUS_HEATERS_HEIGHT (sizeof(TEST_BITMAP_OFF) / (STATUS_HOTEND1_BYTEWIDTH))
+  #endif
+  #ifndef STATUS_HEATERS_Y
+    #define STATUS_HEATERS_Y (20 - (STATUS_HEATERS_HEIGHT))
+  #endif
+
+  #define HOTEND0_BITMAP_SIZE (STATUS_HOTEND1_BYTEWIDTH) * (STATUS_HEATERS_HEIGHT)
+  static_assert(
+    sizeof(TEST_BITMAP_OFF) == HOTEND0_BITMAP_SIZE,
+    "Status hotend bitmap (" STRINGIFY(TEST_BITMAP_OFF) ") dimensions don't match data."
+  );
+  #ifdef STATUS_HOTEND_ANIM
+    static_assert(
+      sizeof(TEST_BITMAP_ON) == HOTEND0_BITMAP_SIZE,
+      "Status hotend bitmaps (" STRINGIFY(TEST_BITMAP_OFF) " and " STRINGIFY(TEST_BITMAP_ON) ") dimensions don't match."
+    );
+  #endif
+
+#elif STATUS_HEATERS_WIDTH
+
+  #ifndef STATUS_HOTEND_TEXT_X
+    #define STATUS_HOTEND_TEXT_X(N) (STATUS_HEATERS_X + 6 + (N) * (STATUS_HEATERS_XSPACE))
+  #endif
+  #ifndef STATUS_HEATERS_BYTEWIDTH
+    #define STATUS_HEATERS_BYTEWIDTH ((STATUS_HEATERS_WIDTH + 7) / 8)
+  #endif
+  #ifndef STATUS_HEATERS_HEIGHT
+    #define STATUS_HEATERS_HEIGHT (sizeof(status_heaters_bmp) / (STATUS_HEATERS_BYTEWIDTH))
+  #endif
+  #ifndef STATUS_HEATERS_Y
+    #define STATUS_HEATERS_Y (20 - (STATUS_HEATERS_HEIGHT))
+  #endif
+
+  static_assert(
+    sizeof(status_heaters_bmp) == (STATUS_HEATERS_BYTEWIDTH) * (STATUS_HEATERS_HEIGHT),
+    "Status heaters bitmap (status_heaters_bmp) dimensions don't match data."
+  );
+
 #endif
-#ifndef STATUS_SCREEN_FAN_TEXT_Y
-  #define STATUS_SCREEN_FAN_TEXT_Y (FAN_ANIM_FRAMES > 2 ? 28 : 27)
+
+//
+// Bed Bitmap Properties
+//
+#ifndef STATUS_BED_WIDTH
+  #define STATUS_BED_WIDTH 0
+#endif
+#ifndef STATUS_BED_BYTEWIDTH
+  #define STATUS_BED_BYTEWIDTH ((STATUS_BED_WIDTH + 7) / 8)
+#endif
+#if STATUS_BED_WIDTH
+
+  #ifndef STATUS_BED_X
+    #define STATUS_BED_X (128 - (STATUS_FAN_BYTEWIDTH + STATUS_BED_BYTEWIDTH) * 8)
+  #endif
+
+  #ifndef STATUS_BED_HEIGHT
+    #ifdef STATUS_BED_ANIM
+      #define STATUS_BED_HEIGHT(S) ((S) ? sizeof(status_bed_on_bmp) / (STATUS_BED_BYTEWIDTH) : sizeof(status_bed_bmp) / (STATUS_BED_BYTEWIDTH))
+    #else
+      #define STATUS_BED_HEIGHT(S) (sizeof(status_bed_bmp) / (STATUS_BED_BYTEWIDTH))
+    #endif
+  #endif
+
+  #ifndef STATUS_BED_Y
+    #define STATUS_BED_Y(S) (20 - STATUS_BED_HEIGHT(S))
+  #endif
+
+  #ifndef STATUS_BED_TEXT_X
+    #define STATUS_BED_TEXT_X (STATUS_BED_X + 8)
+  #endif
+
+  static_assert(
+    sizeof(status_bed_bmp) == (STATUS_BED_BYTEWIDTH) * (STATUS_BED_HEIGHT(0)),
+    "Status bed bitmap (status_bed_bmp) dimensions don't match data."
+  );
+  #ifdef STATUS_BED_ANIM
+    static_assert(
+      sizeof(status_bed_on_bmp) == (STATUS_BED_BYTEWIDTH) * (STATUS_BED_HEIGHT(1)),
+      "Status bed bitmap (status_bed_on_bmp) dimensions don't match data."
+    );
+  #endif
+
 #endif
 
-#define BMP_SIZE (STATUS_BMP_BYTEWIDTH) * (STATUS_SCREENHEIGHT)
-static_assert(sizeof(status_screen0_bmp) == BMP_SIZE, "Status header (status_screen0_bmp) dimensions don't match data.");
-#if FAN_ANIM_FRAMES > 1
-  static_assert(sizeof(status_screen1_bmp) == BMP_SIZE, "Status header (status_screen1_bmp) dimensions don't match data.");
-  #if FAN_ANIM_FRAMES > 2
-    static_assert(sizeof(status_screen2_bmp) == BMP_SIZE, "Status header (status_screen2_bmp) dimensions don't match data.");
-    #if FAN_ANIM_FRAMES > 3
-      static_assert(sizeof(status_screen3_bmp) == BMP_SIZE, "Status header (status_screen3_bmp) dimensions don't match data.");
+//
+// Fan Bitmap Properties
+//
+#ifndef STATUS_FAN_WIDTH
+  #define STATUS_FAN_WIDTH 0
+#endif
+#ifndef STATUS_FAN_BYTEWIDTH
+  #define STATUS_FAN_BYTEWIDTH ((STATUS_FAN_WIDTH + 7) / 8)
+#endif
+#if FAN_ANIM_FRAMES
+  #ifndef STATUS_FAN_X
+    #define STATUS_FAN_X (128 - (STATUS_FAN_BYTEWIDTH) * 8)
+  #endif
+  #ifndef STATUS_FAN_Y
+    #define STATUS_FAN_Y 1
+  #endif
+  #ifndef STATUS_FAN_TEXT_X
+    #define STATUS_FAN_TEXT_X 103
+  #endif
+  #ifndef STATUS_FAN_TEXT_Y
+    #define STATUS_FAN_TEXT_Y 28
+  #endif
+  #ifndef STATUS_FAN_HEIGHT
+    #define STATUS_FAN_HEIGHT (sizeof(status_fan0_bmp) / (STATUS_FAN_BYTEWIDTH))
+  #endif
+  #define FAN_BMP_SIZE (STATUS_FAN_BYTEWIDTH) * (STATUS_FAN_HEIGHT)
+  static_assert(sizeof(status_fan0_bmp) == FAN_BMP_SIZE, "Status fan bitmap (status_fan0_bmp) dimensions don't match data.");
+  #if FAN_ANIM_FRAMES > 1
+    static_assert(sizeof(status_fan1_bmp) == FAN_BMP_SIZE, "Status fan bitmap (status_fan1_bmp) dimensions don't match data.");
+    #if FAN_ANIM_FRAMES > 2
+      static_assert(sizeof(status_fan2_bmp) == FAN_BMP_SIZE, "Status fan bitmap (status_fan2_bmp) dimensions don't match data.");
+      #if FAN_ANIM_FRAMES > 3
+        static_assert(sizeof(status_fan3_bmp) == FAN_BMP_SIZE, "Status fan bitmap (status_fan3_bmp) dimensions don't match data.");
+      #endif
     #endif
   #endif
 #endif

commit b780b69c62b64c7298531255345a28701ffdd47b
Author: N95JPL <37276225+N95JPL@users.noreply.github.com>
Date:   Wed Oct 31 03:39:44 2018 +0000

    Use font ascent and descent for line positioning (#12224)

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
index 2618965061..c5701ea86b 100644
--- a/Marlin/src/lcd/dogm/dogm_Statusscreen.h
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -1094,7 +1094,7 @@
   #define STATUS_SCREEN_BED_TEXT_X 81
 #endif
 #ifndef STATUS_SCREEN_FAN_TEXT_X
-  #define STATUS_SCREEN_FAN_TEXT_X 104
+  #define STATUS_SCREEN_FAN_TEXT_X 103
 #endif
 #ifndef STATUS_SCREEN_FAN_TEXT_Y
   #define STATUS_SCREEN_FAN_TEXT_Y (FAN_ANIM_FRAMES > 2 ? 28 : 27)

commit a964f098b33300b23ce133bc48438684dae91efe
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 27 22:06:25 2018 -0500

    Make dogm status screen a CPP

diff --git a/Marlin/src/lcd/dogm/dogm_Statusscreen.h b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
new file mode 100644
index 0000000000..2618965061
--- /dev/null
+++ b/Marlin/src/lcd/dogm/dogm_Statusscreen.h
@@ -0,0 +1,1113 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Standard Marlin Status Screen bitmaps
+ *
+ * Use the Marlin Bitmap Converter to make your own:
+ * http://marlinfw.org/tools/u8glib/converter.html
+ */
+
+#include <binary.h>
+
+#include "../../inc/MarlinConfig.h"
+
+#if ENABLED(CUSTOM_STATUS_SCREEN_IMAGE)
+
+  /**
+   * Custom _Statusscreen.h files must define STATUS_SCREENWIDTH and status_screen[012]_bmp.
+   * There's no need to define STATUS_SCREENHEIGHT since it's calculated automatically.
+   * You can also define these to modify drawing and animation:
+   *
+   *  - STATUS_SCREEN_X
+   *  - STATUS_SCREEN_{BED,FAN}_TEXT_X
+   *  - STATUS_SCREEN_HOTEND_TEXT_X(i)
+   *  - FAN_ANIM_FRAMES
+   */
+  #include "../../../_Statusscreen.h"
+
+#else // !CUSTOM_STATUS_SCREEN_IMAGE
+
+  // Can also be overridden in Configuration.h
+  // If you can afford it, try the 3-frame fan animation!
+  #ifndef FAN_ANIM_FRAMES
+    #define FAN_ANIM_FRAMES 2
+  #endif
+
+  #if HAS_HEATED_BED && HOTENDS <= 3
+
+    #define STATUS_SCREEN_X        (  8 + (HOTENDS ? 0 : 64))
+    #define STATUS_SCREENWIDTH     (120 - (HOTENDS ? 0 : 64))
+
+    #if HOTENDS == 0
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B00000000,B00100000,B10000010,B00000000,B00100001,B11111111,B00001000,
+          B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
+          B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
+          B00000000,B00100000,B10000010,B00000000,B00100000,B01111100,B00001000,
+          B00000000,B01000001,B00000100,B00000000,B00100001,B11111111,B00001000,
+          B00000000,B10000010,B00001000,B00000000,B00100111,B11000111,B11001000,
+          B00000000,B10000010,B00001000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B01000001,B00000100,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00100000,B10000010,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B11111111,B11111111,B11000000,B00111110,B00000000,B11111000,
+          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
+          B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
+          B00000000,B00100000,B10000010,B00000000,B00100000,B00111001,B11101000,
+          B00000000,B00010000,B01000001,B00000000,B00100000,B01111111,B11111000,
+          B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00100000,B10000010,B00000000,B00111111,B11111100,B00001000,
+          B00000000,B01000001,B00000100,B00000000,B00101111,B00111000,B00001000,
+          B00000000,B10000010,B00001000,B00000000,B00101110,B00011000,B00001000,
+          B00000000,B10000010,B00001000,B00000000,B00101100,B00011110,B00001000,
+          B00000000,B01000001,B00000100,B00000000,B00110000,B00011110,B00011000,
+          B00000000,B00100000,B10000010,B00000000,B00110000,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B11111111,B11111111,B11000000,B00111110,B00011000,B11111000,
+          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
+          B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
+          B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
+          B00000000,B00100000,B10000010,B00000000,B00101111,B10111000,B00001000,
+          B00000000,B00010000,B01000001,B00000000,B00111111,B11111100,B00001000,
+          B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00100000,B10000010,B00000000,B00100000,B01111111,B11111000,
+          B00000000,B01000001,B00000100,B00000000,B00100000,B00111011,B11101000,
+          B00000000,B10000010,B00001000,B00000000,B00100000,B01110001,B11101000,
+          B00000000,B10000010,B00001000,B00000000,B00100000,B11110000,B11101000,
+          B00000000,B01000001,B00000100,B00000000,B00110001,B11110000,B01011000,
+          B00000000,B00100000,B10000010,B00000000,B00110011,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B11111111,B11111111,B11000000,B00111110,B00110000,B11111000,
+          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
+          B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
+          B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
+          B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
+          B00000000,B01000001,B00000100,B00000000,B00101100,B00000000,B11010000,
+          B00000000,B10000010,B00001000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B10000010,B00001000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B01000001,B00000100,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00100000,B10000010,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
+          B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B01000001,B00000100,B00000000,B00101111,B00000011,B11010000,
+          B00000000,B10000010,B00001000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B10000010,B00001000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B01000001,B00000100,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00100000,B10000010,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
+          B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #elif HOTENDS == 1
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100001,B11111111,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111100,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100001,B11111111,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100111,B11000111,B11001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101111,B11000111,B11101000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110111,B10000011,B11011000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110111,B10000011,B11011000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00000000,B11111000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00111001,B11101000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111111,B11111000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00111111,B11111100,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101111,B00111000,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101110,B00011000,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101100,B00011110,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110000,B00011110,B00011000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110000,B00011111,B00011000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00011000,B11111000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101111,B10111000,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111100,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111111,B11111000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100000,B00111011,B11101000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B01110001,B11101000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B11110000,B11101000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110001,B11110000,B01011000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110011,B11110000,B00011000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00110000,B11111000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B00110000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B01111000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100000,B11111100,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110000,B11111100,B00110000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101111,B10000111,B11010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100111,B10000111,B10010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100011,B10000111,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110001,B10000110,B00110000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #elif HOTENDS == 2
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100001,B11111111,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100001,B11111111,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100111,B11000111,B11001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101111,B11000111,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110111,B10000011,B11011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110111,B10000011,B11011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00000000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00111001,B11101000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111111,B11111000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00111111,B11111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101111,B00111000,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101110,B00011000,B00001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101100,B00011110,B00001000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110000,B00011110,B00011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110000,B00011111,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00011000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101111,B10111000,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111111,B11111000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100000,B00111011,B11101000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B01110001,B11101000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B11110000,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00110001,B11110000,B01011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110011,B11110000,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00110000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101100,B00000000,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100000,B01111000,B00010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100000,B11111100,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110000,B11111100,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00101111,B00000011,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00101111,B10000111,B11010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B10000010,B00001000,B00000000,B00100111,B10000111,B10010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B01000001,B00000100,B00000000,B00100011,B10000111,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B10000010,B00000000,B00110001,B10000110,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #else // HOTENDS > 2
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00100001,B11111111,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111100,B00001000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00100001,B11111111,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00100111,B11000111,B11001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00101111,B11000111,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00110111,B10000011,B11011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110111,B10000011,B11011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00000000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00100000,B00111001,B11101000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111111,B11111000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00111111,B11111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00101111,B00111000,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00101110,B00011000,B00001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00101100,B00011110,B00001000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00110000,B00011110,B00011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110000,B00011111,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00011000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00101111,B10111000,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00100000,B01111111,B11111000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00100000,B00111011,B11101000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00100000,B01110001,B11101000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00100000,B11110000,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00110001,B11110000,B01011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110011,B11110000,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111110,B00110000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00101111,B01111011,B11010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00101110,B00110001,B11010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00101100,B00000000,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00100000,B01111000,B00010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00100000,B11111100,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110000,B11111100,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00010000,B01000001,B00000000,B00100000,B01111000,B00010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B10000010,B00000000,B00100000,B00110000,B00010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B01000001,B00000100,B00000000,B00101111,B00000011,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B10000010,B00001000,B00000000,B00101111,B10000111,B11010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B10000010,B00001000,B00000000,B00100111,B10000111,B10010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B01000001,B00000100,B00000000,B00100011,B10000111,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00100000,B10000010,B00000000,B00110001,B10000110,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B11111111,B11111111,B11000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #endif // HOTENDS
+
+  #else // !HAS_HEATED_BED || HOTENDS > 3
+
+    #define STATUS_SCREEN_X        (  8 + (HOTENDS ? 0 : 96))
+    #define STATUS_SCREENWIDTH     (120 - (HOTENDS ? 0 : 96))
+
+    #if HOTENDS == 0
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00111111,B11111111,B11111000,
+          B00111110,B00000000,B11111000,
+          B00111001,B00000001,B00111000,
+          B00110111,B10000011,B11011000,
+          B00110111,B10000011,B11011000,
+          B00101111,B11000111,B11101000,
+          B00100111,B11000111,B11001000,
+          B00100001,B11111111,B00001000,
+          B00100000,B01111100,B00001000,
+          B00100000,B01111100,B00001000,
+          B00100000,B01111100,B00001000,
+          B00100001,B11111111,B00001000,
+          B00100111,B11000111,B11001000,
+          B00101111,B11000111,B11101000,
+          B00110111,B10000011,B11011000,
+          B00110111,B10000011,B11011000,
+          B00111001,B00000001,B00111000,
+          B00111110,B00000000,B11111000,
+          B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00111111,B11111111,B11111000,
+          B00111110,B00110000,B11111000,
+          B00111001,B11110000,B00111000,
+          B00110001,B11110000,B00011000,
+          B00110000,B11110000,B00011000,
+          B00100000,B11110000,B01101000,
+          B00100000,B00110001,B11101000,
+          B00100000,B00111001,B11101000,
+          B00100000,B01111111,B11111000,
+          B00111111,B11111111,B11111000,
+          B00111111,B11111100,B00001000,
+          B00101111,B00111000,B00001000,
+          B00101110,B00011000,B00001000,
+          B00101100,B00011110,B00001000,
+          B00110000,B00011110,B00011000,
+          B00110000,B00011111,B00011000,
+          B00111000,B00011111,B00111000,
+          B00111110,B00011000,B11111000,
+          B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00111111,B11111111,B11111000,
+          B00111110,B00011000,B11111000,
+          B00111000,B00011111,B00111000,
+          B00110000,B00011111,B10011000,
+          B00110100,B00011111,B00011000,
+          B00101110,B00011110,B00001000,
+          B00101111,B00011100,B00001000,
+          B00101111,B10111000,B00001000,
+          B00111111,B11111100,B00001000,
+          B00111111,B11111111,B11111000,
+          B00100000,B01111111,B11111000,
+          B00100000,B00111011,B11101000,
+          B00100000,B01110001,B11101000,
+          B00100000,B11110000,B11101000,
+          B00110001,B11110000,B01011000,
+          B00110011,B11110000,B00011000,
+          B00111001,B11110000,B00111000,
+          B00111110,B00110000,B11111000,
+          B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00111111,B11111111,B11110000,
+          B00111000,B00000000,B01110000,
+          B00110000,B11111100,B00110000,
+          B00100000,B11111100,B00010000,
+          B00100000,B01111000,B00010000,
+          B00100000,B00110000,B00010000,
+          B00101100,B00000000,B11010000,
+          B00101110,B00110001,B11010000,
+          B00101111,B01111011,B11010000,
+          B00101111,B01111011,B11010000,
+          B00101110,B00110001,B11010000,
+          B00101100,B00000000,B11010000,
+          B00100000,B00110000,B00010000,
+          B00100000,B01111000,B00010000,
+          B00100000,B11111100,B00010000,
+          B00110000,B11111100,B00110000,
+          B00111000,B00000000,B01110000,
+          B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00111111,B11111111,B11110000,
+          B00111000,B00000000,B01110000,
+          B00110001,B10000110,B00110000,
+          B00100011,B10000111,B00010000,
+          B00100111,B10000111,B10010000,
+          B00101111,B10000111,B11010000,
+          B00101111,B00000011,B11010000,
+          B00100000,B00110000,B00010000,
+          B00100000,B01111000,B00010000,
+          B00100000,B01111000,B00010000,
+          B00100000,B00110000,B00010000,
+          B00101111,B00000011,B11010000,
+          B00101111,B10000111,B11010000,
+          B00100111,B10000111,B10010000,
+          B00100011,B10000111,B00010000,
+          B00110001,B10000110,B00110000,
+          B00111000,B00000000,B01110000,
+          B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #elif HOTENDS == 1
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111001,B11101000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00111000,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011000,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00011110,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011110,B00011000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B00011000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10111000,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111011,B11101000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01110001,B11101000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B11101000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B01011000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110011,B11110000,B00011000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B01111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #elif HOTENDS == 2
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111001,B11101000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00111000,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011000,B00001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00011110,B00001000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011110,B00011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10111000,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111011,B11101000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01110001,B11101000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B01011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110011,B11110000,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #elif HOTENDS == 3
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00100001,B11111111,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111001,B11101000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00101111,B00111000,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011000,B00001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00101100,B00011110,B00001000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011110,B00011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00101111,B10111000,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111111,B11111000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B00111011,B11101000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00100000,B01110001,B11101000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B01011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110011,B11110000,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00101111,B01111011,B11010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00101110,B00110001,B11010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #elif HOTENDS > 3
+
+      #if FAN_ANIM_FRAMES == 3
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00000000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B00000001,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110111,B10000011,B11011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B11000111,B11101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B11000111,B11001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100001,B11111111,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111100,B00001000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00100001,B11111111,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00100111,B11000111,B11001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00101111,B11000111,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00110111,B10000011,B11011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110111,B10000011,B11011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111001,B00000001,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111110,B00000000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00110000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111001,B11110000,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11110000,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11110000,B01101000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110001,B11101000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B00111001,B11101000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111111,B11111000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00111111,B11111100,B00001000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00101111,B00111000,B00001000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00101110,B00011000,B00001000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00101100,B00011110,B00001000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00110000,B00011110,B00011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110000,B00011111,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111000,B00011111,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111110,B00011000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+        const unsigned char status_screen2_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00011000,B11111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00011111,B00111000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00011111,B10011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110100,B00011111,B00011000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00011110,B00001000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00011100,B00001000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00101111,B10111000,B00001000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B11111100,B00001000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111111,B11111111,B11111000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111111,B11111000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00100000,B00111011,B11101000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00100000,B01110001,B11101000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B11110000,B11101000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00110001,B11110000,B01011000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110011,B11110000,B00011000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111001,B11110000,B00111000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111110,B00110000,B11111000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00111111,B11111111,B11111000
+        };
+      #else
+        const unsigned char status_screen0_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B11111100,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B11111100,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B01111000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,B00110000,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101100,B00000000,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00101110,B00110001,B11010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00101111,B01111011,B11010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00101111,B01111011,B11010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00101110,B00110001,B11010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00101100,B00000000,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00100000,B01111000,B00010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00100000,B11111100,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110000,B11111100,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000
+        };
+        const unsigned char status_screen1_bmp[] PROGMEM = {
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B01110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110001,B10000110,B00110000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100011,B10000111,B00010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00100111,B10000111,B10010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B10000111,B11010000,
+          B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101111,B00000011,B11010000,
+          B00111111,B11000000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00011111,B11100000,B00000000,B00100000,B00110000,B00010000,
+          B01111101,B11100000,B00000000,B00111100,B11110000,B00000000,B00111100,B11110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111000,B00010000,
+          B01111001,B11100000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B01111000,B00010000,
+          B01110101,B11100000,B00000000,B00111111,B01110000,B00000000,B00111111,B01110000,B00000000,B00111011,B01110000,B00000000,B00100000,B00110000,B00010000,
+          B00111101,B11000000,B00000000,B00011110,B11100000,B00000000,B00011100,B11100000,B00000000,B00011011,B01100000,B00000000,B00101111,B00000011,B11010000,
+          B00111101,B11000000,B00000000,B00011101,B11100000,B00000000,B00011111,B01100000,B00000000,B00011000,B00100000,B00000000,B00101111,B10000111,B11010000,
+          B01111101,B11100000,B00000000,B00111011,B11110000,B00000000,B00111011,B01110000,B00000000,B00111111,B01110000,B00000000,B00100111,B10000111,B10010000,
+          B01111101,B11100000,B00000000,B00111000,B01110000,B00000000,B00111100,B11110000,B00000000,B00111111,B01110000,B00000000,B00100011,B10000111,B00010000,
+          B01111111,B11100000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00111111,B11110000,B00000000,B00110001,B10000110,B00110000,
+          B00011111,B10000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00001111,B11000000,B00000000,B00111000,B00000000,B01110000,
+          B00001111,B00000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00000111,B10000000,B00000000,B00111111,B11111111,B11110000,
+          B00000110,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000
+        };
+      #endif
+
+    #endif // HOTENDS
+
+  #endif // !HAS_HEATED_BED || HOTENDS > 3
+
+#endif // !CUSTOM_STATUS_SCREEN_IMAGE
+
+#ifndef FAN_ANIM_FRAMES
+  #define FAN_ANIM_FRAMES 2
+#elif FAN_ANIM_FRAMES > 3
+  #error "Only 3 fan animation frames currently supported."
+#endif
+#ifndef STATUS_SCREEN_X
+  #define STATUS_SCREEN_X 0
+#endif
+#ifndef STATUS_SCREEN_Y
+  #define STATUS_SCREEN_Y 1
+#endif
+#ifndef STATUS_BMP_BYTEWIDTH
+  #define STATUS_BMP_BYTEWIDTH ((STATUS_SCREENWIDTH + 7) / 8)
+#endif
+#ifndef STATUS_SCREENHEIGHT
+  #define STATUS_SCREENHEIGHT (sizeof(status_screen0_bmp) / (STATUS_BMP_BYTEWIDTH))
+#endif
+#ifndef STATUS_SCREEN_HOTEND_TEXT_X
+  #define STATUS_SCREEN_HOTEND_TEXT_X(i) (5 + (i) * 25)
+#endif
+#ifndef STATUS_SCREEN_BED_TEXT_X
+  #define STATUS_SCREEN_BED_TEXT_X 81
+#endif
+#ifndef STATUS_SCREEN_FAN_TEXT_X
+  #define STATUS_SCREEN_FAN_TEXT_X 104
+#endif
+#ifndef STATUS_SCREEN_FAN_TEXT_Y
+  #define STATUS_SCREEN_FAN_TEXT_Y (FAN_ANIM_FRAMES > 2 ? 28 : 27)
+#endif
+
+#define BMP_SIZE (STATUS_BMP_BYTEWIDTH) * (STATUS_SCREENHEIGHT)
+static_assert(sizeof(status_screen0_bmp) == BMP_SIZE, "Status header (status_screen0_bmp) dimensions don't match data.");
+#if FAN_ANIM_FRAMES > 1
+  static_assert(sizeof(status_screen1_bmp) == BMP_SIZE, "Status header (status_screen1_bmp) dimensions don't match data.");
+  #if FAN_ANIM_FRAMES > 2
+    static_assert(sizeof(status_screen2_bmp) == BMP_SIZE, "Status header (status_screen2_bmp) dimensions don't match data.");
+    #if FAN_ANIM_FRAMES > 3
+      static_assert(sizeof(status_screen3_bmp) == BMP_SIZE, "Status header (status_screen3_bmp) dimensions don't match data.");
+    #endif
+  #endif
+#endif
