commit 5639237e2b174715413f9ffc6f6421db9150d9d6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jan 29 20:38:03 2024 -0600

    üé® Misc. cleanup 29-01

diff --git a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
index f16bdde29a..3254da3a37 100644
--- a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
+++ b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
@@ -91,7 +91,6 @@ void FileNavigator::getFiles(uint16_t index) {
   }
   lastindex = index;
 
-
   // Clear currently drawn screen
   for (int i = 0; i < DISPLAY_FILES; i++) {
     for (int j = 0; j < 20; j++)

commit 37d0f49a82cd2e4d91dce4e62671b266924eb2a7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 01:05:55 2023 -0500

    üßë‚Äçüíª Misc. ExtUI LCD cleanup (#25872)

diff --git a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
index 6aa9b7c7c8..f16bdde29a 100644
--- a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
+++ b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
@@ -33,23 +33,23 @@
 
 #if DGUS_LCD_UI_IA_CREALITY
 
-#include "ia_creality_extui.h"
+#include "ia_creality_rts.h"
 #include "FileNavigator.h"
 
-using namespace ExtUI;
+#include <WString.h>
 
-FileList  FileNavigator::filelist;                          // Instance of the Marlin file API
-char      FileNavigator::currentfoldername[MAX_PATH_LEN];   // Current folder path
+ExtUI::FileList FileNavigator::filelist;                // ExtUI file API
+char      FileNavigator::currentDirPath[MAX_PATH_LEN];  // Current folder path
 uint16_t  FileNavigator::lastindex;
 uint8_t   FileNavigator::folderdepth;
-uint16_t  FileNavigator::currentindex;                      // override the panel request
+uint16_t  FileNavigator::currentindex;                  // override the panel request
 
 FileNavigator filenavigator;
 
 FileNavigator::FileNavigator() { reset(); }
 
 void FileNavigator::reset() {
-  currentfoldername[0] = '\0';
+  currentDirPath[0] = '\0';
   folderdepth  = 0;
   currentindex = 0;
   lastindex    = 0;
@@ -136,7 +136,7 @@ void FileNavigator::getFiles(uint16_t index) {
         rts.sendData((uint8_t)0, FilenameIcon + (fcnt+1));
         rts.sendData((unsigned long)0xFFFF, (FilenameNature + ((1+fcnt) * 16))); // white
       }
-      SERIAL_ECHOLNPGM("-", seek, " '", filelist.filename(), "' '", currentfoldername, "", filelist.shortFilename(), "'\n");
+      SERIAL_ECHOLNPGM("-", seek, " '", filelist.filename(), "' '", currentDirPath, "", filelist.shortFilename(), "'\n");
       fcnt++;
     }
   }
@@ -144,8 +144,8 @@ void FileNavigator::getFiles(uint16_t index) {
 
 void FileNavigator::changeDIR(char *folder) {
   if (folderdepth >= MAX_FOLDER_DEPTH) return; // limit the folder depth
-  strcat(currentfoldername, folder);
-  strcat(currentfoldername, "/");
+  strcat(currentDirPath, folder);
+  strcat(currentDirPath, "/");
   filelist.changeDir(folder);
   refresh();
   folderdepth++;
@@ -159,17 +159,17 @@ void FileNavigator::upDIR() {
   currentindex = 0;
   // Remove the last child folder from the stored path
   if (folderdepth == 0) {
-    currentfoldername[0] = '\0';
+    currentDirPath[0] = '\0';
     reset();
   }
   else {
     char *pos = nullptr;
     for (uint8_t f = 0; f < folderdepth; f++)
-      pos = strchr(currentfoldername, '/');
+      pos = strchr(currentDirPath, '/');
     pos[1] = '\0';
   }
 }
 
-char* FileNavigator::getCurrentFolderName() { return currentfoldername; }
+char* FileNavigator::getCurrentDirPath() { return currentDirPath; }
 
 #endif // DGUS_LCD_UI_IA_CREALITY

commit 5201869a55ae838a24afe7b05cc028e1b4fdd532
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue May 2 18:26:06 2023 -0500

    üßë‚Äçüíª IA RTS refactor

diff --git a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
index 4e2d294a9b..6aa9b7c7c8 100644
--- a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
+++ b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
@@ -95,23 +95,23 @@ void FileNavigator::getFiles(uint16_t index) {
   // Clear currently drawn screen
   for (int i = 0; i < DISPLAY_FILES; i++) {
     for (int j = 0; j < 20; j++)
-      rtscheck.RTS_SndData(0, SDFILE_ADDR + (i * 20) + j);
+      rts.sendData(0, SDFILE_ADDR + (i * 20) + j);
   }
 
   for (int j = 0; j < 10; j++) {
-    rtscheck.RTS_SndData(0, Printfilename + j);  // clear screen.
-    rtscheck.RTS_SndData(0, Choosefilename + j); // clear filename
+    rts.sendData(0, Printfilename + j);  // clear screen.
+    rts.sendData(0, Choosefilename + j); // clear filename
   }
   for (int j = 0; j < 8; j++)
-    rtscheck.RTS_SndData(0, FilenameCount + j);
+    rts.sendData(0, FilenameCount + j);
   for (int j = 1; j <= DISPLAY_FILES; j++) {
-    rtscheck.RTS_SndData(10, FilenameIcon + j);
-    rtscheck.RTS_SndData(10, FilenameIcon1 + j);
+    rts.sendData(10, FilenameIcon + j);
+    rts.sendData(10, FilenameIcon1 + j);
   }
 
   if (currentindex == 0 && folderdepth > 0) { // Add a link to go up a folder
     files--;
-    rtscheck.RTS_SndData("Up Directory", SDFILE_ADDR);
+    rts.sendData("Up Directory", SDFILE_ADDR);
     fcnt++;
   }
   else if (currentindex == DISPLAY_FILES && folderdepth > 0)
@@ -123,18 +123,18 @@ void FileNavigator::getFiles(uint16_t index) {
       if (filelen > 20) {
         char *buf = (char *)filelist.filename();
         buf[18] = '\0'; // cutoff at screen edge
-        rtscheck.RTS_SndData(buf, (SDFILE_ADDR + (fcnt * 20)));
+        rts.sendData(buf, (SDFILE_ADDR + (fcnt * 20)));
       }
       else
-        rtscheck.RTS_SndData(filelist.filename(), (SDFILE_ADDR + (fcnt * 20)));
+        rts.sendData(filelist.filename(), (SDFILE_ADDR + (fcnt * 20)));
 
       if (filelist.isDir()) {
-        rtscheck.RTS_SndData((uint8_t)4, FilenameIcon + (fcnt+1));
-        rtscheck.RTS_SndData((unsigned long)0x041F, (FilenameNature + ((1+fcnt) * 16))); // Change BG of selected line to Blue
+        rts.sendData((uint8_t)4, FilenameIcon + (fcnt+1));
+        rts.sendData((unsigned long)0x041F, (FilenameNature + ((1+fcnt) * 16))); // Change BG of selected line to Blue
       }
       else {
-        rtscheck.RTS_SndData((uint8_t)0, FilenameIcon + (fcnt+1));
-        rtscheck.RTS_SndData((unsigned long)0xFFFF, (FilenameNature + ((1+fcnt) * 16))); // white
+        rts.sendData((uint8_t)0, FilenameIcon + (fcnt+1));
+        rts.sendData((unsigned long)0xFFFF, (FilenameNature + ((1+fcnt) * 16))); // white
       }
       SERIAL_ECHOLNPGM("-", seek, " '", filelist.filename(), "' '", currentfoldername, "", filelist.shortFilename(), "'\n");
       fcnt++;

commit ce97e42aa0a385f52fc5814595274241f73184a9
Author: Davide Rombol√† <davide.rombola@gmail.com>
Date:   Sat Mar 18 07:33:57 2023 +0100

    üé® Clean up IA_CREALITY includes (#25530)

diff --git a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
index 448d078cc4..4e2d294a9b 100644
--- a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
+++ b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
@@ -33,13 +33,11 @@
 
 #if DGUS_LCD_UI_IA_CREALITY
 
+#include "ia_creality_extui.h"
 #include "FileNavigator.h"
 
 using namespace ExtUI;
 
-#define DEBUG_OUT ENABLED(DEBUG_DWIN)
-#include "../../../core/debug_out.h"
-
 FileList  FileNavigator::filelist;                          // Instance of the Marlin file API
 char      FileNavigator::currentfoldername[MAX_PATH_LEN];   // Current folder path
 uint16_t  FileNavigator::lastindex;
@@ -124,8 +122,6 @@ void FileNavigator::getFiles(uint16_t index) {
       const int filelen = strlen(filelist.filename());
       if (filelen > 20) {
         char *buf = (char *)filelist.filename();
-        //char buf[filelen];
-        //strcpy(&buf[filelen], filelist.filename());
         buf[18] = '\0'; // cutoff at screen edge
         rtscheck.RTS_SndData(buf, (SDFILE_ADDR + (fcnt * 20)));
       }

commit 96bc084f3d791bc93265f217181986863e8e5fc7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 18 02:15:16 2023 -0600

    üé® Misc. LCD cleanup (#25400)

diff --git a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
index cdde3c4f6b..448d078cc4 100644
--- a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
+++ b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
@@ -111,8 +111,6 @@ void FileNavigator::getFiles(uint16_t index) {
     rtscheck.RTS_SndData(10, FilenameIcon1 + j);
   }
 
-  DEBUG_ECHOLNPGM("index=", index, " currentindex=", currentindex, "folderdepth=", folderdepth);
-
   if (currentindex == 0 && folderdepth > 0) { // Add a link to go up a folder
     files--;
     rtscheck.RTS_SndData("Up Directory", SDFILE_ADDR);
@@ -149,7 +147,6 @@ void FileNavigator::getFiles(uint16_t index) {
 }
 
 void FileNavigator::changeDIR(char *folder) {
-  DEBUG_ECHOLNPGM("currentfolder: ", currentfoldername, "  New: ", folder);
   if (folderdepth >= MAX_FOLDER_DEPTH) return; // limit the folder depth
   strcat(currentfoldername, folder);
   strcat(currentfoldername, "/");
@@ -175,7 +172,6 @@ void FileNavigator::upDIR() {
       pos = strchr(currentfoldername, '/');
     pos[1] = '\0';
   }
-  DEBUG_ECHOLNPGM("depth: ", folderdepth, " currentfoldername: ", currentfoldername);
 }
 
 char* FileNavigator::getCurrentFolderName() { return currentfoldername; }

commit c3fe4abd446336c50bdb892f08fa24a08f1bdda5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 7 22:59:25 2023 -0600

    üî® DGUS_LCD_UI version check

diff --git a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
index 7a191e906a..cdde3c4f6b 100644
--- a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
+++ b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
@@ -31,7 +31,7 @@
 
 #include "../../../inc/MarlinConfigPre.h"
 
-#if ENABLED(DGUS_LCD_UI_IA_CREALITY)
+#if DGUS_LCD_UI_IA_CREALITY
 
 #include "FileNavigator.h"
 

commit 32e8627510498da3a88d9e198f7c17a6a2ad8a66
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sun Jan 1 15:38:13 2023 +1300

    ‚ú® New DGUS_LCD_UI option, IA_CREALITY (#25143)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
new file mode 100644
index 0000000000..7a191e906a
--- /dev/null
+++ b/Marlin/src/lcd/extui/ia_creality/FileNavigator.cpp
@@ -0,0 +1,183 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2022 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+
+/* ****************************************
+ * lcd/extui/ia_creality/FileNavigator.cpp
+ * ****************************************
+ * Extensible_UI implementation for Creality DWIN
+ * 10SPro, Max, CR10V2
+ * Based on implementations for Anycubic Chiron and Nextion by Nick Wells and Skorpi08
+ * Written by Insanity Automation
+ * ***************************************/
+
+#include "../../../inc/MarlinConfigPre.h"
+
+#if ENABLED(DGUS_LCD_UI_IA_CREALITY)
+
+#include "FileNavigator.h"
+
+using namespace ExtUI;
+
+#define DEBUG_OUT ENABLED(DEBUG_DWIN)
+#include "../../../core/debug_out.h"
+
+FileList  FileNavigator::filelist;                          // Instance of the Marlin file API
+char      FileNavigator::currentfoldername[MAX_PATH_LEN];   // Current folder path
+uint16_t  FileNavigator::lastindex;
+uint8_t   FileNavigator::folderdepth;
+uint16_t  FileNavigator::currentindex;                      // override the panel request
+
+FileNavigator filenavigator;
+
+FileNavigator::FileNavigator() { reset(); }
+
+void FileNavigator::reset() {
+  currentfoldername[0] = '\0';
+  folderdepth  = 0;
+  currentindex = 0;
+  lastindex    = 0;
+  // Start at root folder
+  while (!filelist.isAtRootDir()) filelist.upDir();
+  refresh();
+}
+
+void FileNavigator::refresh() { filelist.refresh(); }
+
+bool FileNavigator::getIndexisDir(uint16_t index){
+  filelist.seek(index);
+  return filelist.isDir();
+}
+
+const char *FileNavigator::getIndexName(uint16_t index){
+  filelist.seek(index);
+  return filelist.shortFilename();
+}
+
+uint16_t FileNavigator::maxFiles() {
+  return filelist.count();
+}
+
+void FileNavigator::getFiles(uint16_t index) {
+  uint16_t files = DISPLAY_FILES, fcnt  = 0;
+  if (index == 0)
+    currentindex = 0;
+  else {
+    // Each time we change folder we reset the file index to 0 and keep track
+    // of the current position as the TFT panel isn't aware of folder trees.
+    --currentindex; // go back a file to take account of the .. added to the root.
+    if (index > lastindex)
+      currentindex += files + 1;
+    else if (currentindex >= files)
+      currentindex -= files - 1;
+    else
+      currentindex = 0;
+  }
+  lastindex = index;
+
+
+  // Clear currently drawn screen
+  for (int i = 0; i < DISPLAY_FILES; i++) {
+    for (int j = 0; j < 20; j++)
+      rtscheck.RTS_SndData(0, SDFILE_ADDR + (i * 20) + j);
+  }
+
+  for (int j = 0; j < 10; j++) {
+    rtscheck.RTS_SndData(0, Printfilename + j);  // clear screen.
+    rtscheck.RTS_SndData(0, Choosefilename + j); // clear filename
+  }
+  for (int j = 0; j < 8; j++)
+    rtscheck.RTS_SndData(0, FilenameCount + j);
+  for (int j = 1; j <= DISPLAY_FILES; j++) {
+    rtscheck.RTS_SndData(10, FilenameIcon + j);
+    rtscheck.RTS_SndData(10, FilenameIcon1 + j);
+  }
+
+  DEBUG_ECHOLNPGM("index=", index, " currentindex=", currentindex, "folderdepth=", folderdepth);
+
+  if (currentindex == 0 && folderdepth > 0) { // Add a link to go up a folder
+    files--;
+    rtscheck.RTS_SndData("Up Directory", SDFILE_ADDR);
+    fcnt++;
+  }
+  else if (currentindex == DISPLAY_FILES && folderdepth > 0)
+    currentindex--;
+
+  for (uint16_t seek = currentindex; seek < currentindex + files; seek++) {
+    if (filelist.seek(seek)) {
+      const int filelen = strlen(filelist.filename());
+      if (filelen > 20) {
+        char *buf = (char *)filelist.filename();
+        //char buf[filelen];
+        //strcpy(&buf[filelen], filelist.filename());
+        buf[18] = '\0'; // cutoff at screen edge
+        rtscheck.RTS_SndData(buf, (SDFILE_ADDR + (fcnt * 20)));
+      }
+      else
+        rtscheck.RTS_SndData(filelist.filename(), (SDFILE_ADDR + (fcnt * 20)));
+
+      if (filelist.isDir()) {
+        rtscheck.RTS_SndData((uint8_t)4, FilenameIcon + (fcnt+1));
+        rtscheck.RTS_SndData((unsigned long)0x041F, (FilenameNature + ((1+fcnt) * 16))); // Change BG of selected line to Blue
+      }
+      else {
+        rtscheck.RTS_SndData((uint8_t)0, FilenameIcon + (fcnt+1));
+        rtscheck.RTS_SndData((unsigned long)0xFFFF, (FilenameNature + ((1+fcnt) * 16))); // white
+      }
+      SERIAL_ECHOLNPGM("-", seek, " '", filelist.filename(), "' '", currentfoldername, "", filelist.shortFilename(), "'\n");
+      fcnt++;
+    }
+  }
+}
+
+void FileNavigator::changeDIR(char *folder) {
+  DEBUG_ECHOLNPGM("currentfolder: ", currentfoldername, "  New: ", folder);
+  if (folderdepth >= MAX_FOLDER_DEPTH) return; // limit the folder depth
+  strcat(currentfoldername, folder);
+  strcat(currentfoldername, "/");
+  filelist.changeDir(folder);
+  refresh();
+  folderdepth++;
+  currentindex = 0;
+}
+
+void FileNavigator::upDIR() {
+  filelist.upDir();
+  refresh();
+  folderdepth--;
+  currentindex = 0;
+  // Remove the last child folder from the stored path
+  if (folderdepth == 0) {
+    currentfoldername[0] = '\0';
+    reset();
+  }
+  else {
+    char *pos = nullptr;
+    for (uint8_t f = 0; f < folderdepth; f++)
+      pos = strchr(currentfoldername, '/');
+    pos[1] = '\0';
+  }
+  DEBUG_ECHOLNPGM("depth: ", folderdepth, " currentfoldername: ", currentfoldername);
+}
+
+char* FileNavigator::getCurrentFolderName() { return currentfoldername; }
+
+#endif // DGUS_LCD_UI_IA_CREALITY
