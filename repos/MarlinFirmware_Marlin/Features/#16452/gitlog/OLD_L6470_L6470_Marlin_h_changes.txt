commit 1ad53cee1f4e2768310fca98de0381df9c39b617
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Mon Jan 13 18:47:30 2020 -0600

    Improved STMicro L64XX stepper driver support (#16452)

diff --git a/Marlin/src/libs/L6470/L6470_Marlin.h b/Marlin/src/libs/L6470/L6470_Marlin.h
deleted file mode 100644
index bc9a033e4a..0000000000
--- a/Marlin/src/libs/L6470/L6470_Marlin.h
+++ /dev/null
@@ -1,72 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- */
-#pragma once
-
-#include "../../inc/MarlinConfig.h"
-
-#include <L6470.h>
-
-#define L6470_GETPARAM(P,Q) stepper##Q.GetParam(P)
-
-enum L6470_driver_enum : unsigned char { X, Y, Z, X2, Y2, Z2, Z3, E0, E1, E2, E3, E4, E5, MAX_L6470 };
-
-#define L6470_ERROR_MASK  (STATUS_UVLO | STATUS_TH_WRN | STATUS_TH_SD  | STATUS_OCD | STATUS_STEP_LOSS_A | STATUS_STEP_LOSS_B)
-#define dSPIN_STEP_CLOCK_FWD dSPIN_STEP_CLOCK
-#define dSPIN_STEP_CLOCK_REV dSPIN_STEP_CLOCK+1
-
-class L6470_Marlin {
-public:
-  static bool index_to_dir[MAX_L6470];
-  static uint8_t axis_xref[MAX_L6470];
-  static char index_to_axis[MAX_L6470][3];
-  static uint8_t dir_commands[MAX_L6470];
-
-  // Flags to guarantee graceful switch if stepper interrupts L6470 SPI transfer
-  static volatile bool spi_abort;
-  static bool spi_active;
-
-  L6470_Marlin() {}
-
-  static uint16_t get_status(const uint8_t axis);
-
-  static uint32_t get_param(uint8_t axis, uint8_t param);
-
-  static void set_param(uint8_t axis, uint8_t param, uint32_t value);
-
-  static bool get_user_input(uint8_t &driver_count, uint8_t axis_index[3], char axis_mon[3][3],
-                             float &position_max, float &position_min, float &final_feedrate, uint8_t &kval_hold,
-                             bool over_current_flag, uint8_t &OCD_TH_val, uint8_t &STALL_TH_val, uint16_t &over_current_threshold);
-
-  static void error_status_decode(const uint16_t status, const uint8_t axis);
-
-  static void monitor_driver();
-
-  static void init();
-  static void init_to_defaults();
-
-  static void say_axis(const uint8_t axis, const bool label=true);
-
-private:
-  void populate_chain_array();
-};
-
-extern L6470_Marlin L6470;

commit 713157f712ab4b60dabd4759e1cec0a987e8deaa
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 8 07:17:38 2019 -0500

    Move L6470 enum

diff --git a/Marlin/src/libs/L6470/L6470_Marlin.h b/Marlin/src/libs/L6470/L6470_Marlin.h
index 3311574a16..bc9a033e4a 100644
--- a/Marlin/src/libs/L6470/L6470_Marlin.h
+++ b/Marlin/src/libs/L6470/L6470_Marlin.h
@@ -27,7 +27,7 @@
 
 #define L6470_GETPARAM(P,Q) stepper##Q.GetParam(P)
 
-#define MAX_L6470  (7 + MAX_EXTRUDERS) // Maximum number of axes in Marlin
+enum L6470_driver_enum : unsigned char { X, Y, Z, X2, Y2, Z2, Z3, E0, E1, E2, E3, E4, E5, MAX_L6470 };
 
 #define L6470_ERROR_MASK  (STATUS_UVLO | STATUS_TH_WRN | STATUS_TH_SD  | STATUS_OCD | STATUS_STEP_LOSS_A | STATUS_STEP_LOSS_B)
 #define dSPIN_STEP_CLOCK_FWD dSPIN_STEP_CLOCK

commit 179d6c4ed115e67ae826b5738e0009c6be2d58ea
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Aug 14 20:05:15 2019 -0600

    Add STARTUP_SCRIPT option. M17 parity with M18. (#14953)

diff --git a/Marlin/src/libs/L6470/L6470_Marlin.h b/Marlin/src/libs/L6470/L6470_Marlin.h
index 92745b6e3e..3311574a16 100644
--- a/Marlin/src/libs/L6470/L6470_Marlin.h
+++ b/Marlin/src/libs/L6470/L6470_Marlin.h
@@ -32,8 +32,6 @@
 #define L6470_ERROR_MASK  (STATUS_UVLO | STATUS_TH_WRN | STATUS_TH_SD  | STATUS_OCD | STATUS_STEP_LOSS_A | STATUS_STEP_LOSS_B)
 #define dSPIN_STEP_CLOCK_FWD dSPIN_STEP_CLOCK
 #define dSPIN_STEP_CLOCK_REV dSPIN_STEP_CLOCK+1
-#define HAS_L6470_EXTRUDER ( AXIS_DRIVER_TYPE_E0(L6470) || AXIS_DRIVER_TYPE_E1(L6470) || AXIS_DRIVER_TYPE_E2(L6470) \
-                          || AXIS_DRIVER_TYPE_E3(L6470) || AXIS_DRIVER_TYPE_E4(L6470) || AXIS_DRIVER_TYPE_E5(L6470) )
 
 class L6470_Marlin {
 public:

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/libs/L6470/L6470_Marlin.h b/Marlin/src/libs/L6470/L6470_Marlin.h
index 43ebd6ef08..92745b6e3e 100644
--- a/Marlin/src/libs/L6470/L6470_Marlin.h
+++ b/Marlin/src/libs/L6470/L6470_Marlin.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit f5bcc00570bd5ae2ba0deaa7af0ba4d3ce7c3b02
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 14 02:25:42 2019 -0500

    Unify debugging output with debug_out.h (#13388)

diff --git a/Marlin/src/libs/L6470/L6470_Marlin.h b/Marlin/src/libs/L6470/L6470_Marlin.h
index a29e40739e..43ebd6ef08 100644
--- a/Marlin/src/libs/L6470/L6470_Marlin.h
+++ b/Marlin/src/libs/L6470/L6470_Marlin.h
@@ -25,26 +25,6 @@
 
 #include <L6470.h>
 
-#if ENABLED(L6470_CHITCHAT)
-  #define L6470_EOL()           SERIAL_EOL()
-  #define L6470_CHAR(C)         SERIAL_CHAR(C)
-  #define L6470_ECHO(V)         SERIAL_ECHO(V)
-  #define L6470_ECHOLN(V)       SERIAL_ECHOLN(V)
-  #define L6470_ECHOPGM(S)      SERIAL_ECHOPGM(S)
-  #define L6470_ECHOLNPGM(S)    SERIAL_ECHOLNPGM(S)
-  #define L6470_ECHOPAIR(S,V)   SERIAL_ECHOPAIR(S,V)
-  #define L6470_ECHOLNPAIR(S,V) SERIAL_ECHOLNPAIR(S,V)
-#else
-  #define L6470_EOL()           NOOP
-  #define L6470_CHAR(C)         NOOP
-  #define L6470_ECHO(V)         NOOP
-  #define L6470_ECHOLN(V)       NOOP
-  #define L6470_ECHOPGM(S)      NOOP
-  #define L6470_ECHOLNPGM(S)    NOOP
-  #define L6470_ECHOPAIR(S,V)   NOOP
-  #define L6470_ECHOLNPAIR(S,V) NOOP
-#endif
-
 #define L6470_GETPARAM(P,Q) stepper##Q.GetParam(P)
 
 #define MAX_L6470  (7 + MAX_EXTRUDERS) // Maximum number of axes in Marlin

commit fa236e9718cd2feb85a1986b8f56ad97cd2f4871
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Mar 1 19:29:48 2019 -0600

    General cleanup ahead of L64XX

diff --git a/Marlin/src/libs/L6470/L6470_Marlin.h b/Marlin/src/libs/L6470/L6470_Marlin.h
index b2bbcc2ee4..a29e40739e 100644
--- a/Marlin/src/libs/L6470/L6470_Marlin.h
+++ b/Marlin/src/libs/L6470/L6470_Marlin.h
@@ -19,6 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 #include "../../inc/MarlinConfig.h"
 
@@ -61,7 +62,7 @@ public:
   static char index_to_axis[MAX_L6470][3];
   static uint8_t dir_commands[MAX_L6470];
 
-  // flags to guarantee graceful switch if stepper interrupts L6470 SPI transfer
+  // Flags to guarantee graceful switch if stepper interrupts L6470 SPI transfer
   static volatile bool spi_abort;
   static bool spi_active;
 

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/libs/L6470/L6470_Marlin.h b/Marlin/src/libs/L6470/L6470_Marlin.h
index a84e87eaa0..b2bbcc2ee4 100644
--- a/Marlin/src/libs/L6470/L6470_Marlin.h
+++ b/Marlin/src/libs/L6470/L6470_Marlin.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2018 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 2f35747f294c4b3dc3e6920b34e208f89bd4841d
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Jan 23 19:06:54 2019 -0600

    L6470 SPI daisy chain support (#12895)

diff --git a/Marlin/src/libs/L6470/L6470_Marlin.h b/Marlin/src/libs/L6470/L6470_Marlin.h
new file mode 100644
index 0000000000..a84e87eaa0
--- /dev/null
+++ b/Marlin/src/libs/L6470/L6470_Marlin.h
@@ -0,0 +1,93 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2018 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../inc/MarlinConfig.h"
+
+#include <L6470.h>
+
+#if ENABLED(L6470_CHITCHAT)
+  #define L6470_EOL()           SERIAL_EOL()
+  #define L6470_CHAR(C)         SERIAL_CHAR(C)
+  #define L6470_ECHO(V)         SERIAL_ECHO(V)
+  #define L6470_ECHOLN(V)       SERIAL_ECHOLN(V)
+  #define L6470_ECHOPGM(S)      SERIAL_ECHOPGM(S)
+  #define L6470_ECHOLNPGM(S)    SERIAL_ECHOLNPGM(S)
+  #define L6470_ECHOPAIR(S,V)   SERIAL_ECHOPAIR(S,V)
+  #define L6470_ECHOLNPAIR(S,V) SERIAL_ECHOLNPAIR(S,V)
+#else
+  #define L6470_EOL()           NOOP
+  #define L6470_CHAR(C)         NOOP
+  #define L6470_ECHO(V)         NOOP
+  #define L6470_ECHOLN(V)       NOOP
+  #define L6470_ECHOPGM(S)      NOOP
+  #define L6470_ECHOLNPGM(S)    NOOP
+  #define L6470_ECHOPAIR(S,V)   NOOP
+  #define L6470_ECHOLNPAIR(S,V) NOOP
+#endif
+
+#define L6470_GETPARAM(P,Q) stepper##Q.GetParam(P)
+
+#define MAX_L6470  (7 + MAX_EXTRUDERS) // Maximum number of axes in Marlin
+
+#define L6470_ERROR_MASK  (STATUS_UVLO | STATUS_TH_WRN | STATUS_TH_SD  | STATUS_OCD | STATUS_STEP_LOSS_A | STATUS_STEP_LOSS_B)
+#define dSPIN_STEP_CLOCK_FWD dSPIN_STEP_CLOCK
+#define dSPIN_STEP_CLOCK_REV dSPIN_STEP_CLOCK+1
+#define HAS_L6470_EXTRUDER ( AXIS_DRIVER_TYPE_E0(L6470) || AXIS_DRIVER_TYPE_E1(L6470) || AXIS_DRIVER_TYPE_E2(L6470) \
+                          || AXIS_DRIVER_TYPE_E3(L6470) || AXIS_DRIVER_TYPE_E4(L6470) || AXIS_DRIVER_TYPE_E5(L6470) )
+
+class L6470_Marlin {
+public:
+  static bool index_to_dir[MAX_L6470];
+  static uint8_t axis_xref[MAX_L6470];
+  static char index_to_axis[MAX_L6470][3];
+  static uint8_t dir_commands[MAX_L6470];
+
+  // flags to guarantee graceful switch if stepper interrupts L6470 SPI transfer
+  static volatile bool spi_abort;
+  static bool spi_active;
+
+  L6470_Marlin() {}
+
+  static uint16_t get_status(const uint8_t axis);
+
+  static uint32_t get_param(uint8_t axis, uint8_t param);
+
+  static void set_param(uint8_t axis, uint8_t param, uint32_t value);
+
+  static bool get_user_input(uint8_t &driver_count, uint8_t axis_index[3], char axis_mon[3][3],
+                             float &position_max, float &position_min, float &final_feedrate, uint8_t &kval_hold,
+                             bool over_current_flag, uint8_t &OCD_TH_val, uint8_t &STALL_TH_val, uint16_t &over_current_threshold);
+
+  static void error_status_decode(const uint16_t status, const uint8_t axis);
+
+  static void monitor_driver();
+
+  static void init();
+  static void init_to_defaults();
+
+  static void say_axis(const uint8_t axis, const bool label=true);
+
+private:
+  void populate_chain_array();
+};
+
+extern L6470_Marlin L6470;
