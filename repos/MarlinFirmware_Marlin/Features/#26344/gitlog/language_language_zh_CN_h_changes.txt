commit 006768ab58ff426fa7cfdaa72dba135b10a47ed7
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Mon Nov 20 02:23:07 2023 -0500

    🚸 Fix MarlinUI axis move / UBL strings (#26439)
    
    Followup to #26344

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index d86e2c43e0..75d81f2c9a 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -37,14 +37,17 @@ namespace LanguageNarrow_zh_CN {
   LSTR MSG_MARLIN                         = _UxGT("马林");
   LSTR MSG_YES                            = _UxGT("是");
   LSTR MSG_NO                             = _UxGT("否");
+  LSTR MSG_HIGH                           = _UxGT("高");
+  LSTR MSG_LOW                            = _UxGT("低");
   LSTR MSG_BACK                           = _UxGT("返回"); // ”Back“
-  LSTR MSG_MEDIA_ABORTING                 = _UxGT("放弃中...");
+  LSTR MSG_ERROR                          = _UxGT("错误");
+  LSTR MSG_MEDIA_ABORTING                 = _UxGT("存储卡中止...");
   LSTR MSG_MEDIA_INSERTED                 = _UxGT("存储卡已插入"); // "Card inserted"
   LSTR MSG_MEDIA_REMOVED                  = _UxGT("存储卡被拔出"); // "Card removed"
   LSTR MSG_MEDIA_WAITING                  = _UxGT("等待存储器");
-  LSTR MSG_MEDIA_READ_ERROR               = _UxGT("存储器读取错误");
+  LSTR MSG_MEDIA_READ_ERROR               = _UxGT("卡读卡器错误");
   LSTR MSG_MEDIA_USB_REMOVED              = _UxGT("USB设备已弹出");
-  LSTR MSG_MEDIA_USB_FAILED               = _UxGT("USB启动错误");
+  LSTR MSG_MEDIA_USB_FAILED               = _UxGT("USB读取失败");
   LSTR MSG_KILL_SUBCALL_OVERFLOW          = _UxGT("子响应溢出");
   LSTR MSG_LCD_ENDSTOPS                   = _UxGT("挡块"); // "Endstops" // Max length 8 characters
   LSTR MSG_LCD_SOFT_ENDSTOPS              = _UxGT("软挡块");
@@ -112,6 +115,7 @@ namespace LanguageNarrow_zh_CN {
   LSTR MSG_CUSTOM_COMMANDS                = _UxGT("定制命令"); // "Custom Commands"
   LSTR MSG_M48_TEST                       = _UxGT("M48探测");
   LSTR MSG_M48_POINT                      = _UxGT("M48点");
+  LSTR MSG_M48_OUT_OF_BOUNDS              = _UxGT("探针测试越界");
   LSTR MSG_M48_DEVIATION                  = _UxGT("M48偏差");
   LSTR MSG_IDEX_MENU                      = _UxGT("IDEX模式");
   LSTR MSG_OFFSETS_MENU                   = _UxGT("工具偏移量");
@@ -123,9 +127,12 @@ namespace LanguageNarrow_zh_CN {
   LSTR MSG_HOTEND_OFFSET_A                = _UxGT("第二喷头是@");
   LSTR MSG_UBL_DOING_G29                  = _UxGT("执行G29"); // "Doing G29"
   LSTR MSG_UBL_TOOLS                      = _UxGT("UBL工具"); // "UBL Tools"
-  LSTR MSG_UBL_LEVEL_BED                  = _UxGT("统一热床调平(UBL)"); // "Unified Bed Leveling"
   LSTR MSG_LCD_TILTING_MESH               = _UxGT("倾斜點");
+  LSTR MSG_UBL_TILT_MESH                  = _UxGT("倾斜网格");
+  LSTR MSG_UBL_TILTING_GRID               = _UxGT("倾斜网格尺寸");
+  LSTR MSG_UBL_MESH_TILTED                = _UxGT("网格倾斜");
   LSTR MSG_UBL_MANUAL_MESH                = _UxGT("手工创设网格"); // "Manually Build Mesh"
+  LSTR MSG_UBL_MESH_WIZARD                = _UxGT("网格精灵(UBL)");
   LSTR MSG_UBL_BC_INSERT                  = _UxGT("放置垫片并测量"); // "Place shim & measure"
   LSTR MSG_UBL_BC_INSERT2                 = _UxGT("测量"); // "Measure"
   LSTR MSG_UBL_BC_REMOVE                  = _UxGT("移除并测量热床"); // "Remove & measure bed"
@@ -180,8 +187,10 @@ namespace LanguageNarrow_zh_CN {
   LSTR MSG_UBL_STORAGE_SLOT               = _UxGT("存储槽"); // "Memory Slot"
   LSTR MSG_UBL_LOAD_MESH                  = _UxGT("装载热床网格"); // "Load Bed Mesh"
   LSTR MSG_UBL_SAVE_MESH                  = _UxGT("保存热床网格"); // "Save Bed Mesh"
+  LSTR MSG_UBL_INVALID_SLOT               = _UxGT("首先选择一个网格槽");
   LSTR MSG_MESH_LOADED                    = _UxGT("网格 %i 已装载"); // "Mesh %i loaded"
   LSTR MSG_MESH_SAVED                     = _UxGT("网格 %i 已保存"); // "Mesh %i saved"
+  LSTR MSG_MESH_ACTIVE                    = _UxGT("网格 %i 激活");
   LSTR MSG_UBL_NO_STORAGE                 = _UxGT("没有存储"); // "No storage"
   LSTR MSG_UBL_SAVE_ERROR                 = _UxGT("错误: UBL保存"); // "Err: UBL Save"
   LSTR MSG_UBL_RESTORE_ERROR              = _UxGT("错误: UBL还原"); // "Err: UBL Restore"
@@ -224,7 +233,9 @@ namespace LanguageNarrow_zh_CN {
   LSTR MSG_MOVE_E                         = _UxGT("挤出机"); // "Extruder"
   LSTR MSG_MOVE_EN                        = _UxGT("挤出机 *"); // "Extruder"
   LSTR MSG_HOTEND_TOO_COLD                = _UxGT("热端太冷");
-  LSTR MSG_MOVE_N_MM                      = _UxGT("移动 $ mm"); // "Move 0.025mm"
+  LSTR MSG_MOVE_N_MM                      = _UxGT("移动 $mm"); // "Move $mm"
+  LSTR MSG_MOVE_N_IN                      = _UxGT("移动 $in"); // "Move $in"
+  LSTR MSG_MOVE_N_DEG                     = _UxGT("移动 $") LCD_STR_DEGREE; // "Move $°"
   LSTR MSG_SPEED                          = _UxGT("速率"); // "Speed"
   LSTR MSG_MESH_Z_OFFSET                  = _UxGT("热床Z"); // "Bed Z"
   LSTR MSG_NOZZLE                         = _UxGT("喷嘴"); // "Nozzle" 噴嘴

commit 36e66bdd9ff22ddfdcaa36ac8a9b9448c78ca44c
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Nov 18 09:11:59 2023 +1300

    🔧 Define MarlinUI axis moves with lists (#26344)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 7432044cdb..d86e2c43e0 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -225,10 +225,6 @@ namespace LanguageNarrow_zh_CN {
   LSTR MSG_MOVE_EN                        = _UxGT("挤出机 *"); // "Extruder"
   LSTR MSG_HOTEND_TOO_COLD                = _UxGT("热端太冷");
   LSTR MSG_MOVE_N_MM                      = _UxGT("移动 $ mm"); // "Move 0.025mm"
-  LSTR MSG_MOVE_01MM                      = _UxGT("移动 0.1 mm"); // "Move 0.1mm"
-  LSTR MSG_MOVE_1MM                       = _UxGT("移动 1 mm"); // "Move 1mm"
-  LSTR MSG_MOVE_10MM                      = _UxGT("移动 10 mm"); // "Move 10mm"
-  LSTR MSG_MOVE_100MM                     = _UxGT("移动 100 mm"); // "Move 100mm"
   LSTR MSG_SPEED                          = _UxGT("速率"); // "Speed"
   LSTR MSG_MESH_Z_OFFSET                  = _UxGT("热床Z"); // "Bed Z"
   LSTR MSG_NOZZLE                         = _UxGT("喷嘴"); // "Nozzle" 噴嘴

commit 88cdf487b433bf2187f2dad31587882ebf02cc59
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Aug 22 17:36:53 2023 -0500

    🚸 Avoid LCD messages starting with "Error:" (#26164)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 7f4d5af374..7432044cdb 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -427,11 +427,9 @@ namespace LanguageNarrow_zh_CN {
   LSTR MSG_BABYSTEP_Z                     = _UxGT("微量调整Z轴"); // "Babystep Z"
   LSTR MSG_BABYSTEP_TOTAL                 = _UxGT("总计");
   LSTR MSG_ENDSTOP_ABORT                  = _UxGT("挡块终止"); // "Endstop abort"
-  LSTR MSG_HEATING_FAILED_LCD             = _UxGT("加热失败"); // "Heating failed"
+  LSTR MSG_ERR_HEATING_FAILED             = _UxGT("加热失败"); // "Heating failed"
   LSTR MSG_ERR_REDUNDANT_TEMP             = _UxGT("错误：冗余温度"); // "Err: REDUNDANT TEMP"
-  LSTR MSG_THERMAL_RUNAWAY                = _UxGT("温控失控"); // "THERMAL RUNAWAY"
-  LSTR MSG_THERMAL_RUNAWAY_BED            = _UxGT("热床热量失控");
-  LSTR MSG_THERMAL_RUNAWAY_CHAMBER        = _UxGT("机箱热量失控");
+  LSTR MSG_ERR_THERMAL_RUNAWAY            = _UxGT("温控失控"); // "THERMAL RUNAWAY"
   LSTR MSG_ERR_MAXTEMP                    = _UxGT("错误：最高温度"); // "Err: MAXTEMP"
   LSTR MSG_ERR_MINTEMP                    = _UxGT("错误：最低温度"); // "Err: MINTEMP"
   LSTR MSG_HALTED                         = _UxGT("打印停机"); // "PRINTER HALTED"

commit 0878b99b2cb38ffd40faa12d9e3de3bd659af205
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 30 19:21:56 2023 -0500

    🌐 Language Import/Export (#25889)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 03c8d80bca..7f4d5af374 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -27,7 +27,7 @@
  * LCD Menu Messages
  * See also https://marlinfw.org/docs/development/lcd_language.html
  */
-namespace Language_zh_CN {
+namespace LanguageNarrow_zh_CN {
   using namespace Language_en; // Inherit undefined strings from English
 
   constexpr uint8_t CHARSIZE              = 3;
@@ -68,23 +68,23 @@ namespace Language_zh_CN {
   LSTR MSG_Z_FADE_HEIGHT                  = _UxGT("淡出高度"); // "Fade Height"
   LSTR MSG_SET_HOME_OFFSETS               = _UxGT("设置原点偏移"); // "Set home offsets"
   LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("偏移已启用"); // "Offsets applied"
-  #if HAS_PREHEAT
-    LSTR MSG_PREHEAT_1                    = _UxGT("预热 ") PREHEAT_1_LABEL; // "Preheat PREHEAT_2_LABEL"
-    LSTR MSG_PREHEAT_1_H                  = _UxGT("预热 ") PREHEAT_1_LABEL " ~"; // "Preheat PREHEAT_2_LABEL"
-    LSTR MSG_PREHEAT_1_END                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴"); //MSG_PREHEAT_1 " "
-    LSTR MSG_PREHEAT_1_END_E              = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~"); //MSG_PREHEAT_1 " "
-    LSTR MSG_PREHEAT_1_ALL                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部"); //MSG_PREHEAT_1 " All"
-    LSTR MSG_PREHEAT_1_BEDONLY            = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床"); //MSG_PREHEAT_1 " Bed"
-    LSTR MSG_PREHEAT_1_SETTINGS           = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置"); //MSG_PREHEAT_1 " conf"
 
-    LSTR MSG_PREHEAT_M                    = _UxGT("预热 $"); // "Preheat PREHEAT_2_LABEL"
-    LSTR MSG_PREHEAT_M_H                  = _UxGT("预热 $ ~"); // "Preheat PREHEAT_2_LABEL"
-    LSTR MSG_PREHEAT_M_END                = _UxGT("预热 $ 喷嘴"); //MSG_PREHEAT_1 " "
-    LSTR MSG_PREHEAT_M_END_E              = _UxGT("预热 $ 喷嘴 ~"); //MSG_PREHEAT_1 " "
-    LSTR MSG_PREHEAT_M_ALL                = _UxGT("预热 $ 全部"); //MSG_PREHEAT_1 " All"
-    LSTR MSG_PREHEAT_M_BEDONLY            = _UxGT("预热 $ 热床"); //MSG_PREHEAT_1 " Bed"
-    LSTR MSG_PREHEAT_M_SETTINGS           = _UxGT("预热 $ 设置"); //MSG_PREHEAT_1 " conf"
-  #endif
+  LSTR MSG_PREHEAT_1                      = _UxGT("预热 ") PREHEAT_1_LABEL; // "Preheat PREHEAT_2_LABEL"
+  LSTR MSG_PREHEAT_1_H                    = _UxGT("预热 ") PREHEAT_1_LABEL " ~"; // "Preheat PREHEAT_2_LABEL"
+  LSTR MSG_PREHEAT_1_END                  = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴"); //MSG_PREHEAT_1 " "
+  LSTR MSG_PREHEAT_1_END_E                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~"); //MSG_PREHEAT_1 " "
+  LSTR MSG_PREHEAT_1_ALL                  = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部"); //MSG_PREHEAT_1 " All"
+  LSTR MSG_PREHEAT_1_BEDONLY              = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床"); //MSG_PREHEAT_1 " Bed"
+  LSTR MSG_PREHEAT_1_SETTINGS             = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置"); //MSG_PREHEAT_1 " conf"
+
+  LSTR MSG_PREHEAT_M                      = _UxGT("预热 $"); // "Preheat PREHEAT_2_LABEL"
+  LSTR MSG_PREHEAT_M_H                    = _UxGT("预热 $ ~"); // "Preheat PREHEAT_2_LABEL"
+  LSTR MSG_PREHEAT_M_END                  = _UxGT("预热 $ 喷嘴"); //MSG_PREHEAT_1 " "
+  LSTR MSG_PREHEAT_M_END_E                = _UxGT("预热 $ 喷嘴 ~"); //MSG_PREHEAT_1 " "
+  LSTR MSG_PREHEAT_M_ALL                  = _UxGT("预热 $ 全部"); //MSG_PREHEAT_1 " All"
+  LSTR MSG_PREHEAT_M_BEDONLY              = _UxGT("预热 $ 热床"); //MSG_PREHEAT_1 " Bed"
+  LSTR MSG_PREHEAT_M_SETTINGS             = _UxGT("预热 $ 设置"); //MSG_PREHEAT_1 " conf"
+
   LSTR MSG_PREHEAT_CUSTOM                 = _UxGT("预热自定义");
   LSTR MSG_COOLDOWN                       = _UxGT("降温"); // "Cooldown"
   LSTR MSG_CUTTER_FREQUENCY               = _UxGT("切割频率");
@@ -142,10 +142,8 @@ namespace Language_zh_CN {
   LSTR MSG_UBL_DONE_EDITING_MESH          = _UxGT("完成编辑网格"); // "Done Editing Mesh"
   LSTR MSG_UBL_BUILD_CUSTOM_MESH          = _UxGT("创设客户网格"); // "Build Custom Mesh"
   LSTR MSG_UBL_BUILD_MESH_MENU            = _UxGT("创设网格"); // "Build Mesh"
-  #if HAS_PREHEAT
-    LSTR MSG_UBL_BUILD_MESH_M             = _UxGT("创设 $ 网格"); // "Build PREHEAT_1_LABEL Mesh"
-    LSTR MSG_UBL_VALIDATE_MESH_M          = _UxGT("批准 $ 网格"); // "Validate PREHEAT_1_LABEL Mesh"
-  #endif
+  LSTR MSG_UBL_BUILD_MESH_M               = _UxGT("创设 $ 网格"); // "Build PREHEAT_1_LABEL Mesh"
+  LSTR MSG_UBL_VALIDATE_MESH_M            = _UxGT("批准 $ 网格"); // "Validate PREHEAT_1_LABEL Mesh"
   LSTR MSG_UBL_BUILD_COLD_MESH            = _UxGT("创设冷网格"); // "Build Cold Mesh"
   LSTR MSG_UBL_MESH_HEIGHT_ADJUST         = _UxGT("调整网格高度"); // "Adjust Mesh Height"
   LSTR MSG_UBL_MESH_HEIGHT_AMOUNT         = _UxGT("高度合计"); // "Height Amount"
@@ -476,19 +474,11 @@ namespace Language_zh_CN {
 
   LSTR MSG_KILL_EXPECTED_PRINTER          = _UxGT("打印机不正确"); // "The printer is incorrect"
 
-  #if LCD_WIDTH >= 20 || HAS_DWIN_E3V2
-    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印计数"); // "Print Count"
-    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成了"); // "Completed"
-    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总打印时间"); // "Total print time"
-    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长工作时间"); // "Longest job time"
-    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("总计挤出"); // "Extruded total"
-  #else
-    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印数"); // "Prints"
-    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成"); // "Completed"
-    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总共"); // "Total"
-    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长"); // "Longest"
-    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("已挤出"); // "Extruded"
-  #endif
+  LSTR MSG_INFO_PRINT_COUNT               = _UxGT("打印数"); // "Prints"
+  LSTR MSG_INFO_COMPLETED_PRINTS          = _UxGT("完成"); // "Completed"
+  LSTR MSG_INFO_PRINT_TIME                = _UxGT("总共"); // "Total"
+  LSTR MSG_INFO_PRINT_LONGEST             = _UxGT("最长"); // "Longest"
+  LSTR MSG_INFO_PRINT_FILAMENT            = _UxGT("已挤出"); // "Extruded"
 
   LSTR MSG_INFO_MIN_TEMP                  = _UxGT("最低温度"); // "Min Temp"
   LSTR MSG_INFO_MAX_TEMP                  = _UxGT("最高温度"); // "Max Temp"
@@ -560,34 +550,20 @@ namespace Language_zh_CN {
   LSTR MSG_BAD_PAGE_SPEED                 = _UxGT("错误页面速度");
 
   //
-  // Filament Change screens show up to 3 lines on a 4-line display
-  //                        ...or up to 2 lines on a 3-line display
+  // Filament Change screens show up to 2 lines on a 3-line display
   //
-  #if LCD_HEIGHT >= 4
-    LSTR MSG_ADVANCED_PAUSE_WAITING       = _UxGT(MSG_2_LINE("按下按钮", "恢复打印"));
-    LSTR MSG_PAUSE_PRINT_PARKING          = _UxGT(MSG_1_LINE("停靠中..."));
-    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_3_LINE("等待开始", "丝料", "变更")); // "Wait for start of the filament change"
-    LSTR MSG_FILAMENT_CHANGE_INSERT       = _UxGT(MSG_3_LINE("插入料", "并按下", "以继续"));
-    LSTR MSG_FILAMENT_CHANGE_HEAT         = _UxGT(MSG_2_LINE("按下按钮来", "加热喷嘴.")); // "Press button to heat nozzle."
-    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_2_LINE("加热喷嘴", "请等待 ...")); // "Heating nozzle Please wait..."
-    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_2_LINE("等待", "卸下丝料")); // "Wait for filament unload"
-    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_2_LINE("等待", "进料")); // "Wait for filament load"
-    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_2_LINE("等待", "丝料清除")); // "Wait for filament purge"
-    LSTR MSG_FILAMENT_CHANGE_CONT_PURGE   = _UxGT(MSG_2_LINE("按下已完成", "料的清洗"));
-    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_2_LINE("等待打印", "恢复")); // "Wait for print to resume"
-  #else
-    LSTR MSG_ADVANCED_PAUSE_WAITING       = _UxGT(MSG_1_LINE("按下继续"));
-    LSTR MSG_PAUSE_PRINT_PARKING          = _UxGT(MSG_1_LINE("停靠中..."));
-    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_1_LINE("请等待 ...")); // "Please wait..."
-    LSTR MSG_FILAMENT_CHANGE_INSERT       = _UxGT(MSG_1_LINE("插入并单击")); // "Insert and Click"
-    LSTR MSG_FILAMENT_CHANGE_HEAT         = _UxGT(MSG_1_LINE("按下加热"));
-    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_1_LINE("加热中 ...")); // "Heating..."
-    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_1_LINE("退出中 ...")); // "Ejecting..."
-    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_1_LINE("装载中 ...")); // "Loading..."
-    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_1_LINE("清除中 ...")); // "Purging..."
-    LSTR MSG_FILAMENT_CHANGE_CONT_PURGE   = _UxGT(MSG_1_LINE("按下完成"));
-    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_1_LINE("恢复中 ...")); // "Resuming..."
-  #endif
+  LSTR MSG_ADVANCED_PAUSE_WAITING         = _UxGT(MSG_1_LINE("按下继续"));
+  LSTR MSG_PAUSE_PRINT_PARKING            = _UxGT(MSG_1_LINE("停靠中..."));
+  LSTR MSG_FILAMENT_CHANGE_INIT           = _UxGT(MSG_1_LINE("请等待 ...")); // "Please wait..."
+  LSTR MSG_FILAMENT_CHANGE_INSERT         = _UxGT(MSG_1_LINE("插入并单击")); // "Insert and Click"
+  LSTR MSG_FILAMENT_CHANGE_HEAT           = _UxGT(MSG_1_LINE("按下加热"));
+  LSTR MSG_FILAMENT_CHANGE_HEATING        = _UxGT(MSG_1_LINE("加热中 ...")); // "Heating..."
+  LSTR MSG_FILAMENT_CHANGE_UNLOAD         = _UxGT(MSG_1_LINE("退出中 ...")); // "Ejecting..."
+  LSTR MSG_FILAMENT_CHANGE_LOAD           = _UxGT(MSG_1_LINE("装载中 ...")); // "Loading..."
+  LSTR MSG_FILAMENT_CHANGE_PURGE          = _UxGT(MSG_1_LINE("清除中 ...")); // "Purging..."
+  LSTR MSG_FILAMENT_CHANGE_CONT_PURGE     = _UxGT(MSG_1_LINE("按下完成"));
+  LSTR MSG_FILAMENT_CHANGE_RESUME         = _UxGT(MSG_1_LINE("恢复中 ...")); // "Resuming..."
+
   LSTR MSG_TMC_DRIVERS                    = _UxGT("TMC驱动器");
   LSTR MSG_TMC_CURRENT                    = _UxGT("驱动电流");
   LSTR MSG_TMC_HYBRID_THRS                = _UxGT("混合阈值");
@@ -610,3 +586,36 @@ namespace Language_zh_CN {
   LSTR MSG_SHORT_HOUR                     = _UxGT("时"); // "h" // One character only
   LSTR MSG_SHORT_MINUTE                   = _UxGT("分"); // "m" // One character only
 }
+
+namespace LanguageWide_zh_CN {
+  using namespace LanguageNarrow_zh_CN;
+  #if LCD_WIDTH >= 20 || HAS_DWIN_E3V2
+    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印计数"); // "Print Count"
+    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成了"); // "Completed"
+    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总打印时间"); // "Total print time"
+    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长工作时间"); // "Longest job time"
+    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("总计挤出"); // "Extruded total"
+  #endif
+}
+
+namespace LanguageTall_zh_CN {
+  using namespace LanguageWide_zh_CN;
+  #if LCD_HEIGHT >= 4
+    // Filament Change screens show up to 3 lines on a 4-line display
+    LSTR MSG_ADVANCED_PAUSE_WAITING       = _UxGT(MSG_2_LINE("按下按钮", "恢复打印"));
+    LSTR MSG_PAUSE_PRINT_PARKING          = _UxGT(MSG_1_LINE("停靠中..."));
+    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_3_LINE("等待开始", "丝料", "变更")); // "Wait for start of the filament change"
+    LSTR MSG_FILAMENT_CHANGE_INSERT       = _UxGT(MSG_3_LINE("插入料", "并按下", "以继续"));
+    LSTR MSG_FILAMENT_CHANGE_HEAT         = _UxGT(MSG_2_LINE("按下按钮来", "加热喷嘴.")); // "Press button to heat nozzle."
+    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_2_LINE("加热喷嘴", "请等待 ...")); // "Heating nozzle Please wait..."
+    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_2_LINE("等待", "卸下丝料")); // "Wait for filament unload"
+    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_2_LINE("等待", "进料")); // "Wait for filament load"
+    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_2_LINE("等待", "丝料清除")); // "Wait for filament purge"
+    LSTR MSG_FILAMENT_CHANGE_CONT_PURGE   = _UxGT(MSG_2_LINE("按下已完成", "料的清洗"));
+    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_2_LINE("等待打印", "恢复")); // "Wait for print to resume"
+  #endif
+}
+
+namespace Language_zh_CN {
+  using namespace LanguageTall_zh_CN;
+}

commit 154e48ba22ceedb01e9058a7f8da9457a445ee19
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 26 18:54:50 2023 -0500

    🎨 Misc. spacing

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 7acd0d8e8f..03c8d80bca 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -28,88 +28,88 @@
  * See also https://marlinfw.org/docs/development/lcd_language.html
  */
 namespace Language_zh_CN {
-  using namespace Language_en;  // Inherit undefined strings from English
+  using namespace Language_en; // Inherit undefined strings from English
 
   constexpr uint8_t CHARSIZE              = 3;
   LSTR LANGUAGE                           = _UxGT("Simplified Chinese");
 
-  LSTR WELCOME_MSG                        = MACHINE_NAME _UxGT("已就绪.");     // " ready."
+  LSTR WELCOME_MSG                        = MACHINE_NAME _UxGT("已就绪."); // " ready."
   LSTR MSG_MARLIN                         = _UxGT("马林");
   LSTR MSG_YES                            = _UxGT("是");
   LSTR MSG_NO                             = _UxGT("否");
-  LSTR MSG_BACK                           = _UxGT("返回");     // ”Back“
+  LSTR MSG_BACK                           = _UxGT("返回"); // ”Back“
   LSTR MSG_MEDIA_ABORTING                 = _UxGT("放弃中...");
-  LSTR MSG_MEDIA_INSERTED                 = _UxGT("存储卡已插入");     // "Card inserted"
-  LSTR MSG_MEDIA_REMOVED                  = _UxGT("存储卡被拔出");     // "Card removed"
+  LSTR MSG_MEDIA_INSERTED                 = _UxGT("存储卡已插入"); // "Card inserted"
+  LSTR MSG_MEDIA_REMOVED                  = _UxGT("存储卡被拔出"); // "Card removed"
   LSTR MSG_MEDIA_WAITING                  = _UxGT("等待存储器");
   LSTR MSG_MEDIA_READ_ERROR               = _UxGT("存储器读取错误");
   LSTR MSG_MEDIA_USB_REMOVED              = _UxGT("USB设备已弹出");
   LSTR MSG_MEDIA_USB_FAILED               = _UxGT("USB启动错误");
   LSTR MSG_KILL_SUBCALL_OVERFLOW          = _UxGT("子响应溢出");
-  LSTR MSG_LCD_ENDSTOPS                   = _UxGT("挡块");     // "Endstops" // Max length 8 characters
+  LSTR MSG_LCD_ENDSTOPS                   = _UxGT("挡块"); // "Endstops" // Max length 8 characters
   LSTR MSG_LCD_SOFT_ENDSTOPS              = _UxGT("软挡块");
-  LSTR MSG_MAIN_MENU                      = _UxGT("主菜单");     // "Main"
+  LSTR MSG_MAIN_MENU                      = _UxGT("主菜单"); // "Main"
   LSTR MSG_ADVANCED_SETTINGS              = _UxGT("高级设置");
   LSTR MSG_CONFIGURATION                  = _UxGT("配置");
-  LSTR MSG_RUN_AUTO_FILES                 = _UxGT("自动开始");     // "Autostart"
-  LSTR MSG_DISABLE_STEPPERS               = _UxGT("关闭步进电机");     // "Disable steppers"
-  LSTR MSG_DEBUG_MENU                     = _UxGT("调试菜单");     // "Debug Menu"
-  LSTR MSG_PROGRESS_BAR_TEST              = _UxGT("进度条测试");     // "Progress Bar Test"
+  LSTR MSG_RUN_AUTO_FILES                 = _UxGT("自动开始"); // "Autostart"
+  LSTR MSG_DISABLE_STEPPERS               = _UxGT("关闭步进电机"); // "Disable steppers"
+  LSTR MSG_DEBUG_MENU                     = _UxGT("调试菜单"); // "Debug Menu"
+  LSTR MSG_PROGRESS_BAR_TEST              = _UxGT("进度条测试"); // "Progress Bar Test"
   LSTR MSG_HOMING                         = _UxGT("回原点");
-  LSTR MSG_AUTO_HOME                      = _UxGT("自动回原点");     // "Auto home"
-  LSTR MSG_AUTO_HOME_X                    = _UxGT("回X原位");     // "Home X"
-  LSTR MSG_AUTO_HOME_Y                    = _UxGT("回Y原位");     // "Home Y"
-  LSTR MSG_AUTO_HOME_Z                    = _UxGT("回Z原位");     // "Home Z"
+  LSTR MSG_AUTO_HOME                      = _UxGT("自动回原点"); // "Auto home"
+  LSTR MSG_AUTO_HOME_X                    = _UxGT("回X原位"); // "Home X"
+  LSTR MSG_AUTO_HOME_Y                    = _UxGT("回Y原位"); // "Home Y"
+  LSTR MSG_AUTO_HOME_Z                    = _UxGT("回Z原位"); // "Home Z"
   LSTR MSG_AUTO_Z_ALIGN                   = _UxGT("自动Z对齐");
-  LSTR MSG_LEVEL_BED_HOMING               = _UxGT("平台调平XYZ归原位");     // "Homing XYZ"
-  LSTR MSG_LEVEL_BED_WAITING              = _UxGT("单击开始热床调平");     // "Click to Begin"
-  LSTR MSG_LEVEL_BED_NEXT_POINT           = _UxGT("下个热床调平点");     // "Next Point"
-  LSTR MSG_LEVEL_BED_DONE                 = _UxGT("完成热床调平");     // "Leveling Done!"
-  LSTR MSG_Z_FADE_HEIGHT                  = _UxGT("淡出高度");     // "Fade Height"
-  LSTR MSG_SET_HOME_OFFSETS               = _UxGT("设置原点偏移");     // "Set home offsets"
-  LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("偏移已启用");     // "Offsets applied"
+  LSTR MSG_LEVEL_BED_HOMING               = _UxGT("平台调平XYZ归原位"); // "Homing XYZ"
+  LSTR MSG_LEVEL_BED_WAITING              = _UxGT("单击开始热床调平"); // "Click to Begin"
+  LSTR MSG_LEVEL_BED_NEXT_POINT           = _UxGT("下个热床调平点"); // "Next Point"
+  LSTR MSG_LEVEL_BED_DONE                 = _UxGT("完成热床调平"); // "Leveling Done!"
+  LSTR MSG_Z_FADE_HEIGHT                  = _UxGT("淡出高度"); // "Fade Height"
+  LSTR MSG_SET_HOME_OFFSETS               = _UxGT("设置原点偏移"); // "Set home offsets"
+  LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("偏移已启用"); // "Offsets applied"
   #if HAS_PREHEAT
-    LSTR MSG_PREHEAT_1                    = _UxGT("预热 ") PREHEAT_1_LABEL;     // "Preheat PREHEAT_2_LABEL"
-    LSTR MSG_PREHEAT_1_H                  = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     // "Preheat PREHEAT_2_LABEL"
-    LSTR MSG_PREHEAT_1_END                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
-    LSTR MSG_PREHEAT_1_END_E              = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_1 " "
-    LSTR MSG_PREHEAT_1_ALL                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部");     //MSG_PREHEAT_1 " All"
-    LSTR MSG_PREHEAT_1_BEDONLY            = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床");     //MSG_PREHEAT_1 " Bed"
-    LSTR MSG_PREHEAT_1_SETTINGS           = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置");     //MSG_PREHEAT_1 " conf"
+    LSTR MSG_PREHEAT_1                    = _UxGT("预热 ") PREHEAT_1_LABEL; // "Preheat PREHEAT_2_LABEL"
+    LSTR MSG_PREHEAT_1_H                  = _UxGT("预热 ") PREHEAT_1_LABEL " ~"; // "Preheat PREHEAT_2_LABEL"
+    LSTR MSG_PREHEAT_1_END                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴"); //MSG_PREHEAT_1 " "
+    LSTR MSG_PREHEAT_1_END_E              = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~"); //MSG_PREHEAT_1 " "
+    LSTR MSG_PREHEAT_1_ALL                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部"); //MSG_PREHEAT_1 " All"
+    LSTR MSG_PREHEAT_1_BEDONLY            = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床"); //MSG_PREHEAT_1 " Bed"
+    LSTR MSG_PREHEAT_1_SETTINGS           = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置"); //MSG_PREHEAT_1 " conf"
 
-    LSTR MSG_PREHEAT_M                    = _UxGT("预热 $");     // "Preheat PREHEAT_2_LABEL"
-    LSTR MSG_PREHEAT_M_H                  = _UxGT("预热 $ ~");     // "Preheat PREHEAT_2_LABEL"
-    LSTR MSG_PREHEAT_M_END                = _UxGT("预热 $ 喷嘴");     //MSG_PREHEAT_1 " "
-    LSTR MSG_PREHEAT_M_END_E              = _UxGT("预热 $ 喷嘴 ~");     //MSG_PREHEAT_1 " "
-    LSTR MSG_PREHEAT_M_ALL                = _UxGT("预热 $ 全部");     //MSG_PREHEAT_1 " All"
-    LSTR MSG_PREHEAT_M_BEDONLY            = _UxGT("预热 $ 热床");     //MSG_PREHEAT_1 " Bed"
-    LSTR MSG_PREHEAT_M_SETTINGS           = _UxGT("预热 $ 设置");     //MSG_PREHEAT_1 " conf"
+    LSTR MSG_PREHEAT_M                    = _UxGT("预热 $"); // "Preheat PREHEAT_2_LABEL"
+    LSTR MSG_PREHEAT_M_H                  = _UxGT("预热 $ ~"); // "Preheat PREHEAT_2_LABEL"
+    LSTR MSG_PREHEAT_M_END                = _UxGT("预热 $ 喷嘴"); //MSG_PREHEAT_1 " "
+    LSTR MSG_PREHEAT_M_END_E              = _UxGT("预热 $ 喷嘴 ~"); //MSG_PREHEAT_1 " "
+    LSTR MSG_PREHEAT_M_ALL                = _UxGT("预热 $ 全部"); //MSG_PREHEAT_1 " All"
+    LSTR MSG_PREHEAT_M_BEDONLY            = _UxGT("预热 $ 热床"); //MSG_PREHEAT_1 " Bed"
+    LSTR MSG_PREHEAT_M_SETTINGS           = _UxGT("预热 $ 设置"); //MSG_PREHEAT_1 " conf"
   #endif
   LSTR MSG_PREHEAT_CUSTOM                 = _UxGT("预热自定义");
-  LSTR MSG_COOLDOWN                       = _UxGT("降温");     // "Cooldown"
+  LSTR MSG_COOLDOWN                       = _UxGT("降温"); // "Cooldown"
   LSTR MSG_CUTTER_FREQUENCY               = _UxGT("切割频率");
   LSTR MSG_LASER_MENU                     = _UxGT("激光控制");
   LSTR MSG_LASER_POWER                    = _UxGT("激光电源");
   LSTR MSG_SPINDLE_MENU                   = _UxGT("主轴控制");
   LSTR MSG_SPINDLE_POWER                  = _UxGT("主轴电源");
   LSTR MSG_SPINDLE_REVERSE                = _UxGT("主轴反转");
-  LSTR MSG_SWITCH_PS_ON                   = _UxGT("开启电源");     // "Switch power on"
-  LSTR MSG_SWITCH_PS_OFF                  = _UxGT("关闭电源");     // "Switch power off"
-  LSTR MSG_EXTRUDE                        = _UxGT("挤出");     // "Extrude"
-  LSTR MSG_RETRACT                        = _UxGT("回抽");     // "Retract"
-  LSTR MSG_MOVE_AXIS                      = _UxGT("移动轴");     // "Move axis"
-  LSTR MSG_BED_LEVELING                   = _UxGT("调平热床");     // "Bed leveling"
-  LSTR MSG_LEVEL_BED                      = _UxGT("调平热床");     // "Level bed"
-  LSTR MSG_BED_TRAMMING                   = _UxGT("调平边角");     // "Bed Tramming"
-  LSTR MSG_NEXT_CORNER                    = _UxGT("下个边角");     // "Next corner"
+  LSTR MSG_SWITCH_PS_ON                   = _UxGT("开启电源"); // "Switch power on"
+  LSTR MSG_SWITCH_PS_OFF                  = _UxGT("关闭电源"); // "Switch power off"
+  LSTR MSG_EXTRUDE                        = _UxGT("挤出"); // "Extrude"
+  LSTR MSG_RETRACT                        = _UxGT("回抽"); // "Retract"
+  LSTR MSG_MOVE_AXIS                      = _UxGT("移动轴"); // "Move axis"
+  LSTR MSG_BED_LEVELING                   = _UxGT("调平热床"); // "Bed leveling"
+  LSTR MSG_LEVEL_BED                      = _UxGT("调平热床"); // "Level bed"
+  LSTR MSG_BED_TRAMMING                   = _UxGT("调平边角"); // "Bed Tramming"
+  LSTR MSG_NEXT_CORNER                    = _UxGT("下个边角"); // "Next corner"
   LSTR MSG_MESH_EDITOR                    = _UxGT("网格编辑器");
-  LSTR MSG_EDIT_MESH                      = _UxGT("编辑网格");     // "Edit Mesh"
-  LSTR MSG_EDITING_STOPPED                = _UxGT("网格编辑已停止");     // "Mesh Editing Stopped"
+  LSTR MSG_EDIT_MESH                      = _UxGT("编辑网格"); // "Edit Mesh"
+  LSTR MSG_EDITING_STOPPED                = _UxGT("网格编辑已停止"); // "Mesh Editing Stopped"
   LSTR MSG_PROBING_POINT                  = _UxGT("探测点");
   LSTR MSG_MESH_X                         = _UxGT("索引X");
   LSTR MSG_MESH_Y                         = _UxGT("索引Y");
   LSTR MSG_MESH_EDIT_Z                    = _UxGT("Z 值");
-  LSTR MSG_CUSTOM_COMMANDS                = _UxGT("定制命令");     // "Custom Commands"
+  LSTR MSG_CUSTOM_COMMANDS                = _UxGT("定制命令"); // "Custom Commands"
   LSTR MSG_M48_TEST                       = _UxGT("M48探测");
   LSTR MSG_M48_POINT                      = _UxGT("M48点");
   LSTR MSG_M48_DEVIATION                  = _UxGT("M48偏差");
@@ -121,36 +121,36 @@ namespace Language_zh_CN {
   LSTR MSG_IDEX_MODE_FULL_CTRL            = _UxGT("完全控制");
   LSTR MSG_HOTEND_OFFSET_Z                = _UxGT("第二喷头是Z");
   LSTR MSG_HOTEND_OFFSET_A                = _UxGT("第二喷头是@");
-  LSTR MSG_UBL_DOING_G29                  = _UxGT("执行G29");     // "Doing G29"
-  LSTR MSG_UBL_TOOLS                      = _UxGT("UBL工具");     // "UBL Tools"
-  LSTR MSG_UBL_LEVEL_BED                  = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
+  LSTR MSG_UBL_DOING_G29                  = _UxGT("执行G29"); // "Doing G29"
+  LSTR MSG_UBL_TOOLS                      = _UxGT("UBL工具"); // "UBL Tools"
+  LSTR MSG_UBL_LEVEL_BED                  = _UxGT("统一热床调平(UBL)"); // "Unified Bed Leveling"
   LSTR MSG_LCD_TILTING_MESH               = _UxGT("倾斜點");
-  LSTR MSG_UBL_MANUAL_MESH                = _UxGT("手工创设网格");     // "Manually Build Mesh"
-  LSTR MSG_UBL_BC_INSERT                  = _UxGT("放置垫片并测量");     // "Place shim & measure"
-  LSTR MSG_UBL_BC_INSERT2                 = _UxGT("测量");     // "Measure"
-  LSTR MSG_UBL_BC_REMOVE                  = _UxGT("移除并测量热床");     // "Remove & measure bed"
-  LSTR MSG_UBL_MOVING_TO_NEXT             = _UxGT("移动到下一个");     // "Moving to next"
-  LSTR MSG_UBL_ACTIVATE_MESH              = _UxGT("激活UBL");     // "Activate UBL"
-  LSTR MSG_UBL_DEACTIVATE_MESH            = _UxGT("关闭UBL");     // "Deactivate UBL"
-  LSTR MSG_UBL_SET_TEMP_BED               = _UxGT("热床温度");     // "Bed Temp"
+  LSTR MSG_UBL_MANUAL_MESH                = _UxGT("手工创设网格"); // "Manually Build Mesh"
+  LSTR MSG_UBL_BC_INSERT                  = _UxGT("放置垫片并测量"); // "Place shim & measure"
+  LSTR MSG_UBL_BC_INSERT2                 = _UxGT("测量"); // "Measure"
+  LSTR MSG_UBL_BC_REMOVE                  = _UxGT("移除并测量热床"); // "Remove & measure bed"
+  LSTR MSG_UBL_MOVING_TO_NEXT             = _UxGT("移动到下一个"); // "Moving to next"
+  LSTR MSG_UBL_ACTIVATE_MESH              = _UxGT("激活UBL"); // "Activate UBL"
+  LSTR MSG_UBL_DEACTIVATE_MESH            = _UxGT("关闭UBL"); // "Deactivate UBL"
+  LSTR MSG_UBL_SET_TEMP_BED               = _UxGT("热床温度"); // "Bed Temp"
   LSTR MSG_UBL_BED_TEMP_CUSTOM            = _UxGT("热床温度");
-  LSTR MSG_UBL_SET_TEMP_HOTEND            = _UxGT("热端温度");     // "Hotend Temp"
+  LSTR MSG_UBL_SET_TEMP_HOTEND            = _UxGT("热端温度"); // "Hotend Temp"
   LSTR MSG_UBL_HOTEND_TEMP_CUSTOM         = _UxGT("热端温度");
-  LSTR MSG_UBL_MESH_EDIT                  = _UxGT("网格编辑");     // "Mesh Edit"
-  LSTR MSG_UBL_EDIT_CUSTOM_MESH           = _UxGT("编辑客户网格");     // "Edit Custom Mesh"
-  LSTR MSG_UBL_FINE_TUNE_MESH             = _UxGT("细调网格");     // "Fine Tuning Mesh"
-  LSTR MSG_UBL_DONE_EDITING_MESH          = _UxGT("完成编辑网格");     // "Done Editing Mesh"
-  LSTR MSG_UBL_BUILD_CUSTOM_MESH          = _UxGT("创设客户网格");     // "Build Custom Mesh"
-  LSTR MSG_UBL_BUILD_MESH_MENU            = _UxGT("创设网格");     // "Build Mesh"
+  LSTR MSG_UBL_MESH_EDIT                  = _UxGT("网格编辑"); // "Mesh Edit"
+  LSTR MSG_UBL_EDIT_CUSTOM_MESH           = _UxGT("编辑客户网格"); // "Edit Custom Mesh"
+  LSTR MSG_UBL_FINE_TUNE_MESH             = _UxGT("细调网格"); // "Fine Tuning Mesh"
+  LSTR MSG_UBL_DONE_EDITING_MESH          = _UxGT("完成编辑网格"); // "Done Editing Mesh"
+  LSTR MSG_UBL_BUILD_CUSTOM_MESH          = _UxGT("创设客户网格"); // "Build Custom Mesh"
+  LSTR MSG_UBL_BUILD_MESH_MENU            = _UxGT("创设网格"); // "Build Mesh"
   #if HAS_PREHEAT
-    LSTR MSG_UBL_BUILD_MESH_M             = _UxGT("创设 $ 网格");     // "Build PREHEAT_1_LABEL Mesh"
-    LSTR MSG_UBL_VALIDATE_MESH_M          = _UxGT("批准 $ 网格");     // "Validate PREHEAT_1_LABEL Mesh"
+    LSTR MSG_UBL_BUILD_MESH_M             = _UxGT("创设 $ 网格"); // "Build PREHEAT_1_LABEL Mesh"
+    LSTR MSG_UBL_VALIDATE_MESH_M          = _UxGT("批准 $ 网格"); // "Validate PREHEAT_1_LABEL Mesh"
   #endif
-  LSTR MSG_UBL_BUILD_COLD_MESH            = _UxGT("创设冷网格");     // "Build Cold Mesh"
-  LSTR MSG_UBL_MESH_HEIGHT_ADJUST         = _UxGT("调整网格高度");     // "Adjust Mesh Height"
-  LSTR MSG_UBL_MESH_HEIGHT_AMOUNT         = _UxGT("高度合计");     // "Height Amount"
-  LSTR MSG_UBL_VALIDATE_MESH_MENU         = _UxGT("批准网格");     // "Validate Mesh"
-  LSTR MSG_UBL_VALIDATE_CUSTOM_MESH       = _UxGT("批准客户网格");     // "Validate Custom Mesh"
+  LSTR MSG_UBL_BUILD_COLD_MESH            = _UxGT("创设冷网格"); // "Build Cold Mesh"
+  LSTR MSG_UBL_MESH_HEIGHT_ADJUST         = _UxGT("调整网格高度"); // "Adjust Mesh Height"
+  LSTR MSG_UBL_MESH_HEIGHT_AMOUNT         = _UxGT("高度合计"); // "Height Amount"
+  LSTR MSG_UBL_VALIDATE_MESH_MENU         = _UxGT("批准网格"); // "Validate Mesh"
+  LSTR MSG_UBL_VALIDATE_CUSTOM_MESH       = _UxGT("批准客户网格"); // "Validate Custom Mesh"
   LSTR MSG_G26_HEATING_BED                = _UxGT("G26加热热床");
   LSTR MSG_G26_HEATING_NOZZLE             = _UxGT("G26加热喷嘴");
   LSTR MSG_G26_MANUAL_PRIME               = _UxGT("手动填装中...");
@@ -158,38 +158,38 @@ namespace Language_zh_CN {
   LSTR MSG_G26_PRIME_DONE                 = _UxGT("填装完成");
   LSTR MSG_G26_CANCELED                   = _UxGT("G26已取消");
   LSTR MSG_G26_LEAVING                    = _UxGT("离开G26");
-  LSTR MSG_UBL_CONTINUE_MESH              = _UxGT("继续热床网格");     // "Continue Bed Mesh"
-  LSTR MSG_UBL_MESH_LEVELING              = _UxGT("网格调平");     // "Mesh Leveling"
-  LSTR MSG_UBL_3POINT_MESH_LEVELING       = _UxGT("三点调平");     // "3-Point Leveling"
-  LSTR MSG_UBL_GRID_MESH_LEVELING         = _UxGT("格子网格调平");     // "Grid Mesh Leveling"
-  LSTR MSG_UBL_MESH_LEVEL                 = _UxGT("调平网格");     // "Level Mesh"
-  LSTR MSG_UBL_SIDE_POINTS                = _UxGT("边点");     // "Side Points"
-  LSTR MSG_UBL_MAP_TYPE                   = _UxGT("图类型");     // "Map Type"
-  LSTR MSG_UBL_OUTPUT_MAP                 = _UxGT("输出网格图");     // "Output Mesh Map"
-  LSTR MSG_UBL_OUTPUT_MAP_HOST            = _UxGT("输出到主机");     // "Output for Host"
-  LSTR MSG_UBL_OUTPUT_MAP_CSV             = _UxGT("输出到CSV");     // "Output for CSV"
-  LSTR MSG_UBL_OUTPUT_MAP_BACKUP          = _UxGT("输出到备份");     // "Off Printer Backup"
-  LSTR MSG_UBL_INFO_UBL                   = _UxGT("输出UBL信息");     // "Output UBL Info"
-  LSTR MSG_UBL_FILLIN_AMOUNT              = _UxGT("填充合计");     // "Fill-in Amount"
-  LSTR MSG_UBL_MANUAL_FILLIN              = _UxGT("手工填充");     // "Manual Fill-in"
-  LSTR MSG_UBL_SMART_FILLIN               = _UxGT("聪明填充");     // "Smart Fill-in"
-  LSTR MSG_UBL_FILLIN_MESH                = _UxGT("填充网格");     // "Fill-in Mesh"
-  LSTR MSG_UBL_INVALIDATE_ALL             = _UxGT("作废所有的");     // "Invalidate All"
-  LSTR MSG_UBL_INVALIDATE_CLOSEST         = _UxGT("作废最近的");     // "Invalidate Closest"
-  LSTR MSG_UBL_FINE_TUNE_ALL              = _UxGT("细调所有的");     // "Fine Tune All"
-  LSTR MSG_UBL_FINE_TUNE_CLOSEST          = _UxGT("细调最近的");     // "Fine Tune Closest"
-  LSTR MSG_UBL_STORAGE_MESH_MENU          = _UxGT("网格存储");     // "Mesh Storage"
-  LSTR MSG_UBL_STORAGE_SLOT               = _UxGT("存储槽");     // "Memory Slot"
-  LSTR MSG_UBL_LOAD_MESH                  = _UxGT("装载热床网格");     // "Load Bed Mesh"
-  LSTR MSG_UBL_SAVE_MESH                  = _UxGT("保存热床网格");     // "Save Bed Mesh"
-  LSTR MSG_MESH_LOADED                    = _UxGT("网格 %i 已装载");     // "Mesh %i loaded"
-  LSTR MSG_MESH_SAVED                     = _UxGT("网格 %i 已保存");     // "Mesh %i saved"
-  LSTR MSG_UBL_NO_STORAGE                 = _UxGT("没有存储");     // "No storage"
-  LSTR MSG_UBL_SAVE_ERROR                 = _UxGT("错误: UBL保存");     // "Err: UBL Save"
-  LSTR MSG_UBL_RESTORE_ERROR              = _UxGT("错误: UBL还原");     // "Err: UBL Restore"
+  LSTR MSG_UBL_CONTINUE_MESH              = _UxGT("继续热床网格"); // "Continue Bed Mesh"
+  LSTR MSG_UBL_MESH_LEVELING              = _UxGT("网格调平"); // "Mesh Leveling"
+  LSTR MSG_UBL_3POINT_MESH_LEVELING       = _UxGT("三点调平"); // "3-Point Leveling"
+  LSTR MSG_UBL_GRID_MESH_LEVELING         = _UxGT("格子网格调平"); // "Grid Mesh Leveling"
+  LSTR MSG_UBL_MESH_LEVEL                 = _UxGT("调平网格"); // "Level Mesh"
+  LSTR MSG_UBL_SIDE_POINTS                = _UxGT("边点"); // "Side Points"
+  LSTR MSG_UBL_MAP_TYPE                   = _UxGT("图类型"); // "Map Type"
+  LSTR MSG_UBL_OUTPUT_MAP                 = _UxGT("输出网格图"); // "Output Mesh Map"
+  LSTR MSG_UBL_OUTPUT_MAP_HOST            = _UxGT("输出到主机"); // "Output for Host"
+  LSTR MSG_UBL_OUTPUT_MAP_CSV             = _UxGT("输出到CSV"); // "Output for CSV"
+  LSTR MSG_UBL_OUTPUT_MAP_BACKUP          = _UxGT("输出到备份"); // "Off Printer Backup"
+  LSTR MSG_UBL_INFO_UBL                   = _UxGT("输出UBL信息"); // "Output UBL Info"
+  LSTR MSG_UBL_FILLIN_AMOUNT              = _UxGT("填充合计"); // "Fill-in Amount"
+  LSTR MSG_UBL_MANUAL_FILLIN              = _UxGT("手工填充"); // "Manual Fill-in"
+  LSTR MSG_UBL_SMART_FILLIN               = _UxGT("聪明填充"); // "Smart Fill-in"
+  LSTR MSG_UBL_FILLIN_MESH                = _UxGT("填充网格"); // "Fill-in Mesh"
+  LSTR MSG_UBL_INVALIDATE_ALL             = _UxGT("作废所有的"); // "Invalidate All"
+  LSTR MSG_UBL_INVALIDATE_CLOSEST         = _UxGT("作废最近的"); // "Invalidate Closest"
+  LSTR MSG_UBL_FINE_TUNE_ALL              = _UxGT("细调所有的"); // "Fine Tune All"
+  LSTR MSG_UBL_FINE_TUNE_CLOSEST          = _UxGT("细调最近的"); // "Fine Tune Closest"
+  LSTR MSG_UBL_STORAGE_MESH_MENU          = _UxGT("网格存储"); // "Mesh Storage"
+  LSTR MSG_UBL_STORAGE_SLOT               = _UxGT("存储槽"); // "Memory Slot"
+  LSTR MSG_UBL_LOAD_MESH                  = _UxGT("装载热床网格"); // "Load Bed Mesh"
+  LSTR MSG_UBL_SAVE_MESH                  = _UxGT("保存热床网格"); // "Save Bed Mesh"
+  LSTR MSG_MESH_LOADED                    = _UxGT("网格 %i 已装载"); // "Mesh %i loaded"
+  LSTR MSG_MESH_SAVED                     = _UxGT("网格 %i 已保存"); // "Mesh %i saved"
+  LSTR MSG_UBL_NO_STORAGE                 = _UxGT("没有存储"); // "No storage"
+  LSTR MSG_UBL_SAVE_ERROR                 = _UxGT("错误: UBL保存"); // "Err: UBL Save"
+  LSTR MSG_UBL_RESTORE_ERROR              = _UxGT("错误: UBL还原"); // "Err: UBL Restore"
   LSTR MSG_UBL_Z_OFFSET                   = _UxGT("Z偏移量: ");
-  LSTR MSG_UBL_Z_OFFSET_STOPPED           = _UxGT("Z偏移已停止");     // "Z-Offset Stopped"
-  LSTR MSG_UBL_STEP_BY_STEP_MENU          = _UxGT("一步步UBL");     // "Step-By-Step UBL"
+  LSTR MSG_UBL_Z_OFFSET_STOPPED           = _UxGT("Z偏移已停止"); // "Z-Offset Stopped"
+  LSTR MSG_UBL_STEP_BY_STEP_MENU          = _UxGT("一步步UBL"); // "Step-By-Step UBL"
   LSTR MSG_UBL_1_BUILD_COLD_MESH          = _UxGT("1. 创设冷网格");
   LSTR MSG_UBL_2_SMART_FILLIN             = _UxGT("2. 聪明填充");
   LSTR MSG_UBL_3_VALIDATE_MESH_MENU       = _UxGT("3. 批准网格");
@@ -198,66 +198,66 @@ namespace Language_zh_CN {
   LSTR MSG_UBL_6_FINE_TUNE_ALL            = _UxGT("6. 细调所有的");
   LSTR MSG_UBL_7_SAVE_MESH                = _UxGT("7. 保存热床网格");
 
-  LSTR MSG_LED_CONTROL                    = _UxGT("LED控制");     // "LED Control"
-  LSTR MSG_LEDS                           = _UxGT("灯");     // "Lights"
-  LSTR MSG_LED_PRESETS                    = _UxGT("灯预置");     // "Light Presets"
-  LSTR MSG_SET_LEDS_RED                   = _UxGT("红");     // "Red"
-  LSTR MSG_SET_LEDS_ORANGE                = _UxGT("橙");     // "Orange"
-  LSTR MSG_SET_LEDS_YELLOW                = _UxGT("黄");     // "Yellow"
-  LSTR MSG_SET_LEDS_GREEN                 = _UxGT("绿");     // "Green"
-  LSTR MSG_SET_LEDS_BLUE                  = _UxGT("蓝");     // "Blue"
-  LSTR MSG_SET_LEDS_INDIGO                = _UxGT("青");     // "Indigo"
-  LSTR MSG_SET_LEDS_VIOLET                = _UxGT("紫");     // "Violet"
-  LSTR MSG_SET_LEDS_WHITE                 = _UxGT("白");     // "White"
-  LSTR MSG_SET_LEDS_DEFAULT               = _UxGT("缺省");     // "Default"
-  LSTR MSG_CUSTOM_LEDS                    = _UxGT("定制灯");     // "Custom Lights"
-  LSTR MSG_INTENSITY_R                    = _UxGT("红饱和度");     // "Red Intensity"
-  LSTR MSG_INTENSITY_G                    = _UxGT("绿饱和度");     // "Green Intensity"
-  LSTR MSG_INTENSITY_B                    = _UxGT("蓝饱和度");     // "Blue Intensity"
-  LSTR MSG_INTENSITY_W                    = _UxGT("白饱和度");     // "White Intensity"
-  LSTR MSG_LED_BRIGHTNESS                 = _UxGT("亮度");     // "Brightness"
+  LSTR MSG_LED_CONTROL                    = _UxGT("LED控制"); // "LED Control"
+  LSTR MSG_LEDS                           = _UxGT("灯"); // "Lights"
+  LSTR MSG_LED_PRESETS                    = _UxGT("灯预置"); // "Light Presets"
+  LSTR MSG_SET_LEDS_RED                   = _UxGT("红"); // "Red"
+  LSTR MSG_SET_LEDS_ORANGE                = _UxGT("橙"); // "Orange"
+  LSTR MSG_SET_LEDS_YELLOW                = _UxGT("黄"); // "Yellow"
+  LSTR MSG_SET_LEDS_GREEN                 = _UxGT("绿"); // "Green"
+  LSTR MSG_SET_LEDS_BLUE                  = _UxGT("蓝"); // "Blue"
+  LSTR MSG_SET_LEDS_INDIGO                = _UxGT("青"); // "Indigo"
+  LSTR MSG_SET_LEDS_VIOLET                = _UxGT("紫"); // "Violet"
+  LSTR MSG_SET_LEDS_WHITE                 = _UxGT("白"); // "White"
+  LSTR MSG_SET_LEDS_DEFAULT               = _UxGT("缺省"); // "Default"
+  LSTR MSG_CUSTOM_LEDS                    = _UxGT("定制灯"); // "Custom Lights"
+  LSTR MSG_INTENSITY_R                    = _UxGT("红饱和度"); // "Red Intensity"
+  LSTR MSG_INTENSITY_G                    = _UxGT("绿饱和度"); // "Green Intensity"
+  LSTR MSG_INTENSITY_B                    = _UxGT("蓝饱和度"); // "Blue Intensity"
+  LSTR MSG_INTENSITY_W                    = _UxGT("白饱和度"); // "White Intensity"
+  LSTR MSG_LED_BRIGHTNESS                 = _UxGT("亮度"); // "Brightness"
 
-  LSTR MSG_MOVING                         = _UxGT("移动...");     // "Moving..."
-  LSTR MSG_FREE_XY                        = _UxGT("释放 XY");     // "Free XY"
-  LSTR MSG_MOVE_X                         = _UxGT("移动X");     // "Move X"
-  LSTR MSG_MOVE_Y                         = _UxGT("移动Y");     // "Move Y"
-  LSTR MSG_MOVE_Z                         = _UxGT("移动Z");     // "Move Z"
-  LSTR MSG_MOVE_N                         = _UxGT("移动@");     // "Move @"
-  LSTR MSG_MOVE_E                         = _UxGT("挤出机");     // "Extruder"
-  LSTR MSG_MOVE_EN                        = _UxGT("挤出机 *");     // "Extruder"
+  LSTR MSG_MOVING                         = _UxGT("移动..."); // "Moving..."
+  LSTR MSG_FREE_XY                        = _UxGT("释放 XY"); // "Free XY"
+  LSTR MSG_MOVE_X                         = _UxGT("移动X"); // "Move X"
+  LSTR MSG_MOVE_Y                         = _UxGT("移动Y"); // "Move Y"
+  LSTR MSG_MOVE_Z                         = _UxGT("移动Z"); // "Move Z"
+  LSTR MSG_MOVE_N                         = _UxGT("移动@"); // "Move @"
+  LSTR MSG_MOVE_E                         = _UxGT("挤出机"); // "Extruder"
+  LSTR MSG_MOVE_EN                        = _UxGT("挤出机 *"); // "Extruder"
   LSTR MSG_HOTEND_TOO_COLD                = _UxGT("热端太冷");
-  LSTR MSG_MOVE_N_MM                      = _UxGT("移动 $ mm");      // "Move 0.025mm"
-  LSTR MSG_MOVE_01MM                      = _UxGT("移动 0.1 mm");     // "Move 0.1mm"
-  LSTR MSG_MOVE_1MM                       = _UxGT("移动 1 mm");     // "Move 1mm"
-  LSTR MSG_MOVE_10MM                      = _UxGT("移动 10 mm");     // "Move 10mm"
-  LSTR MSG_MOVE_100MM                     = _UxGT("移动 100 mm");     // "Move 100mm"
-  LSTR MSG_SPEED                          = _UxGT("速率");     // "Speed"
-  LSTR MSG_MESH_Z_OFFSET                  = _UxGT("热床Z");     // "Bed Z"
-  LSTR MSG_NOZZLE                         = _UxGT("喷嘴");     // "Nozzle" 噴嘴
-  LSTR MSG_NOZZLE_N                       = _UxGT("喷嘴 ~");     // "Nozzle" 噴嘴
+  LSTR MSG_MOVE_N_MM                      = _UxGT("移动 $ mm"); // "Move 0.025mm"
+  LSTR MSG_MOVE_01MM                      = _UxGT("移动 0.1 mm"); // "Move 0.1mm"
+  LSTR MSG_MOVE_1MM                       = _UxGT("移动 1 mm"); // "Move 1mm"
+  LSTR MSG_MOVE_10MM                      = _UxGT("移动 10 mm"); // "Move 10mm"
+  LSTR MSG_MOVE_100MM                     = _UxGT("移动 100 mm"); // "Move 100mm"
+  LSTR MSG_SPEED                          = _UxGT("速率"); // "Speed"
+  LSTR MSG_MESH_Z_OFFSET                  = _UxGT("热床Z"); // "Bed Z"
+  LSTR MSG_NOZZLE                         = _UxGT("喷嘴"); // "Nozzle" 噴嘴
+  LSTR MSG_NOZZLE_N                       = _UxGT("喷嘴 ~"); // "Nozzle" 噴嘴
   LSTR MSG_NOZZLE_PARKED                  = _UxGT("喷嘴已停靠");
   LSTR MSG_NOZZLE_STANDBY                 = _UxGT("喷嘴待命中");
-  LSTR MSG_BED                            = _UxGT("热床");     // "Bed"
+  LSTR MSG_BED                            = _UxGT("热床"); // "Bed"
   LSTR MSG_CHAMBER                        = _UxGT("机箱壳");
-  LSTR MSG_FAN_SPEED                      = _UxGT("风扇速率");     // "Fan speed"
-  LSTR MSG_FAN_SPEED_N                    = _UxGT("风扇速率 ~");     // "Fan speed"
+  LSTR MSG_FAN_SPEED                      = _UxGT("风扇速率"); // "Fan speed"
+  LSTR MSG_FAN_SPEED_N                    = _UxGT("风扇速率 ~"); // "Fan speed"
   LSTR MSG_STORED_FAN_N                   = _UxGT("存储的风扇 ~");
-  LSTR MSG_EXTRA_FAN_SPEED                = _UxGT("额外风扇速率");     // "Extra fan speed"
-  LSTR MSG_EXTRA_FAN_SPEED_N              = _UxGT("额外风扇速率 ~");     // "Extra fan speed"
+  LSTR MSG_EXTRA_FAN_SPEED                = _UxGT("额外风扇速率"); // "Extra fan speed"
+  LSTR MSG_EXTRA_FAN_SPEED_N              = _UxGT("额外风扇速率 ~"); // "Extra fan speed"
   LSTR MSG_CONTROLLER_FAN                 = _UxGT("控制器风扇");
   LSTR MSG_CONTROLLER_FAN_IDLE_SPEED      = _UxGT("空闲速度");
   LSTR MSG_CONTROLLER_FAN_AUTO_ON         = _UxGT("自动模式");
   LSTR MSG_CONTROLLER_FAN_SPEED           = _UxGT("工作速度");
   LSTR MSG_CONTROLLER_FAN_DURATION        = _UxGT("空闲周期");
-  LSTR MSG_FLOW                           = _UxGT("挤出速率");     // "Flow"
-  LSTR MSG_FLOW_N                         = _UxGT("挤出速率 ~");     // "Flow"
-  LSTR MSG_CONTROL                        = _UxGT("控制");     // "Control"
-  LSTR MSG_MIN                            = " " LCD_STR_THERMOMETER _UxGT(" 最小");     // " " LCD_STR_THERMOMETER " Min"
-  LSTR MSG_MAX                            = " " LCD_STR_THERMOMETER _UxGT(" 最大");     // " " LCD_STR_THERMOMETER " Max"
-  LSTR MSG_FACTOR                         = " " LCD_STR_THERMOMETER _UxGT(" 因数");     // " " LCD_STR_THERMOMETER " Fact"
-  LSTR MSG_AUTOTEMP                       = _UxGT("自动控温");     // "Autotemp"
-  LSTR MSG_LCD_ON                         = _UxGT("开");     // "On"
-  LSTR MSG_LCD_OFF                        = _UxGT("关");     // "Off"
+  LSTR MSG_FLOW                           = _UxGT("挤出速率"); // "Flow"
+  LSTR MSG_FLOW_N                         = _UxGT("挤出速率 ~"); // "Flow"
+  LSTR MSG_CONTROL                        = _UxGT("控制"); // "Control"
+  LSTR MSG_MIN                            = " " LCD_STR_THERMOMETER _UxGT(" 最小"); // " " LCD_STR_THERMOMETER " Min"
+  LSTR MSG_MAX                            = " " LCD_STR_THERMOMETER _UxGT(" 最大"); // " " LCD_STR_THERMOMETER " Max"
+  LSTR MSG_FACTOR                         = " " LCD_STR_THERMOMETER _UxGT(" 因数"); // " " LCD_STR_THERMOMETER " Fact"
+  LSTR MSG_AUTOTEMP                       = _UxGT("自动控温"); // "Autotemp"
+  LSTR MSG_LCD_ON                         = _UxGT("开"); // "On"
+  LSTR MSG_LCD_OFF                        = _UxGT("关"); // "Off"
   LSTR MSG_PID_AUTOTUNE                   = _UxGT("自动PID");
   LSTR MSG_PID_AUTOTUNE_E                 = _UxGT("自动PID *");
   LSTR MSG_PID_AUTOTUNE_DONE              = _UxGT("PID调整完成");
@@ -265,58 +265,58 @@ namespace Language_zh_CN {
   LSTR MSG_PID_TEMP_TOO_HIGH              = _UxGT("自动调失败! 温度太高");
   LSTR MSG_PID_TIMEOUT                    = _UxGT("自动调失败! 超时");
   LSTR MSG_SELECT_E                       = _UxGT("选择 *");
-  LSTR MSG_ACC                            = _UxGT("加速度");     // "Accel" acceleration
-  LSTR MSG_JERK                           = _UxGT("抖动速率");     // "Jerk"
-  LSTR MSG_VA_JERK                        = _UxGT("轴抖动速率") STR_A;     // "Va-jerk"
-  LSTR MSG_VB_JERK                        = _UxGT("轴抖动速率") STR_B;     // "Vb-jerk"
-  LSTR MSG_VC_JERK                        = _UxGT("轴抖动速率") STR_C;     // "Vc-jerk"
-  LSTR MSG_VN_JERK                        = _UxGT("轴抖动速率@");          // "V@-jerk"
-  LSTR MSG_VE_JERK                        = _UxGT("挤出机抖动速率");     // "Ve-jerk"
+  LSTR MSG_ACC                            = _UxGT("加速度"); // "Accel" acceleration
+  LSTR MSG_JERK                           = _UxGT("抖动速率"); // "Jerk"
+  LSTR MSG_VA_JERK                        = _UxGT("轴抖动速率") STR_A; // "Va-jerk"
+  LSTR MSG_VB_JERK                        = _UxGT("轴抖动速率") STR_B; // "Vb-jerk"
+  LSTR MSG_VC_JERK                        = _UxGT("轴抖动速率") STR_C; // "Vc-jerk"
+  LSTR MSG_VN_JERK                        = _UxGT("轴抖动速率@"); // "V@-jerk"
+  LSTR MSG_VE_JERK                        = _UxGT("挤出机抖动速率"); // "Ve-jerk"
   LSTR MSG_JUNCTION_DEVIATION             = _UxGT("接点差");
-  LSTR MSG_MAX_SPEED                      = _UxGT("速度");     // "Velocity"
-  LSTR MSG_VMAX_A                         = _UxGT("最大进料速率") STR_A;     // "Vmax " max_feedrate_mm_s
+  LSTR MSG_MAX_SPEED                      = _UxGT("速度"); // "Velocity"
+  LSTR MSG_VMAX_A                         = _UxGT("最大进料速率") STR_A; // "Vmax " max_feedrate_mm_s
   LSTR MSG_VMAX_B                         = _UxGT("最大进料速率") STR_B;
   LSTR MSG_VMAX_C                         = _UxGT("最大进料速率") STR_C;
   LSTR MSG_VMAX_N                         = _UxGT("最大进料速率@");
   LSTR MSG_VMAX_E                         = _UxGT("最大进料速率E");
   LSTR MSG_VMAX_EN                        = _UxGT("最大进料速率 *");
-  LSTR MSG_VMIN                           = _UxGT("最小进料速率");     // "Vmin"  min_feedrate_mm_s
-  LSTR MSG_VTRAV_MIN                      = _UxGT("最小移动速率");     // "VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
-  LSTR MSG_ACCELERATION                   = _UxGT("加速度");     // "Acceleration"
-  LSTR MSG_AMAX_A                         = _UxGT("最大打印加速度") STR_A;     // "Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  LSTR MSG_VMIN                           = _UxGT("最小进料速率"); // "Vmin"  min_feedrate_mm_s
+  LSTR MSG_VTRAV_MIN                      = _UxGT("最小移动速率"); // "VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
+  LSTR MSG_ACCELERATION                   = _UxGT("加速度"); // "Acceleration"
+  LSTR MSG_AMAX_A                         = _UxGT("最大打印加速度") STR_A; // "Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
   LSTR MSG_AMAX_B                         = _UxGT("最大打印加速度") STR_B;
   LSTR MSG_AMAX_C                         = _UxGT("最大打印加速度") STR_C;
   LSTR MSG_AMAX_N                         = _UxGT("最大打印加速度@");
   LSTR MSG_AMAX_E                         = _UxGT("最大打印加速度E");
   LSTR MSG_AMAX_EN                        = _UxGT("最大打印加速度 *");
-  LSTR MSG_A_RETRACT                      = _UxGT("收进加速度");     // "A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
-  LSTR MSG_A_TRAVEL                       = _UxGT("非打印移动加速度");     // "A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
+  LSTR MSG_A_RETRACT                      = _UxGT("收进加速度"); // "A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
+  LSTR MSG_A_TRAVEL                       = _UxGT("非打印移动加速度"); // "A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
   LSTR MSG_XY_FREQUENCY_LIMIT             = _UxGT("频率最大");
   LSTR MSG_XY_FREQUENCY_FEEDRATE          = _UxGT("进给速度");
-  LSTR MSG_STEPS_PER_MM                   = _UxGT("轴步数/mm");     // "Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
-  LSTR MSG_A_STEPS                        = STR_A _UxGT(" 步数/mm");     // "Asteps/mm"
+  LSTR MSG_STEPS_PER_MM                   = _UxGT("轴步数/mm"); // "Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
+  LSTR MSG_A_STEPS                        = STR_A _UxGT(" 步数/mm"); // "Asteps/mm"
   LSTR MSG_B_STEPS                        = STR_B _UxGT(" 步数/mm");
   LSTR MSG_C_STEPS                        = STR_C _UxGT(" 步数/mm");
   LSTR MSG_N_STEPS                        = _UxGT("@ 步数/mm");
-  LSTR MSG_E_STEPS                        = _UxGT("E 步数/mm");     // "Esteps/mm"
+  LSTR MSG_E_STEPS                        = _UxGT("E 步数/mm"); // "Esteps/mm"
   LSTR MSG_EN_STEPS                       = _UxGT("* 步数/mm");
-  LSTR MSG_TEMPERATURE                    = _UxGT("温度");     // "Temperature"
-  LSTR MSG_MOTION                         = _UxGT("运动");     // "Motion"
-  LSTR MSG_FILAMENT                       = _UxGT("料丝");     // "Filament" menu_advanced_filament
-  LSTR MSG_VOLUMETRIC_ENABLED             = _UxGT("E 在 mm") SUPERSCRIPT_THREE;     // "E in mm3" volumetric_enabled
+  LSTR MSG_TEMPERATURE                    = _UxGT("温度"); // "Temperature"
+  LSTR MSG_MOTION                         = _UxGT("运动"); // "Motion"
+  LSTR MSG_FILAMENT                       = _UxGT("料丝"); // "Filament" menu_advanced_filament
+  LSTR MSG_VOLUMETRIC_ENABLED             = _UxGT("E 在 mm") SUPERSCRIPT_THREE; // "E in mm3" volumetric_enabled
   LSTR MSG_VOLUMETRIC_LIMIT               = _UxGT("E 限制 在 mm") SUPERSCRIPT_THREE;
   LSTR MSG_VOLUMETRIC_LIMIT_E             = _UxGT("E 限制 *");
-  LSTR MSG_FILAMENT_DIAM                  = _UxGT("丝料直径");     // "Fil. Dia."
+  LSTR MSG_FILAMENT_DIAM                  = _UxGT("丝料直径"); // "Fil. Dia."
   LSTR MSG_FILAMENT_DIAM_E                = _UxGT("丝料直径 *");
-  LSTR MSG_FILAMENT_UNLOAD                = _UxGT("卸载 mm");     // "Unload mm"
-  LSTR MSG_FILAMENT_LOAD                  = _UxGT("装载 mm");     // "Load mm"
+  LSTR MSG_FILAMENT_UNLOAD                = _UxGT("卸载 mm"); // "Unload mm"
+  LSTR MSG_FILAMENT_LOAD                  = _UxGT("装载 mm"); // "Load mm"
   LSTR MSG_ADVANCE_K                      = _UxGT("Advance K");
   LSTR MSG_ADVANCE_K_E                    = _UxGT("Advance K *");
-  LSTR MSG_CONTRAST                       = _UxGT("LCD对比度");     // "LCD contrast"
-  LSTR MSG_STORE_EEPROM                   = _UxGT("保存设置");     // "Store memory"
-  LSTR MSG_LOAD_EEPROM                    = _UxGT("装载设置");     // "Load memory"
-  LSTR MSG_RESTORE_DEFAULTS               = _UxGT("恢复安全值");     // "Restore Defaults"
-  LSTR MSG_INIT_EEPROM                    = _UxGT("初始化设置");     // "Initialize EEPROM"
+  LSTR MSG_CONTRAST                       = _UxGT("LCD对比度"); // "LCD contrast"
+  LSTR MSG_STORE_EEPROM                   = _UxGT("保存设置"); // "Store memory"
+  LSTR MSG_LOAD_EEPROM                    = _UxGT("装载设置"); // "Load memory"
+  LSTR MSG_RESTORE_DEFAULTS               = _UxGT("恢复安全值"); // "Restore Defaults"
+  LSTR MSG_INIT_EEPROM                    = _UxGT("初始化设置"); // "Initialize EEPROM"
   LSTR MSG_ERR_EEPROM_CRC                 = _UxGT("EEPROM 校验和 错误");
   LSTR MSG_ERR_EEPROM_SIZE                = _UxGT("EEPROM 尺寸 错误");
   LSTR MSG_ERR_EEPROM_VERSION             = _UxGT("EEPROM 版本 错误");
@@ -324,9 +324,9 @@ namespace Language_zh_CN {
   LSTR MSG_MEDIA_UPDATE                   = _UxGT("存储器更新");
   LSTR MSG_RESET_PRINTER                  = _UxGT("复位打印机");
   LSTR MSG_REFRESH                        = LCD_STR_REFRESH _UxGT("刷新");
-  LSTR MSG_INFO_SCREEN                    = _UxGT("信息屏");     // "Info screen"
-  LSTR MSG_PREPARE                        = _UxGT("准备");     // "Prepare"
-  LSTR MSG_TUNE                           = _UxGT("调整");     // "Tune"
+  LSTR MSG_INFO_SCREEN                    = _UxGT("信息屏"); // "Info screen"
+  LSTR MSG_PREPARE                        = _UxGT("准备"); // "Prepare"
+  LSTR MSG_TUNE                           = _UxGT("调整"); // "Tune"
   LSTR MSG_POWER_MONITOR                  = _UxGT("电源监控");
   LSTR MSG_CURRENT                        = _UxGT("电流");
   LSTR MSG_VOLTAGE                        = _UxGT("电压");
@@ -343,33 +343,33 @@ namespace Language_zh_CN {
   LSTR MSG_BUTTON_BACK                    = _UxGT("返回");
   LSTR MSG_BUTTON_PROCEED                 = _UxGT("继续");
   LSTR MSG_PAUSING                        = _UxGT("暂停中...");
-  LSTR MSG_PAUSE_PRINT                    = _UxGT("暂停打印");     // "Pause print"
-  LSTR MSG_RESUME_PRINT                   = _UxGT("恢复打印");     // "Resume print"
-  LSTR MSG_STOP_PRINT                     = _UxGT("停止打印");     // "Stop print"
+  LSTR MSG_PAUSE_PRINT                    = _UxGT("暂停打印"); // "Pause print"
+  LSTR MSG_RESUME_PRINT                   = _UxGT("恢复打印"); // "Resume print"
+  LSTR MSG_STOP_PRINT                     = _UxGT("停止打印"); // "Stop print"
   LSTR MSG_PRINTING_OBJECT                = _UxGT("打印物体");
   LSTR MSG_CANCEL_OBJECT                  = _UxGT("取消物体");
   LSTR MSG_CANCEL_OBJECT_N                = _UxGT("取消物体 {");
   LSTR MSG_OUTAGE_RECOVERY                = _UxGT("中断恢复");
-  LSTR MSG_MEDIA_MENU                     = _UxGT("从存储卡上打印");     // "Print from SD"
-  LSTR MSG_NO_MEDIA                       = _UxGT("无存储卡");     // "No SD card"
-  LSTR MSG_DWELL                          = _UxGT("休眠中 ...");     // "Sleep..."
-  LSTR MSG_USERWAIT                       = _UxGT("点击继续 ...");     // "Click to resume..."
-  LSTR MSG_PRINT_PAUSED                   = _UxGT("暫停打印");     // "Print paused"
+  LSTR MSG_MEDIA_MENU                     = _UxGT("从存储卡上打印"); // "Print from SD"
+  LSTR MSG_NO_MEDIA                       = _UxGT("无存储卡"); // "No SD card"
+  LSTR MSG_DWELL                          = _UxGT("休眠中 ..."); // "Sleep..."
+  LSTR MSG_USERWAIT                       = _UxGT("点击继续 ..."); // "Click to resume..."
+  LSTR MSG_PRINT_PAUSED                   = _UxGT("暫停打印"); // "Print paused"
   LSTR MSG_PRINTING                       = _UxGT("打印中...");
-  LSTR MSG_PRINT_ABORTED                  = _UxGT("已取消打印");     // "Print aborted"
+  LSTR MSG_PRINT_ABORTED                  = _UxGT("已取消打印"); // "Print aborted"
   LSTR MSG_PRINT_DONE                     = _UxGT("打印已完成");
-  LSTR MSG_NO_MOVE                        = _UxGT("无移动");     // "No move."
-  LSTR MSG_KILLED                         = _UxGT("已杀掉");     // "KILLED. "
-  LSTR MSG_STOPPED                        = _UxGT("已停止");     // "STOPPED. "
-  LSTR MSG_CONTROL_RETRACT                = _UxGT("回抽长度mm");     // "Retract mm" retract_length, retract length (positive mm)
-  LSTR MSG_CONTROL_RETRACT_SWAP           = _UxGT("换手回抽长度mm");     // "Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
-  LSTR MSG_CONTROL_RETRACTF               = _UxGT("回抽速率mm/s");     // "Retract V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
-  LSTR MSG_CONTROL_RETRACT_ZHOP           = _UxGT("Hop mm");     // "Hop mm" retract_zraise, retract Z-lift
-  LSTR MSG_CONTROL_RETRACT_RECOVER        = _UxGT("回抽恢复长度mm");     // "UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
-  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAP   = _UxGT("换手回抽恢复长度mm");     // "S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
-  LSTR MSG_CONTROL_RETRACT_RECOVERF       = _UxGT("回抽恢复后进料速率mm/s");     // "Unretract V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
-  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAPF  = _UxGT("S UnRet V");     // "S UnRet V"
-  LSTR MSG_AUTORETRACT                    = _UxGT("自动抽回");     // "Auto-Retract" autoretract_enabled,
+  LSTR MSG_NO_MOVE                        = _UxGT("无移动"); // "No move."
+  LSTR MSG_KILLED                         = _UxGT("已杀掉"); // "KILLED. "
+  LSTR MSG_STOPPED                        = _UxGT("已停止"); // "STOPPED. "
+  LSTR MSG_CONTROL_RETRACT                = _UxGT("回抽长度mm"); // "Retract mm" retract_length, retract length (positive mm)
+  LSTR MSG_CONTROL_RETRACT_SWAP           = _UxGT("换手回抽长度mm"); // "Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
+  LSTR MSG_CONTROL_RETRACTF               = _UxGT("回抽速率mm/s"); // "Retract V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
+  LSTR MSG_CONTROL_RETRACT_ZHOP           = _UxGT("Hop mm"); // "Hop mm" retract_zraise, retract Z-lift
+  LSTR MSG_CONTROL_RETRACT_RECOVER        = _UxGT("回抽恢复长度mm"); // "UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
+  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAP   = _UxGT("换手回抽恢复长度mm"); // "S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
+  LSTR MSG_CONTROL_RETRACT_RECOVERF       = _UxGT("回抽恢复后进料速率mm/s"); // "Unretract V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
+  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAPF  = _UxGT("S UnRet V"); // "S UnRet V"
+  LSTR MSG_AUTORETRACT                    = _UxGT("自动抽回"); // "Auto-Retract" autoretract_enabled,
   LSTR MSG_FILAMENT_SWAP_LENGTH           = _UxGT("交换长度");
   LSTR MSG_FILAMENT_SWAP_EXTRA            = _UxGT("额外的交换");
   LSTR MSG_FILAMENT_PURGE_LENGTH          = _UxGT("清洗长度");
@@ -387,19 +387,19 @@ namespace Language_zh_CN {
   LSTR MSG_TOOL_MIGRATION_AUTO            = _UxGT("自动迁移");
   LSTR MSG_TOOL_MIGRATION_END             = _UxGT("上一个挤出机");
   LSTR MSG_TOOL_MIGRATION_SWAP            = _UxGT("迁移至 *");
-  LSTR MSG_FILAMENTCHANGE                 = _UxGT("更换丝料");     // "Change filament"
-  LSTR MSG_FILAMENTCHANGE_E               = _UxGT("更换丝料 *");     // "Change filament"
-  LSTR MSG_FILAMENTLOAD                   = _UxGT("装载丝料");     // "Load filament"
-  LSTR MSG_FILAMENTLOAD_E                 = _UxGT("装载丝料 *");     // "Load filament"
-  LSTR MSG_FILAMENTUNLOAD                 = _UxGT("卸载丝料");     // "Unload filament"
-  LSTR MSG_FILAMENTUNLOAD_E               = _UxGT("卸载丝料 *");     // "Unload filament"
-  LSTR MSG_FILAMENTUNLOAD_ALL             = _UxGT("卸载全部");     // "Unload All"
-  LSTR MSG_ATTACH_MEDIA                   = _UxGT("初始化存储卡");     // "Init. SD card"
-  LSTR MSG_CHANGE_MEDIA                   = _UxGT("更换存储卡");     // "Change SD card"
+  LSTR MSG_FILAMENTCHANGE                 = _UxGT("更换丝料"); // "Change filament"
+  LSTR MSG_FILAMENTCHANGE_E               = _UxGT("更换丝料 *"); // "Change filament"
+  LSTR MSG_FILAMENTLOAD                   = _UxGT("装载丝料"); // "Load filament"
+  LSTR MSG_FILAMENTLOAD_E                 = _UxGT("装载丝料 *"); // "Load filament"
+  LSTR MSG_FILAMENTUNLOAD                 = _UxGT("卸载丝料"); // "Unload filament"
+  LSTR MSG_FILAMENTUNLOAD_E               = _UxGT("卸载丝料 *"); // "Unload filament"
+  LSTR MSG_FILAMENTUNLOAD_ALL             = _UxGT("卸载全部"); // "Unload All"
+  LSTR MSG_ATTACH_MEDIA                   = _UxGT("初始化存储卡"); // "Init. SD card"
+  LSTR MSG_CHANGE_MEDIA                   = _UxGT("更换存储卡"); // "Change SD card"
   LSTR MSG_RELEASE_MEDIA                  = _UxGT("释放存储卡");
-  LSTR MSG_ZPROBE_OUT                     = _UxGT("Z探针在热床之外");     // "Z probe out. bed" Z probe is not within the physical limits
-  LSTR MSG_SKEW_FACTOR                    = _UxGT("偏斜因数");     // "Skew Factor"
-  LSTR MSG_BLTOUCH                        = _UxGT("BLTouch");     // "BLTouch"
+  LSTR MSG_ZPROBE_OUT                     = _UxGT("Z探针在热床之外"); // "Z probe out. bed" Z probe is not within the physical limits
+  LSTR MSG_SKEW_FACTOR                    = _UxGT("偏斜因数"); // "Skew Factor"
+  LSTR MSG_BLTOUCH                        = _UxGT("BLTouch"); // "BLTouch"
   LSTR MSG_BLTOUCH_SELFTEST               = _UxGT("自检");
   LSTR MSG_BLTOUCH_RESET                  = _UxGT("重置");
   LSTR MSG_BLTOUCH_STOW                   = _UxGT("装载");
@@ -419,96 +419,96 @@ namespace Language_zh_CN {
   LSTR MSG_MANUAL_DEPLOY_TOUCHMI          = _UxGT("部署TouchMI");
   LSTR MSG_MANUAL_DEPLOY                  = _UxGT("部署Z探针");
   LSTR MSG_MANUAL_STOW                    = _UxGT("收好Z探针");
-  LSTR MSG_HOME_FIRST                     = _UxGT("归位 %s 先");     // "Home ... first"
+  LSTR MSG_HOME_FIRST                     = _UxGT("归位 %s 先"); // "Home ... first"
   LSTR MSG_ZPROBE_OFFSETS                 = _UxGT("探针偏移量");
   LSTR MSG_ZPROBE_XOFFSET                 = _UxGT("探针X偏移");
   LSTR MSG_ZPROBE_YOFFSET                 = _UxGT("探针Y偏移");
-  LSTR MSG_ZPROBE_ZOFFSET                 = _UxGT("探针Z偏移");     // "Z Offset"
-  LSTR MSG_BABYSTEP_X                     = _UxGT("微量调整X轴");     // "Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
-  LSTR MSG_BABYSTEP_Y                     = _UxGT("微量调整Y轴");     // "Babystep Y"
-  LSTR MSG_BABYSTEP_Z                     = _UxGT("微量调整Z轴");     // "Babystep Z"
+  LSTR MSG_ZPROBE_ZOFFSET                 = _UxGT("探针Z偏移"); // "Z Offset"
+  LSTR MSG_BABYSTEP_X                     = _UxGT("微量调整X轴"); // "Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
+  LSTR MSG_BABYSTEP_Y                     = _UxGT("微量调整Y轴"); // "Babystep Y"
+  LSTR MSG_BABYSTEP_Z                     = _UxGT("微量调整Z轴"); // "Babystep Z"
   LSTR MSG_BABYSTEP_TOTAL                 = _UxGT("总计");
-  LSTR MSG_ENDSTOP_ABORT                  = _UxGT("挡块终止");     // "Endstop abort"
-  LSTR MSG_HEATING_FAILED_LCD             = _UxGT("加热失败");     // "Heating failed"
-  LSTR MSG_ERR_REDUNDANT_TEMP             = _UxGT("错误：冗余温度");     // "Err: REDUNDANT TEMP"
-  LSTR MSG_THERMAL_RUNAWAY                = _UxGT("温控失控");     // "THERMAL RUNAWAY"
+  LSTR MSG_ENDSTOP_ABORT                  = _UxGT("挡块终止"); // "Endstop abort"
+  LSTR MSG_HEATING_FAILED_LCD             = _UxGT("加热失败"); // "Heating failed"
+  LSTR MSG_ERR_REDUNDANT_TEMP             = _UxGT("错误：冗余温度"); // "Err: REDUNDANT TEMP"
+  LSTR MSG_THERMAL_RUNAWAY                = _UxGT("温控失控"); // "THERMAL RUNAWAY"
   LSTR MSG_THERMAL_RUNAWAY_BED            = _UxGT("热床热量失控");
   LSTR MSG_THERMAL_RUNAWAY_CHAMBER        = _UxGT("机箱热量失控");
-  LSTR MSG_ERR_MAXTEMP                    = _UxGT("错误：最高温度");     // "Err: MAXTEMP"
-  LSTR MSG_ERR_MINTEMP                    = _UxGT("错误：最低温度");     // "Err: MINTEMP"
-  LSTR MSG_HALTED                         = _UxGT("打印停机");     // "PRINTER HALTED"
-  LSTR MSG_PLEASE_RESET                   = _UxGT("请重置");     // "Please reset"
-  LSTR MSG_HEATING                        = _UxGT("加热中 ...");     // "Heating..."
+  LSTR MSG_ERR_MAXTEMP                    = _UxGT("错误：最高温度"); // "Err: MAXTEMP"
+  LSTR MSG_ERR_MINTEMP                    = _UxGT("错误：最低温度"); // "Err: MINTEMP"
+  LSTR MSG_HALTED                         = _UxGT("打印停机"); // "PRINTER HALTED"
+  LSTR MSG_PLEASE_RESET                   = _UxGT("请重置"); // "Please reset"
+  LSTR MSG_HEATING                        = _UxGT("加热中 ..."); // "Heating..."
   LSTR MSG_COOLING                        = _UxGT("冷却中 ...");
-  LSTR MSG_BED_HEATING                    = _UxGT("加热热床中 ...");     // "Bed Heating..."
+  LSTR MSG_BED_HEATING                    = _UxGT("加热热床中 ..."); // "Bed Heating..."
   LSTR MSG_BED_COOLING                    = _UxGT("热床冷却中 ...");
   LSTR MSG_CHAMBER_HEATING                = _UxGT("机箱加热中 ...");
   LSTR MSG_CHAMBER_COOLING                = _UxGT("机箱冷却中 ...");
-  LSTR MSG_DELTA_CALIBRATE                = _UxGT("⊿校准");     // "Delta Calibration"
-  LSTR MSG_DELTA_CALIBRATE_X              = _UxGT("⊿校准X");     // "Calibrate X"
-  LSTR MSG_DELTA_CALIBRATE_Y              = _UxGT("⊿校准Y");     // "Calibrate Y"
-  LSTR MSG_DELTA_CALIBRATE_Z              = _UxGT("⊿校准Z");     // "Calibrate Z"
-  LSTR MSG_DELTA_CALIBRATE_CENTER         = _UxGT("⊿校准中心");     // "Calibrate Center"
-  LSTR MSG_DELTA_SETTINGS                 = _UxGT("⊿设置");     // "Delta Settings"
-  LSTR MSG_DELTA_AUTO_CALIBRATE           = _UxGT("⊿自动校准");     // "Auto Calibration"
-  LSTR MSG_DELTA_DIAG_ROD                 = _UxGT("⊿斜柱");     // "Diag Rod"
-  LSTR MSG_DELTA_HEIGHT                   = _UxGT("⊿高度");     // "Height"
-  LSTR MSG_DELTA_RADIUS                   = _UxGT("⊿半径");     // "Radius"
-  LSTR MSG_INFO_MENU                      = _UxGT("关于打印机");     // "About Printer"
-  LSTR MSG_INFO_PRINTER_MENU              = _UxGT("打印机信息");     // "Printer Info"
-  LSTR MSG_3POINT_LEVELING                = _UxGT("三点调平");     // "3-Point Leveling"
-  LSTR MSG_LINEAR_LEVELING                = _UxGT("线性调平");     // "Linear Leveling"
-  LSTR MSG_BILINEAR_LEVELING              = _UxGT("双线性调平");     // "Bilinear Leveling"
-  LSTR MSG_UBL_LEVELING                   = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
-  LSTR MSG_MESH_LEVELING                  = _UxGT("网格调平");     // "Mesh Leveling"
-  LSTR MSG_INFO_STATS_MENU                = _UxGT("打印机统计");     // "Printer Stats"
-  LSTR MSG_INFO_BOARD_MENU                = _UxGT("主板信息");     // "Board Info"
-  LSTR MSG_INFO_THERMISTOR_MENU           = _UxGT("温度计");     // "Thermistors"
-  LSTR MSG_INFO_EXTRUDERS                 = _UxGT("挤出机");     // "Extruders"
-  LSTR MSG_INFO_BAUDRATE                  = _UxGT("波特率");     // "Baud"
-  LSTR MSG_INFO_PROTOCOL                  = _UxGT("协议");     // "Protocol"
+  LSTR MSG_DELTA_CALIBRATE                = _UxGT("⊿校准"); // "Delta Calibration"
+  LSTR MSG_DELTA_CALIBRATE_X              = _UxGT("⊿校准X"); // "Calibrate X"
+  LSTR MSG_DELTA_CALIBRATE_Y              = _UxGT("⊿校准Y"); // "Calibrate Y"
+  LSTR MSG_DELTA_CALIBRATE_Z              = _UxGT("⊿校准Z"); // "Calibrate Z"
+  LSTR MSG_DELTA_CALIBRATE_CENTER         = _UxGT("⊿校准中心"); // "Calibrate Center"
+  LSTR MSG_DELTA_SETTINGS                 = _UxGT("⊿设置"); // "Delta Settings"
+  LSTR MSG_DELTA_AUTO_CALIBRATE           = _UxGT("⊿自动校准"); // "Auto Calibration"
+  LSTR MSG_DELTA_DIAG_ROD                 = _UxGT("⊿斜柱"); // "Diag Rod"
+  LSTR MSG_DELTA_HEIGHT                   = _UxGT("⊿高度"); // "Height"
+  LSTR MSG_DELTA_RADIUS                   = _UxGT("⊿半径"); // "Radius"
+  LSTR MSG_INFO_MENU                      = _UxGT("关于打印机"); // "About Printer"
+  LSTR MSG_INFO_PRINTER_MENU              = _UxGT("打印机信息"); // "Printer Info"
+  LSTR MSG_3POINT_LEVELING                = _UxGT("三点调平"); // "3-Point Leveling"
+  LSTR MSG_LINEAR_LEVELING                = _UxGT("线性调平"); // "Linear Leveling"
+  LSTR MSG_BILINEAR_LEVELING              = _UxGT("双线性调平"); // "Bilinear Leveling"
+  LSTR MSG_UBL_LEVELING                   = _UxGT("统一热床调平(UBL)"); // "Unified Bed Leveling"
+  LSTR MSG_MESH_LEVELING                  = _UxGT("网格调平"); // "Mesh Leveling"
+  LSTR MSG_INFO_STATS_MENU                = _UxGT("打印机统计"); // "Printer Stats"
+  LSTR MSG_INFO_BOARD_MENU                = _UxGT("主板信息"); // "Board Info"
+  LSTR MSG_INFO_THERMISTOR_MENU           = _UxGT("温度计"); // "Thermistors"
+  LSTR MSG_INFO_EXTRUDERS                 = _UxGT("挤出机"); // "Extruders"
+  LSTR MSG_INFO_BAUDRATE                  = _UxGT("波特率"); // "Baud"
+  LSTR MSG_INFO_PROTOCOL                  = _UxGT("协议"); // "Protocol"
   LSTR MSG_INFO_RUNAWAY_OFF               = _UxGT("监控温度失控:关");
   LSTR MSG_INFO_RUNAWAY_ON                = _UxGT("监控温度失控:开");
   LSTR MSG_HOTEND_IDLE_TIMEOUT            = _UxGT("热端空闲超时");
 
-  LSTR MSG_CASE_LIGHT                     = _UxGT("外壳灯");     // "Case light"
-  LSTR MSG_CASE_LIGHT_BRIGHTNESS          = _UxGT("灯亮度");     // "Light BRIGHTNESS"
+  LSTR MSG_CASE_LIGHT                     = _UxGT("外壳灯"); // "Case light"
+  LSTR MSG_CASE_LIGHT_BRIGHTNESS          = _UxGT("灯亮度"); // "Light BRIGHTNESS"
 
-  LSTR MSG_KILL_EXPECTED_PRINTER          = _UxGT("打印机不正确");     // "The printer is incorrect"
+  LSTR MSG_KILL_EXPECTED_PRINTER          = _UxGT("打印机不正确"); // "The printer is incorrect"
 
   #if LCD_WIDTH >= 20 || HAS_DWIN_E3V2
-    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印计数");     // "Print Count"
-    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成了");     // "Completed"
-    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总打印时间");     // "Total print time"
-    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长工作时间");     // "Longest job time"
-    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("总计挤出");     // "Extruded total"
+    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印计数"); // "Print Count"
+    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成了"); // "Completed"
+    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总打印时间"); // "Total print time"
+    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长工作时间"); // "Longest job time"
+    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("总计挤出"); // "Extruded total"
   #else
-    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印数");     // "Prints"
-    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成");     // "Completed"
-    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总共");     // "Total"
-    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长");     // "Longest"
-    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("已挤出");     // "Extruded"
+    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印数"); // "Prints"
+    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成"); // "Completed"
+    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总共"); // "Total"
+    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长"); // "Longest"
+    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("已挤出"); // "Extruded"
   #endif
 
-  LSTR MSG_INFO_MIN_TEMP                  = _UxGT("最低温度");     // "Min Temp"
-  LSTR MSG_INFO_MAX_TEMP                  = _UxGT("最高温度");     // "Max Temp"
-  LSTR MSG_INFO_PSU                       = _UxGT("电源供应");     // "Power Supply"
-  LSTR MSG_DRIVE_STRENGTH                 = _UxGT("驱动力度");     // "Drive Strength"
-  LSTR MSG_DAC_PERCENT_N                  = _UxGT("@ 驱动 %");     // "E Driver %"
+  LSTR MSG_INFO_MIN_TEMP                  = _UxGT("最低温度"); // "Min Temp"
+  LSTR MSG_INFO_MAX_TEMP                  = _UxGT("最高温度"); // "Max Temp"
+  LSTR MSG_INFO_PSU                       = _UxGT("电源供应"); // "Power Supply"
+  LSTR MSG_DRIVE_STRENGTH                 = _UxGT("驱动力度"); // "Drive Strength"
+  LSTR MSG_DAC_PERCENT_N                  = _UxGT("@ 驱动 %"); // "E Driver %"
   LSTR MSG_ERROR_TMC                      = _UxGT("TMC 连接错误");
-  LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("保存驱动设置");     // "DAC EEPROM Write"
+  LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("保存驱动设置"); // "DAC EEPROM Write"
   LSTR MSG_FILAMENT_CHANGE_HEADER         = _UxGT("更换料");
-  LSTR MSG_FILAMENT_CHANGE_HEADER_PAUSE   = _UxGT("打印已暂停");     // "PRINT PAUSED"
-  LSTR MSG_FILAMENT_CHANGE_HEADER_LOAD    = _UxGT("装载丝料");     // "LOAD FILAMENT"
-  LSTR MSG_FILAMENT_CHANGE_HEADER_UNLOAD  = _UxGT("卸载丝料");     // "UNLOAD FILAMENT"
-  LSTR MSG_FILAMENT_CHANGE_OPTION_HEADER  = _UxGT("恢复选项:");     // "RESUME OPTIONS:"
-  LSTR MSG_FILAMENT_CHANGE_OPTION_PURGE   = _UxGT("清除更多");     // "Purge more"
-  LSTR MSG_FILAMENT_CHANGE_OPTION_RESUME  = _UxGT("恢复打印");     // "Resume print"
-  LSTR MSG_FILAMENT_CHANGE_NOZZLE         = _UxGT("  喷嘴: ");     // "  Nozzle: "
+  LSTR MSG_FILAMENT_CHANGE_HEADER_PAUSE   = _UxGT("打印已暂停"); // "PRINT PAUSED"
+  LSTR MSG_FILAMENT_CHANGE_HEADER_LOAD    = _UxGT("装载丝料"); // "LOAD FILAMENT"
+  LSTR MSG_FILAMENT_CHANGE_HEADER_UNLOAD  = _UxGT("卸载丝料"); // "UNLOAD FILAMENT"
+  LSTR MSG_FILAMENT_CHANGE_OPTION_HEADER  = _UxGT("恢复选项:"); // "RESUME OPTIONS:"
+  LSTR MSG_FILAMENT_CHANGE_OPTION_PURGE   = _UxGT("清除更多"); // "Purge more"
+  LSTR MSG_FILAMENT_CHANGE_OPTION_RESUME  = _UxGT("恢复打印"); // "Resume print"
+  LSTR MSG_FILAMENT_CHANGE_NOZZLE         = _UxGT("  喷嘴: "); // "  Nozzle: "
   LSTR MSG_RUNOUT_SENSOR                  = _UxGT("断料传感器");
   LSTR MSG_RUNOUT_DISTANCE_MM             = _UxGT("断料距离mm");
-  LSTR MSG_KILL_HOMING_FAILED             = _UxGT("归原位失败");     // "Homing failed"
-  LSTR MSG_LCD_PROBING_FAILED             = _UxGT("探针探测失败");     // "Probing failed"
+  LSTR MSG_KILL_HOMING_FAILED             = _UxGT("归原位失败"); // "Homing failed"
+  LSTR MSG_LCD_PROBING_FAILED             = _UxGT("探针探测失败"); // "Probing failed"
 
   LSTR MSG_MMU2_CHOOSE_FILAMENT_HEADER    = _UxGT("选择料");
   LSTR MSG_MMU2_MENU                      = _UxGT("MMU");
@@ -566,27 +566,27 @@ namespace Language_zh_CN {
   #if LCD_HEIGHT >= 4
     LSTR MSG_ADVANCED_PAUSE_WAITING       = _UxGT(MSG_2_LINE("按下按钮", "恢复打印"));
     LSTR MSG_PAUSE_PRINT_PARKING          = _UxGT(MSG_1_LINE("停靠中..."));
-    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_3_LINE("等待开始", "丝料", "变更"));     // "Wait for start of the filament change"
+    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_3_LINE("等待开始", "丝料", "变更")); // "Wait for start of the filament change"
     LSTR MSG_FILAMENT_CHANGE_INSERT       = _UxGT(MSG_3_LINE("插入料", "并按下", "以继续"));
-    LSTR MSG_FILAMENT_CHANGE_HEAT         = _UxGT(MSG_2_LINE("按下按钮来", "加热喷嘴."));     // "Press button to heat nozzle."
-    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_2_LINE("加热喷嘴", "请等待 ..."));     // "Heating nozzle Please wait..."
-    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_2_LINE("等待", "卸下丝料"));     // "Wait for filament unload"
-    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_2_LINE("等待", "进料"));     // "Wait for filament load"
-    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_2_LINE("等待", "丝料清除"));     // "Wait for filament purge"
+    LSTR MSG_FILAMENT_CHANGE_HEAT         = _UxGT(MSG_2_LINE("按下按钮来", "加热喷嘴.")); // "Press button to heat nozzle."
+    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_2_LINE("加热喷嘴", "请等待 ...")); // "Heating nozzle Please wait..."
+    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_2_LINE("等待", "卸下丝料")); // "Wait for filament unload"
+    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_2_LINE("等待", "进料")); // "Wait for filament load"
+    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_2_LINE("等待", "丝料清除")); // "Wait for filament purge"
     LSTR MSG_FILAMENT_CHANGE_CONT_PURGE   = _UxGT(MSG_2_LINE("按下已完成", "料的清洗"));
-    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_2_LINE("等待打印", "恢复"));     // "Wait for print to resume"
+    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_2_LINE("等待打印", "恢复")); // "Wait for print to resume"
   #else
     LSTR MSG_ADVANCED_PAUSE_WAITING       = _UxGT(MSG_1_LINE("按下继续"));
     LSTR MSG_PAUSE_PRINT_PARKING          = _UxGT(MSG_1_LINE("停靠中..."));
-    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_1_LINE("请等待 ..."));     // "Please wait..."
-    LSTR MSG_FILAMENT_CHANGE_INSERT       = _UxGT(MSG_1_LINE("插入并单击"));     // "Insert and Click"
+    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_1_LINE("请等待 ...")); // "Please wait..."
+    LSTR MSG_FILAMENT_CHANGE_INSERT       = _UxGT(MSG_1_LINE("插入并单击")); // "Insert and Click"
     LSTR MSG_FILAMENT_CHANGE_HEAT         = _UxGT(MSG_1_LINE("按下加热"));
-    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_1_LINE("加热中 ..."));     // "Heating..."
-    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_1_LINE("退出中 ..."));     // "Ejecting..."
-    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_1_LINE("装载中 ..."));     // "Loading..."
-    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_1_LINE("清除中 ..."));     // "Purging..."
+    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_1_LINE("加热中 ...")); // "Heating..."
+    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_1_LINE("退出中 ...")); // "Ejecting..."
+    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_1_LINE("装载中 ...")); // "Loading..."
+    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_1_LINE("清除中 ...")); // "Purging..."
     LSTR MSG_FILAMENT_CHANGE_CONT_PURGE   = _UxGT(MSG_1_LINE("按下完成"));
-    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_1_LINE("恢复中 ..."));     // "Resuming..."
+    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_1_LINE("恢复中 ...")); // "Resuming..."
   #endif
   LSTR MSG_TMC_DRIVERS                    = _UxGT("TMC驱动器");
   LSTR MSG_TMC_CURRENT                    = _UxGT("驱动电流");
@@ -606,7 +606,7 @@ namespace Language_zh_CN {
   LSTR MSG_REHEAT                         = _UxGT("重新加热");
   LSTR MSG_REHEATING                      = _UxGT("重新加热中...");
 
-  LSTR MSG_SHORT_DAY                      = _UxGT("天");     // "d" // One character only
-  LSTR MSG_SHORT_HOUR                     = _UxGT("时");     // "h" // One character only
-  LSTR MSG_SHORT_MINUTE                   = _UxGT("分");     // "m" // One character only
+  LSTR MSG_SHORT_DAY                      = _UxGT("天"); // "d" // One character only
+  LSTR MSG_SHORT_HOUR                     = _UxGT("时"); // "h" // One character only
+  LSTR MSG_SHORT_MINUTE                   = _UxGT("分"); // "m" // One character only
 }

commit 5bc84bf08cb47741537fe705dbfe19eee5396d4e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 19 23:30:48 2023 -0500

    🚸 Improve EEPROM validation (#25860)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 27f2a597c6..7acd0d8e8f 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -317,9 +317,9 @@ namespace Language_zh_CN {
   LSTR MSG_LOAD_EEPROM                    = _UxGT("装载设置");     // "Load memory"
   LSTR MSG_RESTORE_DEFAULTS               = _UxGT("恢复安全值");     // "Restore Defaults"
   LSTR MSG_INIT_EEPROM                    = _UxGT("初始化设置");     // "Initialize EEPROM"
-  LSTR MSG_ERR_EEPROM_CRC                 = _UxGT("EEPROM CRC 错误");
-  LSTR MSG_ERR_EEPROM_INDEX               = _UxGT("EEPROM Index 错误");
-  LSTR MSG_ERR_EEPROM_VERSION             = _UxGT("EEPROM Version 错误");
+  LSTR MSG_ERR_EEPROM_CRC                 = _UxGT("EEPROM 校验和 错误");
+  LSTR MSG_ERR_EEPROM_SIZE                = _UxGT("EEPROM 尺寸 错误");
+  LSTR MSG_ERR_EEPROM_VERSION             = _UxGT("EEPROM 版本 错误");
   LSTR MSG_SETTINGS_STORED                = _UxGT("设置已保存");
   LSTR MSG_MEDIA_UPDATE                   = _UxGT("存储器更新");
   LSTR MSG_RESET_PRINTER                  = _UxGT("复位打印机");

commit 2954bf26979e43c6b36ca2739af4e887b651f3f8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 24 00:24:40 2023 -0500

    🌐 Replace '=' with '{' for substitution

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 3e8ab9870f..27f2a597c6 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -198,27 +198,27 @@ namespace Language_zh_CN {
   LSTR MSG_UBL_6_FINE_TUNE_ALL            = _UxGT("6. 细调所有的");
   LSTR MSG_UBL_7_SAVE_MESH                = _UxGT("7. 保存热床网格");
 
-  LSTR MSG_LED_CONTROL                    = _UxGT("LED控制");     // "LED Control")
-  LSTR MSG_LEDS                           = _UxGT("灯");     // "Lights")
-  LSTR MSG_LED_PRESETS                    = _UxGT("灯预置");     // "Light Presets")
-  LSTR MSG_SET_LEDS_RED                   = _UxGT("红");     // "Red")
-  LSTR MSG_SET_LEDS_ORANGE                = _UxGT("橙");     // "Orange")
-  LSTR MSG_SET_LEDS_YELLOW                = _UxGT("黄");     // "Yellow")
-  LSTR MSG_SET_LEDS_GREEN                 = _UxGT("绿");     // "Green")
-  LSTR MSG_SET_LEDS_BLUE                  = _UxGT("蓝");     // "Blue")
-  LSTR MSG_SET_LEDS_INDIGO                = _UxGT("青");     // "Indigo")
-  LSTR MSG_SET_LEDS_VIOLET                = _UxGT("紫");     // "Violet")
-  LSTR MSG_SET_LEDS_WHITE                 = _UxGT("白");     // "White")
-  LSTR MSG_SET_LEDS_DEFAULT               = _UxGT("缺省");     // "Default")
-  LSTR MSG_CUSTOM_LEDS                    = _UxGT("定制灯");     // "Custom Lights")
-  LSTR MSG_INTENSITY_R                    = _UxGT("红饱和度");     // "Red Intensity")
-  LSTR MSG_INTENSITY_G                    = _UxGT("绿饱和度");     // "Green Intensity")
-  LSTR MSG_INTENSITY_B                    = _UxGT("蓝饱和度");     // "Blue Intensity")
-  LSTR MSG_INTENSITY_W                    = _UxGT("白饱和度");     // "White Intensity")
-  LSTR MSG_LED_BRIGHTNESS                 = _UxGT("亮度");     // "Brightness")
+  LSTR MSG_LED_CONTROL                    = _UxGT("LED控制");     // "LED Control"
+  LSTR MSG_LEDS                           = _UxGT("灯");     // "Lights"
+  LSTR MSG_LED_PRESETS                    = _UxGT("灯预置");     // "Light Presets"
+  LSTR MSG_SET_LEDS_RED                   = _UxGT("红");     // "Red"
+  LSTR MSG_SET_LEDS_ORANGE                = _UxGT("橙");     // "Orange"
+  LSTR MSG_SET_LEDS_YELLOW                = _UxGT("黄");     // "Yellow"
+  LSTR MSG_SET_LEDS_GREEN                 = _UxGT("绿");     // "Green"
+  LSTR MSG_SET_LEDS_BLUE                  = _UxGT("蓝");     // "Blue"
+  LSTR MSG_SET_LEDS_INDIGO                = _UxGT("青");     // "Indigo"
+  LSTR MSG_SET_LEDS_VIOLET                = _UxGT("紫");     // "Violet"
+  LSTR MSG_SET_LEDS_WHITE                 = _UxGT("白");     // "White"
+  LSTR MSG_SET_LEDS_DEFAULT               = _UxGT("缺省");     // "Default"
+  LSTR MSG_CUSTOM_LEDS                    = _UxGT("定制灯");     // "Custom Lights"
+  LSTR MSG_INTENSITY_R                    = _UxGT("红饱和度");     // "Red Intensity"
+  LSTR MSG_INTENSITY_G                    = _UxGT("绿饱和度");     // "Green Intensity"
+  LSTR MSG_INTENSITY_B                    = _UxGT("蓝饱和度");     // "Blue Intensity"
+  LSTR MSG_INTENSITY_W                    = _UxGT("白饱和度");     // "White Intensity"
+  LSTR MSG_LED_BRIGHTNESS                 = _UxGT("亮度");     // "Brightness"
 
-  LSTR MSG_MOVING                         = _UxGT("移动...");     // "Moving...")
-  LSTR MSG_FREE_XY                        = _UxGT("释放 XY");     // "Free XY")
+  LSTR MSG_MOVING                         = _UxGT("移动...");     // "Moving..."
+  LSTR MSG_FREE_XY                        = _UxGT("释放 XY");     // "Free XY"
   LSTR MSG_MOVE_X                         = _UxGT("移动X");     // "Move X"
   LSTR MSG_MOVE_Y                         = _UxGT("移动Y");     // "Move Y"
   LSTR MSG_MOVE_Z                         = _UxGT("移动Z");     // "Move Z"
@@ -348,7 +348,7 @@ namespace Language_zh_CN {
   LSTR MSG_STOP_PRINT                     = _UxGT("停止打印");     // "Stop print"
   LSTR MSG_PRINTING_OBJECT                = _UxGT("打印物体");
   LSTR MSG_CANCEL_OBJECT                  = _UxGT("取消物体");
-  LSTR MSG_CANCEL_OBJECT_N                = _UxGT("取消物体 =");
+  LSTR MSG_CANCEL_OBJECT_N                = _UxGT("取消物体 {");
   LSTR MSG_OUTAGE_RECOVERY                = _UxGT("中断恢复");
   LSTR MSG_MEDIA_MENU                     = _UxGT("从存储卡上打印");     // "Print from SD"
   LSTR MSG_NO_MEDIA                       = _UxGT("无存储卡");     // "No SD card"
@@ -532,7 +532,7 @@ namespace Language_zh_CN {
   LSTR MSG_MMU2_EJECT_RECOVER             = _UxGT("移出, 按下");
 
   LSTR MSG_MIX                            = _UxGT("混合");
-  LSTR MSG_MIX_COMPONENT_N                = _UxGT("器件  =");
+  LSTR MSG_MIX_COMPONENT_N                = _UxGT("器件  {");
   LSTR MSG_MIXER                          = _UxGT("混合器");
   LSTR MSG_GRADIENT                       = _UxGT("梯度");
   LSTR MSG_FULL_GRADIENT                  = _UxGT("全梯度");

commit 92721d1bf7d3516ffa591bf7fa9b0b03099f5156
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 14 17:45:45 2023 -0500

    🚸 "Main" => "Main Menu"

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 0fd72b410c..3e8ab9870f 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -48,7 +48,7 @@ namespace Language_zh_CN {
   LSTR MSG_KILL_SUBCALL_OVERFLOW          = _UxGT("子响应溢出");
   LSTR MSG_LCD_ENDSTOPS                   = _UxGT("挡块");     // "Endstops" // Max length 8 characters
   LSTR MSG_LCD_SOFT_ENDSTOPS              = _UxGT("软挡块");
-  LSTR MSG_MAIN                           = _UxGT("主菜单");     // "Main"
+  LSTR MSG_MAIN_MENU                      = _UxGT("主菜单");     // "Main"
   LSTR MSG_ADVANCED_SETTINGS              = _UxGT("高级设置");
   LSTR MSG_CONFIGURATION                  = _UxGT("配置");
   LSTR MSG_RUN_AUTO_FILES                 = _UxGT("自动开始");     // "Autostart"

commit c63577fd1dacaa232cfcd44a1e9ea1426cd8c0bc
Author: Abdullah YILMAZ <h.abdullahyilmaz@hotmail.com>
Date:   Mon Mar 6 01:29:43 2023 +0300

    🌐 Update Turkish language (#25447)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 4dccbc4f09..0fd72b410c 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -438,9 +438,6 @@ namespace Language_zh_CN {
   LSTR MSG_ERR_MINTEMP                    = _UxGT("错误：最低温度");     // "Err: MINTEMP"
   LSTR MSG_HALTED                         = _UxGT("打印停机");     // "PRINTER HALTED"
   LSTR MSG_PLEASE_RESET                   = _UxGT("请重置");     // "Please reset"
-  LSTR MSG_SHORT_DAY                      = _UxGT("天");     // "d" // One character only
-  LSTR MSG_SHORT_HOUR                     = _UxGT("时");     // "h" // One character only
-  LSTR MSG_SHORT_MINUTE                   = _UxGT("分");     // "m" // One character only
   LSTR MSG_HEATING                        = _UxGT("加热中 ...");     // "Heating..."
   LSTR MSG_COOLING                        = _UxGT("冷却中 ...");
   LSTR MSG_BED_HEATING                    = _UxGT("加热热床中 ...");     // "Bed Heating..."
@@ -608,12 +605,8 @@ namespace Language_zh_CN {
   LSTR MSG_HEATER_TIMEOUT                 = _UxGT("加热器超时");
   LSTR MSG_REHEAT                         = _UxGT("重新加热");
   LSTR MSG_REHEATING                      = _UxGT("重新加热中...");
-}
 
-#if FAN_COUNT == 1
-  #define MSG_FIRST_FAN_SPEED       MSG_FAN_SPEED
-  #define MSG_EXTRA_FIRST_FAN_SPEED MSG_EXTRA_FAN_SPEED
-#else
-  #define MSG_FIRST_FAN_SPEED       MSG_FAN_SPEED_N
-  #define MSG_EXTRA_FIRST_FAN_SPEED MSG_EXTRA_FAN_SPEED_N
-#endif
+  LSTR MSG_SHORT_DAY                      = _UxGT("天");     // "d" // One character only
+  LSTR MSG_SHORT_HOUR                     = _UxGT("时");     // "h" // One character only
+  LSTR MSG_SHORT_MINUTE                   = _UxGT("分");     // "m" // One character only
+}

commit 96bc084f3d791bc93265f217181986863e8e5fc7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 18 02:15:16 2023 -0600

    🎨 Misc. LCD cleanup (#25400)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 6e2864ce6f..4dccbc4f09 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -232,7 +232,7 @@ namespace Language_zh_CN {
   LSTR MSG_MOVE_10MM                      = _UxGT("移动 10 mm");     // "Move 10mm"
   LSTR MSG_MOVE_100MM                     = _UxGT("移动 100 mm");     // "Move 100mm"
   LSTR MSG_SPEED                          = _UxGT("速率");     // "Speed"
-  LSTR MSG_BED_Z                          = _UxGT("热床Z");     // "Bed Z"
+  LSTR MSG_MESH_Z_OFFSET                  = _UxGT("热床Z");     // "Bed Z"
   LSTR MSG_NOZZLE                         = _UxGT("喷嘴");     // "Nozzle" 噴嘴
   LSTR MSG_NOZZLE_N                       = _UxGT("喷嘴 ~");     // "Nozzle" 噴嘴
   LSTR MSG_NOZZLE_PARKED                  = _UxGT("喷嘴已停靠");

commit 7e72981b8cbaa7a6276f6833527e97cb10e060e7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 21 22:57:56 2023 -0600

    🚸 Fix homing_needed_error language

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 79c59be44b..6e2864ce6f 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -419,7 +419,7 @@ namespace Language_zh_CN {
   LSTR MSG_MANUAL_DEPLOY_TOUCHMI          = _UxGT("部署TouchMI");
   LSTR MSG_MANUAL_DEPLOY                  = _UxGT("部署Z探针");
   LSTR MSG_MANUAL_STOW                    = _UxGT("收好Z探针");
-  LSTR MSG_HOME_FIRST                     = _UxGT("归位 %s%s%s 先");     // "Home ... first"
+  LSTR MSG_HOME_FIRST                     = _UxGT("归位 %s 先");     // "Home ... first"
   LSTR MSG_ZPROBE_OFFSETS                 = _UxGT("探针偏移量");
   LSTR MSG_ZPROBE_XOFFSET                 = _UxGT("探针X偏移");
   LSTR MSG_ZPROBE_YOFFSET                 = _UxGT("探针Y偏移");

commit 6fe387b6f0722033e6cca96fd5e8215ea7b162eb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 15 06:48:17 2023 -0600

    🧑‍💻 Adjust PID / MPC / ProUI
    
    Changes to simplify #25232 WIP

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 26515b6094..79c59be44b 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -261,7 +261,7 @@ namespace Language_zh_CN {
   LSTR MSG_PID_AUTOTUNE                   = _UxGT("自动PID");
   LSTR MSG_PID_AUTOTUNE_E                 = _UxGT("自动PID *");
   LSTR MSG_PID_AUTOTUNE_DONE              = _UxGT("PID调整完成");
-  LSTR MSG_PID_BAD_EXTRUDER_NUM           = _UxGT("自动调失败! 坏的挤出机");
+  LSTR MSG_PID_BAD_HEATER_ID              = _UxGT("自动调失败! 坏的挤出机");
   LSTR MSG_PID_TEMP_TOO_HIGH              = _UxGT("自动调失败! 温度太高");
   LSTR MSG_PID_TIMEOUT                    = _UxGT("自动调失败! 超时");
   LSTR MSG_SELECT_E                       = _UxGT("选择 *");

commit d94defc545ad477c82a8bc77e949aa91cdd3e0f2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 15 06:48:17 2023 -0600

    🎨 Language / menu cleanup

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 4c5a94edcd..26515b6094 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -264,7 +264,6 @@ namespace Language_zh_CN {
   LSTR MSG_PID_BAD_EXTRUDER_NUM           = _UxGT("自动调失败! 坏的挤出机");
   LSTR MSG_PID_TEMP_TOO_HIGH              = _UxGT("自动调失败! 温度太高");
   LSTR MSG_PID_TIMEOUT                    = _UxGT("自动调失败! 超时");
-  LSTR MSG_SELECT                         = _UxGT("选择");     // "Select"
   LSTR MSG_SELECT_E                       = _UxGT("选择 *");
   LSTR MSG_ACC                            = _UxGT("加速度");     // "Accel" acceleration
   LSTR MSG_JERK                           = _UxGT("抖动速率");     // "Jerk"

commit ed2071aabdebf0c1d9b82b6d8575b8fefae763c4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jul 18 19:52:47 2022 -0500

    🩹 Fix manual move titles (#24518)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index fc61b020ff..4c5a94edcd 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -222,6 +222,7 @@ namespace Language_zh_CN {
   LSTR MSG_MOVE_X                         = _UxGT("移动X");     // "Move X"
   LSTR MSG_MOVE_Y                         = _UxGT("移动Y");     // "Move Y"
   LSTR MSG_MOVE_Z                         = _UxGT("移动Z");     // "Move Z"
+  LSTR MSG_MOVE_N                         = _UxGT("移动@");     // "Move @"
   LSTR MSG_MOVE_E                         = _UxGT("挤出机");     // "Extruder"
   LSTR MSG_MOVE_EN                        = _UxGT("挤出机 *");     // "Extruder"
   LSTR MSG_HOTEND_TOO_COLD                = _UxGT("热端太冷");

commit 546b3066c3b45f0511e3a6c068d85f30a41e9d15
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jun 24 22:07:06 2022 -0500

    🌐 Drop unused delta strings

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index a4816ff899..fc61b020ff 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -454,8 +454,6 @@ namespace Language_zh_CN {
   LSTR MSG_DELTA_CALIBRATE_CENTER         = _UxGT("⊿校准中心");     // "Calibrate Center"
   LSTR MSG_DELTA_SETTINGS                 = _UxGT("⊿设置");     // "Delta Settings"
   LSTR MSG_DELTA_AUTO_CALIBRATE           = _UxGT("⊿自动校准");     // "Auto Calibration"
-  LSTR MSG_DELTA_HEIGHT_CALIBRATE         = _UxGT("设置⊿高度");     // "Set Delta Height"
-  LSTR MSG_DELTA_Z_OFFSET_CALIBRATE       = _UxGT("探针Z偏移量");
   LSTR MSG_DELTA_DIAG_ROD                 = _UxGT("⊿斜柱");     // "Diag Rod"
   LSTR MSG_DELTA_HEIGHT                   = _UxGT("⊿高度");     // "Height"
   LSTR MSG_DELTA_RADIUS                   = _UxGT("⊿半径");     // "Radius"

commit 8aca38351cd6d33a1202bf9a13890dc8e5eadd49
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 3 22:56:38 2022 -0500

    🧑‍💻 Extend LCD string substitution (#24278)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index f2d348b396..a4816ff899 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -225,7 +225,7 @@ namespace Language_zh_CN {
   LSTR MSG_MOVE_E                         = _UxGT("挤出机");     // "Extruder"
   LSTR MSG_MOVE_EN                        = _UxGT("挤出机 *");     // "Extruder"
   LSTR MSG_HOTEND_TOO_COLD                = _UxGT("热端太冷");
-  LSTR MSG_MOVE_N_MM                      = _UxGT("移动 %s mm");     // "Move 0.025mm"
+  LSTR MSG_MOVE_N_MM                      = _UxGT("移动 $ mm");      // "Move 0.025mm"
   LSTR MSG_MOVE_01MM                      = _UxGT("移动 0.1 mm");     // "Move 0.1mm"
   LSTR MSG_MOVE_1MM                       = _UxGT("移动 1 mm");     // "Move 1mm"
   LSTR MSG_MOVE_10MM                      = _UxGT("移动 10 mm");     // "Move 10mm"
@@ -270,19 +270,15 @@ namespace Language_zh_CN {
   LSTR MSG_VA_JERK                        = _UxGT("轴抖动速率") STR_A;     // "Va-jerk"
   LSTR MSG_VB_JERK                        = _UxGT("轴抖动速率") STR_B;     // "Vb-jerk"
   LSTR MSG_VC_JERK                        = _UxGT("轴抖动速率") STR_C;     // "Vc-jerk"
-  LSTR MSG_VI_JERK                        = _UxGT("轴抖动速率") STR_I;     // "Vi-jerk"
-  LSTR MSG_VJ_JERK                        = _UxGT("轴抖动速率") STR_J;     // "Vj-jerk"
-  LSTR MSG_VK_JERK                        = _UxGT("轴抖动速率") STR_K;     // "Vk-jerk"
+  LSTR MSG_VN_JERK                        = _UxGT("轴抖动速率@");          // "V@-jerk"
   LSTR MSG_VE_JERK                        = _UxGT("挤出机抖动速率");     // "Ve-jerk"
   LSTR MSG_JUNCTION_DEVIATION             = _UxGT("接点差");
-  LSTR MSG_VELOCITY                       = _UxGT("速度");     // "Velocity"
+  LSTR MSG_MAX_SPEED                      = _UxGT("速度");     // "Velocity"
   LSTR MSG_VMAX_A                         = _UxGT("最大进料速率") STR_A;     // "Vmax " max_feedrate_mm_s
   LSTR MSG_VMAX_B                         = _UxGT("最大进料速率") STR_B;
   LSTR MSG_VMAX_C                         = _UxGT("最大进料速率") STR_C;
-  LSTR MSG_VMAX_I                         = _UxGT("最大进料速率") STR_I;
-  LSTR MSG_VMAX_J                         = _UxGT("最大进料速率") STR_J;
-  LSTR MSG_VMAX_K                         = _UxGT("最大进料速率") STR_K;
-  LSTR MSG_VMAX_E                         = _UxGT("最大进料速率") STR_E;
+  LSTR MSG_VMAX_N                         = _UxGT("最大进料速率@");
+  LSTR MSG_VMAX_E                         = _UxGT("最大进料速率E");
   LSTR MSG_VMAX_EN                        = _UxGT("最大进料速率 *");
   LSTR MSG_VMIN                           = _UxGT("最小进料速率");     // "Vmin"  min_feedrate_mm_s
   LSTR MSG_VTRAV_MIN                      = _UxGT("最小移动速率");     // "VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
@@ -290,10 +286,8 @@ namespace Language_zh_CN {
   LSTR MSG_AMAX_A                         = _UxGT("最大打印加速度") STR_A;     // "Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
   LSTR MSG_AMAX_B                         = _UxGT("最大打印加速度") STR_B;
   LSTR MSG_AMAX_C                         = _UxGT("最大打印加速度") STR_C;
-  LSTR MSG_AMAX_I                         = _UxGT("最大打印加速度") STR_I;
-  LSTR MSG_AMAX_J                         = _UxGT("最大打印加速度") STR_J;
-  LSTR MSG_AMAX_K                         = _UxGT("最大打印加速度") STR_K;
-  LSTR MSG_AMAX_E                         = _UxGT("最大打印加速度") STR_E;
+  LSTR MSG_AMAX_N                         = _UxGT("最大打印加速度@");
+  LSTR MSG_AMAX_E                         = _UxGT("最大打印加速度E");
   LSTR MSG_AMAX_EN                        = _UxGT("最大打印加速度 *");
   LSTR MSG_A_RETRACT                      = _UxGT("收进加速度");     // "A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
   LSTR MSG_A_TRAVEL                       = _UxGT("非打印移动加速度");     // "A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
@@ -303,9 +297,7 @@ namespace Language_zh_CN {
   LSTR MSG_A_STEPS                        = STR_A _UxGT(" 步数/mm");     // "Asteps/mm"
   LSTR MSG_B_STEPS                        = STR_B _UxGT(" 步数/mm");
   LSTR MSG_C_STEPS                        = STR_C _UxGT(" 步数/mm");
-  LSTR MSG_I_STEPS                        = STR_I _UxGT(" 步数/mm");
-  LSTR MSG_J_STEPS                        = STR_J _UxGT(" 步数/mm");
-  LSTR MSG_K_STEPS                        = STR_K _UxGT(" 步数/mm");
+  LSTR MSG_N_STEPS                        = _UxGT("@ 步数/mm");
   LSTR MSG_E_STEPS                        = _UxGT("E 步数/mm");     // "Esteps/mm"
   LSTR MSG_EN_STEPS                       = _UxGT("* 步数/mm");
   LSTR MSG_TEMPERATURE                    = _UxGT("温度");     // "Temperature"
@@ -507,13 +499,7 @@ namespace Language_zh_CN {
   LSTR MSG_INFO_MAX_TEMP                  = _UxGT("最高温度");     // "Max Temp"
   LSTR MSG_INFO_PSU                       = _UxGT("电源供应");     // "Power Supply"
   LSTR MSG_DRIVE_STRENGTH                 = _UxGT("驱动力度");     // "Drive Strength"
-  LSTR MSG_DAC_PERCENT_A                  = STR_A _UxGT(" 驱动 %");     // "X Driver %"
-  LSTR MSG_DAC_PERCENT_B                  = STR_B _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_C                  = STR_C _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_I                  = STR_I _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_J                  = STR_J _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_K                  = STR_K _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_E                  = _UxGT("E 驱动 %");     // "E Driver %"
+  LSTR MSG_DAC_PERCENT_N                  = _UxGT("@ 驱动 %");     // "E Driver %"
   LSTR MSG_ERROR_TMC                      = _UxGT("TMC 连接错误");
   LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("保存驱动设置");     // "DAC EEPROM Write"
   LSTR MSG_FILAMENT_CHANGE_HEADER         = _UxGT("更换料");

commit 1e749e4f48f528179213e736c99371843a90b4fb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu May 12 20:13:59 2022 -0500

    🧑‍💻 Misc. LCD cleanup

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index e947cee661..f2d348b396 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -260,8 +260,8 @@ namespace Language_zh_CN {
   LSTR MSG_PID_AUTOTUNE                   = _UxGT("自动PID");
   LSTR MSG_PID_AUTOTUNE_E                 = _UxGT("自动PID *");
   LSTR MSG_PID_AUTOTUNE_DONE              = _UxGT("PID调整完成");
-  LSTR MSG_PID_BAD_EXTRUDER_NUM           = _UxGT("自动调失败. 坏的挤出机");
-  LSTR MSG_PID_TEMP_TOO_HIGH              = _UxGT("自动调失败. 温度太高");
+  LSTR MSG_PID_BAD_EXTRUDER_NUM           = _UxGT("自动调失败! 坏的挤出机");
+  LSTR MSG_PID_TEMP_TOO_HIGH              = _UxGT("自动调失败! 温度太高");
   LSTR MSG_PID_TIMEOUT                    = _UxGT("自动调失败! 超时");
   LSTR MSG_SELECT                         = _UxGT("选择");     // "Select"
   LSTR MSG_SELECT_E                       = _UxGT("选择 *");

commit 23a26e4033763b4c7b8763fd420211423e558d08
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 4 17:03:25 2022 -0500

    🌐 Clean up languages

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index ce5dcefaa4..e947cee661 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -68,7 +68,6 @@ namespace Language_zh_CN {
   LSTR MSG_Z_FADE_HEIGHT                  = _UxGT("淡出高度");     // "Fade Height"
   LSTR MSG_SET_HOME_OFFSETS               = _UxGT("设置原点偏移");     // "Set home offsets"
   LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("偏移已启用");     // "Offsets applied"
-  LSTR MSG_SET_ORIGIN                     = _UxGT("设置原点");     // "Set origin"
   #if HAS_PREHEAT
     LSTR MSG_PREHEAT_1                    = _UxGT("预热 ") PREHEAT_1_LABEL;     // "Preheat PREHEAT_2_LABEL"
     LSTR MSG_PREHEAT_1_H                  = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     // "Preheat PREHEAT_2_LABEL"

commit c53af0df0b7bb2059e101c1e386cd4f4bfb4c724
Author: LPRtypeCN <1297207734@qq.com>
Date:   Sun Apr 10 19:19:12 2022 +0800

    🌐 Update Chinese language (#23865)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 7f0ca874d6..ce5dcefaa4 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -55,6 +55,7 @@ namespace Language_zh_CN {
   LSTR MSG_DISABLE_STEPPERS               = _UxGT("关闭步进电机");     // "Disable steppers"
   LSTR MSG_DEBUG_MENU                     = _UxGT("调试菜单");     // "Debug Menu"
   LSTR MSG_PROGRESS_BAR_TEST              = _UxGT("进度条测试");     // "Progress Bar Test"
+  LSTR MSG_HOMING                         = _UxGT("回原点");
   LSTR MSG_AUTO_HOME                      = _UxGT("自动回原点");     // "Auto home"
   LSTR MSG_AUTO_HOME_X                    = _UxGT("回X原位");     // "Home X"
   LSTR MSG_AUTO_HOME_Y                    = _UxGT("回Y原位");     // "Home Y"
@@ -93,8 +94,8 @@ namespace Language_zh_CN {
   LSTR MSG_SPINDLE_MENU                   = _UxGT("主轴控制");
   LSTR MSG_SPINDLE_POWER                  = _UxGT("主轴电源");
   LSTR MSG_SPINDLE_REVERSE                = _UxGT("主轴反转");
-  LSTR MSG_SWITCH_PS_ON                   = _UxGT("电源打开");     // "Switch power on"
-  LSTR MSG_SWITCH_PS_OFF                  = _UxGT("电源关闭");     // "Switch power off"
+  LSTR MSG_SWITCH_PS_ON                   = _UxGT("开启电源");     // "Switch power on"
+  LSTR MSG_SWITCH_PS_OFF                  = _UxGT("关闭电源");     // "Switch power off"
   LSTR MSG_EXTRUDE                        = _UxGT("挤出");     // "Extrude"
   LSTR MSG_RETRACT                        = _UxGT("回抽");     // "Retract"
   LSTR MSG_MOVE_AXIS                      = _UxGT("移动轴");     // "Move axis"

commit 9665a4434cee0386fa2a63a058b6f2598943ee98
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 10 02:51:34 2022 -0600

    🧑‍💻 Fewer string macros

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index e641f235e6..7f0ca874d6 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -267,45 +267,45 @@ namespace Language_zh_CN {
   LSTR MSG_SELECT_E                       = _UxGT("选择 *");
   LSTR MSG_ACC                            = _UxGT("加速度");     // "Accel" acceleration
   LSTR MSG_JERK                           = _UxGT("抖动速率");     // "Jerk"
-  LSTR MSG_VA_JERK                        = _UxGT("轴抖动速率") LCD_STR_A;     // "Va-jerk"
-  LSTR MSG_VB_JERK                        = _UxGT("轴抖动速率") LCD_STR_B;     // "Vb-jerk"
-  LSTR MSG_VC_JERK                        = _UxGT("轴抖动速率") LCD_STR_C;     // "Vc-jerk"
-  LSTR MSG_VI_JERK                        = _UxGT("轴抖动速率") LCD_STR_I;     // "Vi-jerk"
-  LSTR MSG_VJ_JERK                        = _UxGT("轴抖动速率") LCD_STR_J;     // "Vj-jerk"
-  LSTR MSG_VK_JERK                        = _UxGT("轴抖动速率") LCD_STR_K;     // "Vk-jerk"
+  LSTR MSG_VA_JERK                        = _UxGT("轴抖动速率") STR_A;     // "Va-jerk"
+  LSTR MSG_VB_JERK                        = _UxGT("轴抖动速率") STR_B;     // "Vb-jerk"
+  LSTR MSG_VC_JERK                        = _UxGT("轴抖动速率") STR_C;     // "Vc-jerk"
+  LSTR MSG_VI_JERK                        = _UxGT("轴抖动速率") STR_I;     // "Vi-jerk"
+  LSTR MSG_VJ_JERK                        = _UxGT("轴抖动速率") STR_J;     // "Vj-jerk"
+  LSTR MSG_VK_JERK                        = _UxGT("轴抖动速率") STR_K;     // "Vk-jerk"
   LSTR MSG_VE_JERK                        = _UxGT("挤出机抖动速率");     // "Ve-jerk"
   LSTR MSG_JUNCTION_DEVIATION             = _UxGT("接点差");
   LSTR MSG_VELOCITY                       = _UxGT("速度");     // "Velocity"
-  LSTR MSG_VMAX_A                         = _UxGT("最大进料速率") LCD_STR_A;     // "Vmax " max_feedrate_mm_s
-  LSTR MSG_VMAX_B                         = _UxGT("最大进料速率") LCD_STR_B;
-  LSTR MSG_VMAX_C                         = _UxGT("最大进料速率") LCD_STR_C;
-  LSTR MSG_VMAX_I                         = _UxGT("最大进料速率") LCD_STR_I;
-  LSTR MSG_VMAX_J                         = _UxGT("最大进料速率") LCD_STR_J;
-  LSTR MSG_VMAX_K                         = _UxGT("最大进料速率") LCD_STR_K;
-  LSTR MSG_VMAX_E                         = _UxGT("最大进料速率") LCD_STR_E;
+  LSTR MSG_VMAX_A                         = _UxGT("最大进料速率") STR_A;     // "Vmax " max_feedrate_mm_s
+  LSTR MSG_VMAX_B                         = _UxGT("最大进料速率") STR_B;
+  LSTR MSG_VMAX_C                         = _UxGT("最大进料速率") STR_C;
+  LSTR MSG_VMAX_I                         = _UxGT("最大进料速率") STR_I;
+  LSTR MSG_VMAX_J                         = _UxGT("最大进料速率") STR_J;
+  LSTR MSG_VMAX_K                         = _UxGT("最大进料速率") STR_K;
+  LSTR MSG_VMAX_E                         = _UxGT("最大进料速率") STR_E;
   LSTR MSG_VMAX_EN                        = _UxGT("最大进料速率 *");
   LSTR MSG_VMIN                           = _UxGT("最小进料速率");     // "Vmin"  min_feedrate_mm_s
   LSTR MSG_VTRAV_MIN                      = _UxGT("最小移动速率");     // "VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
   LSTR MSG_ACCELERATION                   = _UxGT("加速度");     // "Acceleration"
-  LSTR MSG_AMAX_A                         = _UxGT("最大打印加速度") LCD_STR_A;     // "Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  LSTR MSG_AMAX_B                         = _UxGT("最大打印加速度") LCD_STR_B;
-  LSTR MSG_AMAX_C                         = _UxGT("最大打印加速度") LCD_STR_C;
-  LSTR MSG_AMAX_I                         = _UxGT("最大打印加速度") LCD_STR_I;
-  LSTR MSG_AMAX_J                         = _UxGT("最大打印加速度") LCD_STR_J;
-  LSTR MSG_AMAX_K                         = _UxGT("最大打印加速度") LCD_STR_K;
-  LSTR MSG_AMAX_E                         = _UxGT("最大打印加速度") LCD_STR_E;
+  LSTR MSG_AMAX_A                         = _UxGT("最大打印加速度") STR_A;     // "Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  LSTR MSG_AMAX_B                         = _UxGT("最大打印加速度") STR_B;
+  LSTR MSG_AMAX_C                         = _UxGT("最大打印加速度") STR_C;
+  LSTR MSG_AMAX_I                         = _UxGT("最大打印加速度") STR_I;
+  LSTR MSG_AMAX_J                         = _UxGT("最大打印加速度") STR_J;
+  LSTR MSG_AMAX_K                         = _UxGT("最大打印加速度") STR_K;
+  LSTR MSG_AMAX_E                         = _UxGT("最大打印加速度") STR_E;
   LSTR MSG_AMAX_EN                        = _UxGT("最大打印加速度 *");
   LSTR MSG_A_RETRACT                      = _UxGT("收进加速度");     // "A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
   LSTR MSG_A_TRAVEL                       = _UxGT("非打印移动加速度");     // "A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
   LSTR MSG_XY_FREQUENCY_LIMIT             = _UxGT("频率最大");
   LSTR MSG_XY_FREQUENCY_FEEDRATE          = _UxGT("进给速度");
   LSTR MSG_STEPS_PER_MM                   = _UxGT("轴步数/mm");     // "Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
-  LSTR MSG_A_STEPS                        = LCD_STR_A _UxGT(" 步数/mm");     // "Asteps/mm"
-  LSTR MSG_B_STEPS                        = LCD_STR_B _UxGT(" 步数/mm");
-  LSTR MSG_C_STEPS                        = LCD_STR_C _UxGT(" 步数/mm");
-  LSTR MSG_I_STEPS                        = LCD_STR_I _UxGT(" 步数/mm");
-  LSTR MSG_J_STEPS                        = LCD_STR_J _UxGT(" 步数/mm");
-  LSTR MSG_K_STEPS                        = LCD_STR_K _UxGT(" 步数/mm");
+  LSTR MSG_A_STEPS                        = STR_A _UxGT(" 步数/mm");     // "Asteps/mm"
+  LSTR MSG_B_STEPS                        = STR_B _UxGT(" 步数/mm");
+  LSTR MSG_C_STEPS                        = STR_C _UxGT(" 步数/mm");
+  LSTR MSG_I_STEPS                        = STR_I _UxGT(" 步数/mm");
+  LSTR MSG_J_STEPS                        = STR_J _UxGT(" 步数/mm");
+  LSTR MSG_K_STEPS                        = STR_K _UxGT(" 步数/mm");
   LSTR MSG_E_STEPS                        = _UxGT("E 步数/mm");     // "Esteps/mm"
   LSTR MSG_EN_STEPS                       = _UxGT("* 步数/mm");
   LSTR MSG_TEMPERATURE                    = _UxGT("温度");     // "Temperature"
@@ -507,12 +507,12 @@ namespace Language_zh_CN {
   LSTR MSG_INFO_MAX_TEMP                  = _UxGT("最高温度");     // "Max Temp"
   LSTR MSG_INFO_PSU                       = _UxGT("电源供应");     // "Power Supply"
   LSTR MSG_DRIVE_STRENGTH                 = _UxGT("驱动力度");     // "Drive Strength"
-  LSTR MSG_DAC_PERCENT_A                  = LCD_STR_A _UxGT(" 驱动 %");     // "X Driver %"
-  LSTR MSG_DAC_PERCENT_B                  = LCD_STR_B _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_C                  = LCD_STR_C _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_I                  = LCD_STR_I _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_J                  = LCD_STR_J _UxGT(" 驱动 %");
-  LSTR MSG_DAC_PERCENT_K                  = LCD_STR_K _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_A                  = STR_A _UxGT(" 驱动 %");     // "X Driver %"
+  LSTR MSG_DAC_PERCENT_B                  = STR_B _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_C                  = STR_C _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_I                  = STR_I _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_J                  = STR_J _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_K                  = STR_K _UxGT(" 驱动 %");
   LSTR MSG_DAC_PERCENT_E                  = _UxGT("E 驱动 %");     // "E Driver %"
   LSTR MSG_ERROR_TMC                      = _UxGT("TMC 连接错误");
   LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("保存驱动设置");     // "DAC EEPROM Write"

commit d58daaa42c8e238b3e1eba4041ca5bcfa497c61f
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Tue Dec 28 00:23:50 2021 -0500

    🚸 DWIN Enhanced improve, fix, and extend (#23240)
    
    - Offset icon change to show mesh leveling status
    - Reset extruder position when enter to Move menu
    - New live end-stop diagnostic page
    - Editable firmware retracts settings for Tune and filament settings menu
    - Print Statistics page accessible from the Advanced Settings menu
    - Reset printer draws the boot image
    - Adds individual axes homing menu
    - Adds probe deploy/stow to Probe Settings menu
    - Updates lock screen
    - Rebuilds main buttons to support text caption in other languages
    - Increases probe offset limits to 60 mm
    - Fix M303 PID variable update
    - Fix Resume/Pause button update
    - Fix redraw of print done
    - Fix very large file name bug
    - Fix bug in bed manual leveling

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index d61634e431..e641f235e6 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -489,7 +489,7 @@ namespace Language_zh_CN {
 
   LSTR MSG_KILL_EXPECTED_PRINTER          = _UxGT("打印机不正确");     // "The printer is incorrect"
 
-  #if LCD_WIDTH >= 20
+  #if LCD_WIDTH >= 20 || HAS_DWIN_E3V2
     LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印计数");     // "Print Count"
     LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成了");     // "Completed"
     LSTR MSG_INFO_PRINT_TIME              = _UxGT("总打印时间");     // "Total print time"

commit 1d80464ba77bc576426f15af28a633bf48d769ad
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 27 21:15:58 2021 -0500

    🎨 Define HAS_PREHEAT conditional

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index afa51689cf..d61634e431 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -68,7 +68,7 @@ namespace Language_zh_CN {
   LSTR MSG_SET_HOME_OFFSETS               = _UxGT("设置原点偏移");     // "Set home offsets"
   LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("偏移已启用");     // "Offsets applied"
   LSTR MSG_SET_ORIGIN                     = _UxGT("设置原点");     // "Set origin"
-  #if PREHEAT_COUNT
+  #if HAS_PREHEAT
     LSTR MSG_PREHEAT_1                    = _UxGT("预热 ") PREHEAT_1_LABEL;     // "Preheat PREHEAT_2_LABEL"
     LSTR MSG_PREHEAT_1_H                  = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     // "Preheat PREHEAT_2_LABEL"
     LSTR MSG_PREHEAT_1_END                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
@@ -142,7 +142,7 @@ namespace Language_zh_CN {
   LSTR MSG_UBL_DONE_EDITING_MESH          = _UxGT("完成编辑网格");     // "Done Editing Mesh"
   LSTR MSG_UBL_BUILD_CUSTOM_MESH          = _UxGT("创设客户网格");     // "Build Custom Mesh"
   LSTR MSG_UBL_BUILD_MESH_MENU            = _UxGT("创设网格");     // "Build Mesh"
-  #if PREHEAT_COUNT
+  #if HAS_PREHEAT
     LSTR MSG_UBL_BUILD_MESH_M             = _UxGT("创设 $ 网格");     // "Build PREHEAT_1_LABEL Mesh"
     LSTR MSG_UBL_VALIDATE_MESH_M          = _UxGT("批准 $ 网格");     // "Validate PREHEAT_1_LABEL Mesh"
   #endif

commit 54d400608db83bfa606e1b757589c169c9a38fc2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 4 00:24:41 2021 -0500

    🎨 Axis name string interpolation, with examples (#22879)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 60ffb27337..afa51689cf 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -119,9 +119,8 @@ namespace Language_zh_CN {
   LSTR MSG_IDEX_MODE_DUPLICATE            = _UxGT("复制");
   LSTR MSG_IDEX_MODE_MIRRORED_COPY        = _UxGT("镜像复制");
   LSTR MSG_IDEX_MODE_FULL_CTRL            = _UxGT("完全控制");
-  LSTR MSG_HOTEND_OFFSET_X                = _UxGT("第二喷头是X");
-  LSTR MSG_HOTEND_OFFSET_Y                = _UxGT("第二喷头是Y");
   LSTR MSG_HOTEND_OFFSET_Z                = _UxGT("第二喷头是Z");
+  LSTR MSG_HOTEND_OFFSET_A                = _UxGT("第二喷头是@");
   LSTR MSG_UBL_DOING_G29                  = _UxGT("执行G29");     // "Doing G29"
   LSTR MSG_UBL_TOOLS                      = _UxGT("UBL工具");     // "UBL Tools"
   LSTR MSG_UBL_LEVEL_BED                  = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"

commit 216a66b42c8240f37befe98e6a410d1e3694ff4e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 19 19:25:01 2021 -0500

    🌐 Skip non-essential translations

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 2d9dc725f9..60ffb27337 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -617,12 +617,6 @@ namespace Language_zh_CN {
   LSTR MSG_SERVICE_RESET                  = _UxGT("复位");
   LSTR MSG_SERVICE_IN                     = _UxGT(" 在:");
   LSTR MSG_BACKLASH                       = _UxGT("回差");
-  LSTR MSG_BACKLASH_A                     = LCD_STR_A;
-  LSTR MSG_BACKLASH_B                     = LCD_STR_B;
-  LSTR MSG_BACKLASH_C                     = LCD_STR_C;
-  LSTR MSG_BACKLASH_I                     = LCD_STR_I;
-  LSTR MSG_BACKLASH_J                     = LCD_STR_J;
-  LSTR MSG_BACKLASH_K                     = LCD_STR_K;
   LSTR MSG_BACKLASH_CORRECTION            = _UxGT("校正");
   LSTR MSG_BACKLASH_SMOOTHING             = _UxGT("平滑的");
 

commit c1d7e234e1aba1ecc91cfc77d17d38b67618c315
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 19 18:40:56 2021 -0500

    🌐 Reduce language file sizes

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 35642460fc..2d9dc725f9 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -30,607 +30,607 @@
 namespace Language_zh_CN {
   using namespace Language_en;  // Inherit undefined strings from English
 
-  constexpr uint8_t    CHARSIZE                            = 3;
-  PROGMEM Language_Str LANGUAGE                            = _UxGT("Simplified Chinese");
+  constexpr uint8_t CHARSIZE              = 3;
+  LSTR LANGUAGE                           = _UxGT("Simplified Chinese");
 
-  PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT("已就绪.");     // " ready."
-  PROGMEM Language_Str MSG_MARLIN                          = _UxGT("马林");
-  PROGMEM Language_Str MSG_YES                             = _UxGT("是");
-  PROGMEM Language_Str MSG_NO                              = _UxGT("否");
-  PROGMEM Language_Str MSG_BACK                            = _UxGT("返回");     // ”Back“
-  PROGMEM Language_Str MSG_MEDIA_ABORTING                  = _UxGT("放弃中...");
-  PROGMEM Language_Str MSG_MEDIA_INSERTED                  = _UxGT("存储卡已插入");     // "Card inserted"
-  PROGMEM Language_Str MSG_MEDIA_REMOVED                   = _UxGT("存储卡被拔出");     // "Card removed"
-  PROGMEM Language_Str MSG_MEDIA_WAITING                   = _UxGT("等待存储器");
-  PROGMEM Language_Str MSG_MEDIA_READ_ERROR                = _UxGT("存储器读取错误");
-  PROGMEM Language_Str MSG_MEDIA_USB_REMOVED               = _UxGT("USB设备已弹出");
-  PROGMEM Language_Str MSG_MEDIA_USB_FAILED                = _UxGT("USB启动错误");
-  PROGMEM Language_Str MSG_KILL_SUBCALL_OVERFLOW           = _UxGT("子响应溢出");
-  PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("挡块");     // "Endstops" // Max length 8 characters
-  PROGMEM Language_Str MSG_LCD_SOFT_ENDSTOPS               = _UxGT("软挡块");
-  PROGMEM Language_Str MSG_MAIN                            = _UxGT("主菜单");     // "Main"
-  PROGMEM Language_Str MSG_ADVANCED_SETTINGS               = _UxGT("高级设置");
-  PROGMEM Language_Str MSG_CONFIGURATION                   = _UxGT("配置");
-  PROGMEM Language_Str MSG_RUN_AUTO_FILES                  = _UxGT("自动开始");     // "Autostart"
-  PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("关闭步进电机");     // "Disable steppers"
-  PROGMEM Language_Str MSG_DEBUG_MENU                      = _UxGT("调试菜单");     // "Debug Menu"
-  PROGMEM Language_Str MSG_PROGRESS_BAR_TEST               = _UxGT("进度条测试");     // "Progress Bar Test"
-  PROGMEM Language_Str MSG_AUTO_HOME                       = _UxGT("自动回原点");     // "Auto home"
-  PROGMEM Language_Str MSG_AUTO_HOME_X                     = _UxGT("回X原位");     // "Home X"
-  PROGMEM Language_Str MSG_AUTO_HOME_Y                     = _UxGT("回Y原位");     // "Home Y"
-  PROGMEM Language_Str MSG_AUTO_HOME_Z                     = _UxGT("回Z原位");     // "Home Z"
-  PROGMEM Language_Str MSG_AUTO_Z_ALIGN                    = _UxGT("自动Z对齐");
-  PROGMEM Language_Str MSG_LEVEL_BED_HOMING                = _UxGT("平台调平XYZ归原位");     // "Homing XYZ"
-  PROGMEM Language_Str MSG_LEVEL_BED_WAITING               = _UxGT("单击开始热床调平");     // "Click to Begin"
-  PROGMEM Language_Str MSG_LEVEL_BED_NEXT_POINT            = _UxGT("下个热床调平点");     // "Next Point"
-  PROGMEM Language_Str MSG_LEVEL_BED_DONE                  = _UxGT("完成热床调平");     // "Leveling Done!"
-  PROGMEM Language_Str MSG_Z_FADE_HEIGHT                   = _UxGT("淡出高度");     // "Fade Height"
-  PROGMEM Language_Str MSG_SET_HOME_OFFSETS                = _UxGT("设置原点偏移");     // "Set home offsets"
-  PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("偏移已启用");     // "Offsets applied"
-  PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("设置原点");     // "Set origin"
+  LSTR WELCOME_MSG                        = MACHINE_NAME _UxGT("已就绪.");     // " ready."
+  LSTR MSG_MARLIN                         = _UxGT("马林");
+  LSTR MSG_YES                            = _UxGT("是");
+  LSTR MSG_NO                             = _UxGT("否");
+  LSTR MSG_BACK                           = _UxGT("返回");     // ”Back“
+  LSTR MSG_MEDIA_ABORTING                 = _UxGT("放弃中...");
+  LSTR MSG_MEDIA_INSERTED                 = _UxGT("存储卡已插入");     // "Card inserted"
+  LSTR MSG_MEDIA_REMOVED                  = _UxGT("存储卡被拔出");     // "Card removed"
+  LSTR MSG_MEDIA_WAITING                  = _UxGT("等待存储器");
+  LSTR MSG_MEDIA_READ_ERROR               = _UxGT("存储器读取错误");
+  LSTR MSG_MEDIA_USB_REMOVED              = _UxGT("USB设备已弹出");
+  LSTR MSG_MEDIA_USB_FAILED               = _UxGT("USB启动错误");
+  LSTR MSG_KILL_SUBCALL_OVERFLOW          = _UxGT("子响应溢出");
+  LSTR MSG_LCD_ENDSTOPS                   = _UxGT("挡块");     // "Endstops" // Max length 8 characters
+  LSTR MSG_LCD_SOFT_ENDSTOPS              = _UxGT("软挡块");
+  LSTR MSG_MAIN                           = _UxGT("主菜单");     // "Main"
+  LSTR MSG_ADVANCED_SETTINGS              = _UxGT("高级设置");
+  LSTR MSG_CONFIGURATION                  = _UxGT("配置");
+  LSTR MSG_RUN_AUTO_FILES                 = _UxGT("自动开始");     // "Autostart"
+  LSTR MSG_DISABLE_STEPPERS               = _UxGT("关闭步进电机");     // "Disable steppers"
+  LSTR MSG_DEBUG_MENU                     = _UxGT("调试菜单");     // "Debug Menu"
+  LSTR MSG_PROGRESS_BAR_TEST              = _UxGT("进度条测试");     // "Progress Bar Test"
+  LSTR MSG_AUTO_HOME                      = _UxGT("自动回原点");     // "Auto home"
+  LSTR MSG_AUTO_HOME_X                    = _UxGT("回X原位");     // "Home X"
+  LSTR MSG_AUTO_HOME_Y                    = _UxGT("回Y原位");     // "Home Y"
+  LSTR MSG_AUTO_HOME_Z                    = _UxGT("回Z原位");     // "Home Z"
+  LSTR MSG_AUTO_Z_ALIGN                   = _UxGT("自动Z对齐");
+  LSTR MSG_LEVEL_BED_HOMING               = _UxGT("平台调平XYZ归原位");     // "Homing XYZ"
+  LSTR MSG_LEVEL_BED_WAITING              = _UxGT("单击开始热床调平");     // "Click to Begin"
+  LSTR MSG_LEVEL_BED_NEXT_POINT           = _UxGT("下个热床调平点");     // "Next Point"
+  LSTR MSG_LEVEL_BED_DONE                 = _UxGT("完成热床调平");     // "Leveling Done!"
+  LSTR MSG_Z_FADE_HEIGHT                  = _UxGT("淡出高度");     // "Fade Height"
+  LSTR MSG_SET_HOME_OFFSETS               = _UxGT("设置原点偏移");     // "Set home offsets"
+  LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("偏移已启用");     // "Offsets applied"
+  LSTR MSG_SET_ORIGIN                     = _UxGT("设置原点");     // "Set origin"
   #if PREHEAT_COUNT
-    PROGMEM Language_Str MSG_PREHEAT_1                     = _UxGT("预热 ") PREHEAT_1_LABEL;     // "Preheat PREHEAT_2_LABEL"
-    PROGMEM Language_Str MSG_PREHEAT_1_H                   = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     // "Preheat PREHEAT_2_LABEL"
-    PROGMEM Language_Str MSG_PREHEAT_1_END                 = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
-    PROGMEM Language_Str MSG_PREHEAT_1_END_E               = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_1 " "
-    PROGMEM Language_Str MSG_PREHEAT_1_ALL                 = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部");     //MSG_PREHEAT_1 " All"
-    PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY             = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床");     //MSG_PREHEAT_1 " Bed"
-    PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS            = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置");     //MSG_PREHEAT_1 " conf"
+    LSTR MSG_PREHEAT_1                    = _UxGT("预热 ") PREHEAT_1_LABEL;     // "Preheat PREHEAT_2_LABEL"
+    LSTR MSG_PREHEAT_1_H                  = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     // "Preheat PREHEAT_2_LABEL"
+    LSTR MSG_PREHEAT_1_END                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
+    LSTR MSG_PREHEAT_1_END_E              = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_1 " "
+    LSTR MSG_PREHEAT_1_ALL                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部");     //MSG_PREHEAT_1 " All"
+    LSTR MSG_PREHEAT_1_BEDONLY            = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床");     //MSG_PREHEAT_1 " Bed"
+    LSTR MSG_PREHEAT_1_SETTINGS           = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置");     //MSG_PREHEAT_1 " conf"
 
-    PROGMEM Language_Str MSG_PREHEAT_M                     = _UxGT("预热 $");     // "Preheat PREHEAT_2_LABEL"
-    PROGMEM Language_Str MSG_PREHEAT_M_H                   = _UxGT("预热 $ ~");     // "Preheat PREHEAT_2_LABEL"
-    PROGMEM Language_Str MSG_PREHEAT_M_END                 = _UxGT("预热 $ 喷嘴");     //MSG_PREHEAT_1 " "
-    PROGMEM Language_Str MSG_PREHEAT_M_END_E               = _UxGT("预热 $ 喷嘴 ~");     //MSG_PREHEAT_1 " "
-    PROGMEM Language_Str MSG_PREHEAT_M_ALL                 = _UxGT("预热 $ 全部");     //MSG_PREHEAT_1 " All"
-    PROGMEM Language_Str MSG_PREHEAT_M_BEDONLY             = _UxGT("预热 $ 热床");     //MSG_PREHEAT_1 " Bed"
-    PROGMEM Language_Str MSG_PREHEAT_M_SETTINGS            = _UxGT("预热 $ 设置");     //MSG_PREHEAT_1 " conf"
+    LSTR MSG_PREHEAT_M                    = _UxGT("预热 $");     // "Preheat PREHEAT_2_LABEL"
+    LSTR MSG_PREHEAT_M_H                  = _UxGT("预热 $ ~");     // "Preheat PREHEAT_2_LABEL"
+    LSTR MSG_PREHEAT_M_END                = _UxGT("预热 $ 喷嘴");     //MSG_PREHEAT_1 " "
+    LSTR MSG_PREHEAT_M_END_E              = _UxGT("预热 $ 喷嘴 ~");     //MSG_PREHEAT_1 " "
+    LSTR MSG_PREHEAT_M_ALL                = _UxGT("预热 $ 全部");     //MSG_PREHEAT_1 " All"
+    LSTR MSG_PREHEAT_M_BEDONLY            = _UxGT("预热 $ 热床");     //MSG_PREHEAT_1 " Bed"
+    LSTR MSG_PREHEAT_M_SETTINGS           = _UxGT("预热 $ 设置");     //MSG_PREHEAT_1 " conf"
   #endif
-  PROGMEM Language_Str MSG_PREHEAT_CUSTOM                  = _UxGT("预热自定义");
-  PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("降温");     // "Cooldown"
-  PROGMEM Language_Str MSG_CUTTER_FREQUENCY                = _UxGT("切割频率");
-  PROGMEM Language_Str MSG_LASER_MENU                      = _UxGT("激光控制");
-  PROGMEM Language_Str MSG_LASER_POWER                     = _UxGT("激光电源");
-  PROGMEM Language_Str MSG_SPINDLE_MENU                    = _UxGT("主轴控制");
-  PROGMEM Language_Str MSG_SPINDLE_POWER                   = _UxGT("主轴电源");
-  PROGMEM Language_Str MSG_SPINDLE_REVERSE                 = _UxGT("主轴反转");
-  PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("电源打开");     // "Switch power on"
-  PROGMEM Language_Str MSG_SWITCH_PS_OFF                   = _UxGT("电源关闭");     // "Switch power off"
-  PROGMEM Language_Str MSG_EXTRUDE                         = _UxGT("挤出");     // "Extrude"
-  PROGMEM Language_Str MSG_RETRACT                         = _UxGT("回抽");     // "Retract"
-  PROGMEM Language_Str MSG_MOVE_AXIS                       = _UxGT("移动轴");     // "Move axis"
-  PROGMEM Language_Str MSG_BED_LEVELING                    = _UxGT("调平热床");     // "Bed leveling"
-  PROGMEM Language_Str MSG_LEVEL_BED                       = _UxGT("调平热床");     // "Level bed"
-  PROGMEM Language_Str MSG_BED_TRAMMING                    = _UxGT("调平边角");     // "Bed Tramming"
-  PROGMEM Language_Str MSG_NEXT_CORNER                     = _UxGT("下个边角");     // "Next corner"
-  PROGMEM Language_Str MSG_MESH_EDITOR                     = _UxGT("网格编辑器");
-  PROGMEM Language_Str MSG_EDIT_MESH                       = _UxGT("编辑网格");     // "Edit Mesh"
-  PROGMEM Language_Str MSG_EDITING_STOPPED                 = _UxGT("网格编辑已停止");     // "Mesh Editing Stopped"
-  PROGMEM Language_Str MSG_PROBING_POINT                   = _UxGT("探测点");
-  PROGMEM Language_Str MSG_MESH_X                          = _UxGT("索引X");
-  PROGMEM Language_Str MSG_MESH_Y                          = _UxGT("索引Y");
-  PROGMEM Language_Str MSG_MESH_EDIT_Z                     = _UxGT("Z 值");
-  PROGMEM Language_Str MSG_CUSTOM_COMMANDS                 = _UxGT("定制命令");     // "Custom Commands"
-  PROGMEM Language_Str MSG_M48_TEST                        = _UxGT("M48探测");
-  PROGMEM Language_Str MSG_M48_POINT                       = _UxGT("M48点");
-  PROGMEM Language_Str MSG_M48_DEVIATION                   = _UxGT("M48偏差");
-  PROGMEM Language_Str MSG_IDEX_MENU                       = _UxGT("IDEX模式");
-  PROGMEM Language_Str MSG_OFFSETS_MENU                    = _UxGT("工具偏移量");
-  PROGMEM Language_Str MSG_IDEX_MODE_AUTOPARK              = _UxGT("自动停靠");
-  PROGMEM Language_Str MSG_IDEX_MODE_DUPLICATE             = _UxGT("复制");
-  PROGMEM Language_Str MSG_IDEX_MODE_MIRRORED_COPY         = _UxGT("镜像复制");
-  PROGMEM Language_Str MSG_IDEX_MODE_FULL_CTRL             = _UxGT("完全控制");
-  PROGMEM Language_Str MSG_HOTEND_OFFSET_X                 = _UxGT("第二喷头是X");
-  PROGMEM Language_Str MSG_HOTEND_OFFSET_Y                 = _UxGT("第二喷头是Y");
-  PROGMEM Language_Str MSG_HOTEND_OFFSET_Z                 = _UxGT("第二喷头是Z");
-  PROGMEM Language_Str MSG_UBL_DOING_G29                   = _UxGT("执行G29");     // "Doing G29"
-  PROGMEM Language_Str MSG_UBL_TOOLS                       = _UxGT("UBL工具");     // "UBL Tools"
-  PROGMEM Language_Str MSG_UBL_LEVEL_BED                   = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
-  PROGMEM Language_Str MSG_LCD_TILTING_MESH                = _UxGT("倾斜點");
-  PROGMEM Language_Str MSG_UBL_MANUAL_MESH                 = _UxGT("手工创设网格");     // "Manually Build Mesh"
-  PROGMEM Language_Str MSG_UBL_BC_INSERT                   = _UxGT("放置垫片并测量");     // "Place shim & measure"
-  PROGMEM Language_Str MSG_UBL_BC_INSERT2                  = _UxGT("测量");     // "Measure"
-  PROGMEM Language_Str MSG_UBL_BC_REMOVE                   = _UxGT("移除并测量热床");     // "Remove & measure bed"
-  PROGMEM Language_Str MSG_UBL_MOVING_TO_NEXT              = _UxGT("移动到下一个");     // "Moving to next"
-  PROGMEM Language_Str MSG_UBL_ACTIVATE_MESH               = _UxGT("激活UBL");     // "Activate UBL"
-  PROGMEM Language_Str MSG_UBL_DEACTIVATE_MESH             = _UxGT("关闭UBL");     // "Deactivate UBL"
-  PROGMEM Language_Str MSG_UBL_SET_TEMP_BED                = _UxGT("热床温度");     // "Bed Temp"
-  PROGMEM Language_Str MSG_UBL_BED_TEMP_CUSTOM             = _UxGT("热床温度");
-  PROGMEM Language_Str MSG_UBL_SET_TEMP_HOTEND             = _UxGT("热端温度");     // "Hotend Temp"
-  PROGMEM Language_Str MSG_UBL_HOTEND_TEMP_CUSTOM          = _UxGT("热端温度");
-  PROGMEM Language_Str MSG_UBL_MESH_EDIT                   = _UxGT("网格编辑");     // "Mesh Edit"
-  PROGMEM Language_Str MSG_UBL_EDIT_CUSTOM_MESH            = _UxGT("编辑客户网格");     // "Edit Custom Mesh"
-  PROGMEM Language_Str MSG_UBL_FINE_TUNE_MESH              = _UxGT("细调网格");     // "Fine Tuning Mesh"
-  PROGMEM Language_Str MSG_UBL_DONE_EDITING_MESH           = _UxGT("完成编辑网格");     // "Done Editing Mesh"
-  PROGMEM Language_Str MSG_UBL_BUILD_CUSTOM_MESH           = _UxGT("创设客户网格");     // "Build Custom Mesh"
-  PROGMEM Language_Str MSG_UBL_BUILD_MESH_MENU             = _UxGT("创设网格");     // "Build Mesh"
+  LSTR MSG_PREHEAT_CUSTOM                 = _UxGT("预热自定义");
+  LSTR MSG_COOLDOWN                       = _UxGT("降温");     // "Cooldown"
+  LSTR MSG_CUTTER_FREQUENCY               = _UxGT("切割频率");
+  LSTR MSG_LASER_MENU                     = _UxGT("激光控制");
+  LSTR MSG_LASER_POWER                    = _UxGT("激光电源");
+  LSTR MSG_SPINDLE_MENU                   = _UxGT("主轴控制");
+  LSTR MSG_SPINDLE_POWER                  = _UxGT("主轴电源");
+  LSTR MSG_SPINDLE_REVERSE                = _UxGT("主轴反转");
+  LSTR MSG_SWITCH_PS_ON                   = _UxGT("电源打开");     // "Switch power on"
+  LSTR MSG_SWITCH_PS_OFF                  = _UxGT("电源关闭");     // "Switch power off"
+  LSTR MSG_EXTRUDE                        = _UxGT("挤出");     // "Extrude"
+  LSTR MSG_RETRACT                        = _UxGT("回抽");     // "Retract"
+  LSTR MSG_MOVE_AXIS                      = _UxGT("移动轴");     // "Move axis"
+  LSTR MSG_BED_LEVELING                   = _UxGT("调平热床");     // "Bed leveling"
+  LSTR MSG_LEVEL_BED                      = _UxGT("调平热床");     // "Level bed"
+  LSTR MSG_BED_TRAMMING                   = _UxGT("调平边角");     // "Bed Tramming"
+  LSTR MSG_NEXT_CORNER                    = _UxGT("下个边角");     // "Next corner"
+  LSTR MSG_MESH_EDITOR                    = _UxGT("网格编辑器");
+  LSTR MSG_EDIT_MESH                      = _UxGT("编辑网格");     // "Edit Mesh"
+  LSTR MSG_EDITING_STOPPED                = _UxGT("网格编辑已停止");     // "Mesh Editing Stopped"
+  LSTR MSG_PROBING_POINT                  = _UxGT("探测点");
+  LSTR MSG_MESH_X                         = _UxGT("索引X");
+  LSTR MSG_MESH_Y                         = _UxGT("索引Y");
+  LSTR MSG_MESH_EDIT_Z                    = _UxGT("Z 值");
+  LSTR MSG_CUSTOM_COMMANDS                = _UxGT("定制命令");     // "Custom Commands"
+  LSTR MSG_M48_TEST                       = _UxGT("M48探测");
+  LSTR MSG_M48_POINT                      = _UxGT("M48点");
+  LSTR MSG_M48_DEVIATION                  = _UxGT("M48偏差");
+  LSTR MSG_IDEX_MENU                      = _UxGT("IDEX模式");
+  LSTR MSG_OFFSETS_MENU                   = _UxGT("工具偏移量");
+  LSTR MSG_IDEX_MODE_AUTOPARK             = _UxGT("自动停靠");
+  LSTR MSG_IDEX_MODE_DUPLICATE            = _UxGT("复制");
+  LSTR MSG_IDEX_MODE_MIRRORED_COPY        = _UxGT("镜像复制");
+  LSTR MSG_IDEX_MODE_FULL_CTRL            = _UxGT("完全控制");
+  LSTR MSG_HOTEND_OFFSET_X                = _UxGT("第二喷头是X");
+  LSTR MSG_HOTEND_OFFSET_Y                = _UxGT("第二喷头是Y");
+  LSTR MSG_HOTEND_OFFSET_Z                = _UxGT("第二喷头是Z");
+  LSTR MSG_UBL_DOING_G29                  = _UxGT("执行G29");     // "Doing G29"
+  LSTR MSG_UBL_TOOLS                      = _UxGT("UBL工具");     // "UBL Tools"
+  LSTR MSG_UBL_LEVEL_BED                  = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
+  LSTR MSG_LCD_TILTING_MESH               = _UxGT("倾斜點");
+  LSTR MSG_UBL_MANUAL_MESH                = _UxGT("手工创设网格");     // "Manually Build Mesh"
+  LSTR MSG_UBL_BC_INSERT                  = _UxGT("放置垫片并测量");     // "Place shim & measure"
+  LSTR MSG_UBL_BC_INSERT2                 = _UxGT("测量");     // "Measure"
+  LSTR MSG_UBL_BC_REMOVE                  = _UxGT("移除并测量热床");     // "Remove & measure bed"
+  LSTR MSG_UBL_MOVING_TO_NEXT             = _UxGT("移动到下一个");     // "Moving to next"
+  LSTR MSG_UBL_ACTIVATE_MESH              = _UxGT("激活UBL");     // "Activate UBL"
+  LSTR MSG_UBL_DEACTIVATE_MESH            = _UxGT("关闭UBL");     // "Deactivate UBL"
+  LSTR MSG_UBL_SET_TEMP_BED               = _UxGT("热床温度");     // "Bed Temp"
+  LSTR MSG_UBL_BED_TEMP_CUSTOM            = _UxGT("热床温度");
+  LSTR MSG_UBL_SET_TEMP_HOTEND            = _UxGT("热端温度");     // "Hotend Temp"
+  LSTR MSG_UBL_HOTEND_TEMP_CUSTOM         = _UxGT("热端温度");
+  LSTR MSG_UBL_MESH_EDIT                  = _UxGT("网格编辑");     // "Mesh Edit"
+  LSTR MSG_UBL_EDIT_CUSTOM_MESH           = _UxGT("编辑客户网格");     // "Edit Custom Mesh"
+  LSTR MSG_UBL_FINE_TUNE_MESH             = _UxGT("细调网格");     // "Fine Tuning Mesh"
+  LSTR MSG_UBL_DONE_EDITING_MESH          = _UxGT("完成编辑网格");     // "Done Editing Mesh"
+  LSTR MSG_UBL_BUILD_CUSTOM_MESH          = _UxGT("创设客户网格");     // "Build Custom Mesh"
+  LSTR MSG_UBL_BUILD_MESH_MENU            = _UxGT("创设网格");     // "Build Mesh"
   #if PREHEAT_COUNT
-    PROGMEM Language_Str MSG_UBL_BUILD_MESH_M              = _UxGT("创设 $ 网格");     // "Build PREHEAT_1_LABEL Mesh"
-    PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_M           = _UxGT("批准 $ 网格");     // "Validate PREHEAT_1_LABEL Mesh"
+    LSTR MSG_UBL_BUILD_MESH_M             = _UxGT("创设 $ 网格");     // "Build PREHEAT_1_LABEL Mesh"
+    LSTR MSG_UBL_VALIDATE_MESH_M          = _UxGT("批准 $ 网格");     // "Validate PREHEAT_1_LABEL Mesh"
   #endif
-  PROGMEM Language_Str MSG_UBL_BUILD_COLD_MESH             = _UxGT("创设冷网格");     // "Build Cold Mesh"
-  PROGMEM Language_Str MSG_UBL_MESH_HEIGHT_ADJUST          = _UxGT("调整网格高度");     // "Adjust Mesh Height"
-  PROGMEM Language_Str MSG_UBL_MESH_HEIGHT_AMOUNT          = _UxGT("高度合计");     // "Height Amount"
-  PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_MENU          = _UxGT("批准网格");     // "Validate Mesh"
-  PROGMEM Language_Str MSG_UBL_VALIDATE_CUSTOM_MESH        = _UxGT("批准客户网格");     // "Validate Custom Mesh"
-  PROGMEM Language_Str MSG_G26_HEATING_BED                 = _UxGT("G26加热热床");
-  PROGMEM Language_Str MSG_G26_HEATING_NOZZLE              = _UxGT("G26加热喷嘴");
-  PROGMEM Language_Str MSG_G26_MANUAL_PRIME                = _UxGT("手动填装中...");
-  PROGMEM Language_Str MSG_G26_FIXED_LENGTH                = _UxGT("固定距离填装");
-  PROGMEM Language_Str MSG_G26_PRIME_DONE                  = _UxGT("填装完成");
-  PROGMEM Language_Str MSG_G26_CANCELED                    = _UxGT("G26已取消");
-  PROGMEM Language_Str MSG_G26_LEAVING                     = _UxGT("离开G26");
-  PROGMEM Language_Str MSG_UBL_CONTINUE_MESH               = _UxGT("继续热床网格");     // "Continue Bed Mesh"
-  PROGMEM Language_Str MSG_UBL_MESH_LEVELING               = _UxGT("网格调平");     // "Mesh Leveling"
-  PROGMEM Language_Str MSG_UBL_3POINT_MESH_LEVELING        = _UxGT("三点调平");     // "3-Point Leveling"
-  PROGMEM Language_Str MSG_UBL_GRID_MESH_LEVELING          = _UxGT("格子网格调平");     // "Grid Mesh Leveling"
-  PROGMEM Language_Str MSG_UBL_MESH_LEVEL                  = _UxGT("调平网格");     // "Level Mesh"
-  PROGMEM Language_Str MSG_UBL_SIDE_POINTS                 = _UxGT("边点");     // "Side Points"
-  PROGMEM Language_Str MSG_UBL_MAP_TYPE                    = _UxGT("图类型");     // "Map Type"
-  PROGMEM Language_Str MSG_UBL_OUTPUT_MAP                  = _UxGT("输出网格图");     // "Output Mesh Map"
-  PROGMEM Language_Str MSG_UBL_OUTPUT_MAP_HOST             = _UxGT("输出到主机");     // "Output for Host"
-  PROGMEM Language_Str MSG_UBL_OUTPUT_MAP_CSV              = _UxGT("输出到CSV");     // "Output for CSV"
-  PROGMEM Language_Str MSG_UBL_OUTPUT_MAP_BACKUP           = _UxGT("输出到备份");     // "Off Printer Backup"
-  PROGMEM Language_Str MSG_UBL_INFO_UBL                    = _UxGT("输出UBL信息");     // "Output UBL Info"
-  PROGMEM Language_Str MSG_UBL_FILLIN_AMOUNT               = _UxGT("填充合计");     // "Fill-in Amount"
-  PROGMEM Language_Str MSG_UBL_MANUAL_FILLIN               = _UxGT("手工填充");     // "Manual Fill-in"
-  PROGMEM Language_Str MSG_UBL_SMART_FILLIN                = _UxGT("聪明填充");     // "Smart Fill-in"
-  PROGMEM Language_Str MSG_UBL_FILLIN_MESH                 = _UxGT("填充网格");     // "Fill-in Mesh"
-  PROGMEM Language_Str MSG_UBL_INVALIDATE_ALL              = _UxGT("作废所有的");     // "Invalidate All"
-  PROGMEM Language_Str MSG_UBL_INVALIDATE_CLOSEST          = _UxGT("作废最近的");     // "Invalidate Closest"
-  PROGMEM Language_Str MSG_UBL_FINE_TUNE_ALL               = _UxGT("细调所有的");     // "Fine Tune All"
-  PROGMEM Language_Str MSG_UBL_FINE_TUNE_CLOSEST           = _UxGT("细调最近的");     // "Fine Tune Closest"
-  PROGMEM Language_Str MSG_UBL_STORAGE_MESH_MENU           = _UxGT("网格存储");     // "Mesh Storage"
-  PROGMEM Language_Str MSG_UBL_STORAGE_SLOT                = _UxGT("存储槽");     // "Memory Slot"
-  PROGMEM Language_Str MSG_UBL_LOAD_MESH                   = _UxGT("装载热床网格");     // "Load Bed Mesh"
-  PROGMEM Language_Str MSG_UBL_SAVE_MESH                   = _UxGT("保存热床网格");     // "Save Bed Mesh"
-  PROGMEM Language_Str MSG_MESH_LOADED                     = _UxGT("网格 %i 已装载");     // "Mesh %i loaded"
-  PROGMEM Language_Str MSG_MESH_SAVED                      = _UxGT("网格 %i 已保存");     // "Mesh %i saved"
-  PROGMEM Language_Str MSG_UBL_NO_STORAGE                  = _UxGT("没有存储");     // "No storage"
-  PROGMEM Language_Str MSG_UBL_SAVE_ERROR                  = _UxGT("错误: UBL保存");     // "Err: UBL Save"
-  PROGMEM Language_Str MSG_UBL_RESTORE_ERROR               = _UxGT("错误: UBL还原");     // "Err: UBL Restore"
-  PROGMEM Language_Str MSG_UBL_Z_OFFSET                    = _UxGT("Z偏移量: ");
-  PROGMEM Language_Str MSG_UBL_Z_OFFSET_STOPPED            = _UxGT("Z偏移已停止");     // "Z-Offset Stopped"
-  PROGMEM Language_Str MSG_UBL_STEP_BY_STEP_MENU           = _UxGT("一步步UBL");     // "Step-By-Step UBL"
-  PROGMEM Language_Str MSG_UBL_1_BUILD_COLD_MESH           = _UxGT("1. 创设冷网格");
-  PROGMEM Language_Str MSG_UBL_2_SMART_FILLIN              = _UxGT("2. 聪明填充");
-  PROGMEM Language_Str MSG_UBL_3_VALIDATE_MESH_MENU        = _UxGT("3. 批准网格");
-  PROGMEM Language_Str MSG_UBL_4_FINE_TUNE_ALL             = _UxGT("4. 细调所有的");
-  PROGMEM Language_Str MSG_UBL_5_VALIDATE_MESH_MENU        = _UxGT("5. 批准网格");
-  PROGMEM Language_Str MSG_UBL_6_FINE_TUNE_ALL             = _UxGT("6. 细调所有的");
-  PROGMEM Language_Str MSG_UBL_7_SAVE_MESH                 = _UxGT("7. 保存热床网格");
+  LSTR MSG_UBL_BUILD_COLD_MESH            = _UxGT("创设冷网格");     // "Build Cold Mesh"
+  LSTR MSG_UBL_MESH_HEIGHT_ADJUST         = _UxGT("调整网格高度");     // "Adjust Mesh Height"
+  LSTR MSG_UBL_MESH_HEIGHT_AMOUNT         = _UxGT("高度合计");     // "Height Amount"
+  LSTR MSG_UBL_VALIDATE_MESH_MENU         = _UxGT("批准网格");     // "Validate Mesh"
+  LSTR MSG_UBL_VALIDATE_CUSTOM_MESH       = _UxGT("批准客户网格");     // "Validate Custom Mesh"
+  LSTR MSG_G26_HEATING_BED                = _UxGT("G26加热热床");
+  LSTR MSG_G26_HEATING_NOZZLE             = _UxGT("G26加热喷嘴");
+  LSTR MSG_G26_MANUAL_PRIME               = _UxGT("手动填装中...");
+  LSTR MSG_G26_FIXED_LENGTH               = _UxGT("固定距离填装");
+  LSTR MSG_G26_PRIME_DONE                 = _UxGT("填装完成");
+  LSTR MSG_G26_CANCELED                   = _UxGT("G26已取消");
+  LSTR MSG_G26_LEAVING                    = _UxGT("离开G26");
+  LSTR MSG_UBL_CONTINUE_MESH              = _UxGT("继续热床网格");     // "Continue Bed Mesh"
+  LSTR MSG_UBL_MESH_LEVELING              = _UxGT("网格调平");     // "Mesh Leveling"
+  LSTR MSG_UBL_3POINT_MESH_LEVELING       = _UxGT("三点调平");     // "3-Point Leveling"
+  LSTR MSG_UBL_GRID_MESH_LEVELING         = _UxGT("格子网格调平");     // "Grid Mesh Leveling"
+  LSTR MSG_UBL_MESH_LEVEL                 = _UxGT("调平网格");     // "Level Mesh"
+  LSTR MSG_UBL_SIDE_POINTS                = _UxGT("边点");     // "Side Points"
+  LSTR MSG_UBL_MAP_TYPE                   = _UxGT("图类型");     // "Map Type"
+  LSTR MSG_UBL_OUTPUT_MAP                 = _UxGT("输出网格图");     // "Output Mesh Map"
+  LSTR MSG_UBL_OUTPUT_MAP_HOST            = _UxGT("输出到主机");     // "Output for Host"
+  LSTR MSG_UBL_OUTPUT_MAP_CSV             = _UxGT("输出到CSV");     // "Output for CSV"
+  LSTR MSG_UBL_OUTPUT_MAP_BACKUP          = _UxGT("输出到备份");     // "Off Printer Backup"
+  LSTR MSG_UBL_INFO_UBL                   = _UxGT("输出UBL信息");     // "Output UBL Info"
+  LSTR MSG_UBL_FILLIN_AMOUNT              = _UxGT("填充合计");     // "Fill-in Amount"
+  LSTR MSG_UBL_MANUAL_FILLIN              = _UxGT("手工填充");     // "Manual Fill-in"
+  LSTR MSG_UBL_SMART_FILLIN               = _UxGT("聪明填充");     // "Smart Fill-in"
+  LSTR MSG_UBL_FILLIN_MESH                = _UxGT("填充网格");     // "Fill-in Mesh"
+  LSTR MSG_UBL_INVALIDATE_ALL             = _UxGT("作废所有的");     // "Invalidate All"
+  LSTR MSG_UBL_INVALIDATE_CLOSEST         = _UxGT("作废最近的");     // "Invalidate Closest"
+  LSTR MSG_UBL_FINE_TUNE_ALL              = _UxGT("细调所有的");     // "Fine Tune All"
+  LSTR MSG_UBL_FINE_TUNE_CLOSEST          = _UxGT("细调最近的");     // "Fine Tune Closest"
+  LSTR MSG_UBL_STORAGE_MESH_MENU          = _UxGT("网格存储");     // "Mesh Storage"
+  LSTR MSG_UBL_STORAGE_SLOT               = _UxGT("存储槽");     // "Memory Slot"
+  LSTR MSG_UBL_LOAD_MESH                  = _UxGT("装载热床网格");     // "Load Bed Mesh"
+  LSTR MSG_UBL_SAVE_MESH                  = _UxGT("保存热床网格");     // "Save Bed Mesh"
+  LSTR MSG_MESH_LOADED                    = _UxGT("网格 %i 已装载");     // "Mesh %i loaded"
+  LSTR MSG_MESH_SAVED                     = _UxGT("网格 %i 已保存");     // "Mesh %i saved"
+  LSTR MSG_UBL_NO_STORAGE                 = _UxGT("没有存储");     // "No storage"
+  LSTR MSG_UBL_SAVE_ERROR                 = _UxGT("错误: UBL保存");     // "Err: UBL Save"
+  LSTR MSG_UBL_RESTORE_ERROR              = _UxGT("错误: UBL还原");     // "Err: UBL Restore"
+  LSTR MSG_UBL_Z_OFFSET                   = _UxGT("Z偏移量: ");
+  LSTR MSG_UBL_Z_OFFSET_STOPPED           = _UxGT("Z偏移已停止");     // "Z-Offset Stopped"
+  LSTR MSG_UBL_STEP_BY_STEP_MENU          = _UxGT("一步步UBL");     // "Step-By-Step UBL"
+  LSTR MSG_UBL_1_BUILD_COLD_MESH          = _UxGT("1. 创设冷网格");
+  LSTR MSG_UBL_2_SMART_FILLIN             = _UxGT("2. 聪明填充");
+  LSTR MSG_UBL_3_VALIDATE_MESH_MENU       = _UxGT("3. 批准网格");
+  LSTR MSG_UBL_4_FINE_TUNE_ALL            = _UxGT("4. 细调所有的");
+  LSTR MSG_UBL_5_VALIDATE_MESH_MENU       = _UxGT("5. 批准网格");
+  LSTR MSG_UBL_6_FINE_TUNE_ALL            = _UxGT("6. 细调所有的");
+  LSTR MSG_UBL_7_SAVE_MESH                = _UxGT("7. 保存热床网格");
 
-  PROGMEM Language_Str MSG_LED_CONTROL                     = _UxGT("LED控制");     // "LED Control")
-  PROGMEM Language_Str MSG_LEDS                            = _UxGT("灯");     // "Lights")
-  PROGMEM Language_Str MSG_LED_PRESETS                     = _UxGT("灯预置");     // "Light Presets")
-  PROGMEM Language_Str MSG_SET_LEDS_RED                    = _UxGT("红");     // "Red")
-  PROGMEM Language_Str MSG_SET_LEDS_ORANGE                 = _UxGT("橙");     // "Orange")
-  PROGMEM Language_Str MSG_SET_LEDS_YELLOW                 = _UxGT("黄");     // "Yellow")
-  PROGMEM Language_Str MSG_SET_LEDS_GREEN                  = _UxGT("绿");     // "Green")
-  PROGMEM Language_Str MSG_SET_LEDS_BLUE                   = _UxGT("蓝");     // "Blue")
-  PROGMEM Language_Str MSG_SET_LEDS_INDIGO                 = _UxGT("青");     // "Indigo")
-  PROGMEM Language_Str MSG_SET_LEDS_VIOLET                 = _UxGT("紫");     // "Violet")
-  PROGMEM Language_Str MSG_SET_LEDS_WHITE                  = _UxGT("白");     // "White")
-  PROGMEM Language_Str MSG_SET_LEDS_DEFAULT                = _UxGT("缺省");     // "Default")
-  PROGMEM Language_Str MSG_CUSTOM_LEDS                     = _UxGT("定制灯");     // "Custom Lights")
-  PROGMEM Language_Str MSG_INTENSITY_R                     = _UxGT("红饱和度");     // "Red Intensity")
-  PROGMEM Language_Str MSG_INTENSITY_G                     = _UxGT("绿饱和度");     // "Green Intensity")
-  PROGMEM Language_Str MSG_INTENSITY_B                     = _UxGT("蓝饱和度");     // "Blue Intensity")
-  PROGMEM Language_Str MSG_INTENSITY_W                     = _UxGT("白饱和度");     // "White Intensity")
-  PROGMEM Language_Str MSG_LED_BRIGHTNESS                  = _UxGT("亮度");     // "Brightness")
+  LSTR MSG_LED_CONTROL                    = _UxGT("LED控制");     // "LED Control")
+  LSTR MSG_LEDS                           = _UxGT("灯");     // "Lights")
+  LSTR MSG_LED_PRESETS                    = _UxGT("灯预置");     // "Light Presets")
+  LSTR MSG_SET_LEDS_RED                   = _UxGT("红");     // "Red")
+  LSTR MSG_SET_LEDS_ORANGE                = _UxGT("橙");     // "Orange")
+  LSTR MSG_SET_LEDS_YELLOW                = _UxGT("黄");     // "Yellow")
+  LSTR MSG_SET_LEDS_GREEN                 = _UxGT("绿");     // "Green")
+  LSTR MSG_SET_LEDS_BLUE                  = _UxGT("蓝");     // "Blue")
+  LSTR MSG_SET_LEDS_INDIGO                = _UxGT("青");     // "Indigo")
+  LSTR MSG_SET_LEDS_VIOLET                = _UxGT("紫");     // "Violet")
+  LSTR MSG_SET_LEDS_WHITE                 = _UxGT("白");     // "White")
+  LSTR MSG_SET_LEDS_DEFAULT               = _UxGT("缺省");     // "Default")
+  LSTR MSG_CUSTOM_LEDS                    = _UxGT("定制灯");     // "Custom Lights")
+  LSTR MSG_INTENSITY_R                    = _UxGT("红饱和度");     // "Red Intensity")
+  LSTR MSG_INTENSITY_G                    = _UxGT("绿饱和度");     // "Green Intensity")
+  LSTR MSG_INTENSITY_B                    = _UxGT("蓝饱和度");     // "Blue Intensity")
+  LSTR MSG_INTENSITY_W                    = _UxGT("白饱和度");     // "White Intensity")
+  LSTR MSG_LED_BRIGHTNESS                 = _UxGT("亮度");     // "Brightness")
 
-  PROGMEM Language_Str MSG_MOVING                          = _UxGT("移动...");     // "Moving...")
-  PROGMEM Language_Str MSG_FREE_XY                         = _UxGT("释放 XY");     // "Free XY")
-  PROGMEM Language_Str MSG_MOVE_X                          = _UxGT("移动X");     // "Move X"
-  PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("移动Y");     // "Move Y"
-  PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("移动Z");     // "Move Z"
-  PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("挤出机");     // "Extruder"
-  PROGMEM Language_Str MSG_MOVE_EN                         = _UxGT("挤出机 *");     // "Extruder"
-  PROGMEM Language_Str MSG_HOTEND_TOO_COLD                 = _UxGT("热端太冷");
-  PROGMEM Language_Str MSG_MOVE_N_MM                       = _UxGT("移动 %s mm");     // "Move 0.025mm"
-  PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("移动 0.1 mm");     // "Move 0.1mm"
-  PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("移动 1 mm");     // "Move 1mm"
-  PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT("移动 10 mm");     // "Move 10mm"
-  PROGMEM Language_Str MSG_MOVE_100MM                      = _UxGT("移动 100 mm");     // "Move 100mm"
-  PROGMEM Language_Str MSG_SPEED                           = _UxGT("速率");     // "Speed"
-  PROGMEM Language_Str MSG_BED_Z                           = _UxGT("热床Z");     // "Bed Z"
-  PROGMEM Language_Str MSG_NOZZLE                          = _UxGT("喷嘴");     // "Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_N                        = _UxGT("喷嘴 ~");     // "Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_PARKED                   = _UxGT("喷嘴已停靠");
-  PROGMEM Language_Str MSG_NOZZLE_STANDBY                  = _UxGT("喷嘴待命中");
-  PROGMEM Language_Str MSG_BED                             = _UxGT("热床");     // "Bed"
-  PROGMEM Language_Str MSG_CHAMBER                         = _UxGT("机箱壳");
-  PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("风扇速率");     // "Fan speed"
-  PROGMEM Language_Str MSG_FAN_SPEED_N                     = _UxGT("风扇速率 ~");     // "Fan speed"
-  PROGMEM Language_Str MSG_STORED_FAN_N                    = _UxGT("存储的风扇 ~");
-  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED                 = _UxGT("额外风扇速率");     // "Extra fan speed"
-  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_N               = _UxGT("额外风扇速率 ~");     // "Extra fan speed"
-  PROGMEM Language_Str MSG_CONTROLLER_FAN                  = _UxGT("控制器风扇");
-  PROGMEM Language_Str MSG_CONTROLLER_FAN_IDLE_SPEED       = _UxGT("空闲速度");
-  PROGMEM Language_Str MSG_CONTROLLER_FAN_AUTO_ON          = _UxGT("自动模式");
-  PROGMEM Language_Str MSG_CONTROLLER_FAN_SPEED            = _UxGT("工作速度");
-  PROGMEM Language_Str MSG_CONTROLLER_FAN_DURATION         = _UxGT("空闲周期");
-  PROGMEM Language_Str MSG_FLOW                            = _UxGT("挤出速率");     // "Flow"
-  PROGMEM Language_Str MSG_FLOW_N                          = _UxGT("挤出速率 ~");     // "Flow"
-  PROGMEM Language_Str MSG_CONTROL                         = _UxGT("控制");     // "Control"
-  PROGMEM Language_Str MSG_MIN                             = " " LCD_STR_THERMOMETER _UxGT(" 最小");     // " " LCD_STR_THERMOMETER " Min"
-  PROGMEM Language_Str MSG_MAX                             = " " LCD_STR_THERMOMETER _UxGT(" 最大");     // " " LCD_STR_THERMOMETER " Max"
-  PROGMEM Language_Str MSG_FACTOR                          = " " LCD_STR_THERMOMETER _UxGT(" 因数");     // " " LCD_STR_THERMOMETER " Fact"
-  PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("自动控温");     // "Autotemp"
-  PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("开");     // "On"
-  PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("关");     // "Off"
-  PROGMEM Language_Str MSG_PID_AUTOTUNE                    = _UxGT("自动PID");
-  PROGMEM Language_Str MSG_PID_AUTOTUNE_E                  = _UxGT("自动PID *");
-  PROGMEM Language_Str MSG_PID_AUTOTUNE_DONE               = _UxGT("PID调整完成");
-  PROGMEM Language_Str MSG_PID_BAD_EXTRUDER_NUM            = _UxGT("自动调失败. 坏的挤出机");
-  PROGMEM Language_Str MSG_PID_TEMP_TOO_HIGH               = _UxGT("自动调失败. 温度太高");
-  PROGMEM Language_Str MSG_PID_TIMEOUT                     = _UxGT("自动调失败! 超时");
-  PROGMEM Language_Str MSG_SELECT                          = _UxGT("选择");     // "Select"
-  PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("选择 *");
-  PROGMEM Language_Str MSG_ACC                             = _UxGT("加速度");     // "Accel" acceleration
-  PROGMEM Language_Str MSG_JERK                            = _UxGT("抖动速率");     // "Jerk"
-  PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("轴抖动速率") LCD_STR_A;     // "Va-jerk"
-  PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("轴抖动速率") LCD_STR_B;     // "Vb-jerk"
-  PROGMEM Language_Str MSG_VC_JERK                         = _UxGT("轴抖动速率") LCD_STR_C;     // "Vc-jerk"
-  PROGMEM Language_Str MSG_VI_JERK                         = _UxGT("轴抖动速率") LCD_STR_I;     // "Vi-jerk"
-  PROGMEM Language_Str MSG_VJ_JERK                         = _UxGT("轴抖动速率") LCD_STR_J;     // "Vj-jerk"
-  PROGMEM Language_Str MSG_VK_JERK                         = _UxGT("轴抖动速率") LCD_STR_K;     // "Vk-jerk"
-  PROGMEM Language_Str MSG_VE_JERK                         = _UxGT("挤出机抖动速率");     // "Ve-jerk"
-  PROGMEM Language_Str MSG_JUNCTION_DEVIATION              = _UxGT("接点差");
-  PROGMEM Language_Str MSG_VELOCITY                        = _UxGT("速度");     // "Velocity"
-  PROGMEM Language_Str MSG_VMAX_A                          = _UxGT("最大进料速率") LCD_STR_A;     // "Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("最大进料速率") LCD_STR_B;
-  PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("最大进料速率") LCD_STR_C;
-  PROGMEM Language_Str MSG_VMAX_I                          = _UxGT("最大进料速率") LCD_STR_I;
-  PROGMEM Language_Str MSG_VMAX_J                          = _UxGT("最大进料速率") LCD_STR_J;
-  PROGMEM Language_Str MSG_VMAX_K                          = _UxGT("最大进料速率") LCD_STR_K;
-  PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("最大进料速率") LCD_STR_E;
-  PROGMEM Language_Str MSG_VMAX_EN                         = _UxGT("最大进料速率 *");
-  PROGMEM Language_Str MSG_VMIN                            = _UxGT("最小进料速率");     // "Vmin"  min_feedrate_mm_s
-  PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("最小移动速率");     // "VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
-  PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("加速度");     // "Acceleration"
-  PROGMEM Language_Str MSG_AMAX_A                          = _UxGT("最大打印加速度") LCD_STR_A;     // "Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_B                          = _UxGT("最大打印加速度") LCD_STR_B;
-  PROGMEM Language_Str MSG_AMAX_C                          = _UxGT("最大打印加速度") LCD_STR_C;
-  PROGMEM Language_Str MSG_AMAX_I                          = _UxGT("最大打印加速度") LCD_STR_I;
-  PROGMEM Language_Str MSG_AMAX_J                          = _UxGT("最大打印加速度") LCD_STR_J;
-  PROGMEM Language_Str MSG_AMAX_K                          = _UxGT("最大打印加速度") LCD_STR_K;
-  PROGMEM Language_Str MSG_AMAX_E                          = _UxGT("最大打印加速度") LCD_STR_E;
-  PROGMEM Language_Str MSG_AMAX_EN                         = _UxGT("最大打印加速度 *");
-  PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("收进加速度");     // "A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
-  PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("非打印移动加速度");     // "A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
-  PROGMEM Language_Str MSG_XY_FREQUENCY_LIMIT              = _UxGT("频率最大");
-  PROGMEM Language_Str MSG_XY_FREQUENCY_FEEDRATE           = _UxGT("进给速度");
-  PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("轴步数/mm");     // "Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
-  PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT(" 步数/mm");     // "Asteps/mm"
-  PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT(" 步数/mm");
-  PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT(" 步数/mm");
-  PROGMEM Language_Str MSG_I_STEPS                         = LCD_STR_I _UxGT(" 步数/mm");
-  PROGMEM Language_Str MSG_J_STEPS                         = LCD_STR_J _UxGT(" 步数/mm");
-  PROGMEM Language_Str MSG_K_STEPS                         = LCD_STR_K _UxGT(" 步数/mm");
-  PROGMEM Language_Str MSG_E_STEPS                         = _UxGT("E 步数/mm");     // "Esteps/mm"
-  PROGMEM Language_Str MSG_EN_STEPS                        = _UxGT("* 步数/mm");
-  PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("温度");     // "Temperature"
-  PROGMEM Language_Str MSG_MOTION                          = _UxGT("运动");     // "Motion"
-  PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("料丝");     // "Filament" menu_advanced_filament
-  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E 在 mm") SUPERSCRIPT_THREE;     // "E in mm3" volumetric_enabled
-  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT                = _UxGT("E 限制 在 mm") SUPERSCRIPT_THREE;
-  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT_E              = _UxGT("E 限制 *");
-  PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("丝料直径");     // "Fil. Dia."
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("丝料直径 *");
-  PROGMEM Language_Str MSG_FILAMENT_UNLOAD                 = _UxGT("卸载 mm");     // "Unload mm"
-  PROGMEM Language_Str MSG_FILAMENT_LOAD                   = _UxGT("装载 mm");     // "Load mm"
-  PROGMEM Language_Str MSG_ADVANCE_K                       = _UxGT("Advance K");
-  PROGMEM Language_Str MSG_ADVANCE_K_E                     = _UxGT("Advance K *");
-  PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD对比度");     // "LCD contrast"
-  PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("保存设置");     // "Store memory"
-  PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("装载设置");     // "Load memory"
-  PROGMEM Language_Str MSG_RESTORE_DEFAULTS                = _UxGT("恢复安全值");     // "Restore Defaults"
-  PROGMEM Language_Str MSG_INIT_EEPROM                     = _UxGT("初始化设置");     // "Initialize EEPROM"
-  PROGMEM Language_Str MSG_ERR_EEPROM_CRC                  = _UxGT("EEPROM CRC 错误");
-  PROGMEM Language_Str MSG_ERR_EEPROM_INDEX                = _UxGT("EEPROM Index 错误");
-  PROGMEM Language_Str MSG_ERR_EEPROM_VERSION              = _UxGT("EEPROM Version 错误");
-  PROGMEM Language_Str MSG_SETTINGS_STORED                 = _UxGT("设置已保存");
-  PROGMEM Language_Str MSG_MEDIA_UPDATE                    = _UxGT("存储器更新");
-  PROGMEM Language_Str MSG_RESET_PRINTER                   = _UxGT("复位打印机");
-  PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH _UxGT("刷新");
-  PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("信息屏");     // "Info screen"
-  PROGMEM Language_Str MSG_PREPARE                         = _UxGT("准备");     // "Prepare"
-  PROGMEM Language_Str MSG_TUNE                            = _UxGT("调整");     // "Tune"
-  PROGMEM Language_Str MSG_POWER_MONITOR                   = _UxGT("电源监控");
-  PROGMEM Language_Str MSG_CURRENT                         = _UxGT("电流");
-  PROGMEM Language_Str MSG_VOLTAGE                         = _UxGT("电压");
-  PROGMEM Language_Str MSG_POWER                           = _UxGT("功率");
-  PROGMEM Language_Str MSG_START_PRINT                     = _UxGT("开始打印");
-  PROGMEM Language_Str MSG_BUTTON_NEXT                     = _UxGT("下一个");
-  PROGMEM Language_Str MSG_BUTTON_INIT                     = _UxGT("初始");
-  PROGMEM Language_Str MSG_BUTTON_STOP                     = _UxGT("停止");
-  PROGMEM Language_Str MSG_BUTTON_PRINT                    = _UxGT("打印");
-  PROGMEM Language_Str MSG_BUTTON_RESET                    = _UxGT("复位");
-  PROGMEM Language_Str MSG_BUTTON_IGNORE                   = _UxGT("忽略");
-  PROGMEM Language_Str MSG_BUTTON_CANCEL                   = _UxGT("取消");
-  PROGMEM Language_Str MSG_BUTTON_DONE                     = _UxGT("完成");
-  PROGMEM Language_Str MSG_BUTTON_BACK                     = _UxGT("返回");
-  PROGMEM Language_Str MSG_BUTTON_PROCEED                  = _UxGT("继续");
-  PROGMEM Language_Str MSG_PAUSING                         = _UxGT("暂停中...");
-  PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("暂停打印");     // "Pause print"
-  PROGMEM Language_Str MSG_RESUME_PRINT                    = _UxGT("恢复打印");     // "Resume print"
-  PROGMEM Language_Str MSG_STOP_PRINT                      = _UxGT("停止打印");     // "Stop print"
-  PROGMEM Language_Str MSG_PRINTING_OBJECT                 = _UxGT("打印物体");
-  PROGMEM Language_Str MSG_CANCEL_OBJECT                   = _UxGT("取消物体");
-  PROGMEM Language_Str MSG_CANCEL_OBJECT_N                 = _UxGT("取消物体 =");
-  PROGMEM Language_Str MSG_OUTAGE_RECOVERY                 = _UxGT("中断恢复");
-  PROGMEM Language_Str MSG_MEDIA_MENU                      = _UxGT("从存储卡上打印");     // "Print from SD"
-  PROGMEM Language_Str MSG_NO_MEDIA                        = _UxGT("无存储卡");     // "No SD card"
-  PROGMEM Language_Str MSG_DWELL                           = _UxGT("休眠中 ...");     // "Sleep..."
-  PROGMEM Language_Str MSG_USERWAIT                        = _UxGT("点击继续 ...");     // "Click to resume..."
-  PROGMEM Language_Str MSG_PRINT_PAUSED                    = _UxGT("暫停打印");     // "Print paused"
-  PROGMEM Language_Str MSG_PRINTING                        = _UxGT("打印中...");
-  PROGMEM Language_Str MSG_PRINT_ABORTED                   = _UxGT("已取消打印");     // "Print aborted"
-  PROGMEM Language_Str MSG_PRINT_DONE                      = _UxGT("打印已完成");
-  PROGMEM Language_Str MSG_NO_MOVE                         = _UxGT("无移动");     // "No move."
-  PROGMEM Language_Str MSG_KILLED                          = _UxGT("已杀掉");     // "KILLED. "
-  PROGMEM Language_Str MSG_STOPPED                         = _UxGT("已停止");     // "STOPPED. "
-  PROGMEM Language_Str MSG_CONTROL_RETRACT                 = _UxGT("回抽长度mm");     // "Retract mm" retract_length, retract length (positive mm)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_SWAP            = _UxGT("换手回抽长度mm");     // "Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
-  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("回抽速率mm/s");     // "Retract V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_ZHOP            = _UxGT("Hop mm");     // "Hop mm" retract_zraise, retract Z-lift
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("回抽恢复长度mm");     // "UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("换手回抽恢复长度mm");     // "S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("回抽恢复后进料速率mm/s");     // "Unretract V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAPF   = _UxGT("S UnRet V");     // "S UnRet V"
-  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("自动抽回");     // "Auto-Retract" autoretract_enabled,
-  PROGMEM Language_Str MSG_FILAMENT_SWAP_LENGTH            = _UxGT("交换长度");
-  PROGMEM Language_Str MSG_FILAMENT_SWAP_EXTRA             = _UxGT("额外的交换");
-  PROGMEM Language_Str MSG_FILAMENT_PURGE_LENGTH           = _UxGT("清洗长度");
-  PROGMEM Language_Str MSG_TOOL_CHANGE                     = _UxGT("换工具");
-  PROGMEM Language_Str MSG_TOOL_CHANGE_ZLIFT               = _UxGT("Z抬起");
-  PROGMEM Language_Str MSG_SINGLENOZZLE_PRIME_SPEED        = _UxGT("进给速度");
-  PROGMEM Language_Str MSG_SINGLENOZZLE_RETRACT_SPEED      = _UxGT("回抽速度");
-  PROGMEM Language_Str MSG_FILAMENT_PARK_ENABLED           = _UxGT("停靠头");
-  PROGMEM Language_Str MSG_SINGLENOZZLE_UNRETRACT_SPEED    = _UxGT("恢复速度");
-  PROGMEM Language_Str MSG_SINGLENOZZLE_FAN_SPEED          = _UxGT("风扇速度");
-  PROGMEM Language_Str MSG_SINGLENOZZLE_FAN_TIME           = _UxGT("风扇时间");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION_ON               = _UxGT("自动开");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION_OFF              = _UxGT("自动关");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION                  = _UxGT("工具迁移");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION_AUTO             = _UxGT("自动迁移");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION_END              = _UxGT("上一个挤出机");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION_SWAP             = _UxGT("迁移至 *");
-  PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("更换丝料");     // "Change filament"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE_E                = _UxGT("更换丝料 *");     // "Change filament"
-  PROGMEM Language_Str MSG_FILAMENTLOAD                    = _UxGT("装载丝料");     // "Load filament"
-  PROGMEM Language_Str MSG_FILAMENTLOAD_E                  = _UxGT("装载丝料 *");     // "Load filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD                  = _UxGT("卸载丝料");     // "Unload filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E                = _UxGT("卸载丝料 *");     // "Unload filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD_ALL              = _UxGT("卸载全部");     // "Unload All"
-  PROGMEM Language_Str MSG_ATTACH_MEDIA                    = _UxGT("初始化存储卡");     // "Init. SD card"
-  PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("更换存储卡");     // "Change SD card"
-  PROGMEM Language_Str MSG_RELEASE_MEDIA                   = _UxGT("释放存储卡");
-  PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z探针在热床之外");     // "Z probe out. bed" Z probe is not within the physical limits
-  PROGMEM Language_Str MSG_SKEW_FACTOR                     = _UxGT("偏斜因数");     // "Skew Factor"
-  PROGMEM Language_Str MSG_BLTOUCH                         = _UxGT("BLTouch");     // "BLTouch"
-  PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("自检");
-  PROGMEM Language_Str MSG_BLTOUCH_RESET                   = _UxGT("重置");
-  PROGMEM Language_Str MSG_BLTOUCH_STOW                    = _UxGT("装载");
-  PROGMEM Language_Str MSG_BLTOUCH_DEPLOY                  = _UxGT("部署");
-  PROGMEM Language_Str MSG_BLTOUCH_SW_MODE                 = _UxGT("SW模式");
-  PROGMEM Language_Str MSG_BLTOUCH_5V_MODE                 = _UxGT("5V模式");
-  PROGMEM Language_Str MSG_BLTOUCH_OD_MODE                 = _UxGT("OD模式");
-  PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE              = _UxGT("模式保存");
-  PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE_5V           = _UxGT("设置BLTouch为5V");
-  PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE_OD           = _UxGT("设置BLTouch为OD");
-  PROGMEM Language_Str MSG_BLTOUCH_MODE_ECHO               = _UxGT("报告开漏");
-  PROGMEM Language_Str MSG_BLTOUCH_MODE_CHANGE             = _UxGT("危险: 错误的设置将引起损坏! 是否继续?");
-  PROGMEM Language_Str MSG_TOUCHMI_PROBE                   = _UxGT("TouchMI");
-  PROGMEM Language_Str MSG_TOUCHMI_INIT                    = _UxGT("初始化TouchMI");
-  PROGMEM Language_Str MSG_TOUCHMI_ZTEST                   = _UxGT("Z偏移量测试");
-  PROGMEM Language_Str MSG_TOUCHMI_SAVE                    = _UxGT("保存");
-  PROGMEM Language_Str MSG_MANUAL_DEPLOY_TOUCHMI           = _UxGT("部署TouchMI");
-  PROGMEM Language_Str MSG_MANUAL_DEPLOY                   = _UxGT("部署Z探针");
-  PROGMEM Language_Str MSG_MANUAL_STOW                     = _UxGT("收好Z探针");
-  PROGMEM Language_Str MSG_HOME_FIRST                      = _UxGT("归位 %s%s%s 先");     // "Home ... first"
-  PROGMEM Language_Str MSG_ZPROBE_OFFSETS                  = _UxGT("探针偏移量");
-  PROGMEM Language_Str MSG_ZPROBE_XOFFSET                  = _UxGT("探针X偏移");
-  PROGMEM Language_Str MSG_ZPROBE_YOFFSET                  = _UxGT("探针Y偏移");
-  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("探针Z偏移");     // "Z Offset"
-  PROGMEM Language_Str MSG_BABYSTEP_X                      = _UxGT("微量调整X轴");     // "Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
-  PROGMEM Language_Str MSG_BABYSTEP_Y                      = _UxGT("微量调整Y轴");     // "Babystep Y"
-  PROGMEM Language_Str MSG_BABYSTEP_Z                      = _UxGT("微量调整Z轴");     // "Babystep Z"
-  PROGMEM Language_Str MSG_BABYSTEP_TOTAL                  = _UxGT("总计");
-  PROGMEM Language_Str MSG_ENDSTOP_ABORT                   = _UxGT("挡块终止");     // "Endstop abort"
-  PROGMEM Language_Str MSG_HEATING_FAILED_LCD              = _UxGT("加热失败");     // "Heating failed"
-  PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("错误：冗余温度");     // "Err: REDUNDANT TEMP"
-  PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("温控失控");     // "THERMAL RUNAWAY"
-  PROGMEM Language_Str MSG_THERMAL_RUNAWAY_BED             = _UxGT("热床热量失控");
-  PROGMEM Language_Str MSG_THERMAL_RUNAWAY_CHAMBER         = _UxGT("机箱热量失控");
-  PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("错误：最高温度");     // "Err: MAXTEMP"
-  PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("错误：最低温度");     // "Err: MINTEMP"
-  PROGMEM Language_Str MSG_HALTED                          = _UxGT("打印停机");     // "PRINTER HALTED"
-  PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("请重置");     // "Please reset"
-  PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("天");     // "d" // One character only
-  PROGMEM Language_Str MSG_SHORT_HOUR                      = _UxGT("时");     // "h" // One character only
-  PROGMEM Language_Str MSG_SHORT_MINUTE                    = _UxGT("分");     // "m" // One character only
-  PROGMEM Language_Str MSG_HEATING                         = _UxGT("加热中 ...");     // "Heating..."
-  PROGMEM Language_Str MSG_COOLING                         = _UxGT("冷却中 ...");
-  PROGMEM Language_Str MSG_BED_HEATING                     = _UxGT("加热热床中 ...");     // "Bed Heating..."
-  PROGMEM Language_Str MSG_BED_COOLING                     = _UxGT("热床冷却中 ...");
-  PROGMEM Language_Str MSG_CHAMBER_HEATING                 = _UxGT("机箱加热中 ...");
-  PROGMEM Language_Str MSG_CHAMBER_COOLING                 = _UxGT("机箱冷却中 ...");
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE                 = _UxGT("⊿校准");     // "Delta Calibration"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_X               = _UxGT("⊿校准X");     // "Calibrate X"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Y               = _UxGT("⊿校准Y");     // "Calibrate Y"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Z               = _UxGT("⊿校准Z");     // "Calibrate Z"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_CENTER          = _UxGT("⊿校准中心");     // "Calibrate Center"
-  PROGMEM Language_Str MSG_DELTA_SETTINGS                  = _UxGT("⊿设置");     // "Delta Settings"
-  PROGMEM Language_Str MSG_DELTA_AUTO_CALIBRATE            = _UxGT("⊿自动校准");     // "Auto Calibration"
-  PROGMEM Language_Str MSG_DELTA_HEIGHT_CALIBRATE          = _UxGT("设置⊿高度");     // "Set Delta Height"
-  PROGMEM Language_Str MSG_DELTA_Z_OFFSET_CALIBRATE        = _UxGT("探针Z偏移量");
-  PROGMEM Language_Str MSG_DELTA_DIAG_ROD                  = _UxGT("⊿斜柱");     // "Diag Rod"
-  PROGMEM Language_Str MSG_DELTA_HEIGHT                    = _UxGT("⊿高度");     // "Height"
-  PROGMEM Language_Str MSG_DELTA_RADIUS                    = _UxGT("⊿半径");     // "Radius"
-  PROGMEM Language_Str MSG_INFO_MENU                       = _UxGT("关于打印机");     // "About Printer"
-  PROGMEM Language_Str MSG_INFO_PRINTER_MENU               = _UxGT("打印机信息");     // "Printer Info"
-  PROGMEM Language_Str MSG_3POINT_LEVELING                 = _UxGT("三点调平");     // "3-Point Leveling"
-  PROGMEM Language_Str MSG_LINEAR_LEVELING                 = _UxGT("线性调平");     // "Linear Leveling"
-  PROGMEM Language_Str MSG_BILINEAR_LEVELING               = _UxGT("双线性调平");     // "Bilinear Leveling"
-  PROGMEM Language_Str MSG_UBL_LEVELING                    = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
-  PROGMEM Language_Str MSG_MESH_LEVELING                   = _UxGT("网格调平");     // "Mesh Leveling"
-  PROGMEM Language_Str MSG_INFO_STATS_MENU                 = _UxGT("打印机统计");     // "Printer Stats"
-  PROGMEM Language_Str MSG_INFO_BOARD_MENU                 = _UxGT("主板信息");     // "Board Info"
-  PROGMEM Language_Str MSG_INFO_THERMISTOR_MENU            = _UxGT("温度计");     // "Thermistors"
-  PROGMEM Language_Str MSG_INFO_EXTRUDERS                  = _UxGT("挤出机");     // "Extruders"
-  PROGMEM Language_Str MSG_INFO_BAUDRATE                   = _UxGT("波特率");     // "Baud"
-  PROGMEM Language_Str MSG_INFO_PROTOCOL                   = _UxGT("协议");     // "Protocol"
-  PROGMEM Language_Str MSG_INFO_RUNAWAY_OFF                = _UxGT("监控温度失控:关");
-  PROGMEM Language_Str MSG_INFO_RUNAWAY_ON                 = _UxGT("监控温度失控:开");
-  PROGMEM Language_Str MSG_HOTEND_IDLE_TIMEOUT             = _UxGT("热端空闲超时");
+  LSTR MSG_MOVING                         = _UxGT("移动...");     // "Moving...")
+  LSTR MSG_FREE_XY                        = _UxGT("释放 XY");     // "Free XY")
+  LSTR MSG_MOVE_X                         = _UxGT("移动X");     // "Move X"
+  LSTR MSG_MOVE_Y                         = _UxGT("移动Y");     // "Move Y"
+  LSTR MSG_MOVE_Z                         = _UxGT("移动Z");     // "Move Z"
+  LSTR MSG_MOVE_E                         = _UxGT("挤出机");     // "Extruder"
+  LSTR MSG_MOVE_EN                        = _UxGT("挤出机 *");     // "Extruder"
+  LSTR MSG_HOTEND_TOO_COLD                = _UxGT("热端太冷");
+  LSTR MSG_MOVE_N_MM                      = _UxGT("移动 %s mm");     // "Move 0.025mm"
+  LSTR MSG_MOVE_01MM                      = _UxGT("移动 0.1 mm");     // "Move 0.1mm"
+  LSTR MSG_MOVE_1MM                       = _UxGT("移动 1 mm");     // "Move 1mm"
+  LSTR MSG_MOVE_10MM                      = _UxGT("移动 10 mm");     // "Move 10mm"
+  LSTR MSG_MOVE_100MM                     = _UxGT("移动 100 mm");     // "Move 100mm"
+  LSTR MSG_SPEED                          = _UxGT("速率");     // "Speed"
+  LSTR MSG_BED_Z                          = _UxGT("热床Z");     // "Bed Z"
+  LSTR MSG_NOZZLE                         = _UxGT("喷嘴");     // "Nozzle" 噴嘴
+  LSTR MSG_NOZZLE_N                       = _UxGT("喷嘴 ~");     // "Nozzle" 噴嘴
+  LSTR MSG_NOZZLE_PARKED                  = _UxGT("喷嘴已停靠");
+  LSTR MSG_NOZZLE_STANDBY                 = _UxGT("喷嘴待命中");
+  LSTR MSG_BED                            = _UxGT("热床");     // "Bed"
+  LSTR MSG_CHAMBER                        = _UxGT("机箱壳");
+  LSTR MSG_FAN_SPEED                      = _UxGT("风扇速率");     // "Fan speed"
+  LSTR MSG_FAN_SPEED_N                    = _UxGT("风扇速率 ~");     // "Fan speed"
+  LSTR MSG_STORED_FAN_N                   = _UxGT("存储的风扇 ~");
+  LSTR MSG_EXTRA_FAN_SPEED                = _UxGT("额外风扇速率");     // "Extra fan speed"
+  LSTR MSG_EXTRA_FAN_SPEED_N              = _UxGT("额外风扇速率 ~");     // "Extra fan speed"
+  LSTR MSG_CONTROLLER_FAN                 = _UxGT("控制器风扇");
+  LSTR MSG_CONTROLLER_FAN_IDLE_SPEED      = _UxGT("空闲速度");
+  LSTR MSG_CONTROLLER_FAN_AUTO_ON         = _UxGT("自动模式");
+  LSTR MSG_CONTROLLER_FAN_SPEED           = _UxGT("工作速度");
+  LSTR MSG_CONTROLLER_FAN_DURATION        = _UxGT("空闲周期");
+  LSTR MSG_FLOW                           = _UxGT("挤出速率");     // "Flow"
+  LSTR MSG_FLOW_N                         = _UxGT("挤出速率 ~");     // "Flow"
+  LSTR MSG_CONTROL                        = _UxGT("控制");     // "Control"
+  LSTR MSG_MIN                            = " " LCD_STR_THERMOMETER _UxGT(" 最小");     // " " LCD_STR_THERMOMETER " Min"
+  LSTR MSG_MAX                            = " " LCD_STR_THERMOMETER _UxGT(" 最大");     // " " LCD_STR_THERMOMETER " Max"
+  LSTR MSG_FACTOR                         = " " LCD_STR_THERMOMETER _UxGT(" 因数");     // " " LCD_STR_THERMOMETER " Fact"
+  LSTR MSG_AUTOTEMP                       = _UxGT("自动控温");     // "Autotemp"
+  LSTR MSG_LCD_ON                         = _UxGT("开");     // "On"
+  LSTR MSG_LCD_OFF                        = _UxGT("关");     // "Off"
+  LSTR MSG_PID_AUTOTUNE                   = _UxGT("自动PID");
+  LSTR MSG_PID_AUTOTUNE_E                 = _UxGT("自动PID *");
+  LSTR MSG_PID_AUTOTUNE_DONE              = _UxGT("PID调整完成");
+  LSTR MSG_PID_BAD_EXTRUDER_NUM           = _UxGT("自动调失败. 坏的挤出机");
+  LSTR MSG_PID_TEMP_TOO_HIGH              = _UxGT("自动调失败. 温度太高");
+  LSTR MSG_PID_TIMEOUT                    = _UxGT("自动调失败! 超时");
+  LSTR MSG_SELECT                         = _UxGT("选择");     // "Select"
+  LSTR MSG_SELECT_E                       = _UxGT("选择 *");
+  LSTR MSG_ACC                            = _UxGT("加速度");     // "Accel" acceleration
+  LSTR MSG_JERK                           = _UxGT("抖动速率");     // "Jerk"
+  LSTR MSG_VA_JERK                        = _UxGT("轴抖动速率") LCD_STR_A;     // "Va-jerk"
+  LSTR MSG_VB_JERK                        = _UxGT("轴抖动速率") LCD_STR_B;     // "Vb-jerk"
+  LSTR MSG_VC_JERK                        = _UxGT("轴抖动速率") LCD_STR_C;     // "Vc-jerk"
+  LSTR MSG_VI_JERK                        = _UxGT("轴抖动速率") LCD_STR_I;     // "Vi-jerk"
+  LSTR MSG_VJ_JERK                        = _UxGT("轴抖动速率") LCD_STR_J;     // "Vj-jerk"
+  LSTR MSG_VK_JERK                        = _UxGT("轴抖动速率") LCD_STR_K;     // "Vk-jerk"
+  LSTR MSG_VE_JERK                        = _UxGT("挤出机抖动速率");     // "Ve-jerk"
+  LSTR MSG_JUNCTION_DEVIATION             = _UxGT("接点差");
+  LSTR MSG_VELOCITY                       = _UxGT("速度");     // "Velocity"
+  LSTR MSG_VMAX_A                         = _UxGT("最大进料速率") LCD_STR_A;     // "Vmax " max_feedrate_mm_s
+  LSTR MSG_VMAX_B                         = _UxGT("最大进料速率") LCD_STR_B;
+  LSTR MSG_VMAX_C                         = _UxGT("最大进料速率") LCD_STR_C;
+  LSTR MSG_VMAX_I                         = _UxGT("最大进料速率") LCD_STR_I;
+  LSTR MSG_VMAX_J                         = _UxGT("最大进料速率") LCD_STR_J;
+  LSTR MSG_VMAX_K                         = _UxGT("最大进料速率") LCD_STR_K;
+  LSTR MSG_VMAX_E                         = _UxGT("最大进料速率") LCD_STR_E;
+  LSTR MSG_VMAX_EN                        = _UxGT("最大进料速率 *");
+  LSTR MSG_VMIN                           = _UxGT("最小进料速率");     // "Vmin"  min_feedrate_mm_s
+  LSTR MSG_VTRAV_MIN                      = _UxGT("最小移动速率");     // "VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
+  LSTR MSG_ACCELERATION                   = _UxGT("加速度");     // "Acceleration"
+  LSTR MSG_AMAX_A                         = _UxGT("最大打印加速度") LCD_STR_A;     // "Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  LSTR MSG_AMAX_B                         = _UxGT("最大打印加速度") LCD_STR_B;
+  LSTR MSG_AMAX_C                         = _UxGT("最大打印加速度") LCD_STR_C;
+  LSTR MSG_AMAX_I                         = _UxGT("最大打印加速度") LCD_STR_I;
+  LSTR MSG_AMAX_J                         = _UxGT("最大打印加速度") LCD_STR_J;
+  LSTR MSG_AMAX_K                         = _UxGT("最大打印加速度") LCD_STR_K;
+  LSTR MSG_AMAX_E                         = _UxGT("最大打印加速度") LCD_STR_E;
+  LSTR MSG_AMAX_EN                        = _UxGT("最大打印加速度 *");
+  LSTR MSG_A_RETRACT                      = _UxGT("收进加速度");     // "A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
+  LSTR MSG_A_TRAVEL                       = _UxGT("非打印移动加速度");     // "A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
+  LSTR MSG_XY_FREQUENCY_LIMIT             = _UxGT("频率最大");
+  LSTR MSG_XY_FREQUENCY_FEEDRATE          = _UxGT("进给速度");
+  LSTR MSG_STEPS_PER_MM                   = _UxGT("轴步数/mm");     // "Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
+  LSTR MSG_A_STEPS                        = LCD_STR_A _UxGT(" 步数/mm");     // "Asteps/mm"
+  LSTR MSG_B_STEPS                        = LCD_STR_B _UxGT(" 步数/mm");
+  LSTR MSG_C_STEPS                        = LCD_STR_C _UxGT(" 步数/mm");
+  LSTR MSG_I_STEPS                        = LCD_STR_I _UxGT(" 步数/mm");
+  LSTR MSG_J_STEPS                        = LCD_STR_J _UxGT(" 步数/mm");
+  LSTR MSG_K_STEPS                        = LCD_STR_K _UxGT(" 步数/mm");
+  LSTR MSG_E_STEPS                        = _UxGT("E 步数/mm");     // "Esteps/mm"
+  LSTR MSG_EN_STEPS                       = _UxGT("* 步数/mm");
+  LSTR MSG_TEMPERATURE                    = _UxGT("温度");     // "Temperature"
+  LSTR MSG_MOTION                         = _UxGT("运动");     // "Motion"
+  LSTR MSG_FILAMENT                       = _UxGT("料丝");     // "Filament" menu_advanced_filament
+  LSTR MSG_VOLUMETRIC_ENABLED             = _UxGT("E 在 mm") SUPERSCRIPT_THREE;     // "E in mm3" volumetric_enabled
+  LSTR MSG_VOLUMETRIC_LIMIT               = _UxGT("E 限制 在 mm") SUPERSCRIPT_THREE;
+  LSTR MSG_VOLUMETRIC_LIMIT_E             = _UxGT("E 限制 *");
+  LSTR MSG_FILAMENT_DIAM                  = _UxGT("丝料直径");     // "Fil. Dia."
+  LSTR MSG_FILAMENT_DIAM_E                = _UxGT("丝料直径 *");
+  LSTR MSG_FILAMENT_UNLOAD                = _UxGT("卸载 mm");     // "Unload mm"
+  LSTR MSG_FILAMENT_LOAD                  = _UxGT("装载 mm");     // "Load mm"
+  LSTR MSG_ADVANCE_K                      = _UxGT("Advance K");
+  LSTR MSG_ADVANCE_K_E                    = _UxGT("Advance K *");
+  LSTR MSG_CONTRAST                       = _UxGT("LCD对比度");     // "LCD contrast"
+  LSTR MSG_STORE_EEPROM                   = _UxGT("保存设置");     // "Store memory"
+  LSTR MSG_LOAD_EEPROM                    = _UxGT("装载设置");     // "Load memory"
+  LSTR MSG_RESTORE_DEFAULTS               = _UxGT("恢复安全值");     // "Restore Defaults"
+  LSTR MSG_INIT_EEPROM                    = _UxGT("初始化设置");     // "Initialize EEPROM"
+  LSTR MSG_ERR_EEPROM_CRC                 = _UxGT("EEPROM CRC 错误");
+  LSTR MSG_ERR_EEPROM_INDEX               = _UxGT("EEPROM Index 错误");
+  LSTR MSG_ERR_EEPROM_VERSION             = _UxGT("EEPROM Version 错误");
+  LSTR MSG_SETTINGS_STORED                = _UxGT("设置已保存");
+  LSTR MSG_MEDIA_UPDATE                   = _UxGT("存储器更新");
+  LSTR MSG_RESET_PRINTER                  = _UxGT("复位打印机");
+  LSTR MSG_REFRESH                        = LCD_STR_REFRESH _UxGT("刷新");
+  LSTR MSG_INFO_SCREEN                    = _UxGT("信息屏");     // "Info screen"
+  LSTR MSG_PREPARE                        = _UxGT("准备");     // "Prepare"
+  LSTR MSG_TUNE                           = _UxGT("调整");     // "Tune"
+  LSTR MSG_POWER_MONITOR                  = _UxGT("电源监控");
+  LSTR MSG_CURRENT                        = _UxGT("电流");
+  LSTR MSG_VOLTAGE                        = _UxGT("电压");
+  LSTR MSG_POWER                          = _UxGT("功率");
+  LSTR MSG_START_PRINT                    = _UxGT("开始打印");
+  LSTR MSG_BUTTON_NEXT                    = _UxGT("下一个");
+  LSTR MSG_BUTTON_INIT                    = _UxGT("初始");
+  LSTR MSG_BUTTON_STOP                    = _UxGT("停止");
+  LSTR MSG_BUTTON_PRINT                   = _UxGT("打印");
+  LSTR MSG_BUTTON_RESET                   = _UxGT("复位");
+  LSTR MSG_BUTTON_IGNORE                  = _UxGT("忽略");
+  LSTR MSG_BUTTON_CANCEL                  = _UxGT("取消");
+  LSTR MSG_BUTTON_DONE                    = _UxGT("完成");
+  LSTR MSG_BUTTON_BACK                    = _UxGT("返回");
+  LSTR MSG_BUTTON_PROCEED                 = _UxGT("继续");
+  LSTR MSG_PAUSING                        = _UxGT("暂停中...");
+  LSTR MSG_PAUSE_PRINT                    = _UxGT("暂停打印");     // "Pause print"
+  LSTR MSG_RESUME_PRINT                   = _UxGT("恢复打印");     // "Resume print"
+  LSTR MSG_STOP_PRINT                     = _UxGT("停止打印");     // "Stop print"
+  LSTR MSG_PRINTING_OBJECT                = _UxGT("打印物体");
+  LSTR MSG_CANCEL_OBJECT                  = _UxGT("取消物体");
+  LSTR MSG_CANCEL_OBJECT_N                = _UxGT("取消物体 =");
+  LSTR MSG_OUTAGE_RECOVERY                = _UxGT("中断恢复");
+  LSTR MSG_MEDIA_MENU                     = _UxGT("从存储卡上打印");     // "Print from SD"
+  LSTR MSG_NO_MEDIA                       = _UxGT("无存储卡");     // "No SD card"
+  LSTR MSG_DWELL                          = _UxGT("休眠中 ...");     // "Sleep..."
+  LSTR MSG_USERWAIT                       = _UxGT("点击继续 ...");     // "Click to resume..."
+  LSTR MSG_PRINT_PAUSED                   = _UxGT("暫停打印");     // "Print paused"
+  LSTR MSG_PRINTING                       = _UxGT("打印中...");
+  LSTR MSG_PRINT_ABORTED                  = _UxGT("已取消打印");     // "Print aborted"
+  LSTR MSG_PRINT_DONE                     = _UxGT("打印已完成");
+  LSTR MSG_NO_MOVE                        = _UxGT("无移动");     // "No move."
+  LSTR MSG_KILLED                         = _UxGT("已杀掉");     // "KILLED. "
+  LSTR MSG_STOPPED                        = _UxGT("已停止");     // "STOPPED. "
+  LSTR MSG_CONTROL_RETRACT                = _UxGT("回抽长度mm");     // "Retract mm" retract_length, retract length (positive mm)
+  LSTR MSG_CONTROL_RETRACT_SWAP           = _UxGT("换手回抽长度mm");     // "Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
+  LSTR MSG_CONTROL_RETRACTF               = _UxGT("回抽速率mm/s");     // "Retract V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
+  LSTR MSG_CONTROL_RETRACT_ZHOP           = _UxGT("Hop mm");     // "Hop mm" retract_zraise, retract Z-lift
+  LSTR MSG_CONTROL_RETRACT_RECOVER        = _UxGT("回抽恢复长度mm");     // "UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
+  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAP   = _UxGT("换手回抽恢复长度mm");     // "S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
+  LSTR MSG_CONTROL_RETRACT_RECOVERF       = _UxGT("回抽恢复后进料速率mm/s");     // "Unretract V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
+  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAPF  = _UxGT("S UnRet V");     // "S UnRet V"
+  LSTR MSG_AUTORETRACT                    = _UxGT("自动抽回");     // "Auto-Retract" autoretract_enabled,
+  LSTR MSG_FILAMENT_SWAP_LENGTH           = _UxGT("交换长度");
+  LSTR MSG_FILAMENT_SWAP_EXTRA            = _UxGT("额外的交换");
+  LSTR MSG_FILAMENT_PURGE_LENGTH          = _UxGT("清洗长度");
+  LSTR MSG_TOOL_CHANGE                    = _UxGT("换工具");
+  LSTR MSG_TOOL_CHANGE_ZLIFT              = _UxGT("Z抬起");
+  LSTR MSG_SINGLENOZZLE_PRIME_SPEED       = _UxGT("进给速度");
+  LSTR MSG_SINGLENOZZLE_RETRACT_SPEED     = _UxGT("回抽速度");
+  LSTR MSG_FILAMENT_PARK_ENABLED          = _UxGT("停靠头");
+  LSTR MSG_SINGLENOZZLE_UNRETRACT_SPEED   = _UxGT("恢复速度");
+  LSTR MSG_SINGLENOZZLE_FAN_SPEED         = _UxGT("风扇速度");
+  LSTR MSG_SINGLENOZZLE_FAN_TIME          = _UxGT("风扇时间");
+  LSTR MSG_TOOL_MIGRATION_ON              = _UxGT("自动开");
+  LSTR MSG_TOOL_MIGRATION_OFF             = _UxGT("自动关");
+  LSTR MSG_TOOL_MIGRATION                 = _UxGT("工具迁移");
+  LSTR MSG_TOOL_MIGRATION_AUTO            = _UxGT("自动迁移");
+  LSTR MSG_TOOL_MIGRATION_END             = _UxGT("上一个挤出机");
+  LSTR MSG_TOOL_MIGRATION_SWAP            = _UxGT("迁移至 *");
+  LSTR MSG_FILAMENTCHANGE                 = _UxGT("更换丝料");     // "Change filament"
+  LSTR MSG_FILAMENTCHANGE_E               = _UxGT("更换丝料 *");     // "Change filament"
+  LSTR MSG_FILAMENTLOAD                   = _UxGT("装载丝料");     // "Load filament"
+  LSTR MSG_FILAMENTLOAD_E                 = _UxGT("装载丝料 *");     // "Load filament"
+  LSTR MSG_FILAMENTUNLOAD                 = _UxGT("卸载丝料");     // "Unload filament"
+  LSTR MSG_FILAMENTUNLOAD_E               = _UxGT("卸载丝料 *");     // "Unload filament"
+  LSTR MSG_FILAMENTUNLOAD_ALL             = _UxGT("卸载全部");     // "Unload All"
+  LSTR MSG_ATTACH_MEDIA                   = _UxGT("初始化存储卡");     // "Init. SD card"
+  LSTR MSG_CHANGE_MEDIA                   = _UxGT("更换存储卡");     // "Change SD card"
+  LSTR MSG_RELEASE_MEDIA                  = _UxGT("释放存储卡");
+  LSTR MSG_ZPROBE_OUT                     = _UxGT("Z探针在热床之外");     // "Z probe out. bed" Z probe is not within the physical limits
+  LSTR MSG_SKEW_FACTOR                    = _UxGT("偏斜因数");     // "Skew Factor"
+  LSTR MSG_BLTOUCH                        = _UxGT("BLTouch");     // "BLTouch"
+  LSTR MSG_BLTOUCH_SELFTEST               = _UxGT("自检");
+  LSTR MSG_BLTOUCH_RESET                  = _UxGT("重置");
+  LSTR MSG_BLTOUCH_STOW                   = _UxGT("装载");
+  LSTR MSG_BLTOUCH_DEPLOY                 = _UxGT("部署");
+  LSTR MSG_BLTOUCH_SW_MODE                = _UxGT("SW模式");
+  LSTR MSG_BLTOUCH_5V_MODE                = _UxGT("5V模式");
+  LSTR MSG_BLTOUCH_OD_MODE                = _UxGT("OD模式");
+  LSTR MSG_BLTOUCH_MODE_STORE             = _UxGT("模式保存");
+  LSTR MSG_BLTOUCH_MODE_STORE_5V          = _UxGT("设置BLTouch为5V");
+  LSTR MSG_BLTOUCH_MODE_STORE_OD          = _UxGT("设置BLTouch为OD");
+  LSTR MSG_BLTOUCH_MODE_ECHO              = _UxGT("报告开漏");
+  LSTR MSG_BLTOUCH_MODE_CHANGE            = _UxGT("危险: 错误的设置将引起损坏! 是否继续?");
+  LSTR MSG_TOUCHMI_PROBE                  = _UxGT("TouchMI");
+  LSTR MSG_TOUCHMI_INIT                   = _UxGT("初始化TouchMI");
+  LSTR MSG_TOUCHMI_ZTEST                  = _UxGT("Z偏移量测试");
+  LSTR MSG_TOUCHMI_SAVE                   = _UxGT("保存");
+  LSTR MSG_MANUAL_DEPLOY_TOUCHMI          = _UxGT("部署TouchMI");
+  LSTR MSG_MANUAL_DEPLOY                  = _UxGT("部署Z探针");
+  LSTR MSG_MANUAL_STOW                    = _UxGT("收好Z探针");
+  LSTR MSG_HOME_FIRST                     = _UxGT("归位 %s%s%s 先");     // "Home ... first"
+  LSTR MSG_ZPROBE_OFFSETS                 = _UxGT("探针偏移量");
+  LSTR MSG_ZPROBE_XOFFSET                 = _UxGT("探针X偏移");
+  LSTR MSG_ZPROBE_YOFFSET                 = _UxGT("探针Y偏移");
+  LSTR MSG_ZPROBE_ZOFFSET                 = _UxGT("探针Z偏移");     // "Z Offset"
+  LSTR MSG_BABYSTEP_X                     = _UxGT("微量调整X轴");     // "Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
+  LSTR MSG_BABYSTEP_Y                     = _UxGT("微量调整Y轴");     // "Babystep Y"
+  LSTR MSG_BABYSTEP_Z                     = _UxGT("微量调整Z轴");     // "Babystep Z"
+  LSTR MSG_BABYSTEP_TOTAL                 = _UxGT("总计");
+  LSTR MSG_ENDSTOP_ABORT                  = _UxGT("挡块终止");     // "Endstop abort"
+  LSTR MSG_HEATING_FAILED_LCD             = _UxGT("加热失败");     // "Heating failed"
+  LSTR MSG_ERR_REDUNDANT_TEMP             = _UxGT("错误：冗余温度");     // "Err: REDUNDANT TEMP"
+  LSTR MSG_THERMAL_RUNAWAY                = _UxGT("温控失控");     // "THERMAL RUNAWAY"
+  LSTR MSG_THERMAL_RUNAWAY_BED            = _UxGT("热床热量失控");
+  LSTR MSG_THERMAL_RUNAWAY_CHAMBER        = _UxGT("机箱热量失控");
+  LSTR MSG_ERR_MAXTEMP                    = _UxGT("错误：最高温度");     // "Err: MAXTEMP"
+  LSTR MSG_ERR_MINTEMP                    = _UxGT("错误：最低温度");     // "Err: MINTEMP"
+  LSTR MSG_HALTED                         = _UxGT("打印停机");     // "PRINTER HALTED"
+  LSTR MSG_PLEASE_RESET                   = _UxGT("请重置");     // "Please reset"
+  LSTR MSG_SHORT_DAY                      = _UxGT("天");     // "d" // One character only
+  LSTR MSG_SHORT_HOUR                     = _UxGT("时");     // "h" // One character only
+  LSTR MSG_SHORT_MINUTE                   = _UxGT("分");     // "m" // One character only
+  LSTR MSG_HEATING                        = _UxGT("加热中 ...");     // "Heating..."
+  LSTR MSG_COOLING                        = _UxGT("冷却中 ...");
+  LSTR MSG_BED_HEATING                    = _UxGT("加热热床中 ...");     // "Bed Heating..."
+  LSTR MSG_BED_COOLING                    = _UxGT("热床冷却中 ...");
+  LSTR MSG_CHAMBER_HEATING                = _UxGT("机箱加热中 ...");
+  LSTR MSG_CHAMBER_COOLING                = _UxGT("机箱冷却中 ...");
+  LSTR MSG_DELTA_CALIBRATE                = _UxGT("⊿校准");     // "Delta Calibration"
+  LSTR MSG_DELTA_CALIBRATE_X              = _UxGT("⊿校准X");     // "Calibrate X"
+  LSTR MSG_DELTA_CALIBRATE_Y              = _UxGT("⊿校准Y");     // "Calibrate Y"
+  LSTR MSG_DELTA_CALIBRATE_Z              = _UxGT("⊿校准Z");     // "Calibrate Z"
+  LSTR MSG_DELTA_CALIBRATE_CENTER         = _UxGT("⊿校准中心");     // "Calibrate Center"
+  LSTR MSG_DELTA_SETTINGS                 = _UxGT("⊿设置");     // "Delta Settings"
+  LSTR MSG_DELTA_AUTO_CALIBRATE           = _UxGT("⊿自动校准");     // "Auto Calibration"
+  LSTR MSG_DELTA_HEIGHT_CALIBRATE         = _UxGT("设置⊿高度");     // "Set Delta Height"
+  LSTR MSG_DELTA_Z_OFFSET_CALIBRATE       = _UxGT("探针Z偏移量");
+  LSTR MSG_DELTA_DIAG_ROD                 = _UxGT("⊿斜柱");     // "Diag Rod"
+  LSTR MSG_DELTA_HEIGHT                   = _UxGT("⊿高度");     // "Height"
+  LSTR MSG_DELTA_RADIUS                   = _UxGT("⊿半径");     // "Radius"
+  LSTR MSG_INFO_MENU                      = _UxGT("关于打印机");     // "About Printer"
+  LSTR MSG_INFO_PRINTER_MENU              = _UxGT("打印机信息");     // "Printer Info"
+  LSTR MSG_3POINT_LEVELING                = _UxGT("三点调平");     // "3-Point Leveling"
+  LSTR MSG_LINEAR_LEVELING                = _UxGT("线性调平");     // "Linear Leveling"
+  LSTR MSG_BILINEAR_LEVELING              = _UxGT("双线性调平");     // "Bilinear Leveling"
+  LSTR MSG_UBL_LEVELING                   = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
+  LSTR MSG_MESH_LEVELING                  = _UxGT("网格调平");     // "Mesh Leveling"
+  LSTR MSG_INFO_STATS_MENU                = _UxGT("打印机统计");     // "Printer Stats"
+  LSTR MSG_INFO_BOARD_MENU                = _UxGT("主板信息");     // "Board Info"
+  LSTR MSG_INFO_THERMISTOR_MENU           = _UxGT("温度计");     // "Thermistors"
+  LSTR MSG_INFO_EXTRUDERS                 = _UxGT("挤出机");     // "Extruders"
+  LSTR MSG_INFO_BAUDRATE                  = _UxGT("波特率");     // "Baud"
+  LSTR MSG_INFO_PROTOCOL                  = _UxGT("协议");     // "Protocol"
+  LSTR MSG_INFO_RUNAWAY_OFF               = _UxGT("监控温度失控:关");
+  LSTR MSG_INFO_RUNAWAY_ON                = _UxGT("监控温度失控:开");
+  LSTR MSG_HOTEND_IDLE_TIMEOUT            = _UxGT("热端空闲超时");
 
-  PROGMEM Language_Str MSG_CASE_LIGHT                      = _UxGT("外壳灯");     // "Case light"
-  PROGMEM Language_Str MSG_CASE_LIGHT_BRIGHTNESS           = _UxGT("灯亮度");     // "Light BRIGHTNESS"
+  LSTR MSG_CASE_LIGHT                     = _UxGT("外壳灯");     // "Case light"
+  LSTR MSG_CASE_LIGHT_BRIGHTNESS          = _UxGT("灯亮度");     // "Light BRIGHTNESS"
 
-  PROGMEM Language_Str MSG_KILL_EXPECTED_PRINTER           = _UxGT("打印机不正确");     // "The printer is incorrect"
+  LSTR MSG_KILL_EXPECTED_PRINTER          = _UxGT("打印机不正确");     // "The printer is incorrect"
 
   #if LCD_WIDTH >= 20
-    PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印计数");     // "Print Count"
-    PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS         = _UxGT("完成了");     // "Completed"
-    PROGMEM Language_Str MSG_INFO_PRINT_TIME               = _UxGT("总打印时间");     // "Total print time"
-    PROGMEM Language_Str MSG_INFO_PRINT_LONGEST            = _UxGT("最长工作时间");     // "Longest job time"
-    PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT           = _UxGT("总计挤出");     // "Extruded total"
+    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印计数");     // "Print Count"
+    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成了");     // "Completed"
+    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总打印时间");     // "Total print time"
+    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长工作时间");     // "Longest job time"
+    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("总计挤出");     // "Extruded total"
   #else
-    PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印数");     // "Prints"
-    PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS         = _UxGT("完成");     // "Completed"
-    PROGMEM Language_Str MSG_INFO_PRINT_TIME               = _UxGT("总共");     // "Total"
-    PROGMEM Language_Str MSG_INFO_PRINT_LONGEST            = _UxGT("最长");     // "Longest"
-    PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT           = _UxGT("已挤出");     // "Extruded"
+    LSTR MSG_INFO_PRINT_COUNT             = _UxGT("打印数");     // "Prints"
+    LSTR MSG_INFO_COMPLETED_PRINTS        = _UxGT("完成");     // "Completed"
+    LSTR MSG_INFO_PRINT_TIME              = _UxGT("总共");     // "Total"
+    LSTR MSG_INFO_PRINT_LONGEST           = _UxGT("最长");     // "Longest"
+    LSTR MSG_INFO_PRINT_FILAMENT          = _UxGT("已挤出");     // "Extruded"
   #endif
 
-  PROGMEM Language_Str MSG_INFO_MIN_TEMP                   = _UxGT("最低温度");     // "Min Temp"
-  PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("最高温度");     // "Max Temp"
-  PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("电源供应");     // "Power Supply"
-  PROGMEM Language_Str MSG_DRIVE_STRENGTH                  = _UxGT("驱动力度");     // "Drive Strength"
-  PROGMEM Language_Str MSG_DAC_PERCENT_A                   = LCD_STR_A _UxGT(" 驱动 %");     // "X Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_B                   = LCD_STR_B _UxGT(" 驱动 %");
-  PROGMEM Language_Str MSG_DAC_PERCENT_C                   = LCD_STR_C _UxGT(" 驱动 %");
-  PROGMEM Language_Str MSG_DAC_PERCENT_I                   = LCD_STR_I _UxGT(" 驱动 %");
-  PROGMEM Language_Str MSG_DAC_PERCENT_J                   = LCD_STR_J _UxGT(" 驱动 %");
-  PROGMEM Language_Str MSG_DAC_PERCENT_K                   = LCD_STR_K _UxGT(" 驱动 %");
-  PROGMEM Language_Str MSG_DAC_PERCENT_E                   = _UxGT("E 驱动 %");     // "E Driver %"
-  PROGMEM Language_Str MSG_ERROR_TMC                       = _UxGT("TMC 连接错误");
-  PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("保存驱动设置");     // "DAC EEPROM Write"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER          = _UxGT("更换料");
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_PAUSE    = _UxGT("打印已暂停");     // "PRINT PAUSED"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_LOAD     = _UxGT("装载丝料");     // "LOAD FILAMENT"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_UNLOAD   = _UxGT("卸载丝料");     // "UNLOAD FILAMENT"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_HEADER   = _UxGT("恢复选项:");     // "RESUME OPTIONS:"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_PURGE    = _UxGT("清除更多");     // "Purge more"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("恢复打印");     // "Resume print"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_NOZZLE          = _UxGT("  喷嘴: ");     // "  Nozzle: "
-  PROGMEM Language_Str MSG_RUNOUT_SENSOR                   = _UxGT("断料传感器");
-  PROGMEM Language_Str MSG_RUNOUT_DISTANCE_MM              = _UxGT("断料距离mm");
-  PROGMEM Language_Str MSG_KILL_HOMING_FAILED              = _UxGT("归原位失败");     // "Homing failed"
-  PROGMEM Language_Str MSG_LCD_PROBING_FAILED              = _UxGT("探针探测失败");     // "Probing failed"
+  LSTR MSG_INFO_MIN_TEMP                  = _UxGT("最低温度");     // "Min Temp"
+  LSTR MSG_INFO_MAX_TEMP                  = _UxGT("最高温度");     // "Max Temp"
+  LSTR MSG_INFO_PSU                       = _UxGT("电源供应");     // "Power Supply"
+  LSTR MSG_DRIVE_STRENGTH                 = _UxGT("驱动力度");     // "Drive Strength"
+  LSTR MSG_DAC_PERCENT_A                  = LCD_STR_A _UxGT(" 驱动 %");     // "X Driver %"
+  LSTR MSG_DAC_PERCENT_B                  = LCD_STR_B _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_C                  = LCD_STR_C _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_I                  = LCD_STR_I _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_J                  = LCD_STR_J _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_K                  = LCD_STR_K _UxGT(" 驱动 %");
+  LSTR MSG_DAC_PERCENT_E                  = _UxGT("E 驱动 %");     // "E Driver %"
+  LSTR MSG_ERROR_TMC                      = _UxGT("TMC 连接错误");
+  LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("保存驱动设置");     // "DAC EEPROM Write"
+  LSTR MSG_FILAMENT_CHANGE_HEADER         = _UxGT("更换料");
+  LSTR MSG_FILAMENT_CHANGE_HEADER_PAUSE   = _UxGT("打印已暂停");     // "PRINT PAUSED"
+  LSTR MSG_FILAMENT_CHANGE_HEADER_LOAD    = _UxGT("装载丝料");     // "LOAD FILAMENT"
+  LSTR MSG_FILAMENT_CHANGE_HEADER_UNLOAD  = _UxGT("卸载丝料");     // "UNLOAD FILAMENT"
+  LSTR MSG_FILAMENT_CHANGE_OPTION_HEADER  = _UxGT("恢复选项:");     // "RESUME OPTIONS:"
+  LSTR MSG_FILAMENT_CHANGE_OPTION_PURGE   = _UxGT("清除更多");     // "Purge more"
+  LSTR MSG_FILAMENT_CHANGE_OPTION_RESUME  = _UxGT("恢复打印");     // "Resume print"
+  LSTR MSG_FILAMENT_CHANGE_NOZZLE         = _UxGT("  喷嘴: ");     // "  Nozzle: "
+  LSTR MSG_RUNOUT_SENSOR                  = _UxGT("断料传感器");
+  LSTR MSG_RUNOUT_DISTANCE_MM             = _UxGT("断料距离mm");
+  LSTR MSG_KILL_HOMING_FAILED             = _UxGT("归原位失败");     // "Homing failed"
+  LSTR MSG_LCD_PROBING_FAILED             = _UxGT("探针探测失败");     // "Probing failed"
 
-  PROGMEM Language_Str MSG_MMU2_CHOOSE_FILAMENT_HEADER     = _UxGT("选择料");
-  PROGMEM Language_Str MSG_MMU2_MENU                       = _UxGT("MMU");
-  PROGMEM Language_Str MSG_KILL_MMU2_FIRMWARE              = _UxGT("升级MMU固件!");
-  PROGMEM Language_Str MSG_MMU2_NOT_RESPONDING             = _UxGT("MMU需要专注.");
-  PROGMEM Language_Str MSG_MMU2_RESUME                     = _UxGT("MMU恢复");
-  PROGMEM Language_Str MSG_MMU2_RESUMING                   = _UxGT("MMU恢复中...");
-  PROGMEM Language_Str MSG_MMU2_LOAD_FILAMENT              = _UxGT("MMU加载");
-  PROGMEM Language_Str MSG_MMU2_LOAD_ALL                   = _UxGT("MMU加载全部");
-  PROGMEM Language_Str MSG_MMU2_LOAD_TO_NOZZLE             = _UxGT("MMU加载到喷嘴");
-  PROGMEM Language_Str MSG_MMU2_EJECT_FILAMENT             = _UxGT("MMU弹出");
-  PROGMEM Language_Str MSG_MMU2_EJECT_FILAMENT_N           = _UxGT("MMU弹出 ~");
-  PROGMEM Language_Str MSG_MMU2_UNLOAD_FILAMENT            = _UxGT("MMU卸载");
-  PROGMEM Language_Str MSG_MMU2_LOADING_FILAMENT           = _UxGT("加载填充. %i...");
-  PROGMEM Language_Str MSG_MMU2_EJECTING_FILAMENT          = _UxGT("弹出填充. ...");
-  PROGMEM Language_Str MSG_MMU2_UNLOADING_FILAMENT         = _UxGT("卸载填充....");
-  PROGMEM Language_Str MSG_MMU2_ALL                        = _UxGT("全部");
-  PROGMEM Language_Str MSG_MMU2_FILAMENT_N                 = _UxGT("料 ~");
-  PROGMEM Language_Str MSG_MMU2_RESET                      = _UxGT("复位MMU");
-  PROGMEM Language_Str MSG_MMU2_RESETTING                  = _UxGT("MMU复位中...");
-  PROGMEM Language_Str MSG_MMU2_EJECT_RECOVER              = _UxGT("移出, 按下");
+  LSTR MSG_MMU2_CHOOSE_FILAMENT_HEADER    = _UxGT("选择料");
+  LSTR MSG_MMU2_MENU                      = _UxGT("MMU");
+  LSTR MSG_KILL_MMU2_FIRMWARE             = _UxGT("升级MMU固件!");
+  LSTR MSG_MMU2_NOT_RESPONDING            = _UxGT("MMU需要专注.");
+  LSTR MSG_MMU2_RESUME                    = _UxGT("MMU恢复");
+  LSTR MSG_MMU2_RESUMING                  = _UxGT("MMU恢复中...");
+  LSTR MSG_MMU2_LOAD_FILAMENT             = _UxGT("MMU加载");
+  LSTR MSG_MMU2_LOAD_ALL                  = _UxGT("MMU加载全部");
+  LSTR MSG_MMU2_LOAD_TO_NOZZLE            = _UxGT("MMU加载到喷嘴");
+  LSTR MSG_MMU2_EJECT_FILAMENT            = _UxGT("MMU弹出");
+  LSTR MSG_MMU2_EJECT_FILAMENT_N          = _UxGT("MMU弹出 ~");
+  LSTR MSG_MMU2_UNLOAD_FILAMENT           = _UxGT("MMU卸载");
+  LSTR MSG_MMU2_LOADING_FILAMENT          = _UxGT("加载填充. %i...");
+  LSTR MSG_MMU2_EJECTING_FILAMENT         = _UxGT("弹出填充. ...");
+  LSTR MSG_MMU2_UNLOADING_FILAMENT        = _UxGT("卸载填充....");
+  LSTR MSG_MMU2_ALL                       = _UxGT("全部");
+  LSTR MSG_MMU2_FILAMENT_N                = _UxGT("料 ~");
+  LSTR MSG_MMU2_RESET                     = _UxGT("复位MMU");
+  LSTR MSG_MMU2_RESETTING                 = _UxGT("MMU复位中...");
+  LSTR MSG_MMU2_EJECT_RECOVER             = _UxGT("移出, 按下");
 
-  PROGMEM Language_Str MSG_MIX                             = _UxGT("混合");
-  PROGMEM Language_Str MSG_MIX_COMPONENT_N                 = _UxGT("器件  =");
-  PROGMEM Language_Str MSG_MIXER                           = _UxGT("混合器");
-  PROGMEM Language_Str MSG_GRADIENT                        = _UxGT("梯度");
-  PROGMEM Language_Str MSG_FULL_GRADIENT                   = _UxGT("全梯度");
-  PROGMEM Language_Str MSG_TOGGLE_MIX                      = _UxGT("开关混合");
-  PROGMEM Language_Str MSG_CYCLE_MIX                       = _UxGT("循环混合");
-  PROGMEM Language_Str MSG_GRADIENT_MIX                    = _UxGT("梯度混合");
-  PROGMEM Language_Str MSG_REVERSE_GRADIENT                = _UxGT("反向梯度");
-  PROGMEM Language_Str MSG_ACTIVE_VTOOL                    = _UxGT("激活 V-tool");
-  PROGMEM Language_Str MSG_START_VTOOL                     = _UxGT("开始 V-tool");
-  PROGMEM Language_Str MSG_END_VTOOL                       = _UxGT("  结束 V-tool");
-  PROGMEM Language_Str MSG_GRADIENT_ALIAS                  = _UxGT("别名 V-tool");
-  PROGMEM Language_Str MSG_RESET_VTOOLS                    = _UxGT("复位 V-tools");
-  PROGMEM Language_Str MSG_COMMIT_VTOOL                    = _UxGT("提交 V-tool Mix");
-  PROGMEM Language_Str MSG_VTOOLS_RESET                    = _UxGT("V-tools 已复位");
-  PROGMEM Language_Str MSG_START_Z                         = _UxGT("开始 Z:");
-  PROGMEM Language_Str MSG_END_Z                           = _UxGT("  结束 Z:");
+  LSTR MSG_MIX                            = _UxGT("混合");
+  LSTR MSG_MIX_COMPONENT_N                = _UxGT("器件  =");
+  LSTR MSG_MIXER                          = _UxGT("混合器");
+  LSTR MSG_GRADIENT                       = _UxGT("梯度");
+  LSTR MSG_FULL_GRADIENT                  = _UxGT("全梯度");
+  LSTR MSG_TOGGLE_MIX                     = _UxGT("开关混合");
+  LSTR MSG_CYCLE_MIX                      = _UxGT("循环混合");
+  LSTR MSG_GRADIENT_MIX                   = _UxGT("梯度混合");
+  LSTR MSG_REVERSE_GRADIENT               = _UxGT("反向梯度");
+  LSTR MSG_ACTIVE_VTOOL                   = _UxGT("激活 V-tool");
+  LSTR MSG_START_VTOOL                    = _UxGT("开始 V-tool");
+  LSTR MSG_END_VTOOL                      = _UxGT("  结束 V-tool");
+  LSTR MSG_GRADIENT_ALIAS                 = _UxGT("别名 V-tool");
+  LSTR MSG_RESET_VTOOLS                   = _UxGT("复位 V-tools");
+  LSTR MSG_COMMIT_VTOOL                   = _UxGT("提交 V-tool Mix");
+  LSTR MSG_VTOOLS_RESET                   = _UxGT("V-tools 已复位");
+  LSTR MSG_START_Z                        = _UxGT("开始 Z:");
+  LSTR MSG_END_Z                          = _UxGT("  结束 Z:");
 
-  PROGMEM Language_Str MSG_GAMES                           = _UxGT("游戏");
-  PROGMEM Language_Str MSG_BRICKOUT                        = _UxGT("敲方块");
-  PROGMEM Language_Str MSG_INVADERS                        = _UxGT("入侵者");
-  PROGMEM Language_Str MSG_SNAKE                           = _UxGT("贪吃蛇");
-  PROGMEM Language_Str MSG_MAZE                            = _UxGT("迷宫");
+  LSTR MSG_GAMES                          = _UxGT("游戏");
+  LSTR MSG_BRICKOUT                       = _UxGT("敲方块");
+  LSTR MSG_INVADERS                       = _UxGT("入侵者");
+  LSTR MSG_SNAKE                          = _UxGT("贪吃蛇");
+  LSTR MSG_MAZE                           = _UxGT("迷宫");
 
-  PROGMEM Language_Str MSG_BAD_PAGE                        = _UxGT("错误页面索引");
-  PROGMEM Language_Str MSG_BAD_PAGE_SPEED                  = _UxGT("错误页面速度");
+  LSTR MSG_BAD_PAGE                       = _UxGT("错误页面索引");
+  LSTR MSG_BAD_PAGE_SPEED                 = _UxGT("错误页面速度");
 
   //
   // Filament Change screens show up to 3 lines on a 4-line display
   //                        ...or up to 2 lines on a 3-line display
   //
   #if LCD_HEIGHT >= 4
-    PROGMEM Language_Str MSG_ADVANCED_PAUSE_WAITING        = _UxGT(MSG_2_LINE("按下按钮", "恢复打印"));
-    PROGMEM Language_Str MSG_PAUSE_PRINT_PARKING           = _UxGT(MSG_1_LINE("停靠中..."));
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT          = _UxGT(MSG_3_LINE("等待开始", "丝料", "变更"));     // "Wait for start of the filament change"
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_3_LINE("插入料", "并按下", "以继续"));
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEAT          = _UxGT(MSG_2_LINE("按下按钮来", "加热喷嘴."));     // "Press button to heat nozzle."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEATING       = _UxGT(MSG_2_LINE("加热喷嘴", "请等待 ..."));     // "Heating nozzle Please wait..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_2_LINE("等待", "卸下丝料"));     // "Wait for filament unload"
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD          = _UxGT(MSG_2_LINE("等待", "进料"));     // "Wait for filament load"
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_PURGE         = _UxGT(MSG_2_LINE("等待", "丝料清除"));     // "Wait for filament purge"
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_CONT_PURGE    = _UxGT(MSG_2_LINE("按下已完成", "料的清洗"));
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME        = _UxGT(MSG_2_LINE("等待打印", "恢复"));     // "Wait for print to resume"
+    LSTR MSG_ADVANCED_PAUSE_WAITING       = _UxGT(MSG_2_LINE("按下按钮", "恢复打印"));
+    LSTR MSG_PAUSE_PRINT_PARKING          = _UxGT(MSG_1_LINE("停靠中..."));
+    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_3_LINE("等待开始", "丝料", "变更"));     // "Wait for start of the filament change"
+    LSTR MSG_FILAMENT_CHANGE_INSERT       = _UxGT(MSG_3_LINE("插入料", "并按下", "以继续"));
+    LSTR MSG_FILAMENT_CHANGE_HEAT         = _UxGT(MSG_2_LINE("按下按钮来", "加热喷嘴."));     // "Press button to heat nozzle."
+    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_2_LINE("加热喷嘴", "请等待 ..."));     // "Heating nozzle Please wait..."
+    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_2_LINE("等待", "卸下丝料"));     // "Wait for filament unload"
+    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_2_LINE("等待", "进料"));     // "Wait for filament load"
+    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_2_LINE("等待", "丝料清除"));     // "Wait for filament purge"
+    LSTR MSG_FILAMENT_CHANGE_CONT_PURGE   = _UxGT(MSG_2_LINE("按下已完成", "料的清洗"));
+    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_2_LINE("等待打印", "恢复"));     // "Wait for print to resume"
   #else
-    PROGMEM Language_Str MSG_ADVANCED_PAUSE_WAITING        = _UxGT(MSG_1_LINE("按下继续"));
-    PROGMEM Language_Str MSG_PAUSE_PRINT_PARKING           = _UxGT(MSG_1_LINE("停靠中..."));
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT          = _UxGT(MSG_1_LINE("请等待 ..."));     // "Please wait..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_1_LINE("插入并单击"));     // "Insert and Click"
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEAT          = _UxGT(MSG_1_LINE("按下加热"));
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEATING       = _UxGT(MSG_1_LINE("加热中 ..."));     // "Heating..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_1_LINE("退出中 ..."));     // "Ejecting..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD          = _UxGT(MSG_1_LINE("装载中 ..."));     // "Loading..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_PURGE         = _UxGT(MSG_1_LINE("清除中 ..."));     // "Purging..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_CONT_PURGE    = _UxGT(MSG_1_LINE("按下完成"));
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME        = _UxGT(MSG_1_LINE("恢复中 ..."));     // "Resuming..."
+    LSTR MSG_ADVANCED_PAUSE_WAITING       = _UxGT(MSG_1_LINE("按下继续"));
+    LSTR MSG_PAUSE_PRINT_PARKING          = _UxGT(MSG_1_LINE("停靠中..."));
+    LSTR MSG_FILAMENT_CHANGE_INIT         = _UxGT(MSG_1_LINE("请等待 ..."));     // "Please wait..."
+    LSTR MSG_FILAMENT_CHANGE_INSERT       = _UxGT(MSG_1_LINE("插入并单击"));     // "Insert and Click"
+    LSTR MSG_FILAMENT_CHANGE_HEAT         = _UxGT(MSG_1_LINE("按下加热"));
+    LSTR MSG_FILAMENT_CHANGE_HEATING      = _UxGT(MSG_1_LINE("加热中 ..."));     // "Heating..."
+    LSTR MSG_FILAMENT_CHANGE_UNLOAD       = _UxGT(MSG_1_LINE("退出中 ..."));     // "Ejecting..."
+    LSTR MSG_FILAMENT_CHANGE_LOAD         = _UxGT(MSG_1_LINE("装载中 ..."));     // "Loading..."
+    LSTR MSG_FILAMENT_CHANGE_PURGE        = _UxGT(MSG_1_LINE("清除中 ..."));     // "Purging..."
+    LSTR MSG_FILAMENT_CHANGE_CONT_PURGE   = _UxGT(MSG_1_LINE("按下完成"));
+    LSTR MSG_FILAMENT_CHANGE_RESUME       = _UxGT(MSG_1_LINE("恢复中 ..."));     // "Resuming..."
   #endif
-  PROGMEM Language_Str MSG_TMC_DRIVERS                     = _UxGT("TMC驱动器");
-  PROGMEM Language_Str MSG_TMC_CURRENT                     = _UxGT("驱动电流");
-  PROGMEM Language_Str MSG_TMC_HYBRID_THRS                 = _UxGT("混合阈值");
-  PROGMEM Language_Str MSG_TMC_HOMING_THRS                 = _UxGT("无感回零");
-  PROGMEM Language_Str MSG_TMC_STEPPING_MODE               = _UxGT("步进模式");
-  PROGMEM Language_Str MSG_TMC_STEALTH_ENABLED             = _UxGT("StealthChop已使能");
-  PROGMEM Language_Str MSG_SERVICE_RESET                   = _UxGT("复位");
-  PROGMEM Language_Str MSG_SERVICE_IN                      = _UxGT(" 在:");
-  PROGMEM Language_Str MSG_BACKLASH                        = _UxGT("回差");
-  PROGMEM Language_Str MSG_BACKLASH_A                      = LCD_STR_A;
-  PROGMEM Language_Str MSG_BACKLASH_B                      = LCD_STR_B;
-  PROGMEM Language_Str MSG_BACKLASH_C                      = LCD_STR_C;
-  PROGMEM Language_Str MSG_BACKLASH_I                      = LCD_STR_I;
-  PROGMEM Language_Str MSG_BACKLASH_J                      = LCD_STR_J;
-  PROGMEM Language_Str MSG_BACKLASH_K                      = LCD_STR_K;
-  PROGMEM Language_Str MSG_BACKLASH_CORRECTION             = _UxGT("校正");
-  PROGMEM Language_Str MSG_BACKLASH_SMOOTHING              = _UxGT("平滑的");
+  LSTR MSG_TMC_DRIVERS                    = _UxGT("TMC驱动器");
+  LSTR MSG_TMC_CURRENT                    = _UxGT("驱动电流");
+  LSTR MSG_TMC_HYBRID_THRS                = _UxGT("混合阈值");
+  LSTR MSG_TMC_HOMING_THRS                = _UxGT("无感回零");
+  LSTR MSG_TMC_STEPPING_MODE              = _UxGT("步进模式");
+  LSTR MSG_TMC_STEALTH_ENABLED            = _UxGT("StealthChop已使能");
+  LSTR MSG_SERVICE_RESET                  = _UxGT("复位");
+  LSTR MSG_SERVICE_IN                     = _UxGT(" 在:");
+  LSTR MSG_BACKLASH                       = _UxGT("回差");
+  LSTR MSG_BACKLASH_A                     = LCD_STR_A;
+  LSTR MSG_BACKLASH_B                     = LCD_STR_B;
+  LSTR MSG_BACKLASH_C                     = LCD_STR_C;
+  LSTR MSG_BACKLASH_I                     = LCD_STR_I;
+  LSTR MSG_BACKLASH_J                     = LCD_STR_J;
+  LSTR MSG_BACKLASH_K                     = LCD_STR_K;
+  LSTR MSG_BACKLASH_CORRECTION            = _UxGT("校正");
+  LSTR MSG_BACKLASH_SMOOTHING             = _UxGT("平滑的");
 
-  PROGMEM Language_Str MSG_LEVEL_X_AXIS                    = _UxGT("X轴调平");
-  PROGMEM Language_Str MSG_AUTO_CALIBRATE                  = _UxGT("自动校准");
-  PROGMEM Language_Str MSG_HEATER_TIMEOUT                  = _UxGT("加热器超时");
-  PROGMEM Language_Str MSG_REHEAT                          = _UxGT("重新加热");
-  PROGMEM Language_Str MSG_REHEATING                       = _UxGT("重新加热中...");
+  LSTR MSG_LEVEL_X_AXIS                   = _UxGT("X轴调平");
+  LSTR MSG_AUTO_CALIBRATE                 = _UxGT("自动校准");
+  LSTR MSG_HEATER_TIMEOUT                 = _UxGT("加热器超时");
+  LSTR MSG_REHEAT                         = _UxGT("重新加热");
+  LSTR MSG_REHEATING                      = _UxGT("重新加热中...");
 }
 
 #if FAN_COUNT == 1

commit d95d452b29b80e66d534b36c78262454664ce5a1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 29 23:02:53 2021 -0500

    🌐 MSG_PROBING_MESH => MSG_PROBING_POINT

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index d3883ac88d..35642460fc 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -105,7 +105,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MESH_EDITOR                     = _UxGT("网格编辑器");
   PROGMEM Language_Str MSG_EDIT_MESH                       = _UxGT("编辑网格");     // "Edit Mesh"
   PROGMEM Language_Str MSG_EDITING_STOPPED                 = _UxGT("网格编辑已停止");     // "Mesh Editing Stopped"
-  PROGMEM Language_Str MSG_PROBING_MESH                    = _UxGT("探测点");
+  PROGMEM Language_Str MSG_PROBING_POINT                   = _UxGT("探测点");
   PROGMEM Language_Str MSG_MESH_X                          = _UxGT("索引X");
   PROGMEM Language_Str MSG_MESH_Y                          = _UxGT("索引Y");
   PROGMEM Language_Str MSG_MESH_EDIT_Z                     = _UxGT("Z 值");

commit 9046254a14b92b6bdf1696b1ed839b71615a0772
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 20 15:40:17 2021 -0500

    🌐 Update menu titles, add more IJK (#22605)
    
    Followup to #19112

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 31d2623604..d3883ac88d 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -33,52 +33,52 @@ namespace Language_zh_CN {
   constexpr uint8_t    CHARSIZE                            = 3;
   PROGMEM Language_Str LANGUAGE                            = _UxGT("Simplified Chinese");
 
-  PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT("已就绪.");     //" ready."
+  PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT("已就绪.");     // " ready."
   PROGMEM Language_Str MSG_MARLIN                          = _UxGT("马林");
   PROGMEM Language_Str MSG_YES                             = _UxGT("是");
   PROGMEM Language_Str MSG_NO                              = _UxGT("否");
   PROGMEM Language_Str MSG_BACK                            = _UxGT("返回");     // ”Back“
   PROGMEM Language_Str MSG_MEDIA_ABORTING                  = _UxGT("放弃中...");
-  PROGMEM Language_Str MSG_MEDIA_INSERTED                  = _UxGT("存储卡已插入");     //"Card inserted"
-  PROGMEM Language_Str MSG_MEDIA_REMOVED                   = _UxGT("存储卡被拔出");     //"Card removed"
+  PROGMEM Language_Str MSG_MEDIA_INSERTED                  = _UxGT("存储卡已插入");     // "Card inserted"
+  PROGMEM Language_Str MSG_MEDIA_REMOVED                   = _UxGT("存储卡被拔出");     // "Card removed"
   PROGMEM Language_Str MSG_MEDIA_WAITING                   = _UxGT("等待存储器");
   PROGMEM Language_Str MSG_MEDIA_READ_ERROR                = _UxGT("存储器读取错误");
   PROGMEM Language_Str MSG_MEDIA_USB_REMOVED               = _UxGT("USB设备已弹出");
   PROGMEM Language_Str MSG_MEDIA_USB_FAILED                = _UxGT("USB启动错误");
   PROGMEM Language_Str MSG_KILL_SUBCALL_OVERFLOW           = _UxGT("子响应溢出");
-  PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("挡块");     //"Endstops" // Max length 8 characters
+  PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("挡块");     // "Endstops" // Max length 8 characters
   PROGMEM Language_Str MSG_LCD_SOFT_ENDSTOPS               = _UxGT("软挡块");
-  PROGMEM Language_Str MSG_MAIN                            = _UxGT("主菜单");     //"Main"
+  PROGMEM Language_Str MSG_MAIN                            = _UxGT("主菜单");     // "Main"
   PROGMEM Language_Str MSG_ADVANCED_SETTINGS               = _UxGT("高级设置");
   PROGMEM Language_Str MSG_CONFIGURATION                   = _UxGT("配置");
-  PROGMEM Language_Str MSG_RUN_AUTO_FILES                  = _UxGT("自动开始");     //"Autostart"
-  PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("关闭步进电机");     //"Disable steppers"
+  PROGMEM Language_Str MSG_RUN_AUTO_FILES                  = _UxGT("自动开始");     // "Autostart"
+  PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("关闭步进电机");     // "Disable steppers"
   PROGMEM Language_Str MSG_DEBUG_MENU                      = _UxGT("调试菜单");     // "Debug Menu"
   PROGMEM Language_Str MSG_PROGRESS_BAR_TEST               = _UxGT("进度条测试");     // "Progress Bar Test"
-  PROGMEM Language_Str MSG_AUTO_HOME                       = _UxGT("自动回原点");     //"Auto home"
-  PROGMEM Language_Str MSG_AUTO_HOME_X                     = _UxGT("回X原位");     //"Home X"
-  PROGMEM Language_Str MSG_AUTO_HOME_Y                     = _UxGT("回Y原位");     //"Home Y"
-  PROGMEM Language_Str MSG_AUTO_HOME_Z                     = _UxGT("回Z原位");     //"Home Z"
+  PROGMEM Language_Str MSG_AUTO_HOME                       = _UxGT("自动回原点");     // "Auto home"
+  PROGMEM Language_Str MSG_AUTO_HOME_X                     = _UxGT("回X原位");     // "Home X"
+  PROGMEM Language_Str MSG_AUTO_HOME_Y                     = _UxGT("回Y原位");     // "Home Y"
+  PROGMEM Language_Str MSG_AUTO_HOME_Z                     = _UxGT("回Z原位");     // "Home Z"
   PROGMEM Language_Str MSG_AUTO_Z_ALIGN                    = _UxGT("自动Z对齐");
-  PROGMEM Language_Str MSG_LEVEL_BED_HOMING                = _UxGT("平台调平XYZ归原位");     //"Homing XYZ"
-  PROGMEM Language_Str MSG_LEVEL_BED_WAITING               = _UxGT("单击开始热床调平");     //"Click to Begin"
-  PROGMEM Language_Str MSG_LEVEL_BED_NEXT_POINT            = _UxGT("下个热床调平点");     //"Next Point"
-  PROGMEM Language_Str MSG_LEVEL_BED_DONE                  = _UxGT("完成热床调平");     //"Leveling Done!"
+  PROGMEM Language_Str MSG_LEVEL_BED_HOMING                = _UxGT("平台调平XYZ归原位");     // "Homing XYZ"
+  PROGMEM Language_Str MSG_LEVEL_BED_WAITING               = _UxGT("单击开始热床调平");     // "Click to Begin"
+  PROGMEM Language_Str MSG_LEVEL_BED_NEXT_POINT            = _UxGT("下个热床调平点");     // "Next Point"
+  PROGMEM Language_Str MSG_LEVEL_BED_DONE                  = _UxGT("完成热床调平");     // "Leveling Done!"
   PROGMEM Language_Str MSG_Z_FADE_HEIGHT                   = _UxGT("淡出高度");     // "Fade Height"
-  PROGMEM Language_Str MSG_SET_HOME_OFFSETS                = _UxGT("设置原点偏移");     //"Set home offsets"
-  PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("偏移已启用");     //"Offsets applied"
-  PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("设置原点");     //"Set origin"
+  PROGMEM Language_Str MSG_SET_HOME_OFFSETS                = _UxGT("设置原点偏移");     // "Set home offsets"
+  PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("偏移已启用");     // "Offsets applied"
+  PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("设置原点");     // "Set origin"
   #if PREHEAT_COUNT
-    PROGMEM Language_Str MSG_PREHEAT_1                     = _UxGT("预热 ") PREHEAT_1_LABEL;     //"Preheat PREHEAT_2_LABEL"
-    PROGMEM Language_Str MSG_PREHEAT_1_H                   = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     //"Preheat PREHEAT_2_LABEL"
+    PROGMEM Language_Str MSG_PREHEAT_1                     = _UxGT("预热 ") PREHEAT_1_LABEL;     // "Preheat PREHEAT_2_LABEL"
+    PROGMEM Language_Str MSG_PREHEAT_1_H                   = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     // "Preheat PREHEAT_2_LABEL"
     PROGMEM Language_Str MSG_PREHEAT_1_END                 = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
     PROGMEM Language_Str MSG_PREHEAT_1_END_E               = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_1 " "
     PROGMEM Language_Str MSG_PREHEAT_1_ALL                 = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部");     //MSG_PREHEAT_1 " All"
     PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY             = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床");     //MSG_PREHEAT_1 " Bed"
     PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS            = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置");     //MSG_PREHEAT_1 " conf"
 
-    PROGMEM Language_Str MSG_PREHEAT_M                     = _UxGT("预热 $");     //"Preheat PREHEAT_2_LABEL"
-    PROGMEM Language_Str MSG_PREHEAT_M_H                   = _UxGT("预热 $ ~");     //"Preheat PREHEAT_2_LABEL"
+    PROGMEM Language_Str MSG_PREHEAT_M                     = _UxGT("预热 $");     // "Preheat PREHEAT_2_LABEL"
+    PROGMEM Language_Str MSG_PREHEAT_M_H                   = _UxGT("预热 $ ~");     // "Preheat PREHEAT_2_LABEL"
     PROGMEM Language_Str MSG_PREHEAT_M_END                 = _UxGT("预热 $ 喷嘴");     //MSG_PREHEAT_1 " "
     PROGMEM Language_Str MSG_PREHEAT_M_END_E               = _UxGT("预热 $ 喷嘴 ~");     //MSG_PREHEAT_1 " "
     PROGMEM Language_Str MSG_PREHEAT_M_ALL                 = _UxGT("预热 $ 全部");     //MSG_PREHEAT_1 " All"
@@ -86,20 +86,20 @@ namespace Language_zh_CN {
     PROGMEM Language_Str MSG_PREHEAT_M_SETTINGS            = _UxGT("预热 $ 设置");     //MSG_PREHEAT_1 " conf"
   #endif
   PROGMEM Language_Str MSG_PREHEAT_CUSTOM                  = _UxGT("预热自定义");
-  PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("降温");     //"Cooldown"
+  PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("降温");     // "Cooldown"
   PROGMEM Language_Str MSG_CUTTER_FREQUENCY                = _UxGT("切割频率");
   PROGMEM Language_Str MSG_LASER_MENU                      = _UxGT("激光控制");
   PROGMEM Language_Str MSG_LASER_POWER                     = _UxGT("激光电源");
   PROGMEM Language_Str MSG_SPINDLE_MENU                    = _UxGT("主轴控制");
   PROGMEM Language_Str MSG_SPINDLE_POWER                   = _UxGT("主轴电源");
   PROGMEM Language_Str MSG_SPINDLE_REVERSE                 = _UxGT("主轴反转");
-  PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("电源打开");     //"Switch power on"
-  PROGMEM Language_Str MSG_SWITCH_PS_OFF                   = _UxGT("电源关闭");     //"Switch power off"
-  PROGMEM Language_Str MSG_EXTRUDE                         = _UxGT("挤出");     //"Extrude"
-  PROGMEM Language_Str MSG_RETRACT                         = _UxGT("回抽");     //"Retract"
-  PROGMEM Language_Str MSG_MOVE_AXIS                       = _UxGT("移动轴");     //"Move axis"
-  PROGMEM Language_Str MSG_BED_LEVELING                    = _UxGT("调平热床");     //"Bed leveling"
-  PROGMEM Language_Str MSG_LEVEL_BED                       = _UxGT("调平热床");     //"Level bed"
+  PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("电源打开");     // "Switch power on"
+  PROGMEM Language_Str MSG_SWITCH_PS_OFF                   = _UxGT("电源关闭");     // "Switch power off"
+  PROGMEM Language_Str MSG_EXTRUDE                         = _UxGT("挤出");     // "Extrude"
+  PROGMEM Language_Str MSG_RETRACT                         = _UxGT("回抽");     // "Retract"
+  PROGMEM Language_Str MSG_MOVE_AXIS                       = _UxGT("移动轴");     // "Move axis"
+  PROGMEM Language_Str MSG_BED_LEVELING                    = _UxGT("调平热床");     // "Bed leveling"
+  PROGMEM Language_Str MSG_LEVEL_BED                       = _UxGT("调平热床");     // "Level bed"
   PROGMEM Language_Str MSG_BED_TRAMMING                    = _UxGT("调平边角");     // "Bed Tramming"
   PROGMEM Language_Str MSG_NEXT_CORNER                     = _UxGT("下个边角");     // "Next corner"
   PROGMEM Language_Str MSG_MESH_EDITOR                     = _UxGT("网格编辑器");
@@ -220,27 +220,27 @@ namespace Language_zh_CN {
 
   PROGMEM Language_Str MSG_MOVING                          = _UxGT("移动...");     // "Moving...")
   PROGMEM Language_Str MSG_FREE_XY                         = _UxGT("释放 XY");     // "Free XY")
-  PROGMEM Language_Str MSG_MOVE_X                          = _UxGT("移动X");     //"Move X"
-  PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("移动Y");     //"Move Y"
-  PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("移动Z");     //"Move Z"
-  PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("挤出机");     //"Extruder"
-  PROGMEM Language_Str MSG_MOVE_EN                         = _UxGT("挤出机 *");     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_X                          = _UxGT("移动X");     // "Move X"
+  PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("移动Y");     // "Move Y"
+  PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("移动Z");     // "Move Z"
+  PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("挤出机");     // "Extruder"
+  PROGMEM Language_Str MSG_MOVE_EN                         = _UxGT("挤出机 *");     // "Extruder"
   PROGMEM Language_Str MSG_HOTEND_TOO_COLD                 = _UxGT("热端太冷");
-  PROGMEM Language_Str MSG_MOVE_N_MM                       = _UxGT("移动 %s mm");     //"Move 0.025mm"
-  PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("移动 0.1 mm");     //"Move 0.1mm"
-  PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("移动 1 mm");     //"Move 1mm"
-  PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT("移动 10 mm");     //"Move 10mm"
-  PROGMEM Language_Str MSG_MOVE_100MM                      = _UxGT("移动 100 mm");     //"Move 100mm"
-  PROGMEM Language_Str MSG_SPEED                           = _UxGT("速率");     //"Speed"
-  PROGMEM Language_Str MSG_BED_Z                           = _UxGT("热床Z");     //"Bed Z"
-  PROGMEM Language_Str MSG_NOZZLE                          = _UxGT("喷嘴");     //"Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_N                        = _UxGT("喷嘴 ~");     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_MOVE_N_MM                       = _UxGT("移动 %s mm");     // "Move 0.025mm"
+  PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("移动 0.1 mm");     // "Move 0.1mm"
+  PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("移动 1 mm");     // "Move 1mm"
+  PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT("移动 10 mm");     // "Move 10mm"
+  PROGMEM Language_Str MSG_MOVE_100MM                      = _UxGT("移动 100 mm");     // "Move 100mm"
+  PROGMEM Language_Str MSG_SPEED                           = _UxGT("速率");     // "Speed"
+  PROGMEM Language_Str MSG_BED_Z                           = _UxGT("热床Z");     // "Bed Z"
+  PROGMEM Language_Str MSG_NOZZLE                          = _UxGT("喷嘴");     // "Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_N                        = _UxGT("喷嘴 ~");     // "Nozzle" 噴嘴
   PROGMEM Language_Str MSG_NOZZLE_PARKED                   = _UxGT("喷嘴已停靠");
   PROGMEM Language_Str MSG_NOZZLE_STANDBY                  = _UxGT("喷嘴待命中");
-  PROGMEM Language_Str MSG_BED                             = _UxGT("热床");     //"Bed"
+  PROGMEM Language_Str MSG_BED                             = _UxGT("热床");     // "Bed"
   PROGMEM Language_Str MSG_CHAMBER                         = _UxGT("机箱壳");
-  PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("风扇速率");     //"Fan speed"
-  PROGMEM Language_Str MSG_FAN_SPEED_N                     = _UxGT("风扇速率 ~");     //"Fan speed"
+  PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("风扇速率");     // "Fan speed"
+  PROGMEM Language_Str MSG_FAN_SPEED_N                     = _UxGT("风扇速率 ~");     // "Fan speed"
   PROGMEM Language_Str MSG_STORED_FAN_N                    = _UxGT("存储的风扇 ~");
   PROGMEM Language_Str MSG_EXTRA_FAN_SPEED                 = _UxGT("额外风扇速率");     // "Extra fan speed"
   PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_N               = _UxGT("额外风扇速率 ~");     // "Extra fan speed"
@@ -249,70 +249,82 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_CONTROLLER_FAN_AUTO_ON          = _UxGT("自动模式");
   PROGMEM Language_Str MSG_CONTROLLER_FAN_SPEED            = _UxGT("工作速度");
   PROGMEM Language_Str MSG_CONTROLLER_FAN_DURATION         = _UxGT("空闲周期");
-  PROGMEM Language_Str MSG_FLOW                            = _UxGT("挤出速率");     //"Flow"
-  PROGMEM Language_Str MSG_FLOW_N                          = _UxGT("挤出速率 ~");     //"Flow"
-  PROGMEM Language_Str MSG_CONTROL                         = _UxGT("控制");     //"Control"
-  PROGMEM Language_Str MSG_MIN                             = " " LCD_STR_THERMOMETER _UxGT(" 最小");     //" " LCD_STR_THERMOMETER " Min"
-  PROGMEM Language_Str MSG_MAX                             = " " LCD_STR_THERMOMETER _UxGT(" 最大");     //" " LCD_STR_THERMOMETER " Max"
-  PROGMEM Language_Str MSG_FACTOR                          = " " LCD_STR_THERMOMETER _UxGT(" 因数");     //" " LCD_STR_THERMOMETER " Fact"
-  PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("自动控温");     //"Autotemp"
-  PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("开");     //"On"
-  PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("关");     //"Off"
+  PROGMEM Language_Str MSG_FLOW                            = _UxGT("挤出速率");     // "Flow"
+  PROGMEM Language_Str MSG_FLOW_N                          = _UxGT("挤出速率 ~");     // "Flow"
+  PROGMEM Language_Str MSG_CONTROL                         = _UxGT("控制");     // "Control"
+  PROGMEM Language_Str MSG_MIN                             = " " LCD_STR_THERMOMETER _UxGT(" 最小");     // " " LCD_STR_THERMOMETER " Min"
+  PROGMEM Language_Str MSG_MAX                             = " " LCD_STR_THERMOMETER _UxGT(" 最大");     // " " LCD_STR_THERMOMETER " Max"
+  PROGMEM Language_Str MSG_FACTOR                          = " " LCD_STR_THERMOMETER _UxGT(" 因数");     // " " LCD_STR_THERMOMETER " Fact"
+  PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("自动控温");     // "Autotemp"
+  PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("开");     // "On"
+  PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("关");     // "Off"
   PROGMEM Language_Str MSG_PID_AUTOTUNE                    = _UxGT("自动PID");
   PROGMEM Language_Str MSG_PID_AUTOTUNE_E                  = _UxGT("自动PID *");
   PROGMEM Language_Str MSG_PID_AUTOTUNE_DONE               = _UxGT("PID调整完成");
   PROGMEM Language_Str MSG_PID_BAD_EXTRUDER_NUM            = _UxGT("自动调失败. 坏的挤出机");
   PROGMEM Language_Str MSG_PID_TEMP_TOO_HIGH               = _UxGT("自动调失败. 温度太高");
   PROGMEM Language_Str MSG_PID_TIMEOUT                     = _UxGT("自动调失败! 超时");
-  PROGMEM Language_Str MSG_SELECT                          = _UxGT("选择");     //"Select"
+  PROGMEM Language_Str MSG_SELECT                          = _UxGT("选择");     // "Select"
   PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("选择 *");
-  PROGMEM Language_Str MSG_ACC                             = _UxGT("加速度");     //"Accel" acceleration
+  PROGMEM Language_Str MSG_ACC                             = _UxGT("加速度");     // "Accel" acceleration
   PROGMEM Language_Str MSG_JERK                            = _UxGT("抖动速率");     // "Jerk"
-  PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("轴抖动速率") LCD_STR_A;     //"Va-jerk"
-  PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("轴抖动速率") LCD_STR_B;     //"Vb-jerk"
-  PROGMEM Language_Str MSG_VC_JERK                         = _UxGT("轴抖动速率") LCD_STR_C;     //"Vc-jerk"
-  PROGMEM Language_Str MSG_VE_JERK                         = _UxGT("挤出机抖动速率");     //"Ve-jerk"
+  PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("轴抖动速率") LCD_STR_A;     // "Va-jerk"
+  PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("轴抖动速率") LCD_STR_B;     // "Vb-jerk"
+  PROGMEM Language_Str MSG_VC_JERK                         = _UxGT("轴抖动速率") LCD_STR_C;     // "Vc-jerk"
+  PROGMEM Language_Str MSG_VI_JERK                         = _UxGT("轴抖动速率") LCD_STR_I;     // "Vi-jerk"
+  PROGMEM Language_Str MSG_VJ_JERK                         = _UxGT("轴抖动速率") LCD_STR_J;     // "Vj-jerk"
+  PROGMEM Language_Str MSG_VK_JERK                         = _UxGT("轴抖动速率") LCD_STR_K;     // "Vk-jerk"
+  PROGMEM Language_Str MSG_VE_JERK                         = _UxGT("挤出机抖动速率");     // "Ve-jerk"
   PROGMEM Language_Str MSG_JUNCTION_DEVIATION              = _UxGT("接点差");
   PROGMEM Language_Str MSG_VELOCITY                        = _UxGT("速度");     // "Velocity"
-  PROGMEM Language_Str MSG_VMAX_A                          = _UxGT("最大进料速率") LCD_STR_A;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("最大进料速率") LCD_STR_B;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("最大进料速率") LCD_STR_C;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("最大进料速率") LCD_STR_E;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_EN                         = _UxGT("最大进料速率 *");     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMIN                            = _UxGT("最小进料速率");     //"Vmin"  min_feedrate_mm_s
-  PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("最小移动速率");     //"VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
+  PROGMEM Language_Str MSG_VMAX_A                          = _UxGT("最大进料速率") LCD_STR_A;     // "Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("最大进料速率") LCD_STR_B;
+  PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("最大进料速率") LCD_STR_C;
+  PROGMEM Language_Str MSG_VMAX_I                          = _UxGT("最大进料速率") LCD_STR_I;
+  PROGMEM Language_Str MSG_VMAX_J                          = _UxGT("最大进料速率") LCD_STR_J;
+  PROGMEM Language_Str MSG_VMAX_K                          = _UxGT("最大进料速率") LCD_STR_K;
+  PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("最大进料速率") LCD_STR_E;
+  PROGMEM Language_Str MSG_VMAX_EN                         = _UxGT("最大进料速率 *");
+  PROGMEM Language_Str MSG_VMIN                            = _UxGT("最小进料速率");     // "Vmin"  min_feedrate_mm_s
+  PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("最小移动速率");     // "VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
   PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("加速度");     // "Acceleration"
-  PROGMEM Language_Str MSG_AMAX_A                          = _UxGT("最大打印加速度") LCD_STR_A;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_B                          = _UxGT("最大打印加速度") LCD_STR_B;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_C                          = _UxGT("最大打印加速度") LCD_STR_C;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_E                          = _UxGT("最大打印加速度") LCD_STR_E;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_EN                         = _UxGT("最大打印加速度 *");     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("收进加速度");     //"A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
-  PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("非打印移动加速度");     //"A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
+  PROGMEM Language_Str MSG_AMAX_A                          = _UxGT("最大打印加速度") LCD_STR_A;     // "Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_B                          = _UxGT("最大打印加速度") LCD_STR_B;
+  PROGMEM Language_Str MSG_AMAX_C                          = _UxGT("最大打印加速度") LCD_STR_C;
+  PROGMEM Language_Str MSG_AMAX_I                          = _UxGT("最大打印加速度") LCD_STR_I;
+  PROGMEM Language_Str MSG_AMAX_J                          = _UxGT("最大打印加速度") LCD_STR_J;
+  PROGMEM Language_Str MSG_AMAX_K                          = _UxGT("最大打印加速度") LCD_STR_K;
+  PROGMEM Language_Str MSG_AMAX_E                          = _UxGT("最大打印加速度") LCD_STR_E;
+  PROGMEM Language_Str MSG_AMAX_EN                         = _UxGT("最大打印加速度 *");
+  PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("收进加速度");     // "A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
+  PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("非打印移动加速度");     // "A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
   PROGMEM Language_Str MSG_XY_FREQUENCY_LIMIT              = _UxGT("频率最大");
   PROGMEM Language_Str MSG_XY_FREQUENCY_FEEDRATE           = _UxGT("进给速度");
-  PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("轴步数/mm");     //"Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
-  PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT("步数/mm");     //"Asteps/mm"
-  PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("步数/mm");     //"Bsteps/mm"
-  PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT("步数/mm");     //"Csteps/mm"
-  PROGMEM Language_Str MSG_E_STEPS                         = _UxGT("E 步数/mm");     //"Esteps/mm"
+  PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("轴步数/mm");     // "Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
+  PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT(" 步数/mm");     // "Asteps/mm"
+  PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT(" 步数/mm");
+  PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT(" 步数/mm");
+  PROGMEM Language_Str MSG_I_STEPS                         = LCD_STR_I _UxGT(" 步数/mm");
+  PROGMEM Language_Str MSG_J_STEPS                         = LCD_STR_J _UxGT(" 步数/mm");
+  PROGMEM Language_Str MSG_K_STEPS                         = LCD_STR_K _UxGT(" 步数/mm");
+  PROGMEM Language_Str MSG_E_STEPS                         = _UxGT("E 步数/mm");     // "Esteps/mm"
   PROGMEM Language_Str MSG_EN_STEPS                        = _UxGT("* 步数/mm");
-  PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("温度");     //"Temperature"
-  PROGMEM Language_Str MSG_MOTION                          = _UxGT("运动");     //"Motion"
-  PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("料丝");     //"Filament" menu_advanced_filament
-  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E 在 mm") SUPERSCRIPT_THREE;     //"E in mm3" volumetric_enabled
+  PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("温度");     // "Temperature"
+  PROGMEM Language_Str MSG_MOTION                          = _UxGT("运动");     // "Motion"
+  PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("料丝");     // "Filament" menu_advanced_filament
+  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E 在 mm") SUPERSCRIPT_THREE;     // "E in mm3" volumetric_enabled
   PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT                = _UxGT("E 限制 在 mm") SUPERSCRIPT_THREE;
   PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT_E              = _UxGT("E 限制 *");
-  PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("丝料直径");     //"Fil. Dia."
+  PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("丝料直径");     // "Fil. Dia."
   PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("丝料直径 *");
   PROGMEM Language_Str MSG_FILAMENT_UNLOAD                 = _UxGT("卸载 mm");     // "Unload mm"
   PROGMEM Language_Str MSG_FILAMENT_LOAD                   = _UxGT("装载 mm");     // "Load mm"
   PROGMEM Language_Str MSG_ADVANCE_K                       = _UxGT("Advance K");
   PROGMEM Language_Str MSG_ADVANCE_K_E                     = _UxGT("Advance K *");
-  PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD对比度");     //"LCD contrast"
-  PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("保存设置");     //"Store memory"
-  PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("装载设置");     //"Load memory"
-  PROGMEM Language_Str MSG_RESTORE_DEFAULTS                = _UxGT("恢复安全值");     //"Restore Defaults"
+  PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD对比度");     // "LCD contrast"
+  PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("保存设置");     // "Store memory"
+  PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("装载设置");     // "Load memory"
+  PROGMEM Language_Str MSG_RESTORE_DEFAULTS                = _UxGT("恢复安全值");     // "Restore Defaults"
   PROGMEM Language_Str MSG_INIT_EEPROM                     = _UxGT("初始化设置");     // "Initialize EEPROM"
   PROGMEM Language_Str MSG_ERR_EEPROM_CRC                  = _UxGT("EEPROM CRC 错误");
   PROGMEM Language_Str MSG_ERR_EEPROM_INDEX                = _UxGT("EEPROM Index 错误");
@@ -321,9 +333,9 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MEDIA_UPDATE                    = _UxGT("存储器更新");
   PROGMEM Language_Str MSG_RESET_PRINTER                   = _UxGT("复位打印机");
   PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH _UxGT("刷新");
-  PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("信息屏");     //"Info screen"
-  PROGMEM Language_Str MSG_PREPARE                         = _UxGT("准备");     //"Prepare"
-  PROGMEM Language_Str MSG_TUNE                            = _UxGT("调整");     //"Tune"
+  PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("信息屏");     // "Info screen"
+  PROGMEM Language_Str MSG_PREPARE                         = _UxGT("准备");     // "Prepare"
+  PROGMEM Language_Str MSG_TUNE                            = _UxGT("调整");     // "Tune"
   PROGMEM Language_Str MSG_POWER_MONITOR                   = _UxGT("电源监控");
   PROGMEM Language_Str MSG_CURRENT                         = _UxGT("电流");
   PROGMEM Language_Str MSG_VOLTAGE                         = _UxGT("电压");
@@ -340,33 +352,33 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_BUTTON_BACK                     = _UxGT("返回");
   PROGMEM Language_Str MSG_BUTTON_PROCEED                  = _UxGT("继续");
   PROGMEM Language_Str MSG_PAUSING                         = _UxGT("暂停中...");
-  PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("暂停打印");     //"Pause print"
-  PROGMEM Language_Str MSG_RESUME_PRINT                    = _UxGT("恢复打印");     //"Resume print"
-  PROGMEM Language_Str MSG_STOP_PRINT                      = _UxGT("停止打印");     //"Stop print"
+  PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("暂停打印");     // "Pause print"
+  PROGMEM Language_Str MSG_RESUME_PRINT                    = _UxGT("恢复打印");     // "Resume print"
+  PROGMEM Language_Str MSG_STOP_PRINT                      = _UxGT("停止打印");     // "Stop print"
   PROGMEM Language_Str MSG_PRINTING_OBJECT                 = _UxGT("打印物体");
   PROGMEM Language_Str MSG_CANCEL_OBJECT                   = _UxGT("取消物体");
   PROGMEM Language_Str MSG_CANCEL_OBJECT_N                 = _UxGT("取消物体 =");
   PROGMEM Language_Str MSG_OUTAGE_RECOVERY                 = _UxGT("中断恢复");
-  PROGMEM Language_Str MSG_MEDIA_MENU                      = _UxGT("从存储卡上打印");     //"Print from SD"
-  PROGMEM Language_Str MSG_NO_MEDIA                        = _UxGT("无存储卡");     //"No SD card"
-  PROGMEM Language_Str MSG_DWELL                           = _UxGT("休眠中 ...");     //"Sleep..."
-  PROGMEM Language_Str MSG_USERWAIT                        = _UxGT("点击继续 ...");     //"Click to resume..."
+  PROGMEM Language_Str MSG_MEDIA_MENU                      = _UxGT("从存储卡上打印");     // "Print from SD"
+  PROGMEM Language_Str MSG_NO_MEDIA                        = _UxGT("无存储卡");     // "No SD card"
+  PROGMEM Language_Str MSG_DWELL                           = _UxGT("休眠中 ...");     // "Sleep..."
+  PROGMEM Language_Str MSG_USERWAIT                        = _UxGT("点击继续 ...");     // "Click to resume..."
   PROGMEM Language_Str MSG_PRINT_PAUSED                    = _UxGT("暫停打印");     // "Print paused"
   PROGMEM Language_Str MSG_PRINTING                        = _UxGT("打印中...");
-  PROGMEM Language_Str MSG_PRINT_ABORTED                   = _UxGT("已取消打印");     //"Print aborted"
+  PROGMEM Language_Str MSG_PRINT_ABORTED                   = _UxGT("已取消打印");     // "Print aborted"
   PROGMEM Language_Str MSG_PRINT_DONE                      = _UxGT("打印已完成");
-  PROGMEM Language_Str MSG_NO_MOVE                         = _UxGT("无移动");     //"No move."
-  PROGMEM Language_Str MSG_KILLED                          = _UxGT("已杀掉");     //"KILLED. "
-  PROGMEM Language_Str MSG_STOPPED                         = _UxGT("已停止");     //"STOPPED. "
-  PROGMEM Language_Str MSG_CONTROL_RETRACT                 = _UxGT("回抽长度mm");     //"Retract mm" retract_length, retract length (positive mm)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_SWAP            = _UxGT("换手回抽长度mm");     //"Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
-  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("回抽速率mm/s");     //"Retract V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_ZHOP            = _UxGT("Hop mm");     //"Hop mm" retract_zraise, retract Z-lift
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("回抽恢复长度mm");     //"UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("换手回抽恢复长度mm");     //"S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("回抽恢复后进料速率mm/s");     //"Unretract V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
+  PROGMEM Language_Str MSG_NO_MOVE                         = _UxGT("无移动");     // "No move."
+  PROGMEM Language_Str MSG_KILLED                          = _UxGT("已杀掉");     // "KILLED. "
+  PROGMEM Language_Str MSG_STOPPED                         = _UxGT("已停止");     // "STOPPED. "
+  PROGMEM Language_Str MSG_CONTROL_RETRACT                 = _UxGT("回抽长度mm");     // "Retract mm" retract_length, retract length (positive mm)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_SWAP            = _UxGT("换手回抽长度mm");     // "Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
+  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("回抽速率mm/s");     // "Retract V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_ZHOP            = _UxGT("Hop mm");     // "Hop mm" retract_zraise, retract Z-lift
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("回抽恢复长度mm");     // "UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("换手回抽恢复长度mm");     // "S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("回抽恢复后进料速率mm/s");     // "Unretract V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
   PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAPF   = _UxGT("S UnRet V");     // "S UnRet V"
-  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("自动抽回");     //"Auto-Retract" autoretract_enabled,
+  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("自动抽回");     // "Auto-Retract" autoretract_enabled,
   PROGMEM Language_Str MSG_FILAMENT_SWAP_LENGTH            = _UxGT("交换长度");
   PROGMEM Language_Str MSG_FILAMENT_SWAP_EXTRA             = _UxGT("额外的交换");
   PROGMEM Language_Str MSG_FILAMENT_PURGE_LENGTH           = _UxGT("清洗长度");
@@ -384,17 +396,17 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_TOOL_MIGRATION_AUTO             = _UxGT("自动迁移");
   PROGMEM Language_Str MSG_TOOL_MIGRATION_END              = _UxGT("上一个挤出机");
   PROGMEM Language_Str MSG_TOOL_MIGRATION_SWAP             = _UxGT("迁移至 *");
-  PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("更换丝料");     //"Change filament"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE_E                = _UxGT("更换丝料 *");     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("更换丝料");     // "Change filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE_E                = _UxGT("更换丝料 *");     // "Change filament"
   PROGMEM Language_Str MSG_FILAMENTLOAD                    = _UxGT("装载丝料");     // "Load filament"
   PROGMEM Language_Str MSG_FILAMENTLOAD_E                  = _UxGT("装载丝料 *");     // "Load filament"
   PROGMEM Language_Str MSG_FILAMENTUNLOAD                  = _UxGT("卸载丝料");     // "Unload filament"
   PROGMEM Language_Str MSG_FILAMENTUNLOAD_E                = _UxGT("卸载丝料 *");     // "Unload filament"
   PROGMEM Language_Str MSG_FILAMENTUNLOAD_ALL              = _UxGT("卸载全部");     // "Unload All"
-  PROGMEM Language_Str MSG_ATTACH_MEDIA                    = _UxGT("初始化存储卡");     //"Init. SD card"
-  PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("更换存储卡");     //"Change SD card"
+  PROGMEM Language_Str MSG_ATTACH_MEDIA                    = _UxGT("初始化存储卡");     // "Init. SD card"
+  PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("更换存储卡");     // "Change SD card"
   PROGMEM Language_Str MSG_RELEASE_MEDIA                   = _UxGT("释放存储卡");
-  PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z探针在热床之外");     //"Z probe out. bed" Z probe is not within the physical limits
+  PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z探针在热床之外");     // "Z probe out. bed" Z probe is not within the physical limits
   PROGMEM Language_Str MSG_SKEW_FACTOR                     = _UxGT("偏斜因数");     // "Skew Factor"
   PROGMEM Language_Str MSG_BLTOUCH                         = _UxGT("BLTouch");     // "BLTouch"
   PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("自检");
@@ -416,39 +428,39 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MANUAL_DEPLOY_TOUCHMI           = _UxGT("部署TouchMI");
   PROGMEM Language_Str MSG_MANUAL_DEPLOY                   = _UxGT("部署Z探针");
   PROGMEM Language_Str MSG_MANUAL_STOW                     = _UxGT("收好Z探针");
-  PROGMEM Language_Str MSG_HOME_FIRST                      = _UxGT("归位 %s%s%s 先");     //"Home ... first"
+  PROGMEM Language_Str MSG_HOME_FIRST                      = _UxGT("归位 %s%s%s 先");     // "Home ... first"
   PROGMEM Language_Str MSG_ZPROBE_OFFSETS                  = _UxGT("探针偏移量");
   PROGMEM Language_Str MSG_ZPROBE_XOFFSET                  = _UxGT("探针X偏移");
   PROGMEM Language_Str MSG_ZPROBE_YOFFSET                  = _UxGT("探针Y偏移");
-  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("探针Z偏移");     //"Z Offset"
-  PROGMEM Language_Str MSG_BABYSTEP_X                      = _UxGT("微量调整X轴");     //"Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
-  PROGMEM Language_Str MSG_BABYSTEP_Y                      = _UxGT("微量调整Y轴");     //"Babystep Y"
-  PROGMEM Language_Str MSG_BABYSTEP_Z                      = _UxGT("微量调整Z轴");     //"Babystep Z"
+  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("探针Z偏移");     // "Z Offset"
+  PROGMEM Language_Str MSG_BABYSTEP_X                      = _UxGT("微量调整X轴");     // "Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
+  PROGMEM Language_Str MSG_BABYSTEP_Y                      = _UxGT("微量调整Y轴");     // "Babystep Y"
+  PROGMEM Language_Str MSG_BABYSTEP_Z                      = _UxGT("微量调整Z轴");     // "Babystep Z"
   PROGMEM Language_Str MSG_BABYSTEP_TOTAL                  = _UxGT("总计");
-  PROGMEM Language_Str MSG_ENDSTOP_ABORT                   = _UxGT("挡块终止");     //"Endstop abort"
-  PROGMEM Language_Str MSG_HEATING_FAILED_LCD              = _UxGT("加热失败");     //"Heating failed"
-  PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("错误：冗余温度");     //"Err: REDUNDANT TEMP"
-  PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("温控失控");     //"THERMAL RUNAWAY"
+  PROGMEM Language_Str MSG_ENDSTOP_ABORT                   = _UxGT("挡块终止");     // "Endstop abort"
+  PROGMEM Language_Str MSG_HEATING_FAILED_LCD              = _UxGT("加热失败");     // "Heating failed"
+  PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("错误：冗余温度");     // "Err: REDUNDANT TEMP"
+  PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("温控失控");     // "THERMAL RUNAWAY"
   PROGMEM Language_Str MSG_THERMAL_RUNAWAY_BED             = _UxGT("热床热量失控");
   PROGMEM Language_Str MSG_THERMAL_RUNAWAY_CHAMBER         = _UxGT("机箱热量失控");
-  PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("错误：最高温度");     //"Err: MAXTEMP"
-  PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("错误：最低温度");     //"Err: MINTEMP"
-  PROGMEM Language_Str MSG_HALTED                          = _UxGT("打印停机");     //"PRINTER HALTED"
-  PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("请重置");     //"Please reset"
-  PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("天");     //"d" // One character only
-  PROGMEM Language_Str MSG_SHORT_HOUR                      = _UxGT("时");     //"h" // One character only
-  PROGMEM Language_Str MSG_SHORT_MINUTE                    = _UxGT("分");     //"m" // One character only
-  PROGMEM Language_Str MSG_HEATING                         = _UxGT("加热中 ...");     //"Heating..."
+  PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("错误：最高温度");     // "Err: MAXTEMP"
+  PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("错误：最低温度");     // "Err: MINTEMP"
+  PROGMEM Language_Str MSG_HALTED                          = _UxGT("打印停机");     // "PRINTER HALTED"
+  PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("请重置");     // "Please reset"
+  PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("天");     // "d" // One character only
+  PROGMEM Language_Str MSG_SHORT_HOUR                      = _UxGT("时");     // "h" // One character only
+  PROGMEM Language_Str MSG_SHORT_MINUTE                    = _UxGT("分");     // "m" // One character only
+  PROGMEM Language_Str MSG_HEATING                         = _UxGT("加热中 ...");     // "Heating..."
   PROGMEM Language_Str MSG_COOLING                         = _UxGT("冷却中 ...");
-  PROGMEM Language_Str MSG_BED_HEATING                     = _UxGT("加热热床中 ...");     //"Bed Heating..."
+  PROGMEM Language_Str MSG_BED_HEATING                     = _UxGT("加热热床中 ...");     // "Bed Heating..."
   PROGMEM Language_Str MSG_BED_COOLING                     = _UxGT("热床冷却中 ...");
   PROGMEM Language_Str MSG_CHAMBER_HEATING                 = _UxGT("机箱加热中 ...");
   PROGMEM Language_Str MSG_CHAMBER_COOLING                 = _UxGT("机箱冷却中 ...");
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE                 = _UxGT("⊿校准");     //"Delta Calibration"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_X               = _UxGT("⊿校准X");     //"Calibrate X"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Y               = _UxGT("⊿校准Y");     //"Calibrate Y"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Z               = _UxGT("⊿校准Z");     //"Calibrate Z"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_CENTER          = _UxGT("⊿校准中心");     //"Calibrate Center"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE                 = _UxGT("⊿校准");     // "Delta Calibration"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_X               = _UxGT("⊿校准X");     // "Calibrate X"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Y               = _UxGT("⊿校准Y");     // "Calibrate Y"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Z               = _UxGT("⊿校准Z");     // "Calibrate Z"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_CENTER          = _UxGT("⊿校准中心");     // "Calibrate Center"
   PROGMEM Language_Str MSG_DELTA_SETTINGS                  = _UxGT("⊿设置");     // "Delta Settings"
   PROGMEM Language_Str MSG_DELTA_AUTO_CALIBRATE            = _UxGT("⊿自动校准");     // "Auto Calibration"
   PROGMEM Language_Str MSG_DELTA_HEIGHT_CALIBRATE          = _UxGT("设置⊿高度");     // "Set Delta Height"
@@ -456,19 +468,19 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_DELTA_DIAG_ROD                  = _UxGT("⊿斜柱");     // "Diag Rod"
   PROGMEM Language_Str MSG_DELTA_HEIGHT                    = _UxGT("⊿高度");     // "Height"
   PROGMEM Language_Str MSG_DELTA_RADIUS                    = _UxGT("⊿半径");     // "Radius"
-  PROGMEM Language_Str MSG_INFO_MENU                       = _UxGT("关于打印机");     //"About Printer"
-  PROGMEM Language_Str MSG_INFO_PRINTER_MENU               = _UxGT("打印机信息");     //"Printer Info"
+  PROGMEM Language_Str MSG_INFO_MENU                       = _UxGT("关于打印机");     // "About Printer"
+  PROGMEM Language_Str MSG_INFO_PRINTER_MENU               = _UxGT("打印机信息");     // "Printer Info"
   PROGMEM Language_Str MSG_3POINT_LEVELING                 = _UxGT("三点调平");     // "3-Point Leveling"
   PROGMEM Language_Str MSG_LINEAR_LEVELING                 = _UxGT("线性调平");     // "Linear Leveling"
   PROGMEM Language_Str MSG_BILINEAR_LEVELING               = _UxGT("双线性调平");     // "Bilinear Leveling"
   PROGMEM Language_Str MSG_UBL_LEVELING                    = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
   PROGMEM Language_Str MSG_MESH_LEVELING                   = _UxGT("网格调平");     // "Mesh Leveling"
-  PROGMEM Language_Str MSG_INFO_STATS_MENU                 = _UxGT("打印机统计");     //"Printer Stats"
-  PROGMEM Language_Str MSG_INFO_BOARD_MENU                 = _UxGT("主板信息");     //"Board Info"
-  PROGMEM Language_Str MSG_INFO_THERMISTOR_MENU            = _UxGT("温度计");     //"Thermistors"
-  PROGMEM Language_Str MSG_INFO_EXTRUDERS                  = _UxGT("挤出机");     //"Extruders"
-  PROGMEM Language_Str MSG_INFO_BAUDRATE                   = _UxGT("波特率");     //"Baud"
-  PROGMEM Language_Str MSG_INFO_PROTOCOL                   = _UxGT("协议");     //"Protocol"
+  PROGMEM Language_Str MSG_INFO_STATS_MENU                 = _UxGT("打印机统计");     // "Printer Stats"
+  PROGMEM Language_Str MSG_INFO_BOARD_MENU                 = _UxGT("主板信息");     // "Board Info"
+  PROGMEM Language_Str MSG_INFO_THERMISTOR_MENU            = _UxGT("温度计");     // "Thermistors"
+  PROGMEM Language_Str MSG_INFO_EXTRUDERS                  = _UxGT("挤出机");     // "Extruders"
+  PROGMEM Language_Str MSG_INFO_BAUDRATE                   = _UxGT("波特率");     // "Baud"
+  PROGMEM Language_Str MSG_INFO_PROTOCOL                   = _UxGT("协议");     // "Protocol"
   PROGMEM Language_Str MSG_INFO_RUNAWAY_OFF                = _UxGT("监控温度失控:关");
   PROGMEM Language_Str MSG_INFO_RUNAWAY_ON                 = _UxGT("监控温度失控:开");
   PROGMEM Language_Str MSG_HOTEND_IDLE_TIMEOUT             = _UxGT("热端空闲超时");
@@ -479,26 +491,29 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_KILL_EXPECTED_PRINTER           = _UxGT("打印机不正确");     // "The printer is incorrect"
 
   #if LCD_WIDTH >= 20
-    PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印计数");     //"Print Count"
-    PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS         = _UxGT("完成了");     //"Completed"
-    PROGMEM Language_Str MSG_INFO_PRINT_TIME               = _UxGT("总打印时间");     //"Total print time"
-    PROGMEM Language_Str MSG_INFO_PRINT_LONGEST            = _UxGT("最长工作时间");     //"Longest job time"
-    PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT           = _UxGT("总计挤出");     //"Extruded total"
+    PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印计数");     // "Print Count"
+    PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS         = _UxGT("完成了");     // "Completed"
+    PROGMEM Language_Str MSG_INFO_PRINT_TIME               = _UxGT("总打印时间");     // "Total print time"
+    PROGMEM Language_Str MSG_INFO_PRINT_LONGEST            = _UxGT("最长工作时间");     // "Longest job time"
+    PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT           = _UxGT("总计挤出");     // "Extruded total"
   #else
-    PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印数");     //"Prints"
-    PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS         = _UxGT("完成");     //"Completed"
-    PROGMEM Language_Str MSG_INFO_PRINT_TIME               = _UxGT("总共");     //"Total"
-    PROGMEM Language_Str MSG_INFO_PRINT_LONGEST            = _UxGT("最长");     //"Longest"
-    PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT           = _UxGT("已挤出");     //"Extruded"
+    PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印数");     // "Prints"
+    PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS         = _UxGT("完成");     // "Completed"
+    PROGMEM Language_Str MSG_INFO_PRINT_TIME               = _UxGT("总共");     // "Total"
+    PROGMEM Language_Str MSG_INFO_PRINT_LONGEST            = _UxGT("最长");     // "Longest"
+    PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT           = _UxGT("已挤出");     // "Extruded"
   #endif
 
-  PROGMEM Language_Str MSG_INFO_MIN_TEMP                   = _UxGT("最低温度");     //"Min Temp"
-  PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("最高温度");     //"Max Temp"
-  PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("电源供应");     //"Power Supply"
+  PROGMEM Language_Str MSG_INFO_MIN_TEMP                   = _UxGT("最低温度");     // "Min Temp"
+  PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("最高温度");     // "Max Temp"
+  PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("电源供应");     // "Power Supply"
   PROGMEM Language_Str MSG_DRIVE_STRENGTH                  = _UxGT("驱动力度");     // "Drive Strength"
-  PROGMEM Language_Str MSG_DAC_PERCENT_X                   = _UxGT("X 驱动 %");     // "X Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_Y                   = _UxGT("Y 驱动 %");     // "Y Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_Z                   = _UxGT("Z 驱动 %");     // "Z Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_A                   = LCD_STR_A _UxGT(" 驱动 %");     // "X Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_B                   = LCD_STR_B _UxGT(" 驱动 %");
+  PROGMEM Language_Str MSG_DAC_PERCENT_C                   = LCD_STR_C _UxGT(" 驱动 %");
+  PROGMEM Language_Str MSG_DAC_PERCENT_I                   = LCD_STR_I _UxGT(" 驱动 %");
+  PROGMEM Language_Str MSG_DAC_PERCENT_J                   = LCD_STR_J _UxGT(" 驱动 %");
+  PROGMEM Language_Str MSG_DAC_PERCENT_K                   = LCD_STR_K _UxGT(" 驱动 %");
   PROGMEM Language_Str MSG_DAC_PERCENT_E                   = _UxGT("E 驱动 %");     // "E Driver %"
   PROGMEM Language_Str MSG_ERROR_TMC                       = _UxGT("TMC 连接错误");
   PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("保存驱动设置");     // "DAC EEPROM Write"
@@ -508,7 +523,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_UNLOAD   = _UxGT("卸载丝料");     // "UNLOAD FILAMENT"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_HEADER   = _UxGT("恢复选项:");     // "RESUME OPTIONS:"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_PURGE    = _UxGT("清除更多");     // "Purge more"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("恢复打印");     //"Resume print"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("恢复打印");     // "Resume print"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_NOZZLE          = _UxGT("  喷嘴: ");     // "  Nozzle: "
   PROGMEM Language_Str MSG_RUNOUT_SENSOR                   = _UxGT("断料传感器");
   PROGMEM Language_Str MSG_RUNOUT_DISTANCE_MM              = _UxGT("断料距离mm");
@@ -583,15 +598,15 @@ namespace Language_zh_CN {
   #else
     PROGMEM Language_Str MSG_ADVANCED_PAUSE_WAITING        = _UxGT(MSG_1_LINE("按下继续"));
     PROGMEM Language_Str MSG_PAUSE_PRINT_PARKING           = _UxGT(MSG_1_LINE("停靠中..."));
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT          = _UxGT(MSG_1_LINE("请等待 ..."));     //"Please wait..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_1_LINE("插入并单击"));     //"Insert and Click"
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT          = _UxGT(MSG_1_LINE("请等待 ..."));     // "Please wait..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_1_LINE("插入并单击"));     // "Insert and Click"
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEAT          = _UxGT(MSG_1_LINE("按下加热"));
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEATING       = _UxGT(MSG_1_LINE("加热中 ..."));     // "Heating..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_1_LINE("退出中 ..."));     //"Ejecting..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD          = _UxGT(MSG_1_LINE("装载中 ..."));     //"Loading..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_1_LINE("退出中 ..."));     // "Ejecting..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD          = _UxGT(MSG_1_LINE("装载中 ..."));     // "Loading..."
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_PURGE         = _UxGT(MSG_1_LINE("清除中 ..."));     // "Purging..."
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_CONT_PURGE    = _UxGT(MSG_1_LINE("按下完成"));
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME        = _UxGT(MSG_1_LINE("恢复中 ..."));     //"Resuming..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME        = _UxGT(MSG_1_LINE("恢复中 ..."));     // "Resuming..."
   #endif
   PROGMEM Language_Str MSG_TMC_DRIVERS                     = _UxGT("TMC驱动器");
   PROGMEM Language_Str MSG_TMC_CURRENT                     = _UxGT("驱动电流");
@@ -605,6 +620,9 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_BACKLASH_A                      = LCD_STR_A;
   PROGMEM Language_Str MSG_BACKLASH_B                      = LCD_STR_B;
   PROGMEM Language_Str MSG_BACKLASH_C                      = LCD_STR_C;
+  PROGMEM Language_Str MSG_BACKLASH_I                      = LCD_STR_I;
+  PROGMEM Language_Str MSG_BACKLASH_J                      = LCD_STR_J;
+  PROGMEM Language_Str MSG_BACKLASH_K                      = LCD_STR_K;
   PROGMEM Language_Str MSG_BACKLASH_CORRECTION             = _UxGT("校正");
   PROGMEM Language_Str MSG_BACKLASH_SMOOTHING              = _UxGT("平滑的");
 

commit b1bc2e80036131cde58b4fbc02b76ac08b5a7924
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jul 25 02:12:48 2021 -0500

    🌐 Level Corners => Bed Tramming

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 33eb7fca15..31d2623604 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -100,7 +100,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MOVE_AXIS                       = _UxGT("移动轴");     //"Move axis"
   PROGMEM Language_Str MSG_BED_LEVELING                    = _UxGT("调平热床");     //"Bed leveling"
   PROGMEM Language_Str MSG_LEVEL_BED                       = _UxGT("调平热床");     //"Level bed"
-  PROGMEM Language_Str MSG_LEVEL_CORNERS                   = _UxGT("调平边角");     // "Level corners"
+  PROGMEM Language_Str MSG_BED_TRAMMING                    = _UxGT("调平边角");     // "Bed Tramming"
   PROGMEM Language_Str MSG_NEXT_CORNER                     = _UxGT("下个边角");     // "Next corner"
   PROGMEM Language_Str MSG_MESH_EDITOR                     = _UxGT("网格编辑器");
   PROGMEM Language_Str MSG_EDIT_MESH                       = _UxGT("编辑网格");     // "Edit Mesh"

commit b34a009bb1e114addf2d831171fab967d93a651f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jul 18 19:56:28 2021 -0500

    🐛 Change font for selected language (#22381)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 39093a7c6c..33eb7fca15 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -31,7 +31,7 @@ namespace Language_zh_CN {
   using namespace Language_en;  // Inherit undefined strings from English
 
   constexpr uint8_t    CHARSIZE                            = 3;
-  PROGMEM Language_Str LANGUAGE                            = _UxGT("简体中文");
+  PROGMEM Language_Str LANGUAGE                            = _UxGT("Simplified Chinese");
 
   PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT("已就绪.");     //" ready."
   PROGMEM Language_Str MSG_MARLIN                          = _UxGT("马林");

commit 81ca2dd273358a0cfc0f65d5b4900d83abc96d69
Author: Sébastien Gariépy <46988275+BeePerNet@users.noreply.github.com>
Date:   Sun Jun 27 17:44:49 2021 -0400

    🌐 MSG_MOVE_100MM (#22242)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 98f7704efc..39093a7c6c 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -230,6 +230,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("移动 0.1 mm");     //"Move 0.1mm"
   PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("移动 1 mm");     //"Move 1mm"
   PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT("移动 10 mm");     //"Move 10mm"
+  PROGMEM Language_Str MSG_MOVE_100MM                      = _UxGT("移动 100 mm");     //"Move 100mm"
   PROGMEM Language_Str MSG_SPEED                           = _UxGT("速率");     //"Speed"
   PROGMEM Language_Str MSG_BED_Z                           = _UxGT("热床Z");     //"Bed Z"
   PROGMEM Language_Str MSG_NOZZLE                          = _UxGT("喷嘴");     //"Nozzle" 噴嘴

commit df1ef496d1a88996cb1156fe933df59c6aaecbac
Author: borland1 <barryorlando@hotmail.com>
Date:   Tue Mar 23 06:21:11 2021 -0700

    Main / Config Custom Submenus (#18177)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 5e7c5e7cb5..98f7704efc 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -109,7 +109,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MESH_X                          = _UxGT("索引X");
   PROGMEM Language_Str MSG_MESH_Y                          = _UxGT("索引Y");
   PROGMEM Language_Str MSG_MESH_EDIT_Z                     = _UxGT("Z 值");
-  PROGMEM Language_Str MSG_USER_MENU                       = _UxGT("定制命令");     // "Custom Commands"
+  PROGMEM Language_Str MSG_CUSTOM_COMMANDS                 = _UxGT("定制命令");     // "Custom Commands"
   PROGMEM Language_Str MSG_M48_TEST                        = _UxGT("M48探测");
   PROGMEM Language_Str MSG_M48_POINT                       = _UxGT("M48点");
   PROGMEM Language_Str MSG_M48_DEVIATION                   = _UxGT("M48偏差");

commit 21c7e699f13335a3ca5c9bb3c4ec7deb8e6a5fc4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 4 18:18:18 2021 -0600

    Remove untranslated strings

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index cd43ee3b39..5e7c5e7cb5 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -263,16 +263,6 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_PID_BAD_EXTRUDER_NUM            = _UxGT("自动调失败. 坏的挤出机");
   PROGMEM Language_Str MSG_PID_TEMP_TOO_HIGH               = _UxGT("自动调失败. 温度太高");
   PROGMEM Language_Str MSG_PID_TIMEOUT                     = _UxGT("自动调失败! 超时");
-  PROGMEM Language_Str MSG_PID_P                           = _UxGT("PID-P");
-  PROGMEM Language_Str MSG_PID_P_E                         = _UxGT("PID-P *");
-  PROGMEM Language_Str MSG_PID_I                           = _UxGT("PID-I");
-  PROGMEM Language_Str MSG_PID_I_E                         = _UxGT("PID-I *");
-  PROGMEM Language_Str MSG_PID_D                           = _UxGT("PID-D");
-  PROGMEM Language_Str MSG_PID_D_E                         = _UxGT("PID-D *");
-  PROGMEM Language_Str MSG_PID_C                           = _UxGT("PID-C");
-  PROGMEM Language_Str MSG_PID_C_E                         = _UxGT("PID-C *");
-  PROGMEM Language_Str MSG_PID_F                           = _UxGT("PID-F");
-  PROGMEM Language_Str MSG_PID_F_E                         = _UxGT("PID-F *");
   PROGMEM Language_Str MSG_SELECT                          = _UxGT("选择");     //"Select"
   PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("选择 *");
   PROGMEM Language_Str MSG_ACC                             = _UxGT("加速度");     //"Accel" acceleration

commit 62cc65cafeb79626e6ff5520620e7ff29cb36304
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Dec 20 00:27:04 2020 -0600

    Languages cleanup

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index a4134969aa..cd43ee3b39 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -89,12 +89,8 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("降温");     //"Cooldown"
   PROGMEM Language_Str MSG_CUTTER_FREQUENCY                = _UxGT("切割频率");
   PROGMEM Language_Str MSG_LASER_MENU                      = _UxGT("激光控制");
-  PROGMEM Language_Str MSG_LASER_OFF                       = _UxGT("激光关");
-  PROGMEM Language_Str MSG_LASER_ON                        = _UxGT("激光开");
   PROGMEM Language_Str MSG_LASER_POWER                     = _UxGT("激光电源");
   PROGMEM Language_Str MSG_SPINDLE_MENU                    = _UxGT("主轴控制");
-  PROGMEM Language_Str MSG_SPINDLE_OFF                     = _UxGT("主轴关");
-  PROGMEM Language_Str MSG_SPINDLE_ON                      = _UxGT("主轴开");
   PROGMEM Language_Str MSG_SPINDLE_POWER                   = _UxGT("主轴电源");
   PROGMEM Language_Str MSG_SPINDLE_REVERSE                 = _UxGT("主轴反转");
   PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("电源打开");     //"Switch power on"

commit b0392be4bf872954d0134c90cd027ea3610d5b9a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Dec 13 01:50:02 2020 -0600

    SHORT_MANUAL_Z_MOVE => FINE_MANUAL_MOVE

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 0e1de36b57..a4134969aa 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -230,7 +230,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("挤出机");     //"Extruder"
   PROGMEM Language_Str MSG_MOVE_EN                         = _UxGT("挤出机 *");     //"Extruder"
   PROGMEM Language_Str MSG_HOTEND_TOO_COLD                 = _UxGT("热端太冷");
-  PROGMEM Language_Str MSG_MOVE_Z_DIST                     = _UxGT("移动 %s mm");     //"Move 0.025mm"
+  PROGMEM Language_Str MSG_MOVE_N_MM                       = _UxGT("移动 %s mm");     //"Move 0.025mm"
   PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("移动 0.1 mm");     //"Move 0.1mm"
   PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("移动 1 mm");     //"Move 1mm"
   PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT("移动 10 mm");     //"Move 10mm"

commit f8e83f79c5012c70bae788308f8665f117c4f93c
Author: Simone Primarosa <simonepri@outlook.com>
Date:   Sat Nov 21 03:36:19 2020 +0100

    Superscript substitution (#20219)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 56fd8a22f6..0e1de36b57 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -313,8 +313,8 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("温度");     //"Temperature"
   PROGMEM Language_Str MSG_MOTION                          = _UxGT("运动");     //"Motion"
   PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("料丝");     //"Filament" menu_advanced_filament
-  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E 在 mm³");     //"E in mm3" volumetric_enabled
-  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT                = _UxGT("E 限制 在 mm³");
+  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E 在 mm") SUPERSCRIPT_THREE;     //"E in mm3" volumetric_enabled
+  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT                = _UxGT("E 限制 在 mm") SUPERSCRIPT_THREE;
   PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT_E              = _UxGT("E 限制 *");
   PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("丝料直径");     //"Fil. Dia."
   PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("丝料直径 *");

commit 18fb4b1ce1cff0843bb2ac2cb810dd15081747b4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Nov 7 17:43:47 2020 -0600

    MSG_AUTOSTART => MSG_RUN_AUTO_FILES

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 3bebe12fda..56fd8a22f6 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -51,7 +51,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MAIN                            = _UxGT("主菜单");     //"Main"
   PROGMEM Language_Str MSG_ADVANCED_SETTINGS               = _UxGT("高级设置");
   PROGMEM Language_Str MSG_CONFIGURATION                   = _UxGT("配置");
-  PROGMEM Language_Str MSG_AUTOSTART                       = _UxGT("自动开始");     //"Autostart"
+  PROGMEM Language_Str MSG_RUN_AUTO_FILES                  = _UxGT("自动开始");     //"Autostart"
   PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("关闭步进电机");     //"Disable steppers"
   PROGMEM Language_Str MSG_DEBUG_MENU                      = _UxGT("调试菜单");     // "Debug Menu"
   PROGMEM Language_Str MSG_PROGRESS_BAR_TEST               = _UxGT("进度条测试");     // "Progress Bar Test"

commit b31e358270608afd02be895d4e3ca43ae927d31e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 6 02:59:51 2020 -0500

    Improve retract / unretract labels

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index a70e0876a8..3bebe12fda 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -373,13 +373,13 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_STOPPED                         = _UxGT("已停止");     //"STOPPED. "
   PROGMEM Language_Str MSG_CONTROL_RETRACT                 = _UxGT("回抽长度mm");     //"Retract mm" retract_length, retract length (positive mm)
   PROGMEM Language_Str MSG_CONTROL_RETRACT_SWAP            = _UxGT("换手回抽长度mm");     //"Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
-  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("回抽速率mm/s");     //"Retract  V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
+  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("回抽速率mm/s");     //"Retract V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
   PROGMEM Language_Str MSG_CONTROL_RETRACT_ZHOP            = _UxGT("Hop mm");     //"Hop mm" retract_zraise, retract Z-lift
   PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("回抽恢复长度mm");     //"UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
   PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("换手回抽恢复长度mm");     //"S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("回抽恢复后进料速率mm/s");     //"UnRet  V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("回抽恢复后进料速率mm/s");     //"Unretract V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
   PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAPF   = _UxGT("S UnRet V");     // "S UnRet V"
-  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("自动抽回");     //"AutoRetr." autoretract_enabled,
+  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("自动抽回");     //"Auto-Retract" autoretract_enabled,
   PROGMEM Language_Str MSG_FILAMENT_SWAP_LENGTH            = _UxGT("交换长度");
   PROGMEM Language_Str MSG_FILAMENT_SWAP_EXTRA             = _UxGT("额外的交换");
   PROGMEM Language_Str MSG_FILAMENT_PURGE_LENGTH           = _UxGT("清洗长度");

commit 0ff3ae3cc600828fec955c35c37b44497fdff621
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 4 14:29:02 2020 -0500

    Fix Tune/Fan edit items
    
    - Fixes #19617
    - Followup to #18400

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 53dac64c0b..a70e0876a8 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -630,8 +630,8 @@ namespace Language_zh_CN {
 
 #if FAN_COUNT == 1
   #define MSG_FIRST_FAN_SPEED       MSG_FAN_SPEED
-  #define MSG_FIRST_EXTRA_FAN_SPEED MSG_EXTRA_FAN_SPEED
+  #define MSG_EXTRA_FIRST_FAN_SPEED MSG_EXTRA_FAN_SPEED
 #else
   #define MSG_FIRST_FAN_SPEED       MSG_FAN_SPEED_N
-  #define MSG_FIRST_EXTRA_FAN_SPEED MSG_EXTRA_FAN_SPEED_N
+  #define MSG_EXTRA_FIRST_FAN_SPEED MSG_EXTRA_FAN_SPEED_N
 #endif

commit 4424645e04c9e75462d36de8f7a82e67cc9c262e
Author: qwewer0 <57561110+qwewer0@users.noreply.github.com>
Date:   Mon Sep 28 21:53:50 2020 +0200

    Multi-line comments cleanup (#19535)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index d30ee789dd..53dac64c0b 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -26,7 +26,6 @@
  *
  * LCD Menu Messages
  * See also https://marlinfw.org/docs/development/lcd_language.html
- *
  */
 namespace Language_zh_CN {
   using namespace Language_en;  // Inherit undefined strings from English

commit 979876e958e73e642b51eb655461c92947fe1deb
Author: ellensp <ellensp@hotmail.com>
Date:   Mon Sep 14 16:58:39 2020 +1200

    Improve temperature runaway, idle timeout (#19339)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 2a98d58e81..d30ee789dd 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -447,10 +447,6 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_THERMAL_RUNAWAY_CHAMBER         = _UxGT("机箱热量失控");
   PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("错误：最高温度");     //"Err: MAXTEMP"
   PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("错误：最低温度");     //"Err: MINTEMP"
-  PROGMEM Language_Str MSG_ERR_MAXTEMP_BED                 = _UxGT("错误：最高热床温度");     //"Err: MAXTEMP BED"
-  PROGMEM Language_Str MSG_ERR_MINTEMP_BED                 = _UxGT("错误：最低热床温度");     //"Err: MINTEMP BED"
-  PROGMEM Language_Str MSG_ERR_MAXTEMP_CHAMBER             = _UxGT("错误：最高机箱温度");
-  PROGMEM Language_Str MSG_ERR_MINTEMP_CHAMBER             = _UxGT("错误：最低机箱温度");
   PROGMEM Language_Str MSG_HALTED                          = _UxGT("打印停机");     //"PRINTER HALTED"
   PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("请重置");     //"Please reset"
   PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("天");     //"d" // One character only

commit b2ba9009d045fc21e7a923e92ab9a91e4275247d
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Sep 10 23:47:58 2020 +0200

    Fix "too cold" in M600 (#19332)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 49d7acd94c..2a98d58e81 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -532,7 +532,6 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_RUNOUT_DISTANCE_MM              = _UxGT("断料距离mm");
   PROGMEM Language_Str MSG_KILL_HOMING_FAILED              = _UxGT("归原位失败");     // "Homing failed"
   PROGMEM Language_Str MSG_LCD_PROBING_FAILED              = _UxGT("探针探测失败");     // "Probing failed"
-  PROGMEM Language_Str MSG_M600_TOO_COLD                   = _UxGT("M600: 太凉");     // "M600: Too cold"
 
   PROGMEM Language_Str MSG_MMU2_CHOOSE_FILAMENT_HEADER     = _UxGT("选择料");
   PROGMEM Language_Str MSG_MMU2_MENU                       = _UxGT("MMU");

commit 56c44b053d11925c67a32f26ad84c2e76c97fd56
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Sep 1 23:59:29 2020 +0200

    Delete old LCD strings (#19227)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index cf772caaef..49d7acd94c 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -441,8 +441,6 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_BABYSTEP_TOTAL                  = _UxGT("总计");
   PROGMEM Language_Str MSG_ENDSTOP_ABORT                   = _UxGT("挡块终止");     //"Endstop abort"
   PROGMEM Language_Str MSG_HEATING_FAILED_LCD              = _UxGT("加热失败");     //"Heating failed"
-  PROGMEM Language_Str MSG_HEATING_FAILED_LCD_BED          = _UxGT("热床加热失败");
-  PROGMEM Language_Str MSG_HEATING_FAILED_LCD_CHAMBER      = _UxGT("机箱加热失败");
   PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("错误：冗余温度");     //"Err: REDUNDANT TEMP"
   PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("温控失控");     //"THERMAL RUNAWAY"
   PROGMEM Language_Str MSG_THERMAL_RUNAWAY_BED             = _UxGT("热床热量失控");

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index c5b1b84406..cf772caaef 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit 12ebb7115563bff96af4306486adf51f185e85d8
Author: cccc <cuiwei_cv@163.com>
Date:   Mon Jul 20 06:23:52 2020 +0800

    Update Chinese (cn) language (#18705)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index d0fd130a93..c5b1b84406 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -223,7 +223,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_INTENSITY_W                     = _UxGT("白饱和度");     // "White Intensity")
   PROGMEM Language_Str MSG_LED_BRIGHTNESS                  = _UxGT("亮度");     // "Brightness")
 
-  PROGMEM Language_Str MSG_MOVING                          = _UxGT("移动 ...");     // "Moving...")
+  PROGMEM Language_Str MSG_MOVING                          = _UxGT("移动...");     // "Moving...")
   PROGMEM Language_Str MSG_FREE_XY                         = _UxGT("释放 XY");     // "Free XY")
   PROGMEM Language_Str MSG_MOVE_X                          = _UxGT("移动X");     //"Move X"
   PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("移动Y");     //"Move Y"
@@ -306,17 +306,17 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_XY_FREQUENCY_LIMIT              = _UxGT("频率最大");
   PROGMEM Language_Str MSG_XY_FREQUENCY_FEEDRATE           = _UxGT("进给速度");
   PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("轴步数/mm");     //"Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
-  PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT("轴步数/mm");     //"Asteps/mm"
-  PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("轴步数/mm");     //"Bsteps/mm"
-  PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT("轴步数/mm");     //"Csteps/mm"
-  PROGMEM Language_Str MSG_E_STEPS                         = _UxGT("挤出机步数/mm");     //"Esteps/mm"
-  PROGMEM Language_Str MSG_EN_STEPS                        = _UxGT("挤出机~步数/mm");
+  PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT("步数/mm");     //"Asteps/mm"
+  PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("步数/mm");     //"Bsteps/mm"
+  PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT("步数/mm");     //"Csteps/mm"
+  PROGMEM Language_Str MSG_E_STEPS                         = _UxGT("E 步数/mm");     //"Esteps/mm"
+  PROGMEM Language_Str MSG_EN_STEPS                        = _UxGT("* 步数/mm");
   PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("温度");     //"Temperature"
   PROGMEM Language_Str MSG_MOTION                          = _UxGT("运动");     //"Motion"
   PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("料丝");     //"Filament" menu_advanced_filament
-  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E in mm³");     //"E in mm3" volumetric_enabled
-  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT                = _UxGT("E Limit in mm³");
-  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT_E              = _UxGT("E Limit *");
+  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E 在 mm³");     //"E in mm3" volumetric_enabled
+  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT                = _UxGT("E 限制 在 mm³");
+  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT_E              = _UxGT("E 限制 *");
   PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("丝料直径");     //"Fil. Dia."
   PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("丝料直径 *");
   PROGMEM Language_Str MSG_FILAMENT_UNLOAD                 = _UxGT("卸载 mm");     // "Unload mm"
@@ -394,10 +394,10 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_SINGLENOZZLE_FAN_TIME           = _UxGT("风扇时间");
   PROGMEM Language_Str MSG_TOOL_MIGRATION_ON               = _UxGT("自动开");
   PROGMEM Language_Str MSG_TOOL_MIGRATION_OFF              = _UxGT("自动关");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION                  = _UxGT("Tool Migration");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION_AUTO             = _UxGT("Auto-migration");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION_END              = _UxGT("Last Extruder");
-  PROGMEM Language_Str MSG_TOOL_MIGRATION_SWAP             = _UxGT("Migrate to *");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION                  = _UxGT("工具迁移");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION_AUTO             = _UxGT("自动迁移");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION_END              = _UxGT("上一个挤出机");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION_SWAP             = _UxGT("迁移至 *");
   PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("更换丝料");     //"Change filament"
   PROGMEM Language_Str MSG_FILAMENTCHANGE_E                = _UxGT("更换丝料 *");     //"Change filament"
   PROGMEM Language_Str MSG_FILAMENTLOAD                    = _UxGT("装载丝料");     // "Load filament"
@@ -421,7 +421,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE              = _UxGT("模式保存");
   PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE_5V           = _UxGT("设置BLTouch为5V");
   PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE_OD           = _UxGT("设置BLTouch为OD");
-  PROGMEM Language_Str MSG_BLTOUCH_MODE_ECHO               = _UxGT("报告Drain");
+  PROGMEM Language_Str MSG_BLTOUCH_MODE_ECHO               = _UxGT("报告开漏");
   PROGMEM Language_Str MSG_BLTOUCH_MODE_CHANGE             = _UxGT("危险: 错误的设置将引起损坏! 是否继续?");
   PROGMEM Language_Str MSG_TOUCHMI_PROBE                   = _UxGT("TouchMI");
   PROGMEM Language_Str MSG_TOUCHMI_INIT                    = _UxGT("初始化TouchMI");

commit a3795e3e48effb244c9f7a0a5b60402875efb368
Author: cr20-123 <66994235+cr20-123@users.noreply.github.com>
Date:   Sat Jul 18 18:41:47 2020 -0400

    Prettier BLTouch menu items (#18682)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 512d77aa22..d0fd130a93 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -411,14 +411,14 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z探针在热床之外");     //"Z probe out. bed" Z probe is not within the physical limits
   PROGMEM Language_Str MSG_SKEW_FACTOR                     = _UxGT("偏斜因数");     // "Skew Factor"
   PROGMEM Language_Str MSG_BLTOUCH                         = _UxGT("BLTouch");     // "BLTouch"
-  PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("Cmd: 自检");
-  PROGMEM Language_Str MSG_BLTOUCH_RESET                   = _UxGT("Cmd: 重置");
-  PROGMEM Language_Str MSG_BLTOUCH_STOW                    = _UxGT("Cmd: 装载");
-  PROGMEM Language_Str MSG_BLTOUCH_DEPLOY                  = _UxGT("Cmd: 部署");
-  PROGMEM Language_Str MSG_BLTOUCH_SW_MODE                 = _UxGT("Cmd: SW模式");
-  PROGMEM Language_Str MSG_BLTOUCH_5V_MODE                 = _UxGT("Cmd: 5V模式");
-  PROGMEM Language_Str MSG_BLTOUCH_OD_MODE                 = _UxGT("Cmd: OD模式");
-  PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE              = _UxGT("Cmd: 模式保存");
+  PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("自检");
+  PROGMEM Language_Str MSG_BLTOUCH_RESET                   = _UxGT("重置");
+  PROGMEM Language_Str MSG_BLTOUCH_STOW                    = _UxGT("装载");
+  PROGMEM Language_Str MSG_BLTOUCH_DEPLOY                  = _UxGT("部署");
+  PROGMEM Language_Str MSG_BLTOUCH_SW_MODE                 = _UxGT("SW模式");
+  PROGMEM Language_Str MSG_BLTOUCH_5V_MODE                 = _UxGT("5V模式");
+  PROGMEM Language_Str MSG_BLTOUCH_OD_MODE                 = _UxGT("OD模式");
+  PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE              = _UxGT("模式保存");
   PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE_5V           = _UxGT("设置BLTouch为5V");
   PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE_OD           = _UxGT("设置BLTouch为OD");
   PROGMEM Language_Str MSG_BLTOUCH_MODE_ECHO               = _UxGT("报告Drain");

commit b0c6cfb0511b8d71fec26ab91cd945f3d623b3c0
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Jul 9 10:11:57 2020 +0200

    MarlinUI support for up to 5 Material Presets (#18488)
    
    - Add `I` preset parameter to `G26`, `M106`, `M140`, and `M190`.
    - Extend menu items to permit a string interpolation.
    - Keep material names in a list and interpolate in menu items.
    - Extend material presets to support up to 5 predefined materials.
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 7aaf57d3b5..512d77aa22 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -69,20 +69,23 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_SET_HOME_OFFSETS                = _UxGT("设置原点偏移");     //"Set home offsets"
   PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("偏移已启用");     //"Offsets applied"
   PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("设置原点");     //"Set origin"
-  PROGMEM Language_Str MSG_PREHEAT_1                       = _UxGT("预热 ") PREHEAT_1_LABEL;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_1_H                     = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_1_END                   = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E                 = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_1 " "
-  PROGMEM Language_Str MSG_PREHEAT_1_ALL                   = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部");     //MSG_PREHEAT_1 " All"
-  PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY               = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床");     //MSG_PREHEAT_1 " Bed"
-  PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS              = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置");     //MSG_PREHEAT_1 " conf"
-  PROGMEM Language_Str MSG_PREHEAT_2                       = _UxGT("预热 ") PREHEAT_2_LABEL;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_2_H                     = _UxGT("预热 ") PREHEAT_2_LABEL " ~";     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_2_END                   = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_2 " "
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E                 = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_2 " "
-  PROGMEM Language_Str MSG_PREHEAT_2_ALL                   = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 全部");     //MSG_PREHEAT_2 " All"
-  PROGMEM Language_Str MSG_PREHEAT_2_BEDONLY               = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 热床");     //MSG_PREHEAT_2 " Bed"
-  PROGMEM Language_Str MSG_PREHEAT_2_SETTINGS              = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 设置");     //MSG_PREHEAT_2 " conf"
+  #if PREHEAT_COUNT
+    PROGMEM Language_Str MSG_PREHEAT_1                     = _UxGT("预热 ") PREHEAT_1_LABEL;     //"Preheat PREHEAT_2_LABEL"
+    PROGMEM Language_Str MSG_PREHEAT_1_H                   = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     //"Preheat PREHEAT_2_LABEL"
+    PROGMEM Language_Str MSG_PREHEAT_1_END                 = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
+    PROGMEM Language_Str MSG_PREHEAT_1_END_E               = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_1 " "
+    PROGMEM Language_Str MSG_PREHEAT_1_ALL                 = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部");     //MSG_PREHEAT_1 " All"
+    PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY             = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床");     //MSG_PREHEAT_1 " Bed"
+    PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS            = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置");     //MSG_PREHEAT_1 " conf"
+
+    PROGMEM Language_Str MSG_PREHEAT_M                     = _UxGT("预热 $");     //"Preheat PREHEAT_2_LABEL"
+    PROGMEM Language_Str MSG_PREHEAT_M_H                   = _UxGT("预热 $ ~");     //"Preheat PREHEAT_2_LABEL"
+    PROGMEM Language_Str MSG_PREHEAT_M_END                 = _UxGT("预热 $ 喷嘴");     //MSG_PREHEAT_1 " "
+    PROGMEM Language_Str MSG_PREHEAT_M_END_E               = _UxGT("预热 $ 喷嘴 ~");     //MSG_PREHEAT_1 " "
+    PROGMEM Language_Str MSG_PREHEAT_M_ALL                 = _UxGT("预热 $ 全部");     //MSG_PREHEAT_1 " All"
+    PROGMEM Language_Str MSG_PREHEAT_M_BEDONLY             = _UxGT("预热 $ 热床");     //MSG_PREHEAT_1 " Bed"
+    PROGMEM Language_Str MSG_PREHEAT_M_SETTINGS            = _UxGT("预热 $ 设置");     //MSG_PREHEAT_1 " conf"
+  #endif
   PROGMEM Language_Str MSG_PREHEAT_CUSTOM                  = _UxGT("预热自定义");
   PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("降温");     //"Cooldown"
   PROGMEM Language_Str MSG_CUTTER_FREQUENCY                = _UxGT("切割频率");
@@ -145,14 +148,14 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_UBL_DONE_EDITING_MESH           = _UxGT("完成编辑网格");     // "Done Editing Mesh"
   PROGMEM Language_Str MSG_UBL_BUILD_CUSTOM_MESH           = _UxGT("创设客户网格");     // "Build Custom Mesh"
   PROGMEM Language_Str MSG_UBL_BUILD_MESH_MENU             = _UxGT("创设网格");     // "Build Mesh"
-  PROGMEM Language_Str MSG_UBL_BUILD_MESH_M1               = _UxGT("创设 ") PREHEAT_1_LABEL _UxGT(" 网格");     // "Build PREHEAT_1_LABEL Mesh"
-  PROGMEM Language_Str MSG_UBL_BUILD_MESH_M2               = _UxGT("创设 ") PREHEAT_2_LABEL _UxGT(" 网格");     // "Build PREHEAT_2_LABEL Mesh"
+  #if PREHEAT_COUNT
+    PROGMEM Language_Str MSG_UBL_BUILD_MESH_M              = _UxGT("创设 $ 网格");     // "Build PREHEAT_1_LABEL Mesh"
+    PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_M           = _UxGT("批准 $ 网格");     // "Validate PREHEAT_1_LABEL Mesh"
+  #endif
   PROGMEM Language_Str MSG_UBL_BUILD_COLD_MESH             = _UxGT("创设冷网格");     // "Build Cold Mesh"
   PROGMEM Language_Str MSG_UBL_MESH_HEIGHT_ADJUST          = _UxGT("调整网格高度");     // "Adjust Mesh Height"
   PROGMEM Language_Str MSG_UBL_MESH_HEIGHT_AMOUNT          = _UxGT("高度合计");     // "Height Amount"
   PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_MENU          = _UxGT("批准网格");     // "Validate Mesh"
-  PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_M1            = _UxGT("批准 ") PREHEAT_1_LABEL _UxGT(" 网格");     // "Validate PREHEAT_1_LABEL Mesh"
-  PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_M2            = _UxGT("批准 ") PREHEAT_2_LABEL _UxGT(" 网格");     // "Validate PREHEAT_2_LABEL Mesh"
   PROGMEM Language_Str MSG_UBL_VALIDATE_CUSTOM_MESH        = _UxGT("批准客户网格");     // "Validate Custom Mesh"
   PROGMEM Language_Str MSG_G26_HEATING_BED                 = _UxGT("G26加热热床");
   PROGMEM Language_Str MSG_G26_HEATING_NOZZLE              = _UxGT("G26加热喷嘴");

commit f52a1eb111d7654fec1e03db7fa87a59a8146730
Author: cccc <cuiwei_cv@163.com>
Date:   Wed Jul 8 14:15:05 2020 +0800

    Update Chinese (zh_CN) language (#18580)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 3445227540..7aaf57d3b5 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -35,7 +35,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str LANGUAGE                            = _UxGT("简体中文");
 
   PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT("已就绪.");     //" ready."
-  PROGMEM Language_Str MSG_MARLIN                          = _UxGT("Marlin");
+  PROGMEM Language_Str MSG_MARLIN                          = _UxGT("马林");
   PROGMEM Language_Str MSG_YES                             = _UxGT("是");
   PROGMEM Language_Str MSG_NO                              = _UxGT("否");
   PROGMEM Language_Str MSG_BACK                            = _UxGT("返回");     // ”Back“
@@ -201,7 +201,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_UBL_6_FINE_TUNE_ALL             = _UxGT("6. 细调所有的");
   PROGMEM Language_Str MSG_UBL_7_SAVE_MESH                 = _UxGT("7. 保存热床网格");
 
-  PROGMEM Language_Str MSG_LED_CONTROL                     = _UxGT("灯管控制");     // "LED Control")
+  PROGMEM Language_Str MSG_LED_CONTROL                     = _UxGT("LED控制");     // "LED Control")
   PROGMEM Language_Str MSG_LEDS                            = _UxGT("灯");     // "Lights")
   PROGMEM Language_Str MSG_LED_PRESETS                     = _UxGT("灯预置");     // "Light Presets")
   PROGMEM Language_Str MSG_SET_LEDS_RED                    = _UxGT("红");     // "Red")
@@ -234,11 +234,11 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT("移动 10 mm");     //"Move 10mm"
   PROGMEM Language_Str MSG_SPEED                           = _UxGT("速率");     //"Speed"
   PROGMEM Language_Str MSG_BED_Z                           = _UxGT("热床Z");     //"Bed Z"
-  PROGMEM Language_Str MSG_NOZZLE                          = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴");     //"Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_N                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ~");     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE                          = _UxGT("喷嘴");     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_N                        = _UxGT("喷嘴 ~");     //"Nozzle" 噴嘴
   PROGMEM Language_Str MSG_NOZZLE_PARKED                   = _UxGT("喷嘴已停靠");
   PROGMEM Language_Str MSG_NOZZLE_STANDBY                  = _UxGT("喷嘴待命中");
-  PROGMEM Language_Str MSG_BED                             = " " LCD_STR_THERMOMETER _UxGT(" 热床");     //"Bed"
+  PROGMEM Language_Str MSG_BED                             = _UxGT("热床");     //"Bed"
   PROGMEM Language_Str MSG_CHAMBER                         = _UxGT("机箱壳");
   PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("风扇速率");     //"Fan speed"
   PROGMEM Language_Str MSG_FAN_SPEED_N                     = _UxGT("风扇速率 ~");     //"Fan speed"
@@ -310,8 +310,10 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_EN_STEPS                        = _UxGT("挤出机~步数/mm");
   PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("温度");     //"Temperature"
   PROGMEM Language_Str MSG_MOTION                          = _UxGT("运动");     //"Motion"
-  PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("丝料测容");     //"Filament" menu_advanced_filament
-  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("测容积mm³");     //"E in mm3" volumetric_enabled
+  PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("料丝");     //"Filament" menu_advanced_filament
+  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E in mm³");     //"E in mm3" volumetric_enabled
+  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT                = _UxGT("E Limit in mm³");
+  PROGMEM Language_Str MSG_VOLUMETRIC_LIMIT_E              = _UxGT("E Limit *");
   PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("丝料直径");     //"Fil. Dia."
   PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("丝料直径 *");
   PROGMEM Language_Str MSG_FILAMENT_UNLOAD                 = _UxGT("卸载 mm");     // "Unload mm"
@@ -329,10 +331,14 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_SETTINGS_STORED                 = _UxGT("设置已保存");
   PROGMEM Language_Str MSG_MEDIA_UPDATE                    = _UxGT("存储器更新");
   PROGMEM Language_Str MSG_RESET_PRINTER                   = _UxGT("复位打印机");
-  PROGMEM Language_Str MSG_REFRESH                         = _UxGT("刷新");     //"Refresh"
+  PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH _UxGT("刷新");
   PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("信息屏");     //"Info screen"
   PROGMEM Language_Str MSG_PREPARE                         = _UxGT("准备");     //"Prepare"
   PROGMEM Language_Str MSG_TUNE                            = _UxGT("调整");     //"Tune"
+  PROGMEM Language_Str MSG_POWER_MONITOR                   = _UxGT("电源监控");
+  PROGMEM Language_Str MSG_CURRENT                         = _UxGT("电流");
+  PROGMEM Language_Str MSG_VOLTAGE                         = _UxGT("电压");
+  PROGMEM Language_Str MSG_POWER                           = _UxGT("功率");
   PROGMEM Language_Str MSG_START_PRINT                     = _UxGT("开始打印");
   PROGMEM Language_Str MSG_BUTTON_NEXT                     = _UxGT("下一个");
   PROGMEM Language_Str MSG_BUTTON_INIT                     = _UxGT("初始");

commit a6b8b12a6a001a25dc73e8ab08f71e357ea58e48
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jul 5 18:00:37 2020 -0500

    Simplify home_z_safely, respect HOME_AFTER_DEACTIVATE

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index fc9ae67818..3445227540 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -444,7 +444,6 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_ERR_MINTEMP_BED                 = _UxGT("错误：最低热床温度");     //"Err: MINTEMP BED"
   PROGMEM Language_Str MSG_ERR_MAXTEMP_CHAMBER             = _UxGT("错误：最高机箱温度");
   PROGMEM Language_Str MSG_ERR_MINTEMP_CHAMBER             = _UxGT("错误：最低机箱温度");
-  PROGMEM Language_Str MSG_ERR_Z_HOMING                    = _UxGT("归位 XY 先");     // "Home XY First"
   PROGMEM Language_Str MSG_HALTED                          = _UxGT("打印停机");     //"PRINTER HALTED"
   PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("请重置");     //"Please reset"
   PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("天");     //"d" // One character only

commit 1e41998dc6bf58f3b6e63df8d217a2e241ea2af4
Author: cccc <cuiwei_cv@163.com>
Date:   Sun Jun 14 05:34:05 2020 +0800

    Fix Chinese language typo (#18268)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 8fb8ad88f1..fc9ae67818 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -423,9 +423,9 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MANUAL_STOW                     = _UxGT("收好Z探针");
   PROGMEM Language_Str MSG_HOME_FIRST                      = _UxGT("归位 %s%s%s 先");     //"Home ... first"
   PROGMEM Language_Str MSG_ZPROBE_OFFSETS                  = _UxGT("探针偏移量");
-  PROGMEM Language_Str MSG_ZPROBE_XOFFSET                  = _UxGT("探针X偏移量");
-  PROGMEM Language_Str MSG_ZPROBE_YOFFSET                  = _UxGT("探针Y偏移量");
-  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("探针Y偏移量");     //"Z Offset"
+  PROGMEM Language_Str MSG_ZPROBE_XOFFSET                  = _UxGT("探针X偏移");
+  PROGMEM Language_Str MSG_ZPROBE_YOFFSET                  = _UxGT("探针Y偏移");
+  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("探针Z偏移");     //"Z Offset"
   PROGMEM Language_Str MSG_BABYSTEP_X                      = _UxGT("微量调整X轴");     //"Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
   PROGMEM Language_Str MSG_BABYSTEP_Y                      = _UxGT("微量调整Y轴");     //"Babystep Y"
   PROGMEM Language_Str MSG_BABYSTEP_Z                      = _UxGT("微量调整Z轴");     //"Babystep Z"

commit 2840e3a8f9be71b19155602650a4097031f2d2c0
Author: cccc <cuiwei_cv@163.com>
Date:   Mon Jun 8 08:43:30 2020 +0800

    Update Chinese (CH) language (#18211)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index bb30b775bf..8fb8ad88f1 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -32,22 +32,35 @@ namespace Language_zh_CN {
   using namespace Language_en;  // Inherit undefined strings from English
 
   constexpr uint8_t    CHARSIZE                            = 3;
-  PROGMEM Language_Str LANGUAGE                            = _UxGT("Simplified Chinese");
+  PROGMEM Language_Str LANGUAGE                            = _UxGT("简体中文");
 
   PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT("已就绪.");     //" ready."
+  PROGMEM Language_Str MSG_MARLIN                          = _UxGT("Marlin");
+  PROGMEM Language_Str MSG_YES                             = _UxGT("是");
+  PROGMEM Language_Str MSG_NO                              = _UxGT("否");
   PROGMEM Language_Str MSG_BACK                            = _UxGT("返回");     // ”Back“
+  PROGMEM Language_Str MSG_MEDIA_ABORTING                  = _UxGT("放弃中...");
   PROGMEM Language_Str MSG_MEDIA_INSERTED                  = _UxGT("存储卡已插入");     //"Card inserted"
   PROGMEM Language_Str MSG_MEDIA_REMOVED                   = _UxGT("存储卡被拔出");     //"Card removed"
+  PROGMEM Language_Str MSG_MEDIA_WAITING                   = _UxGT("等待存储器");
+  PROGMEM Language_Str MSG_MEDIA_READ_ERROR                = _UxGT("存储器读取错误");
+  PROGMEM Language_Str MSG_MEDIA_USB_REMOVED               = _UxGT("USB设备已弹出");
+  PROGMEM Language_Str MSG_MEDIA_USB_FAILED                = _UxGT("USB启动错误");
+  PROGMEM Language_Str MSG_KILL_SUBCALL_OVERFLOW           = _UxGT("子响应溢出");
   PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("挡块");     //"Endstops" // Max length 8 characters
+  PROGMEM Language_Str MSG_LCD_SOFT_ENDSTOPS               = _UxGT("软挡块");
   PROGMEM Language_Str MSG_MAIN                            = _UxGT("主菜单");     //"Main"
+  PROGMEM Language_Str MSG_ADVANCED_SETTINGS               = _UxGT("高级设置");
+  PROGMEM Language_Str MSG_CONFIGURATION                   = _UxGT("配置");
   PROGMEM Language_Str MSG_AUTOSTART                       = _UxGT("自动开始");     //"Autostart"
   PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("关闭步进电机");     //"Disable steppers"
   PROGMEM Language_Str MSG_DEBUG_MENU                      = _UxGT("调试菜单");     // "Debug Menu"
   PROGMEM Language_Str MSG_PROGRESS_BAR_TEST               = _UxGT("进度条测试");     // "Progress Bar Test"
-  PROGMEM Language_Str MSG_AUTO_HOME                       = _UxGT("回原点");     //"Auto home"
+  PROGMEM Language_Str MSG_AUTO_HOME                       = _UxGT("自动回原点");     //"Auto home"
   PROGMEM Language_Str MSG_AUTO_HOME_X                     = _UxGT("回X原位");     //"Home X"
   PROGMEM Language_Str MSG_AUTO_HOME_Y                     = _UxGT("回Y原位");     //"Home Y"
   PROGMEM Language_Str MSG_AUTO_HOME_Z                     = _UxGT("回Z原位");     //"Home Z"
+  PROGMEM Language_Str MSG_AUTO_Z_ALIGN                    = _UxGT("自动Z对齐");
   PROGMEM Language_Str MSG_LEVEL_BED_HOMING                = _UxGT("平台调平XYZ归原位");     //"Homing XYZ"
   PROGMEM Language_Str MSG_LEVEL_BED_WAITING               = _UxGT("单击开始热床调平");     //"Click to Begin"
   PROGMEM Language_Str MSG_LEVEL_BED_NEXT_POINT            = _UxGT("下个热床调平点");     //"Next Point"
@@ -70,7 +83,18 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_PREHEAT_2_ALL                   = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 全部");     //MSG_PREHEAT_2 " All"
   PROGMEM Language_Str MSG_PREHEAT_2_BEDONLY               = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 热床");     //MSG_PREHEAT_2 " Bed"
   PROGMEM Language_Str MSG_PREHEAT_2_SETTINGS              = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 设置");     //MSG_PREHEAT_2 " conf"
+  PROGMEM Language_Str MSG_PREHEAT_CUSTOM                  = _UxGT("预热自定义");
   PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("降温");     //"Cooldown"
+  PROGMEM Language_Str MSG_CUTTER_FREQUENCY                = _UxGT("切割频率");
+  PROGMEM Language_Str MSG_LASER_MENU                      = _UxGT("激光控制");
+  PROGMEM Language_Str MSG_LASER_OFF                       = _UxGT("激光关");
+  PROGMEM Language_Str MSG_LASER_ON                        = _UxGT("激光开");
+  PROGMEM Language_Str MSG_LASER_POWER                     = _UxGT("激光电源");
+  PROGMEM Language_Str MSG_SPINDLE_MENU                    = _UxGT("主轴控制");
+  PROGMEM Language_Str MSG_SPINDLE_OFF                     = _UxGT("主轴关");
+  PROGMEM Language_Str MSG_SPINDLE_ON                      = _UxGT("主轴开");
+  PROGMEM Language_Str MSG_SPINDLE_POWER                   = _UxGT("主轴电源");
+  PROGMEM Language_Str MSG_SPINDLE_REVERSE                 = _UxGT("主轴反转");
   PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("电源打开");     //"Switch power on"
   PROGMEM Language_Str MSG_SWITCH_PS_OFF                   = _UxGT("电源关闭");     //"Switch power off"
   PROGMEM Language_Str MSG_EXTRUDE                         = _UxGT("挤出");     //"Extrude"
@@ -79,15 +103,31 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_BED_LEVELING                    = _UxGT("调平热床");     //"Bed leveling"
   PROGMEM Language_Str MSG_LEVEL_BED                       = _UxGT("调平热床");     //"Level bed"
   PROGMEM Language_Str MSG_LEVEL_CORNERS                   = _UxGT("调平边角");     // "Level corners"
-
   PROGMEM Language_Str MSG_NEXT_CORNER                     = _UxGT("下个边角");     // "Next corner"
+  PROGMEM Language_Str MSG_MESH_EDITOR                     = _UxGT("网格编辑器");
   PROGMEM Language_Str MSG_EDIT_MESH                       = _UxGT("编辑网格");     // "Edit Mesh"
   PROGMEM Language_Str MSG_EDITING_STOPPED                 = _UxGT("网格编辑已停止");     // "Mesh Editing Stopped"
+  PROGMEM Language_Str MSG_PROBING_MESH                    = _UxGT("探测点");
+  PROGMEM Language_Str MSG_MESH_X                          = _UxGT("索引X");
+  PROGMEM Language_Str MSG_MESH_Y                          = _UxGT("索引Y");
+  PROGMEM Language_Str MSG_MESH_EDIT_Z                     = _UxGT("Z 值");
   PROGMEM Language_Str MSG_USER_MENU                       = _UxGT("定制命令");     // "Custom Commands"
-
+  PROGMEM Language_Str MSG_M48_TEST                        = _UxGT("M48探测");
+  PROGMEM Language_Str MSG_M48_POINT                       = _UxGT("M48点");
+  PROGMEM Language_Str MSG_M48_DEVIATION                   = _UxGT("M48偏差");
+  PROGMEM Language_Str MSG_IDEX_MENU                       = _UxGT("IDEX模式");
+  PROGMEM Language_Str MSG_OFFSETS_MENU                    = _UxGT("工具偏移量");
+  PROGMEM Language_Str MSG_IDEX_MODE_AUTOPARK              = _UxGT("自动停靠");
+  PROGMEM Language_Str MSG_IDEX_MODE_DUPLICATE             = _UxGT("复制");
+  PROGMEM Language_Str MSG_IDEX_MODE_MIRRORED_COPY         = _UxGT("镜像复制");
+  PROGMEM Language_Str MSG_IDEX_MODE_FULL_CTRL             = _UxGT("完全控制");
+  PROGMEM Language_Str MSG_HOTEND_OFFSET_X                 = _UxGT("第二喷头是X");
+  PROGMEM Language_Str MSG_HOTEND_OFFSET_Y                 = _UxGT("第二喷头是Y");
+  PROGMEM Language_Str MSG_HOTEND_OFFSET_Z                 = _UxGT("第二喷头是Z");
   PROGMEM Language_Str MSG_UBL_DOING_G29                   = _UxGT("执行G29");     // "Doing G29"
   PROGMEM Language_Str MSG_UBL_TOOLS                       = _UxGT("UBL工具");     // "UBL Tools"
   PROGMEM Language_Str MSG_UBL_LEVEL_BED                   = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
+  PROGMEM Language_Str MSG_LCD_TILTING_MESH                = _UxGT("倾斜點");
   PROGMEM Language_Str MSG_UBL_MANUAL_MESH                 = _UxGT("手工创设网格");     // "Manually Build Mesh"
   PROGMEM Language_Str MSG_UBL_BC_INSERT                   = _UxGT("放置垫片并测量");     // "Place shim & measure"
   PROGMEM Language_Str MSG_UBL_BC_INSERT2                  = _UxGT("测量");     // "Measure"
@@ -95,8 +135,10 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_UBL_MOVING_TO_NEXT              = _UxGT("移动到下一个");     // "Moving to next"
   PROGMEM Language_Str MSG_UBL_ACTIVATE_MESH               = _UxGT("激活UBL");     // "Activate UBL"
   PROGMEM Language_Str MSG_UBL_DEACTIVATE_MESH             = _UxGT("关闭UBL");     // "Deactivate UBL"
-  PROGMEM Language_Str MSG_UBL_SET_TEMP_BED                = _UxGT("设置热床温度");     // "Bed Temp"
+  PROGMEM Language_Str MSG_UBL_SET_TEMP_BED                = _UxGT("热床温度");     // "Bed Temp"
+  PROGMEM Language_Str MSG_UBL_BED_TEMP_CUSTOM             = _UxGT("热床温度");
   PROGMEM Language_Str MSG_UBL_SET_TEMP_HOTEND             = _UxGT("热端温度");     // "Hotend Temp"
+  PROGMEM Language_Str MSG_UBL_HOTEND_TEMP_CUSTOM          = _UxGT("热端温度");
   PROGMEM Language_Str MSG_UBL_MESH_EDIT                   = _UxGT("网格编辑");     // "Mesh Edit"
   PROGMEM Language_Str MSG_UBL_EDIT_CUSTOM_MESH            = _UxGT("编辑客户网格");     // "Edit Custom Mesh"
   PROGMEM Language_Str MSG_UBL_FINE_TUNE_MESH              = _UxGT("细调网格");     // "Fine Tuning Mesh"
@@ -112,6 +154,13 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_M1            = _UxGT("批准 ") PREHEAT_1_LABEL _UxGT(" 网格");     // "Validate PREHEAT_1_LABEL Mesh"
   PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_M2            = _UxGT("批准 ") PREHEAT_2_LABEL _UxGT(" 网格");     // "Validate PREHEAT_2_LABEL Mesh"
   PROGMEM Language_Str MSG_UBL_VALIDATE_CUSTOM_MESH        = _UxGT("批准客户网格");     // "Validate Custom Mesh"
+  PROGMEM Language_Str MSG_G26_HEATING_BED                 = _UxGT("G26加热热床");
+  PROGMEM Language_Str MSG_G26_HEATING_NOZZLE              = _UxGT("G26加热喷嘴");
+  PROGMEM Language_Str MSG_G26_MANUAL_PRIME                = _UxGT("手动填装中...");
+  PROGMEM Language_Str MSG_G26_FIXED_LENGTH                = _UxGT("固定距离填装");
+  PROGMEM Language_Str MSG_G26_PRIME_DONE                  = _UxGT("填装完成");
+  PROGMEM Language_Str MSG_G26_CANCELED                    = _UxGT("G26已取消");
+  PROGMEM Language_Str MSG_G26_LEAVING                     = _UxGT("离开G26");
   PROGMEM Language_Str MSG_UBL_CONTINUE_MESH               = _UxGT("继续热床网格");     // "Continue Bed Mesh"
   PROGMEM Language_Str MSG_UBL_MESH_LEVELING               = _UxGT("网格调平");     // "Mesh Leveling"
   PROGMEM Language_Str MSG_UBL_3POINT_MESH_LEVELING        = _UxGT("三点调平");     // "3-Point Leveling"
@@ -141,6 +190,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_UBL_NO_STORAGE                  = _UxGT("没有存储");     // "No storage"
   PROGMEM Language_Str MSG_UBL_SAVE_ERROR                  = _UxGT("错误: UBL保存");     // "Err: UBL Save"
   PROGMEM Language_Str MSG_UBL_RESTORE_ERROR               = _UxGT("错误: UBL还原");     // "Err: UBL Restore"
+  PROGMEM Language_Str MSG_UBL_Z_OFFSET                    = _UxGT("Z偏移量: ");
   PROGMEM Language_Str MSG_UBL_Z_OFFSET_STOPPED            = _UxGT("Z偏移已停止");     // "Z-Offset Stopped"
   PROGMEM Language_Str MSG_UBL_STEP_BY_STEP_MENU           = _UxGT("一步步UBL");     // "Step-By-Step UBL"
   PROGMEM Language_Str MSG_UBL_1_BUILD_COLD_MESH           = _UxGT("1. 创设冷网格");
@@ -177,6 +227,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("移动Z");     //"Move Z"
   PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("挤出机");     //"Extruder"
   PROGMEM Language_Str MSG_MOVE_EN                         = _UxGT("挤出机 *");     //"Extruder"
+  PROGMEM Language_Str MSG_HOTEND_TOO_COLD                 = _UxGT("热端太冷");
   PROGMEM Language_Str MSG_MOVE_Z_DIST                     = _UxGT("移动 %s mm");     //"Move 0.025mm"
   PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("移动 0.1 mm");     //"Move 0.1mm"
   PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("移动 1 mm");     //"Move 1mm"
@@ -185,11 +236,20 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_BED_Z                           = _UxGT("热床Z");     //"Bed Z"
   PROGMEM Language_Str MSG_NOZZLE                          = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴");     //"Nozzle" 噴嘴
   PROGMEM Language_Str MSG_NOZZLE_N                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ~");     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_PARKED                   = _UxGT("喷嘴已停靠");
+  PROGMEM Language_Str MSG_NOZZLE_STANDBY                  = _UxGT("喷嘴待命中");
   PROGMEM Language_Str MSG_BED                             = " " LCD_STR_THERMOMETER _UxGT(" 热床");     //"Bed"
+  PROGMEM Language_Str MSG_CHAMBER                         = _UxGT("机箱壳");
   PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("风扇速率");     //"Fan speed"
   PROGMEM Language_Str MSG_FAN_SPEED_N                     = _UxGT("风扇速率 ~");     //"Fan speed"
+  PROGMEM Language_Str MSG_STORED_FAN_N                    = _UxGT("存储的风扇 ~");
   PROGMEM Language_Str MSG_EXTRA_FAN_SPEED                 = _UxGT("额外风扇速率");     // "Extra fan speed"
   PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_N               = _UxGT("额外风扇速率 ~");     // "Extra fan speed"
+  PROGMEM Language_Str MSG_CONTROLLER_FAN                  = _UxGT("控制器风扇");
+  PROGMEM Language_Str MSG_CONTROLLER_FAN_IDLE_SPEED       = _UxGT("空闲速度");
+  PROGMEM Language_Str MSG_CONTROLLER_FAN_AUTO_ON          = _UxGT("自动模式");
+  PROGMEM Language_Str MSG_CONTROLLER_FAN_SPEED            = _UxGT("工作速度");
+  PROGMEM Language_Str MSG_CONTROLLER_FAN_DURATION         = _UxGT("空闲周期");
   PROGMEM Language_Str MSG_FLOW                            = _UxGT("挤出速率");     //"Flow"
   PROGMEM Language_Str MSG_FLOW_N                          = _UxGT("挤出速率 ~");     //"Flow"
   PROGMEM Language_Str MSG_CONTROL                         = _UxGT("控制");     //"Control"
@@ -199,6 +259,22 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("自动控温");     //"Autotemp"
   PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("开");     //"On"
   PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("关");     //"Off"
+  PROGMEM Language_Str MSG_PID_AUTOTUNE                    = _UxGT("自动PID");
+  PROGMEM Language_Str MSG_PID_AUTOTUNE_E                  = _UxGT("自动PID *");
+  PROGMEM Language_Str MSG_PID_AUTOTUNE_DONE               = _UxGT("PID调整完成");
+  PROGMEM Language_Str MSG_PID_BAD_EXTRUDER_NUM            = _UxGT("自动调失败. 坏的挤出机");
+  PROGMEM Language_Str MSG_PID_TEMP_TOO_HIGH               = _UxGT("自动调失败. 温度太高");
+  PROGMEM Language_Str MSG_PID_TIMEOUT                     = _UxGT("自动调失败! 超时");
+  PROGMEM Language_Str MSG_PID_P                           = _UxGT("PID-P");
+  PROGMEM Language_Str MSG_PID_P_E                         = _UxGT("PID-P *");
+  PROGMEM Language_Str MSG_PID_I                           = _UxGT("PID-I");
+  PROGMEM Language_Str MSG_PID_I_E                         = _UxGT("PID-I *");
+  PROGMEM Language_Str MSG_PID_D                           = _UxGT("PID-D");
+  PROGMEM Language_Str MSG_PID_D_E                         = _UxGT("PID-D *");
+  PROGMEM Language_Str MSG_PID_C                           = _UxGT("PID-C");
+  PROGMEM Language_Str MSG_PID_C_E                         = _UxGT("PID-C *");
+  PROGMEM Language_Str MSG_PID_F                           = _UxGT("PID-F");
+  PROGMEM Language_Str MSG_PID_F_E                         = _UxGT("PID-F *");
   PROGMEM Language_Str MSG_SELECT                          = _UxGT("选择");     //"Select"
   PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("选择 *");
   PROGMEM Language_Str MSG_ACC                             = _UxGT("加速度");     //"Accel" acceleration
@@ -207,6 +283,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("轴抖动速率") LCD_STR_B;     //"Vb-jerk"
   PROGMEM Language_Str MSG_VC_JERK                         = _UxGT("轴抖动速率") LCD_STR_C;     //"Vc-jerk"
   PROGMEM Language_Str MSG_VE_JERK                         = _UxGT("挤出机抖动速率");     //"Ve-jerk"
+  PROGMEM Language_Str MSG_JUNCTION_DEVIATION              = _UxGT("接点差");
   PROGMEM Language_Str MSG_VELOCITY                        = _UxGT("速度");     // "Velocity"
   PROGMEM Language_Str MSG_VMAX_A                          = _UxGT("最大进料速率") LCD_STR_A;     //"Vmax " max_feedrate_mm_s
   PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("最大进料速率") LCD_STR_B;     //"Vmax " max_feedrate_mm_s
@@ -223,6 +300,8 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_AMAX_EN                         = _UxGT("最大打印加速度 *");     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
   PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("收进加速度");     //"A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
   PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("非打印移动加速度");     //"A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
+  PROGMEM Language_Str MSG_XY_FREQUENCY_LIMIT              = _UxGT("频率最大");
+  PROGMEM Language_Str MSG_XY_FREQUENCY_FEEDRATE           = _UxGT("进给速度");
   PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("轴步数/mm");     //"Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
   PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT("轴步数/mm");     //"Asteps/mm"
   PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("轴步数/mm");     //"Bsteps/mm"
@@ -237,24 +316,50 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("丝料直径 *");
   PROGMEM Language_Str MSG_FILAMENT_UNLOAD                 = _UxGT("卸载 mm");     // "Unload mm"
   PROGMEM Language_Str MSG_FILAMENT_LOAD                   = _UxGT("装载 mm");     // "Load mm"
+  PROGMEM Language_Str MSG_ADVANCE_K                       = _UxGT("Advance K");
+  PROGMEM Language_Str MSG_ADVANCE_K_E                     = _UxGT("Advance K *");
   PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD对比度");     //"LCD contrast"
   PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("保存设置");     //"Store memory"
   PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("装载设置");     //"Load memory"
   PROGMEM Language_Str MSG_RESTORE_DEFAULTS                = _UxGT("恢复安全值");     //"Restore Defaults"
   PROGMEM Language_Str MSG_INIT_EEPROM                     = _UxGT("初始化设置");     // "Initialize EEPROM"
-  PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH  _UxGT("刷新");     //"Refresh"
+  PROGMEM Language_Str MSG_ERR_EEPROM_CRC                  = _UxGT("EEPROM CRC 错误");
+  PROGMEM Language_Str MSG_ERR_EEPROM_INDEX                = _UxGT("EEPROM Index 错误");
+  PROGMEM Language_Str MSG_ERR_EEPROM_VERSION              = _UxGT("EEPROM Version 错误");
+  PROGMEM Language_Str MSG_SETTINGS_STORED                 = _UxGT("设置已保存");
+  PROGMEM Language_Str MSG_MEDIA_UPDATE                    = _UxGT("存储器更新");
+  PROGMEM Language_Str MSG_RESET_PRINTER                   = _UxGT("复位打印机");
+  PROGMEM Language_Str MSG_REFRESH                         = _UxGT("刷新");     //"Refresh"
   PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("信息屏");     //"Info screen"
   PROGMEM Language_Str MSG_PREPARE                         = _UxGT("准备");     //"Prepare"
   PROGMEM Language_Str MSG_TUNE                            = _UxGT("调整");     //"Tune"
+  PROGMEM Language_Str MSG_START_PRINT                     = _UxGT("开始打印");
+  PROGMEM Language_Str MSG_BUTTON_NEXT                     = _UxGT("下一个");
+  PROGMEM Language_Str MSG_BUTTON_INIT                     = _UxGT("初始");
+  PROGMEM Language_Str MSG_BUTTON_STOP                     = _UxGT("停止");
+  PROGMEM Language_Str MSG_BUTTON_PRINT                    = _UxGT("打印");
+  PROGMEM Language_Str MSG_BUTTON_RESET                    = _UxGT("复位");
+  PROGMEM Language_Str MSG_BUTTON_IGNORE                   = _UxGT("忽略");
+  PROGMEM Language_Str MSG_BUTTON_CANCEL                   = _UxGT("取消");
+  PROGMEM Language_Str MSG_BUTTON_DONE                     = _UxGT("完成");
+  PROGMEM Language_Str MSG_BUTTON_BACK                     = _UxGT("返回");
+  PROGMEM Language_Str MSG_BUTTON_PROCEED                  = _UxGT("继续");
+  PROGMEM Language_Str MSG_PAUSING                         = _UxGT("暂停中...");
   PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("暂停打印");     //"Pause print"
   PROGMEM Language_Str MSG_RESUME_PRINT                    = _UxGT("恢复打印");     //"Resume print"
   PROGMEM Language_Str MSG_STOP_PRINT                      = _UxGT("停止打印");     //"Stop print"
+  PROGMEM Language_Str MSG_PRINTING_OBJECT                 = _UxGT("打印物体");
+  PROGMEM Language_Str MSG_CANCEL_OBJECT                   = _UxGT("取消物体");
+  PROGMEM Language_Str MSG_CANCEL_OBJECT_N                 = _UxGT("取消物体 =");
+  PROGMEM Language_Str MSG_OUTAGE_RECOVERY                 = _UxGT("中断恢复");
   PROGMEM Language_Str MSG_MEDIA_MENU                      = _UxGT("从存储卡上打印");     //"Print from SD"
   PROGMEM Language_Str MSG_NO_MEDIA                        = _UxGT("无存储卡");     //"No SD card"
   PROGMEM Language_Str MSG_DWELL                           = _UxGT("休眠中 ...");     //"Sleep..."
   PROGMEM Language_Str MSG_USERWAIT                        = _UxGT("点击继续 ...");     //"Click to resume..."
   PROGMEM Language_Str MSG_PRINT_PAUSED                    = _UxGT("暫停打印");     // "Print paused"
+  PROGMEM Language_Str MSG_PRINTING                        = _UxGT("打印中...");
   PROGMEM Language_Str MSG_PRINT_ABORTED                   = _UxGT("已取消打印");     //"Print aborted"
+  PROGMEM Language_Str MSG_PRINT_DONE                      = _UxGT("打印已完成");
   PROGMEM Language_Str MSG_NO_MOVE                         = _UxGT("无移动");     //"No move."
   PROGMEM Language_Str MSG_KILLED                          = _UxGT("已杀掉");     //"KILLED. "
   PROGMEM Language_Str MSG_STOPPED                         = _UxGT("已停止");     //"STOPPED. "
@@ -267,6 +372,23 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("回抽恢复后进料速率mm/s");     //"UnRet  V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
   PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAPF   = _UxGT("S UnRet V");     // "S UnRet V"
   PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("自动抽回");     //"AutoRetr." autoretract_enabled,
+  PROGMEM Language_Str MSG_FILAMENT_SWAP_LENGTH            = _UxGT("交换长度");
+  PROGMEM Language_Str MSG_FILAMENT_SWAP_EXTRA             = _UxGT("额外的交换");
+  PROGMEM Language_Str MSG_FILAMENT_PURGE_LENGTH           = _UxGT("清洗长度");
+  PROGMEM Language_Str MSG_TOOL_CHANGE                     = _UxGT("换工具");
+  PROGMEM Language_Str MSG_TOOL_CHANGE_ZLIFT               = _UxGT("Z抬起");
+  PROGMEM Language_Str MSG_SINGLENOZZLE_PRIME_SPEED        = _UxGT("进给速度");
+  PROGMEM Language_Str MSG_SINGLENOZZLE_RETRACT_SPEED      = _UxGT("回抽速度");
+  PROGMEM Language_Str MSG_FILAMENT_PARK_ENABLED           = _UxGT("停靠头");
+  PROGMEM Language_Str MSG_SINGLENOZZLE_UNRETRACT_SPEED    = _UxGT("恢复速度");
+  PROGMEM Language_Str MSG_SINGLENOZZLE_FAN_SPEED          = _UxGT("风扇速度");
+  PROGMEM Language_Str MSG_SINGLENOZZLE_FAN_TIME           = _UxGT("风扇时间");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION_ON               = _UxGT("自动开");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION_OFF              = _UxGT("自动关");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION                  = _UxGT("Tool Migration");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION_AUTO             = _UxGT("Auto-migration");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION_END              = _UxGT("Last Extruder");
+  PROGMEM Language_Str MSG_TOOL_MIGRATION_SWAP             = _UxGT("Migrate to *");
   PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("更换丝料");     //"Change filament"
   PROGMEM Language_Str MSG_FILAMENTCHANGE_E                = _UxGT("更换丝料 *");     //"Change filament"
   PROGMEM Language_Str MSG_FILAMENTLOAD                    = _UxGT("装载丝料");     // "Load filament"
@@ -276,26 +398,52 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_FILAMENTUNLOAD_ALL              = _UxGT("卸载全部");     // "Unload All"
   PROGMEM Language_Str MSG_ATTACH_MEDIA                    = _UxGT("初始化存储卡");     //"Init. SD card"
   PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("更换存储卡");     //"Change SD card"
+  PROGMEM Language_Str MSG_RELEASE_MEDIA                   = _UxGT("释放存储卡");
   PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z探针在热床之外");     //"Z probe out. bed" Z probe is not within the physical limits
   PROGMEM Language_Str MSG_SKEW_FACTOR                     = _UxGT("偏斜因数");     // "Skew Factor"
   PROGMEM Language_Str MSG_BLTOUCH                         = _UxGT("BLTouch");     // "BLTouch"
-  PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("BLTouch 自检");     // "BLTouch Self-Test"
-  PROGMEM Language_Str MSG_BLTOUCH_RESET                   = _UxGT("重置BLTouch");     // "Reset BLTouch"
-  PROGMEM Language_Str MSG_BLTOUCH_DEPLOY                  = _UxGT("部署BLTouch");     // "Deploy BLTouch"
-  PROGMEM Language_Str MSG_BLTOUCH_STOW                    = _UxGT("装载BLTouch");     // "Stow BLTouch"
+  PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("Cmd: 自检");
+  PROGMEM Language_Str MSG_BLTOUCH_RESET                   = _UxGT("Cmd: 重置");
+  PROGMEM Language_Str MSG_BLTOUCH_STOW                    = _UxGT("Cmd: 装载");
+  PROGMEM Language_Str MSG_BLTOUCH_DEPLOY                  = _UxGT("Cmd: 部署");
+  PROGMEM Language_Str MSG_BLTOUCH_SW_MODE                 = _UxGT("Cmd: SW模式");
+  PROGMEM Language_Str MSG_BLTOUCH_5V_MODE                 = _UxGT("Cmd: 5V模式");
+  PROGMEM Language_Str MSG_BLTOUCH_OD_MODE                 = _UxGT("Cmd: OD模式");
+  PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE              = _UxGT("Cmd: 模式保存");
+  PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE_5V           = _UxGT("设置BLTouch为5V");
+  PROGMEM Language_Str MSG_BLTOUCH_MODE_STORE_OD           = _UxGT("设置BLTouch为OD");
+  PROGMEM Language_Str MSG_BLTOUCH_MODE_ECHO               = _UxGT("报告Drain");
+  PROGMEM Language_Str MSG_BLTOUCH_MODE_CHANGE             = _UxGT("危险: 错误的设置将引起损坏! 是否继续?");
+  PROGMEM Language_Str MSG_TOUCHMI_PROBE                   = _UxGT("TouchMI");
+  PROGMEM Language_Str MSG_TOUCHMI_INIT                    = _UxGT("初始化TouchMI");
+  PROGMEM Language_Str MSG_TOUCHMI_ZTEST                   = _UxGT("Z偏移量测试");
+  PROGMEM Language_Str MSG_TOUCHMI_SAVE                    = _UxGT("保存");
+  PROGMEM Language_Str MSG_MANUAL_DEPLOY_TOUCHMI           = _UxGT("部署TouchMI");
+  PROGMEM Language_Str MSG_MANUAL_DEPLOY                   = _UxGT("部署Z探针");
+  PROGMEM Language_Str MSG_MANUAL_STOW                     = _UxGT("收好Z探针");
   PROGMEM Language_Str MSG_HOME_FIRST                      = _UxGT("归位 %s%s%s 先");     //"Home ... first"
-  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("Z偏移");     //"Z Offset"
+  PROGMEM Language_Str MSG_ZPROBE_OFFSETS                  = _UxGT("探针偏移量");
+  PROGMEM Language_Str MSG_ZPROBE_XOFFSET                  = _UxGT("探针X偏移量");
+  PROGMEM Language_Str MSG_ZPROBE_YOFFSET                  = _UxGT("探针Y偏移量");
+  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("探针Y偏移量");     //"Z Offset"
   PROGMEM Language_Str MSG_BABYSTEP_X                      = _UxGT("微量调整X轴");     //"Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
   PROGMEM Language_Str MSG_BABYSTEP_Y                      = _UxGT("微量调整Y轴");     //"Babystep Y"
   PROGMEM Language_Str MSG_BABYSTEP_Z                      = _UxGT("微量调整Z轴");     //"Babystep Z"
+  PROGMEM Language_Str MSG_BABYSTEP_TOTAL                  = _UxGT("总计");
   PROGMEM Language_Str MSG_ENDSTOP_ABORT                   = _UxGT("挡块终止");     //"Endstop abort"
   PROGMEM Language_Str MSG_HEATING_FAILED_LCD              = _UxGT("加热失败");     //"Heating failed"
-  PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("错误：REDUNDANT TEMP");     //"Err: REDUNDANT TEMP"
+  PROGMEM Language_Str MSG_HEATING_FAILED_LCD_BED          = _UxGT("热床加热失败");
+  PROGMEM Language_Str MSG_HEATING_FAILED_LCD_CHAMBER      = _UxGT("机箱加热失败");
+  PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("错误：冗余温度");     //"Err: REDUNDANT TEMP"
   PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("温控失控");     //"THERMAL RUNAWAY"
+  PROGMEM Language_Str MSG_THERMAL_RUNAWAY_BED             = _UxGT("热床热量失控");
+  PROGMEM Language_Str MSG_THERMAL_RUNAWAY_CHAMBER         = _UxGT("机箱热量失控");
   PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("错误：最高温度");     //"Err: MAXTEMP"
   PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("错误：最低温度");     //"Err: MINTEMP"
   PROGMEM Language_Str MSG_ERR_MAXTEMP_BED                 = _UxGT("错误：最高热床温度");     //"Err: MAXTEMP BED"
   PROGMEM Language_Str MSG_ERR_MINTEMP_BED                 = _UxGT("错误：最低热床温度");     //"Err: MINTEMP BED"
+  PROGMEM Language_Str MSG_ERR_MAXTEMP_CHAMBER             = _UxGT("错误：最高机箱温度");
+  PROGMEM Language_Str MSG_ERR_MINTEMP_CHAMBER             = _UxGT("错误：最低机箱温度");
   PROGMEM Language_Str MSG_ERR_Z_HOMING                    = _UxGT("归位 XY 先");     // "Home XY First"
   PROGMEM Language_Str MSG_HALTED                          = _UxGT("打印停机");     //"PRINTER HALTED"
   PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("请重置");     //"Please reset"
@@ -303,7 +451,11 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_SHORT_HOUR                      = _UxGT("时");     //"h" // One character only
   PROGMEM Language_Str MSG_SHORT_MINUTE                    = _UxGT("分");     //"m" // One character only
   PROGMEM Language_Str MSG_HEATING                         = _UxGT("加热中 ...");     //"Heating..."
+  PROGMEM Language_Str MSG_COOLING                         = _UxGT("冷却中 ...");
   PROGMEM Language_Str MSG_BED_HEATING                     = _UxGT("加热热床中 ...");     //"Bed Heating..."
+  PROGMEM Language_Str MSG_BED_COOLING                     = _UxGT("热床冷却中 ...");
+  PROGMEM Language_Str MSG_CHAMBER_HEATING                 = _UxGT("机箱加热中 ...");
+  PROGMEM Language_Str MSG_CHAMBER_COOLING                 = _UxGT("机箱冷却中 ...");
   PROGMEM Language_Str MSG_DELTA_CALIBRATE                 = _UxGT("⊿校准");     //"Delta Calibration"
   PROGMEM Language_Str MSG_DELTA_CALIBRATE_X               = _UxGT("⊿校准X");     //"Calibrate X"
   PROGMEM Language_Str MSG_DELTA_CALIBRATE_Y               = _UxGT("⊿校准Y");     //"Calibrate Y"
@@ -312,6 +464,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_DELTA_SETTINGS                  = _UxGT("⊿设置");     // "Delta Settings"
   PROGMEM Language_Str MSG_DELTA_AUTO_CALIBRATE            = _UxGT("⊿自动校准");     // "Auto Calibration"
   PROGMEM Language_Str MSG_DELTA_HEIGHT_CALIBRATE          = _UxGT("设置⊿高度");     // "Set Delta Height"
+  PROGMEM Language_Str MSG_DELTA_Z_OFFSET_CALIBRATE        = _UxGT("探针Z偏移量");
   PROGMEM Language_Str MSG_DELTA_DIAG_ROD                  = _UxGT("⊿斜柱");     // "Diag Rod"
   PROGMEM Language_Str MSG_DELTA_HEIGHT                    = _UxGT("⊿高度");     // "Height"
   PROGMEM Language_Str MSG_DELTA_RADIUS                    = _UxGT("⊿半径");     // "Radius"
@@ -328,6 +481,10 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_INFO_EXTRUDERS                  = _UxGT("挤出机");     //"Extruders"
   PROGMEM Language_Str MSG_INFO_BAUDRATE                   = _UxGT("波特率");     //"Baud"
   PROGMEM Language_Str MSG_INFO_PROTOCOL                   = _UxGT("协议");     //"Protocol"
+  PROGMEM Language_Str MSG_INFO_RUNAWAY_OFF                = _UxGT("监控温度失控:关");
+  PROGMEM Language_Str MSG_INFO_RUNAWAY_ON                 = _UxGT("监控温度失控:开");
+  PROGMEM Language_Str MSG_HOTEND_IDLE_TIMEOUT             = _UxGT("热端空闲超时");
+
   PROGMEM Language_Str MSG_CASE_LIGHT                      = _UxGT("外壳灯");     // "Case light"
   PROGMEM Language_Str MSG_CASE_LIGHT_BRIGHTNESS           = _UxGT("灯亮度");     // "Light BRIGHTNESS"
 
@@ -355,7 +512,9 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_DAC_PERCENT_Y                   = _UxGT("Y 驱动 %");     // "Y Driver %"
   PROGMEM Language_Str MSG_DAC_PERCENT_Z                   = _UxGT("Z 驱动 %");     // "Z Driver %"
   PROGMEM Language_Str MSG_DAC_PERCENT_E                   = _UxGT("E 驱动 %");     // "E Driver %"
+  PROGMEM Language_Str MSG_ERROR_TMC                       = _UxGT("TMC 连接错误");
   PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("保存驱动设置");     // "DAC EEPROM Write"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER          = _UxGT("更换料");
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_PAUSE    = _UxGT("打印已暂停");     // "PRINT PAUSED"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_LOAD     = _UxGT("装载丝料");     // "LOAD FILAMENT"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_UNLOAD   = _UxGT("卸载丝料");     // "UNLOAD FILAMENT"
@@ -363,26 +522,116 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_PURGE    = _UxGT("清除更多");     // "Purge more"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("恢复打印");     //"Resume print"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_NOZZLE          = _UxGT("  喷嘴: ");     // "  Nozzle: "
+  PROGMEM Language_Str MSG_RUNOUT_SENSOR                   = _UxGT("断料传感器");
+  PROGMEM Language_Str MSG_RUNOUT_DISTANCE_MM              = _UxGT("断料距离mm");
   PROGMEM Language_Str MSG_KILL_HOMING_FAILED              = _UxGT("归原位失败");     // "Homing failed"
   PROGMEM Language_Str MSG_LCD_PROBING_FAILED              = _UxGT("探针探测失败");     // "Probing failed"
   PROGMEM Language_Str MSG_M600_TOO_COLD                   = _UxGT("M600: 太凉");     // "M600: Too cold"
 
+  PROGMEM Language_Str MSG_MMU2_CHOOSE_FILAMENT_HEADER     = _UxGT("选择料");
+  PROGMEM Language_Str MSG_MMU2_MENU                       = _UxGT("MMU");
+  PROGMEM Language_Str MSG_KILL_MMU2_FIRMWARE              = _UxGT("升级MMU固件!");
+  PROGMEM Language_Str MSG_MMU2_NOT_RESPONDING             = _UxGT("MMU需要专注.");
+  PROGMEM Language_Str MSG_MMU2_RESUME                     = _UxGT("MMU恢复");
+  PROGMEM Language_Str MSG_MMU2_RESUMING                   = _UxGT("MMU恢复中...");
+  PROGMEM Language_Str MSG_MMU2_LOAD_FILAMENT              = _UxGT("MMU加载");
+  PROGMEM Language_Str MSG_MMU2_LOAD_ALL                   = _UxGT("MMU加载全部");
+  PROGMEM Language_Str MSG_MMU2_LOAD_TO_NOZZLE             = _UxGT("MMU加载到喷嘴");
+  PROGMEM Language_Str MSG_MMU2_EJECT_FILAMENT             = _UxGT("MMU弹出");
+  PROGMEM Language_Str MSG_MMU2_EJECT_FILAMENT_N           = _UxGT("MMU弹出 ~");
+  PROGMEM Language_Str MSG_MMU2_UNLOAD_FILAMENT            = _UxGT("MMU卸载");
+  PROGMEM Language_Str MSG_MMU2_LOADING_FILAMENT           = _UxGT("加载填充. %i...");
+  PROGMEM Language_Str MSG_MMU2_EJECTING_FILAMENT          = _UxGT("弹出填充. ...");
+  PROGMEM Language_Str MSG_MMU2_UNLOADING_FILAMENT         = _UxGT("卸载填充....");
+  PROGMEM Language_Str MSG_MMU2_ALL                        = _UxGT("全部");
+  PROGMEM Language_Str MSG_MMU2_FILAMENT_N                 = _UxGT("料 ~");
+  PROGMEM Language_Str MSG_MMU2_RESET                      = _UxGT("复位MMU");
+  PROGMEM Language_Str MSG_MMU2_RESETTING                  = _UxGT("MMU复位中...");
+  PROGMEM Language_Str MSG_MMU2_EJECT_RECOVER              = _UxGT("移出, 按下");
+
+  PROGMEM Language_Str MSG_MIX                             = _UxGT("混合");
+  PROGMEM Language_Str MSG_MIX_COMPONENT_N                 = _UxGT("器件  =");
+  PROGMEM Language_Str MSG_MIXER                           = _UxGT("混合器");
+  PROGMEM Language_Str MSG_GRADIENT                        = _UxGT("梯度");
+  PROGMEM Language_Str MSG_FULL_GRADIENT                   = _UxGT("全梯度");
+  PROGMEM Language_Str MSG_TOGGLE_MIX                      = _UxGT("开关混合");
+  PROGMEM Language_Str MSG_CYCLE_MIX                       = _UxGT("循环混合");
+  PROGMEM Language_Str MSG_GRADIENT_MIX                    = _UxGT("梯度混合");
+  PROGMEM Language_Str MSG_REVERSE_GRADIENT                = _UxGT("反向梯度");
+  PROGMEM Language_Str MSG_ACTIVE_VTOOL                    = _UxGT("激活 V-tool");
+  PROGMEM Language_Str MSG_START_VTOOL                     = _UxGT("开始 V-tool");
+  PROGMEM Language_Str MSG_END_VTOOL                       = _UxGT("  结束 V-tool");
+  PROGMEM Language_Str MSG_GRADIENT_ALIAS                  = _UxGT("别名 V-tool");
+  PROGMEM Language_Str MSG_RESET_VTOOLS                    = _UxGT("复位 V-tools");
+  PROGMEM Language_Str MSG_COMMIT_VTOOL                    = _UxGT("提交 V-tool Mix");
+  PROGMEM Language_Str MSG_VTOOLS_RESET                    = _UxGT("V-tools 已复位");
+  PROGMEM Language_Str MSG_START_Z                         = _UxGT("开始 Z:");
+  PROGMEM Language_Str MSG_END_Z                           = _UxGT("  结束 Z:");
+
+  PROGMEM Language_Str MSG_GAMES                           = _UxGT("游戏");
+  PROGMEM Language_Str MSG_BRICKOUT                        = _UxGT("敲方块");
+  PROGMEM Language_Str MSG_INVADERS                        = _UxGT("入侵者");
+  PROGMEM Language_Str MSG_SNAKE                           = _UxGT("贪吃蛇");
+  PROGMEM Language_Str MSG_MAZE                            = _UxGT("迷宫");
+
+  PROGMEM Language_Str MSG_BAD_PAGE                        = _UxGT("错误页面索引");
+  PROGMEM Language_Str MSG_BAD_PAGE_SPEED                  = _UxGT("错误页面速度");
+
+  //
+  // Filament Change screens show up to 3 lines on a 4-line display
+  //                        ...or up to 2 lines on a 3-line display
+  //
   #if LCD_HEIGHT >= 4
+    PROGMEM Language_Str MSG_ADVANCED_PAUSE_WAITING        = _UxGT(MSG_2_LINE("按下按钮", "恢复打印"));
+    PROGMEM Language_Str MSG_PAUSE_PRINT_PARKING           = _UxGT(MSG_1_LINE("停靠中..."));
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT          = _UxGT(MSG_3_LINE("等待开始", "丝料", "变更"));     // "Wait for start of the filament change"
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_2_LINE("等待", "卸下丝料"));     // "Wait for filament unload"
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_3_LINE("插入丝料", "并按键", "来继续 ..."));     // "Insert filament and press button to continue..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_3_LINE("插入料", "并按下", "以继续"));
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEAT          = _UxGT(MSG_2_LINE("按下按钮来", "加热喷嘴."));     // "Press button to heat nozzle."
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEATING       = _UxGT(MSG_2_LINE("加热喷嘴", "请等待 ..."));     // "Heating nozzle Please wait..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_2_LINE("等待", "卸下丝料"));     // "Wait for filament unload"
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD          = _UxGT(MSG_2_LINE("等待", "进料"));     // "Wait for filament load"
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_PURGE         = _UxGT(MSG_2_LINE("等待", "丝料清除"));     // "Wait for filament purge"
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_CONT_PURGE    = _UxGT(MSG_2_LINE("按下已完成", "料的清洗"));
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME        = _UxGT(MSG_2_LINE("等待打印", "恢复"));     // "Wait for print to resume"
   #else
+    PROGMEM Language_Str MSG_ADVANCED_PAUSE_WAITING        = _UxGT(MSG_1_LINE("按下继续"));
+    PROGMEM Language_Str MSG_PAUSE_PRINT_PARKING           = _UxGT(MSG_1_LINE("停靠中..."));
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT          = _UxGT(MSG_1_LINE("请等待 ..."));     //"Please wait..."
-    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_1_LINE("退出中 ..."));     //"Ejecting..."
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_1_LINE("插入并单击"));     //"Insert and Click"
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEAT          = _UxGT(MSG_1_LINE("按下加热"));
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEATING       = _UxGT(MSG_1_LINE("加热中 ..."));     // "Heating..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_1_LINE("退出中 ..."));     //"Ejecting..."
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD          = _UxGT(MSG_1_LINE("装载中 ..."));     //"Loading..."
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_PURGE         = _UxGT(MSG_1_LINE("清除中 ..."));     // "Purging..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_CONT_PURGE    = _UxGT(MSG_1_LINE("按下完成"));
     PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME        = _UxGT(MSG_1_LINE("恢复中 ..."));     //"Resuming..."
   #endif
+  PROGMEM Language_Str MSG_TMC_DRIVERS                     = _UxGT("TMC驱动器");
+  PROGMEM Language_Str MSG_TMC_CURRENT                     = _UxGT("驱动电流");
+  PROGMEM Language_Str MSG_TMC_HYBRID_THRS                 = _UxGT("混合阈值");
+  PROGMEM Language_Str MSG_TMC_HOMING_THRS                 = _UxGT("无感回零");
+  PROGMEM Language_Str MSG_TMC_STEPPING_MODE               = _UxGT("步进模式");
+  PROGMEM Language_Str MSG_TMC_STEALTH_ENABLED             = _UxGT("StealthChop已使能");
+  PROGMEM Language_Str MSG_SERVICE_RESET                   = _UxGT("复位");
+  PROGMEM Language_Str MSG_SERVICE_IN                      = _UxGT(" 在:");
+  PROGMEM Language_Str MSG_BACKLASH                        = _UxGT("回差");
+  PROGMEM Language_Str MSG_BACKLASH_A                      = LCD_STR_A;
+  PROGMEM Language_Str MSG_BACKLASH_B                      = LCD_STR_B;
+  PROGMEM Language_Str MSG_BACKLASH_C                      = LCD_STR_C;
+  PROGMEM Language_Str MSG_BACKLASH_CORRECTION             = _UxGT("校正");
+  PROGMEM Language_Str MSG_BACKLASH_SMOOTHING              = _UxGT("平滑的");
+
+  PROGMEM Language_Str MSG_LEVEL_X_AXIS                    = _UxGT("X轴调平");
+  PROGMEM Language_Str MSG_AUTO_CALIBRATE                  = _UxGT("自动校准");
+  PROGMEM Language_Str MSG_HEATER_TIMEOUT                  = _UxGT("加热器超时");
+  PROGMEM Language_Str MSG_REHEAT                          = _UxGT("重新加热");
+  PROGMEM Language_Str MSG_REHEATING                       = _UxGT("重新加热中...");
 }
+
+#if FAN_COUNT == 1
+  #define MSG_FIRST_FAN_SPEED       MSG_FAN_SPEED
+  #define MSG_FIRST_EXTRA_FAN_SPEED MSG_EXTRA_FAN_SPEED
+#else
+  #define MSG_FIRST_FAN_SPEED       MSG_FAN_SPEED_N
+  #define MSG_FIRST_EXTRA_FAN_SPEED MSG_EXTRA_FAN_SPEED_N
+#endif

commit 22da1b2b310158ae3362c54f2534f5f5af30fa83
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 13 14:53:21 2020 -0500

    Rename some "kill" messages

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 48bcfc0819..bb30b775bf 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -331,7 +331,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_CASE_LIGHT                      = _UxGT("外壳灯");     // "Case light"
   PROGMEM Language_Str MSG_CASE_LIGHT_BRIGHTNESS           = _UxGT("灯亮度");     // "Light BRIGHTNESS"
 
-  PROGMEM Language_Str MSG_EXPECTED_PRINTER                = _UxGT("打印机不正确");     // "The printer is incorrect"
+  PROGMEM Language_Str MSG_KILL_EXPECTED_PRINTER           = _UxGT("打印机不正确");     // "The printer is incorrect"
 
   #if LCD_WIDTH >= 20
     PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印计数");     //"Print Count"
@@ -363,7 +363,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_PURGE    = _UxGT("清除更多");     // "Purge more"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("恢复打印");     //"Resume print"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_NOZZLE          = _UxGT("  喷嘴: ");     // "  Nozzle: "
-  PROGMEM Language_Str MSG_LCD_HOMING_FAILED               = _UxGT("归原位失败");     // "Homing failed"
+  PROGMEM Language_Str MSG_KILL_HOMING_FAILED              = _UxGT("归原位失败");     // "Homing failed"
   PROGMEM Language_Str MSG_LCD_PROBING_FAILED              = _UxGT("探针探测失败");     // "Probing failed"
   PROGMEM Language_Str MSG_M600_TOO_COLD                   = _UxGT("M600: 太凉");     // "M600: Too cold"
 

commit e3321920f3bab800812ed0d2395fb00fe80072fb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 12 17:21:02 2020 -0500

    Update Marlin website links to https

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 0207c47baa..48bcfc0819 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -25,7 +25,7 @@
  * Simplified Chinese
  *
  * LCD Menu Messages
- * See also http://marlinfw.org/docs/development/lcd_language.html
+ * See also https://marlinfw.org/docs/development/lcd_language.html
  *
  */
 namespace Language_zh_CN {

commit 48919c54fb4e793b6bb17022f9badbd3530733ae
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Apr 9 20:05:58 2020 -0500

    Add SRAM command injection (#17459)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 742375c7d1..0207c47baa 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -136,8 +136,8 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_UBL_STORAGE_SLOT                = _UxGT("存储槽");     // "Memory Slot"
   PROGMEM Language_Str MSG_UBL_LOAD_MESH                   = _UxGT("装载热床网格");     // "Load Bed Mesh"
   PROGMEM Language_Str MSG_UBL_SAVE_MESH                   = _UxGT("保存热床网格");     // "Save Bed Mesh"
-  PROGMEM Language_Str MSG_MESH_LOADED                     = _UxGT("M117 网格 %i 已装载");     // "Mesh %i loaded"
-  PROGMEM Language_Str MSG_MESH_SAVED                      = _UxGT("M117 网格 %i 已保存");     // "Mesh %i saved"
+  PROGMEM Language_Str MSG_MESH_LOADED                     = _UxGT("网格 %i 已装载");     // "Mesh %i loaded"
+  PROGMEM Language_Str MSG_MESH_SAVED                      = _UxGT("网格 %i 已保存");     // "Mesh %i saved"
   PROGMEM Language_Str MSG_UBL_NO_STORAGE                  = _UxGT("没有存储");     // "No storage"
   PROGMEM Language_Str MSG_UBL_SAVE_ERROR                  = _UxGT("错误: UBL保存");     // "Err: UBL Save"
   PROGMEM Language_Str MSG_UBL_RESTORE_ERROR               = _UxGT("错误: UBL还原");     // "Err: UBL Restore"

commit 6b9a17be16448459cdbf3447598094fae455e39a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 26 02:02:20 2020 -0600

    Language: "failsafe" => "Defaults"

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 8e760f73b3..742375c7d1 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -240,7 +240,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD对比度");     //"LCD contrast"
   PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("保存设置");     //"Store memory"
   PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("装载设置");     //"Load memory"
-  PROGMEM Language_Str MSG_RESTORE_FAILSAFE                = _UxGT("恢复安全值");     //"Restore failsafe"
+  PROGMEM Language_Str MSG_RESTORE_DEFAULTS                = _UxGT("恢复安全值");     //"Restore Defaults"
   PROGMEM Language_Str MSG_INIT_EEPROM                     = _UxGT("初始化设置");     // "Initialize EEPROM"
   PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH  _UxGT("刷新");     //"Refresh"
   PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("信息屏");     //"Info screen"

commit 8ba5ef8cae5f7323688749e699606dcc14182c3e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 24 05:33:16 2020 -0600

    "Init. Media" => "Attach Media"

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 3595aabe83..8e760f73b3 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -274,7 +274,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_FILAMENTUNLOAD                  = _UxGT("卸载丝料");     // "Unload filament"
   PROGMEM Language_Str MSG_FILAMENTUNLOAD_E                = _UxGT("卸载丝料 *");     // "Unload filament"
   PROGMEM Language_Str MSG_FILAMENTUNLOAD_ALL              = _UxGT("卸载全部");     // "Unload All"
-  PROGMEM Language_Str MSG_INIT_MEDIA                      = _UxGT("初始化存储卡");     //"Init. SD card"
+  PROGMEM Language_Str MSG_ATTACH_MEDIA                    = _UxGT("初始化存储卡");     //"Init. SD card"
   PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("更换存储卡");     //"Change SD card"
   PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z探针在热床之外");     //"Z probe out. bed" Z probe is not within the physical limits
   PROGMEM Language_Str MSG_SKEW_FACTOR                     = _UxGT("偏斜因数");     // "Skew Factor"

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 4e730924e2..3595aabe83 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit bbfbcb8a5d938df2f2da0baca128046a0eb4792d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jan 26 03:20:02 2020 -0600

    Clean up PID language defines

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 9a52ac2f82..4e730924e2 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -199,14 +199,6 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("自动控温");     //"Autotemp"
   PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("开");     //"On"
   PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("关");     //"Off"
-  PROGMEM Language_Str MSG_PID_P                           = _UxGT("PID-P");     //"PID-P"
-  PROGMEM Language_Str MSG_PID_P_E                         = _UxGT("PID-P *");
-  PROGMEM Language_Str MSG_PID_I                           = _UxGT("PID-I");     //"PID-I"
-  PROGMEM Language_Str MSG_PID_I_E                         = _UxGT("PID-I *");
-  PROGMEM Language_Str MSG_PID_D                           = _UxGT("PID-D");     //"PID-D"
-  PROGMEM Language_Str MSG_PID_D_E                         = _UxGT("PID-D *");
-  PROGMEM Language_Str MSG_PID_C                           = _UxGT("PID-C");     //"PID-C"
-  PROGMEM Language_Str MSG_PID_C_E                         = _UxGT("PID-C *");
   PROGMEM Language_Str MSG_SELECT                          = _UxGT("选择");     //"Select"
   PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("选择 *");
   PROGMEM Language_Str MSG_ACC                             = _UxGT("加速度");     //"Accel" acceleration

commit 248b7dfa591a34a8aa1c6960944e1a3a468ad1de
Author: yangwenxiong <46896566+yangwenxiong@users.noreply.github.com>
Date:   Sat Jan 25 16:13:39 2020 +0800

    BigTreeTech GTR V1.0 / Support 8 extruders, heaters, temp sensors, fans (#16595)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index e15b018843..9a52ac2f82 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -187,9 +187,9 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_NOZZLE_N                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ~");     //"Nozzle" 噴嘴
   PROGMEM Language_Str MSG_BED                             = " " LCD_STR_THERMOMETER _UxGT(" 热床");     //"Bed"
   PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("风扇速率");     //"Fan speed"
-  PROGMEM Language_Str MSG_FAN_SPEED_N                     = _UxGT("风扇速率 =");     //"Fan speed"
+  PROGMEM Language_Str MSG_FAN_SPEED_N                     = _UxGT("风扇速率 ~");     //"Fan speed"
   PROGMEM Language_Str MSG_EXTRA_FAN_SPEED                 = _UxGT("额外风扇速率");     // "Extra fan speed"
-  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_N               = _UxGT("额外风扇速率 =");     // "Extra fan speed"
+  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_N               = _UxGT("额外风扇速率 ~");     // "Extra fan speed"
   PROGMEM Language_Str MSG_FLOW                            = _UxGT("挤出速率");     //"Flow"
   PROGMEM Language_Str MSG_FLOW_N                          = _UxGT("挤出速率 ~");     //"Flow"
   PROGMEM Language_Str MSG_CONTROL                         = _UxGT("控制");     //"Control"

commit aa4db785f257942ed9869486288d6612c41421a6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jan 3 19:46:05 2020 -0600

    MSG_WATCH => MSG_INFO_SCREEN

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 8d13210623..e15b018843 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -251,7 +251,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_RESTORE_FAILSAFE                = _UxGT("恢复安全值");     //"Restore failsafe"
   PROGMEM Language_Str MSG_INIT_EEPROM                     = _UxGT("初始化设置");     // "Initialize EEPROM"
   PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH  _UxGT("刷新");     //"Refresh"
-  PROGMEM Language_Str MSG_WATCH                           = _UxGT("信息屏");     //"Info screen"
+  PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("信息屏");     //"Info screen"
   PROGMEM Language_Str MSG_PREPARE                         = _UxGT("准备");     //"Prepare"
   PROGMEM Language_Str MSG_TUNE                            = _UxGT("调整");     //"Tune"
   PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("暂停打印");     //"Pause print"

commit 1c4f672eae494875c36eafe0e050222c6bb7bf1e
Author: dagorel <37673727+dagorel@users.noreply.github.com>
Date:   Wed Dec 11 06:37:25 2019 +0100

    Formalize DAC percent strings (#16176)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index e17d473a9e..8d13210623 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -359,7 +359,10 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("最高温度");     //"Max Temp"
   PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("电源供应");     //"Power Supply"
   PROGMEM Language_Str MSG_DRIVE_STRENGTH                  = _UxGT("驱动力度");     // "Drive Strength"
-  PROGMEM Language_Str MSG_DAC_PERCENT                     = _UxGT("驱动 %");     // "Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_X                   = _UxGT("X 驱动 %");     // "X Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_Y                   = _UxGT("Y 驱动 %");     // "Y Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_Z                   = _UxGT("Z 驱动 %");     // "Z Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_E                   = _UxGT("E 驱动 %");     // "E Driver %"
   PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("保存驱动设置");     // "DAC EEPROM Write"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_PAUSE    = _UxGT("打印已暂停");     // "PRINT PAUSED"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_LOAD     = _UxGT("装载丝料");     // "LOAD FILAMENT"

commit 27cb4db80eae73eb842f1a944260517bb8783eb3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 14 20:30:30 2019 -0600

    Reduced string storage using tokens (#15593)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index a9286b0f48..e17d473a9e 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -57,36 +57,16 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("偏移已启用");     //"Offsets applied"
   PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("设置原点");     //"Set origin"
   PROGMEM Language_Str MSG_PREHEAT_1                       = _UxGT("预热 ") PREHEAT_1_LABEL;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_1_H0                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N0;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_1_H1                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N1;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_1_H2                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N2;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_1_H3                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N3;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_1_H4                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N4;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_1_H5                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N5;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_1_H                     = _UxGT("预热 ") PREHEAT_1_LABEL " ~";     //"Preheat PREHEAT_2_LABEL"
   PROGMEM Language_Str MSG_PREHEAT_1_END                   = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E0                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N0;     //MSG_PREHEAT_1 " "
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E1                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N1;     //MSG_PREHEAT_1 " "
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E2                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N2;     //MSG_PREHEAT_1 " "
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E3                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N3;     //MSG_PREHEAT_1 " "
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E4                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N4;     //MSG_PREHEAT_1 " "
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E5                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N5;     //MSG_PREHEAT_1 " "
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E                 = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_1 " "
   PROGMEM Language_Str MSG_PREHEAT_1_ALL                   = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部");     //MSG_PREHEAT_1 " All"
   PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY               = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床");     //MSG_PREHEAT_1 " Bed"
   PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS              = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置");     //MSG_PREHEAT_1 " conf"
   PROGMEM Language_Str MSG_PREHEAT_2                       = _UxGT("预热 ") PREHEAT_2_LABEL;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_2_H0                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N0;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_2_H1                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N1;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_2_H2                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N2;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_2_H3                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N3;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_2_H4                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N4;     //"Preheat PREHEAT_2_LABEL"
-  PROGMEM Language_Str MSG_PREHEAT_2_H5                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N5;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_2_H                     = _UxGT("预热 ") PREHEAT_2_LABEL " ~";     //"Preheat PREHEAT_2_LABEL"
   PROGMEM Language_Str MSG_PREHEAT_2_END                   = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_2 " "
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E0                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N0;     //MSG_PREHEAT_2 " "
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E1                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N1;     //MSG_PREHEAT_2 " "
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E2                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N2;     //MSG_PREHEAT_2 " "
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E3                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N3;     //MSG_PREHEAT_2 " "
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E4                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N4;     //MSG_PREHEAT_2 " "
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E5                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N5;     //MSG_PREHEAT_2 " "
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E                 = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ~");     //MSG_PREHEAT_2 " "
   PROGMEM Language_Str MSG_PREHEAT_2_ALL                   = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 全部");     //MSG_PREHEAT_2 " All"
   PROGMEM Language_Str MSG_PREHEAT_2_BEDONLY               = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 热床");     //MSG_PREHEAT_2 " Bed"
   PROGMEM Language_Str MSG_PREHEAT_2_SETTINGS              = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 设置");     //MSG_PREHEAT_2 " conf"
@@ -196,12 +176,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("移动Y");     //"Move Y"
   PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("移动Z");     //"Move Z"
   PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("挤出机");     //"Extruder"
-  PROGMEM Language_Str MSG_MOVE_E0                         = _UxGT("挤出机 ") LCD_STR_E0;     //"Extruder"
-  PROGMEM Language_Str MSG_MOVE_E1                         = _UxGT("挤出机 ") LCD_STR_E1;     //"Extruder"
-  PROGMEM Language_Str MSG_MOVE_E2                         = _UxGT("挤出机 ") LCD_STR_E2;     //"Extruder"
-  PROGMEM Language_Str MSG_MOVE_E3                         = _UxGT("挤出机 ") LCD_STR_E3;     //"Extruder"
-  PROGMEM Language_Str MSG_MOVE_E4                         = _UxGT("挤出机 ") LCD_STR_E4;     //"Extruder"
-  PROGMEM Language_Str MSG_MOVE_E5                         = _UxGT("挤出机 ") LCD_STR_E5;     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_EN                         = _UxGT("挤出机 *");     //"Extruder"
   PROGMEM Language_Str MSG_MOVE_Z_DIST                     = _UxGT("移动 %s mm");     //"Move 0.025mm"
   PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("移动 0.1 mm");     //"Move 0.1mm"
   PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("移动 1 mm");     //"Move 1mm"
@@ -209,28 +184,14 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_SPEED                           = _UxGT("速率");     //"Speed"
   PROGMEM Language_Str MSG_BED_Z                           = _UxGT("热床Z");     //"Bed Z"
   PROGMEM Language_Str MSG_NOZZLE                          = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴");     //"Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_0                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N0;     //"Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_1                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N1;     //"Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_2                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N2;     //"Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_3                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N3;     //"Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_4                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N4;     //"Nozzle" 噴嘴
-  PROGMEM Language_Str MSG_NOZZLE_5                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N5;     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_N                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ~");     //"Nozzle" 噴嘴
   PROGMEM Language_Str MSG_BED                             = " " LCD_STR_THERMOMETER _UxGT(" 热床");     //"Bed"
   PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("风扇速率");     //"Fan speed"
-  PROGMEM Language_Str MSG_FAN_SPEED_1                     = _UxGT("风扇速率 1");     //"Fan speed"
-  PROGMEM Language_Str MSG_FAN_SPEED_2                     = _UxGT("风扇速率 2");     //"Fan speed"
-  PROGMEM Language_Str MSG_FAN_SPEED_3                     = _UxGT("风扇速率 3");     //"Fan speed"
+  PROGMEM Language_Str MSG_FAN_SPEED_N                     = _UxGT("风扇速率 =");     //"Fan speed"
   PROGMEM Language_Str MSG_EXTRA_FAN_SPEED                 = _UxGT("额外风扇速率");     // "Extra fan speed"
-  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_1               = _UxGT("额外风扇速率 1");     // "Extra fan speed"
-  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_2               = _UxGT("额外风扇速率 2");     // "Extra fan speed"
-  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_3               = _UxGT("额外风扇速率 3");     // "Extra fan speed"
+  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_N               = _UxGT("额外风扇速率 =");     // "Extra fan speed"
   PROGMEM Language_Str MSG_FLOW                            = _UxGT("挤出速率");     //"Flow"
-  PROGMEM Language_Str MSG_FLOW_0                          = _UxGT("挤出速率 ") LCD_STR_N0;     //"Flow"
-  PROGMEM Language_Str MSG_FLOW_1                          = _UxGT("挤出速率 ") LCD_STR_N1;     //"Flow"
-  PROGMEM Language_Str MSG_FLOW_2                          = _UxGT("挤出速率 ") LCD_STR_N2;     //"Flow"
-  PROGMEM Language_Str MSG_FLOW_3                          = _UxGT("挤出速率 ") LCD_STR_N3;     //"Flow"
-  PROGMEM Language_Str MSG_FLOW_4                          = _UxGT("挤出速率 ") LCD_STR_N4;     //"Flow"
-  PROGMEM Language_Str MSG_FLOW_5                          = _UxGT("挤出速率 ") LCD_STR_N5;     //"Flow"
+  PROGMEM Language_Str MSG_FLOW_N                          = _UxGT("挤出速率 ~");     //"Flow"
   PROGMEM Language_Str MSG_CONTROL                         = _UxGT("控制");     //"Control"
   PROGMEM Language_Str MSG_MIN                             = " " LCD_STR_THERMOMETER _UxGT(" 最小");     //" " LCD_STR_THERMOMETER " Min"
   PROGMEM Language_Str MSG_MAX                             = " " LCD_STR_THERMOMETER _UxGT(" 最大");     //" " LCD_STR_THERMOMETER " Max"
@@ -239,40 +200,15 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("开");     //"On"
   PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("关");     //"Off"
   PROGMEM Language_Str MSG_PID_P                           = _UxGT("PID-P");     //"PID-P"
-  PROGMEM Language_Str MSG_PID_P_E0                        = _UxGT("PID-P ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_PID_P_E1                        = _UxGT("PID-P ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_PID_P_E2                        = _UxGT("PID-P ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_PID_P_E3                        = _UxGT("PID-P ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_PID_P_E4                        = _UxGT("PID-P ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_PID_P_E5                        = _UxGT("PID-P ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_P_E                         = _UxGT("PID-P *");
   PROGMEM Language_Str MSG_PID_I                           = _UxGT("PID-I");     //"PID-I"
-  PROGMEM Language_Str MSG_PID_I_E0                        = _UxGT("PID-I ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_PID_I_E1                        = _UxGT("PID-I ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_PID_I_E2                        = _UxGT("PID-I ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_PID_I_E3                        = _UxGT("PID-I ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_PID_I_E4                        = _UxGT("PID-I ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_PID_I_E5                        = _UxGT("PID-I ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_I_E                         = _UxGT("PID-I *");
   PROGMEM Language_Str MSG_PID_D                           = _UxGT("PID-D");     //"PID-D"
-  PROGMEM Language_Str MSG_PID_D_E0                        = _UxGT("PID-D ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_PID_D_E1                        = _UxGT("PID-D ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_PID_D_E2                        = _UxGT("PID-D ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_PID_D_E3                        = _UxGT("PID-D ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_PID_D_E4                        = _UxGT("PID-D ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_PID_D_E5                        = _UxGT("PID-D ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_D_E                         = _UxGT("PID-D *");
   PROGMEM Language_Str MSG_PID_C                           = _UxGT("PID-C");     //"PID-C"
-  PROGMEM Language_Str MSG_PID_C_E0                        = _UxGT("PID-C ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_PID_C_E1                        = _UxGT("PID-C ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_PID_C_E2                        = _UxGT("PID-C ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_PID_C_E3                        = _UxGT("PID-C ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_PID_C_E4                        = _UxGT("PID-C ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_PID_C_E5                        = _UxGT("PID-C ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_C_E                         = _UxGT("PID-C *");
   PROGMEM Language_Str MSG_SELECT                          = _UxGT("选择");     //"Select"
-  PROGMEM Language_Str MSG_SELECT_E0                       = _UxGT("选择 ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_SELECT_E1                       = _UxGT("选择 ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_SELECT_E2                       = _UxGT("选择 ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_SELECT_E3                       = _UxGT("选择 ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_SELECT_E4                       = _UxGT("选择 ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_SELECT_E5                       = _UxGT("选择 ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("选择 *");
   PROGMEM Language_Str MSG_ACC                             = _UxGT("加速度");     //"Accel" acceleration
   PROGMEM Language_Str MSG_JERK                            = _UxGT("抖动速率");     // "Jerk"
   PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("轴抖动速率") LCD_STR_A;     //"Va-jerk"
@@ -284,12 +220,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("最大进料速率") LCD_STR_B;     //"Vmax " max_feedrate_mm_s
   PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("最大进料速率") LCD_STR_C;     //"Vmax " max_feedrate_mm_s
   PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("最大进料速率") LCD_STR_E;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_E0                         = _UxGT("最大进料速率 ") LCD_STR_E0;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_E1                         = _UxGT("最大进料速率 ") LCD_STR_E1;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_E2                         = _UxGT("最大进料速率 ") LCD_STR_E2;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_E3                         = _UxGT("最大进料速率 ") LCD_STR_E3;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_E4                         = _UxGT("最大进料速率 ") LCD_STR_E4;     //"Vmax " max_feedrate_mm_s
-  PROGMEM Language_Str MSG_VMAX_E5                         = _UxGT("最大进料速率 ") LCD_STR_E5;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_EN                         = _UxGT("最大进料速率 *");     //"Vmax " max_feedrate_mm_s
   PROGMEM Language_Str MSG_VMIN                            = _UxGT("最小进料速率");     //"Vmin"  min_feedrate_mm_s
   PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("最小移动速率");     //"VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
   PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("加速度");     // "Acceleration"
@@ -297,12 +228,7 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_AMAX_B                          = _UxGT("最大打印加速度") LCD_STR_B;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
   PROGMEM Language_Str MSG_AMAX_C                          = _UxGT("最大打印加速度") LCD_STR_C;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
   PROGMEM Language_Str MSG_AMAX_E                          = _UxGT("最大打印加速度") LCD_STR_E;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_E0                         = _UxGT("最大打印加速度 ") LCD_STR_E0;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_E1                         = _UxGT("最大打印加速度 ") LCD_STR_E1;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_E2                         = _UxGT("最大打印加速度 ") LCD_STR_E2;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_E3                         = _UxGT("最大打印加速度 ") LCD_STR_E3;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_E4                         = _UxGT("最大打印加速度 ") LCD_STR_E4;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-  PROGMEM Language_Str MSG_AMAX_E5                         = _UxGT("最大打印加速度 ") LCD_STR_E5;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_EN                         = _UxGT("最大打印加速度 *");     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
   PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("收进加速度");     //"A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
   PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("非打印移动加速度");     //"A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
   PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("轴步数/mm");     //"Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
@@ -310,23 +236,13 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("轴步数/mm");     //"Bsteps/mm"
   PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT("轴步数/mm");     //"Csteps/mm"
   PROGMEM Language_Str MSG_E_STEPS                         = _UxGT("挤出机步数/mm");     //"Esteps/mm"
-  PROGMEM Language_Str MSG_E0_STEPS                        = _UxGT("挤出机") LCD_STR_N0 _UxGT("步数/mm");
-  PROGMEM Language_Str MSG_E1_STEPS                        = _UxGT("挤出机") LCD_STR_N1 _UxGT("步数/mm");
-  PROGMEM Language_Str MSG_E2_STEPS                        = _UxGT("挤出机") LCD_STR_N2 _UxGT("步数/mm");
-  PROGMEM Language_Str MSG_E3_STEPS                        = _UxGT("挤出机") LCD_STR_N3 _UxGT("步数/mm");
-  PROGMEM Language_Str MSG_E4_STEPS                        = _UxGT("挤出机") LCD_STR_N4 _UxGT("步数/mm");
-  PROGMEM Language_Str MSG_E5_STEPS                        = _UxGT("挤出机") LCD_STR_N5 _UxGT("步数/mm");
+  PROGMEM Language_Str MSG_EN_STEPS                        = _UxGT("挤出机~步数/mm");
   PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("温度");     //"Temperature"
   PROGMEM Language_Str MSG_MOTION                          = _UxGT("运动");     //"Motion"
   PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("丝料测容");     //"Filament" menu_advanced_filament
   PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("测容积mm³");     //"E in mm3" volumetric_enabled
   PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("丝料直径");     //"Fil. Dia."
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E0                = _UxGT("丝料直径 ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E1                = _UxGT("丝料直径 ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E2                = _UxGT("丝料直径 ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E3                = _UxGT("丝料直径 ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E4                = _UxGT("丝料直径 ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E5                = _UxGT("丝料直径 ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("丝料直径 *");
   PROGMEM Language_Str MSG_FILAMENT_UNLOAD                 = _UxGT("卸载 mm");     // "Unload mm"
   PROGMEM Language_Str MSG_FILAMENT_LOAD                   = _UxGT("装载 mm");     // "Load mm"
   PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD对比度");     //"LCD contrast"
@@ -360,24 +276,11 @@ namespace Language_zh_CN {
   PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAPF   = _UxGT("S UnRet V");     // "S UnRet V"
   PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("自动抽回");     //"AutoRetr." autoretract_enabled,
   PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("更换丝料");     //"Change filament"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE_E0               = _UxGT("更换丝料 ") LCD_STR_E0;     //"Change filament"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE_E1               = _UxGT("更换丝料 ") LCD_STR_E1;     //"Change filament"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE_E2               = _UxGT("更换丝料 ") LCD_STR_E2;     //"Change filament"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE_E3               = _UxGT("更换丝料 ") LCD_STR_E3;     //"Change filament"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE_E4               = _UxGT("更换丝料 ") LCD_STR_E4;     //"Change filament"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE_E5               = _UxGT("更换丝料 ") LCD_STR_E5;     //"Change filament"
-  PROGMEM Language_Str MSG_FILAMENTLOAD_E0                 = _UxGT("装载丝料 ") LCD_STR_E0;     // "Load filament"
-  PROGMEM Language_Str MSG_FILAMENTLOAD_E1                 = _UxGT("装载丝料 ") LCD_STR_E1;     // "Load filament"
-  PROGMEM Language_Str MSG_FILAMENTLOAD_E2                 = _UxGT("装载丝料 ") LCD_STR_E2;     // "Load filament"
-  PROGMEM Language_Str MSG_FILAMENTLOAD_E3                 = _UxGT("装载丝料 ") LCD_STR_E3;     // "Load filament"
-  PROGMEM Language_Str MSG_FILAMENTLOAD_E4                 = _UxGT("装载丝料 ") LCD_STR_E4;     // "Load filament"
-  PROGMEM Language_Str MSG_FILAMENTLOAD_E5                 = _UxGT("装载丝料 ") LCD_STR_E5;     // "Load filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E0               = _UxGT("卸载丝料 ") LCD_STR_E0;     // "Unload filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E1               = _UxGT("卸载丝料 ") LCD_STR_E1;     // "Unload filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E2               = _UxGT("卸载丝料 ") LCD_STR_E2;     // "Unload filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E3               = _UxGT("卸载丝料 ") LCD_STR_E3;     // "Unload filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E4               = _UxGT("卸载丝料 ") LCD_STR_E4;     // "Unload filament"
-  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E5               = _UxGT("卸载丝料 ") LCD_STR_E5;     // "Unload filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE_E                = _UxGT("更换丝料 *");     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTLOAD                    = _UxGT("装载丝料");     // "Load filament"
+  PROGMEM Language_Str MSG_FILAMENTLOAD_E                  = _UxGT("装载丝料 *");     // "Load filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD                  = _UxGT("卸载丝料");     // "Unload filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E                = _UxGT("卸载丝料 *");     // "Unload filament"
   PROGMEM Language_Str MSG_FILAMENTUNLOAD_ALL              = _UxGT("卸载全部");     // "Unload All"
   PROGMEM Language_Str MSG_INIT_MEDIA                      = _UxGT("初始化存储卡");     //"Init. SD card"
   PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("更换存储卡");     //"Change SD card"

commit 6a865a614620d71521bd3dc032adffe0bf82378c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Oct 9 18:46:10 2019 -0600

    Multi-language support (#15453)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index ad0b1272df..a9286b0f48 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -28,357 +28,463 @@
  * See also http://marlinfw.org/docs/development/lcd_language.html
  *
  */
+namespace Language_zh_CN {
+  using namespace Language_en;  // Inherit undefined strings from English
 
-#define CHARSIZE 3
+  constexpr uint8_t    CHARSIZE                            = 3;
+  PROGMEM Language_Str LANGUAGE                            = _UxGT("Simplified Chinese");
 
-#define WELCOME_MSG                         MACHINE_NAME _UxGT("已就绪.")  //" ready."
-#define MSG_BACK                            _UxGT("返回")         // ”Back“
-#define MSG_MEDIA_INSERTED                  _UxGT("存储卡已插入")  //"Card inserted"
-#define MSG_MEDIA_REMOVED                   _UxGT("存储卡被拔出")  //"Card removed"
-#define MSG_LCD_ENDSTOPS                    _UxGT("挡块")  //"Endstops" // Max length 8 characters
-#define MSG_MAIN                            _UxGT("主菜单")  //"Main"
-#define MSG_AUTOSTART                       _UxGT("自动开始")  //"Autostart"
-#define MSG_DISABLE_STEPPERS                _UxGT("关闭步进电机")  //"Disable steppers"
-#define MSG_DEBUG_MENU                      _UxGT("调试菜单")    // "Debug Menu"
-#define MSG_PROGRESS_BAR_TEST               _UxGT("进度条测试")  // "Progress Bar Test"
-#define MSG_AUTO_HOME                       _UxGT("回原点")  //"Auto home"
-#define MSG_AUTO_HOME_X                     _UxGT("回X原位")  //"Home X"
-#define MSG_AUTO_HOME_Y                     _UxGT("回Y原位")  //"Home Y"
-#define MSG_AUTO_HOME_Z                     _UxGT("回Z原位")  //"Home Z"
-#define MSG_LEVEL_BED_HOMING                _UxGT("平台调平XYZ归原位")  //"Homing XYZ"
-#define MSG_LEVEL_BED_WAITING               _UxGT("单击开始热床调平")  //"Click to Begin"
-#define MSG_LEVEL_BED_NEXT_POINT            _UxGT("下个热床调平点")  //"Next Point"
-#define MSG_LEVEL_BED_DONE                  _UxGT("完成热床调平")  //"Leveling Done!"
-#define MSG_Z_FADE_HEIGHT                   _UxGT("淡出高度")     // "Fade Height"
-#define MSG_SET_HOME_OFFSETS                _UxGT("设置原点偏移")  //"Set home offsets"
-#define MSG_HOME_OFFSETS_APPLIED            _UxGT("偏移已启用")  //"Offsets applied"
-#define MSG_SET_ORIGIN                      _UxGT("设置原点")  //"Set origin"
-#define MSG_PREHEAT_1                       _UxGT("预热" PREHEAT_1_LABEL)  //"Preheat PREHEAT_2_LABEL"
-#define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 _UxGT(" ")  //MSG_PREHEAT_1 " "
-#define MSG_PREHEAT_1_ALL                   MSG_PREHEAT_1 _UxGT(" 全部")  //MSG_PREHEAT_1 " All"
-#define MSG_PREHEAT_1_BEDONLY               MSG_PREHEAT_1 _UxGT(" 热床")  //MSG_PREHEAT_1 " Bed"
-#define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 _UxGT(" 设置")  //MSG_PREHEAT_1 " conf"
-#define MSG_PREHEAT_2                       _UxGT("预热" PREHEAT_2_LABEL)  //"Preheat PREHEAT_2_LABEL"
-#define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 _UxGT(" ")  //MSG_PREHEAT_2 " "
-#define MSG_PREHEAT_2_ALL                   MSG_PREHEAT_2 _UxGT(" 全部")  //MSG_PREHEAT_2 " All"
-#define MSG_PREHEAT_2_BEDONLY               MSG_PREHEAT_2 _UxGT(" 热床")  //MSG_PREHEAT_2 " Bed"
-#define MSG_PREHEAT_2_SETTINGS              MSG_PREHEAT_2 _UxGT(" 设置")  //MSG_PREHEAT_2 " conf"
-#define MSG_COOLDOWN                        _UxGT("降温")  //"Cooldown"
-#define MSG_SWITCH_PS_ON                    _UxGT("电源打开")  //"Switch power on"
-#define MSG_SWITCH_PS_OFF                   _UxGT("电源关闭")  //"Switch power off"
-#define MSG_EXTRUDE                         _UxGT("挤出")  //"Extrude"
-#define MSG_RETRACT                         _UxGT("回抽")  //"Retract"
-#define MSG_MOVE_AXIS                       _UxGT("移动轴")  //"Move axis"
-#define MSG_BED_LEVELING                    _UxGT("调平热床")  //"Bed leveling"
-#define MSG_LEVEL_BED                       _UxGT("调平热床")  //"Level bed"
-#define MSG_LEVEL_CORNERS                   _UxGT("调平边角") // "Level corners"
+  PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT("已就绪.");     //" ready."
+  PROGMEM Language_Str MSG_BACK                            = _UxGT("返回");     // ”Back“
+  PROGMEM Language_Str MSG_MEDIA_INSERTED                  = _UxGT("存储卡已插入");     //"Card inserted"
+  PROGMEM Language_Str MSG_MEDIA_REMOVED                   = _UxGT("存储卡被拔出");     //"Card removed"
+  PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("挡块");     //"Endstops" // Max length 8 characters
+  PROGMEM Language_Str MSG_MAIN                            = _UxGT("主菜单");     //"Main"
+  PROGMEM Language_Str MSG_AUTOSTART                       = _UxGT("自动开始");     //"Autostart"
+  PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("关闭步进电机");     //"Disable steppers"
+  PROGMEM Language_Str MSG_DEBUG_MENU                      = _UxGT("调试菜单");     // "Debug Menu"
+  PROGMEM Language_Str MSG_PROGRESS_BAR_TEST               = _UxGT("进度条测试");     // "Progress Bar Test"
+  PROGMEM Language_Str MSG_AUTO_HOME                       = _UxGT("回原点");     //"Auto home"
+  PROGMEM Language_Str MSG_AUTO_HOME_X                     = _UxGT("回X原位");     //"Home X"
+  PROGMEM Language_Str MSG_AUTO_HOME_Y                     = _UxGT("回Y原位");     //"Home Y"
+  PROGMEM Language_Str MSG_AUTO_HOME_Z                     = _UxGT("回Z原位");     //"Home Z"
+  PROGMEM Language_Str MSG_LEVEL_BED_HOMING                = _UxGT("平台调平XYZ归原位");     //"Homing XYZ"
+  PROGMEM Language_Str MSG_LEVEL_BED_WAITING               = _UxGT("单击开始热床调平");     //"Click to Begin"
+  PROGMEM Language_Str MSG_LEVEL_BED_NEXT_POINT            = _UxGT("下个热床调平点");     //"Next Point"
+  PROGMEM Language_Str MSG_LEVEL_BED_DONE                  = _UxGT("完成热床调平");     //"Leveling Done!"
+  PROGMEM Language_Str MSG_Z_FADE_HEIGHT                   = _UxGT("淡出高度");     // "Fade Height"
+  PROGMEM Language_Str MSG_SET_HOME_OFFSETS                = _UxGT("设置原点偏移");     //"Set home offsets"
+  PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("偏移已启用");     //"Offsets applied"
+  PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("设置原点");     //"Set origin"
+  PROGMEM Language_Str MSG_PREHEAT_1                       = _UxGT("预热 ") PREHEAT_1_LABEL;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_1_H0                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N0;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_1_H1                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N1;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_1_H2                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N2;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_1_H3                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N3;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_1_H4                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N4;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_1_H5                    = _UxGT("预热 ") PREHEAT_1_LABEL " " LCD_STR_N5;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_1_END                   = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_1 " "
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E0                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N0;     //MSG_PREHEAT_1 " "
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E1                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N1;     //MSG_PREHEAT_1 " "
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E2                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N2;     //MSG_PREHEAT_1 " "
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E3                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N3;     //MSG_PREHEAT_1 " "
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E4                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N4;     //MSG_PREHEAT_1 " "
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E5                = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 喷嘴 ") LCD_STR_N5;     //MSG_PREHEAT_1 " "
+  PROGMEM Language_Str MSG_PREHEAT_1_ALL                   = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 全部");     //MSG_PREHEAT_1 " All"
+  PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY               = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 热床");     //MSG_PREHEAT_1 " Bed"
+  PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS              = _UxGT("预热 ") PREHEAT_1_LABEL _UxGT(" 设置");     //MSG_PREHEAT_1 " conf"
+  PROGMEM Language_Str MSG_PREHEAT_2                       = _UxGT("预热 ") PREHEAT_2_LABEL;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_2_H0                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N0;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_2_H1                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N1;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_2_H2                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N2;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_2_H3                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N3;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_2_H4                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N4;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_2_H5                    = _UxGT("预热 ") PREHEAT_2_LABEL " " LCD_STR_N5;     //"Preheat PREHEAT_2_LABEL"
+  PROGMEM Language_Str MSG_PREHEAT_2_END                   = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴");     //MSG_PREHEAT_2 " "
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E0                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N0;     //MSG_PREHEAT_2 " "
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E1                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N1;     //MSG_PREHEAT_2 " "
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E2                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N2;     //MSG_PREHEAT_2 " "
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E3                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N3;     //MSG_PREHEAT_2 " "
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E4                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N4;     //MSG_PREHEAT_2 " "
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E5                = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 喷嘴 ") LCD_STR_N5;     //MSG_PREHEAT_2 " "
+  PROGMEM Language_Str MSG_PREHEAT_2_ALL                   = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 全部");     //MSG_PREHEAT_2 " All"
+  PROGMEM Language_Str MSG_PREHEAT_2_BEDONLY               = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 热床");     //MSG_PREHEAT_2 " Bed"
+  PROGMEM Language_Str MSG_PREHEAT_2_SETTINGS              = _UxGT("预热 ") PREHEAT_2_LABEL _UxGT(" 设置");     //MSG_PREHEAT_2 " conf"
+  PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("降温");     //"Cooldown"
+  PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("电源打开");     //"Switch power on"
+  PROGMEM Language_Str MSG_SWITCH_PS_OFF                   = _UxGT("电源关闭");     //"Switch power off"
+  PROGMEM Language_Str MSG_EXTRUDE                         = _UxGT("挤出");     //"Extrude"
+  PROGMEM Language_Str MSG_RETRACT                         = _UxGT("回抽");     //"Retract"
+  PROGMEM Language_Str MSG_MOVE_AXIS                       = _UxGT("移动轴");     //"Move axis"
+  PROGMEM Language_Str MSG_BED_LEVELING                    = _UxGT("调平热床");     //"Bed leveling"
+  PROGMEM Language_Str MSG_LEVEL_BED                       = _UxGT("调平热床");     //"Level bed"
+  PROGMEM Language_Str MSG_LEVEL_CORNERS                   = _UxGT("调平边角");     // "Level corners"
 
-#define MSG_NEXT_CORNER                     _UxGT("下个边角") // "Next corner"
-#define MSG_EDIT_MESH                       _UxGT("编辑网格") // "Edit Mesh"
-#define MSG_EDITING_STOPPED                 _UxGT("网格编辑已停止") // "Mesh Editing Stopped"
-#define MSG_USER_MENU                       _UxGT("定制命令") // "Custom Commands"
+  PROGMEM Language_Str MSG_NEXT_CORNER                     = _UxGT("下个边角");     // "Next corner"
+  PROGMEM Language_Str MSG_EDIT_MESH                       = _UxGT("编辑网格");     // "Edit Mesh"
+  PROGMEM Language_Str MSG_EDITING_STOPPED                 = _UxGT("网格编辑已停止");     // "Mesh Editing Stopped"
+  PROGMEM Language_Str MSG_USER_MENU                       = _UxGT("定制命令");     // "Custom Commands"
 
-#define MSG_UBL_DOING_G29                   _UxGT("执行G29") // "Doing G29"
-#define MSG_UBL_TOOLS                       _UxGT("UBL工具") // "UBL Tools"
-#define MSG_UBL_LEVEL_BED                   _UxGT("统一热床调平(UBL)") // "Unified Bed Leveling"
-#define MSG_UBL_MANUAL_MESH                 _UxGT("手工创设网格") // "Manually Build Mesh"
-#define MSG_UBL_BC_INSERT                   _UxGT("放置垫片并测量") // "Place shim & measure"
-#define MSG_UBL_BC_INSERT2                  _UxGT("测量") // "Measure"
-#define MSG_UBL_BC_REMOVE                   _UxGT("移除并测量热床") // "Remove & measure bed"
-#define MSG_UBL_MOVING_TO_NEXT              _UxGT("移动到下一个") // "Moving to next"
-#define MSG_UBL_ACTIVATE_MESH               _UxGT("激活UBL") // "Activate UBL"
-#define MSG_UBL_DEACTIVATE_MESH             _UxGT("关闭UBL") // "Deactivate UBL"
-#define MSG_UBL_SET_TEMP_BED                _UxGT("设置热床温度") // "Bed Temp"
-#define MSG_UBL_SET_TEMP_HOTEND             _UxGT("热端温度") // "Hotend Temp"
-#define MSG_UBL_MESH_EDIT                   _UxGT("网格编辑") // "Mesh Edit"
-#define MSG_UBL_EDIT_CUSTOM_MESH            _UxGT("编辑客户网格") // "Edit Custom Mesh"
-#define MSG_UBL_FINE_TUNE_MESH              _UxGT("细调网格") // "Fine Tuning Mesh"
-#define MSG_UBL_DONE_EDITING_MESH           _UxGT("完成编辑网格") // "Done Editing Mesh"
-#define MSG_UBL_BUILD_CUSTOM_MESH           _UxGT("创设客户网格") // "Build Custom Mesh"
-#define MSG_UBL_BUILD_MESH_MENU             _UxGT("创设网格") // "Build Mesh"
-#define MSG_UBL_BUILD_MESH_M1               _UxGT("创设" PREHEAT_1_LABEL "网格") // "Build PREHEAT_1_LABEL Mesh"
-#define MSG_UBL_BUILD_MESH_M2               _UxGT("创设" PREHEAT_2_LABEL "网格") // "Build PREHEAT_2_LABEL Mesh"
-#define MSG_UBL_BUILD_COLD_MESH             _UxGT("创设冷网格") // "Build Cold Mesh"
-#define MSG_UBL_MESH_HEIGHT_ADJUST          _UxGT("调整网格高度") // "Adjust Mesh Height"
-#define MSG_UBL_MESH_HEIGHT_AMOUNT          _UxGT("高度合计") // "Height Amount"
-#define MSG_UBL_VALIDATE_MESH_MENU          _UxGT("批准网格") // "Validate Mesh"
-#define MSG_UBL_VALIDATE_MESH_M1            _UxGT("批准" PREHEAT_1_LABEL "网格") // "Validate PREHEAT_1_LABEL Mesh"
-#define MSG_UBL_VALIDATE_MESH_M2            _UxGT("批准" PREHEAT_2_LABEL "网格") // "Validate PREHEAT_2_LABEL Mesh"
-#define MSG_UBL_VALIDATE_CUSTOM_MESH        _UxGT("批准客户网格") // "Validate Custom Mesh"
-#define MSG_UBL_CONTINUE_MESH               _UxGT("继续热床网格") // "Continue Bed Mesh"
-#define MSG_UBL_MESH_LEVELING               _UxGT("网格调平") // "Mesh Leveling"
-#define MSG_UBL_3POINT_MESH_LEVELING        _UxGT("三点调平") // "3-Point Leveling"
-#define MSG_UBL_GRID_MESH_LEVELING          _UxGT("格子网格调平") // "Grid Mesh Leveling"
-#define MSG_UBL_MESH_LEVEL                  _UxGT("调平网格") // "Level Mesh"
-#define MSG_UBL_SIDE_POINTS                 _UxGT("边点") // "Side Points"
-#define MSG_UBL_MAP_TYPE                    _UxGT("图类型") // "Map Type"
-#define MSG_UBL_OUTPUT_MAP                  _UxGT("输出网格图") // "Output Mesh Map"
-#define MSG_UBL_OUTPUT_MAP_HOST             _UxGT("输出到主机") // "Output for Host"
-#define MSG_UBL_OUTPUT_MAP_CSV              _UxGT("输出到CSV") // "Output for CSV"
-#define MSG_UBL_OUTPUT_MAP_BACKUP           _UxGT("输出到备份") // "Off Printer Backup"
-#define MSG_UBL_INFO_UBL                    _UxGT("输出UBL信息") // "Output UBL Info"
-#define MSG_UBL_FILLIN_AMOUNT               _UxGT("填充合计") // "Fill-in Amount"
-#define MSG_UBL_MANUAL_FILLIN               _UxGT("手工填充") // "Manual Fill-in"
-#define MSG_UBL_SMART_FILLIN                _UxGT("聪明填充") // "Smart Fill-in"
-#define MSG_UBL_FILLIN_MESH                 _UxGT("填充网格") // "Fill-in Mesh"
-#define MSG_UBL_INVALIDATE_ALL              _UxGT("作废所有的") // "Invalidate All"
-#define MSG_UBL_INVALIDATE_CLOSEST          _UxGT("作废最近的") // "Invalidate Closest"
-#define MSG_UBL_FINE_TUNE_ALL               _UxGT("细调所有的") // "Fine Tune All"
-#define MSG_UBL_FINE_TUNE_CLOSEST           _UxGT("细调最近的") // "Fine Tune Closest"
-#define MSG_UBL_STORAGE_MESH_MENU           _UxGT("网格存储") // "Mesh Storage"
-#define MSG_UBL_STORAGE_SLOT                _UxGT("存储槽") // "Memory Slot"
-#define MSG_UBL_LOAD_MESH                   _UxGT("装载热床网格") // "Load Bed Mesh"
-#define MSG_UBL_SAVE_MESH                   _UxGT("保存热床网格") // "Save Bed Mesh"
-#define MSG_MESH_LOADED                     _UxGT("网格 %i 已装载") // "Mesh %i loaded"
-#define MSG_MESH_SAVED                      _UxGT("网格 %i 已保存") // "Mesh %i saved"
-#define MSG_UBL_NO_STORAGE                  _UxGT("没有存储") // "No storage"
-#define MSG_UBL_SAVE_ERROR                  _UxGT("错误: UBL保存") // "Err: UBL Save"
-#define MSG_UBL_RESTORE_ERROR               _UxGT("错误: UBL还原") // "Err: UBL Restore"
-#define MSG_UBL_Z_OFFSET_STOPPED            _UxGT("Z偏移已停止") // "Z-Offset Stopped"
-#define MSG_UBL_STEP_BY_STEP_MENU           _UxGT("一步步UBL") // "Step-By-Step UBL"
+  PROGMEM Language_Str MSG_UBL_DOING_G29                   = _UxGT("执行G29");     // "Doing G29"
+  PROGMEM Language_Str MSG_UBL_TOOLS                       = _UxGT("UBL工具");     // "UBL Tools"
+  PROGMEM Language_Str MSG_UBL_LEVEL_BED                   = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
+  PROGMEM Language_Str MSG_UBL_MANUAL_MESH                 = _UxGT("手工创设网格");     // "Manually Build Mesh"
+  PROGMEM Language_Str MSG_UBL_BC_INSERT                   = _UxGT("放置垫片并测量");     // "Place shim & measure"
+  PROGMEM Language_Str MSG_UBL_BC_INSERT2                  = _UxGT("测量");     // "Measure"
+  PROGMEM Language_Str MSG_UBL_BC_REMOVE                   = _UxGT("移除并测量热床");     // "Remove & measure bed"
+  PROGMEM Language_Str MSG_UBL_MOVING_TO_NEXT              = _UxGT("移动到下一个");     // "Moving to next"
+  PROGMEM Language_Str MSG_UBL_ACTIVATE_MESH               = _UxGT("激活UBL");     // "Activate UBL"
+  PROGMEM Language_Str MSG_UBL_DEACTIVATE_MESH             = _UxGT("关闭UBL");     // "Deactivate UBL"
+  PROGMEM Language_Str MSG_UBL_SET_TEMP_BED                = _UxGT("设置热床温度");     // "Bed Temp"
+  PROGMEM Language_Str MSG_UBL_SET_TEMP_HOTEND             = _UxGT("热端温度");     // "Hotend Temp"
+  PROGMEM Language_Str MSG_UBL_MESH_EDIT                   = _UxGT("网格编辑");     // "Mesh Edit"
+  PROGMEM Language_Str MSG_UBL_EDIT_CUSTOM_MESH            = _UxGT("编辑客户网格");     // "Edit Custom Mesh"
+  PROGMEM Language_Str MSG_UBL_FINE_TUNE_MESH              = _UxGT("细调网格");     // "Fine Tuning Mesh"
+  PROGMEM Language_Str MSG_UBL_DONE_EDITING_MESH           = _UxGT("完成编辑网格");     // "Done Editing Mesh"
+  PROGMEM Language_Str MSG_UBL_BUILD_CUSTOM_MESH           = _UxGT("创设客户网格");     // "Build Custom Mesh"
+  PROGMEM Language_Str MSG_UBL_BUILD_MESH_MENU             = _UxGT("创设网格");     // "Build Mesh"
+  PROGMEM Language_Str MSG_UBL_BUILD_MESH_M1               = _UxGT("创设 ") PREHEAT_1_LABEL _UxGT(" 网格");     // "Build PREHEAT_1_LABEL Mesh"
+  PROGMEM Language_Str MSG_UBL_BUILD_MESH_M2               = _UxGT("创设 ") PREHEAT_2_LABEL _UxGT(" 网格");     // "Build PREHEAT_2_LABEL Mesh"
+  PROGMEM Language_Str MSG_UBL_BUILD_COLD_MESH             = _UxGT("创设冷网格");     // "Build Cold Mesh"
+  PROGMEM Language_Str MSG_UBL_MESH_HEIGHT_ADJUST          = _UxGT("调整网格高度");     // "Adjust Mesh Height"
+  PROGMEM Language_Str MSG_UBL_MESH_HEIGHT_AMOUNT          = _UxGT("高度合计");     // "Height Amount"
+  PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_MENU          = _UxGT("批准网格");     // "Validate Mesh"
+  PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_M1            = _UxGT("批准 ") PREHEAT_1_LABEL _UxGT(" 网格");     // "Validate PREHEAT_1_LABEL Mesh"
+  PROGMEM Language_Str MSG_UBL_VALIDATE_MESH_M2            = _UxGT("批准 ") PREHEAT_2_LABEL _UxGT(" 网格");     // "Validate PREHEAT_2_LABEL Mesh"
+  PROGMEM Language_Str MSG_UBL_VALIDATE_CUSTOM_MESH        = _UxGT("批准客户网格");     // "Validate Custom Mesh"
+  PROGMEM Language_Str MSG_UBL_CONTINUE_MESH               = _UxGT("继续热床网格");     // "Continue Bed Mesh"
+  PROGMEM Language_Str MSG_UBL_MESH_LEVELING               = _UxGT("网格调平");     // "Mesh Leveling"
+  PROGMEM Language_Str MSG_UBL_3POINT_MESH_LEVELING        = _UxGT("三点调平");     // "3-Point Leveling"
+  PROGMEM Language_Str MSG_UBL_GRID_MESH_LEVELING          = _UxGT("格子网格调平");     // "Grid Mesh Leveling"
+  PROGMEM Language_Str MSG_UBL_MESH_LEVEL                  = _UxGT("调平网格");     // "Level Mesh"
+  PROGMEM Language_Str MSG_UBL_SIDE_POINTS                 = _UxGT("边点");     // "Side Points"
+  PROGMEM Language_Str MSG_UBL_MAP_TYPE                    = _UxGT("图类型");     // "Map Type"
+  PROGMEM Language_Str MSG_UBL_OUTPUT_MAP                  = _UxGT("输出网格图");     // "Output Mesh Map"
+  PROGMEM Language_Str MSG_UBL_OUTPUT_MAP_HOST             = _UxGT("输出到主机");     // "Output for Host"
+  PROGMEM Language_Str MSG_UBL_OUTPUT_MAP_CSV              = _UxGT("输出到CSV");     // "Output for CSV"
+  PROGMEM Language_Str MSG_UBL_OUTPUT_MAP_BACKUP           = _UxGT("输出到备份");     // "Off Printer Backup"
+  PROGMEM Language_Str MSG_UBL_INFO_UBL                    = _UxGT("输出UBL信息");     // "Output UBL Info"
+  PROGMEM Language_Str MSG_UBL_FILLIN_AMOUNT               = _UxGT("填充合计");     // "Fill-in Amount"
+  PROGMEM Language_Str MSG_UBL_MANUAL_FILLIN               = _UxGT("手工填充");     // "Manual Fill-in"
+  PROGMEM Language_Str MSG_UBL_SMART_FILLIN                = _UxGT("聪明填充");     // "Smart Fill-in"
+  PROGMEM Language_Str MSG_UBL_FILLIN_MESH                 = _UxGT("填充网格");     // "Fill-in Mesh"
+  PROGMEM Language_Str MSG_UBL_INVALIDATE_ALL              = _UxGT("作废所有的");     // "Invalidate All"
+  PROGMEM Language_Str MSG_UBL_INVALIDATE_CLOSEST          = _UxGT("作废最近的");     // "Invalidate Closest"
+  PROGMEM Language_Str MSG_UBL_FINE_TUNE_ALL               = _UxGT("细调所有的");     // "Fine Tune All"
+  PROGMEM Language_Str MSG_UBL_FINE_TUNE_CLOSEST           = _UxGT("细调最近的");     // "Fine Tune Closest"
+  PROGMEM Language_Str MSG_UBL_STORAGE_MESH_MENU           = _UxGT("网格存储");     // "Mesh Storage"
+  PROGMEM Language_Str MSG_UBL_STORAGE_SLOT                = _UxGT("存储槽");     // "Memory Slot"
+  PROGMEM Language_Str MSG_UBL_LOAD_MESH                   = _UxGT("装载热床网格");     // "Load Bed Mesh"
+  PROGMEM Language_Str MSG_UBL_SAVE_MESH                   = _UxGT("保存热床网格");     // "Save Bed Mesh"
+  PROGMEM Language_Str MSG_MESH_LOADED                     = _UxGT("M117 网格 %i 已装载");     // "Mesh %i loaded"
+  PROGMEM Language_Str MSG_MESH_SAVED                      = _UxGT("M117 网格 %i 已保存");     // "Mesh %i saved"
+  PROGMEM Language_Str MSG_UBL_NO_STORAGE                  = _UxGT("没有存储");     // "No storage"
+  PROGMEM Language_Str MSG_UBL_SAVE_ERROR                  = _UxGT("错误: UBL保存");     // "Err: UBL Save"
+  PROGMEM Language_Str MSG_UBL_RESTORE_ERROR               = _UxGT("错误: UBL还原");     // "Err: UBL Restore"
+  PROGMEM Language_Str MSG_UBL_Z_OFFSET_STOPPED            = _UxGT("Z偏移已停止");     // "Z-Offset Stopped"
+  PROGMEM Language_Str MSG_UBL_STEP_BY_STEP_MENU           = _UxGT("一步步UBL");     // "Step-By-Step UBL"
+  PROGMEM Language_Str MSG_UBL_1_BUILD_COLD_MESH           = _UxGT("1. 创设冷网格");
+  PROGMEM Language_Str MSG_UBL_2_SMART_FILLIN              = _UxGT("2. 聪明填充");
+  PROGMEM Language_Str MSG_UBL_3_VALIDATE_MESH_MENU        = _UxGT("3. 批准网格");
+  PROGMEM Language_Str MSG_UBL_4_FINE_TUNE_ALL             = _UxGT("4. 细调所有的");
+  PROGMEM Language_Str MSG_UBL_5_VALIDATE_MESH_MENU        = _UxGT("5. 批准网格");
+  PROGMEM Language_Str MSG_UBL_6_FINE_TUNE_ALL             = _UxGT("6. 细调所有的");
+  PROGMEM Language_Str MSG_UBL_7_SAVE_MESH                 = _UxGT("7. 保存热床网格");
 
-#define MSG_LED_CONTROL                     _UxGT("灯管控制") // "LED Control")
-#define MSG_LEDS                            _UxGT("灯") // "Lights")
-#define MSG_LED_PRESETS                     _UxGT("灯预置") // "Light Presets")
-#define MSG_SET_LEDS_RED                    _UxGT("红") // "Red")
-#define MSG_SET_LEDS_ORANGE                 _UxGT("橙") // "Orange")
-#define MSG_SET_LEDS_YELLOW                 _UxGT("黄") // "Yellow")
-#define MSG_SET_LEDS_GREEN                  _UxGT("绿") // "Green")
-#define MSG_SET_LEDS_BLUE                   _UxGT("蓝") // "Blue")
-#define MSG_SET_LEDS_INDIGO                 _UxGT("青") // "Indigo")
-#define MSG_SET_LEDS_VIOLET                 _UxGT("紫") // "Violet")
-#define MSG_SET_LEDS_WHITE                  _UxGT("白") // "White")
-#define MSG_SET_LEDS_DEFAULT                _UxGT("缺省") // "Default")
-#define MSG_CUSTOM_LEDS                     _UxGT("定制灯") // "Custom Lights")
-#define MSG_INTENSITY_R                     _UxGT("红饱和度") // "Red Intensity")
-#define MSG_INTENSITY_G                     _UxGT("绿饱和度") // "Green Intensity")
-#define MSG_INTENSITY_B                     _UxGT("蓝饱和度") // "Blue Intensity")
-#define MSG_INTENSITY_W                     _UxGT("白饱和度") // "White Intensity")
-#define MSG_LED_BRIGHTNESS                  _UxGT("亮度") // "Brightness")
+  PROGMEM Language_Str MSG_LED_CONTROL                     = _UxGT("灯管控制");     // "LED Control")
+  PROGMEM Language_Str MSG_LEDS                            = _UxGT("灯");     // "Lights")
+  PROGMEM Language_Str MSG_LED_PRESETS                     = _UxGT("灯预置");     // "Light Presets")
+  PROGMEM Language_Str MSG_SET_LEDS_RED                    = _UxGT("红");     // "Red")
+  PROGMEM Language_Str MSG_SET_LEDS_ORANGE                 = _UxGT("橙");     // "Orange")
+  PROGMEM Language_Str MSG_SET_LEDS_YELLOW                 = _UxGT("黄");     // "Yellow")
+  PROGMEM Language_Str MSG_SET_LEDS_GREEN                  = _UxGT("绿");     // "Green")
+  PROGMEM Language_Str MSG_SET_LEDS_BLUE                   = _UxGT("蓝");     // "Blue")
+  PROGMEM Language_Str MSG_SET_LEDS_INDIGO                 = _UxGT("青");     // "Indigo")
+  PROGMEM Language_Str MSG_SET_LEDS_VIOLET                 = _UxGT("紫");     // "Violet")
+  PROGMEM Language_Str MSG_SET_LEDS_WHITE                  = _UxGT("白");     // "White")
+  PROGMEM Language_Str MSG_SET_LEDS_DEFAULT                = _UxGT("缺省");     // "Default")
+  PROGMEM Language_Str MSG_CUSTOM_LEDS                     = _UxGT("定制灯");     // "Custom Lights")
+  PROGMEM Language_Str MSG_INTENSITY_R                     = _UxGT("红饱和度");     // "Red Intensity")
+  PROGMEM Language_Str MSG_INTENSITY_G                     = _UxGT("绿饱和度");     // "Green Intensity")
+  PROGMEM Language_Str MSG_INTENSITY_B                     = _UxGT("蓝饱和度");     // "Blue Intensity")
+  PROGMEM Language_Str MSG_INTENSITY_W                     = _UxGT("白饱和度");     // "White Intensity")
+  PROGMEM Language_Str MSG_LED_BRIGHTNESS                  = _UxGT("亮度");     // "Brightness")
 
-#define MSG_MOVING                          _UxGT("移动 ...") // "Moving...")
-#define MSG_FREE_XY                         _UxGT("释放 XY") // "Free XY")
-#define MSG_MOVE_X                          _UxGT("移动X")  //"Move X"
-#define MSG_MOVE_Y                          _UxGT("移动Y")  //"Move Y"
-#define MSG_MOVE_Z                          _UxGT("移动Z")  //"Move Z"
-#define MSG_MOVE_E                          _UxGT("挤出机")  //"Extruder"
-#define MSG_MOVE_Z_DIST                     _UxGT("移动 %s mm")  //"Move 0.025mm"
-#define MSG_MOVE_01MM                       _UxGT("移动 0.1 mm")  //"Move 0.1mm"
-#define MSG_MOVE_1MM                        _UxGT("移动 1 mm")  //"Move 1mm"
-#define MSG_MOVE_10MM                       _UxGT("移动 10 mm")  //"Move 10mm"
-#define MSG_SPEED                           _UxGT("速率")  //"Speed"
-#define MSG_BED_Z                           _UxGT("热床Z")  //"Bed Z"
-#define MSG_NOZZLE                          _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 喷嘴")  //"Nozzle" 噴嘴
-#define MSG_BED                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 热床")  //"Bed"
-#define MSG_FAN_SPEED                       _UxGT("风扇速率")  //"Fan speed"
-#define MSG_EXTRA_FAN_SPEED                 _UxGT("额外风扇速率") // "Extra fan speed"
-#define MSG_FLOW                            _UxGT("挤出速率")  //"Flow"
-#define MSG_CONTROL                         _UxGT("控制")  //"Control"
-#define MSG_MIN                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 最小") //" " LCD_STR_THERMOMETER " Min"
-#define MSG_MAX                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 最大")  //" " LCD_STR_THERMOMETER " Max"
-#define MSG_FACTOR                          _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 因数")  //" " LCD_STR_THERMOMETER " Fact"
-#define MSG_AUTOTEMP                        _UxGT("自动控温")  //"Autotemp"
-#define MSG_LCD_ON                          _UxGT("开")  //"On"
-#define MSG_LCD_OFF                         _UxGT("关")  //"Off"
-#define MSG_PID_P                           _UxGT("PID-P")  //"PID-P"
-#define MSG_PID_I                           _UxGT("PID-I")  //"PID-I"
-#define MSG_PID_D                           _UxGT("PID-D")  //"PID-D"
-#define MSG_PID_C                           _UxGT("PID-C")  //"PID-C"
-#define MSG_SELECT                          _UxGT("选择")  //"Select"
-#define MSG_ACC                             _UxGT("加速度")  //"Accel" acceleration
-#define MSG_JERK                            _UxGT("抖动速率")  // "Jerk"
-#if IS_KINEMATIC
-  #define MSG_VA_JERK                       _UxGT("A轴抖动速率")  //"Va-jerk"
-  #define MSG_VB_JERK                       _UxGT("B轴抖动速率")  //"Vb-jerk"
-  #define MSG_VC_JERK                       _UxGT("C轴抖动速率")  //"Vc-jerk"
-#else
-  #define MSG_VA_JERK                       _UxGT("X轴抖动速率")  //"Vx-jerk"
-  #define MSG_VB_JERK                       _UxGT("Y轴抖动速率")  //"Vy-jerk"
-  #define MSG_VC_JERK                       _UxGT("Z轴抖动速率")  //"Vz-jerk"
-#endif
-#define MSG_VE_JERK                         _UxGT("挤出机抖动速率")  //"Ve-jerk"
-#define MSG_VELOCITY                        _UxGT("速度")          // "Velocity"
-#define MSG_VMAX                            _UxGT("最大进料速率")  //"Vmax " max_feedrate_mm_s
-#define MSG_VMIN                            _UxGT("最小进料速率")  //"Vmin"  min_feedrate_mm_s
-#define MSG_VTRAV_MIN                       _UxGT("最小移动速率")  //"VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
-#define MSG_ACCELERATION                    _UxGT("加速度")       // "Acceleration"
-#define MSG_AMAX                            _UxGT("最大打印加速度")  //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
-#define MSG_A_RETRACT                       _UxGT("收进加速度")  //"A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
-#define MSG_A_TRAVEL                        _UxGT("非打印移动加速度")  //"A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
-#define MSG_STEPS_PER_MM                    _UxGT("轴步数/mm")  //"Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
-#if IS_KINEMATIC
-  #define MSG_ASTEPS                        _UxGT("A轴步数/mm")  //"Asteps/mm"
-  #define MSG_BSTEPS                        _UxGT("B轴步数/mm")  //"Bsteps/mm"
-  #define MSG_CSTEPS                        _UxGT("C轴步数/mm")  //"Csteps/mm"
-#else
-  #define MSG_ASTEPS                        _UxGT("X轴步数/mm")  //"Xsteps/mm"
-  #define MSG_BSTEPS                        _UxGT("Y轴步数/mm")  //"Ysteps/mm"
-  #define MSG_CSTEPS                        _UxGT("Z轴步数/mm")  //"Zsteps/mm"
-#endif
-#define MSG_ESTEPS                          _UxGT("挤出机步数/mm")  //"Esteps/mm"
-#define MSG_E0_STEPS                        _UxGT("挤出机1步数/mm") //"E1steps/mm"
-#define MSG_E1_STEPS                        _UxGT("挤出机2步数/mm") //"E2steps/mm"
-#define MSG_E2_STEPS                        _UxGT("挤出机3步数/mm") //"E3steps/mm"
-#define MSG_E3_STEPS                        _UxGT("挤出机4步数/mm") //"E4steps/mm"
-#define MSG_E4_STEPS                        _UxGT("挤出机5步数/mm") //"E5steps/mm"
-#define MSG_E5_STEPS                        _UxGT("挤出机6步数/mm") //"E6steps/mm"
-#define MSG_TEMPERATURE                     _UxGT("温度")  //"Temperature"
-#define MSG_MOTION                          _UxGT("运动")  //"Motion"
-#define MSG_FILAMENT                        _UxGT("丝料测容")  //"Filament" menu_advanced_filament
-#define MSG_VOLUMETRIC_ENABLED              _UxGT("测容积mm³")  //"E in mm3" volumetric_enabled
-#define MSG_FILAMENT_DIAM                   _UxGT("丝料直径")  //"Fil. Dia."
-#define MSG_FILAMENT_UNLOAD                 _UxGT("卸载 mm") // "Unload mm"
-#define MSG_FILAMENT_LOAD                   _UxGT("装载 mm")   // "Load mm"
-#define MSG_ADVANCE_K                       _UxGT("Advance K") // "Advance K"
-#define MSG_CONTRAST                        _UxGT("LCD对比度")  //"LCD contrast"
-#define MSG_STORE_EEPROM                    _UxGT("保存设置")  //"Store memory"
-#define MSG_LOAD_EEPROM                     _UxGT("装载设置")  //"Load memory"
-#define MSG_RESTORE_FAILSAFE                _UxGT("恢复安全值")  //"Restore failsafe"
-#define MSG_INIT_EEPROM                     _UxGT("初始化设置") // "Initialize EEPROM"
-#define MSG_REFRESH                         _UxGT("刷新")  //"Refresh"
-#define MSG_WATCH                           _UxGT("信息屏")  //"Info screen"
-#define MSG_PREPARE                         _UxGT("准备")  //"Prepare"
-#define MSG_TUNE                            _UxGT("调整")  //"Tune"
-#define MSG_PAUSE_PRINT                     _UxGT("暂停打印")  //"Pause print"
-#define MSG_RESUME_PRINT                    _UxGT("恢复打印")  //"Resume print"
-#define MSG_STOP_PRINT                      _UxGT("停止打印")  //"Stop print"
-#define MSG_MEDIA_MENU                      _UxGT("从存储卡上打印")  //"Print from SD"
-#define MSG_NO_MEDIA                        _UxGT("无存储卡")  //"No SD card"
-#define MSG_DWELL                           _UxGT("休眠中 ...")  //"Sleep..."
-#define MSG_USERWAIT                        _UxGT("点击继续 ...")  //"Click to resume..."
-#define MSG_PRINT_PAUSED                    _UxGT("暫停打印") // "Print paused"
-#define MSG_PRINT_ABORTED                   _UxGT("已取消打印")  //"Print aborted"
-#define MSG_NO_MOVE                         _UxGT("无移动")  //"No move."
-#define MSG_KILLED                          _UxGT("已杀掉")  //"KILLED. "
-#define MSG_STOPPED                         _UxGT("已停止")  //"STOPPED. "
-#define MSG_CONTROL_RETRACT                 _UxGT("回抽长度mm")  //"Retract mm" retract_length, retract length (positive mm)
-#define MSG_CONTROL_RETRACT_SWAP            _UxGT("换手回抽长度mm")  //"Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
-#define MSG_CONTROL_RETRACTF                _UxGT("回抽速率mm/s")  //"Retract  V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
-#define MSG_CONTROL_RETRACT_ZHOP            _UxGT("Hop mm")  //"Hop mm" retract_zraise, retract Z-lift
-#define MSG_CONTROL_RETRACT_RECOVER         _UxGT("回抽恢复长度mm")  //"UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
-#define MSG_CONTROL_RETRACT_RECOVER_SWAP    _UxGT("换手回抽恢复长度mm")  //"S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
-#define MSG_CONTROL_RETRACT_RECOVERF        _UxGT("回抽恢复后进料速率mm/s")  //"UnRet  V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
-#define MSG_CONTROL_RETRACT_RECOVER_SWAPF   _UxGT("S UnRet V") // "S UnRet V"
-#define MSG_AUTORETRACT                     _UxGT("自动抽回")  //"AutoRetr." autoretract_enabled,
-#define MSG_FILAMENTCHANGE                  _UxGT("更换丝料")  //"Change filament"
-#define MSG_FILAMENTLOAD                    _UxGT("装载丝料") // "Load filament"
-#define MSG_FILAMENTUNLOAD                  _UxGT("卸载丝料") // "Unload filament"
-#define MSG_FILAMENTUNLOAD_ALL              _UxGT("卸载全部") // "Unload All"
-#define MSG_INIT_MEDIA                      _UxGT("初始化存储卡")  //"Init. SD card"
-#define MSG_CHANGE_MEDIA                    _UxGT("更换存储卡")  //"Change SD card"
-#define MSG_ZPROBE_OUT                      _UxGT("Z探针在热床之外")  //"Z probe out. bed" Z probe is not within the physical limits
-#define MSG_SKEW_FACTOR                     _UxGT("偏斜因数") // "Skew Factor"
-#define MSG_BLTOUCH                         _UxGT("BLTouch")     // "BLTouch"
-#define MSG_BLTOUCH_SELFTEST                _UxGT("BLTouch 自检") // "BLTouch Self-Test"
-#define MSG_BLTOUCH_RESET                   _UxGT("重置BLTouch")  // "Reset BLTouch"
-#define MSG_BLTOUCH_DEPLOY                  _UxGT("部署BLTouch") // "Deploy BLTouch"
-#define MSG_BLTOUCH_STOW                    _UxGT("装载BLTouch")   // "Stow BLTouch"
-#define MSG_HOME_FIRST                      _UxGT("归位 %s%s%s 先")  //"Home ... first"
-#define MSG_ZPROBE_ZOFFSET                  _UxGT("Z偏移")  //"Z Offset"
-#define MSG_BABYSTEP_X                      _UxGT("微量调整X轴")  //"Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
-#define MSG_BABYSTEP_Y                      _UxGT("微量调整Y轴")  //"Babystep Y"
-#define MSG_BABYSTEP_Z                      _UxGT("微量调整Z轴")  //"Babystep Z"
-#define MSG_ENDSTOP_ABORT                   _UxGT("挡块终止")  //"Endstop abort"
-#define MSG_HEATING_FAILED_LCD              _UxGT("加热失败")  //"Heating failed"
-#define MSG_ERR_REDUNDANT_TEMP              _UxGT("错误：REDUNDANT TEMP")  //"Err: REDUNDANT TEMP"
-#define MSG_THERMAL_RUNAWAY                 _UxGT("温控失控")  //"THERMAL RUNAWAY"
-#define MSG_ERR_MAXTEMP                     _UxGT("错误：最高温度")  //"Err: MAXTEMP"
-#define MSG_ERR_MINTEMP                     _UxGT("错误：最低温度")  //"Err: MINTEMP"
-#define MSG_ERR_MAXTEMP_BED                 _UxGT("错误：最高热床温度")  //"Err: MAXTEMP BED"
-#define MSG_ERR_MINTEMP_BED                 _UxGT("错误：最低热床温度")  //"Err: MINTEMP BED"
-#define MSG_ERR_Z_HOMING                    _UxGT("归位 XY 先")   // "Home XY First"
-#define MSG_HALTED                          _UxGT("打印停机")  //"PRINTER HALTED"
-#define MSG_PLEASE_RESET                    _UxGT("请重置")  //"Please reset"
-#define MSG_SHORT_DAY                       _UxGT("天")  //"d" // One character only
-#define MSG_SHORT_HOUR                      _UxGT("时")  //"h" // One character only
-#define MSG_SHORT_MINUTE                    _UxGT("分")  //"m" // One character only
-#define MSG_HEATING                         _UxGT("加热中 ...")  //"Heating..."
-#define MSG_BED_HEATING                     _UxGT("加热热床中 ...")  //"Bed Heating..."
-#define MSG_DELTA_CALIBRATE                 _UxGT("⊿校准")  //"Delta Calibration"
-#define MSG_DELTA_CALIBRATE_X               _UxGT("⊿校准X")  //"Calibrate X"
-#define MSG_DELTA_CALIBRATE_Y               _UxGT("⊿校准Y")  //"Calibrate Y"
-#define MSG_DELTA_CALIBRATE_Z               _UxGT("⊿校准Z")  //"Calibrate Z"
-#define MSG_DELTA_CALIBRATE_CENTER          _UxGT("⊿校准中心")  //"Calibrate Center"
-#define MSG_DELTA_SETTINGS                  _UxGT("⊿设置") // "Delta Settings"
-#define MSG_DELTA_AUTO_CALIBRATE            _UxGT("⊿自动校准") // "Auto Calibration"
-#define MSG_DELTA_HEIGHT_CALIBRATE          _UxGT("设置⊿高度") // "Set Delta Height"
-#define MSG_DELTA_DIAG_ROD                  _UxGT("⊿斜柱") // "Diag Rod"
-#define MSG_DELTA_HEIGHT                    _UxGT("⊿高度") // "Height"
-#define MSG_DELTA_RADIUS                    _UxGT("⊿半径") // "Radius"
-#define MSG_INFO_MENU                       _UxGT("关于打印机")  //"About Printer"
-#define MSG_INFO_PRINTER_MENU               _UxGT("打印机信息")  //"Printer Info"
-#define MSG_3POINT_LEVELING                 _UxGT("三点调平") // "3-Point Leveling"
-#define MSG_LINEAR_LEVELING                 _UxGT("线性调平") // "Linear Leveling"
-#define MSG_BILINEAR_LEVELING               _UxGT("双线性调平") // "Bilinear Leveling"
-#define MSG_UBL_LEVELING                    _UxGT("统一热床调平(UBL)") // "Unified Bed Leveling"
-#define MSG_MESH_LEVELING                   _UxGT("网格调平") // "Mesh Leveling"
-#define MSG_INFO_STATS_MENU                 _UxGT("打印机统计")  //"Printer Stats"
-#define MSG_INFO_BOARD_MENU                 _UxGT("主板信息")  //"Board Info"
-#define MSG_INFO_THERMISTOR_MENU            _UxGT("温度计")  //"Thermistors"
-#define MSG_INFO_EXTRUDERS                  _UxGT("挤出机")  //"Extruders"
-#define MSG_INFO_BAUDRATE                   _UxGT("波特率")  //"Baud"
-#define MSG_INFO_PROTOCOL                   _UxGT("协议")  //"Protocol"
-#define MSG_CASE_LIGHT                      _UxGT("外壳灯") // "Case light"
-#define MSG_CASE_LIGHT_BRIGHTNESS           _UxGT("灯亮度") // "Light BRIGHTNESS"
+  PROGMEM Language_Str MSG_MOVING                          = _UxGT("移动 ...");     // "Moving...")
+  PROGMEM Language_Str MSG_FREE_XY                         = _UxGT("释放 XY");     // "Free XY")
+  PROGMEM Language_Str MSG_MOVE_X                          = _UxGT("移动X");     //"Move X"
+  PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("移动Y");     //"Move Y"
+  PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("移动Z");     //"Move Z"
+  PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("挤出机");     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_E0                         = _UxGT("挤出机 ") LCD_STR_E0;     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_E1                         = _UxGT("挤出机 ") LCD_STR_E1;     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_E2                         = _UxGT("挤出机 ") LCD_STR_E2;     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_E3                         = _UxGT("挤出机 ") LCD_STR_E3;     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_E4                         = _UxGT("挤出机 ") LCD_STR_E4;     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_E5                         = _UxGT("挤出机 ") LCD_STR_E5;     //"Extruder"
+  PROGMEM Language_Str MSG_MOVE_Z_DIST                     = _UxGT("移动 %s mm");     //"Move 0.025mm"
+  PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("移动 0.1 mm");     //"Move 0.1mm"
+  PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("移动 1 mm");     //"Move 1mm"
+  PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT("移动 10 mm");     //"Move 10mm"
+  PROGMEM Language_Str MSG_SPEED                           = _UxGT("速率");     //"Speed"
+  PROGMEM Language_Str MSG_BED_Z                           = _UxGT("热床Z");     //"Bed Z"
+  PROGMEM Language_Str MSG_NOZZLE                          = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴");     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_0                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N0;     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_1                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N1;     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_2                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N2;     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_3                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N3;     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_4                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N4;     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_NOZZLE_5                        = " " LCD_STR_THERMOMETER _UxGT(" 喷嘴 ") LCD_STR_N5;     //"Nozzle" 噴嘴
+  PROGMEM Language_Str MSG_BED                             = " " LCD_STR_THERMOMETER _UxGT(" 热床");     //"Bed"
+  PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("风扇速率");     //"Fan speed"
+  PROGMEM Language_Str MSG_FAN_SPEED_1                     = _UxGT("风扇速率 1");     //"Fan speed"
+  PROGMEM Language_Str MSG_FAN_SPEED_2                     = _UxGT("风扇速率 2");     //"Fan speed"
+  PROGMEM Language_Str MSG_FAN_SPEED_3                     = _UxGT("风扇速率 3");     //"Fan speed"
+  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED                 = _UxGT("额外风扇速率");     // "Extra fan speed"
+  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_1               = _UxGT("额外风扇速率 1");     // "Extra fan speed"
+  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_2               = _UxGT("额外风扇速率 2");     // "Extra fan speed"
+  PROGMEM Language_Str MSG_EXTRA_FAN_SPEED_3               = _UxGT("额外风扇速率 3");     // "Extra fan speed"
+  PROGMEM Language_Str MSG_FLOW                            = _UxGT("挤出速率");     //"Flow"
+  PROGMEM Language_Str MSG_FLOW_0                          = _UxGT("挤出速率 ") LCD_STR_N0;     //"Flow"
+  PROGMEM Language_Str MSG_FLOW_1                          = _UxGT("挤出速率 ") LCD_STR_N1;     //"Flow"
+  PROGMEM Language_Str MSG_FLOW_2                          = _UxGT("挤出速率 ") LCD_STR_N2;     //"Flow"
+  PROGMEM Language_Str MSG_FLOW_3                          = _UxGT("挤出速率 ") LCD_STR_N3;     //"Flow"
+  PROGMEM Language_Str MSG_FLOW_4                          = _UxGT("挤出速率 ") LCD_STR_N4;     //"Flow"
+  PROGMEM Language_Str MSG_FLOW_5                          = _UxGT("挤出速率 ") LCD_STR_N5;     //"Flow"
+  PROGMEM Language_Str MSG_CONTROL                         = _UxGT("控制");     //"Control"
+  PROGMEM Language_Str MSG_MIN                             = " " LCD_STR_THERMOMETER _UxGT(" 最小");     //" " LCD_STR_THERMOMETER " Min"
+  PROGMEM Language_Str MSG_MAX                             = " " LCD_STR_THERMOMETER _UxGT(" 最大");     //" " LCD_STR_THERMOMETER " Max"
+  PROGMEM Language_Str MSG_FACTOR                          = " " LCD_STR_THERMOMETER _UxGT(" 因数");     //" " LCD_STR_THERMOMETER " Fact"
+  PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("自动控温");     //"Autotemp"
+  PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("开");     //"On"
+  PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("关");     //"Off"
+  PROGMEM Language_Str MSG_PID_P                           = _UxGT("PID-P");     //"PID-P"
+  PROGMEM Language_Str MSG_PID_P_E0                        = _UxGT("PID-P ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_PID_P_E1                        = _UxGT("PID-P ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_PID_P_E2                        = _UxGT("PID-P ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_PID_P_E3                        = _UxGT("PID-P ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_PID_P_E4                        = _UxGT("PID-P ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_PID_P_E5                        = _UxGT("PID-P ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_I                           = _UxGT("PID-I");     //"PID-I"
+  PROGMEM Language_Str MSG_PID_I_E0                        = _UxGT("PID-I ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_PID_I_E1                        = _UxGT("PID-I ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_PID_I_E2                        = _UxGT("PID-I ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_PID_I_E3                        = _UxGT("PID-I ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_PID_I_E4                        = _UxGT("PID-I ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_PID_I_E5                        = _UxGT("PID-I ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_D                           = _UxGT("PID-D");     //"PID-D"
+  PROGMEM Language_Str MSG_PID_D_E0                        = _UxGT("PID-D ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_PID_D_E1                        = _UxGT("PID-D ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_PID_D_E2                        = _UxGT("PID-D ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_PID_D_E3                        = _UxGT("PID-D ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_PID_D_E4                        = _UxGT("PID-D ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_PID_D_E5                        = _UxGT("PID-D ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_C                           = _UxGT("PID-C");     //"PID-C"
+  PROGMEM Language_Str MSG_PID_C_E0                        = _UxGT("PID-C ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_PID_C_E1                        = _UxGT("PID-C ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_PID_C_E2                        = _UxGT("PID-C ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_PID_C_E3                        = _UxGT("PID-C ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_PID_C_E4                        = _UxGT("PID-C ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_PID_C_E5                        = _UxGT("PID-C ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_SELECT                          = _UxGT("选择");     //"Select"
+  PROGMEM Language_Str MSG_SELECT_E0                       = _UxGT("选择 ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_SELECT_E1                       = _UxGT("选择 ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_SELECT_E2                       = _UxGT("选择 ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_SELECT_E3                       = _UxGT("选择 ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_SELECT_E4                       = _UxGT("选择 ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_SELECT_E5                       = _UxGT("选择 ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_ACC                             = _UxGT("加速度");     //"Accel" acceleration
+  PROGMEM Language_Str MSG_JERK                            = _UxGT("抖动速率");     // "Jerk"
+  PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("轴抖动速率") LCD_STR_A;     //"Va-jerk"
+  PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("轴抖动速率") LCD_STR_B;     //"Vb-jerk"
+  PROGMEM Language_Str MSG_VC_JERK                         = _UxGT("轴抖动速率") LCD_STR_C;     //"Vc-jerk"
+  PROGMEM Language_Str MSG_VE_JERK                         = _UxGT("挤出机抖动速率");     //"Ve-jerk"
+  PROGMEM Language_Str MSG_VELOCITY                        = _UxGT("速度");     // "Velocity"
+  PROGMEM Language_Str MSG_VMAX_A                          = _UxGT("最大进料速率") LCD_STR_A;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("最大进料速率") LCD_STR_B;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("最大进料速率") LCD_STR_C;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("最大进料速率") LCD_STR_E;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_E0                         = _UxGT("最大进料速率 ") LCD_STR_E0;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_E1                         = _UxGT("最大进料速率 ") LCD_STR_E1;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_E2                         = _UxGT("最大进料速率 ") LCD_STR_E2;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_E3                         = _UxGT("最大进料速率 ") LCD_STR_E3;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_E4                         = _UxGT("最大进料速率 ") LCD_STR_E4;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMAX_E5                         = _UxGT("最大进料速率 ") LCD_STR_E5;     //"Vmax " max_feedrate_mm_s
+  PROGMEM Language_Str MSG_VMIN                            = _UxGT("最小进料速率");     //"Vmin"  min_feedrate_mm_s
+  PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("最小移动速率");     //"VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
+  PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("加速度");     // "Acceleration"
+  PROGMEM Language_Str MSG_AMAX_A                          = _UxGT("最大打印加速度") LCD_STR_A;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_B                          = _UxGT("最大打印加速度") LCD_STR_B;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_C                          = _UxGT("最大打印加速度") LCD_STR_C;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_E                          = _UxGT("最大打印加速度") LCD_STR_E;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_E0                         = _UxGT("最大打印加速度 ") LCD_STR_E0;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_E1                         = _UxGT("最大打印加速度 ") LCD_STR_E1;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_E2                         = _UxGT("最大打印加速度 ") LCD_STR_E2;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_E3                         = _UxGT("最大打印加速度 ") LCD_STR_E3;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_E4                         = _UxGT("最大打印加速度 ") LCD_STR_E4;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_AMAX_E5                         = _UxGT("最大打印加速度 ") LCD_STR_E5;     //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+  PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("收进加速度");     //"A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
+  PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("非打印移动加速度");     //"A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
+  PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("轴步数/mm");     //"Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
+  PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT("轴步数/mm");     //"Asteps/mm"
+  PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("轴步数/mm");     //"Bsteps/mm"
+  PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT("轴步数/mm");     //"Csteps/mm"
+  PROGMEM Language_Str MSG_E_STEPS                         = _UxGT("挤出机步数/mm");     //"Esteps/mm"
+  PROGMEM Language_Str MSG_E0_STEPS                        = _UxGT("挤出机") LCD_STR_N0 _UxGT("步数/mm");
+  PROGMEM Language_Str MSG_E1_STEPS                        = _UxGT("挤出机") LCD_STR_N1 _UxGT("步数/mm");
+  PROGMEM Language_Str MSG_E2_STEPS                        = _UxGT("挤出机") LCD_STR_N2 _UxGT("步数/mm");
+  PROGMEM Language_Str MSG_E3_STEPS                        = _UxGT("挤出机") LCD_STR_N3 _UxGT("步数/mm");
+  PROGMEM Language_Str MSG_E4_STEPS                        = _UxGT("挤出机") LCD_STR_N4 _UxGT("步数/mm");
+  PROGMEM Language_Str MSG_E5_STEPS                        = _UxGT("挤出机") LCD_STR_N5 _UxGT("步数/mm");
+  PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("温度");     //"Temperature"
+  PROGMEM Language_Str MSG_MOTION                          = _UxGT("运动");     //"Motion"
+  PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("丝料测容");     //"Filament" menu_advanced_filament
+  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("测容积mm³");     //"E in mm3" volumetric_enabled
+  PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("丝料直径");     //"Fil. Dia."
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E0                = _UxGT("丝料直径 ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E1                = _UxGT("丝料直径 ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E2                = _UxGT("丝料直径 ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E3                = _UxGT("丝料直径 ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E4                = _UxGT("丝料直径 ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E5                = _UxGT("丝料直径 ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_FILAMENT_UNLOAD                 = _UxGT("卸载 mm");     // "Unload mm"
+  PROGMEM Language_Str MSG_FILAMENT_LOAD                   = _UxGT("装载 mm");     // "Load mm"
+  PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD对比度");     //"LCD contrast"
+  PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("保存设置");     //"Store memory"
+  PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("装载设置");     //"Load memory"
+  PROGMEM Language_Str MSG_RESTORE_FAILSAFE                = _UxGT("恢复安全值");     //"Restore failsafe"
+  PROGMEM Language_Str MSG_INIT_EEPROM                     = _UxGT("初始化设置");     // "Initialize EEPROM"
+  PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH  _UxGT("刷新");     //"Refresh"
+  PROGMEM Language_Str MSG_WATCH                           = _UxGT("信息屏");     //"Info screen"
+  PROGMEM Language_Str MSG_PREPARE                         = _UxGT("准备");     //"Prepare"
+  PROGMEM Language_Str MSG_TUNE                            = _UxGT("调整");     //"Tune"
+  PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("暂停打印");     //"Pause print"
+  PROGMEM Language_Str MSG_RESUME_PRINT                    = _UxGT("恢复打印");     //"Resume print"
+  PROGMEM Language_Str MSG_STOP_PRINT                      = _UxGT("停止打印");     //"Stop print"
+  PROGMEM Language_Str MSG_MEDIA_MENU                      = _UxGT("从存储卡上打印");     //"Print from SD"
+  PROGMEM Language_Str MSG_NO_MEDIA                        = _UxGT("无存储卡");     //"No SD card"
+  PROGMEM Language_Str MSG_DWELL                           = _UxGT("休眠中 ...");     //"Sleep..."
+  PROGMEM Language_Str MSG_USERWAIT                        = _UxGT("点击继续 ...");     //"Click to resume..."
+  PROGMEM Language_Str MSG_PRINT_PAUSED                    = _UxGT("暫停打印");     // "Print paused"
+  PROGMEM Language_Str MSG_PRINT_ABORTED                   = _UxGT("已取消打印");     //"Print aborted"
+  PROGMEM Language_Str MSG_NO_MOVE                         = _UxGT("无移动");     //"No move."
+  PROGMEM Language_Str MSG_KILLED                          = _UxGT("已杀掉");     //"KILLED. "
+  PROGMEM Language_Str MSG_STOPPED                         = _UxGT("已停止");     //"STOPPED. "
+  PROGMEM Language_Str MSG_CONTROL_RETRACT                 = _UxGT("回抽长度mm");     //"Retract mm" retract_length, retract length (positive mm)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_SWAP            = _UxGT("换手回抽长度mm");     //"Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
+  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("回抽速率mm/s");     //"Retract  V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_ZHOP            = _UxGT("Hop mm");     //"Hop mm" retract_zraise, retract Z-lift
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("回抽恢复长度mm");     //"UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("换手回抽恢复长度mm");     //"S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("回抽恢复后进料速率mm/s");     //"UnRet  V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAPF   = _UxGT("S UnRet V");     // "S UnRet V"
+  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("自动抽回");     //"AutoRetr." autoretract_enabled,
+  PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("更换丝料");     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE_E0               = _UxGT("更换丝料 ") LCD_STR_E0;     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE_E1               = _UxGT("更换丝料 ") LCD_STR_E1;     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE_E2               = _UxGT("更换丝料 ") LCD_STR_E2;     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE_E3               = _UxGT("更换丝料 ") LCD_STR_E3;     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE_E4               = _UxGT("更换丝料 ") LCD_STR_E4;     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTCHANGE_E5               = _UxGT("更换丝料 ") LCD_STR_E5;     //"Change filament"
+  PROGMEM Language_Str MSG_FILAMENTLOAD_E0                 = _UxGT("装载丝料 ") LCD_STR_E0;     // "Load filament"
+  PROGMEM Language_Str MSG_FILAMENTLOAD_E1                 = _UxGT("装载丝料 ") LCD_STR_E1;     // "Load filament"
+  PROGMEM Language_Str MSG_FILAMENTLOAD_E2                 = _UxGT("装载丝料 ") LCD_STR_E2;     // "Load filament"
+  PROGMEM Language_Str MSG_FILAMENTLOAD_E3                 = _UxGT("装载丝料 ") LCD_STR_E3;     // "Load filament"
+  PROGMEM Language_Str MSG_FILAMENTLOAD_E4                 = _UxGT("装载丝料 ") LCD_STR_E4;     // "Load filament"
+  PROGMEM Language_Str MSG_FILAMENTLOAD_E5                 = _UxGT("装载丝料 ") LCD_STR_E5;     // "Load filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E0               = _UxGT("卸载丝料 ") LCD_STR_E0;     // "Unload filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E1               = _UxGT("卸载丝料 ") LCD_STR_E1;     // "Unload filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E2               = _UxGT("卸载丝料 ") LCD_STR_E2;     // "Unload filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E3               = _UxGT("卸载丝料 ") LCD_STR_E3;     // "Unload filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E4               = _UxGT("卸载丝料 ") LCD_STR_E4;     // "Unload filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD_E5               = _UxGT("卸载丝料 ") LCD_STR_E5;     // "Unload filament"
+  PROGMEM Language_Str MSG_FILAMENTUNLOAD_ALL              = _UxGT("卸载全部");     // "Unload All"
+  PROGMEM Language_Str MSG_INIT_MEDIA                      = _UxGT("初始化存储卡");     //"Init. SD card"
+  PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("更换存储卡");     //"Change SD card"
+  PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z探针在热床之外");     //"Z probe out. bed" Z probe is not within the physical limits
+  PROGMEM Language_Str MSG_SKEW_FACTOR                     = _UxGT("偏斜因数");     // "Skew Factor"
+  PROGMEM Language_Str MSG_BLTOUCH                         = _UxGT("BLTouch");     // "BLTouch"
+  PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("BLTouch 自检");     // "BLTouch Self-Test"
+  PROGMEM Language_Str MSG_BLTOUCH_RESET                   = _UxGT("重置BLTouch");     // "Reset BLTouch"
+  PROGMEM Language_Str MSG_BLTOUCH_DEPLOY                  = _UxGT("部署BLTouch");     // "Deploy BLTouch"
+  PROGMEM Language_Str MSG_BLTOUCH_STOW                    = _UxGT("装载BLTouch");     // "Stow BLTouch"
+  PROGMEM Language_Str MSG_HOME_FIRST                      = _UxGT("归位 %s%s%s 先");     //"Home ... first"
+  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("Z偏移");     //"Z Offset"
+  PROGMEM Language_Str MSG_BABYSTEP_X                      = _UxGT("微量调整X轴");     //"Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
+  PROGMEM Language_Str MSG_BABYSTEP_Y                      = _UxGT("微量调整Y轴");     //"Babystep Y"
+  PROGMEM Language_Str MSG_BABYSTEP_Z                      = _UxGT("微量调整Z轴");     //"Babystep Z"
+  PROGMEM Language_Str MSG_ENDSTOP_ABORT                   = _UxGT("挡块终止");     //"Endstop abort"
+  PROGMEM Language_Str MSG_HEATING_FAILED_LCD              = _UxGT("加热失败");     //"Heating failed"
+  PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("错误：REDUNDANT TEMP");     //"Err: REDUNDANT TEMP"
+  PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("温控失控");     //"THERMAL RUNAWAY"
+  PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("错误：最高温度");     //"Err: MAXTEMP"
+  PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("错误：最低温度");     //"Err: MINTEMP"
+  PROGMEM Language_Str MSG_ERR_MAXTEMP_BED                 = _UxGT("错误：最高热床温度");     //"Err: MAXTEMP BED"
+  PROGMEM Language_Str MSG_ERR_MINTEMP_BED                 = _UxGT("错误：最低热床温度");     //"Err: MINTEMP BED"
+  PROGMEM Language_Str MSG_ERR_Z_HOMING                    = _UxGT("归位 XY 先");     // "Home XY First"
+  PROGMEM Language_Str MSG_HALTED                          = _UxGT("打印停机");     //"PRINTER HALTED"
+  PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("请重置");     //"Please reset"
+  PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("天");     //"d" // One character only
+  PROGMEM Language_Str MSG_SHORT_HOUR                      = _UxGT("时");     //"h" // One character only
+  PROGMEM Language_Str MSG_SHORT_MINUTE                    = _UxGT("分");     //"m" // One character only
+  PROGMEM Language_Str MSG_HEATING                         = _UxGT("加热中 ...");     //"Heating..."
+  PROGMEM Language_Str MSG_BED_HEATING                     = _UxGT("加热热床中 ...");     //"Bed Heating..."
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE                 = _UxGT("⊿校准");     //"Delta Calibration"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_X               = _UxGT("⊿校准X");     //"Calibrate X"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Y               = _UxGT("⊿校准Y");     //"Calibrate Y"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Z               = _UxGT("⊿校准Z");     //"Calibrate Z"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_CENTER          = _UxGT("⊿校准中心");     //"Calibrate Center"
+  PROGMEM Language_Str MSG_DELTA_SETTINGS                  = _UxGT("⊿设置");     // "Delta Settings"
+  PROGMEM Language_Str MSG_DELTA_AUTO_CALIBRATE            = _UxGT("⊿自动校准");     // "Auto Calibration"
+  PROGMEM Language_Str MSG_DELTA_HEIGHT_CALIBRATE          = _UxGT("设置⊿高度");     // "Set Delta Height"
+  PROGMEM Language_Str MSG_DELTA_DIAG_ROD                  = _UxGT("⊿斜柱");     // "Diag Rod"
+  PROGMEM Language_Str MSG_DELTA_HEIGHT                    = _UxGT("⊿高度");     // "Height"
+  PROGMEM Language_Str MSG_DELTA_RADIUS                    = _UxGT("⊿半径");     // "Radius"
+  PROGMEM Language_Str MSG_INFO_MENU                       = _UxGT("关于打印机");     //"About Printer"
+  PROGMEM Language_Str MSG_INFO_PRINTER_MENU               = _UxGT("打印机信息");     //"Printer Info"
+  PROGMEM Language_Str MSG_3POINT_LEVELING                 = _UxGT("三点调平");     // "3-Point Leveling"
+  PROGMEM Language_Str MSG_LINEAR_LEVELING                 = _UxGT("线性调平");     // "Linear Leveling"
+  PROGMEM Language_Str MSG_BILINEAR_LEVELING               = _UxGT("双线性调平");     // "Bilinear Leveling"
+  PROGMEM Language_Str MSG_UBL_LEVELING                    = _UxGT("统一热床调平(UBL)");     // "Unified Bed Leveling"
+  PROGMEM Language_Str MSG_MESH_LEVELING                   = _UxGT("网格调平");     // "Mesh Leveling"
+  PROGMEM Language_Str MSG_INFO_STATS_MENU                 = _UxGT("打印机统计");     //"Printer Stats"
+  PROGMEM Language_Str MSG_INFO_BOARD_MENU                 = _UxGT("主板信息");     //"Board Info"
+  PROGMEM Language_Str MSG_INFO_THERMISTOR_MENU            = _UxGT("温度计");     //"Thermistors"
+  PROGMEM Language_Str MSG_INFO_EXTRUDERS                  = _UxGT("挤出机");     //"Extruders"
+  PROGMEM Language_Str MSG_INFO_BAUDRATE                   = _UxGT("波特率");     //"Baud"
+  PROGMEM Language_Str MSG_INFO_PROTOCOL                   = _UxGT("协议");     //"Protocol"
+  PROGMEM Language_Str MSG_CASE_LIGHT                      = _UxGT("外壳灯");     // "Case light"
+  PROGMEM Language_Str MSG_CASE_LIGHT_BRIGHTNESS           = _UxGT("灯亮度");     // "Light BRIGHTNESS"
 
-#define MSG_EXPECTED_PRINTER                _UxGT("打印机不正确") // "The printer is incorrect"
+  PROGMEM Language_Str MSG_EXPECTED_PRINTER                = _UxGT("打印机不正确");     // "The printer is incorrect"
 
-#if LCD_WIDTH >= 20
-  #define MSG_INFO_PRINT_COUNT              _UxGT("打印计数")  //"Print Count"
-  #define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成了")  //"Completed"
-  #define MSG_INFO_PRINT_TIME               _UxGT("总打印时间")  //"Total print time"
-  #define MSG_INFO_PRINT_LONGEST            _UxGT("最长工作时间")  //"Longest job time"
-  #define MSG_INFO_PRINT_FILAMENT           _UxGT("总计挤出")  //"Extruded total"
-#else
-  #define MSG_INFO_PRINT_COUNT              _UxGT("打印数")  //"Prints"
-  #define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成")  //"Completed"
-  #define MSG_INFO_PRINT_TIME               _UxGT("总共")  //"Total"
-  #define MSG_INFO_PRINT_LONGEST            _UxGT("最长")  //"Longest"
-  #define MSG_INFO_PRINT_FILAMENT           _UxGT("已挤出")  //"Extruded"
-#endif
+  #if LCD_WIDTH >= 20
+    PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印计数");     //"Print Count"
+    PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS         = _UxGT("完成了");     //"Completed"
+    PROGMEM Language_Str MSG_INFO_PRINT_TIME               = _UxGT("总打印时间");     //"Total print time"
+    PROGMEM Language_Str MSG_INFO_PRINT_LONGEST            = _UxGT("最长工作时间");     //"Longest job time"
+    PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT           = _UxGT("总计挤出");     //"Extruded total"
+  #else
+    PROGMEM Language_Str MSG_INFO_PRINT_COUNT              = _UxGT("打印数");     //"Prints"
+    PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS         = _UxGT("完成");     //"Completed"
+    PROGMEM Language_Str MSG_INFO_PRINT_TIME               = _UxGT("总共");     //"Total"
+    PROGMEM Language_Str MSG_INFO_PRINT_LONGEST            = _UxGT("最长");     //"Longest"
+    PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT           = _UxGT("已挤出");     //"Extruded"
+  #endif
 
-#define MSG_INFO_MIN_TEMP                   _UxGT("最低温度")  //"Min Temp"
-#define MSG_INFO_MAX_TEMP                   _UxGT("最高温度")  //"Max Temp"
-#define MSG_INFO_PSU                        _UxGT("电源供应")  //"Power Supply"
-#define MSG_DRIVE_STRENGTH                  _UxGT("驱动力度") // "Drive Strength"
-#define MSG_DAC_PERCENT                     _UxGT("驱动 %") // "Driver %"
-#define MSG_DAC_EEPROM_WRITE                _UxGT("保存驱动设置") // "DAC EEPROM Write"
-#define MSG_FILAMENT_CHANGE_HEADER_PAUSE    _UxGT("打印已暂停") // "PRINT PAUSED"
-#define MSG_FILAMENT_CHANGE_HEADER_LOAD     _UxGT("装载丝料") // "LOAD FILAMENT"
-#define MSG_FILAMENT_CHANGE_HEADER_UNLOAD   _UxGT("卸载丝料") // "UNLOAD FILAMENT"
-#define MSG_FILAMENT_CHANGE_OPTION_HEADER   _UxGT("恢复选项:") // "RESUME OPTIONS:"
-#define MSG_FILAMENT_CHANGE_OPTION_PURGE    _UxGT("清除更多") // "Purge more"
-#define MSG_FILAMENT_CHANGE_OPTION_RESUME   _UxGT("恢复打印")  //"Resume print"
-#define MSG_FILAMENT_CHANGE_NOZZLE          _UxGT("  喷嘴: ") // "  Nozzle: "
-#define MSG_ERR_HOMING_FAILED               _UxGT("归原位失败") // "Homing failed"
-#define MSG_ERR_PROBING_FAILED              _UxGT("探针探测失败") // "Probing failed"
-#define MSG_M600_TOO_COLD                   _UxGT("M600: 太凉") // "M600: Too cold"
+  PROGMEM Language_Str MSG_INFO_MIN_TEMP                   = _UxGT("最低温度");     //"Min Temp"
+  PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("最高温度");     //"Max Temp"
+  PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("电源供应");     //"Power Supply"
+  PROGMEM Language_Str MSG_DRIVE_STRENGTH                  = _UxGT("驱动力度");     // "Drive Strength"
+  PROGMEM Language_Str MSG_DAC_PERCENT                     = _UxGT("驱动 %");     // "Driver %"
+  PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("保存驱动设置");     // "DAC EEPROM Write"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_PAUSE    = _UxGT("打印已暂停");     // "PRINT PAUSED"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_LOAD     = _UxGT("装载丝料");     // "LOAD FILAMENT"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_UNLOAD   = _UxGT("卸载丝料");     // "UNLOAD FILAMENT"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_HEADER   = _UxGT("恢复选项:");     // "RESUME OPTIONS:"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_PURGE    = _UxGT("清除更多");     // "Purge more"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("恢复打印");     //"Resume print"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_NOZZLE          = _UxGT("  喷嘴: ");     // "  Nozzle: "
+  PROGMEM Language_Str MSG_LCD_HOMING_FAILED               = _UxGT("归原位失败");     // "Homing failed"
+  PROGMEM Language_Str MSG_LCD_PROBING_FAILED              = _UxGT("探针探测失败");     // "Probing failed"
+  PROGMEM Language_Str MSG_M600_TOO_COLD                   = _UxGT("M600: 太凉");     // "M600: Too cold"
 
-#if LCD_HEIGHT >= 4
-  #define MSG_FILAMENT_CHANGE_INIT_1        _UxGT("等待开始")  //"Wait for start"
-  #define MSG_FILAMENT_CHANGE_INIT_2        _UxGT("丝料")  //"of the filament"
-  #define MSG_FILAMENT_CHANGE_INIT_3        _UxGT("变更")  //"change"
-  #define MSG_FILAMENT_CHANGE_UNLOAD_1      _UxGT("等待")  //"Wait for"
-  #define MSG_FILAMENT_CHANGE_UNLOAD_2      _UxGT("卸下丝料")  //"filament unload"
-  #define MSG_FILAMENT_CHANGE_INSERT_1      _UxGT("插入丝料")  //"Insert filament"
-  #define MSG_FILAMENT_CHANGE_INSERT_2      _UxGT("并按键")  //"and press button"
-  #define MSG_FILAMENT_CHANGE_INSERT_3      _UxGT("来继续 ...")  //"to continue..."
-  #define MSG_FILAMENT_CHANGE_HEAT_1        _UxGT("按下按钮来") // "Press button to"
-  #define MSG_FILAMENT_CHANGE_HEAT_2        _UxGT("加热喷嘴.") // "heat nozzle."
-  #define MSG_FILAMENT_CHANGE_HEATING_1     _UxGT("加热喷嘴") // "Heating nozzle"
-  #define MSG_FILAMENT_CHANGE_HEATING_2     _UxGT("请等待 ...") // "Please wait..."
-  #define MSG_FILAMENT_CHANGE_LOAD_1        _UxGT("等待")  //"Wait for"
-  #define MSG_FILAMENT_CHANGE_LOAD_2        _UxGT("进料")  //"filament load"
-  #define MSG_FILAMENT_CHANGE_PURGE_1       _UxGT("等待") // "Wait for"
-  #define MSG_FILAMENT_CHANGE_PURGE_2       _UxGT("丝料清除") // "filament purge"
-  #define MSG_FILAMENT_CHANGE_RESUME_1      _UxGT("等待打印")  //"Wait for print"
-  #define MSG_FILAMENT_CHANGE_RESUME_2      _UxGT("恢复")  //"to resume"
-#else // LCD_HEIGHT < 4
-  #define MSG_FILAMENT_CHANGE_INIT_1        _UxGT("请等待 ...")  //"Please wait..."
-  #define MSG_FILAMENT_CHANGE_UNLOAD_1      _UxGT("退出中 ...")  //"Ejecting..."
-  #define MSG_FILAMENT_CHANGE_INSERT_1      _UxGT("插入并单击")  //"Insert and Click"
-  #define MSG_FILAMENT_CHANGE_HEATING_1     _UxGT("加热中 ...") // "Heating..."
-  #define MSG_FILAMENT_CHANGE_LOAD_1        _UxGT("装载中 ...")  //"Loading..."
-  #define MSG_FILAMENT_CHANGE_PURGE_1       _UxGT("清除中 ...") // "Purging..."
-  #define MSG_FILAMENT_CHANGE_RESUME_1      _UxGT("恢复中 ...")  //"Resuming..."
-#endif // LCD_HEIGHT < 4
+  #if LCD_HEIGHT >= 4
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT          = _UxGT(MSG_3_LINE("等待开始", "丝料", "变更"));     // "Wait for start of the filament change"
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_2_LINE("等待", "卸下丝料"));     // "Wait for filament unload"
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_3_LINE("插入丝料", "并按键", "来继续 ..."));     // "Insert filament and press button to continue..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEAT          = _UxGT(MSG_2_LINE("按下按钮来", "加热喷嘴."));     // "Press button to heat nozzle."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEATING       = _UxGT(MSG_2_LINE("加热喷嘴", "请等待 ..."));     // "Heating nozzle Please wait..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD          = _UxGT(MSG_2_LINE("等待", "进料"));     // "Wait for filament load"
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_PURGE         = _UxGT(MSG_2_LINE("等待", "丝料清除"));     // "Wait for filament purge"
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME        = _UxGT(MSG_2_LINE("等待打印", "恢复"));     // "Wait for print to resume"
+  #else
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT          = _UxGT(MSG_1_LINE("请等待 ..."));     //"Please wait..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD        = _UxGT(MSG_1_LINE("退出中 ..."));     //"Ejecting..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT        = _UxGT(MSG_1_LINE("插入并单击"));     //"Insert and Click"
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEATING       = _UxGT(MSG_1_LINE("加热中 ..."));     // "Heating..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD          = _UxGT(MSG_1_LINE("装载中 ..."));     //"Loading..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_PURGE         = _UxGT(MSG_1_LINE("清除中 ..."));     // "Purging..."
+    PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME        = _UxGT(MSG_1_LINE("恢复中 ..."));     //"Resuming..."
+  #endif
+}

commit 5becda25c56fe0df0541840ca095b21b3c522001
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 8 17:37:17 2019 -0500

    Followup to E renumbering

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index a87f469a0e..ad0b1272df 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -216,12 +216,12 @@
   #define MSG_CSTEPS                        _UxGT("Z轴步数/mm")  //"Zsteps/mm"
 #endif
 #define MSG_ESTEPS                          _UxGT("挤出机步数/mm")  //"Esteps/mm"
-#define MSG_E1STEPS                         _UxGT("挤出机1步数/mm") //"E1steps/mm"
-#define MSG_E2STEPS                         _UxGT("挤出机2步数/mm") //"E2steps/mm"
-#define MSG_E3STEPS                         _UxGT("挤出机3步数/mm") //"E3steps/mm"
-#define MSG_E4STEPS                         _UxGT("挤出机4步数/mm") //"E4steps/mm"
-#define MSG_E5STEPS                         _UxGT("挤出机5步数/mm") //"E5steps/mm"
-#define MSG_E6STEPS                         _UxGT("挤出机6步数/mm") //"E6steps/mm"
+#define MSG_E0_STEPS                        _UxGT("挤出机1步数/mm") //"E1steps/mm"
+#define MSG_E1_STEPS                        _UxGT("挤出机2步数/mm") //"E2steps/mm"
+#define MSG_E2_STEPS                        _UxGT("挤出机3步数/mm") //"E3steps/mm"
+#define MSG_E3_STEPS                        _UxGT("挤出机4步数/mm") //"E4steps/mm"
+#define MSG_E4_STEPS                        _UxGT("挤出机5步数/mm") //"E5steps/mm"
+#define MSG_E5_STEPS                        _UxGT("挤出机6步数/mm") //"E6steps/mm"
 #define MSG_TEMPERATURE                     _UxGT("温度")  //"Temperature"
 #define MSG_MOTION                          _UxGT("运动")  //"Motion"
 #define MSG_FILAMENT                        _UxGT("丝料测容")  //"Filament" menu_advanced_filament

commit b2e1f77f58a67ac02503cbe36b22a21e5afaeac0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 25 21:01:29 2019 -0500

    Fix extraneous "Home XYZ First" message

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index bad55c974f..a87f469a0e 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -79,7 +79,6 @@
 #define MSG_USER_MENU                       _UxGT("定制命令") // "Custom Commands"
 
 #define MSG_UBL_DOING_G29                   _UxGT("执行G29") // "Doing G29"
-#define MSG_UBL_UNHOMED                     _UxGT("先回XYZ原点") // "Home XYZ first"
 #define MSG_UBL_TOOLS                       _UxGT("UBL工具") // "UBL Tools"
 #define MSG_UBL_LEVEL_BED                   _UxGT("统一热床调平(UBL)") // "Unified Bed Leveling"
 #define MSG_UBL_MANUAL_MESH                 _UxGT("手工创设网格") // "Manually Build Mesh"
@@ -274,8 +273,7 @@
 #define MSG_BLTOUCH_RESET                   _UxGT("重置BLTouch")  // "Reset BLTouch"
 #define MSG_BLTOUCH_DEPLOY                  _UxGT("部署BLTouch") // "Deploy BLTouch"
 #define MSG_BLTOUCH_STOW                    _UxGT("装载BLTouch")   // "Stow BLTouch"
-#define MSG_HOME                            _UxGT("归位")  //"Home"  // Used as MSG_HOME " " MSG_X MSG_Y MSG_Z " " MSG_FIRST
-#define MSG_FIRST                           _UxGT("先")  //"first"
+#define MSG_HOME_FIRST                      _UxGT("归位 %s%s%s 先")  //"Home ... first"
 #define MSG_ZPROBE_ZOFFSET                  _UxGT("Z偏移")  //"Z Offset"
 #define MSG_BABYSTEP_X                      _UxGT("微量调整X轴")  //"Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
 #define MSG_BABYSTEP_Y                      _UxGT("微量调整Y轴")  //"Babystep Y"
@@ -288,7 +286,7 @@
 #define MSG_ERR_MINTEMP                     _UxGT("错误：最低温度")  //"Err: MINTEMP"
 #define MSG_ERR_MAXTEMP_BED                 _UxGT("错误：最高热床温度")  //"Err: MAXTEMP BED"
 #define MSG_ERR_MINTEMP_BED                 _UxGT("错误：最低热床温度")  //"Err: MINTEMP BED"
-#define MSG_ERR_Z_HOMING                    MSG_HOME _UxGT(" ") MSG_X MSG_Y _UxGT(" ") MSG_FIRST
+#define MSG_ERR_Z_HOMING                    _UxGT("归位 XY 先")   // "Home XY First"
 #define MSG_HALTED                          _UxGT("打印停机")  //"PRINTER HALTED"
 #define MSG_PLEASE_RESET                    _UxGT("请重置")  //"Please reset"
 #define MSG_SHORT_DAY                       _UxGT("天")  //"d" // One character only

commit 263d7d37af4341b579f7fd630173e2ecee3b4e3f
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Aug 14 16:52:14 2019 -0600

    "SD card" => "Media" (#14951)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 1394036eac..bad55c974f 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -33,8 +33,8 @@
 
 #define WELCOME_MSG                         MACHINE_NAME _UxGT("已就绪.")  //" ready."
 #define MSG_BACK                            _UxGT("返回")         // ”Back“
-#define MSG_SD_INSERTED                     _UxGT("存储卡已插入")  //"Card inserted"
-#define MSG_SD_REMOVED                      _UxGT("存储卡被拔出")  //"Card removed"
+#define MSG_MEDIA_INSERTED                  _UxGT("存储卡已插入")  //"Card inserted"
+#define MSG_MEDIA_REMOVED                   _UxGT("存储卡被拔出")  //"Card removed"
 #define MSG_LCD_ENDSTOPS                    _UxGT("挡块")  //"Endstops" // Max length 8 characters
 #define MSG_MAIN                            _UxGT("主菜单")  //"Main"
 #define MSG_AUTOSTART                       _UxGT("自动开始")  //"Autostart"
@@ -243,8 +243,8 @@
 #define MSG_PAUSE_PRINT                     _UxGT("暂停打印")  //"Pause print"
 #define MSG_RESUME_PRINT                    _UxGT("恢复打印")  //"Resume print"
 #define MSG_STOP_PRINT                      _UxGT("停止打印")  //"Stop print"
-#define MSG_CARD_MENU                       _UxGT("从存储卡上打印")  //"Print from SD"
-#define MSG_NO_CARD                         _UxGT("无存储卡")  //"No SD card"
+#define MSG_MEDIA_MENU                      _UxGT("从存储卡上打印")  //"Print from SD"
+#define MSG_NO_MEDIA                        _UxGT("无存储卡")  //"No SD card"
 #define MSG_DWELL                           _UxGT("休眠中 ...")  //"Sleep..."
 #define MSG_USERWAIT                        _UxGT("点击继续 ...")  //"Click to resume..."
 #define MSG_PRINT_PAUSED                    _UxGT("暫停打印") // "Print paused"
@@ -265,8 +265,8 @@
 #define MSG_FILAMENTLOAD                    _UxGT("装载丝料") // "Load filament"
 #define MSG_FILAMENTUNLOAD                  _UxGT("卸载丝料") // "Unload filament"
 #define MSG_FILAMENTUNLOAD_ALL              _UxGT("卸载全部") // "Unload All"
-#define MSG_INIT_SDCARD                     _UxGT("初始化存储卡")  //"Init. SD card"
-#define MSG_CHANGE_SDCARD                   _UxGT("更换存储卡")  //"Change SD card"
+#define MSG_INIT_MEDIA                      _UxGT("初始化存储卡")  //"Init. SD card"
+#define MSG_CHANGE_MEDIA                    _UxGT("更换存储卡")  //"Change SD card"
 #define MSG_ZPROBE_OUT                      _UxGT("Z探针在热床之外")  //"Z probe out. bed" Z probe is not within the physical limits
 #define MSG_SKEW_FACTOR                     _UxGT("偏斜因数") // "Skew Factor"
 #define MSG_BLTOUCH                         _UxGT("BLTouch")     // "BLTouch"

commit 0fbb26c28fb714a6b34fe0b69b07fc14835c957b
Author: Joseph Bozarth <bozarjp@gmail.com>
Date:   Tue Aug 13 23:38:45 2019 -0500

    M16 - Expected Printer Check (#14924)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 19ef300564..1394036eac 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -323,6 +323,8 @@
 #define MSG_CASE_LIGHT                      _UxGT("外壳灯") // "Case light"
 #define MSG_CASE_LIGHT_BRIGHTNESS           _UxGT("灯亮度") // "Light BRIGHTNESS"
 
+#define MSG_EXPECTED_PRINTER                _UxGT("打印机不正确") // "The printer is incorrect"
+
 #if LCD_WIDTH >= 20
   #define MSG_INFO_PRINT_COUNT              _UxGT("打印计数")  //"Print Count"
   #define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成了")  //"Completed"

commit 8f0aedeeadff5e40d5435ee48e5d32facbb46da4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Aug 5 19:09:40 2019 -0500

    Reorder some language defines

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 09bc9ff14f..19ef300564 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -74,6 +74,7 @@
 #define MSG_LEVEL_CORNERS                   _UxGT("调平边角") // "Level corners"
 
 #define MSG_NEXT_CORNER                     _UxGT("下个边角") // "Next corner"
+#define MSG_EDIT_MESH                       _UxGT("编辑网格") // "Edit Mesh"
 #define MSG_EDITING_STOPPED                 _UxGT("网格编辑已停止") // "Mesh Editing Stopped"
 #define MSG_USER_MENU                       _UxGT("定制命令") // "Custom Commands"
 
@@ -82,7 +83,6 @@
 #define MSG_UBL_TOOLS                       _UxGT("UBL工具") // "UBL Tools"
 #define MSG_UBL_LEVEL_BED                   _UxGT("统一热床调平(UBL)") // "Unified Bed Leveling"
 #define MSG_UBL_MANUAL_MESH                 _UxGT("手工创设网格") // "Manually Build Mesh"
-
 #define MSG_UBL_BC_INSERT                   _UxGT("放置垫片并测量") // "Place shim & measure"
 #define MSG_UBL_BC_INSERT2                  _UxGT("测量") // "Measure"
 #define MSG_UBL_BC_REMOVE                   _UxGT("移除并测量热床") // "Remove & measure bed"
@@ -118,7 +118,6 @@
 #define MSG_UBL_OUTPUT_MAP_CSV              _UxGT("输出到CSV") // "Output for CSV"
 #define MSG_UBL_OUTPUT_MAP_BACKUP           _UxGT("输出到备份") // "Off Printer Backup"
 #define MSG_UBL_INFO_UBL                    _UxGT("输出UBL信息") // "Output UBL Info"
-#define MSG_EDIT_MESH                       _UxGT("编辑网格") // "Edit Mesh"
 #define MSG_UBL_FILLIN_AMOUNT               _UxGT("填充合计") // "Fill-in Amount"
 #define MSG_UBL_MANUAL_FILLIN               _UxGT("手工填充") // "Manual Fill-in"
 #define MSG_UBL_SMART_FILLIN                _UxGT("聪明填充") // "Smart Fill-in"
@@ -133,7 +132,7 @@
 #define MSG_UBL_SAVE_MESH                   _UxGT("保存热床网格") // "Save Bed Mesh"
 #define MSG_MESH_LOADED                     _UxGT("网格 %i 已装载") // "Mesh %i loaded"
 #define MSG_MESH_SAVED                      _UxGT("网格 %i 已保存") // "Mesh %i saved"
-#define MSG_NO_STORAGE                      _UxGT("没有存储") // "No storage"
+#define MSG_UBL_NO_STORAGE                  _UxGT("没有存储") // "No storage"
 #define MSG_UBL_SAVE_ERROR                  _UxGT("错误: UBL保存") // "Err: UBL Save"
 #define MSG_UBL_RESTORE_ERROR               _UxGT("错误: UBL还原") // "Err: UBL Restore"
 #define MSG_UBL_Z_OFFSET_STOPPED            _UxGT("Z偏移已停止") // "Z-Offset Stopped"

commit f8aa52346f8a514302f962b484dbf2fbe7ce4c63
Author: MarcelMo <mommsen@gmx.de>
Date:   Tue Jul 30 09:16:26 2019 +0200

    Configurable Z move distance (#14593)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 93835a9dc1..09bc9ff14f 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -164,7 +164,7 @@
 #define MSG_MOVE_Y                          _UxGT("移动Y")  //"Move Y"
 #define MSG_MOVE_Z                          _UxGT("移动Z")  //"Move Z"
 #define MSG_MOVE_E                          _UxGT("挤出机")  //"Extruder"
-#define MSG_MOVE_0025MM                     _UxGT("移动 0.025 mm")  //"Move 0.025mm"
+#define MSG_MOVE_Z_DIST                     _UxGT("移动 %s mm")  //"Move 0.025mm"
 #define MSG_MOVE_01MM                       _UxGT("移动 0.1 mm")  //"Move 0.1mm"
 #define MSG_MOVE_1MM                        _UxGT("移动 1 mm")  //"Move 1mm"
 #define MSG_MOVE_10MM                       _UxGT("移动 10 mm")  //"Move 10mm"

commit ca7f56e60b66fdad0ec89f5f73bdd8680b99e06a
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Mon Jul 1 10:17:50 2019 +0200

    Add 0.025mm Manual Move for Z (#14456)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index c8af6de1f6..93835a9dc1 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -164,6 +164,7 @@
 #define MSG_MOVE_Y                          _UxGT("移动Y")  //"Move Y"
 #define MSG_MOVE_Z                          _UxGT("移动Z")  //"Move Z"
 #define MSG_MOVE_E                          _UxGT("挤出机")  //"Extruder"
+#define MSG_MOVE_0025MM                     _UxGT("移动 0.025 mm")  //"Move 0.025mm"
 #define MSG_MOVE_01MM                       _UxGT("移动 0.1 mm")  //"Move 0.1mm"
 #define MSG_MOVE_1MM                        _UxGT("移动 1 mm")  //"Move 1mm"
 #define MSG_MOVE_10MM                       _UxGT("移动 10 mm")  //"Move 10mm"

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 0a94e9d5b0..c8af6de1f6 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 9a515cbd3268b30eb7a4dc9ea0f96f3a253d9063
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 14 02:26:07 2019 -0500

    Fix Pause Print message and behavior (#13394)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index eb78ddd62c..0a94e9d5b0 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -256,8 +256,8 @@
 #define MSG_CONTROL_RETRACT_SWAP            _UxGT("换手回抽长度mm")  //"Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
 #define MSG_CONTROL_RETRACTF                _UxGT("回抽速率mm/s")  //"Retract  V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
 #define MSG_CONTROL_RETRACT_ZHOP            _UxGT("Hop mm")  //"Hop mm" retract_zraise, retract Z-lift
-#define MSG_CONTROL_RETRACT_RECOVER         _UxGT("回抽恢复长度mm")  //"UnRet +mm" retract_recover_length, additional recover length (mm, added to retract length when recovering)
-#define MSG_CONTROL_RETRACT_RECOVER_SWAP    _UxGT("换手回抽恢复长度mm")  //"S UnRet+mm" swap_retract_recover_length, additional swap recover length (mm, added to retract length when recovering from extruder change)
+#define MSG_CONTROL_RETRACT_RECOVER         _UxGT("回抽恢复长度mm")  //"UnRet +mm" retract_recover_extra, additional recover length (mm, added to retract length when recovering)
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    _UxGT("换手回抽恢复长度mm")  //"S UnRet+mm" swap_retract_recover_extra, additional swap recover length (mm, added to retract length when recovering from extruder change)
 #define MSG_CONTROL_RETRACT_RECOVERF        _UxGT("回抽恢复后进料速率mm/s")  //"UnRet  V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
 #define MSG_CONTROL_RETRACT_RECOVER_SWAPF   _UxGT("S UnRet V") // "S UnRet V"
 #define MSG_AUTORETRACT                     _UxGT("自动抽回")  //"AutoRetr." autoretract_enabled,

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index df05aeb160..eb78ddd62c 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 1a79878dff2d4846b1f58a45b8880a346fb9cb41
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Sat Jan 12 00:56:23 2019 +0200

    Remove TMC_Z_CALIBRATION in favor of Z_STEPPER_AUTO_ALIGN

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 7eb9fa008f..df05aeb160 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -45,7 +45,6 @@
 #define MSG_AUTO_HOME_X                     _UxGT("回X原位")  //"Home X"
 #define MSG_AUTO_HOME_Y                     _UxGT("回Y原位")  //"Home Y"
 #define MSG_AUTO_HOME_Z                     _UxGT("回Z原位")  //"Home Z"
-#define MSG_TMC_Z_CALIBRATION               _UxGT("⊿校准Z")
 #define MSG_LEVEL_BED_HOMING                _UxGT("平台调平XYZ归原位")  //"Homing XYZ"
 #define MSG_LEVEL_BED_WAITING               _UxGT("单击开始热床调平")  //"Click to Begin"
 #define MSG_LEVEL_BED_NEXT_POINT            _UxGT("下个热床调平点")  //"Next Point"

commit 50af1d1e0874c787fcafc9cf71c6a8ef55b20643
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Nov 12 17:04:00 2018 -0600

    Differentiate translated On/Off from Serial ON/OFF

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index fcdaecc861..7eb9fa008f 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -180,8 +180,8 @@
 #define MSG_MAX                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 最大")  //" " LCD_STR_THERMOMETER " Max"
 #define MSG_FACTOR                          _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 因数")  //" " LCD_STR_THERMOMETER " Fact"
 #define MSG_AUTOTEMP                        _UxGT("自动控温")  //"Autotemp"
-#define MSG_ON                              _UxGT("开 ")  //"On "
-#define MSG_OFF                             _UxGT("关 ")  //"Off"
+#define MSG_LCD_ON                          _UxGT("开")  //"On"
+#define MSG_LCD_OFF                         _UxGT("关")  //"Off"
 #define MSG_PID_P                           _UxGT("PID-P")  //"PID-P"
 #define MSG_PID_I                           _UxGT("PID-I")  //"PID-I"
 #define MSG_PID_D                           _UxGT("PID-D")  //"PID-D"

commit a0c795b097a30eff006c8dff178abf5f1f1907fa
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 11 12:16:24 2018 -0600

    Encapsulate common display code in a singleton (#12395)
    
    * Encapsulate common LCD code in a singleton
    * Depend more UBL code on UBL_DEVEL_DEBUGGING
      - Since most users don't need the debugging on at all times, this helps reduce the default build size for UBL by over 2K, a little closer to fitting on 128K boards.

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index adee5d5bdb..fcdaecc861 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -324,7 +324,7 @@
 #define MSG_CASE_LIGHT                      _UxGT("外壳灯") // "Case light"
 #define MSG_CASE_LIGHT_BRIGHTNESS           _UxGT("灯亮度") // "Light BRIGHTNESS"
 
-#if LCD_WIDTH > 19
+#if LCD_WIDTH >= 20
   #define MSG_INFO_PRINT_COUNT              _UxGT("打印计数")  //"Print Count"
   #define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成了")  //"Completed"
   #define MSG_INFO_PRINT_TIME               _UxGT("总打印时间")  //"Total print time"

commit fc84878cbaf7a4ed5931f94fd4934619d7fb945b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 3 02:20:06 2018 -0500

    MSG_UBL_EDIT_MESH_MENU => MSG_EDIT_MESH

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 39a407168b..adee5d5bdb 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -119,7 +119,7 @@
 #define MSG_UBL_OUTPUT_MAP_CSV              _UxGT("输出到CSV") // "Output for CSV"
 #define MSG_UBL_OUTPUT_MAP_BACKUP           _UxGT("输出到备份") // "Off Printer Backup"
 #define MSG_UBL_INFO_UBL                    _UxGT("输出UBL信息") // "Output UBL Info"
-#define MSG_UBL_EDIT_MESH_MENU              _UxGT("编辑网格") // "Edit Mesh"
+#define MSG_EDIT_MESH                       _UxGT("编辑网格") // "Edit Mesh"
 #define MSG_UBL_FILLIN_AMOUNT               _UxGT("填充合计") // "Fill-in Amount"
 #define MSG_UBL_MANUAL_FILLIN               _UxGT("手工填充") // "Manual Fill-in"
 #define MSG_UBL_SMART_FILLIN                _UxGT("聪明填充") // "Smart Fill-in"

commit f5eab912ed6d336f2c37a688a0ec822ed3d42fcc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 4 02:25:55 2018 -0600

    Apply #pragma once, misc cleanup (#12322)
    
    * Apply #pragma once in headers
    * Adjust some thermistors formatting
    * Misc cleanup and formatting

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 16c932032b..39a407168b 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -19,6 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 /**
  * Simplified Chinese
@@ -27,8 +28,6 @@
  * See also http://marlinfw.org/docs/development/lcd_language.html
  *
  */
-#ifndef LANGUAGE_ZH_CN_H
-#define LANGUAGE_ZH_CN_H
 
 #define CHARSIZE 3
 
@@ -384,5 +383,3 @@
   #define MSG_FILAMENT_CHANGE_PURGE_1       _UxGT("清除中 ...") // "Purging..."
   #define MSG_FILAMENT_CHANGE_RESUME_1      _UxGT("恢复中 ...")  //"Resuming..."
 #endif // LCD_HEIGHT < 4
-
-#endif // LANGUAGE_ZH_CN_H

commit 774a6e81995b23c383bbc2fdcb5f6f5c014043f2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 27 13:07:03 2018 -0500

    Drop TALL_FONT_CORRECTION

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 3ed8005949..16c932032b 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_ZH_CN_H
 #define LANGUAGE_ZH_CN_H
 
-//#define TALL_FONT_CORRECTION (1)
-
 #define CHARSIZE 3
 
 #define WELCOME_MSG                         MACHINE_NAME _UxGT("已就绪.")  //" ready."

commit 2bf18950ab2070e842c91057d5812dcaa1bff9a2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 23 16:00:34 2018 -0500

    Refactor LCD menus

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index d61cbc2909..3ed8005949 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -229,7 +229,7 @@
 #define MSG_E6STEPS                         _UxGT("挤出机6步数/mm") //"E6steps/mm"
 #define MSG_TEMPERATURE                     _UxGT("温度")  //"Temperature"
 #define MSG_MOTION                          _UxGT("运动")  //"Motion"
-#define MSG_FILAMENT                        _UxGT("丝料测容")  //"Filament" lcd_control_volumetric_menu
+#define MSG_FILAMENT                        _UxGT("丝料测容")  //"Filament" menu_advanced_filament
 #define MSG_VOLUMETRIC_ENABLED              _UxGT("测容积mm³")  //"E in mm3" volumetric_enabled
 #define MSG_FILAMENT_DIAM                   _UxGT("丝料直径")  //"Fil. Dia."
 #define MSG_FILAMENT_UNLOAD                 _UxGT("卸载 mm") // "Unload mm"

commit 3c9daf322a3cda6e618d2f3e0c56a9cc6d68a835
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 27 13:22:15 2018 -0500

    MSG_CNG_SDCARD => MSG_CHANGE_SDCARD

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 19cb0c2dfd..d61cbc2909 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -270,7 +270,7 @@
 #define MSG_FILAMENTUNLOAD                  _UxGT("卸载丝料") // "Unload filament"
 #define MSG_FILAMENTUNLOAD_ALL              _UxGT("卸载全部") // "Unload All"
 #define MSG_INIT_SDCARD                     _UxGT("初始化存储卡")  //"Init. SD card"
-#define MSG_CNG_SDCARD                      _UxGT("更换存储卡")  //"Change SD card"
+#define MSG_CHANGE_SDCARD                   _UxGT("更换存储卡")  //"Change SD card"
 #define MSG_ZPROBE_OUT                      _UxGT("Z探针在热床之外")  //"Z probe out. bed" Z probe is not within the physical limits
 #define MSG_SKEW_FACTOR                     _UxGT("偏斜因数") // "Skew Factor"
 #define MSG_BLTOUCH                         _UxGT("BLTouch")     // "BLTouch"

commit 2f873a119f9de2a7f2e6b40dd08f8a51710ef1d1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 23 15:39:52 2018 -0500

    Revert some UBL strings

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index d104dcd3ae..19cb0c2dfd 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -99,7 +99,7 @@
 #define MSG_UBL_EDIT_CUSTOM_MESH            _UxGT("编辑客户网格") // "Edit Custom Mesh"
 #define MSG_UBL_FINE_TUNE_MESH              _UxGT("细调网格") // "Fine Tuning Mesh"
 #define MSG_UBL_DONE_EDITING_MESH           _UxGT("完成编辑网格") // "Done Editing Mesh"
-#define MSG_UBL_BUILD_MESH_CUSTOM           _UxGT("创设客户网格") // "Build Custom Mesh"
+#define MSG_UBL_BUILD_CUSTOM_MESH           _UxGT("创设客户网格") // "Build Custom Mesh"
 #define MSG_UBL_BUILD_MESH_MENU             _UxGT("创设网格") // "Build Mesh"
 #define MSG_UBL_BUILD_MESH_M1               _UxGT("创设" PREHEAT_1_LABEL "网格") // "Build PREHEAT_1_LABEL Mesh"
 #define MSG_UBL_BUILD_MESH_M2               _UxGT("创设" PREHEAT_2_LABEL "网格") // "Build PREHEAT_2_LABEL Mesh"
@@ -109,7 +109,7 @@
 #define MSG_UBL_VALIDATE_MESH_MENU          _UxGT("批准网格") // "Validate Mesh"
 #define MSG_UBL_VALIDATE_MESH_M1            _UxGT("批准" PREHEAT_1_LABEL "网格") // "Validate PREHEAT_1_LABEL Mesh"
 #define MSG_UBL_VALIDATE_MESH_M2            _UxGT("批准" PREHEAT_2_LABEL "网格") // "Validate PREHEAT_2_LABEL Mesh"
-#define MSG_UBL_VALIDATE_MESH_CUSTOM        _UxGT("批准客户网格") // "Validate Custom Mesh"
+#define MSG_UBL_VALIDATE_CUSTOM_MESH        _UxGT("批准客户网格") // "Validate Custom Mesh"
 #define MSG_UBL_CONTINUE_MESH               _UxGT("继续热床网格") // "Continue Bed Mesh"
 #define MSG_UBL_MESH_LEVELING               _UxGT("网格调平") // "Mesh Leveling"
 #define MSG_UBL_3POINT_MESH_LEVELING        _UxGT("三点调平") // "3-Point Leveling"

commit a93e9e6e9b96512e1dda6f9e1cfb836a4a4e0fde
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Tue Oct 23 22:38:17 2018 +0200

    Use preheat labels in place of PLA/ABS (#12194)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index c1f130a8e9..d104dcd3ae 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -57,12 +57,12 @@
 #define MSG_SET_HOME_OFFSETS                _UxGT("设置原点偏移")  //"Set home offsets"
 #define MSG_HOME_OFFSETS_APPLIED            _UxGT("偏移已启用")  //"Offsets applied"
 #define MSG_SET_ORIGIN                      _UxGT("设置原点")  //"Set origin"
-#define MSG_PREHEAT_1                       _UxGT("预热" PREHEAT_1_LABEL)  //"Preheat PLA"
+#define MSG_PREHEAT_1                       _UxGT("预热" PREHEAT_1_LABEL)  //"Preheat PREHEAT_2_LABEL"
 #define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 _UxGT(" ")  //MSG_PREHEAT_1 " "
 #define MSG_PREHEAT_1_ALL                   MSG_PREHEAT_1 _UxGT(" 全部")  //MSG_PREHEAT_1 " All"
 #define MSG_PREHEAT_1_BEDONLY               MSG_PREHEAT_1 _UxGT(" 热床")  //MSG_PREHEAT_1 " Bed"
 #define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 _UxGT(" 设置")  //MSG_PREHEAT_1 " conf"
-#define MSG_PREHEAT_2                       _UxGT("预热" PREHEAT_2_LABEL)  //"Preheat ABS"
+#define MSG_PREHEAT_2                       _UxGT("预热" PREHEAT_2_LABEL)  //"Preheat PREHEAT_2_LABEL"
 #define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 _UxGT(" ")  //MSG_PREHEAT_2 " "
 #define MSG_PREHEAT_2_ALL                   MSG_PREHEAT_2 _UxGT(" 全部")  //MSG_PREHEAT_2 " All"
 #define MSG_PREHEAT_2_BEDONLY               MSG_PREHEAT_2 _UxGT(" 热床")  //MSG_PREHEAT_2 " Bed"
@@ -93,23 +93,23 @@
 #define MSG_UBL_MOVING_TO_NEXT              _UxGT("移动到下一个") // "Moving to next"
 #define MSG_UBL_ACTIVATE_MESH               _UxGT("激活UBL") // "Activate UBL"
 #define MSG_UBL_DEACTIVATE_MESH             _UxGT("关闭UBL") // "Deactivate UBL"
-#define MSG_UBL_SET_BED_TEMP                _UxGT("设置热床温度") // "Bed Temp"
-#define MSG_UBL_SET_HOTEND_TEMP             _UxGT("热端温度") // "Hotend Temp"
+#define MSG_UBL_SET_TEMP_BED                _UxGT("设置热床温度") // "Bed Temp"
+#define MSG_UBL_SET_TEMP_HOTEND             _UxGT("热端温度") // "Hotend Temp"
 #define MSG_UBL_MESH_EDIT                   _UxGT("网格编辑") // "Mesh Edit"
 #define MSG_UBL_EDIT_CUSTOM_MESH            _UxGT("编辑客户网格") // "Edit Custom Mesh"
 #define MSG_UBL_FINE_TUNE_MESH              _UxGT("细调网格") // "Fine Tuning Mesh"
 #define MSG_UBL_DONE_EDITING_MESH           _UxGT("完成编辑网格") // "Done Editing Mesh"
-#define MSG_UBL_BUILD_CUSTOM_MESH           _UxGT("创设客户网格") // "Build Custom Mesh"
+#define MSG_UBL_BUILD_MESH_CUSTOM           _UxGT("创设客户网格") // "Build Custom Mesh"
 #define MSG_UBL_BUILD_MESH_MENU             _UxGT("创设网格") // "Build Mesh"
-#define MSG_UBL_BUILD_PLA_MESH              _UxGT("创设PLA网格") // "Build PLA Mesh"
-#define MSG_UBL_BUILD_ABS_MESH              _UxGT("创设ABS网格") // "Build ABS Mesh"
+#define MSG_UBL_BUILD_MESH_M1               _UxGT("创设" PREHEAT_1_LABEL "网格") // "Build PREHEAT_1_LABEL Mesh"
+#define MSG_UBL_BUILD_MESH_M2               _UxGT("创设" PREHEAT_2_LABEL "网格") // "Build PREHEAT_2_LABEL Mesh"
 #define MSG_UBL_BUILD_COLD_MESH             _UxGT("创设冷网格") // "Build Cold Mesh"
 #define MSG_UBL_MESH_HEIGHT_ADJUST          _UxGT("调整网格高度") // "Adjust Mesh Height"
 #define MSG_UBL_MESH_HEIGHT_AMOUNT          _UxGT("高度合计") // "Height Amount"
 #define MSG_UBL_VALIDATE_MESH_MENU          _UxGT("批准网格") // "Validate Mesh"
-#define MSG_UBL_VALIDATE_PLA_MESH           _UxGT("批准PLA网格") // "Validate PLA Mesh"
-#define MSG_UBL_VALIDATE_ABS_MESH           _UxGT("批准ABS网格") // "Validate ABS Mesh"
-#define MSG_UBL_VALIDATE_CUSTOM_MESH        _UxGT("批准客户网格") // "Validate Custom Mesh"
+#define MSG_UBL_VALIDATE_MESH_M1            _UxGT("批准" PREHEAT_1_LABEL "网格") // "Validate PREHEAT_1_LABEL Mesh"
+#define MSG_UBL_VALIDATE_MESH_M2            _UxGT("批准" PREHEAT_2_LABEL "网格") // "Validate PREHEAT_2_LABEL Mesh"
+#define MSG_UBL_VALIDATE_MESH_CUSTOM        _UxGT("批准客户网格") // "Validate Custom Mesh"
 #define MSG_UBL_CONTINUE_MESH               _UxGT("继续热床网格") // "Continue Bed Mesh"
 #define MSG_UBL_MESH_LEVELING               _UxGT("网格调平") // "Mesh Leveling"
 #define MSG_UBL_3POINT_MESH_LEVELING        _UxGT("三点调平") // "3-Point Leveling"

commit e229b831fab7b3e789631ea004640b7c82555253
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 23 00:57:19 2018 -0500

    Customizable preheat labels

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 4a8f23630c..c1f130a8e9 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -57,12 +57,12 @@
 #define MSG_SET_HOME_OFFSETS                _UxGT("设置原点偏移")  //"Set home offsets"
 #define MSG_HOME_OFFSETS_APPLIED            _UxGT("偏移已启用")  //"Offsets applied"
 #define MSG_SET_ORIGIN                      _UxGT("设置原点")  //"Set origin"
-#define MSG_PREHEAT_1                       _UxGT("预热PLA")  //"Preheat PLA"
+#define MSG_PREHEAT_1                       _UxGT("预热" PREHEAT_1_LABEL)  //"Preheat PLA"
 #define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 _UxGT(" ")  //MSG_PREHEAT_1 " "
 #define MSG_PREHEAT_1_ALL                   MSG_PREHEAT_1 _UxGT(" 全部")  //MSG_PREHEAT_1 " All"
 #define MSG_PREHEAT_1_BEDONLY               MSG_PREHEAT_1 _UxGT(" 热床")  //MSG_PREHEAT_1 " Bed"
 #define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 _UxGT(" 设置")  //MSG_PREHEAT_1 " conf"
-#define MSG_PREHEAT_2                       _UxGT("预热ABS")  //"Preheat ABS"
+#define MSG_PREHEAT_2                       _UxGT("预热" PREHEAT_2_LABEL)  //"Preheat ABS"
 #define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 _UxGT(" ")  //MSG_PREHEAT_2 " "
 #define MSG_PREHEAT_2_ALL                   MSG_PREHEAT_2 _UxGT(" 全部")  //MSG_PREHEAT_2 " All"
 #define MSG_PREHEAT_2_BEDONLY               MSG_PREHEAT_2 _UxGT(" 热床")  //MSG_PREHEAT_2 " Bed"

commit 8bf596bd4cb6879eb50994d497b30acf84082395
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 16 16:46:24 2018 -0500

    RETRACT_ZLIFT => RETRACT_ZRAISE

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index acdd097c23..4a8f23630c 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -259,7 +259,7 @@
 #define MSG_CONTROL_RETRACT                 _UxGT("回抽长度mm")  //"Retract mm" retract_length, retract length (positive mm)
 #define MSG_CONTROL_RETRACT_SWAP            _UxGT("换手回抽长度mm")  //"Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
 #define MSG_CONTROL_RETRACTF                _UxGT("回抽速率mm/s")  //"Retract  V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
-#define MSG_CONTROL_RETRACT_ZLIFT           _UxGT("Hop mm")  //"Hop mm" retract_zlift, retract Z-lift
+#define MSG_CONTROL_RETRACT_ZHOP            _UxGT("Hop mm")  //"Hop mm" retract_zraise, retract Z-lift
 #define MSG_CONTROL_RETRACT_RECOVER         _UxGT("回抽恢复长度mm")  //"UnRet +mm" retract_recover_length, additional recover length (mm, added to retract length when recovering)
 #define MSG_CONTROL_RETRACT_RECOVER_SWAP    _UxGT("换手回抽恢复长度mm")  //"S UnRet+mm" swap_retract_recover_length, additional swap recover length (mm, added to retract length when recovering from extruder change)
 #define MSG_CONTROL_RETRACT_RECOVERF        _UxGT("回抽恢复后进料速率mm/s")  //"UnRet  V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)

commit f38570ac554d42ef8a3c5e0f177edcafe0438ab7
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Sep 19 16:04:34 2018 -0400

    Add custom user menu title (#11769)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 3ddd48be6e..acdd097c23 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -79,8 +79,8 @@
 
 #define MSG_NEXT_CORNER                     _UxGT("下个边角") // "Next corner"
 #define MSG_EDITING_STOPPED                 _UxGT("网格编辑已停止") // "Mesh Editing Stopped"
-
 #define MSG_USER_MENU                       _UxGT("定制命令") // "Custom Commands"
+
 #define MSG_UBL_DOING_G29                   _UxGT("执行G29") // "Doing G29"
 #define MSG_UBL_UNHOMED                     _UxGT("先回XYZ原点") // "Home XYZ first"
 #define MSG_UBL_TOOLS                       _UxGT("UBL工具") // "UBL Tools"
@@ -161,9 +161,9 @@
 #define MSG_INTENSITY_B                     _UxGT("蓝饱和度") // "Blue Intensity")
 #define MSG_INTENSITY_W                     _UxGT("白饱和度") // "White Intensity")
 #define MSG_LED_BRIGHTNESS                  _UxGT("亮度") // "Brightness")
+
 #define MSG_MOVING                          _UxGT("移动 ...") // "Moving...")
 #define MSG_FREE_XY                         _UxGT("释放 XY") // "Free XY")
-
 #define MSG_MOVE_X                          _UxGT("移动X")  //"Move X"
 #define MSG_MOVE_Y                          _UxGT("移动Y")  //"Move Y"
 #define MSG_MOVE_Z                          _UxGT("移动Z")  //"Move Z"

commit 39732838b499d29b4d23aff3c662affa50bc611b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 17 00:57:26 2018 -0500

    Tweak indent of Chinese languages

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 020073ddd0..3ddd48be6e 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -328,17 +328,17 @@
 #define MSG_CASE_LIGHT_BRIGHTNESS           _UxGT("灯亮度") // "Light BRIGHTNESS"
 
 #if LCD_WIDTH > 19
-#define MSG_INFO_PRINT_COUNT              _UxGT("打印计数")  //"Print Count"
-#define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成了")  //"Completed"
-#define MSG_INFO_PRINT_TIME               _UxGT("总打印时间")  //"Total print time"
-#define MSG_INFO_PRINT_LONGEST            _UxGT("最长工作时间")  //"Longest job time"
-#define MSG_INFO_PRINT_FILAMENT           _UxGT("总计挤出")  //"Extruded total"
+  #define MSG_INFO_PRINT_COUNT              _UxGT("打印计数")  //"Print Count"
+  #define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成了")  //"Completed"
+  #define MSG_INFO_PRINT_TIME               _UxGT("总打印时间")  //"Total print time"
+  #define MSG_INFO_PRINT_LONGEST            _UxGT("最长工作时间")  //"Longest job time"
+  #define MSG_INFO_PRINT_FILAMENT           _UxGT("总计挤出")  //"Extruded total"
 #else
-#define MSG_INFO_PRINT_COUNT              _UxGT("打印数")  //"Prints"
-#define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成")  //"Completed"
-#define MSG_INFO_PRINT_TIME               _UxGT("总共")  //"Total"
-#define MSG_INFO_PRINT_LONGEST            _UxGT("最长")  //"Longest"
-#define MSG_INFO_PRINT_FILAMENT           _UxGT("已挤出")  //"Extruded"
+  #define MSG_INFO_PRINT_COUNT              _UxGT("打印数")  //"Prints"
+  #define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成")  //"Completed"
+  #define MSG_INFO_PRINT_TIME               _UxGT("总共")  //"Total"
+  #define MSG_INFO_PRINT_LONGEST            _UxGT("最长")  //"Longest"
+  #define MSG_INFO_PRINT_FILAMENT           _UxGT("已挤出")  //"Extruded"
 #endif
 
 #define MSG_INFO_MIN_TEMP                   _UxGT("最低温度")  //"Min Temp"
@@ -359,33 +359,32 @@
 #define MSG_M600_TOO_COLD                   _UxGT("M600: 太凉") // "M600: Too cold"
 
 #if LCD_HEIGHT >= 4
-#define MSG_FILAMENT_CHANGE_INIT_1          _UxGT("等待开始")  //"Wait for start"
-#define MSG_FILAMENT_CHANGE_INIT_2          _UxGT("丝料")  //"of the filament"
-#define MSG_FILAMENT_CHANGE_INIT_3          _UxGT("变更")  //"change"
-#define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("等待")  //"Wait for"
-#define MSG_FILAMENT_CHANGE_UNLOAD_2        _UxGT("卸下丝料")  //"filament unload"
-#define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("插入丝料")  //"Insert filament"
-#define MSG_FILAMENT_CHANGE_INSERT_2        _UxGT("并按键")  //"and press button"
-#define MSG_FILAMENT_CHANGE_INSERT_3        _UxGT("来继续 ...")  //"to continue..."
-#define MSG_FILAMENT_CHANGE_HEAT_1          _UxGT("按下按钮来") // "Press button to"
-#define MSG_FILAMENT_CHANGE_HEAT_2          _UxGT("加热喷嘴.") // "heat nozzle."
-#define MSG_FILAMENT_CHANGE_HEATING_1       _UxGT("加热喷嘴") // "Heating nozzle"
-#define MSG_FILAMENT_CHANGE_HEATING_2       _UxGT("请等待 ...") // "Please wait..."
-#define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("等待")  //"Wait for"
-#define MSG_FILAMENT_CHANGE_LOAD_2          _UxGT("进料")  //"filament load"
-#define MSG_FILAMENT_CHANGE_PURGE_1         _UxGT("等待") // "Wait for"
-#define MSG_FILAMENT_CHANGE_PURGE_2         _UxGT("丝料清除") // "filament purge"
-#define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("等待打印")  //"Wait for print"
-#define MSG_FILAMENT_CHANGE_RESUME_2        _UxGT("恢复")  //"to resume"
-
+  #define MSG_FILAMENT_CHANGE_INIT_1        _UxGT("等待开始")  //"Wait for start"
+  #define MSG_FILAMENT_CHANGE_INIT_2        _UxGT("丝料")  //"of the filament"
+  #define MSG_FILAMENT_CHANGE_INIT_3        _UxGT("变更")  //"change"
+  #define MSG_FILAMENT_CHANGE_UNLOAD_1      _UxGT("等待")  //"Wait for"
+  #define MSG_FILAMENT_CHANGE_UNLOAD_2      _UxGT("卸下丝料")  //"filament unload"
+  #define MSG_FILAMENT_CHANGE_INSERT_1      _UxGT("插入丝料")  //"Insert filament"
+  #define MSG_FILAMENT_CHANGE_INSERT_2      _UxGT("并按键")  //"and press button"
+  #define MSG_FILAMENT_CHANGE_INSERT_3      _UxGT("来继续 ...")  //"to continue..."
+  #define MSG_FILAMENT_CHANGE_HEAT_1        _UxGT("按下按钮来") // "Press button to"
+  #define MSG_FILAMENT_CHANGE_HEAT_2        _UxGT("加热喷嘴.") // "heat nozzle."
+  #define MSG_FILAMENT_CHANGE_HEATING_1     _UxGT("加热喷嘴") // "Heating nozzle"
+  #define MSG_FILAMENT_CHANGE_HEATING_2     _UxGT("请等待 ...") // "Please wait..."
+  #define MSG_FILAMENT_CHANGE_LOAD_1        _UxGT("等待")  //"Wait for"
+  #define MSG_FILAMENT_CHANGE_LOAD_2        _UxGT("进料")  //"filament load"
+  #define MSG_FILAMENT_CHANGE_PURGE_1       _UxGT("等待") // "Wait for"
+  #define MSG_FILAMENT_CHANGE_PURGE_2       _UxGT("丝料清除") // "filament purge"
+  #define MSG_FILAMENT_CHANGE_RESUME_1      _UxGT("等待打印")  //"Wait for print"
+  #define MSG_FILAMENT_CHANGE_RESUME_2      _UxGT("恢复")  //"to resume"
 #else // LCD_HEIGHT < 4
-#define MSG_FILAMENT_CHANGE_INIT_1          _UxGT("请等待 ...")  //"Please wait..."
-#define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("退出中 ...")  //"Ejecting..."
-#define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("插入并单击")  //"Insert and Click"
-#define MSG_FILAMENT_CHANGE_HEATING_1       _UxGT("加热中 ...") // "Heating..."
-#define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("装载中 ...")  //"Loading..."
-#define MSG_FILAMENT_CHANGE_PURGE_1         _UxGT("清除中 ...") // "Purging..."
-#define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("恢复中 ...")  //"Resuming..."
+  #define MSG_FILAMENT_CHANGE_INIT_1        _UxGT("请等待 ...")  //"Please wait..."
+  #define MSG_FILAMENT_CHANGE_UNLOAD_1      _UxGT("退出中 ...")  //"Ejecting..."
+  #define MSG_FILAMENT_CHANGE_INSERT_1      _UxGT("插入并单击")  //"Insert and Click"
+  #define MSG_FILAMENT_CHANGE_HEATING_1     _UxGT("加热中 ...") // "Heating..."
+  #define MSG_FILAMENT_CHANGE_LOAD_1        _UxGT("装载中 ...")  //"Loading..."
+  #define MSG_FILAMENT_CHANGE_PURGE_1       _UxGT("清除中 ...") // "Purging..."
+  #define MSG_FILAMENT_CHANGE_RESUME_1      _UxGT("恢复中 ...")  //"Resuming..."
 #endif // LCD_HEIGHT < 4
 
 #endif // LANGUAGE_ZH_CN_H

commit 1718eff54adefc7cc95851f28df0c7e02eae3a36
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 13 01:35:55 2018 -0500

    Code changes supporting up to 6 extruders

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 6cf63f6e1d..020073ddd0 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -226,6 +226,7 @@
 #define MSG_E3STEPS                         _UxGT("挤出机3步数/mm") //"E3steps/mm"
 #define MSG_E4STEPS                         _UxGT("挤出机4步数/mm") //"E4steps/mm"
 #define MSG_E5STEPS                         _UxGT("挤出机5步数/mm") //"E5steps/mm"
+#define MSG_E6STEPS                         _UxGT("挤出机6步数/mm") //"E6steps/mm"
 #define MSG_TEMPERATURE                     _UxGT("温度")  //"Temperature"
 #define MSG_MOTION                          _UxGT("运动")  //"Motion"
 #define MSG_FILAMENT                        _UxGT("丝料测容")  //"Filament" lcd_control_volumetric_menu

commit aadcf0891306bfef9f085390931095466a82a6e6
Author: MikeLud <36526272+MikeLud@users.noreply.github.com>
Date:   Thu Jul 26 06:09:49 2018 -0400

    [2.0.x] add Calibrate Z (M915) to Prepare Menu (#11331)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index a348e40712..6cf63f6e1d 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -48,6 +48,7 @@
 #define MSG_AUTO_HOME_X                     _UxGT("回X原位")  //"Home X"
 #define MSG_AUTO_HOME_Y                     _UxGT("回Y原位")  //"Home Y"
 #define MSG_AUTO_HOME_Z                     _UxGT("回Z原位")  //"Home Z"
+#define MSG_TMC_Z_CALIBRATION               _UxGT("⊿校准Z")
 #define MSG_LEVEL_BED_HOMING                _UxGT("平台调平XYZ归原位")  //"Homing XYZ"
 #define MSG_LEVEL_BED_WAITING               _UxGT("单击开始热床调平")  //"Click to Begin"
 #define MSG_LEVEL_BED_NEXT_POINT            _UxGT("下个热床调平点")  //"Next Point"

commit 2fd9ba56dad9bd884598d1ae435d7cc54d981785
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Jun 2 20:53:25 2018 -0500

    LED menu item bool (like Case Lights)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 676e3e6a7c..a348e40712 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -143,8 +143,7 @@
 #define MSG_UBL_STEP_BY_STEP_MENU           _UxGT("一步步UBL") // "Step-By-Step UBL"
 
 #define MSG_LED_CONTROL                     _UxGT("灯管控制") // "LED Control")
-#define MSG_LEDS_ON                         _UxGT("灯亮") // "Lights On")
-#define MSG_LEDS_OFF                        _UxGT("灯灭") // "Lights Off")
+#define MSG_LEDS                            _UxGT("灯") // "Lights")
 #define MSG_LED_PRESETS                     _UxGT("灯预置") // "Light Presets")
 #define MSG_SET_LEDS_RED                    _UxGT("红") // "Red")
 #define MSG_SET_LEDS_ORANGE                 _UxGT("橙") // "Orange")

commit 33966710119b64f83a19075875a8d27452cca9a4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 22 00:16:30 2018 -0500

    [2.0.x] Reset LCD status to fallbacks (#10470)
    
    * Remove obsolete strings
    * Tweak some static consts
    * Reset LCD status to fallbacks

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 9c561bab95..676e3e6a7c 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -251,7 +251,6 @@
 #define MSG_DWELL                           _UxGT("休眠中 ...")  //"Sleep..."
 #define MSG_USERWAIT                        _UxGT("点击继续 ...")  //"Click to resume..."
 #define MSG_PRINT_PAUSED                    _UxGT("暫停打印") // "Print paused"
-#define MSG_RESUMING                        _UxGT("恢复打印中")  //"Resuming print"
 #define MSG_PRINT_ABORTED                   _UxGT("已取消打印")  //"Print aborted"
 #define MSG_NO_MOVE                         _UxGT("无移动")  //"No move."
 #define MSG_KILLED                          _UxGT("已杀掉")  //"KILLED. "
@@ -299,9 +298,7 @@
 #define MSG_SHORT_HOUR                      _UxGT("时")  //"h" // One character only
 #define MSG_SHORT_MINUTE                    _UxGT("分")  //"m" // One character only
 #define MSG_HEATING                         _UxGT("加热中 ...")  //"Heating..."
-#define MSG_HEATING_COMPLETE                _UxGT("加热完成")  //"Heating done."
-#define MSG_BED_HEATING                     _UxGT("加热热床中")  //"Bed Heating."
-#define MSG_BED_DONE                        _UxGT("完成加热热床")  //"Bed done."
+#define MSG_BED_HEATING                     _UxGT("加热热床中 ...")  //"Bed Heating..."
 #define MSG_DELTA_CALIBRATE                 _UxGT("⊿校准")  //"Delta Calibration"
 #define MSG_DELTA_CALIBRATE_X               _UxGT("⊿校准X")  //"Calibrate X"
 #define MSG_DELTA_CALIBRATE_Y               _UxGT("⊿校准Y")  //"Calibrate Y"

commit 627348b46cf02da5525fc367baaa86207f7a3a5e
Author: Yunhui Fu <yhfudev@gmail.com>
Date:   Tue Apr 17 22:20:38 2018 -0400

    move the TALL_FONT_CORRECTION to language files

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 432bd75c08..9c561bab95 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -30,6 +30,8 @@
 #ifndef LANGUAGE_ZH_CN_H
 #define LANGUAGE_ZH_CN_H
 
+//#define TALL_FONT_CORRECTION (1)
+
 #define CHARSIZE 3
 
 #define WELCOME_MSG                         MACHINE_NAME _UxGT("已就绪.")  //" ready."

commit f04be05a14c40984986fc7089687d6f72237645a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 28 21:50:59 2018 -0500

    "G28 Z Forbidden" => "Home XY first"
    
    Some languages will need to be updated for proper phrasing

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 70feee7b85..432bd75c08 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -290,7 +290,7 @@
 #define MSG_ERR_MINTEMP                     _UxGT("错误：最低温度")  //"Err: MINTEMP"
 #define MSG_ERR_MAXTEMP_BED                 _UxGT("错误：最高热床温度")  //"Err: MAXTEMP BED"
 #define MSG_ERR_MINTEMP_BED                 _UxGT("错误：最低热床温度")  //"Err: MINTEMP BED"
-#define MSG_ERR_Z_HOMING                    _UxGT("G28 Z 已禁止") // "G28 Z Forbidden"
+#define MSG_ERR_Z_HOMING                    MSG_HOME _UxGT(" ") MSG_X MSG_Y _UxGT(" ") MSG_FIRST
 #define MSG_HALTED                          _UxGT("打印停机")  //"PRINTER HALTED"
 #define MSG_PLEASE_RESET                    _UxGT("请重置")  //"Please reset"
 #define MSG_SHORT_DAY                       _UxGT("天")  //"d" // One character only

commit 8322a79bb9db66227eff45a6de7b84a41d1db561
Author: Yunhui Fu <yhfudev@gmail.com>
Date:   Sun Mar 25 12:37:54 2018 -0400

    update the UTF-8 C strings for Chinsee languages, for Simplified and Traditional Chinese (#10211)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 2d52c9426d..70feee7b85 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -33,12 +33,15 @@
 #define CHARSIZE 3
 
 #define WELCOME_MSG                         MACHINE_NAME _UxGT("已就绪.")  //" ready."
+#define MSG_BACK                            _UxGT("返回")         // ”Back“
 #define MSG_SD_INSERTED                     _UxGT("存储卡已插入")  //"Card inserted"
 #define MSG_SD_REMOVED                      _UxGT("存储卡被拔出")  //"Card removed"
 #define MSG_LCD_ENDSTOPS                    _UxGT("挡块")  //"Endstops" // Max length 8 characters
 #define MSG_MAIN                            _UxGT("主菜单")  //"Main"
 #define MSG_AUTOSTART                       _UxGT("自动开始")  //"Autostart"
 #define MSG_DISABLE_STEPPERS                _UxGT("关闭步进电机")  //"Disable steppers"
+#define MSG_DEBUG_MENU                      _UxGT("调试菜单")    // "Debug Menu"
+#define MSG_PROGRESS_BAR_TEST               _UxGT("进度条测试")  // "Progress Bar Test"
 #define MSG_AUTO_HOME                       _UxGT("回原点")  //"Auto home"
 #define MSG_AUTO_HOME_X                     _UxGT("回X原位")  //"Home X"
 #define MSG_AUTO_HOME_Y                     _UxGT("回Y原位")  //"Home Y"
@@ -47,6 +50,7 @@
 #define MSG_LEVEL_BED_WAITING               _UxGT("单击开始热床调平")  //"Click to Begin"
 #define MSG_LEVEL_BED_NEXT_POINT            _UxGT("下个热床调平点")  //"Next Point"
 #define MSG_LEVEL_BED_DONE                  _UxGT("完成热床调平")  //"Leveling Done!"
+#define MSG_Z_FADE_HEIGHT                   _UxGT("淡出高度")     // "Fade Height"
 #define MSG_SET_HOME_OFFSETS                _UxGT("设置原点偏移")  //"Set home offsets"
 #define MSG_HOME_OFFSETS_APPLIED            _UxGT("偏移已启用")  //"Offsets applied"
 #define MSG_SET_ORIGIN                      _UxGT("设置原点")  //"Set origin"
@@ -68,6 +72,96 @@
 #define MSG_MOVE_AXIS                       _UxGT("移动轴")  //"Move axis"
 #define MSG_BED_LEVELING                    _UxGT("调平热床")  //"Bed leveling"
 #define MSG_LEVEL_BED                       _UxGT("调平热床")  //"Level bed"
+#define MSG_LEVEL_CORNERS                   _UxGT("调平边角") // "Level corners"
+
+#define MSG_NEXT_CORNER                     _UxGT("下个边角") // "Next corner"
+#define MSG_EDITING_STOPPED                 _UxGT("网格编辑已停止") // "Mesh Editing Stopped"
+
+#define MSG_USER_MENU                       _UxGT("定制命令") // "Custom Commands"
+#define MSG_UBL_DOING_G29                   _UxGT("执行G29") // "Doing G29"
+#define MSG_UBL_UNHOMED                     _UxGT("先回XYZ原点") // "Home XYZ first"
+#define MSG_UBL_TOOLS                       _UxGT("UBL工具") // "UBL Tools"
+#define MSG_UBL_LEVEL_BED                   _UxGT("统一热床调平(UBL)") // "Unified Bed Leveling"
+#define MSG_UBL_MANUAL_MESH                 _UxGT("手工创设网格") // "Manually Build Mesh"
+
+#define MSG_UBL_BC_INSERT                   _UxGT("放置垫片并测量") // "Place shim & measure"
+#define MSG_UBL_BC_INSERT2                  _UxGT("测量") // "Measure"
+#define MSG_UBL_BC_REMOVE                   _UxGT("移除并测量热床") // "Remove & measure bed"
+#define MSG_UBL_MOVING_TO_NEXT              _UxGT("移动到下一个") // "Moving to next"
+#define MSG_UBL_ACTIVATE_MESH               _UxGT("激活UBL") // "Activate UBL"
+#define MSG_UBL_DEACTIVATE_MESH             _UxGT("关闭UBL") // "Deactivate UBL"
+#define MSG_UBL_SET_BED_TEMP                _UxGT("设置热床温度") // "Bed Temp"
+#define MSG_UBL_SET_HOTEND_TEMP             _UxGT("热端温度") // "Hotend Temp"
+#define MSG_UBL_MESH_EDIT                   _UxGT("网格编辑") // "Mesh Edit"
+#define MSG_UBL_EDIT_CUSTOM_MESH            _UxGT("编辑客户网格") // "Edit Custom Mesh"
+#define MSG_UBL_FINE_TUNE_MESH              _UxGT("细调网格") // "Fine Tuning Mesh"
+#define MSG_UBL_DONE_EDITING_MESH           _UxGT("完成编辑网格") // "Done Editing Mesh"
+#define MSG_UBL_BUILD_CUSTOM_MESH           _UxGT("创设客户网格") // "Build Custom Mesh"
+#define MSG_UBL_BUILD_MESH_MENU             _UxGT("创设网格") // "Build Mesh"
+#define MSG_UBL_BUILD_PLA_MESH              _UxGT("创设PLA网格") // "Build PLA Mesh"
+#define MSG_UBL_BUILD_ABS_MESH              _UxGT("创设ABS网格") // "Build ABS Mesh"
+#define MSG_UBL_BUILD_COLD_MESH             _UxGT("创设冷网格") // "Build Cold Mesh"
+#define MSG_UBL_MESH_HEIGHT_ADJUST          _UxGT("调整网格高度") // "Adjust Mesh Height"
+#define MSG_UBL_MESH_HEIGHT_AMOUNT          _UxGT("高度合计") // "Height Amount"
+#define MSG_UBL_VALIDATE_MESH_MENU          _UxGT("批准网格") // "Validate Mesh"
+#define MSG_UBL_VALIDATE_PLA_MESH           _UxGT("批准PLA网格") // "Validate PLA Mesh"
+#define MSG_UBL_VALIDATE_ABS_MESH           _UxGT("批准ABS网格") // "Validate ABS Mesh"
+#define MSG_UBL_VALIDATE_CUSTOM_MESH        _UxGT("批准客户网格") // "Validate Custom Mesh"
+#define MSG_UBL_CONTINUE_MESH               _UxGT("继续热床网格") // "Continue Bed Mesh"
+#define MSG_UBL_MESH_LEVELING               _UxGT("网格调平") // "Mesh Leveling"
+#define MSG_UBL_3POINT_MESH_LEVELING        _UxGT("三点调平") // "3-Point Leveling"
+#define MSG_UBL_GRID_MESH_LEVELING          _UxGT("格子网格调平") // "Grid Mesh Leveling"
+#define MSG_UBL_MESH_LEVEL                  _UxGT("调平网格") // "Level Mesh"
+#define MSG_UBL_SIDE_POINTS                 _UxGT("边点") // "Side Points"
+#define MSG_UBL_MAP_TYPE                    _UxGT("图类型") // "Map Type"
+#define MSG_UBL_OUTPUT_MAP                  _UxGT("输出网格图") // "Output Mesh Map"
+#define MSG_UBL_OUTPUT_MAP_HOST             _UxGT("输出到主机") // "Output for Host"
+#define MSG_UBL_OUTPUT_MAP_CSV              _UxGT("输出到CSV") // "Output for CSV"
+#define MSG_UBL_OUTPUT_MAP_BACKUP           _UxGT("输出到备份") // "Off Printer Backup"
+#define MSG_UBL_INFO_UBL                    _UxGT("输出UBL信息") // "Output UBL Info"
+#define MSG_UBL_EDIT_MESH_MENU              _UxGT("编辑网格") // "Edit Mesh"
+#define MSG_UBL_FILLIN_AMOUNT               _UxGT("填充合计") // "Fill-in Amount"
+#define MSG_UBL_MANUAL_FILLIN               _UxGT("手工填充") // "Manual Fill-in"
+#define MSG_UBL_SMART_FILLIN                _UxGT("聪明填充") // "Smart Fill-in"
+#define MSG_UBL_FILLIN_MESH                 _UxGT("填充网格") // "Fill-in Mesh"
+#define MSG_UBL_INVALIDATE_ALL              _UxGT("作废所有的") // "Invalidate All"
+#define MSG_UBL_INVALIDATE_CLOSEST          _UxGT("作废最近的") // "Invalidate Closest"
+#define MSG_UBL_FINE_TUNE_ALL               _UxGT("细调所有的") // "Fine Tune All"
+#define MSG_UBL_FINE_TUNE_CLOSEST           _UxGT("细调最近的") // "Fine Tune Closest"
+#define MSG_UBL_STORAGE_MESH_MENU           _UxGT("网格存储") // "Mesh Storage"
+#define MSG_UBL_STORAGE_SLOT                _UxGT("存储槽") // "Memory Slot"
+#define MSG_UBL_LOAD_MESH                   _UxGT("装载热床网格") // "Load Bed Mesh"
+#define MSG_UBL_SAVE_MESH                   _UxGT("保存热床网格") // "Save Bed Mesh"
+#define MSG_MESH_LOADED                     _UxGT("网格 %i 已装载") // "Mesh %i loaded"
+#define MSG_MESH_SAVED                      _UxGT("网格 %i 已保存") // "Mesh %i saved"
+#define MSG_NO_STORAGE                      _UxGT("没有存储") // "No storage"
+#define MSG_UBL_SAVE_ERROR                  _UxGT("错误: UBL保存") // "Err: UBL Save"
+#define MSG_UBL_RESTORE_ERROR               _UxGT("错误: UBL还原") // "Err: UBL Restore"
+#define MSG_UBL_Z_OFFSET_STOPPED            _UxGT("Z偏移已停止") // "Z-Offset Stopped"
+#define MSG_UBL_STEP_BY_STEP_MENU           _UxGT("一步步UBL") // "Step-By-Step UBL"
+
+#define MSG_LED_CONTROL                     _UxGT("灯管控制") // "LED Control")
+#define MSG_LEDS_ON                         _UxGT("灯亮") // "Lights On")
+#define MSG_LEDS_OFF                        _UxGT("灯灭") // "Lights Off")
+#define MSG_LED_PRESETS                     _UxGT("灯预置") // "Light Presets")
+#define MSG_SET_LEDS_RED                    _UxGT("红") // "Red")
+#define MSG_SET_LEDS_ORANGE                 _UxGT("橙") // "Orange")
+#define MSG_SET_LEDS_YELLOW                 _UxGT("黄") // "Yellow")
+#define MSG_SET_LEDS_GREEN                  _UxGT("绿") // "Green")
+#define MSG_SET_LEDS_BLUE                   _UxGT("蓝") // "Blue")
+#define MSG_SET_LEDS_INDIGO                 _UxGT("青") // "Indigo")
+#define MSG_SET_LEDS_VIOLET                 _UxGT("紫") // "Violet")
+#define MSG_SET_LEDS_WHITE                  _UxGT("白") // "White")
+#define MSG_SET_LEDS_DEFAULT                _UxGT("缺省") // "Default")
+#define MSG_CUSTOM_LEDS                     _UxGT("定制灯") // "Custom Lights")
+#define MSG_INTENSITY_R                     _UxGT("红饱和度") // "Red Intensity")
+#define MSG_INTENSITY_G                     _UxGT("绿饱和度") // "Green Intensity")
+#define MSG_INTENSITY_B                     _UxGT("蓝饱和度") // "Blue Intensity")
+#define MSG_INTENSITY_W                     _UxGT("白饱和度") // "White Intensity")
+#define MSG_LED_BRIGHTNESS                  _UxGT("亮度") // "Brightness")
+#define MSG_MOVING                          _UxGT("移动 ...") // "Moving...")
+#define MSG_FREE_XY                         _UxGT("释放 XY") // "Free XY")
+
 #define MSG_MOVE_X                          _UxGT("移动X")  //"Move X"
 #define MSG_MOVE_Y                          _UxGT("移动Y")  //"Move Y"
 #define MSG_MOVE_Z                          _UxGT("移动Z")  //"Move Z"
@@ -80,6 +174,7 @@
 #define MSG_NOZZLE                          _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 喷嘴")  //"Nozzle" 噴嘴
 #define MSG_BED                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 热床")  //"Bed"
 #define MSG_FAN_SPEED                       _UxGT("风扇速率")  //"Fan speed"
+#define MSG_EXTRA_FAN_SPEED                 _UxGT("额外风扇速率") // "Extra fan speed"
 #define MSG_FLOW                            _UxGT("挤出速率")  //"Flow"
 #define MSG_CONTROL                         _UxGT("控制")  //"Control"
 #define MSG_MIN                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 最小") //" " LCD_STR_THERMOMETER " Min"
@@ -105,9 +200,11 @@
   #define MSG_VC_JERK                       _UxGT("Z轴抖动速率")  //"Vz-jerk"
 #endif
 #define MSG_VE_JERK                         _UxGT("挤出机抖动速率")  //"Ve-jerk"
+#define MSG_VELOCITY                        _UxGT("速度")          // "Velocity"
 #define MSG_VMAX                            _UxGT("最大进料速率")  //"Vmax " max_feedrate_mm_s
 #define MSG_VMIN                            _UxGT("最小进料速率")  //"Vmin"  min_feedrate_mm_s
 #define MSG_VTRAV_MIN                       _UxGT("最小移动速率")  //"VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
+#define MSG_ACCELERATION                    _UxGT("加速度")       // "Acceleration"
 #define MSG_AMAX                            _UxGT("最大打印加速度")  //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
 #define MSG_A_RETRACT                       _UxGT("收进加速度")  //"A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
 #define MSG_A_TRAVEL                        _UxGT("非打印移动加速度")  //"A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
@@ -122,15 +219,24 @@
   #define MSG_CSTEPS                        _UxGT("Z轴步数/mm")  //"Zsteps/mm"
 #endif
 #define MSG_ESTEPS                          _UxGT("挤出机步数/mm")  //"Esteps/mm"
+#define MSG_E1STEPS                         _UxGT("挤出机1步数/mm") //"E1steps/mm"
+#define MSG_E2STEPS                         _UxGT("挤出机2步数/mm") //"E2steps/mm"
+#define MSG_E3STEPS                         _UxGT("挤出机3步数/mm") //"E3steps/mm"
+#define MSG_E4STEPS                         _UxGT("挤出机4步数/mm") //"E4steps/mm"
+#define MSG_E5STEPS                         _UxGT("挤出机5步数/mm") //"E5steps/mm"
 #define MSG_TEMPERATURE                     _UxGT("温度")  //"Temperature"
 #define MSG_MOTION                          _UxGT("运动")  //"Motion"
 #define MSG_FILAMENT                        _UxGT("丝料测容")  //"Filament" lcd_control_volumetric_menu
 #define MSG_VOLUMETRIC_ENABLED              _UxGT("测容积mm³")  //"E in mm3" volumetric_enabled
 #define MSG_FILAMENT_DIAM                   _UxGT("丝料直径")  //"Fil. Dia."
+#define MSG_FILAMENT_UNLOAD                 _UxGT("卸载 mm") // "Unload mm"
+#define MSG_FILAMENT_LOAD                   _UxGT("装载 mm")   // "Load mm"
+#define MSG_ADVANCE_K                       _UxGT("Advance K") // "Advance K"
 #define MSG_CONTRAST                        _UxGT("LCD对比度")  //"LCD contrast"
 #define MSG_STORE_EEPROM                    _UxGT("保存设置")  //"Store memory"
 #define MSG_LOAD_EEPROM                     _UxGT("装载设置")  //"Load memory"
 #define MSG_RESTORE_FAILSAFE                _UxGT("恢复安全值")  //"Restore failsafe"
+#define MSG_INIT_EEPROM                     _UxGT("初始化设置") // "Initialize EEPROM"
 #define MSG_REFRESH                         _UxGT("刷新")  //"Refresh"
 #define MSG_WATCH                           _UxGT("信息屏")  //"Info screen"
 #define MSG_PREPARE                         _UxGT("准备")  //"Prepare"
@@ -141,9 +247,10 @@
 #define MSG_CARD_MENU                       _UxGT("从存储卡上打印")  //"Print from SD"
 #define MSG_NO_CARD                         _UxGT("无存储卡")  //"No SD card"
 #define MSG_DWELL                           _UxGT("休眠中 ...")  //"Sleep..."
-#define MSG_USERWAIT                        _UxGT("等待用户 ...")  //"Wait for user..."
+#define MSG_USERWAIT                        _UxGT("点击继续 ...")  //"Click to resume..."
+#define MSG_PRINT_PAUSED                    _UxGT("暫停打印") // "Print paused"
 #define MSG_RESUMING                        _UxGT("恢复打印中")  //"Resuming print"
-#define MSG_PRINT_ABORTED                   _UxGT("打印已取消")  //"Print aborted"
+#define MSG_PRINT_ABORTED                   _UxGT("已取消打印")  //"Print aborted"
 #define MSG_NO_MOVE                         _UxGT("无移动")  //"No move."
 #define MSG_KILLED                          _UxGT("已杀掉")  //"KILLED. "
 #define MSG_STOPPED                         _UxGT("已停止")  //"STOPPED. "
@@ -154,11 +261,21 @@
 #define MSG_CONTROL_RETRACT_RECOVER         _UxGT("回抽恢复长度mm")  //"UnRet +mm" retract_recover_length, additional recover length (mm, added to retract length when recovering)
 #define MSG_CONTROL_RETRACT_RECOVER_SWAP    _UxGT("换手回抽恢复长度mm")  //"S UnRet+mm" swap_retract_recover_length, additional swap recover length (mm, added to retract length when recovering from extruder change)
 #define MSG_CONTROL_RETRACT_RECOVERF        _UxGT("回抽恢复后进料速率mm/s")  //"UnRet  V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
+#define MSG_CONTROL_RETRACT_RECOVER_SWAPF   _UxGT("S UnRet V") // "S UnRet V"
 #define MSG_AUTORETRACT                     _UxGT("自动抽回")  //"AutoRetr." autoretract_enabled,
 #define MSG_FILAMENTCHANGE                  _UxGT("更换丝料")  //"Change filament"
+#define MSG_FILAMENTLOAD                    _UxGT("装载丝料") // "Load filament"
+#define MSG_FILAMENTUNLOAD                  _UxGT("卸载丝料") // "Unload filament"
+#define MSG_FILAMENTUNLOAD_ALL              _UxGT("卸载全部") // "Unload All"
 #define MSG_INIT_SDCARD                     _UxGT("初始化存储卡")  //"Init. SD card"
 #define MSG_CNG_SDCARD                      _UxGT("更换存储卡")  //"Change SD card"
 #define MSG_ZPROBE_OUT                      _UxGT("Z探针在热床之外")  //"Z probe out. bed" Z probe is not within the physical limits
+#define MSG_SKEW_FACTOR                     _UxGT("偏斜因数") // "Skew Factor"
+#define MSG_BLTOUCH                         _UxGT("BLTouch")     // "BLTouch"
+#define MSG_BLTOUCH_SELFTEST                _UxGT("BLTouch 自检") // "BLTouch Self-Test"
+#define MSG_BLTOUCH_RESET                   _UxGT("重置BLTouch")  // "Reset BLTouch"
+#define MSG_BLTOUCH_DEPLOY                  _UxGT("部署BLTouch") // "Deploy BLTouch"
+#define MSG_BLTOUCH_STOW                    _UxGT("装载BLTouch")   // "Stow BLTouch"
 #define MSG_HOME                            _UxGT("归位")  //"Home"  // Used as MSG_HOME " " MSG_X MSG_Y MSG_Z " " MSG_FIRST
 #define MSG_FIRST                           _UxGT("先")  //"first"
 #define MSG_ZPROBE_ZOFFSET                  _UxGT("Z偏移")  //"Z Offset"
@@ -173,29 +290,42 @@
 #define MSG_ERR_MINTEMP                     _UxGT("错误：最低温度")  //"Err: MINTEMP"
 #define MSG_ERR_MAXTEMP_BED                 _UxGT("错误：最高热床温度")  //"Err: MAXTEMP BED"
 #define MSG_ERR_MINTEMP_BED                 _UxGT("错误：最低热床温度")  //"Err: MINTEMP BED"
+#define MSG_ERR_Z_HOMING                    _UxGT("G28 Z 已禁止") // "G28 Z Forbidden"
 #define MSG_HALTED                          _UxGT("打印停机")  //"PRINTER HALTED"
 #define MSG_PLEASE_RESET                    _UxGT("请重置")  //"Please reset"
 #define MSG_SHORT_DAY                       _UxGT("天")  //"d" // One character only
 #define MSG_SHORT_HOUR                      _UxGT("时")  //"h" // One character only
 #define MSG_SHORT_MINUTE                    _UxGT("分")  //"m" // One character only
 #define MSG_HEATING                         _UxGT("加热中 ...")  //"Heating..."
-#define MSG_HEATING_COMPLETE                _UxGT("完成加热")  //"Heating done."
+#define MSG_HEATING_COMPLETE                _UxGT("加热完成")  //"Heating done."
 #define MSG_BED_HEATING                     _UxGT("加热热床中")  //"Bed Heating."
 #define MSG_BED_DONE                        _UxGT("完成加热热床")  //"Bed done."
 #define MSG_DELTA_CALIBRATE                 _UxGT("⊿校准")  //"Delta Calibration"
-#define MSG_DELTA_CALIBRATE_X               _UxGT("校准X")  //"Calibrate X"
-#define MSG_DELTA_CALIBRATE_Y               _UxGT("校准Y")  //"Calibrate Y"
-#define MSG_DELTA_CALIBRATE_Z               _UxGT("校准Z")  //"Calibrate Z"
-#define MSG_DELTA_CALIBRATE_CENTER          _UxGT("校准中心")  //"Calibrate Center"
-
+#define MSG_DELTA_CALIBRATE_X               _UxGT("⊿校准X")  //"Calibrate X"
+#define MSG_DELTA_CALIBRATE_Y               _UxGT("⊿校准Y")  //"Calibrate Y"
+#define MSG_DELTA_CALIBRATE_Z               _UxGT("⊿校准Z")  //"Calibrate Z"
+#define MSG_DELTA_CALIBRATE_CENTER          _UxGT("⊿校准中心")  //"Calibrate Center"
+#define MSG_DELTA_SETTINGS                  _UxGT("⊿设置") // "Delta Settings"
+#define MSG_DELTA_AUTO_CALIBRATE            _UxGT("⊿自动校准") // "Auto Calibration"
+#define MSG_DELTA_HEIGHT_CALIBRATE          _UxGT("设置⊿高度") // "Set Delta Height"
+#define MSG_DELTA_DIAG_ROD                  _UxGT("⊿斜柱") // "Diag Rod"
+#define MSG_DELTA_HEIGHT                    _UxGT("⊿高度") // "Height"
+#define MSG_DELTA_RADIUS                    _UxGT("⊿半径") // "Radius"
 #define MSG_INFO_MENU                       _UxGT("关于打印机")  //"About Printer"
 #define MSG_INFO_PRINTER_MENU               _UxGT("打印机信息")  //"Printer Info"
+#define MSG_3POINT_LEVELING                 _UxGT("三点调平") // "3-Point Leveling"
+#define MSG_LINEAR_LEVELING                 _UxGT("线性调平") // "Linear Leveling"
+#define MSG_BILINEAR_LEVELING               _UxGT("双线性调平") // "Bilinear Leveling"
+#define MSG_UBL_LEVELING                    _UxGT("统一热床调平(UBL)") // "Unified Bed Leveling"
+#define MSG_MESH_LEVELING                   _UxGT("网格调平") // "Mesh Leveling"
 #define MSG_INFO_STATS_MENU                 _UxGT("打印机统计")  //"Printer Stats"
 #define MSG_INFO_BOARD_MENU                 _UxGT("主板信息")  //"Board Info"
 #define MSG_INFO_THERMISTOR_MENU            _UxGT("温度计")  //"Thermistors"
 #define MSG_INFO_EXTRUDERS                  _UxGT("挤出机")  //"Extruders"
 #define MSG_INFO_BAUDRATE                   _UxGT("波特率")  //"Baud"
 #define MSG_INFO_PROTOCOL                   _UxGT("协议")  //"Protocol"
+#define MSG_CASE_LIGHT                      _UxGT("外壳灯") // "Case light"
+#define MSG_CASE_LIGHT_BRIGHTNESS           _UxGT("灯亮度") // "Light BRIGHTNESS"
 
 #if LCD_WIDTH > 19
 #define MSG_INFO_PRINT_COUNT              _UxGT("打印计数")  //"Print Count"
@@ -214,8 +344,19 @@
 #define MSG_INFO_MIN_TEMP                   _UxGT("最低温度")  //"Min Temp"
 #define MSG_INFO_MAX_TEMP                   _UxGT("最高温度")  //"Max Temp"
 #define MSG_INFO_PSU                        _UxGT("电源供应")  //"Power Supply"
-
+#define MSG_DRIVE_STRENGTH                  _UxGT("驱动力度") // "Drive Strength"
+#define MSG_DAC_PERCENT                     _UxGT("驱动 %") // "Driver %"
+#define MSG_DAC_EEPROM_WRITE                _UxGT("保存驱动设置") // "DAC EEPROM Write"
+#define MSG_FILAMENT_CHANGE_HEADER_PAUSE    _UxGT("打印已暂停") // "PRINT PAUSED"
+#define MSG_FILAMENT_CHANGE_HEADER_LOAD     _UxGT("装载丝料") // "LOAD FILAMENT"
+#define MSG_FILAMENT_CHANGE_HEADER_UNLOAD   _UxGT("卸载丝料") // "UNLOAD FILAMENT"
+#define MSG_FILAMENT_CHANGE_OPTION_HEADER   _UxGT("恢复选项:") // "RESUME OPTIONS:"
+#define MSG_FILAMENT_CHANGE_OPTION_PURGE    _UxGT("清除更多") // "Purge more"
 #define MSG_FILAMENT_CHANGE_OPTION_RESUME   _UxGT("恢复打印")  //"Resume print"
+#define MSG_FILAMENT_CHANGE_NOZZLE          _UxGT("  喷嘴: ") // "  Nozzle: "
+#define MSG_ERR_HOMING_FAILED               _UxGT("归原位失败") // "Homing failed"
+#define MSG_ERR_PROBING_FAILED              _UxGT("探针探测失败") // "Probing failed"
+#define MSG_M600_TOO_COLD                   _UxGT("M600: 太凉") // "M600: Too cold"
 
 #if LCD_HEIGHT >= 4
 #define MSG_FILAMENT_CHANGE_INIT_1          _UxGT("等待开始")  //"Wait for start"
@@ -223,22 +364,27 @@
 #define MSG_FILAMENT_CHANGE_INIT_3          _UxGT("变更")  //"change"
 #define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("等待")  //"Wait for"
 #define MSG_FILAMENT_CHANGE_UNLOAD_2        _UxGT("卸下丝料")  //"filament unload"
-#define MSG_FILAMENT_CHANGE_UNLOAD_3        _UxGT("")  //""
 #define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("插入丝料")  //"Insert filament"
 #define MSG_FILAMENT_CHANGE_INSERT_2        _UxGT("并按键")  //"and press button"
 #define MSG_FILAMENT_CHANGE_INSERT_3        _UxGT("来继续 ...")  //"to continue..."
+#define MSG_FILAMENT_CHANGE_HEAT_1          _UxGT("按下按钮来") // "Press button to"
+#define MSG_FILAMENT_CHANGE_HEAT_2          _UxGT("加热喷嘴.") // "heat nozzle."
+#define MSG_FILAMENT_CHANGE_HEATING_1       _UxGT("加热喷嘴") // "Heating nozzle"
+#define MSG_FILAMENT_CHANGE_HEATING_2       _UxGT("请等待 ...") // "Please wait..."
 #define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("等待")  //"Wait for"
 #define MSG_FILAMENT_CHANGE_LOAD_2          _UxGT("进料")  //"filament load"
-#define MSG_FILAMENT_CHANGE_LOAD_3          _UxGT("")  //""
+#define MSG_FILAMENT_CHANGE_PURGE_1         _UxGT("等待") // "Wait for"
+#define MSG_FILAMENT_CHANGE_PURGE_2         _UxGT("丝料清除") // "filament purge"
 #define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("等待打印")  //"Wait for print"
 #define MSG_FILAMENT_CHANGE_RESUME_2        _UxGT("恢复")  //"to resume"
-#define MSG_FILAMENT_CHANGE_RESUME_3        _UxGT("")  //""
 
 #else // LCD_HEIGHT < 4
 #define MSG_FILAMENT_CHANGE_INIT_1          _UxGT("请等待 ...")  //"Please wait..."
 #define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("退出中 ...")  //"Ejecting..."
 #define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("插入并单击")  //"Insert and Click"
+#define MSG_FILAMENT_CHANGE_HEATING_1       _UxGT("加热中 ...") // "Heating..."
 #define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("装载中 ...")  //"Loading..."
+#define MSG_FILAMENT_CHANGE_PURGE_1         _UxGT("清除中 ...") // "Purging..."
 #define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("恢复中 ...")  //"Resuming..."
 #endif // LCD_HEIGHT < 4
 

commit 5a7088746755b46521d1342875cb2f49c40959fa
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 8 23:03:47 2018 -0600

    Size lcd_status_message based on language (#9545)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index f35ae3faa2..2d52c9426d 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -30,6 +30,8 @@
 #ifndef LANGUAGE_ZH_CN_H
 #define LANGUAGE_ZH_CN_H
 
+#define CHARSIZE 3
+
 #define WELCOME_MSG                         MACHINE_NAME _UxGT("已就绪.")  //" ready."
 #define MSG_SD_INSERTED                     _UxGT("存储卡已插入")  //"Card inserted"
 #define MSG_SD_REMOVED                      _UxGT("存储卡被拔出")  //"Card removed"

commit 786746404b8aa58c44a93734afd61c701d2abecb
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Sun Feb 4 00:26:05 2018 -0600

    [2.0.x] Apply feedrate to nozzle movement for kinematic machines (#8778)

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 30f4a75cdb..f35ae3faa2 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -93,9 +93,15 @@
 #define MSG_SELECT                          _UxGT("选择")  //"Select"
 #define MSG_ACC                             _UxGT("加速度")  //"Accel" acceleration
 #define MSG_JERK                            _UxGT("抖动速率")  // "Jerk"
-#define MSG_VX_JERK                         _UxGT("X轴抖动速率")  //"Vx-jerk"
-#define MSG_VY_JERK                         _UxGT("Y轴抖动速率")  //"Vy-jerk"
-#define MSG_VZ_JERK                         _UxGT("Z轴抖动速率")  //"Vz-jerk"
+#if IS_KINEMATIC
+  #define MSG_VA_JERK                       _UxGT("A轴抖动速率")  //"Va-jerk"
+  #define MSG_VB_JERK                       _UxGT("B轴抖动速率")  //"Vb-jerk"
+  #define MSG_VC_JERK                       _UxGT("C轴抖动速率")  //"Vc-jerk"
+#else
+  #define MSG_VA_JERK                       _UxGT("X轴抖动速率")  //"Vx-jerk"
+  #define MSG_VB_JERK                       _UxGT("Y轴抖动速率")  //"Vy-jerk"
+  #define MSG_VC_JERK                       _UxGT("Z轴抖动速率")  //"Vz-jerk"
+#endif
 #define MSG_VE_JERK                         _UxGT("挤出机抖动速率")  //"Ve-jerk"
 #define MSG_VMAX                            _UxGT("最大进料速率")  //"Vmax " max_feedrate_mm_s
 #define MSG_VMIN                            _UxGT("最小进料速率")  //"Vmin"  min_feedrate_mm_s
@@ -104,9 +110,15 @@
 #define MSG_A_RETRACT                       _UxGT("收进加速度")  //"A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
 #define MSG_A_TRAVEL                        _UxGT("非打印移动加速度")  //"A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
 #define MSG_STEPS_PER_MM                    _UxGT("轴步数/mm")  //"Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
-#define MSG_XSTEPS                          _UxGT("X轴步数/mm")  //"Xsteps/mm" axis_steps_per_mm, axis steps-per-unit G92
-#define MSG_YSTEPS                          _UxGT("Y轴步数/mm")  //"Ysteps/mm"
-#define MSG_ZSTEPS                          _UxGT("Z轴步数/mm")  //"Zsteps/mm"
+#if IS_KINEMATIC
+  #define MSG_ASTEPS                        _UxGT("A轴步数/mm")  //"Asteps/mm"
+  #define MSG_BSTEPS                        _UxGT("B轴步数/mm")  //"Bsteps/mm"
+  #define MSG_CSTEPS                        _UxGT("C轴步数/mm")  //"Csteps/mm"
+#else
+  #define MSG_ASTEPS                        _UxGT("X轴步数/mm")  //"Xsteps/mm"
+  #define MSG_BSTEPS                        _UxGT("Y轴步数/mm")  //"Ysteps/mm"
+  #define MSG_CSTEPS                        _UxGT("Z轴步数/mm")  //"Zsteps/mm"
+#endif
 #define MSG_ESTEPS                          _UxGT("挤出机步数/mm")  //"Esteps/mm"
 #define MSG_TEMPERATURE                     _UxGT("温度")  //"Temperature"
 #define MSG_MOTION                          _UxGT("运动")  //"Motion"

commit 81211da7b49dd3d053547eec629442ca274c4cd6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 4 05:05:28 2018 -0600

    M701 / M702 language changes

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index af5454b13a..30f4a75cdb 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -201,9 +201,6 @@
 #define MSG_INFO_MAX_TEMP                   _UxGT("最高温度")  //"Max Temp"
 #define MSG_INFO_PSU                        _UxGT("电源供应")  //"Power Supply"
 
-#define MSG_FILAMENT_CHANGE_HEADER          _UxGT("PRINT PAUSED")
-#define MSG_FILAMENT_CHANGE_OPTION_HEADER   _UxGT("RESUME OPTIONS:")
-#define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  _UxGT("挤出更多")  //"Extrude more"
 #define MSG_FILAMENT_CHANGE_OPTION_RESUME   _UxGT("恢复打印")  //"Resume print"
 
 #if LCD_HEIGHT >= 4
@@ -219,9 +216,6 @@
 #define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("等待")  //"Wait for"
 #define MSG_FILAMENT_CHANGE_LOAD_2          _UxGT("进料")  //"filament load"
 #define MSG_FILAMENT_CHANGE_LOAD_3          _UxGT("")  //""
-#define MSG_FILAMENT_CHANGE_EXTRUDE_1       _UxGT("等待")  //"Wait for"
-#define MSG_FILAMENT_CHANGE_EXTRUDE_2       _UxGT("丝料挤出")  //"filament extrude"
-#define MSG_FILAMENT_CHANGE_EXTRUDE_3       _UxGT("")  //""
 #define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("等待打印")  //"Wait for print"
 #define MSG_FILAMENT_CHANGE_RESUME_2        _UxGT("恢复")  //"to resume"
 #define MSG_FILAMENT_CHANGE_RESUME_3        _UxGT("")  //""
@@ -231,7 +225,6 @@
 #define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("退出中 ...")  //"Ejecting..."
 #define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("插入并单击")  //"Insert and Click"
 #define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("装载中 ...")  //"Loading..."
-#define MSG_FILAMENT_CHANGE_EXTRUDE_1       _UxGT("挤出中 ...")  //"Extruding..."
 #define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("恢复中 ...")  //"Resuming..."
 #endif // LCD_HEIGHT < 4
 

commit 7dd0a467325e75eafb19fc7e8b1ccce78686069b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:32 2017 -0500

    Language updates

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
index 1332d76555..af5454b13a 100644
--- a/Marlin/src/lcd/language/language_zh_CN.h
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -24,7 +24,7 @@
  * Simplified Chinese
  *
  * LCD Menu Messages
- * See also https://github.com/MarlinFirmware/Marlin/wiki/LCD-Language
+ * See also http://marlinfw.org/docs/development/lcd_language.html
  *
  */
 #ifndef LANGUAGE_ZH_CN_H

commit cc92e544a58dc259a4a2f70ba57b6b48b3aa1e7b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:30 2017 -0500

    Move 'lcd' files

diff --git a/Marlin/src/lcd/language/language_zh_CN.h b/Marlin/src/lcd/language/language_zh_CN.h
new file mode 100644
index 0000000000..1332d76555
--- /dev/null
+++ b/Marlin/src/lcd/language/language_zh_CN.h
@@ -0,0 +1,238 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Simplified Chinese
+ *
+ * LCD Menu Messages
+ * See also https://github.com/MarlinFirmware/Marlin/wiki/LCD-Language
+ *
+ */
+#ifndef LANGUAGE_ZH_CN_H
+#define LANGUAGE_ZH_CN_H
+
+#define WELCOME_MSG                         MACHINE_NAME _UxGT("已就绪.")  //" ready."
+#define MSG_SD_INSERTED                     _UxGT("存储卡已插入")  //"Card inserted"
+#define MSG_SD_REMOVED                      _UxGT("存储卡被拔出")  //"Card removed"
+#define MSG_LCD_ENDSTOPS                    _UxGT("挡块")  //"Endstops" // Max length 8 characters
+#define MSG_MAIN                            _UxGT("主菜单")  //"Main"
+#define MSG_AUTOSTART                       _UxGT("自动开始")  //"Autostart"
+#define MSG_DISABLE_STEPPERS                _UxGT("关闭步进电机")  //"Disable steppers"
+#define MSG_AUTO_HOME                       _UxGT("回原点")  //"Auto home"
+#define MSG_AUTO_HOME_X                     _UxGT("回X原位")  //"Home X"
+#define MSG_AUTO_HOME_Y                     _UxGT("回Y原位")  //"Home Y"
+#define MSG_AUTO_HOME_Z                     _UxGT("回Z原位")  //"Home Z"
+#define MSG_LEVEL_BED_HOMING                _UxGT("平台调平XYZ归原位")  //"Homing XYZ"
+#define MSG_LEVEL_BED_WAITING               _UxGT("单击开始热床调平")  //"Click to Begin"
+#define MSG_LEVEL_BED_NEXT_POINT            _UxGT("下个热床调平点")  //"Next Point"
+#define MSG_LEVEL_BED_DONE                  _UxGT("完成热床调平")  //"Leveling Done!"
+#define MSG_SET_HOME_OFFSETS                _UxGT("设置原点偏移")  //"Set home offsets"
+#define MSG_HOME_OFFSETS_APPLIED            _UxGT("偏移已启用")  //"Offsets applied"
+#define MSG_SET_ORIGIN                      _UxGT("设置原点")  //"Set origin"
+#define MSG_PREHEAT_1                       _UxGT("预热PLA")  //"Preheat PLA"
+#define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 _UxGT(" ")  //MSG_PREHEAT_1 " "
+#define MSG_PREHEAT_1_ALL                   MSG_PREHEAT_1 _UxGT(" 全部")  //MSG_PREHEAT_1 " All"
+#define MSG_PREHEAT_1_BEDONLY               MSG_PREHEAT_1 _UxGT(" 热床")  //MSG_PREHEAT_1 " Bed"
+#define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 _UxGT(" 设置")  //MSG_PREHEAT_1 " conf"
+#define MSG_PREHEAT_2                       _UxGT("预热ABS")  //"Preheat ABS"
+#define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 _UxGT(" ")  //MSG_PREHEAT_2 " "
+#define MSG_PREHEAT_2_ALL                   MSG_PREHEAT_2 _UxGT(" 全部")  //MSG_PREHEAT_2 " All"
+#define MSG_PREHEAT_2_BEDONLY               MSG_PREHEAT_2 _UxGT(" 热床")  //MSG_PREHEAT_2 " Bed"
+#define MSG_PREHEAT_2_SETTINGS              MSG_PREHEAT_2 _UxGT(" 设置")  //MSG_PREHEAT_2 " conf"
+#define MSG_COOLDOWN                        _UxGT("降温")  //"Cooldown"
+#define MSG_SWITCH_PS_ON                    _UxGT("电源打开")  //"Switch power on"
+#define MSG_SWITCH_PS_OFF                   _UxGT("电源关闭")  //"Switch power off"
+#define MSG_EXTRUDE                         _UxGT("挤出")  //"Extrude"
+#define MSG_RETRACT                         _UxGT("回抽")  //"Retract"
+#define MSG_MOVE_AXIS                       _UxGT("移动轴")  //"Move axis"
+#define MSG_BED_LEVELING                    _UxGT("调平热床")  //"Bed leveling"
+#define MSG_LEVEL_BED                       _UxGT("调平热床")  //"Level bed"
+#define MSG_MOVE_X                          _UxGT("移动X")  //"Move X"
+#define MSG_MOVE_Y                          _UxGT("移动Y")  //"Move Y"
+#define MSG_MOVE_Z                          _UxGT("移动Z")  //"Move Z"
+#define MSG_MOVE_E                          _UxGT("挤出机")  //"Extruder"
+#define MSG_MOVE_01MM                       _UxGT("移动 0.1 mm")  //"Move 0.1mm"
+#define MSG_MOVE_1MM                        _UxGT("移动 1 mm")  //"Move 1mm"
+#define MSG_MOVE_10MM                       _UxGT("移动 10 mm")  //"Move 10mm"
+#define MSG_SPEED                           _UxGT("速率")  //"Speed"
+#define MSG_BED_Z                           _UxGT("热床Z")  //"Bed Z"
+#define MSG_NOZZLE                          _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 喷嘴")  //"Nozzle" 噴嘴
+#define MSG_BED                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 热床")  //"Bed"
+#define MSG_FAN_SPEED                       _UxGT("风扇速率")  //"Fan speed"
+#define MSG_FLOW                            _UxGT("挤出速率")  //"Flow"
+#define MSG_CONTROL                         _UxGT("控制")  //"Control"
+#define MSG_MIN                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 最小") //" " LCD_STR_THERMOMETER " Min"
+#define MSG_MAX                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 最大")  //" " LCD_STR_THERMOMETER " Max"
+#define MSG_FACTOR                          _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" 因数")  //" " LCD_STR_THERMOMETER " Fact"
+#define MSG_AUTOTEMP                        _UxGT("自动控温")  //"Autotemp"
+#define MSG_ON                              _UxGT("开 ")  //"On "
+#define MSG_OFF                             _UxGT("关 ")  //"Off"
+#define MSG_PID_P                           _UxGT("PID-P")  //"PID-P"
+#define MSG_PID_I                           _UxGT("PID-I")  //"PID-I"
+#define MSG_PID_D                           _UxGT("PID-D")  //"PID-D"
+#define MSG_PID_C                           _UxGT("PID-C")  //"PID-C"
+#define MSG_SELECT                          _UxGT("选择")  //"Select"
+#define MSG_ACC                             _UxGT("加速度")  //"Accel" acceleration
+#define MSG_JERK                            _UxGT("抖动速率")  // "Jerk"
+#define MSG_VX_JERK                         _UxGT("X轴抖动速率")  //"Vx-jerk"
+#define MSG_VY_JERK                         _UxGT("Y轴抖动速率")  //"Vy-jerk"
+#define MSG_VZ_JERK                         _UxGT("Z轴抖动速率")  //"Vz-jerk"
+#define MSG_VE_JERK                         _UxGT("挤出机抖动速率")  //"Ve-jerk"
+#define MSG_VMAX                            _UxGT("最大进料速率")  //"Vmax " max_feedrate_mm_s
+#define MSG_VMIN                            _UxGT("最小进料速率")  //"Vmin"  min_feedrate_mm_s
+#define MSG_VTRAV_MIN                       _UxGT("最小移动速率")  //"VTrav min" min_travel_feedrate_mm_s, (target) speed of the move
+#define MSG_AMAX                            _UxGT("最大打印加速度")  //"Amax " max_acceleration_mm_per_s2, acceleration in units/s^2 for print moves
+#define MSG_A_RETRACT                       _UxGT("收进加速度")  //"A-retract" retract_acceleration, E acceleration in mm/s^2 for retracts
+#define MSG_A_TRAVEL                        _UxGT("非打印移动加速度")  //"A-travel" travel_acceleration, X, Y, Z acceleration in mm/s^2 for travel (non printing) moves
+#define MSG_STEPS_PER_MM                    _UxGT("轴步数/mm")  //"Steps/mm" axis_steps_per_mm, axis steps-per-unit G92
+#define MSG_XSTEPS                          _UxGT("X轴步数/mm")  //"Xsteps/mm" axis_steps_per_mm, axis steps-per-unit G92
+#define MSG_YSTEPS                          _UxGT("Y轴步数/mm")  //"Ysteps/mm"
+#define MSG_ZSTEPS                          _UxGT("Z轴步数/mm")  //"Zsteps/mm"
+#define MSG_ESTEPS                          _UxGT("挤出机步数/mm")  //"Esteps/mm"
+#define MSG_TEMPERATURE                     _UxGT("温度")  //"Temperature"
+#define MSG_MOTION                          _UxGT("运动")  //"Motion"
+#define MSG_FILAMENT                        _UxGT("丝料测容")  //"Filament" lcd_control_volumetric_menu
+#define MSG_VOLUMETRIC_ENABLED              _UxGT("测容积mm³")  //"E in mm3" volumetric_enabled
+#define MSG_FILAMENT_DIAM                   _UxGT("丝料直径")  //"Fil. Dia."
+#define MSG_CONTRAST                        _UxGT("LCD对比度")  //"LCD contrast"
+#define MSG_STORE_EEPROM                    _UxGT("保存设置")  //"Store memory"
+#define MSG_LOAD_EEPROM                     _UxGT("装载设置")  //"Load memory"
+#define MSG_RESTORE_FAILSAFE                _UxGT("恢复安全值")  //"Restore failsafe"
+#define MSG_REFRESH                         _UxGT("刷新")  //"Refresh"
+#define MSG_WATCH                           _UxGT("信息屏")  //"Info screen"
+#define MSG_PREPARE                         _UxGT("准备")  //"Prepare"
+#define MSG_TUNE                            _UxGT("调整")  //"Tune"
+#define MSG_PAUSE_PRINT                     _UxGT("暂停打印")  //"Pause print"
+#define MSG_RESUME_PRINT                    _UxGT("恢复打印")  //"Resume print"
+#define MSG_STOP_PRINT                      _UxGT("停止打印")  //"Stop print"
+#define MSG_CARD_MENU                       _UxGT("从存储卡上打印")  //"Print from SD"
+#define MSG_NO_CARD                         _UxGT("无存储卡")  //"No SD card"
+#define MSG_DWELL                           _UxGT("休眠中 ...")  //"Sleep..."
+#define MSG_USERWAIT                        _UxGT("等待用户 ...")  //"Wait for user..."
+#define MSG_RESUMING                        _UxGT("恢复打印中")  //"Resuming print"
+#define MSG_PRINT_ABORTED                   _UxGT("打印已取消")  //"Print aborted"
+#define MSG_NO_MOVE                         _UxGT("无移动")  //"No move."
+#define MSG_KILLED                          _UxGT("已杀掉")  //"KILLED. "
+#define MSG_STOPPED                         _UxGT("已停止")  //"STOPPED. "
+#define MSG_CONTROL_RETRACT                 _UxGT("回抽长度mm")  //"Retract mm" retract_length, retract length (positive mm)
+#define MSG_CONTROL_RETRACT_SWAP            _UxGT("换手回抽长度mm")  //"Swap Re.mm" swap_retract_length, swap retract length (positive mm), for extruder change
+#define MSG_CONTROL_RETRACTF                _UxGT("回抽速率mm/s")  //"Retract  V" retract_feedrate_mm_s, feedrate for retracting (mm/s)
+#define MSG_CONTROL_RETRACT_ZLIFT           _UxGT("Hop mm")  //"Hop mm" retract_zlift, retract Z-lift
+#define MSG_CONTROL_RETRACT_RECOVER         _UxGT("回抽恢复长度mm")  //"UnRet +mm" retract_recover_length, additional recover length (mm, added to retract length when recovering)
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    _UxGT("换手回抽恢复长度mm")  //"S UnRet+mm" swap_retract_recover_length, additional swap recover length (mm, added to retract length when recovering from extruder change)
+#define MSG_CONTROL_RETRACT_RECOVERF        _UxGT("回抽恢复后进料速率mm/s")  //"UnRet  V" retract_recover_feedrate_mm_s, feedrate for recovering from retraction (mm/s)
+#define MSG_AUTORETRACT                     _UxGT("自动抽回")  //"AutoRetr." autoretract_enabled,
+#define MSG_FILAMENTCHANGE                  _UxGT("更换丝料")  //"Change filament"
+#define MSG_INIT_SDCARD                     _UxGT("初始化存储卡")  //"Init. SD card"
+#define MSG_CNG_SDCARD                      _UxGT("更换存储卡")  //"Change SD card"
+#define MSG_ZPROBE_OUT                      _UxGT("Z探针在热床之外")  //"Z probe out. bed" Z probe is not within the physical limits
+#define MSG_HOME                            _UxGT("归位")  //"Home"  // Used as MSG_HOME " " MSG_X MSG_Y MSG_Z " " MSG_FIRST
+#define MSG_FIRST                           _UxGT("先")  //"first"
+#define MSG_ZPROBE_ZOFFSET                  _UxGT("Z偏移")  //"Z Offset"
+#define MSG_BABYSTEP_X                      _UxGT("微量调整X轴")  //"Babystep X" lcd_babystep_x, Babystepping enables the user to control the axis in tiny amounts
+#define MSG_BABYSTEP_Y                      _UxGT("微量调整Y轴")  //"Babystep Y"
+#define MSG_BABYSTEP_Z                      _UxGT("微量调整Z轴")  //"Babystep Z"
+#define MSG_ENDSTOP_ABORT                   _UxGT("挡块终止")  //"Endstop abort"
+#define MSG_HEATING_FAILED_LCD              _UxGT("加热失败")  //"Heating failed"
+#define MSG_ERR_REDUNDANT_TEMP              _UxGT("错误：REDUNDANT TEMP")  //"Err: REDUNDANT TEMP"
+#define MSG_THERMAL_RUNAWAY                 _UxGT("温控失控")  //"THERMAL RUNAWAY"
+#define MSG_ERR_MAXTEMP                     _UxGT("错误：最高温度")  //"Err: MAXTEMP"
+#define MSG_ERR_MINTEMP                     _UxGT("错误：最低温度")  //"Err: MINTEMP"
+#define MSG_ERR_MAXTEMP_BED                 _UxGT("错误：最高热床温度")  //"Err: MAXTEMP BED"
+#define MSG_ERR_MINTEMP_BED                 _UxGT("错误：最低热床温度")  //"Err: MINTEMP BED"
+#define MSG_HALTED                          _UxGT("打印停机")  //"PRINTER HALTED"
+#define MSG_PLEASE_RESET                    _UxGT("请重置")  //"Please reset"
+#define MSG_SHORT_DAY                       _UxGT("天")  //"d" // One character only
+#define MSG_SHORT_HOUR                      _UxGT("时")  //"h" // One character only
+#define MSG_SHORT_MINUTE                    _UxGT("分")  //"m" // One character only
+#define MSG_HEATING                         _UxGT("加热中 ...")  //"Heating..."
+#define MSG_HEATING_COMPLETE                _UxGT("完成加热")  //"Heating done."
+#define MSG_BED_HEATING                     _UxGT("加热热床中")  //"Bed Heating."
+#define MSG_BED_DONE                        _UxGT("完成加热热床")  //"Bed done."
+#define MSG_DELTA_CALIBRATE                 _UxGT("⊿校准")  //"Delta Calibration"
+#define MSG_DELTA_CALIBRATE_X               _UxGT("校准X")  //"Calibrate X"
+#define MSG_DELTA_CALIBRATE_Y               _UxGT("校准Y")  //"Calibrate Y"
+#define MSG_DELTA_CALIBRATE_Z               _UxGT("校准Z")  //"Calibrate Z"
+#define MSG_DELTA_CALIBRATE_CENTER          _UxGT("校准中心")  //"Calibrate Center"
+
+#define MSG_INFO_MENU                       _UxGT("关于打印机")  //"About Printer"
+#define MSG_INFO_PRINTER_MENU               _UxGT("打印机信息")  //"Printer Info"
+#define MSG_INFO_STATS_MENU                 _UxGT("打印机统计")  //"Printer Stats"
+#define MSG_INFO_BOARD_MENU                 _UxGT("主板信息")  //"Board Info"
+#define MSG_INFO_THERMISTOR_MENU            _UxGT("温度计")  //"Thermistors"
+#define MSG_INFO_EXTRUDERS                  _UxGT("挤出机")  //"Extruders"
+#define MSG_INFO_BAUDRATE                   _UxGT("波特率")  //"Baud"
+#define MSG_INFO_PROTOCOL                   _UxGT("协议")  //"Protocol"
+
+#if LCD_WIDTH > 19
+#define MSG_INFO_PRINT_COUNT              _UxGT("打印计数")  //"Print Count"
+#define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成了")  //"Completed"
+#define MSG_INFO_PRINT_TIME               _UxGT("总打印时间")  //"Total print time"
+#define MSG_INFO_PRINT_LONGEST            _UxGT("最长工作时间")  //"Longest job time"
+#define MSG_INFO_PRINT_FILAMENT           _UxGT("总计挤出")  //"Extruded total"
+#else
+#define MSG_INFO_PRINT_COUNT              _UxGT("打印数")  //"Prints"
+#define MSG_INFO_COMPLETED_PRINTS         _UxGT("完成")  //"Completed"
+#define MSG_INFO_PRINT_TIME               _UxGT("总共")  //"Total"
+#define MSG_INFO_PRINT_LONGEST            _UxGT("最长")  //"Longest"
+#define MSG_INFO_PRINT_FILAMENT           _UxGT("已挤出")  //"Extruded"
+#endif
+
+#define MSG_INFO_MIN_TEMP                   _UxGT("最低温度")  //"Min Temp"
+#define MSG_INFO_MAX_TEMP                   _UxGT("最高温度")  //"Max Temp"
+#define MSG_INFO_PSU                        _UxGT("电源供应")  //"Power Supply"
+
+#define MSG_FILAMENT_CHANGE_HEADER          _UxGT("PRINT PAUSED")
+#define MSG_FILAMENT_CHANGE_OPTION_HEADER   _UxGT("RESUME OPTIONS:")
+#define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  _UxGT("挤出更多")  //"Extrude more"
+#define MSG_FILAMENT_CHANGE_OPTION_RESUME   _UxGT("恢复打印")  //"Resume print"
+
+#if LCD_HEIGHT >= 4
+#define MSG_FILAMENT_CHANGE_INIT_1          _UxGT("等待开始")  //"Wait for start"
+#define MSG_FILAMENT_CHANGE_INIT_2          _UxGT("丝料")  //"of the filament"
+#define MSG_FILAMENT_CHANGE_INIT_3          _UxGT("变更")  //"change"
+#define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("等待")  //"Wait for"
+#define MSG_FILAMENT_CHANGE_UNLOAD_2        _UxGT("卸下丝料")  //"filament unload"
+#define MSG_FILAMENT_CHANGE_UNLOAD_3        _UxGT("")  //""
+#define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("插入丝料")  //"Insert filament"
+#define MSG_FILAMENT_CHANGE_INSERT_2        _UxGT("并按键")  //"and press button"
+#define MSG_FILAMENT_CHANGE_INSERT_3        _UxGT("来继续 ...")  //"to continue..."
+#define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("等待")  //"Wait for"
+#define MSG_FILAMENT_CHANGE_LOAD_2          _UxGT("进料")  //"filament load"
+#define MSG_FILAMENT_CHANGE_LOAD_3          _UxGT("")  //""
+#define MSG_FILAMENT_CHANGE_EXTRUDE_1       _UxGT("等待")  //"Wait for"
+#define MSG_FILAMENT_CHANGE_EXTRUDE_2       _UxGT("丝料挤出")  //"filament extrude"
+#define MSG_FILAMENT_CHANGE_EXTRUDE_3       _UxGT("")  //""
+#define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("等待打印")  //"Wait for print"
+#define MSG_FILAMENT_CHANGE_RESUME_2        _UxGT("恢复")  //"to resume"
+#define MSG_FILAMENT_CHANGE_RESUME_3        _UxGT("")  //""
+
+#else // LCD_HEIGHT < 4
+#define MSG_FILAMENT_CHANGE_INIT_1          _UxGT("请等待 ...")  //"Please wait..."
+#define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("退出中 ...")  //"Ejecting..."
+#define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("插入并单击")  //"Insert and Click"
+#define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("装载中 ...")  //"Loading..."
+#define MSG_FILAMENT_CHANGE_EXTRUDE_1       _UxGT("挤出中 ...")  //"Extruding..."
+#define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("恢复中 ...")  //"Resuming..."
+#endif // LCD_HEIGHT < 4
+
+#endif // LANGUAGE_ZH_CN_H
