commit aed577271ff94c822e861d8f652f2bdf46b2aeb9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 17 22:39:00 2023 -0600

    üî® Rotational move items (#26438)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index a87fcf6509..3ea82d6302 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -97,6 +97,7 @@ namespace LanguageNarrow_jp_kana {
   LSTR MSG_MOVE_EN                        = _UxGT("* „Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº"); // "En"
   LSTR MSG_MOVE_N_MM                      = _UxGT("$mm „Ç§„Éâ„Ç¶"); // "Move $mm"
   LSTR MSG_MOVE_N_IN                      = _UxGT("$in „Ç§„Éâ„Ç¶"); // "Move $in"
+  LSTR MSG_MOVE_N_DEG                     = _UxGT("$" LCD_STR_DEGREE " „Ç§„Éâ„Ç¶"); // "Move $¬∞"
   LSTR MSG_SPEED                          = _UxGT("„ÇΩ„ÇØ„Éâ"); // "Speed"
   LSTR MSG_MESH_Z_OFFSET                  = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà"); // "Bed Z"
   LSTR MSG_NOZZLE                         = _UxGT("„Éé„Ç∫„É´"); // "Nozzle"

commit 36e66bdd9ff22ddfdcaa36ac8a9b9448c78ca44c
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Nov 18 09:11:59 2023 +1300

    üîß Define MarlinUI axis moves with lists (#26344)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index e75ebeb123..a87fcf6509 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -95,12 +95,8 @@ namespace LanguageNarrow_jp_kana {
   LSTR MSG_MOVE_N                         = _UxGT("@„Ç∏„ÇØ „Ç§„Éâ„Ç¶"); // "Move @"
   LSTR MSG_MOVE_E                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº"); // "Extruder"
   LSTR MSG_MOVE_EN                        = _UxGT("* „Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº"); // "En"
-  LSTR MSG_MOVE_N_MM                      = _UxGT("$mm „Ç§„Éâ„Ç¶"); // "Move 0.025mm"
-  LSTR MSG_MOVE_01MM                      = _UxGT("0.1mm „Ç§„Éâ„Ç¶"); // "Move 0.1mm"
-  LSTR MSG_MOVE_1MM                       = _UxGT("  1mm „Ç§„Éâ„Ç¶"); // "Move 1mm"
-  LSTR MSG_MOVE_10MM                      = _UxGT(" 10mm „Ç§„Éâ„Ç¶"); // "Move 10mm"
-  LSTR MSG_MOVE_50MM                      = _UxGT(" 50mm „Ç§„Éâ„Ç¶"); // "Move 50mm"
-  LSTR MSG_MOVE_100MM                     = _UxGT(" 100mm „Ç§„Éâ„Ç¶"); // "Move 100mm"
+  LSTR MSG_MOVE_N_MM                      = _UxGT("$mm „Ç§„Éâ„Ç¶"); // "Move $mm"
+  LSTR MSG_MOVE_N_IN                      = _UxGT("$in „Ç§„Éâ„Ç¶"); // "Move $in"
   LSTR MSG_SPEED                          = _UxGT("„ÇΩ„ÇØ„Éâ"); // "Speed"
   LSTR MSG_MESH_Z_OFFSET                  = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà"); // "Bed Z"
   LSTR MSG_NOZZLE                         = _UxGT("„Éé„Ç∫„É´"); // "Nozzle"

commit 88cdf487b433bf2187f2dad31587882ebf02cc59
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Aug 22 17:36:53 2023 -0500

    üö∏ Avoid LCD messages starting with "Error:" (#26164)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index d40b972427..e75ebeb123 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -181,9 +181,9 @@ namespace LanguageNarrow_jp_kana {
   LSTR MSG_BABYSTEP_Y                     = _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶"); // "Babystep Y"
   LSTR MSG_BABYSTEP_Z                     = _UxGT("Z„Ç∏„ÇØ „Éì„Éâ„Ç¶"); // "Babystep Z"
   LSTR MSG_ENDSTOP_ABORT                  = _UxGT("„Ç§„Éâ„Ç¶„Ç≤„É≥„Ç´„Ç§„Ç±„É≥„ÉÅ„Ç≠„Éé„Ç¶"); // "Endstop abort"
-  LSTR MSG_HEATING_FAILED_LCD             = _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§"); // "Heating failed"
+  LSTR MSG_ERR_HEATING_FAILED             = _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§"); // "Heating failed"
   LSTR MSG_ERR_REDUNDANT_TEMP             = _UxGT("„Ç®„É©„Éº:„Ç∏„Éß„Ç¶„ÉÅ„Éß„Ç¶„Çµ„Éº„Éü„Çπ„Çø„Éº„Ç≠„Éé„Ç¶"); // "Err: REDUNDANT TEMP"
-  LSTR MSG_THERMAL_RUNAWAY                = _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶"); // "THERMAL RUNAWAY"
+  LSTR MSG_ERR_THERMAL_RUNAWAY            = _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶"); // "THERMAL RUNAWAY"
   LSTR MSG_ERR_MAXTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´"); // "Err: MAXTEMP"
   LSTR MSG_ERR_MINTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥"); // "Err: MINTEMP"
   LSTR MSG_HALTED                         = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø"); // "PRINTER HALTED"

commit 0878b99b2cb38ffd40faa12d9e3de3bd659af205
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 30 19:21:56 2023 -0500

    üåê Language Import/Export (#25889)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 950ddcb5e5..d40b972427 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -31,7 +31,7 @@
 
 //#define DISPLAY_CHARSET_ISO10646_KANA
 
-namespace Language_jp_kana {
+namespace LanguageNarrow_jp_kana {
   using namespace Language_en; // Inherit undefined strings from English
 
   constexpr uint8_t CHARSIZE              = 3;
@@ -61,23 +61,23 @@ namespace Language_jp_kana {
   LSTR MSG_LEVEL_BED_DONE                 = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶"); // "Leveling Done!"
   LSTR MSG_SET_HOME_OFFSETS               = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§"); // "Set home offsets"
   LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø"); // "Offsets applied"
-  #if HAS_PREHEAT
-    LSTR MSG_PREHEAT_1                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ"); // "Preheat " PREHEAT_1_LABEL
-    LSTR MSG_PREHEAT_1_H                  = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~"); // "Preheat " PREHEAT_1_LABEL
-    LSTR MSG_PREHEAT_1_END                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´"); // " Nozzle"
-    LSTR MSG_PREHEAT_1_END_E              = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~"); // " Nozzle"
-    LSTR MSG_PREHEAT_1_ALL                = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ"); // " All"
-    LSTR MSG_PREHEAT_1_BEDONLY            = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ"); // " Bed"
-    LSTR MSG_PREHEAT_1_SETTINGS           = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§"); // " conf"
-
-    LSTR MSG_PREHEAT_M                    = _UxGT("$ „É®„Éç„ÉÑ"); // "Preheat " PREHEAT_1_LABEL
-    LSTR MSG_PREHEAT_M_H                  = _UxGT("$ „É®„Éç„ÉÑ ~"); // "Preheat " PREHEAT_1_LABEL
-    LSTR MSG_PREHEAT_M_END                = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´"); // " Nozzle"
-    LSTR MSG_PREHEAT_M_END_E              = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~"); // " Nozzle"
-    LSTR MSG_PREHEAT_M_ALL                = _UxGT("$ „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ"); // " All"
-    LSTR MSG_PREHEAT_M_BEDONLY            = _UxGT("$ „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ"); // " Bed"
-    LSTR MSG_PREHEAT_M_SETTINGS           = _UxGT("$ „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§"); // " conf"
-  #endif
+
+  LSTR MSG_PREHEAT_1                      = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ"); // "Preheat " PREHEAT_1_LABEL
+  LSTR MSG_PREHEAT_1_H                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~"); // "Preheat " PREHEAT_1_LABEL
+  LSTR MSG_PREHEAT_1_END                  = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´"); // " Nozzle"
+  LSTR MSG_PREHEAT_1_END_E                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~"); // " Nozzle"
+  LSTR MSG_PREHEAT_1_ALL                  = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ"); // " All"
+  LSTR MSG_PREHEAT_1_BEDONLY              = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ"); // " Bed"
+  LSTR MSG_PREHEAT_1_SETTINGS             = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§"); // " conf"
+
+  LSTR MSG_PREHEAT_M                      = _UxGT("$ „É®„Éç„ÉÑ"); // "Preheat " PREHEAT_1_LABEL
+  LSTR MSG_PREHEAT_M_H                    = _UxGT("$ „É®„Éç„ÉÑ ~"); // "Preheat " PREHEAT_1_LABEL
+  LSTR MSG_PREHEAT_M_END                  = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´"); // " Nozzle"
+  LSTR MSG_PREHEAT_M_END_E                = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~"); // " Nozzle"
+  LSTR MSG_PREHEAT_M_ALL                  = _UxGT("$ „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ"); // " All"
+  LSTR MSG_PREHEAT_M_BEDONLY              = _UxGT("$ „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ"); // " Bed"
+  LSTR MSG_PREHEAT_M_SETTINGS             = _UxGT("$ „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§"); // " conf"
+
   LSTR MSG_COOLDOWN                       = _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑"); // "Cooldown"
   LSTR MSG_SWITCH_PS_ON                   = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥"); // "Switch power on"
   LSTR MSG_SWITCH_PS_OFF                  = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï"); // "Switch power off"
@@ -247,3 +247,20 @@ namespace Language_jp_kana {
   LSTR MSG_PRINT_PAUSED                   = _UxGT("„Éó„É™„É≥„Éà„Ç¨„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");
   LSTR MSG_PRINTING                       = _UxGT("„Éó„É™„É≥„Éà„ÉÅ„É•„Ç¶...");
 }
+
+namespace LanguageWide_jp_kana {
+  using namespace LanguageNarrow_jp_kana;
+  #if LCD_WIDTH >= 20 || HAS_DWIN_E3V2
+  #endif
+}
+
+namespace LanguageTall_jp_kana {
+  using namespace LanguageWide_jp_kana;
+  #if LCD_HEIGHT >= 4
+    // Filament Change screens show up to 3 lines on a 4-line display
+  #endif
+}
+
+namespace Language_jp_kana {
+  using namespace LanguageTall_jp_kana;
+}

commit 154e48ba22ceedb01e9058a7f8da9457a445ee19
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 26 18:54:50 2023 -0500

    üé® Misc. spacing

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 7570710838..950ddcb5e5 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -42,188 +42,188 @@ namespace Language_jp_kana {
 
   // Áâá‰ªÆÂêçË°®Á§∫ÂÆöÁæ©
   LSTR WELCOME_MSG                        = MACHINE_NAME _UxGT(" „Ç∏„É•„É≥„Éì„Ç´„É≥„É™„Éß„Ç¶");
-  LSTR MSG_MEDIA_INSERTED                 = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„ÇΩ„Ç¶„Éã„É•„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");        // "Card inserted"
-  LSTR MSG_MEDIA_REMOVED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
+  LSTR MSG_MEDIA_INSERTED                 = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„ÇΩ„Ç¶„Éã„É•„Ç¶„Çµ„É¨„Éû„Ç∑„Çø"); // "Card inserted"
+  LSTR MSG_MEDIA_REMOVED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥"); // "Card removed"
   LSTR MSG_RELEASE_MEDIA                  = _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑");
-  LSTR MSG_LCD_ENDSTOPS                   = _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó");                  // "Endstops" // Max length 8 characters
-  LSTR MSG_MAIN_MENU                      = _UxGT("„É°„Ç§„É≥");                       // "Main"
-  LSTR MSG_RUN_AUTO_FILES                 = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑");                   // "Autostart"
-  LSTR MSG_DISABLE_STEPPERS               = _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï");            // "Disable steppers"
-  LSTR MSG_DEBUG_MENU                     = _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº");                // "Debug Menu"
-  LSTR MSG_PROGRESS_BAR_TEST              = _UxGT("„Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº „ÉÜ„Çπ„Éà");            // "Progress Bar Test"
-  LSTR MSG_AUTO_HOME                      = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");                  // "Auto home"
-  LSTR MSG_AUTO_HOME_X                    = _UxGT("X„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home X"
-  LSTR MSG_AUTO_HOME_Y                    = _UxGT("Y„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home Y"
-  LSTR MSG_AUTO_HOME_Z                    = _UxGT("Z„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home Z"
-  LSTR MSG_LEVEL_BED_HOMING               = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠„ÉÅ„É•„Ç¶");              // "Homing XYZ"
-  LSTR MSG_LEVEL_BED_WAITING              = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„Ç§„Ç∑");                // "Click to Begin"
-  LSTR MSG_LEVEL_BED_NEXT_POINT           = _UxGT("„ÉÑ„ÇÆ„Éé„ÇΩ„ÇØ„ÉÜ„Ç§„ÉÜ„É≥„Éò");             // "Next Point"
-  LSTR MSG_LEVEL_BED_DONE                 = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶");              // "Leveling Done!"
-  LSTR MSG_SET_HOME_OFFSETS               = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§");         // "Set home offsets"
-  LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");       // "Offsets applied"
+  LSTR MSG_LCD_ENDSTOPS                   = _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó"); // "Endstops" // Max length 8 characters
+  LSTR MSG_MAIN_MENU                      = _UxGT("„É°„Ç§„É≥"); // "Main"
+  LSTR MSG_RUN_AUTO_FILES                 = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑"); // "Autostart"
+  LSTR MSG_DISABLE_STEPPERS               = _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï"); // "Disable steppers"
+  LSTR MSG_DEBUG_MENU                     = _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº"); // "Debug Menu"
+  LSTR MSG_PROGRESS_BAR_TEST              = _UxGT("„Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº „ÉÜ„Çπ„Éà"); // "Progress Bar Test"
+  LSTR MSG_AUTO_HOME                      = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠"); // "Auto home"
+  LSTR MSG_AUTO_HOME_X                    = _UxGT("X„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠"); // "Home X"
+  LSTR MSG_AUTO_HOME_Y                    = _UxGT("Y„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠"); // "Home Y"
+  LSTR MSG_AUTO_HOME_Z                    = _UxGT("Z„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠"); // "Home Z"
+  LSTR MSG_LEVEL_BED_HOMING               = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠„ÉÅ„É•„Ç¶"); // "Homing XYZ"
+  LSTR MSG_LEVEL_BED_WAITING              = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„Ç§„Ç∑"); // "Click to Begin"
+  LSTR MSG_LEVEL_BED_NEXT_POINT           = _UxGT("„ÉÑ„ÇÆ„Éé„ÇΩ„ÇØ„ÉÜ„Ç§„ÉÜ„É≥„Éò"); // "Next Point"
+  LSTR MSG_LEVEL_BED_DONE                 = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶"); // "Leveling Done!"
+  LSTR MSG_SET_HOME_OFFSETS               = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§"); // "Set home offsets"
+  LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø"); // "Offsets applied"
   #if HAS_PREHEAT
-    LSTR MSG_PREHEAT_1                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
-    LSTR MSG_PREHEAT_1_H                  = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
-    LSTR MSG_PREHEAT_1_END                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
-    LSTR MSG_PREHEAT_1_END_E              = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
-    LSTR MSG_PREHEAT_1_ALL                = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
-    LSTR MSG_PREHEAT_1_BEDONLY            = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
-    LSTR MSG_PREHEAT_1_SETTINGS           = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+    LSTR MSG_PREHEAT_1                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ"); // "Preheat " PREHEAT_1_LABEL
+    LSTR MSG_PREHEAT_1_H                  = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~"); // "Preheat " PREHEAT_1_LABEL
+    LSTR MSG_PREHEAT_1_END                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´"); // " Nozzle"
+    LSTR MSG_PREHEAT_1_END_E              = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~"); // " Nozzle"
+    LSTR MSG_PREHEAT_1_ALL                = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ"); // " All"
+    LSTR MSG_PREHEAT_1_BEDONLY            = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ"); // " Bed"
+    LSTR MSG_PREHEAT_1_SETTINGS           = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§"); // " conf"
 
-    LSTR MSG_PREHEAT_M                    = _UxGT("$ „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
-    LSTR MSG_PREHEAT_M_H                  = _UxGT("$ „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
-    LSTR MSG_PREHEAT_M_END                = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
-    LSTR MSG_PREHEAT_M_END_E              = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
-    LSTR MSG_PREHEAT_M_ALL                = _UxGT("$ „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
-    LSTR MSG_PREHEAT_M_BEDONLY            = _UxGT("$ „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
-    LSTR MSG_PREHEAT_M_SETTINGS           = _UxGT("$ „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+    LSTR MSG_PREHEAT_M                    = _UxGT("$ „É®„Éç„ÉÑ"); // "Preheat " PREHEAT_1_LABEL
+    LSTR MSG_PREHEAT_M_H                  = _UxGT("$ „É®„Éç„ÉÑ ~"); // "Preheat " PREHEAT_1_LABEL
+    LSTR MSG_PREHEAT_M_END                = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´"); // " Nozzle"
+    LSTR MSG_PREHEAT_M_END_E              = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~"); // " Nozzle"
+    LSTR MSG_PREHEAT_M_ALL                = _UxGT("$ „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ"); // " All"
+    LSTR MSG_PREHEAT_M_BEDONLY            = _UxGT("$ „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ"); // " Bed"
+    LSTR MSG_PREHEAT_M_SETTINGS           = _UxGT("$ „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§"); // " conf"
   #endif
-  LSTR MSG_COOLDOWN                       = _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑");                  // "Cooldown"
-  LSTR MSG_SWITCH_PS_ON                   = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥");                 // "Switch power on"
-  LSTR MSG_SWITCH_PS_OFF                  = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï");                 // "Switch power off"
-  LSTR MSG_EXTRUDE                        = _UxGT("„Ç™„Ç∑„ÉÄ„Ç∑");                     // "Extrude"
-  LSTR MSG_RETRACT                        = _UxGT("„Éí„Ç≠„Ç≥„Éü„Çª„ÉÉ„ÉÜ„Ç§");                // "Retract"
-  LSTR MSG_MOVE_AXIS                      = _UxGT("„Ç∏„ÇØ„Ç§„Éâ„Ç¶");                    // "Move axis"
-  LSTR MSG_BED_LEVELING                   = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞");                // "Bed leveling"
-  LSTR MSG_LEVEL_BED                      = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞");                // "Level bed"
+  LSTR MSG_COOLDOWN                       = _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑"); // "Cooldown"
+  LSTR MSG_SWITCH_PS_ON                   = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥"); // "Switch power on"
+  LSTR MSG_SWITCH_PS_OFF                  = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï"); // "Switch power off"
+  LSTR MSG_EXTRUDE                        = _UxGT("„Ç™„Ç∑„ÉÄ„Ç∑"); // "Extrude"
+  LSTR MSG_RETRACT                        = _UxGT("„Éí„Ç≠„Ç≥„Éü„Çª„ÉÉ„ÉÜ„Ç§"); // "Retract"
+  LSTR MSG_MOVE_AXIS                      = _UxGT("„Ç∏„ÇØ„Ç§„Éâ„Ç¶"); // "Move axis"
+  LSTR MSG_BED_LEVELING                   = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞"); // "Bed leveling"
+  LSTR MSG_LEVEL_BED                      = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞"); // "Level bed"
 
-  LSTR MSG_MOVING                         = _UxGT("„Ç§„Éâ„Ç¶„ÉÅ„É•„Ç¶");                   // "Moving..."
-  LSTR MSG_FREE_XY                        = _UxGT("XY„Ç∏„ÇØ „Ç´„Ç§„Éõ„Ç¶");                // "Free XY"
-  LSTR MSG_MOVE_X                         = _UxGT("X„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move X"
-  LSTR MSG_MOVE_Y                         = _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Y"
-  LSTR MSG_MOVE_Z                         = _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Z"
-  LSTR MSG_MOVE_N                         = _UxGT("@„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move @"
-  LSTR MSG_MOVE_E                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");                // "Extruder"
-  LSTR MSG_MOVE_EN                        = _UxGT("* „Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");              // "En"
-  LSTR MSG_MOVE_N_MM                      = _UxGT("$mm „Ç§„Éâ„Ç¶");                    // "Move 0.025mm"
-  LSTR MSG_MOVE_01MM                      = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
-  LSTR MSG_MOVE_1MM                       = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"
-  LSTR MSG_MOVE_10MM                      = _UxGT(" 10mm „Ç§„Éâ„Ç¶");                 // "Move 10mm"
-  LSTR MSG_MOVE_50MM                      = _UxGT(" 50mm „Ç§„Éâ„Ç¶");                 // "Move 50mm"
-  LSTR MSG_MOVE_100MM                     = _UxGT(" 100mm „Ç§„Éâ„Ç¶");                 // "Move 100mm"
-  LSTR MSG_SPEED                          = _UxGT("„ÇΩ„ÇØ„Éâ");                       // "Speed"
-  LSTR MSG_MESH_Z_OFFSET                  = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Bed Z"
-  LSTR MSG_NOZZLE                         = _UxGT("„Éé„Ç∫„É´");                       // "Nozzle"
-  LSTR MSG_BED                            = _UxGT("„Éô„ÉÉ„Éâ");                       // "Bed"
-  LSTR MSG_FAN_SPEED                      = _UxGT("„Éï„Ç°„É≥„ÇΩ„ÇØ„Éâ");                    // "Fan speed"
-  LSTR MSG_FLOW                           = _UxGT("„Éà„Ç∑„É•„ÉÑ„É™„Éß„Ç¶");                   // "Flow"
-  LSTR MSG_CONTROL                        = _UxGT("„Çª„Ç§„ÇÆ„Éß");                      // "Control"
+  LSTR MSG_MOVING                         = _UxGT("„Ç§„Éâ„Ç¶„ÉÅ„É•„Ç¶"); // "Moving..."
+  LSTR MSG_FREE_XY                        = _UxGT("XY„Ç∏„ÇØ „Ç´„Ç§„Éõ„Ç¶"); // "Free XY"
+  LSTR MSG_MOVE_X                         = _UxGT("X„Ç∏„ÇØ „Ç§„Éâ„Ç¶"); // "Move X"
+  LSTR MSG_MOVE_Y                         = _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶"); // "Move Y"
+  LSTR MSG_MOVE_Z                         = _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶"); // "Move Z"
+  LSTR MSG_MOVE_N                         = _UxGT("@„Ç∏„ÇØ „Ç§„Éâ„Ç¶"); // "Move @"
+  LSTR MSG_MOVE_E                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº"); // "Extruder"
+  LSTR MSG_MOVE_EN                        = _UxGT("* „Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº"); // "En"
+  LSTR MSG_MOVE_N_MM                      = _UxGT("$mm „Ç§„Éâ„Ç¶"); // "Move 0.025mm"
+  LSTR MSG_MOVE_01MM                      = _UxGT("0.1mm „Ç§„Éâ„Ç¶"); // "Move 0.1mm"
+  LSTR MSG_MOVE_1MM                       = _UxGT("  1mm „Ç§„Éâ„Ç¶"); // "Move 1mm"
+  LSTR MSG_MOVE_10MM                      = _UxGT(" 10mm „Ç§„Éâ„Ç¶"); // "Move 10mm"
+  LSTR MSG_MOVE_50MM                      = _UxGT(" 50mm „Ç§„Éâ„Ç¶"); // "Move 50mm"
+  LSTR MSG_MOVE_100MM                     = _UxGT(" 100mm „Ç§„Éâ„Ç¶"); // "Move 100mm"
+  LSTR MSG_SPEED                          = _UxGT("„ÇΩ„ÇØ„Éâ"); // "Speed"
+  LSTR MSG_MESH_Z_OFFSET                  = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà"); // "Bed Z"
+  LSTR MSG_NOZZLE                         = _UxGT("„Éé„Ç∫„É´"); // "Nozzle"
+  LSTR MSG_BED                            = _UxGT("„Éô„ÉÉ„Éâ"); // "Bed"
+  LSTR MSG_FAN_SPEED                      = _UxGT("„Éï„Ç°„É≥„ÇΩ„ÇØ„Éâ"); // "Fan speed"
+  LSTR MSG_FLOW                           = _UxGT("„Éà„Ç∑„É•„ÉÑ„É™„Éß„Ç¶"); // "Flow"
+  LSTR MSG_CONTROL                        = _UxGT("„Çª„Ç§„ÇÆ„Éß"); // "Control"
   LSTR MSG_MIN                            = " " LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„ÉÜ„Ç§"); // " Min"
   LSTR MSG_MAX                            = " " LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„Ç≥„Ç¶"); // " Max"
   LSTR MSG_FACTOR                         = " " LCD_STR_THERMOMETER _UxGT(" „Éï„Ç°„ÇØ„Çø„Éº"); // " Fact"
-  LSTR MSG_AUTOTEMP                       = _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß");               // "Autotemp"
-  LSTR MSG_LCD_ON                         = _UxGT("„Ç™„É≥");                         // "On"
-  LSTR MSG_LCD_OFF                        = _UxGT("„Ç™„Éï");                         // "Off"
+  LSTR MSG_AUTOTEMP                       = _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß"); // "Autotemp"
+  LSTR MSG_LCD_ON                         = _UxGT("„Ç™„É≥"); // "On"
+  LSTR MSG_LCD_OFF                        = _UxGT("„Ç™„Éï"); // "Off"
   LSTR MSG_SELECT_E                       = _UxGT("„Çª„É≥„Çø„ÇØ *");
-  LSTR MSG_ACC                            = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
-  LSTR MSG_JERK                           = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s");                  // "Jerk"
-  LSTR MSG_VA_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_A;             // "Va-jerk"
-  LSTR MSG_VB_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_B;             // "Vb-jerk"
-  LSTR MSG_VC_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_C;             // "Vc-jerk"
-  LSTR MSG_VN_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s@");                  // "V@-jerk"
+  LSTR MSG_ACC                            = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO; // "Accel"
+  LSTR MSG_JERK                           = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s"); // "Jerk"
+  LSTR MSG_VA_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_A; // "Va-jerk"
+  LSTR MSG_VB_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_B; // "Vb-jerk"
+  LSTR MSG_VC_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_C; // "Vc-jerk"
+  LSTR MSG_VN_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s@"); // "V@-jerk"
   LSTR MSG_A_STEPS                        = STR_A _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   LSTR MSG_B_STEPS                        = STR_B _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   LSTR MSG_C_STEPS                        = STR_C _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   LSTR MSG_N_STEPS                        = _UxGT("@„Çπ„ÉÜ„ÉÉ„Éó/mm");
-  LSTR MSG_VE_JERK                        = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ");          // "Ve-jerk"
-  LSTR MSG_VMAX_A                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_A;  // "Vmax A"
-  LSTR MSG_VMAX_B                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_B;  // "Vmax B"
-  LSTR MSG_VMAX_C                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_C;  // "Vmax C"
-  LSTR MSG_VMAX_E                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ E");  // "Vmax E"
-  LSTR MSG_VMAX_EN                        = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *");  // "Vmax E1"
-  LSTR MSG_VMIN                           = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
-  LSTR MSG_VTRAV_MIN                      = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
-  LSTR MSG_ACCELERATION                   = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
-  LSTR MSG_A_RETRACT                      = _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ");               // "A-retract"
-  LSTR MSG_A_TRAVEL                       = _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ");                // "A-travel"
-  LSTR MSG_TEMPERATURE                    = _UxGT("„Ç™„É≥„Éâ");                      // "Temperature"
-  LSTR MSG_MOTION                         = _UxGT("„Ç¶„Ç¥„Ç≠„Çª„ÉÉ„ÉÜ„Ç§");                // "Motion"
-  LSTR MSG_FILAMENT                       = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà");                   // "Filament"
+  LSTR MSG_VE_JERK                        = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ"); // "Ve-jerk"
+  LSTR MSG_VMAX_A                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_A; // "Vmax A"
+  LSTR MSG_VMAX_B                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_B; // "Vmax B"
+  LSTR MSG_VMAX_C                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_C; // "Vmax C"
+  LSTR MSG_VMAX_E                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ E"); // "Vmax E"
+  LSTR MSG_VMAX_EN                        = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *"); // "Vmax E1"
+  LSTR MSG_VMIN                           = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ"); // "Vmin"
+  LSTR MSG_VTRAV_MIN                      = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ"); // "VTrav min"
+  LSTR MSG_ACCELERATION                   = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO; // "Accel"
+  LSTR MSG_A_RETRACT                      = _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ"); // "A-retract"
+  LSTR MSG_A_TRAVEL                       = _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ"); // "A-travel"
+  LSTR MSG_TEMPERATURE                    = _UxGT("„Ç™„É≥„Éâ"); // "Temperature"
+  LSTR MSG_MOTION                         = _UxGT("„Ç¶„Ç¥„Ç≠„Çª„ÉÉ„ÉÜ„Ç§"); // "Motion"
+  LSTR MSG_FILAMENT                       = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà"); // "Filament"
   LSTR MSG_VOLUMETRIC_ENABLED             = _UxGT("E in mm") SUPERSCRIPT_THREE;
-  LSTR MSG_FILAMENT_DIAM                  = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§");            // "Fil. Dia."
+  LSTR MSG_FILAMENT_DIAM                  = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§"); // "Fil. Dia."
   LSTR MSG_FILAMENT_DIAM_E                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ *");
-  LSTR MSG_CONTRAST                       = _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà");               // "LCD contrast"
-  LSTR MSG_STORE_EEPROM                   = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
-  LSTR MSG_LOAD_EEPROM                    = _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü");               // "Load memory"
-  LSTR MSG_RESTORE_DEFAULTS               = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà");               // "Restore Defaults"
-  LSTR MSG_REFRESH                        = LCD_STR_REFRESH  _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•");                  // "Refresh"
-  LSTR MSG_INFO_SCREEN                    = _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥");               // "Info screen"
-  LSTR MSG_PREPARE                        = _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§");               // "Prepare"
-  LSTR MSG_TUNE                           = _UxGT("„ÉÅ„Éß„Ç¶„Çª„Ç§");                    // "Tune"
-  LSTR MSG_PAUSE_PRINT                    = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");                  // "Pause print"
-  LSTR MSG_RESUME_PRINT                   = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
-  LSTR MSG_STOP_PRINT                     = _UxGT("„Éó„É™„É≥„Éà„ÉÜ„Ç§„Ç∑");                 // "Stop print"
-  LSTR MSG_MEDIA_MENU                     = _UxGT("„É°„Éá„Ç£„Ç¢„Ç´„É©„Éó„É™„É≥„Éà");            // "Print from SD"
-  LSTR MSG_NO_MEDIA                       = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
-  LSTR MSG_DWELL                          = _UxGT("„Ç≠„É•„Ç¶„Ç∑");                     // "Sleep..."
-  LSTR MSG_USERWAIT                       = _UxGT("„ÉÑ„ÉÖ„Ç±„É´„Éã„Éè„ÇØ„É™„ÉÉ„ÇØ„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");  // "Wait for user..."
-  LSTR MSG_PRINT_ABORTED                  = _UxGT("„Éó„É™„É≥„Éà„Ç¨„ÉÅ„É•„Ç¶„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");       // "Print aborted"
-  LSTR MSG_NO_MOVE                        = _UxGT("„Ç¶„Ç¥„Ç≠„Éû„Çª„É≥");                  // "No move."
-  LSTR MSG_KILLED                         = _UxGT("„Éí„Ç∏„Éß„Ç¶„ÉÜ„Ç§„Ç∑");                  // "KILLED. "
-  LSTR MSG_STOPPED                        = _UxGT("„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");                  // "STOPPED. "
-  LSTR MSG_CONTROL_RETRACT                = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶ mm");                // "Retract mm"
-  LSTR MSG_CONTROL_RETRACT_SWAP           = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶S mm");               // "Swap Re.mm"
-  LSTR MSG_CONTROL_RETRACTF               = _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s");             // "Retract V"
-  LSTR MSG_CONTROL_RETRACT_ZHOP           = _UxGT("„Éé„Ç∫„É´„Çø„Ç§„Éí mm");                // "Hop mm"
-  LSTR MSG_CONTROL_RETRACT_RECOVER        = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm");               // "Unretr. mm"
-  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAP   = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm");              // "S Unretr. mm"
-  LSTR MSG_CONTROL_RETRACT_RECOVERF       = _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s");            // "Unretract V"
-  LSTR MSG_AUTORETRACT                    = _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü");                 // "Auto-Retract"
-  LSTR MSG_FILAMENTCHANGE                 = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥");              // "Change filament"
-  LSTR MSG_ATTACH_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü");             // "Init. SD card"
-  LSTR MSG_CHANGE_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥");               // "Change SD card"
-  LSTR MSG_ZPROBE_OUT                     = _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§");            // "Z probe out. bed"
-  LSTR MSG_BLTOUCH_SELFTEST               = _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥");          // "BLTouch Self-Test"
-  LSTR MSG_BLTOUCH_RESET                  = _UxGT("BLTouch „É™„Çª„ÉÉ„Éà");             // "Reset BLTouch"
+  LSTR MSG_CONTRAST                       = _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà"); // "LCD contrast"
+  LSTR MSG_STORE_EEPROM                   = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥"); // "Store memory"
+  LSTR MSG_LOAD_EEPROM                    = _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü"); // "Load memory"
+  LSTR MSG_RESTORE_DEFAULTS               = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà"); // "Restore Defaults"
+  LSTR MSG_REFRESH                        = LCD_STR_REFRESH _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•"); // "Refresh"
+  LSTR MSG_INFO_SCREEN                    = _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥"); // "Info screen"
+  LSTR MSG_PREPARE                        = _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§"); // "Prepare"
+  LSTR MSG_TUNE                           = _UxGT("„ÉÅ„Éß„Ç¶„Çª„Ç§"); // "Tune"
+  LSTR MSG_PAUSE_PRINT                    = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑"); // "Pause print"
+  LSTR MSG_RESUME_PRINT                   = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§"); // "Resume print"
+  LSTR MSG_STOP_PRINT                     = _UxGT("„Éó„É™„É≥„Éà„ÉÜ„Ç§„Ç∑"); // "Stop print"
+  LSTR MSG_MEDIA_MENU                     = _UxGT("„É°„Éá„Ç£„Ç¢„Ç´„É©„Éó„É™„É≥„Éà"); // "Print from SD"
+  LSTR MSG_NO_MEDIA                       = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥"); // "Card removed"
+  LSTR MSG_DWELL                          = _UxGT("„Ç≠„É•„Ç¶„Ç∑"); // "Sleep..."
+  LSTR MSG_USERWAIT                       = _UxGT("„ÉÑ„ÉÖ„Ç±„É´„Éã„Éè„ÇØ„É™„ÉÉ„ÇØ„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§"); // "Wait for user..."
+  LSTR MSG_PRINT_ABORTED                  = _UxGT("„Éó„É™„É≥„Éà„Ç¨„ÉÅ„É•„Ç¶„Ç∑„Çµ„É¨„Éû„Ç∑„Çø"); // "Print aborted"
+  LSTR MSG_NO_MOVE                        = _UxGT("„Ç¶„Ç¥„Ç≠„Éû„Çª„É≥"); // "No move."
+  LSTR MSG_KILLED                         = _UxGT("„Éí„Ç∏„Éß„Ç¶„ÉÜ„Ç§„Ç∑"); // "KILLED. "
+  LSTR MSG_STOPPED                        = _UxGT("„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø"); // "STOPPED. "
+  LSTR MSG_CONTROL_RETRACT                = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶ mm"); // "Retract mm"
+  LSTR MSG_CONTROL_RETRACT_SWAP           = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶S mm"); // "Swap Re.mm"
+  LSTR MSG_CONTROL_RETRACTF               = _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s"); // "Retract V"
+  LSTR MSG_CONTROL_RETRACT_ZHOP           = _UxGT("„Éé„Ç∫„É´„Çø„Ç§„Éí mm"); // "Hop mm"
+  LSTR MSG_CONTROL_RETRACT_RECOVER        = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm"); // "Unretr. mm"
+  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAP   = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm"); // "S Unretr. mm"
+  LSTR MSG_CONTROL_RETRACT_RECOVERF       = _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s"); // "Unretract V"
+  LSTR MSG_AUTORETRACT                    = _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü"); // "Auto-Retract"
+  LSTR MSG_FILAMENTCHANGE                 = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥"); // "Change filament"
+  LSTR MSG_ATTACH_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü"); // "Init. SD card"
+  LSTR MSG_CHANGE_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥"); // "Change SD card"
+  LSTR MSG_ZPROBE_OUT                     = _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§"); // "Z probe out. bed"
+  LSTR MSG_BLTOUCH_SELFTEST               = _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥"); // "BLTouch Self-Test"
+  LSTR MSG_BLTOUCH_RESET                  = _UxGT("BLTouch „É™„Çª„ÉÉ„Éà"); // "Reset BLTouch"
   LSTR MSG_HOME_FIRST                     = _UxGT("„Çµ„Ç≠„Éã %s „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§"); // "Home ... first"
-  LSTR MSG_ZPROBE_ZOFFSET                 = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Z Offset"
-  LSTR MSG_BABYSTEP_X                     = _UxGT("X„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep X"
-  LSTR MSG_BABYSTEP_Y                     = _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Y"
-  LSTR MSG_BABYSTEP_Z                     = _UxGT("Z„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Z"
-  LSTR MSG_ENDSTOP_ABORT                  = _UxGT("„Ç§„Éâ„Ç¶„Ç≤„É≥„Ç´„Ç§„Ç±„É≥„ÉÅ„Ç≠„Éé„Ç¶");         // "Endstop abort"
-  LSTR MSG_HEATING_FAILED_LCD             = _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§");                 // "Heating failed"
-  LSTR MSG_ERR_REDUNDANT_TEMP             = _UxGT("„Ç®„É©„Éº:„Ç∏„Éß„Ç¶„ÉÅ„Éß„Ç¶„Çµ„Éº„Éü„Çπ„Çø„Éº„Ç≠„Éé„Ç¶");  // "Err: REDUNDANT TEMP"
-  LSTR MSG_THERMAL_RUNAWAY                = _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶");                   // "THERMAL RUNAWAY"
-  LSTR MSG_ERR_MAXTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´");         // "Err: MAXTEMP"
-  LSTR MSG_ERR_MINTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");          // "Err: MINTEMP"
-  LSTR MSG_HALTED                         = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");         // "PRINTER HALTED"
-  LSTR MSG_PLEASE_RESET                   = _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");              // "Please reset"
-  LSTR MSG_HEATING                        = _UxGT("„Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");                   // "Heating..."
-  LSTR MSG_BED_HEATING                    = _UxGT("„Éô„ÉÉ„Éâ „Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");              // "Bed Heating..."
-  LSTR MSG_DELTA_CALIBRATE                = _UxGT("„Éá„É´„Çø „Ç≥„Ç¶„Çª„Ç§");                // "Delta Calibration"
-  LSTR MSG_DELTA_CALIBRATE_X              = _UxGT("X„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate X"
-  LSTR MSG_DELTA_CALIBRATE_Y              = _UxGT("Y„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate Y"
-  LSTR MSG_DELTA_CALIBRATE_Z              = _UxGT("Z„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate Z"
-  LSTR MSG_DELTA_CALIBRATE_CENTER         = _UxGT("„ÉÅ„É•„Ç¶„Ç∑„É≥ „Ç≥„Ç¶„Çª„Ç§");              // "Calibrate Center"
-  LSTR MSG_INFO_MENU                      = _UxGT("„Ç≥„Éé„Éó„É™„É≥„Çø„Éº„Éã„ÉÑ„Ç§„ÉÜ");             // "About Printer"
-  LSTR MSG_INFO_PRINTER_MENU              = _UxGT("„Éó„É™„É≥„Çø„Éº„Ç∏„Éß„Ç¶„Éõ„Ç¶");              // "Printer Info"
-  LSTR MSG_INFO_STATS_MENU                = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Éß„Ç¶„Ç≠„Éß„Ç¶");              // "Printer Stats"
-  LSTR MSG_INFO_BOARD_MENU                = _UxGT("„Çª„Ç§„ÇÆ„Éß„Ç±„Ç§„Ç∏„Éß„Ç¶„Éõ„Ç¶");            // "Board Info"
-  LSTR MSG_INFO_THERMISTOR_MENU           = _UxGT("„Çµ„Éº„Éü„Çπ„Çø„Éº");                   // "Thermistors"
-  LSTR MSG_INFO_EXTRUDERS                 = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº„Çπ„Ç¶");             // "Extruders"
-  LSTR MSG_INFO_BAUDRATE                  = _UxGT("„Éú„Éº„É¨„Éº„Éà");                    // "Baud"
-  LSTR MSG_INFO_PROTOCOL                  = _UxGT("„Éó„É≠„Éà„Ç≥„É´");                    // "Protocol"
-  LSTR MSG_CASE_LIGHT                     = _UxGT("„Ç≠„Éß„Ç¶„Çø„Ç§„Éä„Ç§„Ç∑„Éß„Ç¶„É°„Ç§");       // "Case light"
-  LSTR MSG_INFO_PRINT_COUNT               = _UxGT("„Éó„É™„É≥„Éà„Çπ„Ç¶ ");                  // "Print Count"
-  LSTR MSG_INFO_COMPLETED_PRINTS          = _UxGT("„Ç´„É≥„É™„Éß„Ç¶„Çπ„Ç¶");                  // "Completed"
-  LSTR MSG_INFO_PRINT_TIME                = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥„É´„Ç§„Ç±„Ç§");            // "Total print time"
-  LSTR MSG_INFO_PRINT_LONGEST             = _UxGT("„Çµ„Ç§„ÉÅ„Éß„Ç¶„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥");           // "Longest job time"
-  LSTR MSG_INFO_PRINT_FILAMENT            = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç∑„É®„Ç¶„É™„Éß„Ç¶„É´„Ç§„Ç±„Ç§");       // "Extruded total"
-  LSTR MSG_INFO_MIN_TEMP                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥");              // "Min Temp"
-  LSTR MSG_INFO_MAX_TEMP                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥");              // "Max Temp"
-  LSTR MSG_INFO_PSU                       = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ");                // "Power Supply"
-  LSTR MSG_DRIVE_STRENGTH                 = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ");              // "Drive Strength"
-  LSTR MSG_DAC_PERCENT_N                  = _UxGT("@ DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "@ Driver %"
-  LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
+  LSTR MSG_ZPROBE_ZOFFSET                 = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà"); // "Z Offset"
+  LSTR MSG_BABYSTEP_X                     = _UxGT("X„Ç∏„ÇØ „Éì„Éâ„Ç¶"); // "Babystep X"
+  LSTR MSG_BABYSTEP_Y                     = _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶"); // "Babystep Y"
+  LSTR MSG_BABYSTEP_Z                     = _UxGT("Z„Ç∏„ÇØ „Éì„Éâ„Ç¶"); // "Babystep Z"
+  LSTR MSG_ENDSTOP_ABORT                  = _UxGT("„Ç§„Éâ„Ç¶„Ç≤„É≥„Ç´„Ç§„Ç±„É≥„ÉÅ„Ç≠„Éé„Ç¶"); // "Endstop abort"
+  LSTR MSG_HEATING_FAILED_LCD             = _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§"); // "Heating failed"
+  LSTR MSG_ERR_REDUNDANT_TEMP             = _UxGT("„Ç®„É©„Éº:„Ç∏„Éß„Ç¶„ÉÅ„Éß„Ç¶„Çµ„Éº„Éü„Çπ„Çø„Éº„Ç≠„Éé„Ç¶"); // "Err: REDUNDANT TEMP"
+  LSTR MSG_THERMAL_RUNAWAY                = _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶"); // "THERMAL RUNAWAY"
+  LSTR MSG_ERR_MAXTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´"); // "Err: MAXTEMP"
+  LSTR MSG_ERR_MINTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥"); // "Err: MINTEMP"
+  LSTR MSG_HALTED                         = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø"); // "PRINTER HALTED"
+  LSTR MSG_PLEASE_RESET                   = _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§"); // "Please reset"
+  LSTR MSG_HEATING                        = _UxGT("„Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶"); // "Heating..."
+  LSTR MSG_BED_HEATING                    = _UxGT("„Éô„ÉÉ„Éâ „Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶"); // "Bed Heating..."
+  LSTR MSG_DELTA_CALIBRATE                = _UxGT("„Éá„É´„Çø „Ç≥„Ç¶„Çª„Ç§"); // "Delta Calibration"
+  LSTR MSG_DELTA_CALIBRATE_X              = _UxGT("X„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§"); // "Calibrate X"
+  LSTR MSG_DELTA_CALIBRATE_Y              = _UxGT("Y„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§"); // "Calibrate Y"
+  LSTR MSG_DELTA_CALIBRATE_Z              = _UxGT("Z„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§"); // "Calibrate Z"
+  LSTR MSG_DELTA_CALIBRATE_CENTER         = _UxGT("„ÉÅ„É•„Ç¶„Ç∑„É≥ „Ç≥„Ç¶„Çª„Ç§"); // "Calibrate Center"
+  LSTR MSG_INFO_MENU                      = _UxGT("„Ç≥„Éé„Éó„É™„É≥„Çø„Éº„Éã„ÉÑ„Ç§„ÉÜ"); // "About Printer"
+  LSTR MSG_INFO_PRINTER_MENU              = _UxGT("„Éó„É™„É≥„Çø„Éº„Ç∏„Éß„Ç¶„Éõ„Ç¶"); // "Printer Info"
+  LSTR MSG_INFO_STATS_MENU                = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Éß„Ç¶„Ç≠„Éß„Ç¶"); // "Printer Stats"
+  LSTR MSG_INFO_BOARD_MENU                = _UxGT("„Çª„Ç§„ÇÆ„Éß„Ç±„Ç§„Ç∏„Éß„Ç¶„Éõ„Ç¶"); // "Board Info"
+  LSTR MSG_INFO_THERMISTOR_MENU           = _UxGT("„Çµ„Éº„Éü„Çπ„Çø„Éº"); // "Thermistors"
+  LSTR MSG_INFO_EXTRUDERS                 = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº„Çπ„Ç¶"); // "Extruders"
+  LSTR MSG_INFO_BAUDRATE                  = _UxGT("„Éú„Éº„É¨„Éº„Éà"); // "Baud"
+  LSTR MSG_INFO_PROTOCOL                  = _UxGT("„Éó„É≠„Éà„Ç≥„É´"); // "Protocol"
+  LSTR MSG_CASE_LIGHT                     = _UxGT("„Ç≠„Éß„Ç¶„Çø„Ç§„Éä„Ç§„Ç∑„Éß„Ç¶„É°„Ç§"); // "Case light"
+  LSTR MSG_INFO_PRINT_COUNT               = _UxGT("„Éó„É™„É≥„Éà„Çπ„Ç¶ "); // "Print Count"
+  LSTR MSG_INFO_COMPLETED_PRINTS          = _UxGT("„Ç´„É≥„É™„Éß„Ç¶„Çπ„Ç¶"); // "Completed"
+  LSTR MSG_INFO_PRINT_TIME                = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥„É´„Ç§„Ç±„Ç§"); // "Total print time"
+  LSTR MSG_INFO_PRINT_LONGEST             = _UxGT("„Çµ„Ç§„ÉÅ„Éß„Ç¶„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥"); // "Longest job time"
+  LSTR MSG_INFO_PRINT_FILAMENT            = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç∑„É®„Ç¶„É™„Éß„Ç¶„É´„Ç§„Ç±„Ç§"); // "Extruded total"
+  LSTR MSG_INFO_MIN_TEMP                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥"); // "Min Temp"
+  LSTR MSG_INFO_MAX_TEMP                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥"); // "Max Temp"
+  LSTR MSG_INFO_PSU                       = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ"); // "Power Supply"
+  LSTR MSG_DRIVE_STRENGTH                 = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ"); // "Drive Strength"
+  LSTR MSG_DAC_PERCENT_N                  = _UxGT("@ DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %"); // "@ Driver %"
+  LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥"); // "Store memory"
   LSTR MSG_FILAMENT_CHANGE_HEADER_PAUSE   = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");
-  LSTR MSG_FILAMENT_CHANGE_OPTION_RESUME  = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
-  LSTR MSG_FILAMENT_CHANGE_INIT           = _UxGT(MSG_2_LINE("„Ç≥„Ç¶„Ç´„É≥„É≤„Ç´„Ç§„Ç∑„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for start of the filament"
-  LSTR MSG_FILAMENT_CHANGE_UNLOAD         = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„Éå„Ç≠„ÉÄ„Ç∑„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament unload"
-  LSTR MSG_FILAMENT_CHANGE_INSERT         = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„É≤„ÇΩ„Ç¶„Éã„É•„Ç¶„Ç∑,", "„ÇØ„É™„ÉÉ„ÇØ„Çπ„É´„Éà„Çæ„ÉÉ„Ç≥„Ç¶„Ç∑„Éû„Çπ"));   // "Insert filament and press button"
-  LSTR MSG_FILAMENT_CHANGE_LOAD           = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„ÇΩ„Ç¶„ÉÜ„É≥„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament load"
-  LSTR MSG_FILAMENT_CHANGE_RESUME         = _UxGT(MSG_2_LINE("„Éó„É™„É≥„Éà„É≤„Çµ„Ç§„Ç´„Ç§„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for print to resume"
+  LSTR MSG_FILAMENT_CHANGE_OPTION_RESUME  = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§"); // "Resume print"
+  LSTR MSG_FILAMENT_CHANGE_INIT           = _UxGT(MSG_2_LINE("„Ç≥„Ç¶„Ç´„É≥„É≤„Ç´„Ç§„Ç∑„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")); // "Wait for start of the filament"
+  LSTR MSG_FILAMENT_CHANGE_UNLOAD         = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„Éå„Ç≠„ÉÄ„Ç∑„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")); // "Wait for filament unload"
+  LSTR MSG_FILAMENT_CHANGE_INSERT         = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„É≤„ÇΩ„Ç¶„Éã„É•„Ç¶„Ç∑,", "„ÇØ„É™„ÉÉ„ÇØ„Çπ„É´„Éà„Çæ„ÉÉ„Ç≥„Ç¶„Ç∑„Éû„Çπ")); // "Insert filament and press button"
+  LSTR MSG_FILAMENT_CHANGE_LOAD           = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„ÇΩ„Ç¶„ÉÜ„É≥„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")); // "Wait for filament load"
+  LSTR MSG_FILAMENT_CHANGE_RESUME         = _UxGT(MSG_2_LINE("„Éó„É™„É≥„Éà„É≤„Çµ„Ç§„Ç´„Ç§„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")); // "Wait for print to resume"
 
-  LSTR MSG_KILL_EXPECTED_PRINTER          = _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº");               // "Wrong printer"
+  LSTR MSG_KILL_EXPECTED_PRINTER          = _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº"); // "Wrong printer"
 
   LSTR MSG_CONFIGURATION                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Ç´„É≥„É™");
   LSTR MSG_ADVANCED_SETTINGS              = _UxGT("„Ç∑„Éß„Ç¶„Çµ„Ç§„Çª„ÉÉ„ÉÜ„Ç§");

commit 92721d1bf7d3516ffa591bf7fa9b0b03099f5156
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 14 17:45:45 2023 -0500

    üö∏ "Main" => "Main Menu"

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 8ed1a7865e..7570710838 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -46,7 +46,7 @@ namespace Language_jp_kana {
   LSTR MSG_MEDIA_REMOVED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
   LSTR MSG_RELEASE_MEDIA                  = _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑");
   LSTR MSG_LCD_ENDSTOPS                   = _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó");                  // "Endstops" // Max length 8 characters
-  LSTR MSG_MAIN                           = _UxGT("„É°„Ç§„É≥");                       // "Main"
+  LSTR MSG_MAIN_MENU                      = _UxGT("„É°„Ç§„É≥");                       // "Main"
   LSTR MSG_RUN_AUTO_FILES                 = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑");                   // "Autostart"
   LSTR MSG_DISABLE_STEPPERS               = _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï");            // "Disable steppers"
   LSTR MSG_DEBUG_MENU                     = _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº");                // "Debug Menu"

commit 96bc084f3d791bc93265f217181986863e8e5fc7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 18 02:15:16 2023 -0600

    üé® Misc. LCD cleanup (#25400)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 335d4533da..8ed1a7865e 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -102,7 +102,7 @@ namespace Language_jp_kana {
   LSTR MSG_MOVE_50MM                      = _UxGT(" 50mm „Ç§„Éâ„Ç¶");                 // "Move 50mm"
   LSTR MSG_MOVE_100MM                     = _UxGT(" 100mm „Ç§„Éâ„Ç¶");                 // "Move 100mm"
   LSTR MSG_SPEED                          = _UxGT("„ÇΩ„ÇØ„Éâ");                       // "Speed"
-  LSTR MSG_BED_Z                          = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Bed Z"
+  LSTR MSG_MESH_Z_OFFSET                  = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Bed Z"
   LSTR MSG_NOZZLE                         = _UxGT("„Éé„Ç∫„É´");                       // "Nozzle"
   LSTR MSG_BED                            = _UxGT("„Éô„ÉÉ„Éâ");                       // "Bed"
   LSTR MSG_FAN_SPEED                      = _UxGT("„Éï„Ç°„É≥„ÇΩ„ÇØ„Éâ");                    // "Fan speed"

commit 7e72981b8cbaa7a6276f6833527e97cb10e060e7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 21 22:57:56 2023 -0600

    üö∏ Fix homing_needed_error language

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 989d5844f6..335d4533da 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -175,7 +175,7 @@ namespace Language_jp_kana {
   LSTR MSG_ZPROBE_OUT                     = _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§");            // "Z probe out. bed"
   LSTR MSG_BLTOUCH_SELFTEST               = _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥");          // "BLTouch Self-Test"
   LSTR MSG_BLTOUCH_RESET                  = _UxGT("BLTouch „É™„Çª„ÉÉ„Éà");             // "Reset BLTouch"
-  LSTR MSG_HOME_FIRST                     = _UxGT("„Çµ„Ç≠„Éã %s%s%s „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§"); // "Home ... first"
+  LSTR MSG_HOME_FIRST                     = _UxGT("„Çµ„Ç≠„Éã %s „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§"); // "Home ... first"
   LSTR MSG_ZPROBE_ZOFFSET                 = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Z Offset"
   LSTR MSG_BABYSTEP_X                     = _UxGT("X„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep X"
   LSTR MSG_BABYSTEP_Y                     = _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Y"

commit d94defc545ad477c82a8bc77e949aa91cdd3e0f2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 15 06:48:17 2023 -0600

    üé® Language / menu cleanup

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 2f75b88759..989d5844f6 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -114,7 +114,6 @@ namespace Language_jp_kana {
   LSTR MSG_AUTOTEMP                       = _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß");               // "Autotemp"
   LSTR MSG_LCD_ON                         = _UxGT("„Ç™„É≥");                         // "On"
   LSTR MSG_LCD_OFF                        = _UxGT("„Ç™„Éï");                         // "Off"
-  LSTR MSG_SELECT                         = _UxGT("„Çª„É≥„Çø„ÇØ");                     // "Select"
   LSTR MSG_SELECT_E                       = _UxGT("„Çª„É≥„Çø„ÇØ *");
   LSTR MSG_ACC                            = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
   LSTR MSG_JERK                           = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s");                  // "Jerk"

commit 5f831768a2576edc679fe06d9bf41c090fced8e1
Author: mikemerryguy <57319047+mikemerryguy@users.noreply.github.com>
Date:   Sat Nov 26 20:14:05 2022 -0500

    üö∏ Add 50mm manual move (#24884)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index bc8c9ba40e..2f75b88759 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -99,6 +99,7 @@ namespace Language_jp_kana {
   LSTR MSG_MOVE_01MM                      = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
   LSTR MSG_MOVE_1MM                       = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"
   LSTR MSG_MOVE_10MM                      = _UxGT(" 10mm „Ç§„Éâ„Ç¶");                 // "Move 10mm"
+  LSTR MSG_MOVE_50MM                      = _UxGT(" 50mm „Ç§„Éâ„Ç¶");                 // "Move 50mm"
   LSTR MSG_MOVE_100MM                     = _UxGT(" 100mm „Ç§„Éâ„Ç¶");                 // "Move 100mm"
   LSTR MSG_SPEED                          = _UxGT("„ÇΩ„ÇØ„Éâ");                       // "Speed"
   LSTR MSG_BED_Z                          = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Bed Z"

commit ed2071aabdebf0c1d9b82b6d8575b8fefae763c4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jul 18 19:52:47 2022 -0500

    ü©π Fix manual move titles (#24518)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 0a53ee50d2..bc8c9ba40e 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -92,7 +92,9 @@ namespace Language_jp_kana {
   LSTR MSG_MOVE_X                         = _UxGT("X„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move X"
   LSTR MSG_MOVE_Y                         = _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Y"
   LSTR MSG_MOVE_Z                         = _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Z"
+  LSTR MSG_MOVE_N                         = _UxGT("@„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move @"
   LSTR MSG_MOVE_E                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");                // "Extruder"
+  LSTR MSG_MOVE_EN                        = _UxGT("* „Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");              // "En"
   LSTR MSG_MOVE_N_MM                      = _UxGT("$mm „Ç§„Éâ„Ç¶");                    // "Move 0.025mm"
   LSTR MSG_MOVE_01MM                      = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
   LSTR MSG_MOVE_1MM                       = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"

commit 8aca38351cd6d33a1202bf9a13890dc8e5eadd49
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 3 22:56:38 2022 -0500

    üßë‚Äçüíª Extend LCD string substitution (#24278)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 01d1c0b987..0a53ee50d2 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -93,7 +93,7 @@ namespace Language_jp_kana {
   LSTR MSG_MOVE_Y                         = _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Y"
   LSTR MSG_MOVE_Z                         = _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Z"
   LSTR MSG_MOVE_E                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");                // "Extruder"
-  LSTR MSG_MOVE_N_MM                      = _UxGT("%smm „Ç§„Éâ„Ç¶");                  // "Move 0.025mm"
+  LSTR MSG_MOVE_N_MM                      = _UxGT("$mm „Ç§„Éâ„Ç¶");                    // "Move 0.025mm"
   LSTR MSG_MOVE_01MM                      = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
   LSTR MSG_MOVE_1MM                       = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"
   LSTR MSG_MOVE_10MM                      = _UxGT(" 10mm „Ç§„Éâ„Ç¶");                 // "Move 10mm"
@@ -118,20 +118,16 @@ namespace Language_jp_kana {
   LSTR MSG_VA_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_A;             // "Va-jerk"
   LSTR MSG_VB_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_B;             // "Vb-jerk"
   LSTR MSG_VC_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_C;             // "Vc-jerk"
-  LSTR MSG_VI_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_I;             // "Va-jerk"
-  LSTR MSG_VJ_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_J;             // "Vb-jerk"
-  LSTR MSG_VK_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_K;             // "Vc-jerk"
+  LSTR MSG_VN_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s@");                  // "V@-jerk"
   LSTR MSG_A_STEPS                        = STR_A _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   LSTR MSG_B_STEPS                        = STR_B _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   LSTR MSG_C_STEPS                        = STR_C _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  LSTR MSG_N_STEPS                        = _UxGT("@„Çπ„ÉÜ„ÉÉ„Éó/mm");
   LSTR MSG_VE_JERK                        = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ");          // "Ve-jerk"
   LSTR MSG_VMAX_A                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_A;  // "Vmax A"
   LSTR MSG_VMAX_B                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_B;  // "Vmax B"
   LSTR MSG_VMAX_C                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_C;  // "Vmax C"
-  LSTR MSG_VMAX_I                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_I;  // "Vmax I"
-  LSTR MSG_VMAX_J                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_J;  // "Vmax J"
-  LSTR MSG_VMAX_K                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_K;  // "Vmax K"
-  LSTR MSG_VMAX_E                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_E;  // "Vmax E"
+  LSTR MSG_VMAX_E                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ E");  // "Vmax E"
   LSTR MSG_VMAX_EN                        = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *");  // "Vmax E1"
   LSTR MSG_VMIN                           = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
   LSTR MSG_VTRAV_MIN                      = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
@@ -215,13 +211,7 @@ namespace Language_jp_kana {
   LSTR MSG_INFO_MAX_TEMP                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥");              // "Max Temp"
   LSTR MSG_INFO_PSU                       = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ");                // "Power Supply"
   LSTR MSG_DRIVE_STRENGTH                 = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ");              // "Drive Strength"
-  LSTR MSG_DAC_PERCENT_A                  = STR_A _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "X Driver %"
-  LSTR MSG_DAC_PERCENT_B                  = STR_B _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Y Driver %"
-  LSTR MSG_DAC_PERCENT_C                  = STR_C _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Z Driver %"
-  LSTR MSG_DAC_PERCENT_I                  = STR_I _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "I Driver %"
-  LSTR MSG_DAC_PERCENT_J                  = STR_J _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "J Driver %"
-  LSTR MSG_DAC_PERCENT_K                  = STR_K _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "K Driver %"
-  LSTR MSG_DAC_PERCENT_E                  = _UxGT("E DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "E Driver %"
+  LSTR MSG_DAC_PERCENT_N                  = _UxGT("@ DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "@ Driver %"
   LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
   LSTR MSG_FILAMENT_CHANGE_HEADER_PAUSE   = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");
   LSTR MSG_FILAMENT_CHANGE_OPTION_RESUME  = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
@@ -249,7 +239,7 @@ namespace Language_jp_kana {
   LSTR MSG_YES                            = _UxGT("„Éè„Ç§");
   LSTR MSG_NO                             = _UxGT("„Ç§„Ç§„Ç®");
   LSTR MSG_BACK                           = _UxGT("„É¢„Éâ„É™");
-  LSTR MSG_VELOCITY                       = _UxGT("„ÇΩ„ÇØ„Éâ");
+  LSTR MSG_MAX_SPEED                      = _UxGT("„ÇΩ„ÇØ„Éâ");
   LSTR MSG_STEPS_PER_MM                   = _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   LSTR MSG_CUSTOM_COMMANDS                = _UxGT("„É¶„Éº„Ç∂„Éº„Ç≥„Éû„É≥„Éâ");
   LSTR MSG_PRINT_PAUSED                   = _UxGT("„Éó„É™„É≥„Éà„Ç¨„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");

commit 23a26e4033763b4c7b8763fd420211423e558d08
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 4 17:03:25 2022 -0500

    üåê Clean up languages

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 164dca8fcf..01d1c0b987 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -61,7 +61,6 @@ namespace Language_jp_kana {
   LSTR MSG_LEVEL_BED_DONE                 = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶");              // "Leveling Done!"
   LSTR MSG_SET_HOME_OFFSETS               = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§");         // "Set home offsets"
   LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");       // "Offsets applied"
-  LSTR MSG_SET_ORIGIN                     = _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà");                 // "Set origin"
   #if HAS_PREHEAT
     LSTR MSG_PREHEAT_1                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
     LSTR MSG_PREHEAT_1_H                  = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL

commit d09a2ee80a057de7e56b13c041f6a7beb8023515
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Tue Mar 1 23:09:11 2022 +0100

    üåê Update German language (#23832)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 3a876a07e3..164dca8fcf 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -137,7 +137,6 @@ namespace Language_jp_kana {
   LSTR MSG_VMIN                           = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
   LSTR MSG_VTRAV_MIN                      = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
   LSTR MSG_ACCELERATION                   = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
-  LSTR MSG_AMAX                           = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç´„ÇΩ„ÇØ„Éâ ");              // "Amax "
   LSTR MSG_A_RETRACT                      = _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ");               // "A-retract"
   LSTR MSG_A_TRAVEL                       = _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ");                // "A-travel"
   LSTR MSG_TEMPERATURE                    = _UxGT("„Ç™„É≥„Éâ");                      // "Temperature"

commit 9665a4434cee0386fa2a63a058b6f2598943ee98
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 10 02:51:34 2022 -0600

    üßë‚Äçüíª Fewer string macros

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 16e605cc25..3a876a07e3 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -116,23 +116,23 @@ namespace Language_jp_kana {
   LSTR MSG_SELECT_E                       = _UxGT("„Çª„É≥„Çø„ÇØ *");
   LSTR MSG_ACC                            = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
   LSTR MSG_JERK                           = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s");                  // "Jerk"
-  LSTR MSG_VA_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_A;             // "Va-jerk"
-  LSTR MSG_VB_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_B;             // "Vb-jerk"
-  LSTR MSG_VC_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_C;             // "Vc-jerk"
-  LSTR MSG_VI_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_I;             // "Va-jerk"
-  LSTR MSG_VJ_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_J;             // "Vb-jerk"
-  LSTR MSG_VK_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_K;             // "Vc-jerk"
-  LSTR MSG_A_STEPS                        = LCD_STR_A _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
-  LSTR MSG_B_STEPS                        = LCD_STR_B _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
-  LSTR MSG_C_STEPS                        = LCD_STR_C _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  LSTR MSG_VA_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_A;             // "Va-jerk"
+  LSTR MSG_VB_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_B;             // "Vb-jerk"
+  LSTR MSG_VC_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_C;             // "Vc-jerk"
+  LSTR MSG_VI_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_I;             // "Va-jerk"
+  LSTR MSG_VJ_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_J;             // "Vb-jerk"
+  LSTR MSG_VK_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") STR_K;             // "Vc-jerk"
+  LSTR MSG_A_STEPS                        = STR_A _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  LSTR MSG_B_STEPS                        = STR_B _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  LSTR MSG_C_STEPS                        = STR_C _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   LSTR MSG_VE_JERK                        = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ");          // "Ve-jerk"
-  LSTR MSG_VMAX_A                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax A"
-  LSTR MSG_VMAX_B                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_B;  // "Vmax B"
-  LSTR MSG_VMAX_C                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_C;  // "Vmax C"
-  LSTR MSG_VMAX_I                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_I;  // "Vmax I"
-  LSTR MSG_VMAX_J                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_J;  // "Vmax J"
-  LSTR MSG_VMAX_K                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_K;  // "Vmax K"
-  LSTR MSG_VMAX_E                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E;  // "Vmax E"
+  LSTR MSG_VMAX_A                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_A;  // "Vmax A"
+  LSTR MSG_VMAX_B                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_B;  // "Vmax B"
+  LSTR MSG_VMAX_C                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_C;  // "Vmax C"
+  LSTR MSG_VMAX_I                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_I;  // "Vmax I"
+  LSTR MSG_VMAX_J                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_J;  // "Vmax J"
+  LSTR MSG_VMAX_K                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_K;  // "Vmax K"
+  LSTR MSG_VMAX_E                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") STR_E;  // "Vmax E"
   LSTR MSG_VMAX_EN                        = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *");  // "Vmax E1"
   LSTR MSG_VMIN                           = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
   LSTR MSG_VTRAV_MIN                      = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
@@ -217,12 +217,12 @@ namespace Language_jp_kana {
   LSTR MSG_INFO_MAX_TEMP                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥");              // "Max Temp"
   LSTR MSG_INFO_PSU                       = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ");                // "Power Supply"
   LSTR MSG_DRIVE_STRENGTH                 = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ");              // "Drive Strength"
-  LSTR MSG_DAC_PERCENT_A                  = LCD_STR_A _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "X Driver %"
-  LSTR MSG_DAC_PERCENT_B                  = LCD_STR_B _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Y Driver %"
-  LSTR MSG_DAC_PERCENT_C                  = LCD_STR_C _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Z Driver %"
-  LSTR MSG_DAC_PERCENT_I                  = LCD_STR_I _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "I Driver %"
-  LSTR MSG_DAC_PERCENT_J                  = LCD_STR_J _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "J Driver %"
-  LSTR MSG_DAC_PERCENT_K                  = LCD_STR_K _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "K Driver %"
+  LSTR MSG_DAC_PERCENT_A                  = STR_A _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "X Driver %"
+  LSTR MSG_DAC_PERCENT_B                  = STR_B _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Y Driver %"
+  LSTR MSG_DAC_PERCENT_C                  = STR_C _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Z Driver %"
+  LSTR MSG_DAC_PERCENT_I                  = STR_I _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "I Driver %"
+  LSTR MSG_DAC_PERCENT_J                  = STR_J _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "J Driver %"
+  LSTR MSG_DAC_PERCENT_K                  = STR_K _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "K Driver %"
   LSTR MSG_DAC_PERCENT_E                  = _UxGT("E DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "E Driver %"
   LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
   LSTR MSG_FILAMENT_CHANGE_HEADER_PAUSE   = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");

commit 1d80464ba77bc576426f15af28a633bf48d769ad
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 27 21:15:58 2021 -0500

    üé® Define HAS_PREHEAT conditional

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 1d291ed3ad..16e605cc25 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -62,7 +62,7 @@ namespace Language_jp_kana {
   LSTR MSG_SET_HOME_OFFSETS               = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§");         // "Set home offsets"
   LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");       // "Offsets applied"
   LSTR MSG_SET_ORIGIN                     = _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà");                 // "Set origin"
-  #if PREHEAT_COUNT
+  #if HAS_PREHEAT
     LSTR MSG_PREHEAT_1                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
     LSTR MSG_PREHEAT_1_H                  = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
     LSTR MSG_PREHEAT_1_END                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"

commit 216a66b42c8240f37befe98e6a410d1e3694ff4e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 19 19:25:01 2021 -0500

    üåê Skip non-essential translations

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 5864280dd5..1d291ed3ad 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -192,9 +192,6 @@ namespace Language_jp_kana {
   LSTR MSG_ERR_MINTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");          // "Err: MINTEMP"
   LSTR MSG_HALTED                         = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");         // "PRINTER HALTED"
   LSTR MSG_PLEASE_RESET                   = _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");              // "Please reset"
-  LSTR MSG_SHORT_DAY                      = _UxGT("d");                          // One character only
-  LSTR MSG_SHORT_HOUR                     = _UxGT("h");                          // One character only
-  LSTR MSG_SHORT_MINUTE                   = _UxGT("m");                          // One character only
   LSTR MSG_HEATING                        = _UxGT("„Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");                   // "Heating..."
   LSTR MSG_BED_HEATING                    = _UxGT("„Éô„ÉÉ„Éâ „Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");              // "Bed Heating..."
   LSTR MSG_DELTA_CALIBRATE                = _UxGT("„Éá„É´„Çø „Ç≥„Ç¶„Çª„Ç§");                // "Delta Calibration"

commit c1d7e234e1aba1ecc91cfc77d17d38b67618c315
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 19 18:40:56 2021 -0500

    üåê Reduce language file sizes

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index c0fe2451b0..5864280dd5 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -34,229 +34,229 @@
 namespace Language_jp_kana {
   using namespace Language_en; // Inherit undefined strings from English
 
-  constexpr uint8_t    CHARSIZE                            = 3;
-  PROGMEM Language_Str LANGUAGE                            = _UxGT("Japanese");
+  constexpr uint8_t CHARSIZE              = 3;
+  LSTR LANGUAGE                           = _UxGT("Japanese");
 
   // This is just to show the potential benefit of Unicode.
   // This translation can be improved by using the full charset of unicode codeblock U+30A0 to U+30FF.
 
   // Áâá‰ªÆÂêçË°®Á§∫ÂÆöÁæ©
-  PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT(" „Ç∏„É•„É≥„Éì„Ç´„É≥„É™„Éß„Ç¶");
-  PROGMEM Language_Str MSG_MEDIA_INSERTED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„ÇΩ„Ç¶„Éã„É•„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");        // "Card inserted"
-  PROGMEM Language_Str MSG_MEDIA_REMOVED                   = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
-  PROGMEM Language_Str MSG_RELEASE_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑");
-  PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó");                  // "Endstops" // Max length 8 characters
-  PROGMEM Language_Str MSG_MAIN                            = _UxGT("„É°„Ç§„É≥");                       // "Main"
-  PROGMEM Language_Str MSG_RUN_AUTO_FILES                  = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑");                   // "Autostart"
-  PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï");            // "Disable steppers"
-  PROGMEM Language_Str MSG_DEBUG_MENU                      = _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº");                // "Debug Menu"
-  PROGMEM Language_Str MSG_PROGRESS_BAR_TEST               = _UxGT("„Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº „ÉÜ„Çπ„Éà");            // "Progress Bar Test"
-  PROGMEM Language_Str MSG_AUTO_HOME                       = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");                  // "Auto home"
-  PROGMEM Language_Str MSG_AUTO_HOME_X                     = _UxGT("X„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home X"
-  PROGMEM Language_Str MSG_AUTO_HOME_Y                     = _UxGT("Y„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home Y"
-  PROGMEM Language_Str MSG_AUTO_HOME_Z                     = _UxGT("Z„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home Z"
-  PROGMEM Language_Str MSG_LEVEL_BED_HOMING                = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠„ÉÅ„É•„Ç¶");              // "Homing XYZ"
-  PROGMEM Language_Str MSG_LEVEL_BED_WAITING               = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„Ç§„Ç∑");                // "Click to Begin"
-  PROGMEM Language_Str MSG_LEVEL_BED_NEXT_POINT            = _UxGT("„ÉÑ„ÇÆ„Éé„ÇΩ„ÇØ„ÉÜ„Ç§„ÉÜ„É≥„Éò");             // "Next Point"
-  PROGMEM Language_Str MSG_LEVEL_BED_DONE                  = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶");              // "Leveling Done!"
-  PROGMEM Language_Str MSG_SET_HOME_OFFSETS                = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§");         // "Set home offsets"
-  PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");       // "Offsets applied"
-  PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà");                 // "Set origin"
+  LSTR WELCOME_MSG                        = MACHINE_NAME _UxGT(" „Ç∏„É•„É≥„Éì„Ç´„É≥„É™„Éß„Ç¶");
+  LSTR MSG_MEDIA_INSERTED                 = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„ÇΩ„Ç¶„Éã„É•„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");        // "Card inserted"
+  LSTR MSG_MEDIA_REMOVED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
+  LSTR MSG_RELEASE_MEDIA                  = _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑");
+  LSTR MSG_LCD_ENDSTOPS                   = _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó");                  // "Endstops" // Max length 8 characters
+  LSTR MSG_MAIN                           = _UxGT("„É°„Ç§„É≥");                       // "Main"
+  LSTR MSG_RUN_AUTO_FILES                 = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑");                   // "Autostart"
+  LSTR MSG_DISABLE_STEPPERS               = _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï");            // "Disable steppers"
+  LSTR MSG_DEBUG_MENU                     = _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº");                // "Debug Menu"
+  LSTR MSG_PROGRESS_BAR_TEST              = _UxGT("„Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº „ÉÜ„Çπ„Éà");            // "Progress Bar Test"
+  LSTR MSG_AUTO_HOME                      = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");                  // "Auto home"
+  LSTR MSG_AUTO_HOME_X                    = _UxGT("X„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home X"
+  LSTR MSG_AUTO_HOME_Y                    = _UxGT("Y„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home Y"
+  LSTR MSG_AUTO_HOME_Z                    = _UxGT("Z„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home Z"
+  LSTR MSG_LEVEL_BED_HOMING               = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠„ÉÅ„É•„Ç¶");              // "Homing XYZ"
+  LSTR MSG_LEVEL_BED_WAITING              = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„Ç§„Ç∑");                // "Click to Begin"
+  LSTR MSG_LEVEL_BED_NEXT_POINT           = _UxGT("„ÉÑ„ÇÆ„Éé„ÇΩ„ÇØ„ÉÜ„Ç§„ÉÜ„É≥„Éò");             // "Next Point"
+  LSTR MSG_LEVEL_BED_DONE                 = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶");              // "Leveling Done!"
+  LSTR MSG_SET_HOME_OFFSETS               = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§");         // "Set home offsets"
+  LSTR MSG_HOME_OFFSETS_APPLIED           = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");       // "Offsets applied"
+  LSTR MSG_SET_ORIGIN                     = _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà");                 // "Set origin"
   #if PREHEAT_COUNT
-    PROGMEM Language_Str MSG_PREHEAT_1                     = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
-    PROGMEM Language_Str MSG_PREHEAT_1_H                   = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
-    PROGMEM Language_Str MSG_PREHEAT_1_END                 = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
-    PROGMEM Language_Str MSG_PREHEAT_1_END_E               = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
-    PROGMEM Language_Str MSG_PREHEAT_1_ALL                 = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
-    PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY             = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
-    PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS            = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+    LSTR MSG_PREHEAT_1                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
+    LSTR MSG_PREHEAT_1_H                  = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
+    LSTR MSG_PREHEAT_1_END                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
+    LSTR MSG_PREHEAT_1_END_E              = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
+    LSTR MSG_PREHEAT_1_ALL                = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
+    LSTR MSG_PREHEAT_1_BEDONLY            = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
+    LSTR MSG_PREHEAT_1_SETTINGS           = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
 
-    PROGMEM Language_Str MSG_PREHEAT_M                     = _UxGT("$ „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
-    PROGMEM Language_Str MSG_PREHEAT_M_H                   = _UxGT("$ „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
-    PROGMEM Language_Str MSG_PREHEAT_M_END                 = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
-    PROGMEM Language_Str MSG_PREHEAT_M_END_E               = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
-    PROGMEM Language_Str MSG_PREHEAT_M_ALL                 = _UxGT("$ „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
-    PROGMEM Language_Str MSG_PREHEAT_M_BEDONLY             = _UxGT("$ „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
-    PROGMEM Language_Str MSG_PREHEAT_M_SETTINGS            = _UxGT("$ „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+    LSTR MSG_PREHEAT_M                    = _UxGT("$ „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
+    LSTR MSG_PREHEAT_M_H                  = _UxGT("$ „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
+    LSTR MSG_PREHEAT_M_END                = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
+    LSTR MSG_PREHEAT_M_END_E              = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
+    LSTR MSG_PREHEAT_M_ALL                = _UxGT("$ „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
+    LSTR MSG_PREHEAT_M_BEDONLY            = _UxGT("$ „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
+    LSTR MSG_PREHEAT_M_SETTINGS           = _UxGT("$ „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
   #endif
-  PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑");                  // "Cooldown"
-  PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥");                 // "Switch power on"
-  PROGMEM Language_Str MSG_SWITCH_PS_OFF                   = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï");                 // "Switch power off"
-  PROGMEM Language_Str MSG_EXTRUDE                         = _UxGT("„Ç™„Ç∑„ÉÄ„Ç∑");                     // "Extrude"
-  PROGMEM Language_Str MSG_RETRACT                         = _UxGT("„Éí„Ç≠„Ç≥„Éü„Çª„ÉÉ„ÉÜ„Ç§");                // "Retract"
-  PROGMEM Language_Str MSG_MOVE_AXIS                       = _UxGT("„Ç∏„ÇØ„Ç§„Éâ„Ç¶");                    // "Move axis"
-  PROGMEM Language_Str MSG_BED_LEVELING                    = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞");                // "Bed leveling"
-  PROGMEM Language_Str MSG_LEVEL_BED                       = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞");                // "Level bed"
+  LSTR MSG_COOLDOWN                       = _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑");                  // "Cooldown"
+  LSTR MSG_SWITCH_PS_ON                   = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥");                 // "Switch power on"
+  LSTR MSG_SWITCH_PS_OFF                  = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï");                 // "Switch power off"
+  LSTR MSG_EXTRUDE                        = _UxGT("„Ç™„Ç∑„ÉÄ„Ç∑");                     // "Extrude"
+  LSTR MSG_RETRACT                        = _UxGT("„Éí„Ç≠„Ç≥„Éü„Çª„ÉÉ„ÉÜ„Ç§");                // "Retract"
+  LSTR MSG_MOVE_AXIS                      = _UxGT("„Ç∏„ÇØ„Ç§„Éâ„Ç¶");                    // "Move axis"
+  LSTR MSG_BED_LEVELING                   = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞");                // "Bed leveling"
+  LSTR MSG_LEVEL_BED                      = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞");                // "Level bed"
 
-  PROGMEM Language_Str MSG_MOVING                          = _UxGT("„Ç§„Éâ„Ç¶„ÉÅ„É•„Ç¶");                   // "Moving..."
-  PROGMEM Language_Str MSG_FREE_XY                         = _UxGT("XY„Ç∏„ÇØ „Ç´„Ç§„Éõ„Ç¶");                // "Free XY"
-  PROGMEM Language_Str MSG_MOVE_X                          = _UxGT("X„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move X"
-  PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Y"
-  PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Z"
-  PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");                // "Extruder"
-  PROGMEM Language_Str MSG_MOVE_N_MM                       = _UxGT("%smm „Ç§„Éâ„Ç¶");                  // "Move 0.025mm"
-  PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
-  PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"
-  PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT(" 10mm „Ç§„Éâ„Ç¶");                 // "Move 10mm"
-  PROGMEM Language_Str MSG_MOVE_100MM                      = _UxGT(" 100mm „Ç§„Éâ„Ç¶");                 // "Move 100mm"
-  PROGMEM Language_Str MSG_SPEED                           = _UxGT("„ÇΩ„ÇØ„Éâ");                       // "Speed"
-  PROGMEM Language_Str MSG_BED_Z                           = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Bed Z"
-  PROGMEM Language_Str MSG_NOZZLE                          = _UxGT("„Éé„Ç∫„É´");                       // "Nozzle"
-  PROGMEM Language_Str MSG_BED                             = _UxGT("„Éô„ÉÉ„Éâ");                       // "Bed"
-  PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("„Éï„Ç°„É≥„ÇΩ„ÇØ„Éâ");                    // "Fan speed"
-  PROGMEM Language_Str MSG_FLOW                            = _UxGT("„Éà„Ç∑„É•„ÉÑ„É™„Éß„Ç¶");                   // "Flow"
-  PROGMEM Language_Str MSG_CONTROL                         = _UxGT("„Çª„Ç§„ÇÆ„Éß");                      // "Control"
-  PROGMEM Language_Str MSG_MIN                             = " " LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„ÉÜ„Ç§"); // " Min"
-  PROGMEM Language_Str MSG_MAX                             = " " LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„Ç≥„Ç¶"); // " Max"
-  PROGMEM Language_Str MSG_FACTOR                          = " " LCD_STR_THERMOMETER _UxGT(" „Éï„Ç°„ÇØ„Çø„Éº"); // " Fact"
-  PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß");               // "Autotemp"
-  PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("„Ç™„É≥");                         // "On"
-  PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("„Ç™„Éï");                         // "Off"
-  PROGMEM Language_Str MSG_SELECT                          = _UxGT("„Çª„É≥„Çø„ÇØ");                     // "Select"
-  PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("„Çª„É≥„Çø„ÇØ *");
-  PROGMEM Language_Str MSG_ACC                             = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
-  PROGMEM Language_Str MSG_JERK                            = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s");                  // "Jerk"
-  PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_A;             // "Va-jerk"
-  PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_B;             // "Vb-jerk"
-  PROGMEM Language_Str MSG_VC_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_C;             // "Vc-jerk"
-  PROGMEM Language_Str MSG_VI_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_I;             // "Va-jerk"
-  PROGMEM Language_Str MSG_VJ_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_J;             // "Vb-jerk"
-  PROGMEM Language_Str MSG_VK_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_K;             // "Vc-jerk"
-  PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
-  PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
-  PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
-  PROGMEM Language_Str MSG_VE_JERK                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ");          // "Ve-jerk"
-  PROGMEM Language_Str MSG_VMAX_A                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax A"
-  PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_B;  // "Vmax B"
-  PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_C;  // "Vmax C"
-  PROGMEM Language_Str MSG_VMAX_I                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_I;  // "Vmax I"
-  PROGMEM Language_Str MSG_VMAX_J                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_J;  // "Vmax J"
-  PROGMEM Language_Str MSG_VMAX_K                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_K;  // "Vmax K"
-  PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E;  // "Vmax E"
-  PROGMEM Language_Str MSG_VMAX_EN                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *");  // "Vmax E1"
-  PROGMEM Language_Str MSG_VMIN                            = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
-  PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
-  PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
-  PROGMEM Language_Str MSG_AMAX                            = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç´„ÇΩ„ÇØ„Éâ ");              // "Amax "
-  PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ");               // "A-retract"
-  PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ");                // "A-travel"
-  PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("„Ç™„É≥„Éâ");                      // "Temperature"
-  PROGMEM Language_Str MSG_MOTION                          = _UxGT("„Ç¶„Ç¥„Ç≠„Çª„ÉÉ„ÉÜ„Ç§");                // "Motion"
-  PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà");                   // "Filament"
-  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E in mm") SUPERSCRIPT_THREE;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§");            // "Fil. Dia."
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ *");
-  PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà");               // "LCD contrast"
-  PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
-  PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü");               // "Load memory"
-  PROGMEM Language_Str MSG_RESTORE_DEFAULTS                = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà");               // "Restore Defaults"
-  PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH  _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•");                  // "Refresh"
-  PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥");               // "Info screen"
-  PROGMEM Language_Str MSG_PREPARE                         = _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§");               // "Prepare"
-  PROGMEM Language_Str MSG_TUNE                            = _UxGT("„ÉÅ„Éß„Ç¶„Çª„Ç§");                    // "Tune"
-  PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");                  // "Pause print"
-  PROGMEM Language_Str MSG_RESUME_PRINT                    = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
-  PROGMEM Language_Str MSG_STOP_PRINT                      = _UxGT("„Éó„É™„É≥„Éà„ÉÜ„Ç§„Ç∑");                 // "Stop print"
-  PROGMEM Language_Str MSG_MEDIA_MENU                      = _UxGT("„É°„Éá„Ç£„Ç¢„Ç´„É©„Éó„É™„É≥„Éà");            // "Print from SD"
-  PROGMEM Language_Str MSG_NO_MEDIA                        = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
-  PROGMEM Language_Str MSG_DWELL                           = _UxGT("„Ç≠„É•„Ç¶„Ç∑");                     // "Sleep..."
-  PROGMEM Language_Str MSG_USERWAIT                        = _UxGT("„ÉÑ„ÉÖ„Ç±„É´„Éã„Éè„ÇØ„É™„ÉÉ„ÇØ„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");  // "Wait for user..."
-  PROGMEM Language_Str MSG_PRINT_ABORTED                   = _UxGT("„Éó„É™„É≥„Éà„Ç¨„ÉÅ„É•„Ç¶„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");       // "Print aborted"
-  PROGMEM Language_Str MSG_NO_MOVE                         = _UxGT("„Ç¶„Ç¥„Ç≠„Éû„Çª„É≥");                  // "No move."
-  PROGMEM Language_Str MSG_KILLED                          = _UxGT("„Éí„Ç∏„Éß„Ç¶„ÉÜ„Ç§„Ç∑");                  // "KILLED. "
-  PROGMEM Language_Str MSG_STOPPED                         = _UxGT("„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");                  // "STOPPED. "
-  PROGMEM Language_Str MSG_CONTROL_RETRACT                 = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶ mm");                // "Retract mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_SWAP            = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶S mm");               // "Swap Re.mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s");             // "Retract V"
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_ZHOP            = _UxGT("„Éé„Ç∫„É´„Çø„Ç§„Éí mm");                // "Hop mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm");               // "Unretr. mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm");              // "S Unretr. mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s");            // "Unretract V"
-  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü");                 // "Auto-Retract"
-  PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥");              // "Change filament"
-  PROGMEM Language_Str MSG_ATTACH_MEDIA                    = _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü");             // "Init. SD card"
-  PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥");               // "Change SD card"
-  PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§");            // "Z probe out. bed"
-  PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥");          // "BLTouch Self-Test"
-  PROGMEM Language_Str MSG_BLTOUCH_RESET                   = _UxGT("BLTouch „É™„Çª„ÉÉ„Éà");             // "Reset BLTouch"
-  PROGMEM Language_Str MSG_HOME_FIRST                      = _UxGT("„Çµ„Ç≠„Éã %s%s%s „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§"); // "Home ... first"
-  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Z Offset"
-  PROGMEM Language_Str MSG_BABYSTEP_X                      = _UxGT("X„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep X"
-  PROGMEM Language_Str MSG_BABYSTEP_Y                      = _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Y"
-  PROGMEM Language_Str MSG_BABYSTEP_Z                      = _UxGT("Z„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Z"
-  PROGMEM Language_Str MSG_ENDSTOP_ABORT                   = _UxGT("„Ç§„Éâ„Ç¶„Ç≤„É≥„Ç´„Ç§„Ç±„É≥„ÉÅ„Ç≠„Éé„Ç¶");         // "Endstop abort"
-  PROGMEM Language_Str MSG_HEATING_FAILED_LCD              = _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§");                 // "Heating failed"
-  PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("„Ç®„É©„Éº:„Ç∏„Éß„Ç¶„ÉÅ„Éß„Ç¶„Çµ„Éº„Éü„Çπ„Çø„Éº„Ç≠„Éé„Ç¶");  // "Err: REDUNDANT TEMP"
-  PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶");                   // "THERMAL RUNAWAY"
-  PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´");         // "Err: MAXTEMP"
-  PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");          // "Err: MINTEMP"
-  PROGMEM Language_Str MSG_HALTED                          = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");         // "PRINTER HALTED"
-  PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");              // "Please reset"
-  PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("d");                          // One character only
-  PROGMEM Language_Str MSG_SHORT_HOUR                      = _UxGT("h");                          // One character only
-  PROGMEM Language_Str MSG_SHORT_MINUTE                    = _UxGT("m");                          // One character only
-  PROGMEM Language_Str MSG_HEATING                         = _UxGT("„Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");                   // "Heating..."
-  PROGMEM Language_Str MSG_BED_HEATING                     = _UxGT("„Éô„ÉÉ„Éâ „Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");              // "Bed Heating..."
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE                 = _UxGT("„Éá„É´„Çø „Ç≥„Ç¶„Çª„Ç§");                // "Delta Calibration"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_X               = _UxGT("X„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate X"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Y               = _UxGT("Y„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate Y"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Z               = _UxGT("Z„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate Z"
-  PROGMEM Language_Str MSG_DELTA_CALIBRATE_CENTER          = _UxGT("„ÉÅ„É•„Ç¶„Ç∑„É≥ „Ç≥„Ç¶„Çª„Ç§");              // "Calibrate Center"
-  PROGMEM Language_Str MSG_INFO_MENU                       = _UxGT("„Ç≥„Éé„Éó„É™„É≥„Çø„Éº„Éã„ÉÑ„Ç§„ÉÜ");             // "About Printer"
-  PROGMEM Language_Str MSG_INFO_PRINTER_MENU               = _UxGT("„Éó„É™„É≥„Çø„Éº„Ç∏„Éß„Ç¶„Éõ„Ç¶");              // "Printer Info"
-  PROGMEM Language_Str MSG_INFO_STATS_MENU                 = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Éß„Ç¶„Ç≠„Éß„Ç¶");              // "Printer Stats"
-  PROGMEM Language_Str MSG_INFO_BOARD_MENU                 = _UxGT("„Çª„Ç§„ÇÆ„Éß„Ç±„Ç§„Ç∏„Éß„Ç¶„Éõ„Ç¶");            // "Board Info"
-  PROGMEM Language_Str MSG_INFO_THERMISTOR_MENU            = _UxGT("„Çµ„Éº„Éü„Çπ„Çø„Éº");                   // "Thermistors"
-  PROGMEM Language_Str MSG_INFO_EXTRUDERS                  = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº„Çπ„Ç¶");             // "Extruders"
-  PROGMEM Language_Str MSG_INFO_BAUDRATE                   = _UxGT("„Éú„Éº„É¨„Éº„Éà");                    // "Baud"
-  PROGMEM Language_Str MSG_INFO_PROTOCOL                   = _UxGT("„Éó„É≠„Éà„Ç≥„É´");                    // "Protocol"
-  PROGMEM Language_Str MSG_CASE_LIGHT                      = _UxGT("„Ç≠„Éß„Ç¶„Çø„Ç§„Éä„Ç§„Ç∑„Éß„Ç¶„É°„Ç§");       // "Case light"
-  PROGMEM Language_Str MSG_INFO_PRINT_COUNT                = _UxGT("„Éó„É™„É≥„Éà„Çπ„Ç¶ ");                  // "Print Count"
-  PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS           = _UxGT("„Ç´„É≥„É™„Éß„Ç¶„Çπ„Ç¶");                  // "Completed"
-  PROGMEM Language_Str MSG_INFO_PRINT_TIME                 = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥„É´„Ç§„Ç±„Ç§");            // "Total print time"
-  PROGMEM Language_Str MSG_INFO_PRINT_LONGEST              = _UxGT("„Çµ„Ç§„ÉÅ„Éß„Ç¶„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥");           // "Longest job time"
-  PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT             = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç∑„É®„Ç¶„É™„Éß„Ç¶„É´„Ç§„Ç±„Ç§");       // "Extruded total"
-  PROGMEM Language_Str MSG_INFO_MIN_TEMP                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥");              // "Min Temp"
-  PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥");              // "Max Temp"
-  PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ");                // "Power Supply"
-  PROGMEM Language_Str MSG_DRIVE_STRENGTH                  = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ");              // "Drive Strength"
-  PROGMEM Language_Str MSG_DAC_PERCENT_A                   = LCD_STR_A _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "X Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_B                   = LCD_STR_B _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Y Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_C                   = LCD_STR_C _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Z Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_I                   = LCD_STR_I _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "I Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_J                   = LCD_STR_J _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "J Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_K                   = LCD_STR_K _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "K Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_E                   = _UxGT("E DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "E Driver %"
-  PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_PAUSE    = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT            = _UxGT(MSG_2_LINE("„Ç≥„Ç¶„Ç´„É≥„É≤„Ç´„Ç§„Ç∑„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for start of the filament"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD          = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„Éå„Ç≠„ÉÄ„Ç∑„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament unload"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT          = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„É≤„ÇΩ„Ç¶„Éã„É•„Ç¶„Ç∑,", "„ÇØ„É™„ÉÉ„ÇØ„Çπ„É´„Éà„Çæ„ÉÉ„Ç≥„Ç¶„Ç∑„Éû„Çπ"));   // "Insert filament and press button"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD            = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„ÇΩ„Ç¶„ÉÜ„É≥„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament load"
-  PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME          = _UxGT(MSG_2_LINE("„Éó„É™„É≥„Éà„É≤„Çµ„Ç§„Ç´„Ç§„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for print to resume"
+  LSTR MSG_MOVING                         = _UxGT("„Ç§„Éâ„Ç¶„ÉÅ„É•„Ç¶");                   // "Moving..."
+  LSTR MSG_FREE_XY                        = _UxGT("XY„Ç∏„ÇØ „Ç´„Ç§„Éõ„Ç¶");                // "Free XY"
+  LSTR MSG_MOVE_X                         = _UxGT("X„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move X"
+  LSTR MSG_MOVE_Y                         = _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Y"
+  LSTR MSG_MOVE_Z                         = _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Z"
+  LSTR MSG_MOVE_E                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");                // "Extruder"
+  LSTR MSG_MOVE_N_MM                      = _UxGT("%smm „Ç§„Éâ„Ç¶");                  // "Move 0.025mm"
+  LSTR MSG_MOVE_01MM                      = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
+  LSTR MSG_MOVE_1MM                       = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"
+  LSTR MSG_MOVE_10MM                      = _UxGT(" 10mm „Ç§„Éâ„Ç¶");                 // "Move 10mm"
+  LSTR MSG_MOVE_100MM                     = _UxGT(" 100mm „Ç§„Éâ„Ç¶");                 // "Move 100mm"
+  LSTR MSG_SPEED                          = _UxGT("„ÇΩ„ÇØ„Éâ");                       // "Speed"
+  LSTR MSG_BED_Z                          = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Bed Z"
+  LSTR MSG_NOZZLE                         = _UxGT("„Éé„Ç∫„É´");                       // "Nozzle"
+  LSTR MSG_BED                            = _UxGT("„Éô„ÉÉ„Éâ");                       // "Bed"
+  LSTR MSG_FAN_SPEED                      = _UxGT("„Éï„Ç°„É≥„ÇΩ„ÇØ„Éâ");                    // "Fan speed"
+  LSTR MSG_FLOW                           = _UxGT("„Éà„Ç∑„É•„ÉÑ„É™„Éß„Ç¶");                   // "Flow"
+  LSTR MSG_CONTROL                        = _UxGT("„Çª„Ç§„ÇÆ„Éß");                      // "Control"
+  LSTR MSG_MIN                            = " " LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„ÉÜ„Ç§"); // " Min"
+  LSTR MSG_MAX                            = " " LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„Ç≥„Ç¶"); // " Max"
+  LSTR MSG_FACTOR                         = " " LCD_STR_THERMOMETER _UxGT(" „Éï„Ç°„ÇØ„Çø„Éº"); // " Fact"
+  LSTR MSG_AUTOTEMP                       = _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß");               // "Autotemp"
+  LSTR MSG_LCD_ON                         = _UxGT("„Ç™„É≥");                         // "On"
+  LSTR MSG_LCD_OFF                        = _UxGT("„Ç™„Éï");                         // "Off"
+  LSTR MSG_SELECT                         = _UxGT("„Çª„É≥„Çø„ÇØ");                     // "Select"
+  LSTR MSG_SELECT_E                       = _UxGT("„Çª„É≥„Çø„ÇØ *");
+  LSTR MSG_ACC                            = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
+  LSTR MSG_JERK                           = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s");                  // "Jerk"
+  LSTR MSG_VA_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_A;             // "Va-jerk"
+  LSTR MSG_VB_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_B;             // "Vb-jerk"
+  LSTR MSG_VC_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_C;             // "Vc-jerk"
+  LSTR MSG_VI_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_I;             // "Va-jerk"
+  LSTR MSG_VJ_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_J;             // "Vb-jerk"
+  LSTR MSG_VK_JERK                        = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_K;             // "Vc-jerk"
+  LSTR MSG_A_STEPS                        = LCD_STR_A _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  LSTR MSG_B_STEPS                        = LCD_STR_B _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  LSTR MSG_C_STEPS                        = LCD_STR_C _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  LSTR MSG_VE_JERK                        = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ");          // "Ve-jerk"
+  LSTR MSG_VMAX_A                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax A"
+  LSTR MSG_VMAX_B                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_B;  // "Vmax B"
+  LSTR MSG_VMAX_C                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_C;  // "Vmax C"
+  LSTR MSG_VMAX_I                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_I;  // "Vmax I"
+  LSTR MSG_VMAX_J                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_J;  // "Vmax J"
+  LSTR MSG_VMAX_K                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_K;  // "Vmax K"
+  LSTR MSG_VMAX_E                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E;  // "Vmax E"
+  LSTR MSG_VMAX_EN                        = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *");  // "Vmax E1"
+  LSTR MSG_VMIN                           = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
+  LSTR MSG_VTRAV_MIN                      = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
+  LSTR MSG_ACCELERATION                   = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
+  LSTR MSG_AMAX                           = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç´„ÇΩ„ÇØ„Éâ ");              // "Amax "
+  LSTR MSG_A_RETRACT                      = _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ");               // "A-retract"
+  LSTR MSG_A_TRAVEL                       = _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ");                // "A-travel"
+  LSTR MSG_TEMPERATURE                    = _UxGT("„Ç™„É≥„Éâ");                      // "Temperature"
+  LSTR MSG_MOTION                         = _UxGT("„Ç¶„Ç¥„Ç≠„Çª„ÉÉ„ÉÜ„Ç§");                // "Motion"
+  LSTR MSG_FILAMENT                       = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà");                   // "Filament"
+  LSTR MSG_VOLUMETRIC_ENABLED             = _UxGT("E in mm") SUPERSCRIPT_THREE;
+  LSTR MSG_FILAMENT_DIAM                  = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§");            // "Fil. Dia."
+  LSTR MSG_FILAMENT_DIAM_E                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ *");
+  LSTR MSG_CONTRAST                       = _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà");               // "LCD contrast"
+  LSTR MSG_STORE_EEPROM                   = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
+  LSTR MSG_LOAD_EEPROM                    = _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü");               // "Load memory"
+  LSTR MSG_RESTORE_DEFAULTS               = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà");               // "Restore Defaults"
+  LSTR MSG_REFRESH                        = LCD_STR_REFRESH  _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•");                  // "Refresh"
+  LSTR MSG_INFO_SCREEN                    = _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥");               // "Info screen"
+  LSTR MSG_PREPARE                        = _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§");               // "Prepare"
+  LSTR MSG_TUNE                           = _UxGT("„ÉÅ„Éß„Ç¶„Çª„Ç§");                    // "Tune"
+  LSTR MSG_PAUSE_PRINT                    = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");                  // "Pause print"
+  LSTR MSG_RESUME_PRINT                   = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
+  LSTR MSG_STOP_PRINT                     = _UxGT("„Éó„É™„É≥„Éà„ÉÜ„Ç§„Ç∑");                 // "Stop print"
+  LSTR MSG_MEDIA_MENU                     = _UxGT("„É°„Éá„Ç£„Ç¢„Ç´„É©„Éó„É™„É≥„Éà");            // "Print from SD"
+  LSTR MSG_NO_MEDIA                       = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
+  LSTR MSG_DWELL                          = _UxGT("„Ç≠„É•„Ç¶„Ç∑");                     // "Sleep..."
+  LSTR MSG_USERWAIT                       = _UxGT("„ÉÑ„ÉÖ„Ç±„É´„Éã„Éè„ÇØ„É™„ÉÉ„ÇØ„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");  // "Wait for user..."
+  LSTR MSG_PRINT_ABORTED                  = _UxGT("„Éó„É™„É≥„Éà„Ç¨„ÉÅ„É•„Ç¶„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");       // "Print aborted"
+  LSTR MSG_NO_MOVE                        = _UxGT("„Ç¶„Ç¥„Ç≠„Éû„Çª„É≥");                  // "No move."
+  LSTR MSG_KILLED                         = _UxGT("„Éí„Ç∏„Éß„Ç¶„ÉÜ„Ç§„Ç∑");                  // "KILLED. "
+  LSTR MSG_STOPPED                        = _UxGT("„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");                  // "STOPPED. "
+  LSTR MSG_CONTROL_RETRACT                = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶ mm");                // "Retract mm"
+  LSTR MSG_CONTROL_RETRACT_SWAP           = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶S mm");               // "Swap Re.mm"
+  LSTR MSG_CONTROL_RETRACTF               = _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s");             // "Retract V"
+  LSTR MSG_CONTROL_RETRACT_ZHOP           = _UxGT("„Éé„Ç∫„É´„Çø„Ç§„Éí mm");                // "Hop mm"
+  LSTR MSG_CONTROL_RETRACT_RECOVER        = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm");               // "Unretr. mm"
+  LSTR MSG_CONTROL_RETRACT_RECOVER_SWAP   = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm");              // "S Unretr. mm"
+  LSTR MSG_CONTROL_RETRACT_RECOVERF       = _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s");            // "Unretract V"
+  LSTR MSG_AUTORETRACT                    = _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü");                 // "Auto-Retract"
+  LSTR MSG_FILAMENTCHANGE                 = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥");              // "Change filament"
+  LSTR MSG_ATTACH_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü");             // "Init. SD card"
+  LSTR MSG_CHANGE_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥");               // "Change SD card"
+  LSTR MSG_ZPROBE_OUT                     = _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§");            // "Z probe out. bed"
+  LSTR MSG_BLTOUCH_SELFTEST               = _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥");          // "BLTouch Self-Test"
+  LSTR MSG_BLTOUCH_RESET                  = _UxGT("BLTouch „É™„Çª„ÉÉ„Éà");             // "Reset BLTouch"
+  LSTR MSG_HOME_FIRST                     = _UxGT("„Çµ„Ç≠„Éã %s%s%s „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§"); // "Home ... first"
+  LSTR MSG_ZPROBE_ZOFFSET                 = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Z Offset"
+  LSTR MSG_BABYSTEP_X                     = _UxGT("X„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep X"
+  LSTR MSG_BABYSTEP_Y                     = _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Y"
+  LSTR MSG_BABYSTEP_Z                     = _UxGT("Z„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Z"
+  LSTR MSG_ENDSTOP_ABORT                  = _UxGT("„Ç§„Éâ„Ç¶„Ç≤„É≥„Ç´„Ç§„Ç±„É≥„ÉÅ„Ç≠„Éé„Ç¶");         // "Endstop abort"
+  LSTR MSG_HEATING_FAILED_LCD             = _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§");                 // "Heating failed"
+  LSTR MSG_ERR_REDUNDANT_TEMP             = _UxGT("„Ç®„É©„Éº:„Ç∏„Éß„Ç¶„ÉÅ„Éß„Ç¶„Çµ„Éº„Éü„Çπ„Çø„Éº„Ç≠„Éé„Ç¶");  // "Err: REDUNDANT TEMP"
+  LSTR MSG_THERMAL_RUNAWAY                = _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶");                   // "THERMAL RUNAWAY"
+  LSTR MSG_ERR_MAXTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´");         // "Err: MAXTEMP"
+  LSTR MSG_ERR_MINTEMP                    = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");          // "Err: MINTEMP"
+  LSTR MSG_HALTED                         = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");         // "PRINTER HALTED"
+  LSTR MSG_PLEASE_RESET                   = _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");              // "Please reset"
+  LSTR MSG_SHORT_DAY                      = _UxGT("d");                          // One character only
+  LSTR MSG_SHORT_HOUR                     = _UxGT("h");                          // One character only
+  LSTR MSG_SHORT_MINUTE                   = _UxGT("m");                          // One character only
+  LSTR MSG_HEATING                        = _UxGT("„Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");                   // "Heating..."
+  LSTR MSG_BED_HEATING                    = _UxGT("„Éô„ÉÉ„Éâ „Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");              // "Bed Heating..."
+  LSTR MSG_DELTA_CALIBRATE                = _UxGT("„Éá„É´„Çø „Ç≥„Ç¶„Çª„Ç§");                // "Delta Calibration"
+  LSTR MSG_DELTA_CALIBRATE_X              = _UxGT("X„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate X"
+  LSTR MSG_DELTA_CALIBRATE_Y              = _UxGT("Y„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate Y"
+  LSTR MSG_DELTA_CALIBRATE_Z              = _UxGT("Z„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate Z"
+  LSTR MSG_DELTA_CALIBRATE_CENTER         = _UxGT("„ÉÅ„É•„Ç¶„Ç∑„É≥ „Ç≥„Ç¶„Çª„Ç§");              // "Calibrate Center"
+  LSTR MSG_INFO_MENU                      = _UxGT("„Ç≥„Éé„Éó„É™„É≥„Çø„Éº„Éã„ÉÑ„Ç§„ÉÜ");             // "About Printer"
+  LSTR MSG_INFO_PRINTER_MENU              = _UxGT("„Éó„É™„É≥„Çø„Éº„Ç∏„Éß„Ç¶„Éõ„Ç¶");              // "Printer Info"
+  LSTR MSG_INFO_STATS_MENU                = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Éß„Ç¶„Ç≠„Éß„Ç¶");              // "Printer Stats"
+  LSTR MSG_INFO_BOARD_MENU                = _UxGT("„Çª„Ç§„ÇÆ„Éß„Ç±„Ç§„Ç∏„Éß„Ç¶„Éõ„Ç¶");            // "Board Info"
+  LSTR MSG_INFO_THERMISTOR_MENU           = _UxGT("„Çµ„Éº„Éü„Çπ„Çø„Éº");                   // "Thermistors"
+  LSTR MSG_INFO_EXTRUDERS                 = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº„Çπ„Ç¶");             // "Extruders"
+  LSTR MSG_INFO_BAUDRATE                  = _UxGT("„Éú„Éº„É¨„Éº„Éà");                    // "Baud"
+  LSTR MSG_INFO_PROTOCOL                  = _UxGT("„Éó„É≠„Éà„Ç≥„É´");                    // "Protocol"
+  LSTR MSG_CASE_LIGHT                     = _UxGT("„Ç≠„Éß„Ç¶„Çø„Ç§„Éä„Ç§„Ç∑„Éß„Ç¶„É°„Ç§");       // "Case light"
+  LSTR MSG_INFO_PRINT_COUNT               = _UxGT("„Éó„É™„É≥„Éà„Çπ„Ç¶ ");                  // "Print Count"
+  LSTR MSG_INFO_COMPLETED_PRINTS          = _UxGT("„Ç´„É≥„É™„Éß„Ç¶„Çπ„Ç¶");                  // "Completed"
+  LSTR MSG_INFO_PRINT_TIME                = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥„É´„Ç§„Ç±„Ç§");            // "Total print time"
+  LSTR MSG_INFO_PRINT_LONGEST             = _UxGT("„Çµ„Ç§„ÉÅ„Éß„Ç¶„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥");           // "Longest job time"
+  LSTR MSG_INFO_PRINT_FILAMENT            = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç∑„É®„Ç¶„É™„Éß„Ç¶„É´„Ç§„Ç±„Ç§");       // "Extruded total"
+  LSTR MSG_INFO_MIN_TEMP                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥");              // "Min Temp"
+  LSTR MSG_INFO_MAX_TEMP                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥");              // "Max Temp"
+  LSTR MSG_INFO_PSU                       = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ");                // "Power Supply"
+  LSTR MSG_DRIVE_STRENGTH                 = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ");              // "Drive Strength"
+  LSTR MSG_DAC_PERCENT_A                  = LCD_STR_A _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "X Driver %"
+  LSTR MSG_DAC_PERCENT_B                  = LCD_STR_B _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Y Driver %"
+  LSTR MSG_DAC_PERCENT_C                  = LCD_STR_C _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Z Driver %"
+  LSTR MSG_DAC_PERCENT_I                  = LCD_STR_I _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "I Driver %"
+  LSTR MSG_DAC_PERCENT_J                  = LCD_STR_J _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "J Driver %"
+  LSTR MSG_DAC_PERCENT_K                  = LCD_STR_K _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "K Driver %"
+  LSTR MSG_DAC_PERCENT_E                  = _UxGT("E DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "E Driver %"
+  LSTR MSG_DAC_EEPROM_WRITE               = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
+  LSTR MSG_FILAMENT_CHANGE_HEADER_PAUSE   = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");
+  LSTR MSG_FILAMENT_CHANGE_OPTION_RESUME  = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
+  LSTR MSG_FILAMENT_CHANGE_INIT           = _UxGT(MSG_2_LINE("„Ç≥„Ç¶„Ç´„É≥„É≤„Ç´„Ç§„Ç∑„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for start of the filament"
+  LSTR MSG_FILAMENT_CHANGE_UNLOAD         = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„Éå„Ç≠„ÉÄ„Ç∑„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament unload"
+  LSTR MSG_FILAMENT_CHANGE_INSERT         = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„É≤„ÇΩ„Ç¶„Éã„É•„Ç¶„Ç∑,", "„ÇØ„É™„ÉÉ„ÇØ„Çπ„É´„Éà„Çæ„ÉÉ„Ç≥„Ç¶„Ç∑„Éû„Çπ"));   // "Insert filament and press button"
+  LSTR MSG_FILAMENT_CHANGE_LOAD           = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„ÇΩ„Ç¶„ÉÜ„É≥„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament load"
+  LSTR MSG_FILAMENT_CHANGE_RESUME         = _UxGT(MSG_2_LINE("„Éó„É™„É≥„Éà„É≤„Çµ„Ç§„Ç´„Ç§„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for print to resume"
 
-  PROGMEM Language_Str MSG_KILL_EXPECTED_PRINTER           = _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº");               // "Wrong printer"
+  LSTR MSG_KILL_EXPECTED_PRINTER          = _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº");               // "Wrong printer"
 
-  PROGMEM Language_Str MSG_CONFIGURATION                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Ç´„É≥„É™");
-  PROGMEM Language_Str MSG_ADVANCED_SETTINGS               = _UxGT("„Ç∑„Éß„Ç¶„Çµ„Ç§„Çª„ÉÉ„ÉÜ„Ç§");
-  PROGMEM Language_Str MSG_OUTAGE_RECOVERY                 = _UxGT("„Ç≥„Ç∑„Éß„Ç´„Ç§„Éï„ÇØ");
-  PROGMEM Language_Str MSG_INIT_EEPROM                     = _UxGT("EEPROM„Ç∑„Éß„Ç≠„Ç´");
+  LSTR MSG_CONFIGURATION                  = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Ç´„É≥„É™");
+  LSTR MSG_ADVANCED_SETTINGS              = _UxGT("„Ç∑„Éß„Ç¶„Çµ„Ç§„Çª„ÉÉ„ÉÜ„Ç§");
+  LSTR MSG_OUTAGE_RECOVERY                = _UxGT("„Ç≥„Ç∑„Éß„Ç´„Ç§„Éï„ÇØ");
+  LSTR MSG_INIT_EEPROM                    = _UxGT("EEPROM„Ç∑„Éß„Ç≠„Ç´");
 
-  PROGMEM Language_Str MSG_BUTTON_NEXT                     = _UxGT("„ÉÑ„ÇÆ„Éò");
-  PROGMEM Language_Str MSG_BUTTON_INIT                     = _UxGT("„Ç∑„Éß„Ç≠„Ç´");
-  PROGMEM Language_Str MSG_BUTTON_STOP                     = _UxGT("„Çπ„Éà„ÉÉ„Éó");
-  PROGMEM Language_Str MSG_BUTTON_PRINT                    = _UxGT("„Éó„É™„É≥„Éà");
-  PROGMEM Language_Str MSG_BUTTON_RESET                    = _UxGT("„É™„Çª„ÉÉ„Éà");
-  PROGMEM Language_Str MSG_BUTTON_CANCEL                   = _UxGT("„Ç≠„É£„É≥„Çª„É´");
-  PROGMEM Language_Str MSG_BUTTON_DONE                     = _UxGT("„Ç´„É≥„É™„Éß„Ç¶");
+  LSTR MSG_BUTTON_NEXT                    = _UxGT("„ÉÑ„ÇÆ„Éò");
+  LSTR MSG_BUTTON_INIT                    = _UxGT("„Ç∑„Éß„Ç≠„Ç´");
+  LSTR MSG_BUTTON_STOP                    = _UxGT("„Çπ„Éà„ÉÉ„Éó");
+  LSTR MSG_BUTTON_PRINT                   = _UxGT("„Éó„É™„É≥„Éà");
+  LSTR MSG_BUTTON_RESET                   = _UxGT("„É™„Çª„ÉÉ„Éà");
+  LSTR MSG_BUTTON_CANCEL                  = _UxGT("„Ç≠„É£„É≥„Çª„É´");
+  LSTR MSG_BUTTON_DONE                    = _UxGT("„Ç´„É≥„É™„Éß„Ç¶");
 
-  PROGMEM Language_Str MSG_YES                             = _UxGT("„Éè„Ç§");
-  PROGMEM Language_Str MSG_NO                              = _UxGT("„Ç§„Ç§„Ç®");
-  PROGMEM Language_Str MSG_BACK                            = _UxGT("„É¢„Éâ„É™");
-  PROGMEM Language_Str MSG_VELOCITY                        = _UxGT("„ÇΩ„ÇØ„Éâ");
-  PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
-  PROGMEM Language_Str MSG_CUSTOM_COMMANDS                 = _UxGT("„É¶„Éº„Ç∂„Éº„Ç≥„Éû„É≥„Éâ");
-  PROGMEM Language_Str MSG_PRINT_PAUSED                    = _UxGT("„Éó„É™„É≥„Éà„Ç¨„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");
-  PROGMEM Language_Str MSG_PRINTING                        = _UxGT("„Éó„É™„É≥„Éà„ÉÅ„É•„Ç¶...");
+  LSTR MSG_YES                            = _UxGT("„Éè„Ç§");
+  LSTR MSG_NO                             = _UxGT("„Ç§„Ç§„Ç®");
+  LSTR MSG_BACK                           = _UxGT("„É¢„Éâ„É™");
+  LSTR MSG_VELOCITY                       = _UxGT("„ÇΩ„ÇØ„Éâ");
+  LSTR MSG_STEPS_PER_MM                   = _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  LSTR MSG_CUSTOM_COMMANDS                = _UxGT("„É¶„Éº„Ç∂„Éº„Ç≥„Éû„É≥„Éâ");
+  LSTR MSG_PRINT_PAUSED                   = _UxGT("„Éó„É™„É≥„Éà„Ç¨„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");
+  LSTR MSG_PRINTING                       = _UxGT("„Éó„É™„É≥„Éà„ÉÅ„É•„Ç¶...");
 }

commit 9046254a14b92b6bdf1696b1ed839b71615a0772
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 20 15:40:17 2021 -0500

    üåê Update menu titles, add more IJK (#22605)
    
    Followup to #19112

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 61740e3b40..c0fe2451b0 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -119,14 +119,20 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_A;             // "Va-jerk"
   PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_B;             // "Vb-jerk"
   PROGMEM Language_Str MSG_VC_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_C;             // "Vc-jerk"
+  PROGMEM Language_Str MSG_VI_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_I;             // "Va-jerk"
+  PROGMEM Language_Str MSG_VJ_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_J;             // "Vb-jerk"
+  PROGMEM Language_Str MSG_VK_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_K;             // "Vc-jerk"
   PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
   PROGMEM Language_Str MSG_VE_JERK                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ");          // "Ve-jerk"
   PROGMEM Language_Str MSG_VMAX_A                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax A"
-  PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax B"
-  PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax C"
-  PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax E"
+  PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_B;  // "Vmax B"
+  PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_C;  // "Vmax C"
+  PROGMEM Language_Str MSG_VMAX_I                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_I;  // "Vmax I"
+  PROGMEM Language_Str MSG_VMAX_J                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_J;  // "Vmax J"
+  PROGMEM Language_Str MSG_VMAX_K                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_K;  // "Vmax K"
+  PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E;  // "Vmax E"
   PROGMEM Language_Str MSG_VMAX_EN                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *");  // "Vmax E1"
   PROGMEM Language_Str MSG_VMIN                            = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
   PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
@@ -214,9 +220,12 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥");              // "Max Temp"
   PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ");                // "Power Supply"
   PROGMEM Language_Str MSG_DRIVE_STRENGTH                  = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ");              // "Drive Strength"
-  PROGMEM Language_Str MSG_DAC_PERCENT_X                   = _UxGT("X DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "X Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_Y                   = _UxGT("Y DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "Y Driver %"
-  PROGMEM Language_Str MSG_DAC_PERCENT_Z                   = _UxGT("Z DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "Z Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_A                   = LCD_STR_A _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "X Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_B                   = LCD_STR_B _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Y Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_C                   = LCD_STR_C _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "Z Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_I                   = LCD_STR_I _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "I Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_J                   = LCD_STR_J _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "J Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_K                   = LCD_STR_K _UxGT(" DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");      // "K Driver %"
   PROGMEM Language_Str MSG_DAC_PERCENT_E                   = _UxGT("E DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "E Driver %"
   PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_PAUSE    = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");

commit 81ca2dd273358a0cfc0f65d5b4900d83abc96d69
Author: S√©bastien Gari√©py <46988275+BeePerNet@users.noreply.github.com>
Date:   Sun Jun 27 17:44:49 2021 -0400

    üåê MSG_MOVE_100MM (#22242)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index e0028e22a2..61740e3b40 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -98,6 +98,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
   PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"
   PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT(" 10mm „Ç§„Éâ„Ç¶");                 // "Move 10mm"
+  PROGMEM Language_Str MSG_MOVE_100MM                      = _UxGT(" 100mm „Ç§„Éâ„Ç¶");                 // "Move 100mm"
   PROGMEM Language_Str MSG_SPEED                           = _UxGT("„ÇΩ„ÇØ„Éâ");                       // "Speed"
   PROGMEM Language_Str MSG_BED_Z                           = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Bed Z"
   PROGMEM Language_Str MSG_NOZZLE                          = _UxGT("„Éé„Ç∫„É´");                       // "Nozzle"

commit df1ef496d1a88996cb1156fe933df59c6aaecbac
Author: borland1 <barryorlando@hotmail.com>
Date:   Tue Mar 23 06:21:11 2021 -0700

    Main / Config Custom Submenus (#18177)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 8431d86d1c..e0028e22a2 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -246,7 +246,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_BACK                            = _UxGT("„É¢„Éâ„É™");
   PROGMEM Language_Str MSG_VELOCITY                        = _UxGT("„ÇΩ„ÇØ„Éâ");
   PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
-  PROGMEM Language_Str MSG_USER_MENU                       = _UxGT("„É¶„Éº„Ç∂„Éº„Ç≥„Éû„É≥„Éâ");
+  PROGMEM Language_Str MSG_CUSTOM_COMMANDS                 = _UxGT("„É¶„Éº„Ç∂„Éº„Ç≥„Éû„É≥„Éâ");
   PROGMEM Language_Str MSG_PRINT_PAUSED                    = _UxGT("„Éó„É™„É≥„Éà„Ç¨„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");
   PROGMEM Language_Str MSG_PRINTING                        = _UxGT("„Éó„É™„É≥„Éà„ÉÅ„É•„Ç¶...");
 }

commit b0392be4bf872954d0134c90cd027ea3610d5b9a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Dec 13 01:50:02 2020 -0600

    SHORT_MANUAL_Z_MOVE => FINE_MANUAL_MOVE

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index d17d3aaf2d..8431d86d1c 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -94,7 +94,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Y"
   PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Z"
   PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");                // "Extruder"
-  PROGMEM Language_Str MSG_MOVE_Z_DIST                     = _UxGT("%smm „Ç§„Éâ„Ç¶");                  // "Move 0.025mm"
+  PROGMEM Language_Str MSG_MOVE_N_MM                       = _UxGT("%smm „Ç§„Éâ„Ç¶");                  // "Move 0.025mm"
   PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
   PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"
   PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT(" 10mm „Ç§„Éâ„Ç¶");                 // "Move 10mm"

commit f8e83f79c5012c70bae788308f8665f117c4f93c
Author: Simone Primarosa <simonepri@outlook.com>
Date:   Sat Nov 21 03:36:19 2020 +0100

    Superscript substitution (#20219)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index ef288bd396..d17d3aaf2d 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -113,7 +113,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("„Ç™„Éï");                         // "Off"
   PROGMEM Language_Str MSG_SELECT                          = _UxGT("„Çª„É≥„Çø„ÇØ");                     // "Select"
   PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("„Çª„É≥„Çø„ÇØ *");
-  PROGMEM Language_Str MSG_ACC                             = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤");               // "Accel"
+  PROGMEM Language_Str MSG_ACC                             = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
   PROGMEM Language_Str MSG_JERK                            = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s");                  // "Jerk"
   PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_A;             // "Va-jerk"
   PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_B;             // "Vb-jerk"
@@ -129,14 +129,14 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_VMAX_EN                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *");  // "Vmax E1"
   PROGMEM Language_Str MSG_VMIN                            = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
   PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
-  PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤");               // "Accel"
+  PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s") SUPERSCRIPT_TWO;               // "Accel"
   PROGMEM Language_Str MSG_AMAX                            = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç´„ÇΩ„ÇØ„Éâ ");              // "Amax "
   PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ");               // "A-retract"
   PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ");                // "A-travel"
   PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("„Ç™„É≥„Éâ");                      // "Temperature"
   PROGMEM Language_Str MSG_MOTION                          = _UxGT("„Ç¶„Ç¥„Ç≠„Çª„ÉÉ„ÉÜ„Ç§");                // "Motion"
   PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà");                   // "Filament"
-  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E in mm¬≥");
+  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E in mm") SUPERSCRIPT_THREE;
   PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§");            // "Fil. Dia."
   PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ *");
   PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà");               // "LCD contrast"

commit 18fb4b1ce1cff0843bb2ac2cb810dd15081747b4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Nov 7 17:43:47 2020 -0600

    MSG_AUTOSTART => MSG_RUN_AUTO_FILES

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 32b12f50cb..ef288bd396 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -47,7 +47,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_RELEASE_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑");
   PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó");                  // "Endstops" // Max length 8 characters
   PROGMEM Language_Str MSG_MAIN                            = _UxGT("„É°„Ç§„É≥");                       // "Main"
-  PROGMEM Language_Str MSG_AUTOSTART                       = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑");                   // "Autostart"
+  PROGMEM Language_Str MSG_RUN_AUTO_FILES                  = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑");                   // "Autostart"
   PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï");            // "Disable steppers"
   PROGMEM Language_Str MSG_DEBUG_MENU                      = _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº");                // "Debug Menu"
   PROGMEM Language_Str MSG_PROGRESS_BAR_TEST               = _UxGT("„Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº „ÉÜ„Çπ„Éà");            // "Progress Bar Test"

commit b31e358270608afd02be895d4e3ca43ae927d31e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 6 02:59:51 2020 -0500

    Improve retract / unretract labels

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index f1289123a4..32b12f50cb 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -160,12 +160,12 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_STOPPED                         = _UxGT("„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");                  // "STOPPED. "
   PROGMEM Language_Str MSG_CONTROL_RETRACT                 = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶ mm");                // "Retract mm"
   PROGMEM Language_Str MSG_CONTROL_RETRACT_SWAP            = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶S mm");               // "Swap Re.mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s");             // "Retract  V"
+  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s");             // "Retract V"
   PROGMEM Language_Str MSG_CONTROL_RETRACT_ZHOP            = _UxGT("„Éé„Ç∫„É´„Çø„Ç§„Éí mm");                // "Hop mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm");               // "UnRet mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm");              // "S UnRet mm"
-  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s");            // "UnRet  V"
-  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü");                 // "AutoRetr."
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm");               // "Unretr. mm"
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm");              // "S Unretr. mm"
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s");            // "Unretract V"
+  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü");                 // "Auto-Retract"
   PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥");              // "Change filament"
   PROGMEM Language_Str MSG_ATTACH_MEDIA                    = _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü");             // "Init. SD card"
   PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥");               // "Change SD card"

commit 4424645e04c9e75462d36de8f7a82e67cc9c262e
Author: qwewer0 <57561110+qwewer0@users.noreply.github.com>
Date:   Mon Sep 28 21:53:50 2020 +0200

    Multi-line comments cleanup (#19535)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index df6ad9b5d9..f1289123a4 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -27,7 +27,6 @@
  *
  * LCD Menu Messages
  * See also https://marlinfw.org/docs/development/lcd_language.html
- *
  */
 
 //#define DISPLAY_CHARSET_ISO10646_KANA

commit 979876e958e73e642b51eb655461c92947fe1deb
Author: ellensp <ellensp@hotmail.com>
Date:   Mon Sep 14 16:58:39 2020 +1200

    Improve temperature runaway, idle timeout (#19339)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 5f679dd49d..df6ad9b5d9 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -184,8 +184,6 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶");                   // "THERMAL RUNAWAY"
   PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´");         // "Err: MAXTEMP"
   PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");          // "Err: MINTEMP"
-  PROGMEM Language_Str MSG_ERR_MAXTEMP_BED                 = _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´");    // "Err: MAXTEMP BED"
-  PROGMEM Language_Str MSG_ERR_MINTEMP_BED                 = _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");     // "Err: MINTEMP BED"
   PROGMEM Language_Str MSG_HALTED                          = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");         // "PRINTER HALTED"
   PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");              // "Please reset"
   PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("d");                          // One character only

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 8a74dcabba..5f679dd49d 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit b0c6cfb0511b8d71fec26ab91cd945f3d623b3c0
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Jul 9 10:11:57 2020 +0200

    MarlinUI support for up to 5 Material Presets (#18488)
    
    - Add `I` preset parameter to `G26`, `M106`, `M140`, and `M190`.
    - Extend menu items to permit a string interpolation.
    - Keep material names in a list and interpolate in menu items.
    - Extend material presets to support up to 5 predefined materials.
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 084d8b4831..8a74dcabba 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -63,20 +63,23 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_SET_HOME_OFFSETS                = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§");         // "Set home offsets"
   PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");       // "Offsets applied"
   PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà");                 // "Set origin"
-  PROGMEM Language_Str MSG_PREHEAT_1                       = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_1_H                     = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_1_END                   = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E                 = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_1_ALL                   = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
-  PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY               = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
-  PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS              = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
-  PROGMEM Language_Str MSG_PREHEAT_2                       = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_2_H                     = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_2_END                   = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E                 = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_2_ALL                   = PREHEAT_2_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
-  PROGMEM Language_Str MSG_PREHEAT_2_BEDONLY               = PREHEAT_2_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
-  PROGMEM Language_Str MSG_PREHEAT_2_SETTINGS              = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+  #if PREHEAT_COUNT
+    PROGMEM Language_Str MSG_PREHEAT_1                     = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
+    PROGMEM Language_Str MSG_PREHEAT_1_H                   = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
+    PROGMEM Language_Str MSG_PREHEAT_1_END                 = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
+    PROGMEM Language_Str MSG_PREHEAT_1_END_E               = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
+    PROGMEM Language_Str MSG_PREHEAT_1_ALL                 = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
+    PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY             = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
+    PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS            = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+
+    PROGMEM Language_Str MSG_PREHEAT_M                     = _UxGT("$ „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
+    PROGMEM Language_Str MSG_PREHEAT_M_H                   = _UxGT("$ „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
+    PROGMEM Language_Str MSG_PREHEAT_M_END                 = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
+    PROGMEM Language_Str MSG_PREHEAT_M_END_E               = _UxGT("$ „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
+    PROGMEM Language_Str MSG_PREHEAT_M_ALL                 = _UxGT("$ „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
+    PROGMEM Language_Str MSG_PREHEAT_M_BEDONLY             = _UxGT("$ „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
+    PROGMEM Language_Str MSG_PREHEAT_M_SETTINGS            = _UxGT("$ „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+  #endif
   PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑");                  // "Cooldown"
   PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥");                 // "Switch power on"
   PROGMEM Language_Str MSG_SWITCH_PS_OFF                   = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï");                 // "Switch power off"

commit a6b8b12a6a001a25dc73e8ab08f71e357ea58e48
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jul 5 18:00:37 2020 -0500

    Simplify home_z_safely, respect HOME_AFTER_DEACTIVATE

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index f6d4ede51f..084d8b4831 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -183,7 +183,6 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");          // "Err: MINTEMP"
   PROGMEM Language_Str MSG_ERR_MAXTEMP_BED                 = _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´");    // "Err: MAXTEMP BED"
   PROGMEM Language_Str MSG_ERR_MINTEMP_BED                 = _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");     // "Err: MINTEMP BED"
-  PROGMEM Language_Str MSG_ERR_Z_HOMING                    = _UxGT("„Çµ„Ç≠„Éã XY „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");     // "Home XY first"
   PROGMEM Language_Str MSG_HALTED                          = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");         // "PRINTER HALTED"
   PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");              // "Please reset"
   PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("d");                          // One character only

commit 875cd4e081ef6885aa2593d125b2db5ff393a391
Author: Mathias Rasmussen <mathiasvr@gmail.com>
Date:   Mon Apr 20 16:17:55 2020 +0200

    Remove 'Media Released' message (#17272)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 62b7daf705..f6d4ede51f 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -46,7 +46,6 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_MEDIA_INSERTED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„ÇΩ„Ç¶„Éã„É•„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");        // "Card inserted"
   PROGMEM Language_Str MSG_MEDIA_REMOVED                   = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
   PROGMEM Language_Str MSG_RELEASE_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑");
-  PROGMEM Language_Str MSG_MEDIA_RELEASED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
   PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó");                  // "Endstops" // Max length 8 characters
   PROGMEM Language_Str MSG_MAIN                            = _UxGT("„É°„Ç§„É≥");                       // "Main"
   PROGMEM Language_Str MSG_AUTOSTART                       = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑");                   // "Autostart"

commit 22da1b2b310158ae3362c54f2534f5f5af30fa83
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 13 14:53:21 2020 -0500

    Rename some "kill" messages

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index ce594f7c22..62b7daf705 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -228,7 +228,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD            = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„ÇΩ„Ç¶„ÉÜ„É≥„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament load"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME          = _UxGT(MSG_2_LINE("„Éó„É™„É≥„Éà„É≤„Çµ„Ç§„Ç´„Ç§„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for print to resume"
 
-  PROGMEM Language_Str MSG_EXPECTED_PRINTER                = _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº");               // "Wrong printer"
+  PROGMEM Language_Str MSG_KILL_EXPECTED_PRINTER           = _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº");               // "Wrong printer"
 
   PROGMEM Language_Str MSG_CONFIGURATION                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Ç´„É≥„É™");
   PROGMEM Language_Str MSG_ADVANCED_SETTINGS               = _UxGT("„Ç∑„Éß„Ç¶„Çµ„Ç§„Çª„ÉÉ„ÉÜ„Ç§");

commit e3321920f3bab800812ed0d2395fb00fe80072fb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 12 17:21:02 2020 -0500

    Update Marlin website links to https

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 809ee83de8..ce594f7c22 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -26,7 +26,7 @@
  * UTF-8 for Graphical Display
  *
  * LCD Menu Messages
- * See also http://marlinfw.org/docs/development/lcd_language.html
+ * See also https://marlinfw.org/docs/development/lcd_language.html
  *
  */
 

commit 6b9a17be16448459cdbf3447598094fae455e39a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 26 02:02:20 2020 -0600

    Language: "failsafe" => "Defaults"

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index ddff7f5473..809ee83de8 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -141,7 +141,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà");               // "LCD contrast"
   PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
   PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü");               // "Load memory"
-  PROGMEM Language_Str MSG_RESTORE_FAILSAFE                = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà");               // "Restore failsafe"
+  PROGMEM Language_Str MSG_RESTORE_DEFAULTS                = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà");               // "Restore Defaults"
   PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH  _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•");                  // "Refresh"
   PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥");               // "Info screen"
   PROGMEM Language_Str MSG_PREPARE                         = _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§");               // "Prepare"

commit 8ba5ef8cae5f7323688749e699606dcc14182c3e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 24 05:33:16 2020 -0600

    "Init. Media" => "Attach Media"

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index d5a5ec33c3..ddff7f5473 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -166,7 +166,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s");            // "UnRet  V"
   PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü");                 // "AutoRetr."
   PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥");              // "Change filament"
-  PROGMEM Language_Str MSG_INIT_MEDIA                      = _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü");             // "Init. SD card"
+  PROGMEM Language_Str MSG_ATTACH_MEDIA                    = _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü");             // "Init. SD card"
   PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥");               // "Change SD card"
   PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§");            // "Z probe out. bed"
   PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥");          // "BLTouch Self-Test"

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 81580b71ed..d5a5ec33c3 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit bbfbcb8a5d938df2f2da0baca128046a0eb4792d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jan 26 03:20:02 2020 -0600

    Clean up PID language defines

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index adb39dfe40..81580b71ed 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -110,14 +110,6 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß");               // "Autotemp"
   PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("„Ç™„É≥");                         // "On"
   PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("„Ç™„Éï");                         // "Off"
-  PROGMEM Language_Str MSG_PID_P                           = _UxGT("PID-P");
-  PROGMEM Language_Str MSG_PID_P_E                         = _UxGT("PID-P *");
-  PROGMEM Language_Str MSG_PID_I                           = _UxGT("PID-I");
-  PROGMEM Language_Str MSG_PID_I_E                         = _UxGT("PID-I *");
-  PROGMEM Language_Str MSG_PID_D                           = _UxGT("PID-D");
-  PROGMEM Language_Str MSG_PID_D_E                         = _UxGT("PID-D *");
-  PROGMEM Language_Str MSG_PID_C                           = _UxGT("PID-C");
-  PROGMEM Language_Str MSG_PID_C_E                         = _UxGT("PID-C *");
   PROGMEM Language_Str MSG_SELECT                          = _UxGT("„Çª„É≥„Çø„ÇØ");                     // "Select"
   PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("„Çª„É≥„Çø„ÇØ *");
   PROGMEM Language_Str MSG_ACC                             = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤");               // "Accel"

commit aa4db785f257942ed9869486288d6612c41421a6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jan 3 19:46:05 2020 -0600

    MSG_WATCH => MSG_INFO_SCREEN

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 80be159a8e..adb39dfe40 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -151,7 +151,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü");               // "Load memory"
   PROGMEM Language_Str MSG_RESTORE_FAILSAFE                = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà");               // "Restore failsafe"
   PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH  _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•");                  // "Refresh"
-  PROGMEM Language_Str MSG_WATCH                           = _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥");               // "Info screen"
+  PROGMEM Language_Str MSG_INFO_SCREEN                     = _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥");               // "Info screen"
   PROGMEM Language_Str MSG_PREPARE                         = _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§");               // "Prepare"
   PROGMEM Language_Str MSG_TUNE                            = _UxGT("„ÉÅ„Éß„Ç¶„Çª„Ç§");                    // "Tune"
   PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");                  // "Pause print"

commit 1c4f672eae494875c36eafe0e050222c6bb7bf1e
Author: dagorel <37673727+dagorel@users.noreply.github.com>
Date:   Wed Dec 11 06:37:25 2019 +0100

    Formalize DAC percent strings (#16176)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index ae030dab78..80be159a8e 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -223,7 +223,10 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥");              // "Max Temp"
   PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ");                // "Power Supply"
   PROGMEM Language_Str MSG_DRIVE_STRENGTH                  = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ");              // "Drive Strength"
-  PROGMEM Language_Str MSG_DAC_PERCENT                     = _UxGT("DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_X                   = _UxGT("X DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "X Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_Y                   = _UxGT("Y DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "Y Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_Z                   = _UxGT("Z DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "Z Driver %"
+  PROGMEM Language_Str MSG_DAC_PERCENT_E                   = _UxGT("E DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "E Driver %"
   PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_PAUSE    = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");
   PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"

commit 27cb4db80eae73eb842f1a944260517bb8783eb3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 14 20:30:30 2019 -0600

    Reduced string storage using tokens (#15593)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index d9538c5251..ae030dab78 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -65,36 +65,16 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");       // "Offsets applied"
   PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà");                 // "Set origin"
   PROGMEM Language_Str MSG_PREHEAT_1                       = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_1_H0                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N0;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_1_H1                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N1;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_1_H2                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N2;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_1_H3                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N3;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_1_H4                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N4;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_1_H5                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N5;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_1_H                     = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
   PROGMEM Language_Str MSG_PREHEAT_1_END                   = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E0                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N0;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E1                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N1;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E2                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N2;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E3                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N3;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E4                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N4;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_1_END_E5                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N5;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E                 = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
   PROGMEM Language_Str MSG_PREHEAT_1_ALL                   = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
   PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY               = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
   PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS              = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
   PROGMEM Language_Str MSG_PREHEAT_2                       = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_2_H0                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N0;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_2_H1                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N1;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_2_H2                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N2;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_2_H3                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N3;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_2_H4                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N4;       // "Preheat " PREHEAT_1_LABEL
-  PROGMEM Language_Str MSG_PREHEAT_2_H5                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N5;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_2_H                     = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ~");       // "Preheat " PREHEAT_1_LABEL
   PROGMEM Language_Str MSG_PREHEAT_2_END                   = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E0                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N0;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E1                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N1;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E2                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N2;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E3                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N3;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E4                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N4;  // " Nozzle"
-  PROGMEM Language_Str MSG_PREHEAT_2_END_E5                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N5;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E                 = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ~");  // " Nozzle"
   PROGMEM Language_Str MSG_PREHEAT_2_ALL                   = PREHEAT_2_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
   PROGMEM Language_Str MSG_PREHEAT_2_BEDONLY               = PREHEAT_2_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
   PROGMEM Language_Str MSG_PREHEAT_2_SETTINGS              = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
@@ -131,40 +111,15 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("„Ç™„É≥");                         // "On"
   PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("„Ç™„Éï");                         // "Off"
   PROGMEM Language_Str MSG_PID_P                           = _UxGT("PID-P");
-  PROGMEM Language_Str MSG_PID_P_E0                        = _UxGT("PID-P ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_PID_P_E1                        = _UxGT("PID-P ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_PID_P_E2                        = _UxGT("PID-P ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_PID_P_E3                        = _UxGT("PID-P ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_PID_P_E4                        = _UxGT("PID-P ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_PID_P_E5                        = _UxGT("PID-P ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_P_E                         = _UxGT("PID-P *");
   PROGMEM Language_Str MSG_PID_I                           = _UxGT("PID-I");
-  PROGMEM Language_Str MSG_PID_I_E0                        = _UxGT("PID-I ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_PID_I_E1                        = _UxGT("PID-I ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_PID_I_E2                        = _UxGT("PID-I ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_PID_I_E3                        = _UxGT("PID-I ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_PID_I_E4                        = _UxGT("PID-I ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_PID_I_E5                        = _UxGT("PID-I ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_I_E                         = _UxGT("PID-I *");
   PROGMEM Language_Str MSG_PID_D                           = _UxGT("PID-D");
-  PROGMEM Language_Str MSG_PID_D_E0                        = _UxGT("PID-D ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_PID_D_E1                        = _UxGT("PID-D ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_PID_D_E2                        = _UxGT("PID-D ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_PID_D_E3                        = _UxGT("PID-D ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_PID_D_E4                        = _UxGT("PID-D ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_PID_D_E5                        = _UxGT("PID-D ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_D_E                         = _UxGT("PID-D *");
   PROGMEM Language_Str MSG_PID_C                           = _UxGT("PID-C");
-  PROGMEM Language_Str MSG_PID_C_E0                        = _UxGT("PID-C ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_PID_C_E1                        = _UxGT("PID-C ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_PID_C_E2                        = _UxGT("PID-C ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_PID_C_E3                        = _UxGT("PID-C ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_PID_C_E4                        = _UxGT("PID-C ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_PID_C_E5                        = _UxGT("PID-C ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_C_E                         = _UxGT("PID-C *");
   PROGMEM Language_Str MSG_SELECT                          = _UxGT("„Çª„É≥„Çø„ÇØ");                     // "Select"
-  PROGMEM Language_Str MSG_SELECT_E0                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_SELECT_E1                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_SELECT_E2                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_SELECT_E3                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_SELECT_E4                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_SELECT_E5                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_SELECT_E                        = _UxGT("„Çª„É≥„Çø„ÇØ *");
   PROGMEM Language_Str MSG_ACC                             = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤");               // "Accel"
   PROGMEM Language_Str MSG_JERK                            = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s");                  // "Jerk"
   PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_A;             // "Va-jerk"
@@ -178,12 +133,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax B"
   PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax C"
   PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax E"
-  PROGMEM Language_Str MSG_VMAX_E0                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E0;  // "Vmax E1"
-  PROGMEM Language_Str MSG_VMAX_E1                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E1;  // "Vmax E2"
-  PROGMEM Language_Str MSG_VMAX_E2                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E2;  // "Vmax E3"
-  PROGMEM Language_Str MSG_VMAX_E3                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E3;  // "Vmax E4"
-  PROGMEM Language_Str MSG_VMAX_E4                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E4;  // "Vmax E5"
-  PROGMEM Language_Str MSG_VMAX_E5                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E5;  // "Vmax E6"
+  PROGMEM Language_Str MSG_VMAX_EN                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ *");  // "Vmax E1"
   PROGMEM Language_Str MSG_VMIN                            = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
   PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
   PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤");               // "Accel"
@@ -195,12 +145,7 @@ namespace Language_jp_kana {
   PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà");                   // "Filament"
   PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E in mm¬≥");
   PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§");            // "Fil. Dia."
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E0                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E0;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E1                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E1;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E2                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E2;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E3                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E3;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E4                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E4;
-  PROGMEM Language_Str MSG_FILAMENT_DIAM_E5                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E                 = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ *");
   PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà");               // "LCD contrast"
   PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
   PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü");               // "Load memory"

commit 6a865a614620d71521bd3dc032adffe0bf82378c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Oct 9 18:46:10 2019 -0600

    Multi-language support (#15453)

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
index 00403054db..d9538c5251 100644
--- a/Marlin/src/lcd/language/language_jp_kana.h
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -31,224 +31,284 @@
  */
 
 //#define DISPLAY_CHARSET_ISO10646_KANA
-#define CHARSIZE 3
 
-// This just to show the potential benefit of unicode.
-// This translation can be improved by using the full charset of unicode codeblock U+30A0 to U+30FF.
+namespace Language_jp_kana {
+  using namespace Language_en; // Inherit undefined strings from English
 
-// Áâá‰ªÆÂêçË°®Á§∫ÂÆöÁæ©
-#define WELCOME_MSG                         MACHINE_NAME _UxGT(" „Ç∏„É•„É≥„Éì„Ç´„É≥„É™„Éß„Ç¶")
-#define MSG_MEDIA_INSERTED                  _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„ÇΩ„Ç¶„Éã„É•„Ç¶„Çµ„É¨„Éû„Ç∑„Çø")        // "Card inserted"
-#define MSG_MEDIA_REMOVED                   _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥")               // "Card removed"
-#define MSG_RELEASE_MEDIA                   _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑")
-#define MSG_MEDIA_RELEASED                  _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥")
-#define MSG_LCD_ENDSTOPS                    _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó")                  // "Endstops" // Max length 8 characters
-#define MSG_MAIN                            _UxGT("„É°„Ç§„É≥")                       // "Main"
-#define MSG_AUTOSTART                       _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑")                   // "Autostart"
-#define MSG_DISABLE_STEPPERS                _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï")            // "Disable steppers"
-#define MSG_DEBUG_MENU                      _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº")                // "Debug Menu"
-#define MSG_PROGRESS_BAR_TEST               _UxGT("„Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº „ÉÜ„Çπ„Éà")            // "Progress Bar Test"
-#define MSG_AUTO_HOME                       _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠")                  // "Auto home"
-#define MSG_AUTO_HOME_X                     _UxGT("X„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠")             // "Home X"
-#define MSG_AUTO_HOME_Y                     _UxGT("Y„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠")             // "Home Y"
-#define MSG_AUTO_HOME_Z                     _UxGT("Z„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠")             // "Home Z"
-#define MSG_LEVEL_BED_HOMING                _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠„ÉÅ„É•„Ç¶")              // "Homing XYZ"
-#define MSG_LEVEL_BED_WAITING               _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„Ç§„Ç∑")                // "Click to Begin"
-#define MSG_LEVEL_BED_NEXT_POINT            _UxGT("„ÉÑ„ÇÆ„Éé„ÇΩ„ÇØ„ÉÜ„Ç§„ÉÜ„É≥„Éò")             // "Next Point"
-#define MSG_LEVEL_BED_DONE                  _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶")              // "Leveling Done!"
-#define MSG_SET_HOME_OFFSETS                _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§")         // "Set home offsets"
-#define MSG_HOME_OFFSETS_APPLIED            _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø")       // "Offsets applied"
-#define MSG_SET_ORIGIN                      _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà")                 // "Set origin"
-#define MSG_PREHEAT_1                       _UxGT(PREHEAT_1_LABEL " „É®„Éç„ÉÑ")       // "Preheat " PREHEAT_1_LABEL
-#define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 _UxGT(" ")
-#define MSG_PREHEAT_1_ALL                   _UxGT(PREHEAT_1_LABEL " „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ")  // " All"
-#define MSG_PREHEAT_1_BEDONLY               _UxGT(PREHEAT_1_LABEL " „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ")  // " Bed"
-#define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 _UxGT("„Çª„ÉÉ„ÉÜ„Ç§")       // " conf"
-#define MSG_PREHEAT_2                       _UxGT(PREHEAT_2_LABEL " „É®„Éç„ÉÑ")      // "Preheat " PREHEAT_2_LABEL
-#define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 _UxGT(" ")
-#define MSG_PREHEAT_2_ALL                   _UxGT(PREHEAT_2_LABEL " „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ")  // " All"
-#define MSG_PREHEAT_2_BEDONLY               _UxGT(PREHEAT_2_LABEL " „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ")  // " Bed"
-#define MSG_PREHEAT_2_SETTINGS              MSG_PREHEAT_2 _UxGT("„Çª„ÉÉ„ÉÜ„Ç§")       // " conf"
-#define MSG_COOLDOWN                        _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑")                  // "Cooldown"
-#define MSG_SWITCH_PS_ON                    _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥")                 // "Switch power on"
-#define MSG_SWITCH_PS_OFF                   _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï")                 // "Switch power off"
-#define MSG_EXTRUDE                         _UxGT("„Ç™„Ç∑„ÉÄ„Ç∑")                     // "Extrude"
-#define MSG_RETRACT                         _UxGT("„Éí„Ç≠„Ç≥„Éü„Çª„ÉÉ„ÉÜ„Ç§")                // "Retract"
-#define MSG_MOVE_AXIS                       _UxGT("„Ç∏„ÇØ„Ç§„Éâ„Ç¶")                    // "Move axis"
-#define MSG_BED_LEVELING                    _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞")                // "Bed leveling"
-#define MSG_LEVEL_BED                       _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞")                // "Level bed"
+  constexpr uint8_t    CHARSIZE                            = 3;
+  PROGMEM Language_Str LANGUAGE                            = _UxGT("Japanese");
 
-#define MSG_MOVING                          _UxGT("„Ç§„Éâ„Ç¶„ÉÅ„É•„Ç¶")                   // "Moving..."
-#define MSG_FREE_XY                         _UxGT("XY„Ç∏„ÇØ „Ç´„Ç§„Éõ„Ç¶")                // "Free XY"
-#define MSG_MOVE_X                          _UxGT("X„Ç∏„ÇØ „Ç§„Éâ„Ç¶")                  // "Move X"
-#define MSG_MOVE_Y                          _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶")                  // "Move Y"
-#define MSG_MOVE_Z                          _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶")                  // "Move Z"
-#define MSG_MOVE_E                          _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº")                // "Extruder"
-#define MSG_MOVE_Z_DIST                     _UxGT("%smm „Ç§„Éâ„Ç¶")                  // "Move 0.025mm"
-#define MSG_MOVE_01MM                       _UxGT("0.1mm „Ç§„Éâ„Ç¶")                 // "Move 0.1mm"
-#define MSG_MOVE_1MM                        _UxGT("  1mm „Ç§„Éâ„Ç¶")                 // "Move 1mm"
-#define MSG_MOVE_10MM                       _UxGT(" 10mm „Ç§„Éâ„Ç¶")                 // "Move 10mm"
-#define MSG_SPEED                           _UxGT("„ÇΩ„ÇØ„Éâ")                       // "Speed"
-#define MSG_BED_Z                           _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà")                   // "Bed Z"
-#define MSG_NOZZLE                          _UxGT("„Éé„Ç∫„É´")                       // "Nozzle"
-#define MSG_BED                             _UxGT("„Éô„ÉÉ„Éâ")                       // "Bed"
-#define MSG_FAN_SPEED                       _UxGT("„Éï„Ç°„É≥„ÇΩ„ÇØ„Éâ")                    // "Fan speed"
-#define MSG_FLOW                            _UxGT("„Éà„Ç∑„É•„ÉÑ„É™„Éß„Ç¶")                   // "Flow"
-#define MSG_CONTROL                         _UxGT("„Çª„Ç§„ÇÆ„Éß")                      // "Control"
-#define MSG_MIN                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„ÉÜ„Ç§") // " Min"
-#define MSG_MAX                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„Ç≥„Ç¶") // " Max"
-#define MSG_FACTOR                          _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" „Éï„Ç°„ÇØ„Çø„Éº") // " Fact"
-#define MSG_AUTOTEMP                        _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß")               // "Autotemp"
-#define MSG_LCD_ON                          _UxGT("„Ç™„É≥")                         // "On"
-#define MSG_LCD_OFF                         _UxGT("„Ç™„Éï")                         // "Off"
-#define MSG_PID_P                           _UxGT("PID-P")
-#define MSG_PID_I                           _UxGT("PID-I")
-#define MSG_PID_D                           _UxGT("PID-D")
-#define MSG_PID_C                           _UxGT("PID-C")
-#define MSG_SELECT                          _UxGT("„Çª„É≥„Çø„ÇØ")                     // "Select"
-#define MSG_ACC                             _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤")               // "Accel"
-#define MSG_JERK                            _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s")                  // "Jerk"
-#if IS_KINEMATIC
-  #define MSG_VA_JERK                       _UxGT("A„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Va-jerk"
-  #define MSG_VB_JERK                       _UxGT("B„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vb-jerk"
-  #define MSG_VC_JERK                       _UxGT("C„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vc-jerk"
-  #define MSG_ASTEPS                        _UxGT("A„Çπ„ÉÜ„ÉÉ„Éó/mm")
-  #define MSG_BSTEPS                        _UxGT("B„Çπ„ÉÜ„ÉÉ„Éó/mm")
-  #define MSG_CSTEPS                        _UxGT("C„Çπ„ÉÜ„ÉÉ„Éó/mm")
-#else
-  #define MSG_VA_JERK                       _UxGT("X„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vx-jerk"
-  #define MSG_VB_JERK                       _UxGT("Y„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vy-jerk"
-  #define MSG_VC_JERK                       _UxGT("Z„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vz-jerk"
-  #define MSG_ASTEPS                        _UxGT("X„Çπ„ÉÜ„ÉÉ„Éó/mm")
-  #define MSG_BSTEPS                        _UxGT("Y„Çπ„ÉÜ„ÉÉ„Éó/mm")
-  #define MSG_CSTEPS                        _UxGT("Z„Çπ„ÉÜ„ÉÉ„Éó/mm")
-#endif
-#define MSG_VE_JERK                         _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ")          // "Ve-jerk"
-#define MSG_VMAX                            _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ")            // "Vmax "
-#define MSG_VMIN                            _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ")           // "Vmin"
-#define MSG_VTRAV_MIN                       _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ")           // "VTrav min"
-#define MSG_ACCELERATION                    MSG_ACC
-#define MSG_AMAX                            _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç´„ÇΩ„ÇØ„Éâ ")              // "Amax "
-#define MSG_A_RETRACT                       _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ")               // "A-retract"
-#define MSG_A_TRAVEL                        _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ")                // "A-travel"
-#define MSG_TEMPERATURE                     _UxGT("„Ç™„É≥„Éâ")                      // "Temperature"
-#define MSG_MOTION                          _UxGT("„Ç¶„Ç¥„Ç≠„Çª„ÉÉ„ÉÜ„Ç§")                // "Motion"
-#define MSG_FILAMENT                        _UxGT("„Éï„Ç£„É©„É°„É≥„Éà")                   // "Filament"
-#define MSG_VOLUMETRIC_ENABLED              _UxGT("E in mm¬≥")
-#define MSG_FILAMENT_DIAM                   _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§")            // "Fil. Dia."
-#define MSG_CONTRAST                        _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà")               // "LCD contrast"
-#define MSG_STORE_EEPROM                    _UxGT("EEPROM„Éò„Éõ„Çæ„É≥")               // "Store memory"
-#define MSG_LOAD_EEPROM                     _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü")               // "Load memory"
-#define MSG_RESTORE_FAILSAFE                _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà")               // "Restore failsafe"
-#define MSG_REFRESH                         _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•")                  // "Refresh"
-#define MSG_WATCH                           _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥")               // "Info screen"
-#define MSG_PREPARE                         _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§")               // "Prepare"
-#define MSG_TUNE                            _UxGT("„ÉÅ„Éß„Ç¶„Çª„Ç§")                    // "Tune"
-#define MSG_PAUSE_PRINT                     _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑")                  // "Pause print"
-#define MSG_RESUME_PRINT                    _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§")                // "Resume print"
-#define MSG_STOP_PRINT                      _UxGT("„Éó„É™„É≥„Éà„ÉÜ„Ç§„Ç∑")                 // "Stop print"
-#define MSG_MEDIA_MENU                      _UxGT("„É°„Éá„Ç£„Ç¢„Ç´„É©„Éó„É™„É≥„Éà")            // "Print from SD"
-#define MSG_NO_MEDIA                        _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥")            // "No SD card"
-#define MSG_DWELL                           _UxGT("„Ç≠„É•„Ç¶„Ç∑")                     // "Sleep..."
-#define MSG_USERWAIT                        _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")           // "Wait for user..."
-//#define MSG_USERWAIT                      _UxGT("„ÉÑ„ÉÖ„Ç±„É´„Éã„Éè„ÇØ„É™„ÉÉ„ÇØ„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§")
-#define MSG_PRINT_ABORTED                   _UxGT("„Éó„É™„É≥„Éà„Ç¨„ÉÅ„É•„Ç¶„Ç∑„Çµ„É¨„Éû„Ç∑„Çø")       // "Print aborted"
-#define MSG_NO_MOVE                         _UxGT("„Ç¶„Ç¥„Ç≠„Éû„Çª„É≥")                  // "No move."
-#define MSG_KILLED                          _UxGT("„Éí„Ç∏„Éß„Ç¶„ÉÜ„Ç§„Ç∑")                  // "KILLED. "
-#define MSG_STOPPED                         _UxGT("„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø")                  // "STOPPED. "
-#define MSG_CONTROL_RETRACT                 _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶ mm")                // "Retract mm"
-#define MSG_CONTROL_RETRACT_SWAP            _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶S mm")               // "Swap Re.mm"
-#define MSG_CONTROL_RETRACTF                _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s")             // "Retract  V"
-#define MSG_CONTROL_RETRACT_ZHOP            _UxGT("„Éé„Ç∫„É´„Çø„Ç§„Éí mm")                // "Hop mm"
-#define MSG_CONTROL_RETRACT_RECOVER         _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm")               // "UnRet mm"
-#define MSG_CONTROL_RETRACT_RECOVER_SWAP    _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm")              // "S UnRet mm"
-#define MSG_CONTROL_RETRACT_RECOVERF        _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s")            // "UnRet  V"
-#define MSG_AUTORETRACT                     _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü")                 // "AutoRetr."
-#define MSG_FILAMENTCHANGE                  _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥")              // "Change filament"
-#define MSG_INIT_MEDIA                      _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü")             // "Init. SD card"
-#define MSG_CHANGE_MEDIA                    _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥")               // "Change SD card"
-#define MSG_ZPROBE_OUT                      _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§")            // "Z probe out. bed"
-#define MSG_BLTOUCH_SELFTEST                _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥")          // "BLTouch Self-Test"
-#define MSG_BLTOUCH_RESET                   _UxGT("BLTouch „É™„Çª„ÉÉ„Éà")             // "Reset BLTouch"
-#define MSG_HOME_FIRST                      _UxGT("„Çµ„Ç≠„Éã %s%s%s „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§") // "Home ... first"
-#define MSG_ZPROBE_ZOFFSET                  _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà")                   // "Z Offset"
-#define MSG_BABYSTEP_X                      _UxGT("X„Ç∏„ÇØ „Éì„Éâ„Ç¶")                  // "Babystep X"
-#define MSG_BABYSTEP_Y                      _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶")                  // "Babystep Y"
-#define MSG_BABYSTEP_Z                      _UxGT("Z„Ç∏„ÇØ „Éì„Éâ„Ç¶")                  // "Babystep Z"
-#define MSG_ENDSTOP_ABORT                   _UxGT("„Ç§„Éâ„Ç¶„Ç≤„É≥„Ç´„Ç§„Ç±„É≥„ÉÅ„Ç≠„Éé„Ç¶")         // "Endstop abort"
-#define MSG_HEATING_FAILED_LCD              _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§")                 // "Heating failed"
-#define MSG_ERR_REDUNDANT_TEMP              _UxGT("„Ç®„É©„Éº:„Ç∏„Éß„Ç¶„ÉÅ„Éß„Ç¶„Çµ„Éº„Éü„Çπ„Çø„Éº„Ç≠„Éé„Ç¶")  // "Err: REDUNDANT TEMP"
-#define MSG_THERMAL_RUNAWAY                 _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶")                   // "THERMAL RUNAWAY"
-#define MSG_ERR_MAXTEMP                     _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´")         // "Err: MAXTEMP"
-#define MSG_ERR_MINTEMP                     _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥")          // "Err: MINTEMP"
-#define MSG_ERR_MAXTEMP_BED                 _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´")    // "Err: MAXTEMP BED"
-#define MSG_ERR_MINTEMP_BED                 _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥")     // "Err: MINTEMP BED"
-#define MSG_ERR_Z_HOMING                    _UxGT("„Çµ„Ç≠„Éã XY „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§")     // "Home XY first"
-#define MSG_HALTED                          _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø")         // "PRINTER HALTED"
-#define MSG_PLEASE_RESET                    _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§")              // "Please reset"
-#define MSG_SHORT_DAY                       _UxGT("d")                          // One character only
-#define MSG_SHORT_HOUR                      _UxGT("h")                          // One character only
-#define MSG_SHORT_MINUTE                    _UxGT("m")                          // One character only
-#define MSG_HEATING                         _UxGT("„Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶")                   // "Heating..."
-#define MSG_BED_HEATING                     _UxGT("„Éô„ÉÉ„Éâ „Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶")              // "Bed Heating..."
-#define MSG_DELTA_CALIBRATE                 _UxGT("„Éá„É´„Çø „Ç≥„Ç¶„Çª„Ç§")                // "Delta Calibration"
-#define MSG_DELTA_CALIBRATE_X               _UxGT("X„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§")                 // "Calibrate X"
-#define MSG_DELTA_CALIBRATE_Y               _UxGT("Y„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§")                 // "Calibrate Y"
-#define MSG_DELTA_CALIBRATE_Z               _UxGT("Z„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§")                 // "Calibrate Z"
-#define MSG_DELTA_CALIBRATE_CENTER          _UxGT("„ÉÅ„É•„Ç¶„Ç∑„É≥ „Ç≥„Ç¶„Çª„Ç§")              // "Calibrate Center"
-#define MSG_INFO_MENU                       _UxGT("„Ç≥„Éé„Éó„É™„É≥„Çø„Éº„Éã„ÉÑ„Ç§„ÉÜ")             // "About Printer"
-#define MSG_INFO_PRINTER_MENU               _UxGT("„Éó„É™„É≥„Çø„Éº„Ç∏„Éß„Ç¶„Éõ„Ç¶")              // "Printer Info"
-#define MSG_INFO_STATS_MENU                 _UxGT("„Éó„É™„É≥„Éà„Ç∏„Éß„Ç¶„Ç≠„Éß„Ç¶")              // "Printer Stats"
-#define MSG_INFO_BOARD_MENU                 _UxGT("„Çª„Ç§„ÇÆ„Éß„Ç±„Ç§„Ç∏„Éß„Ç¶„Éõ„Ç¶")            // "Board Info"
-#define MSG_INFO_THERMISTOR_MENU            _UxGT("„Çµ„Éº„Éü„Çπ„Çø„Éº")                   // "Thermistors"
-#define MSG_INFO_EXTRUDERS                  _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº„Çπ„Ç¶")             // "Extruders"
-#define MSG_INFO_BAUDRATE                   _UxGT("„Éú„Éº„É¨„Éº„Éà")                    // "Baud"
-#define MSG_INFO_PROTOCOL                   _UxGT("„Éó„É≠„Éà„Ç≥„É´")                    // "Protocol"
-#define MSG_CASE_LIGHT                      _UxGT("„Ç≠„Éß„Ç¶„Çø„Ç§„Éä„Ç§„Ç∑„Éß„Ç¶„É°„Ç§")       // "Case light"
-#define MSG_INFO_PRINT_COUNT                _UxGT("„Éó„É™„É≥„Éà„Çπ„Ç¶ ")                  // "Print Count"
-#define MSG_INFO_COMPLETED_PRINTS           _UxGT("„Ç´„É≥„É™„Éß„Ç¶„Çπ„Ç¶")                  // "Completed"
-#define MSG_INFO_PRINT_TIME                 _UxGT("„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥„É´„Ç§„Ç±„Ç§")            // "Total print time"
-#define MSG_INFO_PRINT_LONGEST              _UxGT("„Çµ„Ç§„ÉÅ„Éß„Ç¶„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥")           // "Longest job time"
-#define MSG_INFO_PRINT_FILAMENT             _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç∑„É®„Ç¶„É™„Éß„Ç¶„É´„Ç§„Ç±„Ç§")       // "Extruded total"
-#define MSG_INFO_MIN_TEMP                   _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥")              // "Min Temp"
-#define MSG_INFO_MAX_TEMP                   _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥")              // "Max Temp"
-#define MSG_INFO_PSU                        _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ")                // "Power Supply"
-#define MSG_DRIVE_STRENGTH                  _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ")              // "Drive Strength"
-#define MSG_DAC_PERCENT                     _UxGT("DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %")               // "Driver %"
-#define MSG_DAC_EEPROM_WRITE                MSG_STORE_EEPROM                    // "DAC EEPROM Write"
-#define MSG_FILAMENT_CHANGE_HEADER_PAUSE    _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑")
-#define MSG_FILAMENT_CHANGE_OPTION_RESUME   _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§")                // "Resume print"
-#define MSG_FILAMENT_CHANGE_INIT_1          _UxGT("„Ç≥„Ç¶„Ç´„É≥„É≤„Ç´„Ç§„Ç∑„Ç∑„Éû„Çπ")            // "Wait for start"
-#define MSG_FILAMENT_CHANGE_INIT_2          _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")            // "of the filament"
-#define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Éå„Ç≠„ÉÄ„Ç∑„ÉÅ„É•„Ç¶")          // "Wait for"
-#define MSG_FILAMENT_CHANGE_UNLOAD_2        _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")            // "filament unload"
-#define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„É≤„ÇΩ„Ç¶„Éã„É•„Ç¶„Ç∑,")         // "Insert filament"
-#define MSG_FILAMENT_CHANGE_INSERT_2        _UxGT("„ÇØ„É™„ÉÉ„ÇØ„Çπ„É´„Éà„Çæ„ÉÉ„Ç≥„Ç¶„Ç∑„Éû„Çπ")         // "and press button"
-#define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÇΩ„Ç¶„ÉÜ„É≥„ÉÅ„É•„Ç¶")          // "Wait for"
-#define MSG_FILAMENT_CHANGE_LOAD_2          _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")            // "filament load"
-#define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("„Éó„É™„É≥„Éà„É≤„Çµ„Ç§„Ç´„Ç§„Ç∑„Éû„Çπ")           // "Wait for print"
-#define MSG_FILAMENT_CHANGE_RESUME_2        _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")            // "to resume"
+  // This is just to show the potential benefit of Unicode.
+  // This translation can be improved by using the full charset of unicode codeblock U+30A0 to U+30FF.
 
-#define MSG_EXPECTED_PRINTER                _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº")               // "Wrong printer"
+  // Áâá‰ªÆÂêçË°®Á§∫ÂÆöÁæ©
+  PROGMEM Language_Str WELCOME_MSG                         = MACHINE_NAME _UxGT(" „Ç∏„É•„É≥„Éì„Ç´„É≥„É™„Éß„Ç¶");
+  PROGMEM Language_Str MSG_MEDIA_INSERTED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„ÇΩ„Ç¶„Éã„É•„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");        // "Card inserted"
+  PROGMEM Language_Str MSG_MEDIA_REMOVED                   = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
+  PROGMEM Language_Str MSG_RELEASE_MEDIA                   = _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑");
+  PROGMEM Language_Str MSG_MEDIA_RELEASED                  = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
+  PROGMEM Language_Str MSG_LCD_ENDSTOPS                    = _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó");                  // "Endstops" // Max length 8 characters
+  PROGMEM Language_Str MSG_MAIN                            = _UxGT("„É°„Ç§„É≥");                       // "Main"
+  PROGMEM Language_Str MSG_AUTOSTART                       = _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑");                   // "Autostart"
+  PROGMEM Language_Str MSG_DISABLE_STEPPERS                = _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï");            // "Disable steppers"
+  PROGMEM Language_Str MSG_DEBUG_MENU                      = _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº");                // "Debug Menu"
+  PROGMEM Language_Str MSG_PROGRESS_BAR_TEST               = _UxGT("„Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº „ÉÜ„Çπ„Éà");            // "Progress Bar Test"
+  PROGMEM Language_Str MSG_AUTO_HOME                       = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");                  // "Auto home"
+  PROGMEM Language_Str MSG_AUTO_HOME_X                     = _UxGT("X„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home X"
+  PROGMEM Language_Str MSG_AUTO_HOME_Y                     = _UxGT("Y„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home Y"
+  PROGMEM Language_Str MSG_AUTO_HOME_Z                     = _UxGT("Z„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠");             // "Home Z"
+  PROGMEM Language_Str MSG_LEVEL_BED_HOMING                = _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠„ÉÅ„É•„Ç¶");              // "Homing XYZ"
+  PROGMEM Language_Str MSG_LEVEL_BED_WAITING               = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„Ç§„Ç∑");                // "Click to Begin"
+  PROGMEM Language_Str MSG_LEVEL_BED_NEXT_POINT            = _UxGT("„ÉÑ„ÇÆ„Éé„ÇΩ„ÇØ„ÉÜ„Ç§„ÉÜ„É≥„Éò");             // "Next Point"
+  PROGMEM Language_Str MSG_LEVEL_BED_DONE                  = _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶");              // "Leveling Done!"
+  PROGMEM Language_Str MSG_SET_HOME_OFFSETS                = _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§");         // "Set home offsets"
+  PROGMEM Language_Str MSG_HOME_OFFSETS_APPLIED            = _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø");       // "Offsets applied"
+  PROGMEM Language_Str MSG_SET_ORIGIN                      = _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà");                 // "Set origin"
+  PROGMEM Language_Str MSG_PREHEAT_1                       = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_1_H0                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N0;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_1_H1                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N1;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_1_H2                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N2;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_1_H3                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N3;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_1_H4                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N4;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_1_H5                    = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N5;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_1_END                   = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E0                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N0;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E1                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N1;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E2                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N2;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E3                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N3;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E4                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N4;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_1_END_E5                = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N5;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_1_ALL                   = PREHEAT_1_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
+  PROGMEM Language_Str MSG_PREHEAT_1_BEDONLY               = PREHEAT_1_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
+  PROGMEM Language_Str MSG_PREHEAT_1_SETTINGS              = PREHEAT_1_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+  PROGMEM Language_Str MSG_PREHEAT_2                       = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ");       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_2_H0                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N0;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_2_H1                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N1;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_2_H2                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N2;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_2_H3                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N3;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_2_H4                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N4;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_2_H5                    = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ ") LCD_STR_N5;       // "Preheat " PREHEAT_1_LABEL
+  PROGMEM Language_Str MSG_PREHEAT_2_END                   = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´");  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E0                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N0;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E1                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N1;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E2                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N2;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E3                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N3;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E4                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N4;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_2_END_E5                = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Éé„Ç∫„É´ ") LCD_STR_N5;  // " Nozzle"
+  PROGMEM Language_Str MSG_PREHEAT_2_ALL                   = PREHEAT_2_LABEL _UxGT(" „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ");  // " All"
+  PROGMEM Language_Str MSG_PREHEAT_2_BEDONLY               = PREHEAT_2_LABEL _UxGT(" „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ");  // " Bed"
+  PROGMEM Language_Str MSG_PREHEAT_2_SETTINGS              = PREHEAT_2_LABEL _UxGT(" „É®„Éç„ÉÑ„Çª„ÉÉ„ÉÜ„Ç§");  // " conf"
+  PROGMEM Language_Str MSG_COOLDOWN                        = _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑");                  // "Cooldown"
+  PROGMEM Language_Str MSG_SWITCH_PS_ON                    = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥");                 // "Switch power on"
+  PROGMEM Language_Str MSG_SWITCH_PS_OFF                   = _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï");                 // "Switch power off"
+  PROGMEM Language_Str MSG_EXTRUDE                         = _UxGT("„Ç™„Ç∑„ÉÄ„Ç∑");                     // "Extrude"
+  PROGMEM Language_Str MSG_RETRACT                         = _UxGT("„Éí„Ç≠„Ç≥„Éü„Çª„ÉÉ„ÉÜ„Ç§");                // "Retract"
+  PROGMEM Language_Str MSG_MOVE_AXIS                       = _UxGT("„Ç∏„ÇØ„Ç§„Éâ„Ç¶");                    // "Move axis"
+  PROGMEM Language_Str MSG_BED_LEVELING                    = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞");                // "Bed leveling"
+  PROGMEM Language_Str MSG_LEVEL_BED                       = _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞");                // "Level bed"
 
-#define MSG_CONFIGURATION                   _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Ç´„É≥„É™")
-#define MSG_ADVANCED_SETTINGS               _UxGT("„Ç∑„Éß„Ç¶„Çµ„Ç§„Çª„ÉÉ„ÉÜ„Ç§")
-#define MSG_OUTAGE_RECOVERY                 _UxGT("„Ç≥„Ç∑„Éß„Ç´„Ç§„Éï„ÇØ")
-#define MSG_INIT_EEPROM                     _UxGT("EEPROM„Ç∑„Éß„Ç≠„Ç´")
+  PROGMEM Language_Str MSG_MOVING                          = _UxGT("„Ç§„Éâ„Ç¶„ÉÅ„É•„Ç¶");                   // "Moving..."
+  PROGMEM Language_Str MSG_FREE_XY                         = _UxGT("XY„Ç∏„ÇØ „Ç´„Ç§„Éõ„Ç¶");                // "Free XY"
+  PROGMEM Language_Str MSG_MOVE_X                          = _UxGT("X„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move X"
+  PROGMEM Language_Str MSG_MOVE_Y                          = _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Y"
+  PROGMEM Language_Str MSG_MOVE_Z                          = _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶");                  // "Move Z"
+  PROGMEM Language_Str MSG_MOVE_E                          = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº");                // "Extruder"
+  PROGMEM Language_Str MSG_MOVE_Z_DIST                     = _UxGT("%smm „Ç§„Éâ„Ç¶");                  // "Move 0.025mm"
+  PROGMEM Language_Str MSG_MOVE_01MM                       = _UxGT("0.1mm „Ç§„Éâ„Ç¶");                 // "Move 0.1mm"
+  PROGMEM Language_Str MSG_MOVE_1MM                        = _UxGT("  1mm „Ç§„Éâ„Ç¶");                 // "Move 1mm"
+  PROGMEM Language_Str MSG_MOVE_10MM                       = _UxGT(" 10mm „Ç§„Éâ„Ç¶");                 // "Move 10mm"
+  PROGMEM Language_Str MSG_SPEED                           = _UxGT("„ÇΩ„ÇØ„Éâ");                       // "Speed"
+  PROGMEM Language_Str MSG_BED_Z                           = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Bed Z"
+  PROGMEM Language_Str MSG_NOZZLE                          = _UxGT("„Éé„Ç∫„É´");                       // "Nozzle"
+  PROGMEM Language_Str MSG_BED                             = _UxGT("„Éô„ÉÉ„Éâ");                       // "Bed"
+  PROGMEM Language_Str MSG_FAN_SPEED                       = _UxGT("„Éï„Ç°„É≥„ÇΩ„ÇØ„Éâ");                    // "Fan speed"
+  PROGMEM Language_Str MSG_FLOW                            = _UxGT("„Éà„Ç∑„É•„ÉÑ„É™„Éß„Ç¶");                   // "Flow"
+  PROGMEM Language_Str MSG_CONTROL                         = _UxGT("„Çª„Ç§„ÇÆ„Éß");                      // "Control"
+  PROGMEM Language_Str MSG_MIN                             = " " LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„ÉÜ„Ç§"); // " Min"
+  PROGMEM Language_Str MSG_MAX                             = " " LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„Ç≥„Ç¶"); // " Max"
+  PROGMEM Language_Str MSG_FACTOR                          = " " LCD_STR_THERMOMETER _UxGT(" „Éï„Ç°„ÇØ„Çø„Éº"); // " Fact"
+  PROGMEM Language_Str MSG_AUTOTEMP                        = _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß");               // "Autotemp"
+  PROGMEM Language_Str MSG_LCD_ON                          = _UxGT("„Ç™„É≥");                         // "On"
+  PROGMEM Language_Str MSG_LCD_OFF                         = _UxGT("„Ç™„Éï");                         // "Off"
+  PROGMEM Language_Str MSG_PID_P                           = _UxGT("PID-P");
+  PROGMEM Language_Str MSG_PID_P_E0                        = _UxGT("PID-P ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_PID_P_E1                        = _UxGT("PID-P ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_PID_P_E2                        = _UxGT("PID-P ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_PID_P_E3                        = _UxGT("PID-P ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_PID_P_E4                        = _UxGT("PID-P ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_PID_P_E5                        = _UxGT("PID-P ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_I                           = _UxGT("PID-I");
+  PROGMEM Language_Str MSG_PID_I_E0                        = _UxGT("PID-I ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_PID_I_E1                        = _UxGT("PID-I ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_PID_I_E2                        = _UxGT("PID-I ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_PID_I_E3                        = _UxGT("PID-I ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_PID_I_E4                        = _UxGT("PID-I ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_PID_I_E5                        = _UxGT("PID-I ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_D                           = _UxGT("PID-D");
+  PROGMEM Language_Str MSG_PID_D_E0                        = _UxGT("PID-D ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_PID_D_E1                        = _UxGT("PID-D ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_PID_D_E2                        = _UxGT("PID-D ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_PID_D_E3                        = _UxGT("PID-D ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_PID_D_E4                        = _UxGT("PID-D ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_PID_D_E5                        = _UxGT("PID-D ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_PID_C                           = _UxGT("PID-C");
+  PROGMEM Language_Str MSG_PID_C_E0                        = _UxGT("PID-C ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_PID_C_E1                        = _UxGT("PID-C ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_PID_C_E2                        = _UxGT("PID-C ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_PID_C_E3                        = _UxGT("PID-C ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_PID_C_E4                        = _UxGT("PID-C ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_PID_C_E5                        = _UxGT("PID-C ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_SELECT                          = _UxGT("„Çª„É≥„Çø„ÇØ");                     // "Select"
+  PROGMEM Language_Str MSG_SELECT_E0                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_SELECT_E1                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_SELECT_E2                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_SELECT_E3                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_SELECT_E4                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_SELECT_E5                       = _UxGT("„Çª„É≥„Çø„ÇØ ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_ACC                             = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤");               // "Accel"
+  PROGMEM Language_Str MSG_JERK                            = _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s");                  // "Jerk"
+  PROGMEM Language_Str MSG_VA_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_A;             // "Va-jerk"
+  PROGMEM Language_Str MSG_VB_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_B;             // "Vb-jerk"
+  PROGMEM Language_Str MSG_VC_JERK                         = _UxGT("„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s") LCD_STR_C;             // "Vc-jerk"
+  PROGMEM Language_Str MSG_A_STEPS                         = LCD_STR_A _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  PROGMEM Language_Str MSG_B_STEPS                         = LCD_STR_B _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  PROGMEM Language_Str MSG_C_STEPS                         = LCD_STR_C _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  PROGMEM Language_Str MSG_VE_JERK                         = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ");          // "Ve-jerk"
+  PROGMEM Language_Str MSG_VMAX_A                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax A"
+  PROGMEM Language_Str MSG_VMAX_B                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax B"
+  PROGMEM Language_Str MSG_VMAX_C                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax C"
+  PROGMEM Language_Str MSG_VMAX_E                          = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_A;  // "Vmax E"
+  PROGMEM Language_Str MSG_VMAX_E0                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E0;  // "Vmax E1"
+  PROGMEM Language_Str MSG_VMAX_E1                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E1;  // "Vmax E2"
+  PROGMEM Language_Str MSG_VMAX_E2                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E2;  // "Vmax E3"
+  PROGMEM Language_Str MSG_VMAX_E3                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E3;  // "Vmax E4"
+  PROGMEM Language_Str MSG_VMAX_E4                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E4;  // "Vmax E5"
+  PROGMEM Language_Str MSG_VMAX_E5                         = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ") LCD_STR_E5;  // "Vmax E6"
+  PROGMEM Language_Str MSG_VMIN                            = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ");           // "Vmin"
+  PROGMEM Language_Str MSG_VTRAV_MIN                       = _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ");           // "VTrav min"
+  PROGMEM Language_Str MSG_ACCELERATION                    = _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤");               // "Accel"
+  PROGMEM Language_Str MSG_AMAX                            = _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç´„ÇΩ„ÇØ„Éâ ");              // "Amax "
+  PROGMEM Language_Str MSG_A_RETRACT                       = _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ");               // "A-retract"
+  PROGMEM Language_Str MSG_A_TRAVEL                        = _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ");                // "A-travel"
+  PROGMEM Language_Str MSG_TEMPERATURE                     = _UxGT("„Ç™„É≥„Éâ");                      // "Temperature"
+  PROGMEM Language_Str MSG_MOTION                          = _UxGT("„Ç¶„Ç¥„Ç≠„Çª„ÉÉ„ÉÜ„Ç§");                // "Motion"
+  PROGMEM Language_Str MSG_FILAMENT                        = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà");                   // "Filament"
+  PROGMEM Language_Str MSG_VOLUMETRIC_ENABLED              = _UxGT("E in mm¬≥");
+  PROGMEM Language_Str MSG_FILAMENT_DIAM                   = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§");            // "Fil. Dia."
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E0                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E0;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E1                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E1;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E2                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E2;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E3                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E3;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E4                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E4;
+  PROGMEM Language_Str MSG_FILAMENT_DIAM_E5                = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§ ") LCD_STR_E5;
+  PROGMEM Language_Str MSG_CONTRAST                        = _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà");               // "LCD contrast"
+  PROGMEM Language_Str MSG_STORE_EEPROM                    = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
+  PROGMEM Language_Str MSG_LOAD_EEPROM                     = _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü");               // "Load memory"
+  PROGMEM Language_Str MSG_RESTORE_FAILSAFE                = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà");               // "Restore failsafe"
+  PROGMEM Language_Str MSG_REFRESH                         = LCD_STR_REFRESH  _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•");                  // "Refresh"
+  PROGMEM Language_Str MSG_WATCH                           = _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥");               // "Info screen"
+  PROGMEM Language_Str MSG_PREPARE                         = _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§");               // "Prepare"
+  PROGMEM Language_Str MSG_TUNE                            = _UxGT("„ÉÅ„Éß„Ç¶„Çª„Ç§");                    // "Tune"
+  PROGMEM Language_Str MSG_PAUSE_PRINT                     = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");                  // "Pause print"
+  PROGMEM Language_Str MSG_RESUME_PRINT                    = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
+  PROGMEM Language_Str MSG_STOP_PRINT                      = _UxGT("„Éó„É™„É≥„Éà„ÉÜ„Ç§„Ç∑");                 // "Stop print"
+  PROGMEM Language_Str MSG_MEDIA_MENU                      = _UxGT("„É°„Éá„Ç£„Ç¢„Ç´„É©„Éó„É™„É≥„Éà");            // "Print from SD"
+  PROGMEM Language_Str MSG_NO_MEDIA                        = _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥");               // "Card removed"
+  PROGMEM Language_Str MSG_DWELL                           = _UxGT("„Ç≠„É•„Ç¶„Ç∑");                     // "Sleep..."
+  PROGMEM Language_Str MSG_USERWAIT                        = _UxGT("„ÉÑ„ÉÖ„Ç±„É´„Éã„Éè„ÇØ„É™„ÉÉ„ÇØ„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");  // "Wait for user..."
+  PROGMEM Language_Str MSG_PRINT_ABORTED                   = _UxGT("„Éó„É™„É≥„Éà„Ç¨„ÉÅ„É•„Ç¶„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");       // "Print aborted"
+  PROGMEM Language_Str MSG_NO_MOVE                         = _UxGT("„Ç¶„Ç¥„Ç≠„Éû„Çª„É≥");                  // "No move."
+  PROGMEM Language_Str MSG_KILLED                          = _UxGT("„Éí„Ç∏„Éß„Ç¶„ÉÜ„Ç§„Ç∑");                  // "KILLED. "
+  PROGMEM Language_Str MSG_STOPPED                         = _UxGT("„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");                  // "STOPPED. "
+  PROGMEM Language_Str MSG_CONTROL_RETRACT                 = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶ mm");                // "Retract mm"
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_SWAP            = _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶S mm");               // "Swap Re.mm"
+  PROGMEM Language_Str MSG_CONTROL_RETRACTF                = _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s");             // "Retract  V"
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_ZHOP            = _UxGT("„Éé„Ç∫„É´„Çø„Ç§„Éí mm");                // "Hop mm"
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER         = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm");               // "UnRet mm"
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVER_SWAP    = _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm");              // "S UnRet mm"
+  PROGMEM Language_Str MSG_CONTROL_RETRACT_RECOVERF        = _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s");            // "UnRet  V"
+  PROGMEM Language_Str MSG_AUTORETRACT                     = _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü");                 // "AutoRetr."
+  PROGMEM Language_Str MSG_FILAMENTCHANGE                  = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥");              // "Change filament"
+  PROGMEM Language_Str MSG_INIT_MEDIA                      = _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü");             // "Init. SD card"
+  PROGMEM Language_Str MSG_CHANGE_MEDIA                    = _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥");               // "Change SD card"
+  PROGMEM Language_Str MSG_ZPROBE_OUT                      = _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§");            // "Z probe out. bed"
+  PROGMEM Language_Str MSG_BLTOUCH_SELFTEST                = _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥");          // "BLTouch Self-Test"
+  PROGMEM Language_Str MSG_BLTOUCH_RESET                   = _UxGT("BLTouch „É™„Çª„ÉÉ„Éà");             // "Reset BLTouch"
+  PROGMEM Language_Str MSG_HOME_FIRST                      = _UxGT("„Çµ„Ç≠„Éã %s%s%s „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§"); // "Home ... first"
+  PROGMEM Language_Str MSG_ZPROBE_ZOFFSET                  = _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà");                   // "Z Offset"
+  PROGMEM Language_Str MSG_BABYSTEP_X                      = _UxGT("X„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep X"
+  PROGMEM Language_Str MSG_BABYSTEP_Y                      = _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Y"
+  PROGMEM Language_Str MSG_BABYSTEP_Z                      = _UxGT("Z„Ç∏„ÇØ „Éì„Éâ„Ç¶");                  // "Babystep Z"
+  PROGMEM Language_Str MSG_ENDSTOP_ABORT                   = _UxGT("„Ç§„Éâ„Ç¶„Ç≤„É≥„Ç´„Ç§„Ç±„É≥„ÉÅ„Ç≠„Éé„Ç¶");         // "Endstop abort"
+  PROGMEM Language_Str MSG_HEATING_FAILED_LCD              = _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§");                 // "Heating failed"
+  PROGMEM Language_Str MSG_ERR_REDUNDANT_TEMP              = _UxGT("„Ç®„É©„Éº:„Ç∏„Éß„Ç¶„ÉÅ„Éß„Ç¶„Çµ„Éº„Éü„Çπ„Çø„Éº„Ç≠„Éé„Ç¶");  // "Err: REDUNDANT TEMP"
+  PROGMEM Language_Str MSG_THERMAL_RUNAWAY                 = _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶");                   // "THERMAL RUNAWAY"
+  PROGMEM Language_Str MSG_ERR_MAXTEMP                     = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´");         // "Err: MAXTEMP"
+  PROGMEM Language_Str MSG_ERR_MINTEMP                     = _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");          // "Err: MINTEMP"
+  PROGMEM Language_Str MSG_ERR_MAXTEMP_BED                 = _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´");    // "Err: MAXTEMP BED"
+  PROGMEM Language_Str MSG_ERR_MINTEMP_BED                 = _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥");     // "Err: MINTEMP BED"
+  PROGMEM Language_Str MSG_ERR_Z_HOMING                    = _UxGT("„Çµ„Ç≠„Éã XY „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");     // "Home XY first"
+  PROGMEM Language_Str MSG_HALTED                          = _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø");         // "PRINTER HALTED"
+  PROGMEM Language_Str MSG_PLEASE_RESET                    = _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§");              // "Please reset"
+  PROGMEM Language_Str MSG_SHORT_DAY                       = _UxGT("d");                          // One character only
+  PROGMEM Language_Str MSG_SHORT_HOUR                      = _UxGT("h");                          // One character only
+  PROGMEM Language_Str MSG_SHORT_MINUTE                    = _UxGT("m");                          // One character only
+  PROGMEM Language_Str MSG_HEATING                         = _UxGT("„Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");                   // "Heating..."
+  PROGMEM Language_Str MSG_BED_HEATING                     = _UxGT("„Éô„ÉÉ„Éâ „Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶");              // "Bed Heating..."
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE                 = _UxGT("„Éá„É´„Çø „Ç≥„Ç¶„Çª„Ç§");                // "Delta Calibration"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_X               = _UxGT("X„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate X"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Y               = _UxGT("Y„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate Y"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_Z               = _UxGT("Z„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§");                 // "Calibrate Z"
+  PROGMEM Language_Str MSG_DELTA_CALIBRATE_CENTER          = _UxGT("„ÉÅ„É•„Ç¶„Ç∑„É≥ „Ç≥„Ç¶„Çª„Ç§");              // "Calibrate Center"
+  PROGMEM Language_Str MSG_INFO_MENU                       = _UxGT("„Ç≥„Éé„Éó„É™„É≥„Çø„Éº„Éã„ÉÑ„Ç§„ÉÜ");             // "About Printer"
+  PROGMEM Language_Str MSG_INFO_PRINTER_MENU               = _UxGT("„Éó„É™„É≥„Çø„Éº„Ç∏„Éß„Ç¶„Éõ„Ç¶");              // "Printer Info"
+  PROGMEM Language_Str MSG_INFO_STATS_MENU                 = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Éß„Ç¶„Ç≠„Éß„Ç¶");              // "Printer Stats"
+  PROGMEM Language_Str MSG_INFO_BOARD_MENU                 = _UxGT("„Çª„Ç§„ÇÆ„Éß„Ç±„Ç§„Ç∏„Éß„Ç¶„Éõ„Ç¶");            // "Board Info"
+  PROGMEM Language_Str MSG_INFO_THERMISTOR_MENU            = _UxGT("„Çµ„Éº„Éü„Çπ„Çø„Éº");                   // "Thermistors"
+  PROGMEM Language_Str MSG_INFO_EXTRUDERS                  = _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº„Çπ„Ç¶");             // "Extruders"
+  PROGMEM Language_Str MSG_INFO_BAUDRATE                   = _UxGT("„Éú„Éº„É¨„Éº„Éà");                    // "Baud"
+  PROGMEM Language_Str MSG_INFO_PROTOCOL                   = _UxGT("„Éó„É≠„Éà„Ç≥„É´");                    // "Protocol"
+  PROGMEM Language_Str MSG_CASE_LIGHT                      = _UxGT("„Ç≠„Éß„Ç¶„Çø„Ç§„Éä„Ç§„Ç∑„Éß„Ç¶„É°„Ç§");       // "Case light"
+  PROGMEM Language_Str MSG_INFO_PRINT_COUNT                = _UxGT("„Éó„É™„É≥„Éà„Çπ„Ç¶ ");                  // "Print Count"
+  PROGMEM Language_Str MSG_INFO_COMPLETED_PRINTS           = _UxGT("„Ç´„É≥„É™„Éß„Ç¶„Çπ„Ç¶");                  // "Completed"
+  PROGMEM Language_Str MSG_INFO_PRINT_TIME                 = _UxGT("„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥„É´„Ç§„Ç±„Ç§");            // "Total print time"
+  PROGMEM Language_Str MSG_INFO_PRINT_LONGEST              = _UxGT("„Çµ„Ç§„ÉÅ„Éß„Ç¶„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥");           // "Longest job time"
+  PROGMEM Language_Str MSG_INFO_PRINT_FILAMENT             = _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç∑„É®„Ç¶„É™„Éß„Ç¶„É´„Ç§„Ç±„Ç§");       // "Extruded total"
+  PROGMEM Language_Str MSG_INFO_MIN_TEMP                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥");              // "Min Temp"
+  PROGMEM Language_Str MSG_INFO_MAX_TEMP                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥");              // "Max Temp"
+  PROGMEM Language_Str MSG_INFO_PSU                        = _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ");                // "Power Supply"
+  PROGMEM Language_Str MSG_DRIVE_STRENGTH                  = _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ");              // "Drive Strength"
+  PROGMEM Language_Str MSG_DAC_PERCENT                     = _UxGT("DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %");               // "Driver %"
+  PROGMEM Language_Str MSG_DAC_EEPROM_WRITE                = _UxGT("EEPROM„Éò„Éõ„Çæ„É≥");               // "Store memory"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_HEADER_PAUSE    = _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑");
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_OPTION_RESUME   = _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§");                // "Resume print"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_INIT            = _UxGT(MSG_2_LINE("„Ç≥„Ç¶„Ç´„É≥„É≤„Ç´„Ç§„Ç∑„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for start of the filament"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_UNLOAD          = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„Éå„Ç≠„ÉÄ„Ç∑„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament unload"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_INSERT          = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„É≤„ÇΩ„Ç¶„Éã„É•„Ç¶„Ç∑,", "„ÇØ„É™„ÉÉ„ÇØ„Çπ„É´„Éà„Çæ„ÉÉ„Ç≥„Ç¶„Ç∑„Éû„Çπ"));   // "Insert filament and press button"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_LOAD            = _UxGT(MSG_2_LINE("„Éï„Ç£„É©„É°„É≥„Éà„ÇΩ„Ç¶„ÉÜ„É≥„ÉÅ„É•„Ç¶", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for filament load"
+  PROGMEM Language_Str MSG_FILAMENT_CHANGE_RESUME          = _UxGT(MSG_2_LINE("„Éó„É™„É≥„Éà„É≤„Çµ„Ç§„Ç´„Ç§„Ç∑„Éû„Çπ", "„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§"));   // "Wait for print to resume"
 
-#define MSG_BUTTON_NEXT                     _UxGT("„ÉÑ„ÇÆ„Éò")
-#define MSG_BUTTON_INIT                     _UxGT("„Ç∑„Éß„Ç≠„Ç´")
-#define MSG_BUTTON_STOP                     _UxGT("„Çπ„Éà„ÉÉ„Éó")
-#define MSG_BUTTON_PRINT                    _UxGT("„Éó„É™„É≥„Éà")
-#define MSG_BUTTON_RESET                    _UxGT("„É™„Çª„ÉÉ„Éà")
-#define MSG_BUTTON_CANCEL                   _UxGT("„Ç≠„É£„É≥„Çª„É´")
-#define MSG_BUTTON_DONE                     _UxGT("„Ç´„É≥„É™„Éß„Ç¶")
+  PROGMEM Language_Str MSG_EXPECTED_PRINTER                = _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº");               // "Wrong printer"
 
-#define MSG_YES                             _UxGT("„Éè„Ç§")
-#define MSG_NO                              _UxGT("„Ç§„Ç§„Ç®")
-#define MSG_BACK                            _UxGT("„É¢„Éâ„É™")
-#define MSG_VELOCITY                        _UxGT("„ÇΩ„ÇØ„Éâ")
-#define MSG_STEPS_PER_MM                    _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm")
-#define MSG_USER_MENU                       _UxGT("„É¶„Éº„Ç∂„Éº„Ç≥„Éû„É≥„Éâ")
-#define MSG_PRINT_PAUSED                    _UxGT("„Éó„É™„É≥„Éà„Ç¨„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑„Çµ„É¨„Éû„Ç∑„Çø")
-#define MSG_PRINTING                        _UxGT("„Éó„É™„É≥„Éà„ÉÅ„É•„Ç¶...")
+  PROGMEM Language_Str MSG_CONFIGURATION                   = _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Ç´„É≥„É™");
+  PROGMEM Language_Str MSG_ADVANCED_SETTINGS               = _UxGT("„Ç∑„Éß„Ç¶„Çµ„Ç§„Çª„ÉÉ„ÉÜ„Ç§");
+  PROGMEM Language_Str MSG_OUTAGE_RECOVERY                 = _UxGT("„Ç≥„Ç∑„Éß„Ç´„Ç§„Éï„ÇØ");
+  PROGMEM Language_Str MSG_INIT_EEPROM                     = _UxGT("EEPROM„Ç∑„Éß„Ç≠„Ç´");
+
+  PROGMEM Language_Str MSG_BUTTON_NEXT                     = _UxGT("„ÉÑ„ÇÆ„Éò");
+  PROGMEM Language_Str MSG_BUTTON_INIT                     = _UxGT("„Ç∑„Éß„Ç≠„Ç´");
+  PROGMEM Language_Str MSG_BUTTON_STOP                     = _UxGT("„Çπ„Éà„ÉÉ„Éó");
+  PROGMEM Language_Str MSG_BUTTON_PRINT                    = _UxGT("„Éó„É™„É≥„Éà");
+  PROGMEM Language_Str MSG_BUTTON_RESET                    = _UxGT("„É™„Çª„ÉÉ„Éà");
+  PROGMEM Language_Str MSG_BUTTON_CANCEL                   = _UxGT("„Ç≠„É£„É≥„Çª„É´");
+  PROGMEM Language_Str MSG_BUTTON_DONE                     = _UxGT("„Ç´„É≥„É™„Éß„Ç¶");
+
+  PROGMEM Language_Str MSG_YES                             = _UxGT("„Éè„Ç§");
+  PROGMEM Language_Str MSG_NO                              = _UxGT("„Ç§„Ç§„Ç®");
+  PROGMEM Language_Str MSG_BACK                            = _UxGT("„É¢„Éâ„É™");
+  PROGMEM Language_Str MSG_VELOCITY                        = _UxGT("„ÇΩ„ÇØ„Éâ");
+  PROGMEM Language_Str MSG_STEPS_PER_MM                    = _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm");
+  PROGMEM Language_Str MSG_USER_MENU                       = _UxGT("„É¶„Éº„Ç∂„Éº„Ç≥„Éû„É≥„Éâ");
+  PROGMEM Language_Str MSG_PRINT_PAUSED                    = _UxGT("„Éó„É™„É≥„Éà„Ç¨„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑„Çµ„É¨„Éû„Ç∑„Çø");
+  PROGMEM Language_Str MSG_PRINTING                        = _UxGT("„Éó„É™„É≥„Éà„ÉÅ„É•„Ç¶...");
+}

commit 89490171ef0f1a5069c2d468b89612121fca8b12
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 8 20:15:01 2019 -0500

    Use "concatenatable" language codes

diff --git a/Marlin/src/lcd/language/language_jp_kana.h b/Marlin/src/lcd/language/language_jp_kana.h
new file mode 100644
index 0000000000..00403054db
--- /dev/null
+++ b/Marlin/src/lcd/language/language_jp_kana.h
@@ -0,0 +1,254 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+/**
+ * Japanese (Kana)
+ * UTF-8 for Graphical Display
+ *
+ * LCD Menu Messages
+ * See also http://marlinfw.org/docs/development/lcd_language.html
+ *
+ */
+
+//#define DISPLAY_CHARSET_ISO10646_KANA
+#define CHARSIZE 3
+
+// This just to show the potential benefit of unicode.
+// This translation can be improved by using the full charset of unicode codeblock U+30A0 to U+30FF.
+
+// Áâá‰ªÆÂêçË°®Á§∫ÂÆöÁæ©
+#define WELCOME_MSG                         MACHINE_NAME _UxGT(" „Ç∏„É•„É≥„Éì„Ç´„É≥„É™„Éß„Ç¶")
+#define MSG_MEDIA_INSERTED                  _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„ÇΩ„Ç¶„Éã„É•„Ç¶„Çµ„É¨„Éû„Ç∑„Çø")        // "Card inserted"
+#define MSG_MEDIA_REMOVED                   _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥")               // "Card removed"
+#define MSG_RELEASE_MEDIA                   _UxGT("„É°„Éá„Ç£„Ç¢„Éé„Éà„É™„ÉÄ„Ç∑")
+#define MSG_MEDIA_RELEASED                  _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥")
+#define MSG_LCD_ENDSTOPS                    _UxGT("„Ç®„É≥„Éâ„Çπ„Éà„ÉÉ„Éó")                  // "Endstops" // Max length 8 characters
+#define MSG_MAIN                            _UxGT("„É°„Ç§„É≥")                       // "Main"
+#define MSG_AUTOSTART                       _UxGT("„Ç∏„Éâ„Ç¶„Ç´„Ç§„Ç∑")                   // "Autostart"
+#define MSG_DISABLE_STEPPERS                _UxGT("„É¢„Éº„Çø„Éº„Éá„É≥„Ç≤„É≥ „Ç™„Éï")            // "Disable steppers"
+#define MSG_DEBUG_MENU                      _UxGT("„Éá„Éê„ÉÉ„Ç∞„É°„Éã„É•„Éº")                // "Debug Menu"
+#define MSG_PROGRESS_BAR_TEST               _UxGT("„Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº „ÉÜ„Çπ„Éà")            // "Progress Bar Test"
+#define MSG_AUTO_HOME                       _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠")                  // "Auto home"
+#define MSG_AUTO_HOME_X                     _UxGT("X„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠")             // "Home X"
+#define MSG_AUTO_HOME_Y                     _UxGT("Y„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠")             // "Home Y"
+#define MSG_AUTO_HOME_Z                     _UxGT("Z„Ç∏„ÇØ „Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠")             // "Home Z"
+#define MSG_LEVEL_BED_HOMING                _UxGT("„Ç≤„É≥„ÉÜ„É≥„Éï„ÉÉ„Ç≠„ÉÅ„É•„Ç¶")              // "Homing XYZ"
+#define MSG_LEVEL_BED_WAITING               _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„Ç§„Ç∑")                // "Click to Begin"
+#define MSG_LEVEL_BED_NEXT_POINT            _UxGT("„ÉÑ„ÇÆ„Éé„ÇΩ„ÇØ„ÉÜ„Ç§„ÉÜ„É≥„Éò")             // "Next Point"
+#define MSG_LEVEL_BED_DONE                  _UxGT("„É¨„Éô„É™„É≥„Ç∞„Ç´„É≥„É™„Éß„Ç¶")              // "Leveling Done!"
+#define MSG_SET_HOME_OFFSETS                _UxGT("„Ç≠„Ç∏„É•„É≥„Ç™„Éï„Çª„ÉÉ„Éà„Çª„ÉÉ„ÉÜ„Ç§")         // "Set home offsets"
+#define MSG_HOME_OFFSETS_APPLIED            _UxGT("„Ç™„Éï„Çª„ÉÉ„Éà„Ç¨„ÉÜ„Ç≠„É®„Ç¶„Çµ„É¨„Éû„Ç∑„Çø")       // "Offsets applied"
+#define MSG_SET_ORIGIN                      _UxGT("„Ç≠„Ç∏„É•„É≥„Çª„ÉÉ„Éà")                 // "Set origin"
+#define MSG_PREHEAT_1                       _UxGT(PREHEAT_1_LABEL " „É®„Éç„ÉÑ")       // "Preheat " PREHEAT_1_LABEL
+#define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 _UxGT(" ")
+#define MSG_PREHEAT_1_ALL                   _UxGT(PREHEAT_1_LABEL " „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ")  // " All"
+#define MSG_PREHEAT_1_BEDONLY               _UxGT(PREHEAT_1_LABEL " „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ")  // " Bed"
+#define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 _UxGT("„Çª„ÉÉ„ÉÜ„Ç§")       // " conf"
+#define MSG_PREHEAT_2                       _UxGT(PREHEAT_2_LABEL " „É®„Éç„ÉÑ")      // "Preheat " PREHEAT_2_LABEL
+#define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 _UxGT(" ")
+#define MSG_PREHEAT_2_ALL                   _UxGT(PREHEAT_2_LABEL " „Çπ„Éô„ÉÜ„É®„Éç„ÉÑ")  // " All"
+#define MSG_PREHEAT_2_BEDONLY               _UxGT(PREHEAT_2_LABEL " „Éô„ÉÉ„Éâ„É®„Éç„ÉÑ")  // " Bed"
+#define MSG_PREHEAT_2_SETTINGS              MSG_PREHEAT_2 _UxGT("„Çª„ÉÉ„ÉÜ„Ç§")       // " conf"
+#define MSG_COOLDOWN                        _UxGT("„Ç´„Éç„ÉÑ„ÉÜ„Ç§„Ç∑")                  // "Cooldown"
+#define MSG_SWITCH_PS_ON                    _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„É≥")                 // "Switch power on"
+#define MSG_SWITCH_PS_OFF                   _UxGT("„Éá„É≥„Ç≤„É≥ „Ç™„Éï")                 // "Switch power off"
+#define MSG_EXTRUDE                         _UxGT("„Ç™„Ç∑„ÉÄ„Ç∑")                     // "Extrude"
+#define MSG_RETRACT                         _UxGT("„Éí„Ç≠„Ç≥„Éü„Çª„ÉÉ„ÉÜ„Ç§")                // "Retract"
+#define MSG_MOVE_AXIS                       _UxGT("„Ç∏„ÇØ„Ç§„Éâ„Ç¶")                    // "Move axis"
+#define MSG_BED_LEVELING                    _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞")                // "Bed leveling"
+#define MSG_LEVEL_BED                       _UxGT("„Éô„ÉÉ„Éâ„É¨„Éô„É™„É≥„Ç∞")                // "Level bed"
+
+#define MSG_MOVING                          _UxGT("„Ç§„Éâ„Ç¶„ÉÅ„É•„Ç¶")                   // "Moving..."
+#define MSG_FREE_XY                         _UxGT("XY„Ç∏„ÇØ „Ç´„Ç§„Éõ„Ç¶")                // "Free XY"
+#define MSG_MOVE_X                          _UxGT("X„Ç∏„ÇØ „Ç§„Éâ„Ç¶")                  // "Move X"
+#define MSG_MOVE_Y                          _UxGT("Y„Ç∏„ÇØ „Ç§„Éâ„Ç¶")                  // "Move Y"
+#define MSG_MOVE_Z                          _UxGT("Z„Ç∏„ÇØ „Ç§„Éâ„Ç¶")                  // "Move Z"
+#define MSG_MOVE_E                          _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº")                // "Extruder"
+#define MSG_MOVE_Z_DIST                     _UxGT("%smm „Ç§„Éâ„Ç¶")                  // "Move 0.025mm"
+#define MSG_MOVE_01MM                       _UxGT("0.1mm „Ç§„Éâ„Ç¶")                 // "Move 0.1mm"
+#define MSG_MOVE_1MM                        _UxGT("  1mm „Ç§„Éâ„Ç¶")                 // "Move 1mm"
+#define MSG_MOVE_10MM                       _UxGT(" 10mm „Ç§„Éâ„Ç¶")                 // "Move 10mm"
+#define MSG_SPEED                           _UxGT("„ÇΩ„ÇØ„Éâ")                       // "Speed"
+#define MSG_BED_Z                           _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà")                   // "Bed Z"
+#define MSG_NOZZLE                          _UxGT("„Éé„Ç∫„É´")                       // "Nozzle"
+#define MSG_BED                             _UxGT("„Éô„ÉÉ„Éâ")                       // "Bed"
+#define MSG_FAN_SPEED                       _UxGT("„Éï„Ç°„É≥„ÇΩ„ÇØ„Éâ")                    // "Fan speed"
+#define MSG_FLOW                            _UxGT("„Éà„Ç∑„É•„ÉÑ„É™„Éß„Ç¶")                   // "Flow"
+#define MSG_CONTROL                         _UxGT("„Çª„Ç§„ÇÆ„Éß")                      // "Control"
+#define MSG_MIN                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„ÉÜ„Ç§") // " Min"
+#define MSG_MAX                             _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" „Çµ„Ç§„Ç≥„Ç¶") // " Max"
+#define MSG_FACTOR                          _UxGT(" ") LCD_STR_THERMOMETER _UxGT(" „Éï„Ç°„ÇØ„Çø„Éº") // " Fact"
+#define MSG_AUTOTEMP                        _UxGT("„Ç∏„Éâ„Ç¶„Ç™„É≥„Éâ„Çª„Ç§„ÇÆ„Éß")               // "Autotemp"
+#define MSG_LCD_ON                          _UxGT("„Ç™„É≥")                         // "On"
+#define MSG_LCD_OFF                         _UxGT("„Ç™„Éï")                         // "Off"
+#define MSG_PID_P                           _UxGT("PID-P")
+#define MSG_PID_I                           _UxGT("PID-I")
+#define MSG_PID_D                           _UxGT("PID-D")
+#define MSG_PID_C                           _UxGT("PID-C")
+#define MSG_SELECT                          _UxGT("„Çª„É≥„Çø„ÇØ")                     // "Select"
+#define MSG_ACC                             _UxGT("„Ç´„ÇΩ„ÇØ„Éâ mm/s¬≤")               // "Accel"
+#define MSG_JERK                            _UxGT("„É§„ÇØ„Éâ„Ç¶ mm/s")                  // "Jerk"
+#if IS_KINEMATIC
+  #define MSG_VA_JERK                       _UxGT("A„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Va-jerk"
+  #define MSG_VB_JERK                       _UxGT("B„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vb-jerk"
+  #define MSG_VC_JERK                       _UxGT("C„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vc-jerk"
+  #define MSG_ASTEPS                        _UxGT("A„Çπ„ÉÜ„ÉÉ„Éó/mm")
+  #define MSG_BSTEPS                        _UxGT("B„Çπ„ÉÜ„ÉÉ„Éó/mm")
+  #define MSG_CSTEPS                        _UxGT("C„Çπ„ÉÜ„ÉÉ„Éó/mm")
+#else
+  #define MSG_VA_JERK                       _UxGT("X„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vx-jerk"
+  #define MSG_VB_JERK                       _UxGT("Y„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vy-jerk"
+  #define MSG_VC_JERK                       _UxGT("Z„Ç∏„ÇØ „É§„ÇØ„Éâ„Ç¶ mm/s")             // "Vz-jerk"
+  #define MSG_ASTEPS                        _UxGT("X„Çπ„ÉÜ„ÉÉ„Éó/mm")
+  #define MSG_BSTEPS                        _UxGT("Y„Çπ„ÉÜ„ÉÉ„Éó/mm")
+  #define MSG_CSTEPS                        _UxGT("Z„Çπ„ÉÜ„ÉÉ„Éó/mm")
+#endif
+#define MSG_VE_JERK                         _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº „É§„ÇØ„Éâ")          // "Ve-jerk"
+#define MSG_VMAX                            _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ ")            // "Vmax "
+#define MSG_VMIN                            _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç™„ÇØ„É™„ÇΩ„ÇØ„Éâ")           // "Vmin"
+#define MSG_VTRAV_MIN                       _UxGT("„Çµ„Ç§„Ç∑„Éß„Ç¶„Ç§„Éâ„Ç¶„ÇΩ„ÇØ„Éâ")           // "VTrav min"
+#define MSG_ACCELERATION                    MSG_ACC
+#define MSG_AMAX                            _UxGT("„Çµ„Ç§„ÉÄ„Ç§„Ç´„ÇΩ„ÇØ„Éâ ")              // "Amax "
+#define MSG_A_RETRACT                       _UxGT("„Éí„Ç≠„Ç≥„Éü„Ç´„ÇΩ„ÇØ„Éâ")               // "A-retract"
+#define MSG_A_TRAVEL                        _UxGT("„Ç§„Éâ„Ç¶„Ç´„ÇΩ„ÇØ„Éâ")                // "A-travel"
+#define MSG_TEMPERATURE                     _UxGT("„Ç™„É≥„Éâ")                      // "Temperature"
+#define MSG_MOTION                          _UxGT("„Ç¶„Ç¥„Ç≠„Çª„ÉÉ„ÉÜ„Ç§")                // "Motion"
+#define MSG_FILAMENT                        _UxGT("„Éï„Ç£„É©„É°„É≥„Éà")                   // "Filament"
+#define MSG_VOLUMETRIC_ENABLED              _UxGT("E in mm¬≥")
+#define MSG_FILAMENT_DIAM                   _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÉÅ„Éß„ÉÉ„Ç±„Ç§")            // "Fil. Dia."
+#define MSG_CONTRAST                        _UxGT("LCD„Ç≥„É≥„Éà„É©„Çπ„Éà")               // "LCD contrast"
+#define MSG_STORE_EEPROM                    _UxGT("EEPROM„Éò„Éõ„Çæ„É≥")               // "Store memory"
+#define MSG_LOAD_EEPROM                     _UxGT("EEPROM„Ç´„É©„É®„Éü„Ç≥„Éü")               // "Load memory"
+#define MSG_RESTORE_FAILSAFE                _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„É™„Çª„ÉÉ„Éà")               // "Restore failsafe"
+#define MSG_REFRESH                         _UxGT("„É™„Éï„É¨„ÉÉ„Ç∑„É•")                  // "Refresh"
+#define MSG_WATCH                           _UxGT("„Ç∏„Éß„Ç¶„Éõ„Ç¶„Ç¨„É°„É≥")               // "Info screen"
+#define MSG_PREPARE                         _UxGT("„Ç∏„É•„É≥„Éì„Çª„ÉÉ„ÉÜ„Ç§")               // "Prepare"
+#define MSG_TUNE                            _UxGT("„ÉÅ„Éß„Ç¶„Çª„Ç§")                    // "Tune"
+#define MSG_PAUSE_PRINT                     _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑")                  // "Pause print"
+#define MSG_RESUME_PRINT                    _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§")                // "Resume print"
+#define MSG_STOP_PRINT                      _UxGT("„Éó„É™„É≥„Éà„ÉÜ„Ç§„Ç∑")                 // "Stop print"
+#define MSG_MEDIA_MENU                      _UxGT("„É°„Éá„Ç£„Ç¢„Ç´„É©„Éó„É™„É≥„Éà")            // "Print from SD"
+#define MSG_NO_MEDIA                        _UxGT("„É°„Éá„Ç£„Ç¢„Ç¨„Ç¢„É™„Éû„Çª„É≥")            // "No SD card"
+#define MSG_DWELL                           _UxGT("„Ç≠„É•„Ç¶„Ç∑")                     // "Sleep..."
+#define MSG_USERWAIT                        _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")           // "Wait for user..."
+//#define MSG_USERWAIT                      _UxGT("„ÉÑ„ÉÖ„Ç±„É´„Éã„Éè„ÇØ„É™„ÉÉ„ÇØ„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§")
+#define MSG_PRINT_ABORTED                   _UxGT("„Éó„É™„É≥„Éà„Ç¨„ÉÅ„É•„Ç¶„Ç∑„Çµ„É¨„Éû„Ç∑„Çø")       // "Print aborted"
+#define MSG_NO_MOVE                         _UxGT("„Ç¶„Ç¥„Ç≠„Éû„Çª„É≥")                  // "No move."
+#define MSG_KILLED                          _UxGT("„Éí„Ç∏„Éß„Ç¶„ÉÜ„Ç§„Ç∑")                  // "KILLED. "
+#define MSG_STOPPED                         _UxGT("„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø")                  // "STOPPED. "
+#define MSG_CONTROL_RETRACT                 _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶ mm")                // "Retract mm"
+#define MSG_CONTROL_RETRACT_SWAP            _UxGT("„Éí„Ç≠„Ç≥„Éü„É™„Éß„Ç¶S mm")               // "Swap Re.mm"
+#define MSG_CONTROL_RETRACTF                _UxGT("„Éí„Ç≠„Ç≥„Éü„ÇΩ„ÇØ„Éâ mm/s")             // "Retract  V"
+#define MSG_CONTROL_RETRACT_ZHOP            _UxGT("„Éé„Ç∫„É´„Çø„Ç§„Éí mm")                // "Hop mm"
+#define MSG_CONTROL_RETRACT_RECOVER         _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶ mm")               // "UnRet mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    _UxGT("„Éõ„Ç∑„Éß„Ç¶„É™„Éß„Ç¶S mm")              // "S UnRet mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        _UxGT("„Éõ„Ç∑„Éß„Ç¶„ÇΩ„ÇØ„Éâ mm/s")            // "UnRet  V"
+#define MSG_AUTORETRACT                     _UxGT("„Ç∏„Éâ„Ç¶„Éí„Ç≠„Ç≥„Éü")                 // "AutoRetr."
+#define MSG_FILAMENTCHANGE                  _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç≥„Ç¶„Ç´„É≥")              // "Change filament"
+#define MSG_INIT_MEDIA                      _UxGT("„É°„Éá„Ç£„Ç¢„Çµ„Ç§„É®„Éü„Ç≥„Éü")             // "Init. SD card"
+#define MSG_CHANGE_MEDIA                    _UxGT("„É°„Éá„Ç£„Ç¢„Ç≥„Ç¶„Ç´„É≥")               // "Change SD card"
+#define MSG_ZPROBE_OUT                      _UxGT("Z„Éó„É≠„Éº„Éñ „Éô„ÉÉ„Éâ„Ç¨„Ç§")            // "Z probe out. bed"
+#define MSG_BLTOUCH_SELFTEST                _UxGT("BLTouch „Ç∏„Ç≥„Ç∑„É≥„ÉÄ„É≥")          // "BLTouch Self-Test"
+#define MSG_BLTOUCH_RESET                   _UxGT("BLTouch „É™„Çª„ÉÉ„Éà")             // "Reset BLTouch"
+#define MSG_HOME_FIRST                      _UxGT("„Çµ„Ç≠„Éã %s%s%s „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§") // "Home ... first"
+#define MSG_ZPROBE_ZOFFSET                  _UxGT("Z„Ç™„Éï„Çª„ÉÉ„Éà")                   // "Z Offset"
+#define MSG_BABYSTEP_X                      _UxGT("X„Ç∏„ÇØ „Éì„Éâ„Ç¶")                  // "Babystep X"
+#define MSG_BABYSTEP_Y                      _UxGT("Y„Ç∏„ÇØ „Éì„Éâ„Ç¶")                  // "Babystep Y"
+#define MSG_BABYSTEP_Z                      _UxGT("Z„Ç∏„ÇØ „Éì„Éâ„Ç¶")                  // "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   _UxGT("„Ç§„Éâ„Ç¶„Ç≤„É≥„Ç´„Ç§„Ç±„É≥„ÉÅ„Ç≠„Éé„Ç¶")         // "Endstop abort"
+#define MSG_HEATING_FAILED_LCD              _UxGT("„Ç´„Éç„ÉÑ„Ç∑„ÉÉ„Éë„Ç§")                 // "Heating failed"
+#define MSG_ERR_REDUNDANT_TEMP              _UxGT("„Ç®„É©„Éº:„Ç∏„Éß„Ç¶„ÉÅ„Éß„Ç¶„Çµ„Éº„Éü„Çπ„Çø„Éº„Ç≠„Éé„Ç¶")  // "Err: REDUNDANT TEMP"
+#define MSG_THERMAL_RUNAWAY                 _UxGT("„Éç„ÉÑ„Éú„Ç¶„ÇΩ„Ç¶")                   // "THERMAL RUNAWAY"
+#define MSG_ERR_MAXTEMP                     _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´")         // "Err: MAXTEMP"
+#define MSG_ERR_MINTEMP                     _UxGT("„Ç®„É©„Éº:„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥")          // "Err: MINTEMP"
+#define MSG_ERR_MAXTEMP_BED                 _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥„ÉÅ„Éß„Ç¶„Ç´")    // "Err: MAXTEMP BED"
+#define MSG_ERR_MINTEMP_BED                 _UxGT("„Ç®„É©„Éº:„Éô„ÉÉ„Éâ „Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥„Éü„Éû„É≥")     // "Err: MINTEMP BED"
+#define MSG_ERR_Z_HOMING                    _UxGT("„Çµ„Ç≠„Éã XY „É≤„Éï„ÉÉ„Ç≠„Çµ„Çª„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§")     // "Home XY first"
+#define MSG_HALTED                          _UxGT("„Éó„É™„É≥„Çø„Éº„Éè„ÉÜ„Ç§„Ç∑„Ç∑„Éû„Ç∑„Çø")         // "PRINTER HALTED"
+#define MSG_PLEASE_RESET                    _UxGT("„É™„Çª„ÉÉ„Éà„Ç∑„ÉÜ„ÇØ„ÉÄ„Çµ„Ç§")              // "Please reset"
+#define MSG_SHORT_DAY                       _UxGT("d")                          // One character only
+#define MSG_SHORT_HOUR                      _UxGT("h")                          // One character only
+#define MSG_SHORT_MINUTE                    _UxGT("m")                          // One character only
+#define MSG_HEATING                         _UxGT("„Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶")                   // "Heating..."
+#define MSG_BED_HEATING                     _UxGT("„Éô„ÉÉ„Éâ „Ç´„Éç„ÉÑ„ÉÅ„É•„Ç¶")              // "Bed Heating..."
+#define MSG_DELTA_CALIBRATE                 _UxGT("„Éá„É´„Çø „Ç≥„Ç¶„Çª„Ç§")                // "Delta Calibration"
+#define MSG_DELTA_CALIBRATE_X               _UxGT("X„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§")                 // "Calibrate X"
+#define MSG_DELTA_CALIBRATE_Y               _UxGT("Y„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§")                 // "Calibrate Y"
+#define MSG_DELTA_CALIBRATE_Z               _UxGT("Z„Ç∏„ÇØ „Ç≥„Ç¶„Çª„Ç§")                 // "Calibrate Z"
+#define MSG_DELTA_CALIBRATE_CENTER          _UxGT("„ÉÅ„É•„Ç¶„Ç∑„É≥ „Ç≥„Ç¶„Çª„Ç§")              // "Calibrate Center"
+#define MSG_INFO_MENU                       _UxGT("„Ç≥„Éé„Éó„É™„É≥„Çø„Éº„Éã„ÉÑ„Ç§„ÉÜ")             // "About Printer"
+#define MSG_INFO_PRINTER_MENU               _UxGT("„Éó„É™„É≥„Çø„Éº„Ç∏„Éß„Ç¶„Éõ„Ç¶")              // "Printer Info"
+#define MSG_INFO_STATS_MENU                 _UxGT("„Éó„É™„É≥„Éà„Ç∏„Éß„Ç¶„Ç≠„Éß„Ç¶")              // "Printer Stats"
+#define MSG_INFO_BOARD_MENU                 _UxGT("„Çª„Ç§„ÇÆ„Éß„Ç±„Ç§„Ç∏„Éß„Ç¶„Éõ„Ç¶")            // "Board Info"
+#define MSG_INFO_THERMISTOR_MENU            _UxGT("„Çµ„Éº„Éü„Çπ„Çø„Éº")                   // "Thermistors"
+#define MSG_INFO_EXTRUDERS                  _UxGT("„Ç®„ÇØ„Çπ„Éà„É´„Éº„ÉÄ„Éº„Çπ„Ç¶")             // "Extruders"
+#define MSG_INFO_BAUDRATE                   _UxGT("„Éú„Éº„É¨„Éº„Éà")                    // "Baud"
+#define MSG_INFO_PROTOCOL                   _UxGT("„Éó„É≠„Éà„Ç≥„É´")                    // "Protocol"
+#define MSG_CASE_LIGHT                      _UxGT("„Ç≠„Éß„Ç¶„Çø„Ç§„Éä„Ç§„Ç∑„Éß„Ç¶„É°„Ç§")       // "Case light"
+#define MSG_INFO_PRINT_COUNT                _UxGT("„Éó„É™„É≥„Éà„Çπ„Ç¶ ")                  // "Print Count"
+#define MSG_INFO_COMPLETED_PRINTS           _UxGT("„Ç´„É≥„É™„Éß„Ç¶„Çπ„Ç¶")                  // "Completed"
+#define MSG_INFO_PRINT_TIME                 _UxGT("„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥„É´„Ç§„Ç±„Ç§")            // "Total print time"
+#define MSG_INFO_PRINT_LONGEST              _UxGT("„Çµ„Ç§„ÉÅ„Éß„Ç¶„Éó„É™„É≥„Éà„Ç∏„Ç´„É≥")           // "Longest job time"
+#define MSG_INFO_PRINT_FILAMENT             _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Ç∑„É®„Ç¶„É™„Éß„Ç¶„É´„Ç§„Ç±„Ç§")       // "Extruded total"
+#define MSG_INFO_MIN_TEMP                   _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„ÉÜ„Ç§„Ç™„É≥")              // "Min Temp"
+#define MSG_INFO_MAX_TEMP                   _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Çµ„Ç§„Ç≥„Ç¶„Ç™„É≥")              // "Max Temp"
+#define MSG_INFO_PSU                        _UxGT("„Éá„É≥„Ç≤„É≥„Ç∑„É•„Éô„ÉÑ")                // "Power Supply"
+#define MSG_DRIVE_STRENGTH                  _UxGT("„É¢„Éº„Çø„Éº„ÇØ„Éâ„Ç¶„É™„Éß„ÇØ")              // "Drive Strength"
+#define MSG_DAC_PERCENT                     _UxGT("DAC„Ç∑„É•„ÉÑ„É™„Éß„ÇØ %")               // "Driver %"
+#define MSG_DAC_EEPROM_WRITE                MSG_STORE_EEPROM                    // "DAC EEPROM Write"
+#define MSG_FILAMENT_CHANGE_HEADER_PAUSE    _UxGT("„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑")
+#define MSG_FILAMENT_CHANGE_OPTION_RESUME   _UxGT("„Éó„É™„É≥„Éà„Çµ„Ç§„Ç´„Ç§")                // "Resume print"
+#define MSG_FILAMENT_CHANGE_INIT_1          _UxGT("„Ç≥„Ç¶„Ç´„É≥„É≤„Ç´„Ç§„Ç∑„Ç∑„Éû„Çπ")            // "Wait for start"
+#define MSG_FILAMENT_CHANGE_INIT_2          _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")            // "of the filament"
+#define MSG_FILAMENT_CHANGE_UNLOAD_1        _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„Éå„Ç≠„ÉÄ„Ç∑„ÉÅ„É•„Ç¶")          // "Wait for"
+#define MSG_FILAMENT_CHANGE_UNLOAD_2        _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")            // "filament unload"
+#define MSG_FILAMENT_CHANGE_INSERT_1        _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„É≤„ÇΩ„Ç¶„Éã„É•„Ç¶„Ç∑,")         // "Insert filament"
+#define MSG_FILAMENT_CHANGE_INSERT_2        _UxGT("„ÇØ„É™„ÉÉ„ÇØ„Çπ„É´„Éà„Çæ„ÉÉ„Ç≥„Ç¶„Ç∑„Éû„Çπ")         // "and press button"
+#define MSG_FILAMENT_CHANGE_LOAD_1          _UxGT("„Éï„Ç£„É©„É°„É≥„Éà„ÇΩ„Ç¶„ÉÜ„É≥„ÉÅ„É•„Ç¶")          // "Wait for"
+#define MSG_FILAMENT_CHANGE_LOAD_2          _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")            // "filament load"
+#define MSG_FILAMENT_CHANGE_RESUME_1        _UxGT("„Éó„É™„É≥„Éà„É≤„Çµ„Ç§„Ç´„Ç§„Ç∑„Éû„Çπ")           // "Wait for print"
+#define MSG_FILAMENT_CHANGE_RESUME_2        _UxGT("„Ç∑„Éê„É©„ÇØ„Ç™„Éû„ÉÅ„ÇØ„ÉÄ„Çµ„Ç§")            // "to resume"
+
+#define MSG_EXPECTED_PRINTER                _UxGT("„Éû„ÉÅ„Ç¨„ÉÉ„Çø„Éó„É™„É≥„Çø„Éº")               // "Wrong printer"
+
+#define MSG_CONFIGURATION                   _UxGT("„Çª„ÉÉ„ÉÜ„Ç§„Ç´„É≥„É™")
+#define MSG_ADVANCED_SETTINGS               _UxGT("„Ç∑„Éß„Ç¶„Çµ„Ç§„Çª„ÉÉ„ÉÜ„Ç§")
+#define MSG_OUTAGE_RECOVERY                 _UxGT("„Ç≥„Ç∑„Éß„Ç´„Ç§„Éï„ÇØ")
+#define MSG_INIT_EEPROM                     _UxGT("EEPROM„Ç∑„Éß„Ç≠„Ç´")
+
+#define MSG_BUTTON_NEXT                     _UxGT("„ÉÑ„ÇÆ„Éò")
+#define MSG_BUTTON_INIT                     _UxGT("„Ç∑„Éß„Ç≠„Ç´")
+#define MSG_BUTTON_STOP                     _UxGT("„Çπ„Éà„ÉÉ„Éó")
+#define MSG_BUTTON_PRINT                    _UxGT("„Éó„É™„É≥„Éà")
+#define MSG_BUTTON_RESET                    _UxGT("„É™„Çª„ÉÉ„Éà")
+#define MSG_BUTTON_CANCEL                   _UxGT("„Ç≠„É£„É≥„Çª„É´")
+#define MSG_BUTTON_DONE                     _UxGT("„Ç´„É≥„É™„Éß„Ç¶")
+
+#define MSG_YES                             _UxGT("„Éè„Ç§")
+#define MSG_NO                              _UxGT("„Ç§„Ç§„Ç®")
+#define MSG_BACK                            _UxGT("„É¢„Éâ„É™")
+#define MSG_VELOCITY                        _UxGT("„ÇΩ„ÇØ„Éâ")
+#define MSG_STEPS_PER_MM                    _UxGT("„Çπ„ÉÜ„ÉÉ„Éó/mm")
+#define MSG_USER_MENU                       _UxGT("„É¶„Éº„Ç∂„Éº„Ç≥„Éû„É≥„Éâ")
+#define MSG_PRINT_PAUSED                    _UxGT("„Éó„É™„É≥„Éà„Ç¨„Ç§„ÉÅ„Ç∏„ÉÜ„Ç§„Ç∑„Çµ„É¨„Éû„Ç∑„Çø")
+#define MSG_PRINTING                        _UxGT("„Éó„É™„É≥„Éà„ÉÅ„É•„Ç¶...")
