commit 86c811660ebf0b3fcbae2f34273d4c9d0c22abc4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:30:34 2023 -0500

    üßë‚Äçüíª Remove LOOP macros (#25917)

diff --git a/Marlin/src/feature/x_twist.cpp b/Marlin/src/feature/x_twist.cpp
index b5ad25cba8..b8f7e52ab6 100644
--- a/Marlin/src/feature/x_twist.cpp
+++ b/Marlin/src/feature/x_twist.cpp
@@ -36,26 +36,26 @@ void XATC::reset() {
   constexpr float xzo[] = XATC_Z_OFFSETS;
   static_assert(COUNT(xzo) == XATC_MAX_POINTS, "XATC_Z_OFFSETS is the wrong size.");
   COPY(z_offset, xzo);
   start = probe.min_x();
   spacing = (probe.max_x() - start) / (XATC_MAX_POINTS - 1);
   enabled = true;
 }
 
 void XATC::print_points() {
   SERIAL_ECHOLNPGM(" X-Twist Correction:");
-  LOOP_L_N(x, XATC_MAX_POINTS) {
+  for (uint8_t x = 0; x < XATC_MAX_POINTS; ++x) {
     SERIAL_CHAR(' ');
     if (!isnan(z_offset[x]))
       serial_offset(z_offset[x]);
     else
-      LOOP_L_N(i, 6) SERIAL_CHAR(i ? '=' : ' ');
+      for (uint8_t i = 0; i < 6; ++i) SERIAL_CHAR(i ? '=' : ' ');
   }
   SERIAL_EOL();
 }
 
 float lerp(const_float_t t, const_float_t a, const_float_t b) { return a + t * (b - a); }
 
 float XATC::compensation(const xy_pos_t &raw) {
   if (!enabled) return 0;
   if (NEAR_ZERO(spacing)) return 0;
   float t = (raw.x - start) / spacing;

commit df4e022a48667369fcc94dfda56505eb3ba2019f
Author: Giuseppe499 <giuseppe499@live.it>
Date:   Sat Mar 12 00:12:03 2022 +0100

    üö∏ Fix, extend X Axis Twist Compensation (#23745)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/x_twist.cpp b/Marlin/src/feature/x_twist.cpp
index 8910091239..b5ad25cba8 100644
--- a/Marlin/src/feature/x_twist.cpp
+++ b/Marlin/src/feature/x_twist.cpp
@@ -29,44 +29,39 @@
 XATC xatc;
 
 bool XATC::enabled;
 float XATC::spacing, XATC::start;
 xatc_array_t XATC::z_offset; // Initialized by settings.load()
 
 void XATC::reset() {
   constexpr float xzo[] = XATC_Z_OFFSETS;
   static_assert(COUNT(xzo) == XATC_MAX_POINTS, "XATC_Z_OFFSETS is the wrong size.");
   COPY(z_offset, xzo);
-  xatc.spacing = (probe.max_x() - probe.min_x()) / (XATC_MAX_POINTS - 1);
-  xatc.start = probe.min_x();
+  start = probe.min_x();
+  spacing = (probe.max_x() - start) / (XATC_MAX_POINTS - 1);
   enabled = true;
 }
 
 void XATC::print_points() {
   SERIAL_ECHOLNPGM(" X-Twist Correction:");
   LOOP_L_N(x, XATC_MAX_POINTS) {
     SERIAL_CHAR(' ');
-    if (!isnan(z_offset[x])) {
-      if (z_offset[x] >= 0) SERIAL_CHAR('+');
-      SERIAL_ECHO_F(z_offset[x], 3);
-    }
-    else {
-      LOOP_L_N(i, 6)
-        SERIAL_CHAR(i ? '=' : ' ');
-    }
+    if (!isnan(z_offset[x]))
+      serial_offset(z_offset[x]);
+    else
+      LOOP_L_N(i, 6) SERIAL_CHAR(i ? '=' : ' ');
   }
   SERIAL_EOL();
 }
 
 float lerp(const_float_t t, const_float_t a, const_float_t b) { return a + t * (b - a); }
 
 float XATC::compensation(const xy_pos_t &raw) {
   if (!enabled) return 0;
   if (NEAR_ZERO(spacing)) return 0;
   float t = (raw.x - start) / spacing;
-  int i = FLOOR(t);
-  LIMIT(i, 0, XATC_MAX_POINTS - 2);
+  const int i = constrain(FLOOR(t), 0, XATC_MAX_POINTS - 2);
   t -= i;
   return lerp(t, z_offset[i], z_offset[i + 1]);
 }
 
 #endif // X_AXIS_TWIST_COMPENSATION

commit 687dc9ad4d89212ec4da8983e71b8772c03a1619
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Fri Mar 4 21:57:51 2022 +0000

    ü©π Improve and apply XATC reset() (#23840)

diff --git a/Marlin/src/feature/x_twist.cpp b/Marlin/src/feature/x_twist.cpp
index deac1bceba..8910091239 100644
--- a/Marlin/src/feature/x_twist.cpp
+++ b/Marlin/src/feature/x_twist.cpp
@@ -17,32 +17,35 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #include "../inc/MarlinConfig.h"
 
 #if ENABLED(X_AXIS_TWIST_COMPENSATION)
 
 #include "x_twist.h"
+#include "../module/probe.h"
 
 XATC xatc;
 
-bool XATC::enabled = true;
+bool XATC::enabled;
 float XATC::spacing, XATC::start;
 xatc_array_t XATC::z_offset; // Initialized by settings.load()
 
 void XATC::reset() {
   constexpr float xzo[] = XATC_Z_OFFSETS;
   static_assert(COUNT(xzo) == XATC_MAX_POINTS, "XATC_Z_OFFSETS is the wrong size.");
-  enabled = false;
   COPY(z_offset, xzo);
+  xatc.spacing = (probe.max_x() - probe.min_x()) / (XATC_MAX_POINTS - 1);
+  xatc.start = probe.min_x();
+  enabled = true;
 }
 
 void XATC::print_points() {
   SERIAL_ECHOLNPGM(" X-Twist Correction:");
   LOOP_L_N(x, XATC_MAX_POINTS) {
     SERIAL_CHAR(' ');
     if (!isnan(z_offset[x])) {
       if (z_offset[x] >= 0) SERIAL_CHAR('+');
       SERIAL_ECHO_F(z_offset[x], 3);
     }

commit 2e39bc30fd748b0ade7aafdab4827f942536cdcd
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Wed Mar 2 22:13:46 2022 +0000

    üö∏ Universal X_AXIS_TWIST_COMPENSATION (#23828)

diff --git a/Marlin/src/feature/x_twist.cpp b/Marlin/src/feature/x_twist.cpp
new file mode 100644
index 0000000000..deac1bceba
--- /dev/null
+++ b/Marlin/src/feature/x_twist.cpp
@@ -0,0 +1,69 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#include "../inc/MarlinConfig.h"
+
+#if ENABLED(X_AXIS_TWIST_COMPENSATION)
+
+#include "x_twist.h"
+
+XATC xatc;
+
+bool XATC::enabled = true;
+float XATC::spacing, XATC::start;
+xatc_array_t XATC::z_offset; // Initialized by settings.load()
+
+void XATC::reset() {
+  constexpr float xzo[] = XATC_Z_OFFSETS;
+  static_assert(COUNT(xzo) == XATC_MAX_POINTS, "XATC_Z_OFFSETS is the wrong size.");
+  enabled = false;
+  COPY(z_offset, xzo);
+}
+
+void XATC::print_points() {
+  SERIAL_ECHOLNPGM(" X-Twist Correction:");
+  LOOP_L_N(x, XATC_MAX_POINTS) {
+    SERIAL_CHAR(' ');
+    if (!isnan(z_offset[x])) {
+      if (z_offset[x] >= 0) SERIAL_CHAR('+');
+      SERIAL_ECHO_F(z_offset[x], 3);
+    }
+    else {
+      LOOP_L_N(i, 6)
+        SERIAL_CHAR(i ? '=' : ' ');
+    }
+  }
+  SERIAL_EOL();
+}
+
+float lerp(const_float_t t, const_float_t a, const_float_t b) { return a + t * (b - a); }
+
+float XATC::compensation(const xy_pos_t &raw) {
+  if (!enabled) return 0;
+  if (NEAR_ZERO(spacing)) return 0;
+  float t = (raw.x - start) / spacing;
+  int i = FLOOR(t);
+  LIMIT(i, 0, XATC_MAX_POINTS - 2);
+  t -= i;
+  return lerp(t, z_offset[i], z_offset[i + 1]);
+}
+
+#endif // X_AXIS_TWIST_COMPENSATION
