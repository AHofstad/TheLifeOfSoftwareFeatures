commit 36e66bdd9ff22ddfdcaa36ac8a9b9448c78ca44c
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Nov 18 09:11:59 2023 +1300

    üîß Define MarlinUI axis moves with lists (#26344)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index f5ceec8f12..c7e588b758 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -89,22 +89,22 @@ void xatc_wizard_set_offset_and_go_to_next_point() {
 void xatc_wizard_menu() {
   START_MENU();
   float calculated_z_offset = probe.offset.z + current_position.z - measured_z;
 
   if (LCD_HEIGHT >= 4)
     STATIC_ITEM(MSG_MOVE_NOZZLE_TO_BED, SS_CENTER|SS_INVERT);
 
   STATIC_ITEM_F(F("Z="), SS_CENTER, ftostr42_52(current_position.z));
   STATIC_ITEM(MSG_ZPROBE_ZOFFSET, SS_LEFT, ftostr42_52(calculated_z_offset));
 
-  SUBMENU(MSG_MOVE_1MM,  []{ _goto_manual_move_z( 1);    });
-  SUBMENU(MSG_MOVE_01MM, []{ _goto_manual_move_z( 0.1f); });
+  SUBMENU_S(F("1.0"), MSG_MOVE_N_MM, []{ _goto_manual_move_z( 1.0f); });
+  SUBMENU_S(F("0.1"), MSG_MOVE_N_MM, []{ _goto_manual_move_z( 0.1f); });
 
   if ((FINE_MANUAL_MOVE) > 0.0f && (FINE_MANUAL_MOVE) < 0.1f)
     SUBMENU_f(F(STRINGIFY(FINE_MANUAL_MOVE)), MSG_MOVE_N_MM, []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
 
   ACTION_ITEM(MSG_BUTTON_DONE, xatc_wizard_set_offset_and_go_to_next_point);
 
   END_MENU();
 }
 
 //

commit b956001d8175b3f01ef0be2ef6b07825a8509317
Author: lukasradek <lukasradek@users.noreply.github.com>
Date:   Mon Aug 7 05:08:35 2023 +0200

    üö∏ Update LCD Manual Leveling display (#26088)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index 6162a5e30d..f5ceec8f12 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -106,22 +106,22 @@ void xatc_wizard_menu() {
 
   END_MENU();
 }
 
 //
 // Step 5: Display "Next point: 1 / 9" while waiting for move to finish
 //
 void xatc_wizard_moving() {
   if (ui.should_draw()) {
     MString<9> msg;
-    msg.setf(F("%i / %u"), manual_probe_index + 1, XATC_MAX_POINTS);
-    MenuEditItemBase::draw_edit_screen(GET_TEXT_F(MSG_LEVEL_BED_NEXT_POINT), &msg);
+    msg.setf(F(" %i / %u"), manual_probe_index + 1, XATC_MAX_POINTS);
+    MenuItem_static::draw(LCD_HEIGHT / 2, GET_TEXT_F(MSG_LEVEL_BED_NEXT_POINT), SS_CENTER, msg);
   }
   ui.refresh(LCDVIEW_CALL_NO_REDRAW);
   if (!ui.wait_for_move) ui.goto_screen(xatc_wizard_menu);
 }
 
 //
 // Step 4: Initiate a move to the next point
 //
 void xatc_wizard_goto_next_point() {
   if (manual_probe_index < XATC_MAX_POINTS) {

commit 574dd34c49fde76e1e736b8a7e1ea579d724ff22
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 27 13:19:36 2023 -0500

    ‚ôªÔ∏è String helper class (#24390)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index 56872b73ee..6162a5e30d 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -105,23 +105,23 @@ void xatc_wizard_menu() {
   ACTION_ITEM(MSG_BUTTON_DONE, xatc_wizard_set_offset_and_go_to_next_point);
 
   END_MENU();
 }
 
 //
 // Step 5: Display "Next point: 1 / 9" while waiting for move to finish
 //
 void xatc_wizard_moving() {
   if (ui.should_draw()) {
-    char msg[10];
-    sprintf_P(msg, PSTR("%i / %u"), manual_probe_index + 1, XATC_MAX_POINTS);
-    MenuEditItemBase::draw_edit_screen(GET_TEXT_F(MSG_LEVEL_BED_NEXT_POINT), msg);
+    MString<9> msg;
+    msg.setf(F("%i / %u"), manual_probe_index + 1, XATC_MAX_POINTS);
+    MenuEditItemBase::draw_edit_screen(GET_TEXT_F(MSG_LEVEL_BED_NEXT_POINT), &msg);
   }
   ui.refresh(LCDVIEW_CALL_NO_REDRAW);
   if (!ui.wait_for_move) ui.goto_screen(xatc_wizard_menu);
 }
 
 //
 // Step 4: Initiate a move to the next point
 //
 void xatc_wizard_goto_next_point() {
   if (manual_probe_index < XATC_MAX_POINTS) {

commit 86c811660ebf0b3fcbae2f34273d4c9d0c22abc4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:30:34 2023 -0500

    üßë‚Äçüíª Remove LOOP macros (#25917)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index 5339e8e6e5..56872b73ee 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -143,26 +143,26 @@ void xatc_wizard_goto_next_point() {
       current_position.z = (XATC_START_Z) - probe.offset.z + measured_z;
       line_to_current_position(XY_PROBE_FEEDRATE_MM_S);
       ui.wait_for_move = false;
     }
     else
       manual_probe_index++; // Go to next point
   }
   else {
     // Compute the z-offset by averaging the values found with this wizard
     z_offset = 0;
-    LOOP_L_N(i, XATC_MAX_POINTS) z_offset += xatc.z_offset[i];
+    for (uint8_t i = 0; i < XATC_MAX_POINTS; ++i) z_offset += xatc.z_offset[i];
     z_offset /= XATC_MAX_POINTS;
 
     // Subtract the average from the values found with this wizard.
     // This way they are indipendent from the z-offset
-    LOOP_L_N(i, XATC_MAX_POINTS) xatc.z_offset[i] -= z_offset;
+    for (uint8_t i = 0; i < XATC_MAX_POINTS; ++i) xatc.z_offset[i] -= z_offset;
 
     ui.goto_screen(xatc_wizard_update_z_offset);
   }
 }
 
 //
 // Step 3: Display "Click to Begin", wait for click
 //         Move to the first probe position
 //
 void xatc_wizard_homing_done() {

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index 86ef3be7b9..5339e8e6e5 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -163,21 +163,21 @@ void xatc_wizard_goto_next_point() {
 
 //
 // Step 3: Display "Click to Begin", wait for click
 //         Move to the first probe position
 //
 void xatc_wizard_homing_done() {
   if (ui.should_draw()) {
     MenuItem_static::draw(1, GET_TEXT_F(MSG_LEVEL_BED_WAITING));
 
     // Color UI needs a control to detect a touch
-    #if BOTH(TOUCH_SCREEN, HAS_GRAPHICAL_TFT)
+    #if ALL(TOUCH_SCREEN, HAS_GRAPHICAL_TFT)
       touch.add_control(CLICK, 0, 0, TFT_WIDTH, TFT_HEIGHT);
     #endif
   }
 
   if (ui.use_click()) {
     xatc.reset();
 
     SET_SOFT_ENDSTOP_LOOSE(true); // Disable soft endstops for free Z movement
 
     ui.goto_screen(xatc_wizard_goto_next_point);

commit 161b99cb54f5d6d183877902581d3d77e8a1fa78
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 14 01:08:51 2023 -0500

    üêõ Fix some bad feedrates (#25672)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index d1850a1eb2..86ef3be7b9 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -134,21 +134,21 @@ void xatc_wizard_goto_next_point() {
       ui.goto_screen(xatc_wizard_moving);
 
       // Deploy certain probes before starting probing
       TERN_(BLTOUCH, do_z_clearance(Z_CLEARANCE_DEPLOY_PROBE));
 
       xatc.set_enabled(false);
       measured_z = probe.probe_at_point(x, XATC_Y_POSITION, PROBE_PT_STOW);
       xatc.set_enabled(true);
       current_position += probe.offset_xy;
       current_position.z = (XATC_START_Z) - probe.offset.z + measured_z;
-      line_to_current_position(MMM_TO_MMS(XY_PROBE_FEEDRATE));
+      line_to_current_position(XY_PROBE_FEEDRATE_MM_S);
       ui.wait_for_move = false;
     }
     else
       manual_probe_index++; // Go to next point
   }
   else {
     // Compute the z-offset by averaging the values found with this wizard
     z_offset = 0;
     LOOP_L_N(i, XATC_MAX_POINTS) z_offset += xatc.z_offset[i];
     z_offset /= XATC_MAX_POINTS;

commit 10983d0cfe3e353ba465cfcadf8aeb51327f1197
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 15 00:29:37 2023 -0500

    üé® Misc. tramming menu cleanup (#25519)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index a069b427c6..d1850a1eb2 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -39,21 +39,21 @@
 void _goto_manual_move_z(const_float_t);
 
 float measured_z, z_offset;
 
 //
 // Step 9: X Axis Twist Compensation Wizard is finished.
 //
 void xatc_wizard_done() {
   if (!ui.wait_for_move) {
     xatc.print_points();
-    set_bed_leveling_enabled(leveling_was_active);
+    set_bed_leveling_enabled(menu_leveling_was_active);
     SET_SOFT_ENDSTOP_LOOSE(false);
     ui.goto_screen(menu_advanced_settings);
   }
   if (ui.should_draw())
     MenuItem_static::draw(LCD_HEIGHT >= 4, GET_TEXT_F(MSG_XATC_DONE));
   ui.refresh(LCDVIEW_CALL_REDRAW_NEXT);
 }
 
 void xatc_wizard_goto_next_point();
 
@@ -192,21 +192,21 @@ void xatc_wizard_homing() {
   if (all_axes_homed())
     ui.goto_screen(xatc_wizard_homing_done);
 }
 
 //
 // Step 1: Prepare for the wizard...
 //
 void xatc_wizard_continue() {
   // Store Bed-Leveling-State and disable
   #if HAS_LEVELING
-    leveling_was_active = planner.leveling_active;
+    menu_leveling_was_active = planner.leveling_active;
     set_bed_leveling_enabled(false);
   #endif
 
   // Home all axes
   ui.defer_status_screen();
   set_all_unhomed();
   ui.goto_screen(xatc_wizard_homing);
   queue.inject_P(G28_STR);
 }
 

commit 757156de727a4e593eb961ea6194ba2023352e3f
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Wed Jun 22 03:45:22 2022 +0100

    ü©π LCD strings followup, fix warning (#24328)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index e46745e8b7..a069b427c6 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -92,26 +92,22 @@ void xatc_wizard_menu() {
 
   if (LCD_HEIGHT >= 4)
     STATIC_ITEM(MSG_MOVE_NOZZLE_TO_BED, SS_CENTER|SS_INVERT);
 
   STATIC_ITEM_F(F("Z="), SS_CENTER, ftostr42_52(current_position.z));
   STATIC_ITEM(MSG_ZPROBE_ZOFFSET, SS_LEFT, ftostr42_52(calculated_z_offset));
 
   SUBMENU(MSG_MOVE_1MM,  []{ _goto_manual_move_z( 1);    });
   SUBMENU(MSG_MOVE_01MM, []{ _goto_manual_move_z( 0.1f); });
 
-  if ((FINE_MANUAL_MOVE) > 0.0f && (FINE_MANUAL_MOVE) < 0.1f) {
-    // Determine digits needed right of decimal
-    const uint8_t digs = !UNEAR_ZERO((FINE_MANUAL_MOVE) * 1000 - int((FINE_MANUAL_MOVE) * 1000)) ? 4 :
-                         !UNEAR_ZERO((FINE_MANUAL_MOVE) *  100 - int((FINE_MANUAL_MOVE) *  100)) ? 3 : 2;
+  if ((FINE_MANUAL_MOVE) > 0.0f && (FINE_MANUAL_MOVE) < 0.1f)
     SUBMENU_f(F(STRINGIFY(FINE_MANUAL_MOVE)), MSG_MOVE_N_MM, []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
-  }
 
   ACTION_ITEM(MSG_BUTTON_DONE, xatc_wizard_set_offset_and_go_to_next_point);
 
   END_MENU();
 }
 
 //
 // Step 5: Display "Next point: 1 / 9" while waiting for move to finish
 //
 void xatc_wizard_moving() {

commit 8aca38351cd6d33a1202bf9a13890dc8e5eadd49
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 3 22:56:38 2022 -0500

    üßë‚Äçüíª Extend LCD string substitution (#24278)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index eba22cca62..e46745e8b7 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -93,33 +93,24 @@ void xatc_wizard_menu() {
   if (LCD_HEIGHT >= 4)
     STATIC_ITEM(MSG_MOVE_NOZZLE_TO_BED, SS_CENTER|SS_INVERT);
 
   STATIC_ITEM_F(F("Z="), SS_CENTER, ftostr42_52(current_position.z));
   STATIC_ITEM(MSG_ZPROBE_ZOFFSET, SS_LEFT, ftostr42_52(calculated_z_offset));
 
   SUBMENU(MSG_MOVE_1MM,  []{ _goto_manual_move_z( 1);    });
   SUBMENU(MSG_MOVE_01MM, []{ _goto_manual_move_z( 0.1f); });
 
   if ((FINE_MANUAL_MOVE) > 0.0f && (FINE_MANUAL_MOVE) < 0.1f) {
-    char tmp[20], numstr[10];
     // Determine digits needed right of decimal
     const uint8_t digs = !UNEAR_ZERO((FINE_MANUAL_MOVE) * 1000 - int((FINE_MANUAL_MOVE) * 1000)) ? 4 :
                          !UNEAR_ZERO((FINE_MANUAL_MOVE) *  100 - int((FINE_MANUAL_MOVE) *  100)) ? 3 : 2;
-    sprintf_P(tmp, GET_TEXT(MSG_MOVE_N_MM), dtostrf(FINE_MANUAL_MOVE, 1, digs, numstr));
-    #if DISABLED(HAS_GRAPHICAL_TFT)
-      SUBMENU_F(FPSTR(NUL_STR), []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
-      MENU_ITEM_ADDON_START(0 + ENABLED(HAS_MARLINUI_HD44780));
-      lcd_put_u8str(tmp);
-      MENU_ITEM_ADDON_END();
-    #else
-      SUBMENU_F(FPSTR(tmp), []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
-    #endif
+    SUBMENU_f(F(STRINGIFY(FINE_MANUAL_MOVE)), MSG_MOVE_N_MM, []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
   }
 
   ACTION_ITEM(MSG_BUTTON_DONE, xatc_wizard_set_offset_and_go_to_next_point);
 
   END_MENU();
 }
 
 //
 // Step 5: Display "Next point: 1 / 9" while waiting for move to finish
 //

commit a5e1d4c50ae40c8203d8490be83ef86e16ebf1c2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 22 19:56:46 2022 -0500

    ‚ôªÔ∏è Apply F() to more LCD code (#24228)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index ce46053dfc..eba22cca62 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -44,39 +44,39 @@ float measured_z, z_offset;
 // Step 9: X Axis Twist Compensation Wizard is finished.
 //
 void xatc_wizard_done() {
   if (!ui.wait_for_move) {
     xatc.print_points();
     set_bed_leveling_enabled(leveling_was_active);
     SET_SOFT_ENDSTOP_LOOSE(false);
     ui.goto_screen(menu_advanced_settings);
   }
   if (ui.should_draw())
-    MenuItem_static::draw(LCD_HEIGHT >= 4, GET_TEXT(MSG_XATC_DONE));
+    MenuItem_static::draw(LCD_HEIGHT >= 4, GET_TEXT_F(MSG_XATC_DONE));
   ui.refresh(LCDVIEW_CALL_REDRAW_NEXT);
 }
 
 void xatc_wizard_goto_next_point();
 
 //
 // Step 8: Ask the user if he wants to update the z-offset of the probe
 //
 void xatc_wizard_update_z_offset() {
   MenuItem_confirm::select_screen(
-      GET_TEXT(MSG_YES), GET_TEXT(MSG_NO)
+      GET_TEXT_F(MSG_YES), GET_TEXT_F(MSG_NO)
     , []{
         probe.offset.z = z_offset;
         ui.goto_screen(xatc_wizard_done);
       }
     , xatc_wizard_done
-    , GET_TEXT(MSG_XATC_UPDATE_Z_OFFSET)
-    , ftostr42_52(z_offset), PSTR("?")
+    , GET_TEXT_F(MSG_XATC_UPDATE_Z_OFFSET)
+    , ftostr42_52(z_offset), F("?")
   );
 }
 
 //
 // Step 7: Set the Z-offset for this point and go to the next one.
 //
 void xatc_wizard_set_offset_and_go_to_next_point() {
   // Set Z-offset at probed point
   xatc.z_offset[manual_probe_index++] = probe.offset.z + current_position.z - measured_z;
   // Go to next point
@@ -86,55 +86,55 @@ void xatc_wizard_set_offset_and_go_to_next_point() {
 //
 // Step 6: Wizard Menu. Move the nozzle down until it touches the bed.
 //
 void xatc_wizard_menu() {
   START_MENU();
   float calculated_z_offset = probe.offset.z + current_position.z - measured_z;
 
   if (LCD_HEIGHT >= 4)
     STATIC_ITEM(MSG_MOVE_NOZZLE_TO_BED, SS_CENTER|SS_INVERT);
 
-  STATIC_ITEM_P(PSTR("Z="), SS_CENTER, ftostr42_52(current_position.z));
+  STATIC_ITEM_F(F("Z="), SS_CENTER, ftostr42_52(current_position.z));
   STATIC_ITEM(MSG_ZPROBE_ZOFFSET, SS_LEFT, ftostr42_52(calculated_z_offset));
 
   SUBMENU(MSG_MOVE_1MM,  []{ _goto_manual_move_z( 1);    });
   SUBMENU(MSG_MOVE_01MM, []{ _goto_manual_move_z( 0.1f); });
 
   if ((FINE_MANUAL_MOVE) > 0.0f && (FINE_MANUAL_MOVE) < 0.1f) {
     char tmp[20], numstr[10];
     // Determine digits needed right of decimal
     const uint8_t digs = !UNEAR_ZERO((FINE_MANUAL_MOVE) * 1000 - int((FINE_MANUAL_MOVE) * 1000)) ? 4 :
                          !UNEAR_ZERO((FINE_MANUAL_MOVE) *  100 - int((FINE_MANUAL_MOVE) *  100)) ? 3 : 2;
     sprintf_P(tmp, GET_TEXT(MSG_MOVE_N_MM), dtostrf(FINE_MANUAL_MOVE, 1, digs, numstr));
     #if DISABLED(HAS_GRAPHICAL_TFT)
-      SUBMENU_P(NUL_STR, []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
+      SUBMENU_F(FPSTR(NUL_STR), []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
       MENU_ITEM_ADDON_START(0 + ENABLED(HAS_MARLINUI_HD44780));
       lcd_put_u8str(tmp);
       MENU_ITEM_ADDON_END();
     #else
-      SUBMENU_P(tmp, []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
+      SUBMENU_F(FPSTR(tmp), []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
     #endif
   }
 
   ACTION_ITEM(MSG_BUTTON_DONE, xatc_wizard_set_offset_and_go_to_next_point);
 
   END_MENU();
 }
 
 //
 // Step 5: Display "Next point: 1 / 9" while waiting for move to finish
 //
 void xatc_wizard_moving() {
   if (ui.should_draw()) {
     char msg[10];
     sprintf_P(msg, PSTR("%i / %u"), manual_probe_index + 1, XATC_MAX_POINTS);
-    MenuEditItemBase::draw_edit_screen(GET_TEXT(MSG_LEVEL_BED_NEXT_POINT), msg);
+    MenuEditItemBase::draw_edit_screen(GET_TEXT_F(MSG_LEVEL_BED_NEXT_POINT), msg);
   }
   ui.refresh(LCDVIEW_CALL_NO_REDRAW);
   if (!ui.wait_for_move) ui.goto_screen(xatc_wizard_menu);
 }
 
 //
 // Step 4: Initiate a move to the next point
 //
 void xatc_wizard_goto_next_point() {
   if (manual_probe_index < XATC_MAX_POINTS) {
@@ -173,21 +173,21 @@ void xatc_wizard_goto_next_point() {
     ui.goto_screen(xatc_wizard_update_z_offset);
   }
 }
 
 //
 // Step 3: Display "Click to Begin", wait for click
 //         Move to the first probe position
 //
 void xatc_wizard_homing_done() {
   if (ui.should_draw()) {
-    MenuItem_static::draw(1, GET_TEXT(MSG_LEVEL_BED_WAITING));
+    MenuItem_static::draw(1, GET_TEXT_F(MSG_LEVEL_BED_WAITING));
 
     // Color UI needs a control to detect a touch
     #if BOTH(TOUCH_SCREEN, HAS_GRAPHICAL_TFT)
       touch.add_control(CLICK, 0, 0, TFT_WIDTH, TFT_HEIGHT);
     #endif
   }
 
   if (ui.use_click()) {
     xatc.reset();
 

commit df4e022a48667369fcc94dfda56505eb3ba2019f
Author: Giuseppe499 <giuseppe499@live.it>
Date:   Sat Mar 12 00:12:03 2022 +0100

    üö∏ Fix, extend X Axis Twist Compensation (#23745)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index 93f8de07ad..ce46053dfc 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -146,21 +146,21 @@ void xatc_wizard_goto_next_point() {
       ui.wait_for_move = true;
       ui.goto_screen(xatc_wizard_moving);
 
       // Deploy certain probes before starting probing
       TERN_(BLTOUCH, do_z_clearance(Z_CLEARANCE_DEPLOY_PROBE));
 
       xatc.set_enabled(false);
       measured_z = probe.probe_at_point(x, XATC_Y_POSITION, PROBE_PT_STOW);
       xatc.set_enabled(true);
       current_position += probe.offset_xy;
-      current_position.z = XATC_START_Z - probe.offset.z + measured_z;
+      current_position.z = (XATC_START_Z) - probe.offset.z + measured_z;
       line_to_current_position(MMM_TO_MMS(XY_PROBE_FEEDRATE));
       ui.wait_for_move = false;
     }
     else
       manual_probe_index++; // Go to next point
   }
   else {
     // Compute the z-offset by averaging the values found with this wizard
     z_offset = 0;
     LOOP_L_N(i, XATC_MAX_POINTS) z_offset += xatc.z_offset[i];

commit 687dc9ad4d89212ec4da8983e71b8772c03a1619
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Fri Mar 4 21:57:51 2022 +0000

    ü©π Improve and apply XATC reset() (#23840)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index ca385ebfeb..93f8de07ad 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -182,22 +182,21 @@ void xatc_wizard_homing_done() {
   if (ui.should_draw()) {
     MenuItem_static::draw(1, GET_TEXT(MSG_LEVEL_BED_WAITING));
 
     // Color UI needs a control to detect a touch
     #if BOTH(TOUCH_SCREEN, HAS_GRAPHICAL_TFT)
       touch.add_control(CLICK, 0, 0, TFT_WIDTH, TFT_HEIGHT);
     #endif
   }
 
   if (ui.use_click()) {
-    xatc.spacing = (probe.max_x() - probe.min_x()) / (XATC_MAX_POINTS - 1);
-    xatc.start = probe.min_x();
+    xatc.reset();
 
     SET_SOFT_ENDSTOP_LOOSE(true); // Disable soft endstops for free Z movement
 
     ui.goto_screen(xatc_wizard_goto_next_point);
   }
 }
 
 //
 // Step 2: Display "Homing XYZ" - Wait for homing to finish
 //

commit 2e39bc30fd748b0ade7aafdab4827f942536cdcd
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Wed Mar 2 22:13:46 2022 +0000

    üö∏ Universal X_AXIS_TWIST_COMPENSATION (#23828)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index fab3b5ae11..ca385ebfeb 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -20,20 +20,21 @@
  *
  */
 #include "../../inc/MarlinConfigPre.h"
 
 #if ENABLED(X_AXIS_TWIST_COMPENSATION)
 
 #include "menu_item.h"
 #include "menu_addon.h"
 #include "../../module/planner.h"
 #include "../../feature/bedlevel/bedlevel.h"
+#include "../../feature/x_twist.h"
 #include "../../module/motion.h"
 #include "../../gcode/queue.h"
 #include "../../module/probe.h"
 
 #ifndef XATC_Y_POSITION
   #define XATC_Y_POSITION ((probe.max_y() - probe.min_y())/2)
 #endif
 
 void _goto_manual_move_z(const_float_t);
 
@@ -141,21 +142,23 @@ void xatc_wizard_goto_next_point() {
     const float x = xatc.start + manual_probe_index * xatc.spacing;
 
     // Avoid probing outside the round or hexagonal area
     if (!TERN0(IS_KINEMATIC, !probe.can_reach(x, XATC_Y_POSITION))) {
       ui.wait_for_move = true;
       ui.goto_screen(xatc_wizard_moving);
 
       // Deploy certain probes before starting probing
       TERN_(BLTOUCH, do_z_clearance(Z_CLEARANCE_DEPLOY_PROBE));
 
+      xatc.set_enabled(false);
       measured_z = probe.probe_at_point(x, XATC_Y_POSITION, PROBE_PT_STOW);
+      xatc.set_enabled(true);
       current_position += probe.offset_xy;
       current_position.z = XATC_START_Z - probe.offset.z + measured_z;
       line_to_current_position(MMM_TO_MMS(XY_PROBE_FEEDRATE));
       ui.wait_for_move = false;
     }
     else
       manual_probe_index++; // Go to next point
   }
   else {
     // Compute the z-offset by averaging the values found with this wizard

commit 98a17cd60dc51f1b22b88101b526fd7f1b3f8787
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 15 15:09:09 2022 -0600

    ‚ôªÔ∏è Rename XATC z_values => z_offset

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
index 288f16603a..fab3b5ae11 100644
--- a/Marlin/src/lcd/menu/menu_x_twist.cpp
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -70,21 +70,21 @@ void xatc_wizard_update_z_offset() {
     , GET_TEXT(MSG_XATC_UPDATE_Z_OFFSET)
     , ftostr42_52(z_offset), PSTR("?")
   );
 }
 
 //
 // Step 7: Set the Z-offset for this point and go to the next one.
 //
 void xatc_wizard_set_offset_and_go_to_next_point() {
   // Set Z-offset at probed point
-  xatc.z_values[manual_probe_index++] = probe.offset.z + current_position.z - measured_z;
+  xatc.z_offset[manual_probe_index++] = probe.offset.z + current_position.z - measured_z;
   // Go to next point
   ui.goto_screen(xatc_wizard_goto_next_point);
 }
 
 //
 // Step 6: Wizard Menu. Move the nozzle down until it touches the bed.
 //
 void xatc_wizard_menu() {
   START_MENU();
   float calculated_z_offset = probe.offset.z + current_position.z - measured_z;
@@ -153,26 +153,26 @@ void xatc_wizard_goto_next_point() {
       current_position.z = XATC_START_Z - probe.offset.z + measured_z;
       line_to_current_position(MMM_TO_MMS(XY_PROBE_FEEDRATE));
       ui.wait_for_move = false;
     }
     else
       manual_probe_index++; // Go to next point
   }
   else {
     // Compute the z-offset by averaging the values found with this wizard
     z_offset = 0;
-    LOOP_L_N(i, XATC_MAX_POINTS) z_offset += xatc.z_values[i];
+    LOOP_L_N(i, XATC_MAX_POINTS) z_offset += xatc.z_offset[i];
     z_offset /= XATC_MAX_POINTS;
 
     // Subtract the average from the values found with this wizard.
     // This way they are indipendent from the z-offset
-    LOOP_L_N(i, XATC_MAX_POINTS) xatc.z_values[i] -= z_offset;
+    LOOP_L_N(i, XATC_MAX_POINTS) xatc.z_offset[i] -= z_offset;
 
     ui.goto_screen(xatc_wizard_update_z_offset);
   }
 }
 
 //
 // Step 3: Display "Click to Begin", wait for click
 //         Move to the first probe position
 //
 void xatc_wizard_homing_done() {

commit a16a059312b0ddb822da2769b5ba5372f9857c48
Author: Giuseppe499 <giuseppe499@live.it>
Date:   Tue Dec 7 02:53:51 2021 +0100

    ‚ú® X Twist Compensation & Calibration (#23238)

diff --git a/Marlin/src/lcd/menu/menu_x_twist.cpp b/Marlin/src/lcd/menu/menu_x_twist.cpp
new file mode 100644
index 0000000000..288f16603a
--- /dev/null
+++ b/Marlin/src/lcd/menu/menu_x_twist.cpp
@@ -0,0 +1,224 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#include "../../inc/MarlinConfigPre.h"
+
+#if ENABLED(X_AXIS_TWIST_COMPENSATION)
+
+#include "menu_item.h"
+#include "menu_addon.h"
+#include "../../module/planner.h"
+#include "../../feature/bedlevel/bedlevel.h"
+#include "../../module/motion.h"
+#include "../../gcode/queue.h"
+#include "../../module/probe.h"
+
+#ifndef XATC_Y_POSITION
+  #define XATC_Y_POSITION ((probe.max_y() - probe.min_y())/2)
+#endif
+
+void _goto_manual_move_z(const_float_t);
+
+float measured_z, z_offset;
+
+//
+// Step 9: X Axis Twist Compensation Wizard is finished.
+//
+void xatc_wizard_done() {
+  if (!ui.wait_for_move) {
+    xatc.print_points();
+    set_bed_leveling_enabled(leveling_was_active);
+    SET_SOFT_ENDSTOP_LOOSE(false);
+    ui.goto_screen(menu_advanced_settings);
+  }
+  if (ui.should_draw())
+    MenuItem_static::draw(LCD_HEIGHT >= 4, GET_TEXT(MSG_XATC_DONE));
+  ui.refresh(LCDVIEW_CALL_REDRAW_NEXT);
+}
+
+void xatc_wizard_goto_next_point();
+
+//
+// Step 8: Ask the user if he wants to update the z-offset of the probe
+//
+void xatc_wizard_update_z_offset() {
+  MenuItem_confirm::select_screen(
+      GET_TEXT(MSG_YES), GET_TEXT(MSG_NO)
+    , []{
+        probe.offset.z = z_offset;
+        ui.goto_screen(xatc_wizard_done);
+      }
+    , xatc_wizard_done
+    , GET_TEXT(MSG_XATC_UPDATE_Z_OFFSET)
+    , ftostr42_52(z_offset), PSTR("?")
+  );
+}
+
+//
+// Step 7: Set the Z-offset for this point and go to the next one.
+//
+void xatc_wizard_set_offset_and_go_to_next_point() {
+  // Set Z-offset at probed point
+  xatc.z_values[manual_probe_index++] = probe.offset.z + current_position.z - measured_z;
+  // Go to next point
+  ui.goto_screen(xatc_wizard_goto_next_point);
+}
+
+//
+// Step 6: Wizard Menu. Move the nozzle down until it touches the bed.
+//
+void xatc_wizard_menu() {
+  START_MENU();
+  float calculated_z_offset = probe.offset.z + current_position.z - measured_z;
+
+  if (LCD_HEIGHT >= 4)
+    STATIC_ITEM(MSG_MOVE_NOZZLE_TO_BED, SS_CENTER|SS_INVERT);
+
+  STATIC_ITEM_P(PSTR("Z="), SS_CENTER, ftostr42_52(current_position.z));
+  STATIC_ITEM(MSG_ZPROBE_ZOFFSET, SS_LEFT, ftostr42_52(calculated_z_offset));
+
+  SUBMENU(MSG_MOVE_1MM,  []{ _goto_manual_move_z( 1);    });
+  SUBMENU(MSG_MOVE_01MM, []{ _goto_manual_move_z( 0.1f); });
+
+  if ((FINE_MANUAL_MOVE) > 0.0f && (FINE_MANUAL_MOVE) < 0.1f) {
+    char tmp[20], numstr[10];
+    // Determine digits needed right of decimal
+    const uint8_t digs = !UNEAR_ZERO((FINE_MANUAL_MOVE) * 1000 - int((FINE_MANUAL_MOVE) * 1000)) ? 4 :
+                         !UNEAR_ZERO((FINE_MANUAL_MOVE) *  100 - int((FINE_MANUAL_MOVE) *  100)) ? 3 : 2;
+    sprintf_P(tmp, GET_TEXT(MSG_MOVE_N_MM), dtostrf(FINE_MANUAL_MOVE, 1, digs, numstr));
+    #if DISABLED(HAS_GRAPHICAL_TFT)
+      SUBMENU_P(NUL_STR, []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
+      MENU_ITEM_ADDON_START(0 + ENABLED(HAS_MARLINUI_HD44780));
+      lcd_put_u8str(tmp);
+      MENU_ITEM_ADDON_END();
+    #else
+      SUBMENU_P(tmp, []{ _goto_manual_move_z(float(FINE_MANUAL_MOVE)); });
+    #endif
+  }
+
+  ACTION_ITEM(MSG_BUTTON_DONE, xatc_wizard_set_offset_and_go_to_next_point);
+
+  END_MENU();
+}
+
+//
+// Step 5: Display "Next point: 1 / 9" while waiting for move to finish
+//
+void xatc_wizard_moving() {
+  if (ui.should_draw()) {
+    char msg[10];
+    sprintf_P(msg, PSTR("%i / %u"), manual_probe_index + 1, XATC_MAX_POINTS);
+    MenuEditItemBase::draw_edit_screen(GET_TEXT(MSG_LEVEL_BED_NEXT_POINT), msg);
+  }
+  ui.refresh(LCDVIEW_CALL_NO_REDRAW);
+  if (!ui.wait_for_move) ui.goto_screen(xatc_wizard_menu);
+}
+
+//
+// Step 4: Initiate a move to the next point
+//
+void xatc_wizard_goto_next_point() {
+  if (manual_probe_index < XATC_MAX_POINTS) {
+
+    const float x = xatc.start + manual_probe_index * xatc.spacing;
+
+    // Avoid probing outside the round or hexagonal area
+    if (!TERN0(IS_KINEMATIC, !probe.can_reach(x, XATC_Y_POSITION))) {
+      ui.wait_for_move = true;
+      ui.goto_screen(xatc_wizard_moving);
+
+      // Deploy certain probes before starting probing
+      TERN_(BLTOUCH, do_z_clearance(Z_CLEARANCE_DEPLOY_PROBE));
+
+      measured_z = probe.probe_at_point(x, XATC_Y_POSITION, PROBE_PT_STOW);
+      current_position += probe.offset_xy;
+      current_position.z = XATC_START_Z - probe.offset.z + measured_z;
+      line_to_current_position(MMM_TO_MMS(XY_PROBE_FEEDRATE));
+      ui.wait_for_move = false;
+    }
+    else
+      manual_probe_index++; // Go to next point
+  }
+  else {
+    // Compute the z-offset by averaging the values found with this wizard
+    z_offset = 0;
+    LOOP_L_N(i, XATC_MAX_POINTS) z_offset += xatc.z_values[i];
+    z_offset /= XATC_MAX_POINTS;
+
+    // Subtract the average from the values found with this wizard.
+    // This way they are indipendent from the z-offset
+    LOOP_L_N(i, XATC_MAX_POINTS) xatc.z_values[i] -= z_offset;
+
+    ui.goto_screen(xatc_wizard_update_z_offset);
+  }
+}
+
+//
+// Step 3: Display "Click to Begin", wait for click
+//         Move to the first probe position
+//
+void xatc_wizard_homing_done() {
+  if (ui.should_draw()) {
+    MenuItem_static::draw(1, GET_TEXT(MSG_LEVEL_BED_WAITING));
+
+    // Color UI needs a control to detect a touch
+    #if BOTH(TOUCH_SCREEN, HAS_GRAPHICAL_TFT)
+      touch.add_control(CLICK, 0, 0, TFT_WIDTH, TFT_HEIGHT);
+    #endif
+  }
+
+  if (ui.use_click()) {
+    xatc.spacing = (probe.max_x() - probe.min_x()) / (XATC_MAX_POINTS - 1);
+    xatc.start = probe.min_x();
+
+    SET_SOFT_ENDSTOP_LOOSE(true); // Disable soft endstops for free Z movement
+
+    ui.goto_screen(xatc_wizard_goto_next_point);
+  }
+}
+
+//
+// Step 2: Display "Homing XYZ" - Wait for homing to finish
+//
+void xatc_wizard_homing() {
+  _lcd_draw_homing();
+  if (all_axes_homed())
+    ui.goto_screen(xatc_wizard_homing_done);
+}
+
+//
+// Step 1: Prepare for the wizard...
+//
+void xatc_wizard_continue() {
+  // Store Bed-Leveling-State and disable
+  #if HAS_LEVELING
+    leveling_was_active = planner.leveling_active;
+    set_bed_leveling_enabled(false);
+  #endif
+
+  // Home all axes
+  ui.defer_status_screen();
+  set_all_unhomed();
+  ui.goto_screen(xatc_wizard_homing);
+  queue.inject_P(G28_STR);
+}
+
+#endif // X_AXIS_TWIST_COMPENSATION
