commit 982b42579243543a8684f571554da0ce3137db96
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Feb 27 20:45:34 2024 -0600

    üî• Drop TMC26X support (#26770)

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
deleted file mode 100644
index f46163ea2d..0000000000
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ /dev/null
@@ -1,180 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- */
-
-/**
- * stepper/TMC26X.cpp
- * Stepper driver indirection for TMC26X drivers
- */
-
-#include "../../inc/MarlinConfig.h"
-
-//
-// TMC26X Driver objects and inits
-//
-#if HAS_TMC26X
-
-#include "TMC26X.h"
-
-#define _TMC26X_DEFINE(ST) TMC26XStepper stepper##ST(200, ST##_CS_PIN, ST##_STEP_PIN, ST##_DIR_PIN, ST##_CURRENT, int(ST##_RSENSE * 1000))
-
-#if AXIS_DRIVER_TYPE_X(TMC26X)
-  _TMC26X_DEFINE(X);
-#endif
-#if AXIS_DRIVER_TYPE_X2(TMC26X)
-  _TMC26X_DEFINE(X2);
-#endif
-#if AXIS_DRIVER_TYPE_Y(TMC26X)
-  _TMC26X_DEFINE(Y);
-#endif
-#if AXIS_DRIVER_TYPE_Y2(TMC26X)
-  _TMC26X_DEFINE(Y2);
-#endif
-#if AXIS_DRIVER_TYPE_Z(TMC26X)
-  _TMC26X_DEFINE(Z);
-#endif
-#if AXIS_DRIVER_TYPE_Z2(TMC26X)
-  _TMC26X_DEFINE(Z2);
-#endif
-#if AXIS_DRIVER_TYPE_Z3(TMC26X)
-  _TMC26X_DEFINE(Z3);
-#endif
-#if AXIS_DRIVER_TYPE_Z4(TMC26X)
-  _TMC26X_DEFINE(Z4);
-#endif
-#if AXIS_DRIVER_TYPE_I(TMC26X)
-  _TMC26X_DEFINE(I);
-#endif
-#if AXIS_DRIVER_TYPE_J(TMC26X)
-  _TMC26X_DEFINE(J);
-#endif
-#if AXIS_DRIVER_TYPE_K(TMC26X)
-  _TMC26X_DEFINE(K);
-#endif
-#if AXIS_DRIVER_TYPE_U(TMC26X)
-  _TMC26X_DEFINE(U);
-#endif
-#if AXIS_DRIVER_TYPE_V(TMC26X)
-  _TMC26X_DEFINE(V);
-#endif
-#if AXIS_DRIVER_TYPE_W(TMC26X)
-  _TMC26X_DEFINE(W);
-#endif
-#if AXIS_DRIVER_TYPE_E0(TMC26X)
-  _TMC26X_DEFINE(E0);
-#endif
-#if AXIS_DRIVER_TYPE_E1(TMC26X)
-  _TMC26X_DEFINE(E1);
-#endif
-#if AXIS_DRIVER_TYPE_E2(TMC26X)
-  _TMC26X_DEFINE(E2);
-#endif
-#if AXIS_DRIVER_TYPE_E3(TMC26X)
-  _TMC26X_DEFINE(E3);
-#endif
-#if AXIS_DRIVER_TYPE_E4(TMC26X)
-  _TMC26X_DEFINE(E4);
-#endif
-#if AXIS_DRIVER_TYPE_E5(TMC26X)
-  _TMC26X_DEFINE(E5);
-#endif
-#if AXIS_DRIVER_TYPE_E6(TMC26X)
-  _TMC26X_DEFINE(E6);
-#endif
-#if AXIS_DRIVER_TYPE_E7(TMC26X)
-  _TMC26X_DEFINE(E7);
-#endif
-
-#define _TMC26X_INIT(A) do{ \
-  stepper##A.setMicrosteps(A##_MICROSTEPS); \
-  stepper##A.start(); \
-}while(0)
-
-void tmc26x_init_to_defaults() {
-  #if AXIS_DRIVER_TYPE_X(TMC26X)
-    _TMC26X_INIT(X);
-  #endif
-  #if AXIS_DRIVER_TYPE_X2(TMC26X)
-    _TMC26X_INIT(X2);
-  #endif
-  #if AXIS_DRIVER_TYPE_Y(TMC26X)
-    _TMC26X_INIT(Y);
-  #endif
-  #if AXIS_DRIVER_TYPE_Y2(TMC26X)
-    _TMC26X_INIT(Y2);
-  #endif
-  #if AXIS_DRIVER_TYPE_Z(TMC26X)
-    _TMC26X_INIT(Z);
-  #endif
-  #if AXIS_DRIVER_TYPE_Z2(TMC26X)
-    _TMC26X_INIT(Z2);
-  #endif
-  #if AXIS_DRIVER_TYPE_Z3(TMC26X)
-    _TMC26X_INIT(Z3);
-  #endif
-  #if AXIS_DRIVER_TYPE_Z4(TMC26X)
-    _TMC26X_INIT(Z4);
-  #endif
-  #if AXIS_DRIVER_TYPE_I(TMC26X)
-     _TMC26X_INIT(I);
-  #endif
-  #if AXIS_DRIVER_TYPE_J(TMC26X)
-    _TMC26X_INIT(J);
-  #endif
-  #if AXIS_DRIVER_TYPE_K(TMC26X)
-    _TMC26X_INIT(K);
-  #endif
-  #if AXIS_DRIVER_TYPE_U(TMC26X)
-    _TMC26X_INIT(U);
-  #endif
-  #if AXIS_DRIVER_TYPE_V(TMC26X)
-    _TMC26X_INIT(V);
-  #endif
-  #if AXIS_DRIVER_TYPE_W(TMC26X)
-    _TMC26X_INIT(W);
-  #endif
-  #if AXIS_DRIVER_TYPE_E0(TMC26X)
-    _TMC26X_INIT(E0);
-  #endif
-  #if AXIS_DRIVER_TYPE_E1(TMC26X)
-    _TMC26X_INIT(E1);
-  #endif
-  #if AXIS_DRIVER_TYPE_E2(TMC26X)
-    _TMC26X_INIT(E2);
-  #endif
-  #if AXIS_DRIVER_TYPE_E3(TMC26X)
-    _TMC26X_INIT(E3);
-  #endif
-  #if AXIS_DRIVER_TYPE_E4(TMC26X)
-    _TMC26X_INIT(E4);
-  #endif
-  #if AXIS_DRIVER_TYPE_E5(TMC26X)
-    _TMC26X_INIT(E5);
-  #endif
-  #if AXIS_DRIVER_TYPE_E6(TMC26X)
-    _TMC26X_INIT(E6);
-  #endif
-  #if AXIS_DRIVER_TYPE_E7(TMC26X)
-    _TMC26X_INIT(E7);
-  #endif
-}
-
-#endif // HAS_TMC26X

commit cc1069a3f00fb4422bf372e409e95849c1c8322e
Author: Manuel McLure <manuel@mclure.org>
Date:   Sat Nov 26 18:30:59 2022 -0800

    üîß Merge TMC26X with TMC config (#24373)

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
index 52d84f8410..f46163ea2d 100644
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -34,7 +34,7 @@
 
 #include "TMC26X.h"
 
-#define _TMC26X_DEFINE(ST) TMC26XStepper stepper##ST(200, ST##_CS_PIN, ST##_STEP_PIN, ST##_DIR_PIN, ST##_MAX_CURRENT, ST##_SENSE_RESISTOR)
+#define _TMC26X_DEFINE(ST) TMC26XStepper stepper##ST(200, ST##_CS_PIN, ST##_STEP_PIN, ST##_DIR_PIN, ST##_CURRENT, int(ST##_RSENSE * 1000))
 
 #if AXIS_DRIVER_TYPE_X(TMC26X)
   _TMC26X_DEFINE(X);

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
index 26f91bfeb9..52d84f8410 100644
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -69,6 +69,15 @@
 #if AXIS_DRIVER_TYPE_K(TMC26X)
   _TMC26X_DEFINE(K);
 #endif
+#if AXIS_DRIVER_TYPE_U(TMC26X)
+  _TMC26X_DEFINE(U);
+#endif
+#if AXIS_DRIVER_TYPE_V(TMC26X)
+  _TMC26X_DEFINE(V);
+#endif
+#if AXIS_DRIVER_TYPE_W(TMC26X)
+  _TMC26X_DEFINE(W);
+#endif
 #if AXIS_DRIVER_TYPE_E0(TMC26X)
   _TMC26X_DEFINE(E0);
 #endif
@@ -133,6 +142,15 @@ void tmc26x_init_to_defaults() {
   #if AXIS_DRIVER_TYPE_K(TMC26X)
     _TMC26X_INIT(K);
   #endif
+  #if AXIS_DRIVER_TYPE_U(TMC26X)
+    _TMC26X_INIT(U);
+  #endif
+  #if AXIS_DRIVER_TYPE_V(TMC26X)
+    _TMC26X_INIT(V);
+  #endif
+  #if AXIS_DRIVER_TYPE_W(TMC26X)
+    _TMC26X_INIT(W);
+  #endif
   #if AXIS_DRIVER_TYPE_E0(TMC26X)
     _TMC26X_INIT(E0);
   #endif

commit 7726af9c5348c1c7d0fd9a56eca87d00cd75fee6
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Jun 5 09:18:47 2021 +0200

    üèóÔ∏è Support for up to 6 linear axes (#19112)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
index 926f1a4e08..26f91bfeb9 100644
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -60,6 +60,15 @@
 #if AXIS_DRIVER_TYPE_Z4(TMC26X)
   _TMC26X_DEFINE(Z4);
 #endif
+#if AXIS_DRIVER_TYPE_I(TMC26X)
+  _TMC26X_DEFINE(I);
+#endif
+#if AXIS_DRIVER_TYPE_J(TMC26X)
+  _TMC26X_DEFINE(J);
+#endif
+#if AXIS_DRIVER_TYPE_K(TMC26X)
+  _TMC26X_DEFINE(K);
+#endif
 #if AXIS_DRIVER_TYPE_E0(TMC26X)
   _TMC26X_DEFINE(E0);
 #endif
@@ -115,6 +124,15 @@ void tmc26x_init_to_defaults() {
   #if AXIS_DRIVER_TYPE_Z4(TMC26X)
     _TMC26X_INIT(Z4);
   #endif
+  #if AXIS_DRIVER_TYPE_I(TMC26X)
+     _TMC26X_INIT(I);
+  #endif
+  #if AXIS_DRIVER_TYPE_J(TMC26X)
+    _TMC26X_INIT(J);
+  #endif
+  #if AXIS_DRIVER_TYPE_K(TMC26X)
+    _TMC26X_INIT(K);
+  #endif
   #if AXIS_DRIVER_TYPE_E0(TMC26X)
     _TMC26X_INIT(E0);
   #endif

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
index 9d9178b240..926f1a4e08 100644
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit 4a55bdb1656de2fc63d3d93f53ff50a1e1ce393d
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sun Jul 19 23:42:30 2020 -0300

    Only download & compile required libraries (#18699)

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
index 08c0b3e782..9d9178b240 100644
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -30,7 +30,7 @@
 //
 // TMC26X Driver objects and inits
 //
-#if HAS_DRIVER(TMC26X)
+#if HAS_TMC26X
 
 #include "TMC26X.h"
 
@@ -141,4 +141,4 @@ void tmc26x_init_to_defaults() {
   #endif
 }
 
-#endif // TMC26X
+#endif // HAS_TMC26X

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
index 58d9463a2d..08c0b3e782 100644
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 1d1dc8e33934c0f837d0c590e8fe8d2a61a1c64b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jan 26 03:20:11 2020 -0600

    More 8 extruder defines

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
index b8aeb9cb56..58d9463a2d 100644
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -78,6 +78,12 @@
 #if AXIS_DRIVER_TYPE_E5(TMC26X)
   _TMC26X_DEFINE(E5);
 #endif
+#if AXIS_DRIVER_TYPE_E6(TMC26X)
+  _TMC26X_DEFINE(E6);
+#endif
+#if AXIS_DRIVER_TYPE_E7(TMC26X)
+  _TMC26X_DEFINE(E7);
+#endif
 
 #define _TMC26X_INIT(A) do{ \
   stepper##A.setMicrosteps(A##_MICROSTEPS); \
@@ -127,6 +133,12 @@ void tmc26x_init_to_defaults() {
   #if AXIS_DRIVER_TYPE_E5(TMC26X)
     _TMC26X_INIT(E5);
   #endif
+  #if AXIS_DRIVER_TYPE_E6(TMC26X)
+    _TMC26X_INIT(E6);
+  #endif
+  #if AXIS_DRIVER_TYPE_E7(TMC26X)
+    _TMC26X_INIT(E7);
+  #endif
 }
 
 #endif // TMC26X

commit 0fcf2b1110d9f0d362e5aab9cc73d963710e9865
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Jan 20 00:35:07 2020 -0500

    Quad Z stepper support (#16277)

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
index 8acb735c9d..b8aeb9cb56 100644
--- a/Marlin/src/module/stepper/TMC26X.cpp
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -57,6 +57,9 @@
 #if AXIS_DRIVER_TYPE_Z3(TMC26X)
   _TMC26X_DEFINE(Z3);
 #endif
+#if AXIS_DRIVER_TYPE_Z4(TMC26X)
+  _TMC26X_DEFINE(Z4);
+#endif
 #if AXIS_DRIVER_TYPE_E0(TMC26X)
   _TMC26X_DEFINE(E0);
 #endif
@@ -103,6 +106,9 @@ void tmc26x_init_to_defaults() {
   #if AXIS_DRIVER_TYPE_Z3(TMC26X)
     _TMC26X_INIT(Z3);
   #endif
+  #if AXIS_DRIVER_TYPE_Z4(TMC26X)
+    _TMC26X_INIT(Z4);
+  #endif
   #if AXIS_DRIVER_TYPE_E0(TMC26X)
     _TMC26X_INIT(E0);
   #endif

commit 586b334c2ab61240607e878390ed1d53af86da69
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Aug 31 19:44:45 2019 -0500

    Split up stepper indirection (#15111)

diff --git a/Marlin/src/module/stepper/TMC26X.cpp b/Marlin/src/module/stepper/TMC26X.cpp
new file mode 100644
index 0000000000..8acb735c9d
--- /dev/null
+++ b/Marlin/src/module/stepper/TMC26X.cpp
@@ -0,0 +1,126 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * stepper/TMC26X.cpp
+ * Stepper driver indirection for TMC26X drivers
+ */
+
+#include "../../inc/MarlinConfig.h"
+
+//
+// TMC26X Driver objects and inits
+//
+#if HAS_DRIVER(TMC26X)
+
+#include "TMC26X.h"
+
+#define _TMC26X_DEFINE(ST) TMC26XStepper stepper##ST(200, ST##_CS_PIN, ST##_STEP_PIN, ST##_DIR_PIN, ST##_MAX_CURRENT, ST##_SENSE_RESISTOR)
+
+#if AXIS_DRIVER_TYPE_X(TMC26X)
+  _TMC26X_DEFINE(X);
+#endif
+#if AXIS_DRIVER_TYPE_X2(TMC26X)
+  _TMC26X_DEFINE(X2);
+#endif
+#if AXIS_DRIVER_TYPE_Y(TMC26X)
+  _TMC26X_DEFINE(Y);
+#endif
+#if AXIS_DRIVER_TYPE_Y2(TMC26X)
+  _TMC26X_DEFINE(Y2);
+#endif
+#if AXIS_DRIVER_TYPE_Z(TMC26X)
+  _TMC26X_DEFINE(Z);
+#endif
+#if AXIS_DRIVER_TYPE_Z2(TMC26X)
+  _TMC26X_DEFINE(Z2);
+#endif
+#if AXIS_DRIVER_TYPE_Z3(TMC26X)
+  _TMC26X_DEFINE(Z3);
+#endif
+#if AXIS_DRIVER_TYPE_E0(TMC26X)
+  _TMC26X_DEFINE(E0);
+#endif
+#if AXIS_DRIVER_TYPE_E1(TMC26X)
+  _TMC26X_DEFINE(E1);
+#endif
+#if AXIS_DRIVER_TYPE_E2(TMC26X)
+  _TMC26X_DEFINE(E2);
+#endif
+#if AXIS_DRIVER_TYPE_E3(TMC26X)
+  _TMC26X_DEFINE(E3);
+#endif
+#if AXIS_DRIVER_TYPE_E4(TMC26X)
+  _TMC26X_DEFINE(E4);
+#endif
+#if AXIS_DRIVER_TYPE_E5(TMC26X)
+  _TMC26X_DEFINE(E5);
+#endif
+
+#define _TMC26X_INIT(A) do{ \
+  stepper##A.setMicrosteps(A##_MICROSTEPS); \
+  stepper##A.start(); \
+}while(0)
+
+void tmc26x_init_to_defaults() {
+  #if AXIS_DRIVER_TYPE_X(TMC26X)
+    _TMC26X_INIT(X);
+  #endif
+  #if AXIS_DRIVER_TYPE_X2(TMC26X)
+    _TMC26X_INIT(X2);
+  #endif
+  #if AXIS_DRIVER_TYPE_Y(TMC26X)
+    _TMC26X_INIT(Y);
+  #endif
+  #if AXIS_DRIVER_TYPE_Y2(TMC26X)
+    _TMC26X_INIT(Y2);
+  #endif
+  #if AXIS_DRIVER_TYPE_Z(TMC26X)
+    _TMC26X_INIT(Z);
+  #endif
+  #if AXIS_DRIVER_TYPE_Z2(TMC26X)
+    _TMC26X_INIT(Z2);
+  #endif
+  #if AXIS_DRIVER_TYPE_Z3(TMC26X)
+    _TMC26X_INIT(Z3);
+  #endif
+  #if AXIS_DRIVER_TYPE_E0(TMC26X)
+    _TMC26X_INIT(E0);
+  #endif
+  #if AXIS_DRIVER_TYPE_E1(TMC26X)
+    _TMC26X_INIT(E1);
+  #endif
+  #if AXIS_DRIVER_TYPE_E2(TMC26X)
+    _TMC26X_INIT(E2);
+  #endif
+  #if AXIS_DRIVER_TYPE_E3(TMC26X)
+    _TMC26X_INIT(E3);
+  #endif
+  #if AXIS_DRIVER_TYPE_E4(TMC26X)
+    _TMC26X_INIT(E4);
+  #endif
+  #if AXIS_DRIVER_TYPE_E5(TMC26X)
+    _TMC26X_INIT(E5);
+  #endif
+}
+
+#endif // TMC26X
