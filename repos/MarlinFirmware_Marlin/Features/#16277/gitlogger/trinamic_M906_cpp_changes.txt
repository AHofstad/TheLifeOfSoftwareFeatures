commit 669814d0d408a622f020a55971ba04030e4fa4bf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 7 23:40:54 2024 -0600

    ‚ú® MARLIN_SMALL_BUILD option (#26775)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index b949200ad7..c0dc456a8a 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -231,6 +231,8 @@ void GcodeSuite::M906() {
 }
 
 void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
+  TERN_(MARLIN_SMALL_BUILD, return);
+
   report_heading(forReplay, F(STR_STEPPER_DRIVER_CURRENT));
 
   auto say_M906 = [](const bool forReplay) {

commit 6e5f41fe6b996e074b042c6ac521475b8e8aab91
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon May 15 19:48:30 2023 -0500

    üßë‚Äçüíª Serial ternary args, etc.

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index b2cab13553..b949200ad7 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -328,7 +328,6 @@ void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
     say_M906(forReplay);
     SERIAL_ECHOLNPGM(" T7 E", stepperE7.getMilliamps());
   #endif
-  SERIAL_EOL();
 }
 
 #endif // HAS_TRINAMIC_CONFIG

commit 8b8defeacc5f7ba2bac63baf65c1d3b1ef60177c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 3 20:52:27 2022 -0500

    üèóÔ∏è Extend AXIS_CHAR to include E
    
    Co-Authored-By: DerAndere <26200979+DerAndere1@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 4822b8e268..b2cab13553 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -66,7 +66,7 @@ void GcodeSuite::M906() {
     constexpr int8_t index = -1;
   #endif
 
-  LOOP_LOGICAL_AXES(i) if (uint16_t value = parser.intval(axis_codes[i])) {
+  LOOP_LOGICAL_AXES(i) if (uint16_t value = parser.intval(AXIS_CHAR(i))) {
     report = false;
     switch (i) {
       #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2)

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index c85d0be8a1..4822b8e268 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -44,6 +44,9 @@ static void tmc_print_current(TMC &st) {
  *   A[current]  - Set mA current for A driver(s) (Requires AXIS*_NAME 'A')
  *   B[current]  - Set mA current for B driver(s) (Requires AXIS*_NAME 'B')
  *   C[current]  - Set mA current for C driver(s) (Requires AXIS*_NAME 'C')
+ *   U[current]  - Set mA current for U driver(s) (Requires AXIS*_NAME 'U')
+ *   V[current]  - Set mA current for V driver(s) (Requires AXIS*_NAME 'V')
+ *   W[current]  - Set mA current for W driver(s) (Requires AXIS*_NAME 'W')
  *   E[current]  - Set mA current for E driver(s)
  *
  *   I[index]    - Axis sub-index (Omit or 0 for X, Y, Z; 1 for X2, Y2, Z2; 2 for Z3; 3 for Z4.)
@@ -114,6 +117,15 @@ void GcodeSuite::M906() {
       #if AXIS_IS_TMC(K)
         case K_AXIS: TMC_SET_CURRENT(K); break;
       #endif
+      #if AXIS_IS_TMC(U)
+        case U_AXIS: TMC_SET_CURRENT(U); break;
+      #endif
+      #if AXIS_IS_TMC(V)
+        case V_AXIS: TMC_SET_CURRENT(V); break;
+      #endif
+      #if AXIS_IS_TMC(W)
+        case W_AXIS: TMC_SET_CURRENT(W); break;
+      #endif
 
       #if AXIS_IS_TMC(E0) || AXIS_IS_TMC(E1) || AXIS_IS_TMC(E2) || AXIS_IS_TMC(E3) || AXIS_IS_TMC(E4) || AXIS_IS_TMC(E5) || AXIS_IS_TMC(E6) || AXIS_IS_TMC(E7)
         case E_AXIS: {
@@ -181,6 +193,16 @@ void GcodeSuite::M906() {
     #if AXIS_IS_TMC(K)
       TMC_SAY_CURRENT(K);
     #endif
+    #if AXIS_IS_TMC(U)
+      TMC_SAY_CURRENT(U);
+    #endif
+    #if AXIS_IS_TMC(V)
+      TMC_SAY_CURRENT(V);
+    #endif
+    #if AXIS_IS_TMC(W)
+      TMC_SAY_CURRENT(W);
+    #endif
+
     #if AXIS_IS_TMC(E0)
       TMC_SAY_CURRENT(E0);
     #endif
@@ -217,7 +239,8 @@ void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
   };
 
   #if  AXIS_IS_TMC(X) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Z) \
-    || AXIS_IS_TMC(I) || AXIS_IS_TMC(J) || AXIS_IS_TMC(K)
+    || AXIS_IS_TMC(I) || AXIS_IS_TMC(J) || AXIS_IS_TMC(K) \
+    || AXIS_IS_TMC(U) || AXIS_IS_TMC(V) || AXIS_IS_TMC(W)
     say_M906(forReplay);
     #if AXIS_IS_TMC(X)
       SERIAL_ECHOPGM_P(SP_X_STR, stepperX.getMilliamps());
@@ -237,6 +260,15 @@ void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
     #if AXIS_IS_TMC(K)
       SERIAL_ECHOPGM_P(SP_K_STR, stepperK.getMilliamps());
     #endif
+    #if AXIS_IS_TMC(U)
+      SERIAL_ECHOPGM_P(SP_U_STR, stepperU.getMilliamps());
+    #endif
+    #if AXIS_IS_TMC(V)
+      SERIAL_ECHOPGM_P(SP_V_STR, stepperV.getMilliamps());
+    #endif
+    #if AXIS_IS_TMC(W)
+      SERIAL_ECHOPGM_P(SP_W_STR, stepperW.getMilliamps());
+    #endif
     SERIAL_EOL();
   #endif
 

commit bf7176fba9bbc0e41e5dce80aa5094a0ce6522eb
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Fri Mar 18 02:55:33 2022 +0100

    ü©π Fix redundant var declaration (#23913)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 164ff00179..c85d0be8a1 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -59,7 +59,7 @@ void GcodeSuite::M906() {
 
   #if AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3) || AXIS_IS_TMC(Z4)
     const int8_t index = parser.byteval('I', -1);
-  #else
+  #elif AXIS_IS_TMC(X) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Z)
     constexpr int8_t index = -1;
   #endif
 

commit 40481947fc1f11a01235c5c55333a4437fc45c5f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 14 03:14:13 2022 -0600

    üßë‚Äçüíª Misc. updates for extra axes (#23521)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 92d2210645..164ff00179 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -41,6 +41,9 @@ static void tmc_print_current(TMC &st) {
  *   X[current]  - Set mA current for X driver(s)
  *   Y[current]  - Set mA current for Y driver(s)
  *   Z[current]  - Set mA current for Z driver(s)
+ *   A[current]  - Set mA current for A driver(s) (Requires AXIS*_NAME 'A')
+ *   B[current]  - Set mA current for B driver(s) (Requires AXIS*_NAME 'B')
+ *   C[current]  - Set mA current for C driver(s) (Requires AXIS*_NAME 'C')
  *   E[current]  - Set mA current for E driver(s)
  *
  *   I[index]    - Axis sub-index (Omit or 0 for X, Y, Z; 1 for X2, Y2, Z2; 2 for Z3; 3 for Z4.)

commit 6fbfeb68010e63c76b545e2c27aeb48ee73be68b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 1 22:54:27 2022 -0600

    ‚ú® M919 : Chopper Timing (#23400)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 788389ed61..92d2210645 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -63,16 +63,18 @@ void GcodeSuite::M906() {
   LOOP_LOGICAL_AXES(i) if (uint16_t value = parser.intval(axis_codes[i])) {
     report = false;
     switch (i) {
-      case X_AXIS:
-        #if AXIS_IS_TMC(X)
-          if (index < 0 || index == 0) TMC_SET_CURRENT(X);
-        #endif
-        #if AXIS_IS_TMC(X2)
-          if (index < 0 || index == 1) TMC_SET_CURRENT(X2);
-        #endif
-        break;
+      #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2)
+        case X_AXIS:
+          #if AXIS_IS_TMC(X)
+            if (index < 0 || index == 0) TMC_SET_CURRENT(X);
+          #endif
+          #if AXIS_IS_TMC(X2)
+            if (index < 0 || index == 1) TMC_SET_CURRENT(X2);
+          #endif
+          break;
+      #endif
 
-      #if HAS_Y_AXIS
+      #if AXIS_IS_TMC(Y) || AXIS_IS_TMC(Y2)
         case Y_AXIS:
           #if AXIS_IS_TMC(Y)
             if (index < 0 || index == 0) TMC_SET_CURRENT(Y);
@@ -83,7 +85,7 @@ void GcodeSuite::M906() {
           break;
       #endif
 
-      #if HAS_Z_AXIS
+      #if AXIS_IS_TMC(Z) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3) || AXIS_IS_TMC(Z4)
         case Z_AXIS:
           #if AXIS_IS_TMC(Z)
             if (index < 0 || index == 0) TMC_SET_CURRENT(Z);
@@ -110,7 +112,7 @@ void GcodeSuite::M906() {
         case K_AXIS: TMC_SET_CURRENT(K); break;
       #endif
 
-      #if E_STEPPERS
+      #if AXIS_IS_TMC(E0) || AXIS_IS_TMC(E1) || AXIS_IS_TMC(E2) || AXIS_IS_TMC(E3) || AXIS_IS_TMC(E4) || AXIS_IS_TMC(E5) || AXIS_IS_TMC(E6) || AXIS_IS_TMC(E7)
         case E_AXIS: {
           const int8_t eindex = get_target_e_stepper_from_command(-2);
           #if AXIS_IS_TMC(E0)

commit ff46d7cae274375eba82a278ca70fe0da016f778
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 31 01:43:25 2021 -0600

    üêõ Fix "no T param" handling

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 300b8beb09..788389ed61 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -112,7 +112,7 @@ void GcodeSuite::M906() {
 
       #if E_STEPPERS
         case E_AXIS: {
-          const int8_t eindex = get_target_e_stepper_from_command();
+          const int8_t eindex = get_target_e_stepper_from_command(-2);
           #if AXIS_IS_TMC(E0)
             if (eindex < 0 || eindex == 0) TMC_SET_CURRENT(E0);
           #endif

commit 02b4e48c6df1604d3de09cbef072f685fe956e92
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 05:43:10 2021 -0600

    üö∏ Refine stepper-driver-related G-codes (#23372)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index f28718c831..300b8beb09 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -28,6 +28,12 @@
 #include "../../../feature/tmc_util.h"
 #include "../../../module/stepper/indirection.h"
 
+template<typename TMC>
+static void tmc_print_current(TMC &st) {
+  st.printLabel();
+  SERIAL_ECHOLNPGM(" driver current: ", st.getMilliamps());
+}
+
 /**
  * M906: Set motor current in milliamps.
  *
@@ -48,8 +54,10 @@ void GcodeSuite::M906() {
 
   bool report = true;
 
-  #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3) || AXIS_IS_TMC(Z4) || AXIS_IS_TMC(I) || AXIS_IS_TMC(J) || AXIS_IS_TMC(K)
-    const uint8_t index = parser.byteval('I');
+  #if AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3) || AXIS_IS_TMC(Z4)
+    const int8_t index = parser.byteval('I', -1);
+  #else
+    constexpr int8_t index = -1;
   #endif
 
   LOOP_LOGICAL_AXES(i) if (uint16_t value = parser.intval(axis_codes[i])) {
@@ -57,20 +65,20 @@ void GcodeSuite::M906() {
     switch (i) {
       case X_AXIS:
         #if AXIS_IS_TMC(X)
-          if (index == 0) TMC_SET_CURRENT(X);
+          if (index < 0 || index == 0) TMC_SET_CURRENT(X);
         #endif
         #if AXIS_IS_TMC(X2)
-          if (index == 1) TMC_SET_CURRENT(X2);
+          if (index < 0 || index == 1) TMC_SET_CURRENT(X2);
         #endif
         break;
 
       #if HAS_Y_AXIS
         case Y_AXIS:
           #if AXIS_IS_TMC(Y)
-            if (index == 0) TMC_SET_CURRENT(Y);
+            if (index < 0 || index == 0) TMC_SET_CURRENT(Y);
           #endif
           #if AXIS_IS_TMC(Y2)
-            if (index == 1) TMC_SET_CURRENT(Y2);
+            if (index < 0 || index == 1) TMC_SET_CURRENT(Y2);
           #endif
           break;
       #endif
@@ -78,16 +86,16 @@ void GcodeSuite::M906() {
       #if HAS_Z_AXIS
         case Z_AXIS:
           #if AXIS_IS_TMC(Z)
-            if (index == 0) TMC_SET_CURRENT(Z);
+            if (index < 0 || index == 0) TMC_SET_CURRENT(Z);
           #endif
           #if AXIS_IS_TMC(Z2)
-            if (index == 1) TMC_SET_CURRENT(Z2);
+            if (index < 0 || index == 1) TMC_SET_CURRENT(Z2);
           #endif
           #if AXIS_IS_TMC(Z3)
-            if (index == 2) TMC_SET_CURRENT(Z3);
+            if (index < 0 || index == 2) TMC_SET_CURRENT(Z3);
           #endif
           #if AXIS_IS_TMC(Z4)
-            if (index == 3) TMC_SET_CURRENT(Z4);
+            if (index < 0 || index == 3) TMC_SET_CURRENT(Z4);
           #endif
           break;
       #endif
@@ -104,34 +112,31 @@ void GcodeSuite::M906() {
 
       #if E_STEPPERS
         case E_AXIS: {
-          const int8_t target_e_stepper = get_target_e_stepper_from_command(0);
-          if (target_e_stepper < 0) return;
-          switch (target_e_stepper) {
-            #if AXIS_IS_TMC(E0)
-              case 0: TMC_SET_CURRENT(E0); break;
-            #endif
-            #if AXIS_IS_TMC(E1)
-              case 1: TMC_SET_CURRENT(E1); break;
-            #endif
-            #if AXIS_IS_TMC(E2)
-              case 2: TMC_SET_CURRENT(E2); break;
-            #endif
-            #if AXIS_IS_TMC(E3)
-              case 3: TMC_SET_CURRENT(E3); break;
-            #endif
-            #if AXIS_IS_TMC(E4)
-              case 4: TMC_SET_CURRENT(E4); break;
-            #endif
-            #if AXIS_IS_TMC(E5)
-              case 5: TMC_SET_CURRENT(E5); break;
-            #endif
-            #if AXIS_IS_TMC(E6)
-              case 6: TMC_SET_CURRENT(E6); break;
-            #endif
-            #if AXIS_IS_TMC(E7)
-              case 7: TMC_SET_CURRENT(E7); break;
-            #endif
-          }
+          const int8_t eindex = get_target_e_stepper_from_command();
+          #if AXIS_IS_TMC(E0)
+            if (eindex < 0 || eindex == 0) TMC_SET_CURRENT(E0);
+          #endif
+          #if AXIS_IS_TMC(E1)
+            if (eindex < 0 || eindex == 1) TMC_SET_CURRENT(E1);
+          #endif
+          #if AXIS_IS_TMC(E2)
+            if (eindex < 0 || eindex == 2) TMC_SET_CURRENT(E2);
+          #endif
+          #if AXIS_IS_TMC(E3)
+            if (eindex < 0 || eindex == 3) TMC_SET_CURRENT(E3);
+          #endif
+          #if AXIS_IS_TMC(E4)
+            if (eindex < 0 || eindex == 4) TMC_SET_CURRENT(E4);
+          #endif
+          #if AXIS_IS_TMC(E5)
+            if (eindex < 0 || eindex == 5) TMC_SET_CURRENT(E5);
+          #endif
+          #if AXIS_IS_TMC(E6)
+            if (eindex < 0 || eindex == 6) TMC_SET_CURRENT(E6);
+          #endif
+          #if AXIS_IS_TMC(E7)
+            if (eindex < 0 || eindex == 7) TMC_SET_CURRENT(E7);
+          #endif
         } break;
       #endif
     }

commit 73875cf9ccd4b23bbe2a46bb57192109b7d1a7c6
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Mon Oct 25 22:29:40 2021 +0100

    üö∏ Default T0 for M569, M906, M913 (#23020)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 74596831d3..f28718c831 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -104,7 +104,7 @@ void GcodeSuite::M906() {
 
       #if E_STEPPERS
         case E_AXIS: {
-          const int8_t target_e_stepper = get_target_e_stepper_from_command();
+          const int8_t target_e_stepper = get_target_e_stepper_from_command(0);
           if (target_e_stepper < 0) return;
           switch (target_e_stepper) {
             #if AXIS_IS_TMC(E0)

commit d7fede3a6324cd6b1ec91a9c8e248fce8f0d7cf2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 13:40:01 2021 -0500

    üé® Apply F() to G-code report header

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 48db266c72..74596831d3 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -199,7 +199,7 @@ void GcodeSuite::M906() {
 }
 
 void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
-  report_heading(forReplay, PSTR(STR_STEPPER_DRIVER_CURRENT));
+  report_heading(forReplay, F(STR_STEPPER_DRIVER_CURRENT));
 
   auto say_M906 = [](const bool forReplay) {
     report_echo_start(forReplay);

commit dc5bef62ba185461ba969db6af996ebc93a33ba7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 23 10:01:37 2021 -0500

    üé® Various multi-axis patches (#22823)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 8877603c3a..48db266c72 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -206,7 +206,8 @@ void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
     SERIAL_ECHOPGM("  M906");
   };
 
-  #if AXIS_IS_TMC(X) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Z)
+  #if  AXIS_IS_TMC(X) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Z) \
+    || AXIS_IS_TMC(I) || AXIS_IS_TMC(J) || AXIS_IS_TMC(K)
     say_M906(forReplay);
     #if AXIS_IS_TMC(X)
       SERIAL_ECHOPGM_P(SP_X_STR, stepperX.getMilliamps());
@@ -217,6 +218,15 @@ void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
     #if AXIS_IS_TMC(Z)
       SERIAL_ECHOPGM_P(SP_Z_STR, stepperZ.getMilliamps());
     #endif
+    #if AXIS_IS_TMC(I)
+      SERIAL_ECHOPGM_P(SP_I_STR, stepperI.getMilliamps());
+    #endif
+    #if AXIS_IS_TMC(J)
+      SERIAL_ECHOPGM_P(SP_J_STR, stepperJ.getMilliamps());
+    #endif
+    #if AXIS_IS_TMC(K)
+      SERIAL_ECHOPGM_P(SP_K_STR, stepperK.getMilliamps());
+    #endif
     SERIAL_EOL();
   #endif
 
@@ -239,25 +249,11 @@ void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
     say_M906(forReplay);
     SERIAL_ECHOLNPGM(" I2 Z", stepperZ3.getMilliamps());
   #endif
-
   #if AXIS_IS_TMC(Z4)
     say_M906(forReplay);
     SERIAL_ECHOLNPGM(" I3 Z", stepperZ4.getMilliamps());
   #endif
 
-  #if AXIS_IS_TMC(I)
-    say_M906(forReplay);
-    SERIAL_ECHOLNPGM_P(SP_I_STR, stepperI.getMilliamps());
-  #endif
-  #if AXIS_IS_TMC(J)
-    say_M906(forReplay);
-    SERIAL_ECHOLNPGM_P(SP_J_STR, stepperJ.getMilliamps());
-  #endif
-  #if AXIS_IS_TMC(K)
-    say_M906(forReplay);
-    SERIAL_ECHOLNPGM_P(SP_K_STR, stepperK.getMilliamps());
-  #endif
-
   #if AXIS_IS_TMC(E0)
     say_M906(forReplay);
     SERIAL_ECHOLNPGM(" T0 E", stepperE0.getMilliamps());

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 243cf46560..8877603c3a 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -209,13 +209,13 @@ void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
   #if AXIS_IS_TMC(X) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Z)
     say_M906(forReplay);
     #if AXIS_IS_TMC(X)
-      SERIAL_ECHOPAIR_P(SP_X_STR, stepperX.getMilliamps());
+      SERIAL_ECHOPGM_P(SP_X_STR, stepperX.getMilliamps());
     #endif
     #if AXIS_IS_TMC(Y)
-      SERIAL_ECHOPAIR_P(SP_Y_STR, stepperY.getMilliamps());
+      SERIAL_ECHOPGM_P(SP_Y_STR, stepperY.getMilliamps());
     #endif
     #if AXIS_IS_TMC(Z)
-      SERIAL_ECHOPAIR_P(SP_Z_STR, stepperZ.getMilliamps());
+      SERIAL_ECHOPGM_P(SP_Z_STR, stepperZ.getMilliamps());
     #endif
     SERIAL_EOL();
   #endif
@@ -224,71 +224,71 @@ void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
     say_M906(forReplay);
     SERIAL_ECHOPGM(" I1");
     #if AXIS_IS_TMC(X2)
-      SERIAL_ECHOPAIR_P(SP_X_STR, stepperX2.getMilliamps());
+      SERIAL_ECHOPGM_P(SP_X_STR, stepperX2.getMilliamps());
     #endif
     #if AXIS_IS_TMC(Y2)
-      SERIAL_ECHOPAIR_P(SP_Y_STR, stepperY2.getMilliamps());
+      SERIAL_ECHOPGM_P(SP_Y_STR, stepperY2.getMilliamps());
     #endif
     #if AXIS_IS_TMC(Z2)
-      SERIAL_ECHOPAIR_P(SP_Z_STR, stepperZ2.getMilliamps());
+      SERIAL_ECHOPGM_P(SP_Z_STR, stepperZ2.getMilliamps());
     #endif
     SERIAL_EOL();
   #endif
 
   #if AXIS_IS_TMC(Z3)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" I2 Z", stepperZ3.getMilliamps());
+    SERIAL_ECHOLNPGM(" I2 Z", stepperZ3.getMilliamps());
   #endif
 
   #if AXIS_IS_TMC(Z4)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" I3 Z", stepperZ4.getMilliamps());
+    SERIAL_ECHOLNPGM(" I3 Z", stepperZ4.getMilliamps());
   #endif
 
   #if AXIS_IS_TMC(I)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR_P(SP_I_STR, stepperI.getMilliamps());
+    SERIAL_ECHOLNPGM_P(SP_I_STR, stepperI.getMilliamps());
   #endif
   #if AXIS_IS_TMC(J)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR_P(SP_J_STR, stepperJ.getMilliamps());
+    SERIAL_ECHOLNPGM_P(SP_J_STR, stepperJ.getMilliamps());
   #endif
   #if AXIS_IS_TMC(K)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR_P(SP_K_STR, stepperK.getMilliamps());
+    SERIAL_ECHOLNPGM_P(SP_K_STR, stepperK.getMilliamps());
   #endif
 
   #if AXIS_IS_TMC(E0)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" T0 E", stepperE0.getMilliamps());
+    SERIAL_ECHOLNPGM(" T0 E", stepperE0.getMilliamps());
   #endif
   #if AXIS_IS_TMC(E1)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" T1 E", stepperE1.getMilliamps());
+    SERIAL_ECHOLNPGM(" T1 E", stepperE1.getMilliamps());
   #endif
   #if AXIS_IS_TMC(E2)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" T2 E", stepperE2.getMilliamps());
+    SERIAL_ECHOLNPGM(" T2 E", stepperE2.getMilliamps());
   #endif
   #if AXIS_IS_TMC(E3)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" T3 E", stepperE3.getMilliamps());
+    SERIAL_ECHOLNPGM(" T3 E", stepperE3.getMilliamps());
   #endif
   #if AXIS_IS_TMC(E4)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" T4 E", stepperE4.getMilliamps());
+    SERIAL_ECHOLNPGM(" T4 E", stepperE4.getMilliamps());
   #endif
   #if AXIS_IS_TMC(E5)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" T5 E", stepperE5.getMilliamps());
+    SERIAL_ECHOLNPGM(" T5 E", stepperE5.getMilliamps());
   #endif
   #if AXIS_IS_TMC(E6)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" T6 E", stepperE6.getMilliamps());
+    SERIAL_ECHOLNPGM(" T6 E", stepperE6.getMilliamps());
   #endif
   #if AXIS_IS_TMC(E7)
     say_M906(forReplay);
-    SERIAL_ECHOLNPAIR(" T7 E", stepperE7.getMilliamps());
+    SERIAL_ECHOLNPGM(" T7 E", stepperE7.getMilliamps());
   #endif
   SERIAL_EOL();
 }

commit 79c72ed821564507b0ef46cbb26f9577585e2ccc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 7 18:06:10 2021 -0500

    üé® Standardize G-code reporting

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 9e56e51358..243cf46560 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -198,4 +198,99 @@ void GcodeSuite::M906() {
   }
 }
 
+void GcodeSuite::M906_report(const bool forReplay/*=true*/) {
+  report_heading(forReplay, PSTR(STR_STEPPER_DRIVER_CURRENT));
+
+  auto say_M906 = [](const bool forReplay) {
+    report_echo_start(forReplay);
+    SERIAL_ECHOPGM("  M906");
+  };
+
+  #if AXIS_IS_TMC(X) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Z)
+    say_M906(forReplay);
+    #if AXIS_IS_TMC(X)
+      SERIAL_ECHOPAIR_P(SP_X_STR, stepperX.getMilliamps());
+    #endif
+    #if AXIS_IS_TMC(Y)
+      SERIAL_ECHOPAIR_P(SP_Y_STR, stepperY.getMilliamps());
+    #endif
+    #if AXIS_IS_TMC(Z)
+      SERIAL_ECHOPAIR_P(SP_Z_STR, stepperZ.getMilliamps());
+    #endif
+    SERIAL_EOL();
+  #endif
+
+  #if AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z2)
+    say_M906(forReplay);
+    SERIAL_ECHOPGM(" I1");
+    #if AXIS_IS_TMC(X2)
+      SERIAL_ECHOPAIR_P(SP_X_STR, stepperX2.getMilliamps());
+    #endif
+    #if AXIS_IS_TMC(Y2)
+      SERIAL_ECHOPAIR_P(SP_Y_STR, stepperY2.getMilliamps());
+    #endif
+    #if AXIS_IS_TMC(Z2)
+      SERIAL_ECHOPAIR_P(SP_Z_STR, stepperZ2.getMilliamps());
+    #endif
+    SERIAL_EOL();
+  #endif
+
+  #if AXIS_IS_TMC(Z3)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" I2 Z", stepperZ3.getMilliamps());
+  #endif
+
+  #if AXIS_IS_TMC(Z4)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" I3 Z", stepperZ4.getMilliamps());
+  #endif
+
+  #if AXIS_IS_TMC(I)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR_P(SP_I_STR, stepperI.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(J)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR_P(SP_J_STR, stepperJ.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(K)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR_P(SP_K_STR, stepperK.getMilliamps());
+  #endif
+
+  #if AXIS_IS_TMC(E0)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" T0 E", stepperE0.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(E1)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" T1 E", stepperE1.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(E2)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" T2 E", stepperE2.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(E3)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" T3 E", stepperE3.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(E4)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" T4 E", stepperE4.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(E5)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" T5 E", stepperE5.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(E6)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" T6 E", stepperE6.getMilliamps());
+  #endif
+  #if AXIS_IS_TMC(E7)
+    say_M906(forReplay);
+    SERIAL_ECHOLNPAIR(" T7 E", stepperE7.getMilliamps());
+  #endif
+  SERIAL_EOL();
+}
+
 #endif // HAS_TRINAMIC_CONFIG

commit de4b3498c71c5666477b15544d1561fabee3d499
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Mon Jun 21 13:36:06 2021 -0700

    üêõ Fix IJK axis references, E stepper indices (#22176)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 70e6a00b36..9e56e51358 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -102,11 +102,11 @@ void GcodeSuite::M906() {
         case K_AXIS: TMC_SET_CURRENT(K); break;
       #endif
 
-      #if HAS_EXTRUDERS
+      #if E_STEPPERS
         case E_AXIS: {
-          const int8_t target_extruder = get_target_extruder_from_command();
-          if (target_extruder < 0) return;
-          switch (target_extruder) {
+          const int8_t target_e_stepper = get_target_e_stepper_from_command();
+          if (target_e_stepper < 0) return;
+          switch (target_e_stepper) {
             #if AXIS_IS_TMC(E0)
               case 0: TMC_SET_CURRENT(E0); break;
             #endif

commit 7726af9c5348c1c7d0fd9a56eca87d00cd75fee6
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Jun 5 09:18:47 2021 +0200

    üèóÔ∏è Support for up to 6 linear axes (#19112)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 848735b900..70e6a00b36 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -48,7 +48,7 @@ void GcodeSuite::M906() {
 
   bool report = true;
 
-  #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3) || AXIS_IS_TMC(Z4)
+  #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3) || AXIS_IS_TMC(Z4) || AXIS_IS_TMC(I) || AXIS_IS_TMC(J) || AXIS_IS_TMC(K)
     const uint8_t index = parser.byteval('I');
   #endif
 
@@ -64,7 +64,7 @@ void GcodeSuite::M906() {
         #endif
         break;
 
-      #if LINEAR_AXES >= XY
+      #if HAS_Y_AXIS
         case Y_AXIS:
           #if AXIS_IS_TMC(Y)
             if (index == 0) TMC_SET_CURRENT(Y);
@@ -92,6 +92,16 @@ void GcodeSuite::M906() {
           break;
       #endif
 
+      #if AXIS_IS_TMC(I)
+        case I_AXIS: TMC_SET_CURRENT(I); break;
+      #endif
+      #if AXIS_IS_TMC(J)
+        case J_AXIS: TMC_SET_CURRENT(J); break;
+      #endif
+      #if AXIS_IS_TMC(K)
+        case K_AXIS: TMC_SET_CURRENT(K); break;
+      #endif
+
       #if HAS_EXTRUDERS
         case E_AXIS: {
           const int8_t target_extruder = get_target_extruder_from_command();
@@ -152,6 +162,15 @@ void GcodeSuite::M906() {
     #if AXIS_IS_TMC(Z4)
       TMC_SAY_CURRENT(Z4);
     #endif
+    #if AXIS_IS_TMC(I)
+      TMC_SAY_CURRENT(I);
+    #endif
+    #if AXIS_IS_TMC(J)
+      TMC_SAY_CURRENT(J);
+    #endif
+    #if AXIS_IS_TMC(K)
+      TMC_SAY_CURRENT(K);
+    #endif
     #if AXIS_IS_TMC(E0)
       TMC_SAY_CURRENT(E0);
     #endif

commit 82ea06e6a4ffdb0816ab92a5dd721ec5d770015d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 1 20:23:37 2021 -0500

    ‚ôªÔ∏è Patches for Zero Extruders (with TMC)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 86e0cd2987..848735b900 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -63,58 +63,67 @@ void GcodeSuite::M906() {
           if (index == 1) TMC_SET_CURRENT(X2);
         #endif
         break;
-      case Y_AXIS:
-        #if AXIS_IS_TMC(Y)
-          if (index == 0) TMC_SET_CURRENT(Y);
-        #endif
-        #if AXIS_IS_TMC(Y2)
-          if (index == 1) TMC_SET_CURRENT(Y2);
-        #endif
-        break;
-      case Z_AXIS:
-        #if AXIS_IS_TMC(Z)
-          if (index == 0) TMC_SET_CURRENT(Z);
-        #endif
-        #if AXIS_IS_TMC(Z2)
-          if (index == 1) TMC_SET_CURRENT(Z2);
-        #endif
-        #if AXIS_IS_TMC(Z3)
-          if (index == 2) TMC_SET_CURRENT(Z3);
-        #endif
-        #if AXIS_IS_TMC(Z4)
-          if (index == 3) TMC_SET_CURRENT(Z4);
-        #endif
-        break;
-      case E_AXIS: {
-        const int8_t target_extruder = get_target_extruder_from_command();
-        if (target_extruder < 0) return;
-        switch (target_extruder) {
-          #if AXIS_IS_TMC(E0)
-            case 0: TMC_SET_CURRENT(E0); break;
-          #endif
-          #if AXIS_IS_TMC(E1)
-            case 1: TMC_SET_CURRENT(E1); break;
-          #endif
-          #if AXIS_IS_TMC(E2)
-            case 2: TMC_SET_CURRENT(E2); break;
+
+      #if LINEAR_AXES >= XY
+        case Y_AXIS:
+          #if AXIS_IS_TMC(Y)
+            if (index == 0) TMC_SET_CURRENT(Y);
           #endif
-          #if AXIS_IS_TMC(E3)
-            case 3: TMC_SET_CURRENT(E3); break;
+          #if AXIS_IS_TMC(Y2)
+            if (index == 1) TMC_SET_CURRENT(Y2);
           #endif
-          #if AXIS_IS_TMC(E4)
-            case 4: TMC_SET_CURRENT(E4); break;
+          break;
+      #endif
+
+      #if HAS_Z_AXIS
+        case Z_AXIS:
+          #if AXIS_IS_TMC(Z)
+            if (index == 0) TMC_SET_CURRENT(Z);
           #endif
-          #if AXIS_IS_TMC(E5)
-            case 5: TMC_SET_CURRENT(E5); break;
+          #if AXIS_IS_TMC(Z2)
+            if (index == 1) TMC_SET_CURRENT(Z2);
           #endif
-          #if AXIS_IS_TMC(E6)
-            case 6: TMC_SET_CURRENT(E6); break;
+          #if AXIS_IS_TMC(Z3)
+            if (index == 2) TMC_SET_CURRENT(Z3);
           #endif
-          #if AXIS_IS_TMC(E7)
-            case 7: TMC_SET_CURRENT(E7); break;
+          #if AXIS_IS_TMC(Z4)
+            if (index == 3) TMC_SET_CURRENT(Z4);
           #endif
-        }
-      } break;
+          break;
+      #endif
+
+      #if HAS_EXTRUDERS
+        case E_AXIS: {
+          const int8_t target_extruder = get_target_extruder_from_command();
+          if (target_extruder < 0) return;
+          switch (target_extruder) {
+            #if AXIS_IS_TMC(E0)
+              case 0: TMC_SET_CURRENT(E0); break;
+            #endif
+            #if AXIS_IS_TMC(E1)
+              case 1: TMC_SET_CURRENT(E1); break;
+            #endif
+            #if AXIS_IS_TMC(E2)
+              case 2: TMC_SET_CURRENT(E2); break;
+            #endif
+            #if AXIS_IS_TMC(E3)
+              case 3: TMC_SET_CURRENT(E3); break;
+            #endif
+            #if AXIS_IS_TMC(E4)
+              case 4: TMC_SET_CURRENT(E4); break;
+            #endif
+            #if AXIS_IS_TMC(E5)
+              case 5: TMC_SET_CURRENT(E5); break;
+            #endif
+            #if AXIS_IS_TMC(E6)
+              case 6: TMC_SET_CURRENT(E6); break;
+            #endif
+            #if AXIS_IS_TMC(E7)
+              case 7: TMC_SET_CURRENT(E7); break;
+            #endif
+          }
+        } break;
+      #endif
     }
   }
 

commit a6e5492b088add3589aeac168136369f21614e60
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 18 22:51:19 2021 -0500

    ‚ôªÔ∏è Refactor axis counts and loops

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index e834ebd67d..86e0cd2987 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -52,7 +52,7 @@ void GcodeSuite::M906() {
     const uint8_t index = parser.byteval('I');
   #endif
 
-  LOOP_XYZE(i) if (uint16_t value = parser.intval(axis_codes[i])) {
+  LOOP_LOGICAL_AXES(i) if (uint16_t value = parser.intval(axis_codes[i])) {
     report = false;
     switch (i) {
       case X_AXIS:

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 95ad310ed0..e834ebd67d 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit b1a50d54e2a6f8e415a72e0e2d275304029d8ada
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 2 12:03:43 2020 -0600

    HAS_TRINAMIC => HAS_TRINAMIC_CONFIG

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index bb2659913a..95ad310ed0 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -22,7 +22,7 @@
 
 #include "../../../inc/MarlinConfig.h"
 
-#if HAS_TRINAMIC
+#if HAS_TRINAMIC_CONFIG
 
 #include "../../gcode.h"
 #include "../../../feature/tmc_util.h"
@@ -170,4 +170,4 @@ void GcodeSuite::M906() {
   }
 }
 
-#endif // HAS_TRINAMIC
+#endif // HAS_TRINAMIC_CONFIG

commit f312ddfa4fd5772d825908f8e376dedf29442893
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 4 12:37:20 2020 -0600

    More updates for 8 extruders, REPEAT

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index be02fdb7cd..bb2659913a 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -107,6 +107,12 @@ void GcodeSuite::M906() {
           #if AXIS_IS_TMC(E5)
             case 5: TMC_SET_CURRENT(E5); break;
           #endif
+          #if AXIS_IS_TMC(E6)
+            case 6: TMC_SET_CURRENT(E6); break;
+          #endif
+          #if AXIS_IS_TMC(E7)
+            case 7: TMC_SET_CURRENT(E7); break;
+          #endif
         }
       } break;
     }
@@ -155,6 +161,12 @@ void GcodeSuite::M906() {
     #if AXIS_IS_TMC(E5)
       TMC_SAY_CURRENT(E5);
     #endif
+    #if AXIS_IS_TMC(E6)
+      TMC_SAY_CURRENT(E6);
+    #endif
+    #if AXIS_IS_TMC(E7)
+      TMC_SAY_CURRENT(E7);
+    #endif
   }
 }
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 365988594c..be02fdb7cd 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 0fcf2b1110d9f0d362e5aab9cc73d963710e9865
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Jan 20 00:35:07 2020 -0500

    Quad Z stepper support (#16277)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 072f7ba1fd..365988594c 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -37,7 +37,7 @@
  *   Z[current]  - Set mA current for Z driver(s)
  *   E[current]  - Set mA current for E driver(s)
  *
- *   I[index]    - Axis sub-index (Omit or 0 for X, Y, Z; 1 for X2, Y2, Z2; 2 for Z3.)
+ *   I[index]    - Axis sub-index (Omit or 0 for X, Y, Z; 1 for X2, Y2, Z2; 2 for Z3; 3 for Z4.)
  *   T[index]    - Extruder index (Zero-based. Omit for E0 only.)
  *
  * With no parameters report driver currents.
@@ -48,7 +48,7 @@ void GcodeSuite::M906() {
 
   bool report = true;
 
-  #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3)
+  #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3) || AXIS_IS_TMC(Z4)
     const uint8_t index = parser.byteval('I');
   #endif
 
@@ -81,6 +81,9 @@ void GcodeSuite::M906() {
         #if AXIS_IS_TMC(Z3)
           if (index == 2) TMC_SET_CURRENT(Z3);
         #endif
+        #if AXIS_IS_TMC(Z4)
+          if (index == 3) TMC_SET_CURRENT(Z4);
+        #endif
         break;
       case E_AXIS: {
         const int8_t target_extruder = get_target_extruder_from_command();
@@ -131,6 +134,9 @@ void GcodeSuite::M906() {
     #if AXIS_IS_TMC(Z3)
       TMC_SAY_CURRENT(Z3);
     #endif
+    #if AXIS_IS_TMC(Z4)
+      TMC_SAY_CURRENT(Z4);
+    #endif
     #if AXIS_IS_TMC(E0)
       TMC_SAY_CURRENT(E0);
     #endif

commit 586b334c2ab61240607e878390ed1d53af86da69
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Aug 31 19:44:45 2019 -0500

    Split up stepper indirection (#15111)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index ba57fbb4ce..072f7ba1fd 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -26,7 +26,7 @@
 
 #include "../../gcode.h"
 #include "../../../feature/tmc_util.h"
-#include "../../../module/stepper_indirection.h"
+#include "../../../module/stepper/indirection.h"
 
 /**
  * M906: Set motor current in milliamps.

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 91525495f2..ba57fbb4ce 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 1c86fbc60bad74957c872cbd6bc87900a3f127d8
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Sun May 26 02:22:12 2019 +0300

    TMC updates, capture LCD changes (#14074)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 0466bfff4e..91525495f2 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -43,8 +43,8 @@
  * With no parameters report driver currents.
  */
 void GcodeSuite::M906() {
-  #define TMC_SAY_CURRENT(Q) tmc_get_current(stepper##Q)
-  #define TMC_SET_CURRENT(Q) tmc_set_current(stepper##Q, value)
+  #define TMC_SAY_CURRENT(Q) tmc_print_current(stepper##Q)
+  #define TMC_SET_CURRENT(Q) stepper##Q.rms_current(value)
 
   bool report = true;
 

commit 0c4d3e6622657760cbbcd22fa8a379d0cfff6004
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 22 13:44:57 2019 -0500

    Improve M906 description

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 51a3cefde2..0466bfff4e 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -29,8 +29,18 @@
 #include "../../../module/stepper_indirection.h"
 
 /**
- * M906: Set motor current in milliamps using axis codes X, Y, Z, E
- * Report driver currents when no axis specified
+ * M906: Set motor current in milliamps.
+ *
+ * Parameters:
+ *   X[current]  - Set mA current for X driver(s)
+ *   Y[current]  - Set mA current for Y driver(s)
+ *   Z[current]  - Set mA current for Z driver(s)
+ *   E[current]  - Set mA current for E driver(s)
+ *
+ *   I[index]    - Axis sub-index (Omit or 0 for X, Y, Z; 1 for X2, Y2, Z2; 2 for Z3.)
+ *   T[index]    - Extruder index (Zero-based. Omit for E0 only.)
+ *
+ * With no parameters report driver currents.
  */
 void GcodeSuite::M906() {
   #define TMC_SAY_CURRENT(Q) tmc_get_current(stepper##Q)

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 1ff2825466..51a3cefde2 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit d2bb53702a5b8bc03d6691230f252a21ca3ee375
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 14 17:33:04 2018 -0600

    Optimize target_extruder, ignore T with mixing (#12432)
    
    * Optimize target_extruder, ignore T with mixing
    * Give G-code Tn parity with tool_change

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 66f8efd28f..1ff2825466 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -73,7 +73,8 @@ void GcodeSuite::M906() {
         #endif
         break;
       case E_AXIS: {
-        if (get_target_extruder_from_command()) return;
+        const int8_t target_extruder = get_target_extruder_from_command();
+        if (target_extruder < 0) return;
         switch (target_extruder) {
           #if AXIS_IS_TMC(E0)
             case 0: TMC_SET_CURRENT(E0); break;

commit 5ba6607181470006c5903e414c678506ca81b22d
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Sat Nov 3 04:29:32 2018 +0100

    Fix keypad-related compile error (#12306)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index d28117c5ed..66f8efd28f 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -39,7 +39,7 @@ void GcodeSuite::M906() {
   bool report = true;
 
   #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3)
-    const uint8_t index = parser.byteval('I'); 
+    const uint8_t index = parser.byteval('I');
   #endif
 
   LOOP_XYZE(i) if (uint16_t value = parser.intval(axis_codes[i])) {

commit 9f77df25900c22181de1170c4c81f10b4c1b885e
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Thu Nov 1 22:13:33 2018 +0100

    Followup to menu refactor. TMC warnings, sanity. (#12288)
    
    - Followup fixes for menu refactor
    - Fix TMC sanity checks, unused var warnings

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 853f09838b..d28117c5ed 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -37,7 +37,11 @@ void GcodeSuite::M906() {
   #define TMC_SET_CURRENT(Q) tmc_set_current(stepper##Q, value)
 
   bool report = true;
-  const uint8_t index = parser.byteval('I');
+
+  #if AXIS_IS_TMC(X) || AXIS_IS_TMC(X2) || AXIS_IS_TMC(Y) || AXIS_IS_TMC(Y2) || AXIS_IS_TMC(Z) || AXIS_IS_TMC(Z2) || AXIS_IS_TMC(Z3)
+    const uint8_t index = parser.byteval('I'); 
+  #endif
+
   LOOP_XYZE(i) if (uint16_t value = parser.intval(axis_codes[i])) {
     report = false;
     switch (i) {

commit c3229e1b3461b6da8373e7a24a7eeb131912a15b
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Wed Oct 3 10:48:49 2018 +0300

    Migrate to a new TMC library (#11943)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index e727d3e30a..853f09838b 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -33,7 +33,7 @@
  * Report driver currents when no axis specified
  */
 void GcodeSuite::M906() {
-  #define TMC_SAY_CURRENT(Q) tmc_get_current(stepper##Q, TMC_##Q)
+  #define TMC_SAY_CURRENT(Q) tmc_get_current(stepper##Q)
   #define TMC_SET_CURRENT(Q) tmc_set_current(stepper##Q, value)
 
   bool report = true;

commit 1718eff54adefc7cc95851f28df0c7e02eae3a36
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 13 01:35:55 2018 -0500

    Code changes supporting up to 6 extruders

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 8d90f8b95a..e727d3e30a 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -86,6 +86,9 @@ void GcodeSuite::M906() {
           #if AXIS_IS_TMC(E4)
             case 4: TMC_SET_CURRENT(E4); break;
           #endif
+          #if AXIS_IS_TMC(E5)
+            case 5: TMC_SET_CURRENT(E5); break;
+          #endif
         }
       } break;
     }
@@ -128,6 +131,9 @@ void GcodeSuite::M906() {
     #if AXIS_IS_TMC(E4)
       TMC_SAY_CURRENT(E4);
     #endif
+    #if AXIS_IS_TMC(E5)
+      TMC_SAY_CURRENT(E5);
+    #endif
   }
 }
 

commit 1a6f2b29b8dd3bc8e6ef56d4f376f49cacfc8785
Author: Holger MuÃàller <holger@mueller-gelff.de>
Date:   Tue Jun 19 18:55:49 2018 +0200

    Add support for Triple-Z steppers/endstops

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 22d9a3f90a..8d90f8b95a 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -64,6 +64,9 @@ void GcodeSuite::M906() {
         #if AXIS_IS_TMC(Z2)
           if (index == 1) TMC_SET_CURRENT(Z2);
         #endif
+        #if AXIS_IS_TMC(Z3)
+          if (index == 2) TMC_SET_CURRENT(Z3);
+        #endif
         break;
       case E_AXIS: {
         if (get_target_extruder_from_command()) return;
@@ -107,6 +110,9 @@ void GcodeSuite::M906() {
     #if AXIS_IS_TMC(Z2)
       TMC_SAY_CURRENT(Z2);
     #endif
+    #if AXIS_IS_TMC(Z3)
+      TMC_SAY_CURRENT(Z3);
+    #endif
     #if AXIS_IS_TMC(E0)
       TMC_SAY_CURRENT(E0);
     #endif

commit fbcdf5eaeb4f2265fd43097ab6c652a89842d8e7
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Sat Jul 14 14:13:06 2018 +0300

    Simplify stepper driver per-axis selection

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 36545a2c2b..22d9a3f90a 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -42,45 +42,45 @@ void GcodeSuite::M906() {
     report = false;
     switch (i) {
       case X_AXIS:
-        #if X_IS_TRINAMIC
+        #if AXIS_IS_TMC(X)
           if (index == 0) TMC_SET_CURRENT(X);
         #endif
-        #if X2_IS_TRINAMIC
+        #if AXIS_IS_TMC(X2)
           if (index == 1) TMC_SET_CURRENT(X2);
         #endif
         break;
       case Y_AXIS:
-        #if Y_IS_TRINAMIC
+        #if AXIS_IS_TMC(Y)
           if (index == 0) TMC_SET_CURRENT(Y);
         #endif
-        #if Y2_IS_TRINAMIC
+        #if AXIS_IS_TMC(Y2)
           if (index == 1) TMC_SET_CURRENT(Y2);
         #endif
         break;
       case Z_AXIS:
-        #if Z_IS_TRINAMIC
+        #if AXIS_IS_TMC(Z)
           if (index == 0) TMC_SET_CURRENT(Z);
         #endif
-        #if Z2_IS_TRINAMIC
+        #if AXIS_IS_TMC(Z2)
           if (index == 1) TMC_SET_CURRENT(Z2);
         #endif
         break;
       case E_AXIS: {
         if (get_target_extruder_from_command()) return;
         switch (target_extruder) {
-          #if E0_IS_TRINAMIC
+          #if AXIS_IS_TMC(E0)
             case 0: TMC_SET_CURRENT(E0); break;
           #endif
-          #if E1_IS_TRINAMIC
+          #if AXIS_IS_TMC(E1)
             case 1: TMC_SET_CURRENT(E1); break;
           #endif
-          #if E2_IS_TRINAMIC
+          #if AXIS_IS_TMC(E2)
             case 2: TMC_SET_CURRENT(E2); break;
           #endif
-          #if E3_IS_TRINAMIC
+          #if AXIS_IS_TMC(E3)
             case 3: TMC_SET_CURRENT(E3); break;
           #endif
-          #if E4_IS_TRINAMIC
+          #if AXIS_IS_TMC(E4)
             case 4: TMC_SET_CURRENT(E4); break;
           #endif
         }
@@ -89,37 +89,37 @@ void GcodeSuite::M906() {
   }
 
   if (report) {
-    #if X_IS_TRINAMIC
+    #if AXIS_IS_TMC(X)
       TMC_SAY_CURRENT(X);
     #endif
-    #if X2_IS_TRINAMIC
+    #if AXIS_IS_TMC(X2)
       TMC_SAY_CURRENT(X2);
     #endif
-    #if Y_IS_TRINAMIC
+    #if AXIS_IS_TMC(Y)
       TMC_SAY_CURRENT(Y);
     #endif
-    #if Y2_IS_TRINAMIC
+    #if AXIS_IS_TMC(Y2)
       TMC_SAY_CURRENT(Y2);
     #endif
-    #if Z_IS_TRINAMIC
+    #if AXIS_IS_TMC(Z)
       TMC_SAY_CURRENT(Z);
     #endif
-    #if Z2_IS_TRINAMIC
+    #if AXIS_IS_TMC(Z2)
       TMC_SAY_CURRENT(Z2);
     #endif
-    #if E0_IS_TRINAMIC
+    #if AXIS_IS_TMC(E0)
       TMC_SAY_CURRENT(E0);
     #endif
-    #if E1_IS_TRINAMIC
+    #if AXIS_IS_TMC(E1)
       TMC_SAY_CURRENT(E1);
     #endif
-    #if E2_IS_TRINAMIC
+    #if AXIS_IS_TMC(E2)
       TMC_SAY_CURRENT(E2);
     #endif
-    #if E3_IS_TRINAMIC
+    #if AXIS_IS_TMC(E3)
       TMC_SAY_CURRENT(E3);
     #endif
-    #if E4_IS_TRINAMIC
+    #if AXIS_IS_TMC(E4)
       TMC_SAY_CURRENT(E4);
     #endif
   }

commit fd8a76493bc0971d086b76eceaea60d84e32362d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 12 22:31:51 2018 -0500

    Unify M91x parameter I meaning, simplify reports (#11249)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 1ac22641cf..36545a2c2b 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -88,48 +88,40 @@ void GcodeSuite::M906() {
     }
   }
 
-  if (report) LOOP_XYZE(i) switch (i) {
-    case X_AXIS:
-      #if X_IS_TRINAMIC
-        TMC_SAY_CURRENT(X);
-      #endif
-      #if X2_IS_TRINAMIC
-        TMC_SAY_CURRENT(X2);
-      #endif
-      break;
-    case Y_AXIS:
-      #if Y_IS_TRINAMIC
-        TMC_SAY_CURRENT(Y);
-      #endif
-      #if Y2_IS_TRINAMIC
-        TMC_SAY_CURRENT(Y2);
-      #endif
-      break;
-    case Z_AXIS:
-      #if Z_IS_TRINAMIC
-        TMC_SAY_CURRENT(Z);
-      #endif
-      #if Z2_IS_TRINAMIC
-        TMC_SAY_CURRENT(Z2);
-      #endif
-      break;
-    case E_AXIS:
-      #if E0_IS_TRINAMIC
-        TMC_SAY_CURRENT(E0);
-      #endif
-      #if E1_IS_TRINAMIC
-        TMC_SAY_CURRENT(E1);
-      #endif
-      #if E2_IS_TRINAMIC
-        TMC_SAY_CURRENT(E2);
-      #endif
-      #if E3_IS_TRINAMIC
-        TMC_SAY_CURRENT(E3);
-      #endif
-      #if E4_IS_TRINAMIC
-        TMC_SAY_CURRENT(E4);
-      #endif
-      break;
+  if (report) {
+    #if X_IS_TRINAMIC
+      TMC_SAY_CURRENT(X);
+    #endif
+    #if X2_IS_TRINAMIC
+      TMC_SAY_CURRENT(X2);
+    #endif
+    #if Y_IS_TRINAMIC
+      TMC_SAY_CURRENT(Y);
+    #endif
+    #if Y2_IS_TRINAMIC
+      TMC_SAY_CURRENT(Y2);
+    #endif
+    #if Z_IS_TRINAMIC
+      TMC_SAY_CURRENT(Z);
+    #endif
+    #if Z2_IS_TRINAMIC
+      TMC_SAY_CURRENT(Z2);
+    #endif
+    #if E0_IS_TRINAMIC
+      TMC_SAY_CURRENT(E0);
+    #endif
+    #if E1_IS_TRINAMIC
+      TMC_SAY_CURRENT(E1);
+    #endif
+    #if E2_IS_TRINAMIC
+      TMC_SAY_CURRENT(E2);
+    #endif
+    #if E3_IS_TRINAMIC
+      TMC_SAY_CURRENT(E3);
+    #endif
+    #if E4_IS_TRINAMIC
+      TMC_SAY_CURRENT(E4);
+    #endif
   }
 }
 

commit b76344c080ce0b7f651290dcfeecc6b815fea916
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu May 10 00:05:15 2018 -0500

    More Trinamic cleanup

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 8ba6453339..1ac22641cf 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -34,7 +34,7 @@
  */
 void GcodeSuite::M906() {
   #define TMC_SAY_CURRENT(Q) tmc_get_current(stepper##Q, TMC_##Q)
-  #define TMC_SET_CURRENT(Q) tmc_set_current(stepper##Q, TMC_##Q, value)
+  #define TMC_SET_CURRENT(Q) tmc_set_current(stepper##Q, value)
 
   bool report = true;
   const uint8_t index = parser.byteval('I');

commit a46bac3100124cd3d1782ee98d731baa838733bd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 14 07:25:27 2018 -0500

    Add 'I' parameter to M906/M913/M914; 'T' to M906/M913

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 7e33187c36..8ba6453339 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -37,50 +37,54 @@ void GcodeSuite::M906() {
   #define TMC_SET_CURRENT(Q) tmc_set_current(stepper##Q, TMC_##Q, value)
 
   bool report = true;
+  const uint8_t index = parser.byteval('I');
   LOOP_XYZE(i) if (uint16_t value = parser.intval(axis_codes[i])) {
     report = false;
     switch (i) {
       case X_AXIS:
         #if X_IS_TRINAMIC
-          TMC_SET_CURRENT(X);
+          if (index == 0) TMC_SET_CURRENT(X);
         #endif
         #if X2_IS_TRINAMIC
-          TMC_SET_CURRENT(X2);
+          if (index == 1) TMC_SET_CURRENT(X2);
         #endif
         break;
       case Y_AXIS:
         #if Y_IS_TRINAMIC
-          TMC_SET_CURRENT(Y);
+          if (index == 0) TMC_SET_CURRENT(Y);
         #endif
         #if Y2_IS_TRINAMIC
-          TMC_SET_CURRENT(Y2);
+          if (index == 1) TMC_SET_CURRENT(Y2);
         #endif
         break;
       case Z_AXIS:
         #if Z_IS_TRINAMIC
-          TMC_SET_CURRENT(Z);
+          if (index == 0) TMC_SET_CURRENT(Z);
         #endif
         #if Z2_IS_TRINAMIC
-          TMC_SET_CURRENT(Z2);
-        #endif
-        break;
-      case E_AXIS:
-        #if E0_IS_TRINAMIC
-          TMC_SET_CURRENT(E0);
-        #endif
-        #if E1_IS_TRINAMIC
-          TMC_SET_CURRENT(E1);
-        #endif
-        #if E2_IS_TRINAMIC
-          TMC_SET_CURRENT(E2);
-        #endif
-        #if E3_IS_TRINAMIC
-          TMC_SET_CURRENT(E3);
-        #endif
-        #if E4_IS_TRINAMIC
-          TMC_SET_CURRENT(E4);
+          if (index == 1) TMC_SET_CURRENT(Z2);
         #endif
         break;
+      case E_AXIS: {
+        if (get_target_extruder_from_command()) return;
+        switch (target_extruder) {
+          #if E0_IS_TRINAMIC
+            case 0: TMC_SET_CURRENT(E0); break;
+          #endif
+          #if E1_IS_TRINAMIC
+            case 1: TMC_SET_CURRENT(E1); break;
+          #endif
+          #if E2_IS_TRINAMIC
+            case 2: TMC_SET_CURRENT(E2); break;
+          #endif
+          #if E3_IS_TRINAMIC
+            case 3: TMC_SET_CURRENT(E3); break;
+          #endif
+          #if E4_IS_TRINAMIC
+            case 4: TMC_SET_CURRENT(E4); break;
+          #endif
+        }
+      } break;
     }
   }
 

commit cfc13ed7f3fd20d2d07d64602e39e732a1cb982a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 14 05:43:18 2018 -0500

    Quiet M906/M913/M914 with axes. Patch for DISTINCT_E_FACTORS.

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 2de386813d..7e33187c36 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -33,46 +33,100 @@
  * Report driver currents when no axis specified
  */
 void GcodeSuite::M906() {
-  uint16_t values[XYZE];
-  LOOP_XYZE(i) values[i] = parser.intval(axis_codes[i]);
+  #define TMC_SAY_CURRENT(Q) tmc_get_current(stepper##Q, TMC_##Q)
+  #define TMC_SET_CURRENT(Q) tmc_set_current(stepper##Q, TMC_##Q, value)
 
-  #define TMC_SET_GET_CURRENT(P,Q) do { \
-    if (values[P##_AXIS]) tmc_set_current(stepper##Q, TMC_##Q, values[P##_AXIS]); \
-    else tmc_get_current(stepper##Q, TMC_##Q); } while(0)
+  bool report = true;
+  LOOP_XYZE(i) if (uint16_t value = parser.intval(axis_codes[i])) {
+    report = false;
+    switch (i) {
+      case X_AXIS:
+        #if X_IS_TRINAMIC
+          TMC_SET_CURRENT(X);
+        #endif
+        #if X2_IS_TRINAMIC
+          TMC_SET_CURRENT(X2);
+        #endif
+        break;
+      case Y_AXIS:
+        #if Y_IS_TRINAMIC
+          TMC_SET_CURRENT(Y);
+        #endif
+        #if Y2_IS_TRINAMIC
+          TMC_SET_CURRENT(Y2);
+        #endif
+        break;
+      case Z_AXIS:
+        #if Z_IS_TRINAMIC
+          TMC_SET_CURRENT(Z);
+        #endif
+        #if Z2_IS_TRINAMIC
+          TMC_SET_CURRENT(Z2);
+        #endif
+        break;
+      case E_AXIS:
+        #if E0_IS_TRINAMIC
+          TMC_SET_CURRENT(E0);
+        #endif
+        #if E1_IS_TRINAMIC
+          TMC_SET_CURRENT(E1);
+        #endif
+        #if E2_IS_TRINAMIC
+          TMC_SET_CURRENT(E2);
+        #endif
+        #if E3_IS_TRINAMIC
+          TMC_SET_CURRENT(E3);
+        #endif
+        #if E4_IS_TRINAMIC
+          TMC_SET_CURRENT(E4);
+        #endif
+        break;
+    }
+  }
 
-  #if X_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(X,X);
-  #endif
-  #if X2_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(X,X2);
-  #endif
-  #if Y_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(Y,Y);
-  #endif
-  #if Y2_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(Y,Y2);
-  #endif
-  #if Z_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(Z,Z);
-  #endif
-  #if Z2_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(Z,Z2);
-  #endif
-  #if E0_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(E,E0);
-  #endif
-  #if E1_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(E,E1);
-  #endif
-  #if E2_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(E,E2);
-  #endif
-  #if E3_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(E,E3);
-  #endif
-  #if E4_IS_TRINAMIC
-    TMC_SET_GET_CURRENT(E,E4);
-  #endif
+  if (report) LOOP_XYZE(i) switch (i) {
+    case X_AXIS:
+      #if X_IS_TRINAMIC
+        TMC_SAY_CURRENT(X);
+      #endif
+      #if X2_IS_TRINAMIC
+        TMC_SAY_CURRENT(X2);
+      #endif
+      break;
+    case Y_AXIS:
+      #if Y_IS_TRINAMIC
+        TMC_SAY_CURRENT(Y);
+      #endif
+      #if Y2_IS_TRINAMIC
+        TMC_SAY_CURRENT(Y2);
+      #endif
+      break;
+    case Z_AXIS:
+      #if Z_IS_TRINAMIC
+        TMC_SAY_CURRENT(Z);
+      #endif
+      #if Z2_IS_TRINAMIC
+        TMC_SAY_CURRENT(Z2);
+      #endif
+      break;
+    case E_AXIS:
+      #if E0_IS_TRINAMIC
+        TMC_SAY_CURRENT(E0);
+      #endif
+      #if E1_IS_TRINAMIC
+        TMC_SAY_CURRENT(E1);
+      #endif
+      #if E2_IS_TRINAMIC
+        TMC_SAY_CURRENT(E2);
+      #endif
+      #if E3_IS_TRINAMIC
+        TMC_SAY_CURRENT(E3);
+      #endif
+      #if E4_IS_TRINAMIC
+        TMC_SAY_CURRENT(E4);
+      #endif
+      break;
+  }
 }
 
 #endif // HAS_TRINAMIC

commit e28e3bb5327ccd6dcf5f87258e3c0a7cfc2175f9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Mar 6 22:16:19 2018 -0600

    Move extended_axis_codes to PROGMEM

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index 04c26cb21a..2de386813d 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -37,8 +37,8 @@ void GcodeSuite::M906() {
   LOOP_XYZE(i) values[i] = parser.intval(axis_codes[i]);
 
   #define TMC_SET_GET_CURRENT(P,Q) do { \
-    if (values[P##_AXIS]) tmc_set_current(stepper##Q, extended_axis_codes[TMC_##Q], values[P##_AXIS]); \
-    else tmc_get_current(stepper##Q, extended_axis_codes[TMC_##Q]); } while(0)
+    if (values[P##_AXIS]) tmc_set_current(stepper##Q, TMC_##Q, values[P##_AXIS]); \
+    else tmc_get_current(stepper##Q, TMC_##Q); } while(0)
 
   #if X_IS_TRINAMIC
     TMC_SET_GET_CURRENT(X,X);

commit 6a043eee558695e91f64b6f4a48fcd1816a5f130
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 9 19:14:07 2018 -0600

    Various updates for TMC support

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index aa43f9269d..04c26cb21a 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -27,7 +27,6 @@
 #include "../../gcode.h"
 #include "../../../feature/tmc_util.h"
 #include "../../../module/stepper_indirection.h"
-#include "../../../module/planner.h"
 
 /**
  * M906: Set motor current in milliamps using axis codes X, Y, Z, E
@@ -35,54 +34,45 @@
  */
 void GcodeSuite::M906() {
   uint16_t values[XYZE];
-  LOOP_XYZE(i)
-    values[i] = parser.intval(axis_codes[i]);
+  LOOP_XYZE(i) values[i] = parser.intval(axis_codes[i]);
+
+  #define TMC_SET_GET_CURRENT(P,Q) do { \
+    if (values[P##_AXIS]) tmc_set_current(stepper##Q, extended_axis_codes[TMC_##Q], values[P##_AXIS]); \
+    else tmc_get_current(stepper##Q, extended_axis_codes[TMC_##Q]); } while(0)
 
   #if X_IS_TRINAMIC
-    if (values[X_AXIS]) tmc_set_current(stepperX, extended_axis_codes[TMC_X], values[X_AXIS]);
-    else tmc_get_current(stepperX, extended_axis_codes[TMC_X]);
+    TMC_SET_GET_CURRENT(X,X);
   #endif
   #if X2_IS_TRINAMIC
-    if (values[X_AXIS]) tmc_set_current(stepperX2, extended_axis_codes[TMC_X2], values[X_AXIS]);
-    else tmc_get_current(stepperX2, extended_axis_codes[TMC_X2]);
+    TMC_SET_GET_CURRENT(X,X2);
   #endif
   #if Y_IS_TRINAMIC
-    if (values[Y_AXIS]) tmc_set_current(stepperY, extended_axis_codes[TMC_Y], values[Y_AXIS]);
-    else tmc_get_current(stepperY, extended_axis_codes[TMC_Y]);
+    TMC_SET_GET_CURRENT(Y,Y);
   #endif
   #if Y2_IS_TRINAMIC
-    if (values[Y_AXIS]) tmc_set_current(stepperY2, extended_axis_codes[TMC_Y2], values[Y_AXIS]);
-    else tmc_get_current(stepperY2, extended_axis_codes[TMC_Y2]);
+    TMC_SET_GET_CURRENT(Y,Y2);
   #endif
   #if Z_IS_TRINAMIC
-    if (values[Z_AXIS]) tmc_set_current(stepperZ, extended_axis_codes[TMC_Z], values[Z_AXIS]);
-    else tmc_get_current(stepperZ, extended_axis_codes[TMC_Z]);
+    TMC_SET_GET_CURRENT(Z,Z);
   #endif
   #if Z2_IS_TRINAMIC
-    if (values[Z_AXIS]) tmc_set_current(stepperZ2, extended_axis_codes[TMC_Z2], values[Z_AXIS]);
-    else tmc_get_current(stepperZ2, extended_axis_codes[TMC_Z2]);
+    TMC_SET_GET_CURRENT(Z,Z2);
   #endif
   #if E0_IS_TRINAMIC
-    if (values[E_AXIS]) tmc_set_current(stepperE0, extended_axis_codes[TMC_E0], values[E_AXIS]);
-    else tmc_get_current(stepperE0, extended_axis_codes[TMC_E0]);
+    TMC_SET_GET_CURRENT(E,E0);
   #endif
   #if E1_IS_TRINAMIC
-    if (values[E_AXIS]) tmc_set_current(stepperE1, extended_axis_codes[TMC_E1], values[E_AXIS]);
-    else tmc_get_current(stepperE1, extended_axis_codes[TMC_E1]);
+    TMC_SET_GET_CURRENT(E,E1);
   #endif
   #if E2_IS_TRINAMIC
-    if (values[E_AXIS]) tmc_set_current(stepperE2, extended_axis_codes[TMC_E2], values[E_AXIS]);
-    else tmc_get_current(stepperE2, extended_axis_codes[TMC_E2]);
+    TMC_SET_GET_CURRENT(E,E2);
   #endif
   #if E3_IS_TRINAMIC
-    if (values[E_AXIS]) tmc_set_current(stepperE3, extended_axis_codes[TMC_E3], values[E_AXIS]);
-    else tmc_get_current(stepperE3, extended_axis_codes[TMC_E3]);
+    TMC_SET_GET_CURRENT(E,E3);
   #endif
   #if E4_IS_TRINAMIC
-    if (values[E_AXIS]) tmc_set_current(stepperE4, extended_axis_codes[TMC_E4], values[E_AXIS]);
-    else tmc_get_current(stepperE4, extended_axis_codes[TMC_E4]);
+    TMC_SET_GET_CURRENT(E,E4);
   #endif
-
 }
 
 #endif // HAS_TRINAMIC

commit 9d923c6c03e87cc8b66882ed9325ac47ddf9c3a0
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Fri Dec 29 21:38:08 2017 +0200

    Fix TMC gcode commands

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index a93657d555..aa43f9269d 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -33,7 +33,7 @@
  * M906: Set motor current in milliamps using axis codes X, Y, Z, E
  * Report driver currents when no axis specified
  */
-inline void GcodeSuite::M906() {
+void GcodeSuite::M906() {
   uint16_t values[XYZE];
   LOOP_XYZE(i)
     values[i] = parser.intval(axis_codes[i]);

commit 0cd1e91056213d6a0bd422848ccff7cd1191d001
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Fri Dec 15 23:03:14 2017 +0200

    [2.0.x] TMC driver update (#8769)

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
index ec3fcfe556..a93657d555 100644
--- a/Marlin/src/gcode/feature/trinamic/M906.cpp
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -22,54 +22,67 @@
 
 #include "../../../inc/MarlinConfig.h"
 
-#if ENABLED(HAVE_TMC2130)
+#if HAS_TRINAMIC
 
 #include "../../gcode.h"
-#include "../../../feature/tmc2130.h"
+#include "../../../feature/tmc_util.h"
 #include "../../../module/stepper_indirection.h"
-
-inline void tmc2130_get_current(TMC2130Stepper &st, const char name) {
-  SERIAL_CHAR(name);
-  SERIAL_ECHOPGM(" axis driver current: ");
-  SERIAL_ECHOLN(st.getCurrent());
-}
-inline void tmc2130_set_current(TMC2130Stepper &st, const char name, const int mA) {
-  st.setCurrent(mA, R_SENSE, HOLD_MULTIPLIER);
-  tmc2130_get_current(st, name);
-}
+#include "../../../module/planner.h"
 
 /**
  * M906: Set motor current in milliamps using axis codes X, Y, Z, E
  * Report driver currents when no axis specified
- *
- * S1: Enable automatic current control
- * S0: Disable
  */
-void GcodeSuite::M906() {
+inline void GcodeSuite::M906() {
   uint16_t values[XYZE];
   LOOP_XYZE(i)
     values[i] = parser.intval(axis_codes[i]);
 
-  #if ENABLED(X_IS_TMC2130)
-    if (values[X_AXIS]) tmc2130_set_current(stepperX, 'X', values[X_AXIS]);
-    else tmc2130_get_current(stepperX, 'X');
+  #if X_IS_TRINAMIC
+    if (values[X_AXIS]) tmc_set_current(stepperX, extended_axis_codes[TMC_X], values[X_AXIS]);
+    else tmc_get_current(stepperX, extended_axis_codes[TMC_X]);
   #endif
-  #if ENABLED(Y_IS_TMC2130)
-    if (values[Y_AXIS]) tmc2130_set_current(stepperY, 'Y', values[Y_AXIS]);
-    else tmc2130_get_current(stepperY, 'Y');
+  #if X2_IS_TRINAMIC
+    if (values[X_AXIS]) tmc_set_current(stepperX2, extended_axis_codes[TMC_X2], values[X_AXIS]);
+    else tmc_get_current(stepperX2, extended_axis_codes[TMC_X2]);
   #endif
-  #if ENABLED(Z_IS_TMC2130)
-    if (values[Z_AXIS]) tmc2130_set_current(stepperZ, 'Z', values[Z_AXIS]);
-    else tmc2130_get_current(stepperZ, 'Z');
+  #if Y_IS_TRINAMIC
+    if (values[Y_AXIS]) tmc_set_current(stepperY, extended_axis_codes[TMC_Y], values[Y_AXIS]);
+    else tmc_get_current(stepperY, extended_axis_codes[TMC_Y]);
   #endif
-  #if ENABLED(E0_IS_TMC2130)
-    if (values[E_AXIS]) tmc2130_set_current(stepperE0, 'E', values[E_AXIS]);
-    else tmc2130_get_current(stepperE0, 'E');
+  #if Y2_IS_TRINAMIC
+    if (values[Y_AXIS]) tmc_set_current(stepperY2, extended_axis_codes[TMC_Y2], values[Y_AXIS]);
+    else tmc_get_current(stepperY2, extended_axis_codes[TMC_Y2]);
   #endif
-
-  #if ENABLED(AUTOMATIC_CURRENT_CONTROL)
-    if (parser.seen('S')) auto_current_control = parser.value_bool();
+  #if Z_IS_TRINAMIC
+    if (values[Z_AXIS]) tmc_set_current(stepperZ, extended_axis_codes[TMC_Z], values[Z_AXIS]);
+    else tmc_get_current(stepperZ, extended_axis_codes[TMC_Z]);
+  #endif
+  #if Z2_IS_TRINAMIC
+    if (values[Z_AXIS]) tmc_set_current(stepperZ2, extended_axis_codes[TMC_Z2], values[Z_AXIS]);
+    else tmc_get_current(stepperZ2, extended_axis_codes[TMC_Z2]);
   #endif
+  #if E0_IS_TRINAMIC
+    if (values[E_AXIS]) tmc_set_current(stepperE0, extended_axis_codes[TMC_E0], values[E_AXIS]);
+    else tmc_get_current(stepperE0, extended_axis_codes[TMC_E0]);
+  #endif
+  #if E1_IS_TRINAMIC
+    if (values[E_AXIS]) tmc_set_current(stepperE1, extended_axis_codes[TMC_E1], values[E_AXIS]);
+    else tmc_get_current(stepperE1, extended_axis_codes[TMC_E1]);
+  #endif
+  #if E2_IS_TRINAMIC
+    if (values[E_AXIS]) tmc_set_current(stepperE2, extended_axis_codes[TMC_E2], values[E_AXIS]);
+    else tmc_get_current(stepperE2, extended_axis_codes[TMC_E2]);
+  #endif
+  #if E3_IS_TRINAMIC
+    if (values[E_AXIS]) tmc_set_current(stepperE3, extended_axis_codes[TMC_E3], values[E_AXIS]);
+    else tmc_get_current(stepperE3, extended_axis_codes[TMC_E3]);
+  #endif
+  #if E4_IS_TRINAMIC
+    if (values[E_AXIS]) tmc_set_current(stepperE4, extended_axis_codes[TMC_E4], values[E_AXIS]);
+    else tmc_get_current(stepperE4, extended_axis_codes[TMC_E4]);
+  #endif
+
 }
 
-#endif // HAVE_TMC2130
+#endif // HAS_TRINAMIC

commit 2e89685154dbae09f97dc4ac95022cad56b40365
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 18:34:04 2017 -0500

    Move TMC2130 g-codes to cpp

diff --git a/Marlin/src/gcode/feature/trinamic/M906.cpp b/Marlin/src/gcode/feature/trinamic/M906.cpp
new file mode 100644
index 0000000000..ec3fcfe556
--- /dev/null
+++ b/Marlin/src/gcode/feature/trinamic/M906.cpp
@@ -0,0 +1,75 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../../inc/MarlinConfig.h"
+
+#if ENABLED(HAVE_TMC2130)
+
+#include "../../gcode.h"
+#include "../../../feature/tmc2130.h"
+#include "../../../module/stepper_indirection.h"
+
+inline void tmc2130_get_current(TMC2130Stepper &st, const char name) {
+  SERIAL_CHAR(name);
+  SERIAL_ECHOPGM(" axis driver current: ");
+  SERIAL_ECHOLN(st.getCurrent());
+}
+inline void tmc2130_set_current(TMC2130Stepper &st, const char name, const int mA) {
+  st.setCurrent(mA, R_SENSE, HOLD_MULTIPLIER);
+  tmc2130_get_current(st, name);
+}
+
+/**
+ * M906: Set motor current in milliamps using axis codes X, Y, Z, E
+ * Report driver currents when no axis specified
+ *
+ * S1: Enable automatic current control
+ * S0: Disable
+ */
+void GcodeSuite::M906() {
+  uint16_t values[XYZE];
+  LOOP_XYZE(i)
+    values[i] = parser.intval(axis_codes[i]);
+
+  #if ENABLED(X_IS_TMC2130)
+    if (values[X_AXIS]) tmc2130_set_current(stepperX, 'X', values[X_AXIS]);
+    else tmc2130_get_current(stepperX, 'X');
+  #endif
+  #if ENABLED(Y_IS_TMC2130)
+    if (values[Y_AXIS]) tmc2130_set_current(stepperY, 'Y', values[Y_AXIS]);
+    else tmc2130_get_current(stepperY, 'Y');
+  #endif
+  #if ENABLED(Z_IS_TMC2130)
+    if (values[Z_AXIS]) tmc2130_set_current(stepperZ, 'Z', values[Z_AXIS]);
+    else tmc2130_get_current(stepperZ, 'Z');
+  #endif
+  #if ENABLED(E0_IS_TMC2130)
+    if (values[E_AXIS]) tmc2130_set_current(stepperE0, 'E', values[E_AXIS]);
+    else tmc2130_get_current(stepperE0, 'E');
+  #endif
+
+  #if ENABLED(AUTOMATIC_CURRENT_CONTROL)
+    if (parser.seen('S')) auto_current_control = parser.value_bool();
+  #endif
+}
+
+#endif // HAVE_TMC2130
