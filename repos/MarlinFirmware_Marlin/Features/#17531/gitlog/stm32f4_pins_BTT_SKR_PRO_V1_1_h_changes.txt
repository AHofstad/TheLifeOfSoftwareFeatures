commit d99185be24e035d6370c8f36851e09917d7fe342
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sun May 22 14:32:16 2022 -0700

    🎨 Fix/adjust warnings (#24225)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index fb4b17b6fb..8a918835f7 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -22,7 +22,7 @@
 #pragma once
 
 #if HOTENDS > 3 || E_STEPPERS > 3
-  #error "BIGTREE SKR Pro V1.1 supports up to 3 hotends / E-steppers."
+  #error "BIGTREE SKR Pro V1.1 supports up to 3 hotends / E steppers."
 #endif
 
 #define BOARD_INFO_NAME "BTT SKR Pro V1.1"

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 64a8ddb354..fb4b17b6fb 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit e424dfc8854378ae9ea4448770a5510b070654b4
Author: thisiskeithb <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sun Jun 21 01:46:31 2020 -0700

    BigTreeTech SKR Pro 1.2 (#18366)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index ccb03e78e5..64a8ddb354 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -21,340 +21,10 @@
  */
 #pragma once
 
-#ifndef TARGET_STM32F4
-  #error "Oops! Select an STM32F4 board in 'Tools > Board.'"
-#elif HOTENDS > 3 || E_STEPPERS > 3
+#if HOTENDS > 3 || E_STEPPERS > 3
   #error "BIGTREE SKR Pro V1.1 supports up to 3 hotends / E-steppers."
 #endif
 
-#define BOARD_INFO_NAME "BTT SKR Pro V1.1" // redefined?
+#define BOARD_INFO_NAME "BTT SKR Pro V1.1"
 
-// Use one of these or SDCard-based Emulation will be used
-#if NO_EEPROM_SELECTED
-  //#define SRAM_EEPROM_EMULATION                 // Use BackSRAM-based EEPROM emulation
-  #define FLASH_EEPROM_EMULATION                  // Use Flash-based EEPROM emulation
-#endif
-
-#if ENABLED(FLASH_EEPROM_EMULATION)
-  // Decrease delays and flash wear by spreading writes across the
-  // 128 kB sector allocated for EEPROM emulation.
-  #define FLASH_EEPROM_LEVELING
-#endif
-
-//
-// Servos
-//
-#define SERVO0_PIN                          PA1
-
-//
-// Trinamic Stallguard pins
-//
-#define X_DIAG_PIN                          PB10  // X-
-#define Y_DIAG_PIN                          PE12  // Y-
-#define Z_DIAG_PIN                          PG8   // Z-
-#define E0_DIAG_PIN                         PE15  // E0
-#define E1_DIAG_PIN                         PE10  // E1
-#define E2_DIAG_PIN                         PG5   // E2
-
-//
-// Limit Switches
-//
-#ifdef X_STALL_SENSITIVITY
-  #define X_STOP_PIN                  X_DIAG_PIN
-  #if X_HOME_DIR < 0
-    #define X_MAX_PIN                       PE15  // E0
-  #else
-    #define X_MIN_PIN                       PE15  // E0
-  #endif
-#else
-  #define X_MIN_PIN                         PB10  // X-
-  #define X_MAX_PIN                         PE15  // E0
-#endif
-
-#ifdef Y_STALL_SENSITIVITY
-  #define Y_STOP_PIN                  Y_DIAG_PIN
-  #if Y_HOME_DIR < 0
-    #define Y_MAX_PIN                       PE10  // E1
-  #else
-    #define Y_MIN_PIN                       PE10  // E1
-  #endif
-#else
-  #define Y_MIN_PIN                         PE12  // Y-
-  #define Y_MAX_PIN                         PE10  // E1
-#endif
-
-#ifdef Z_STALL_SENSITIVITY
-  #define Z_STOP_PIN                  Z_DIAG_PIN
-  #if Z_HOME_DIR < 0
-    #define Z_MAX_PIN                       PG5   // E2
-  #else
-    #define Z_MIN_PIN                       PG5   // E2
-  #endif
-#else
-  #define Z_MIN_PIN                         PG8   // Z-
-  #define Z_MAX_PIN                         PG5   // E2
-#endif
-
-//
-// Z Probe must be this pin
-//
-#ifndef Z_MIN_PROBE_PIN
-  #define Z_MIN_PROBE_PIN                   PA2
-#endif
-
-//
-// Steppers
-//
-#define X_STEP_PIN                          PE9
-#define X_DIR_PIN                           PF1
-#define X_ENABLE_PIN                        PF2
-#ifndef X_CS_PIN
-  #define X_CS_PIN                          PA15
-#endif
-
-#define Y_STEP_PIN                          PE11
-#define Y_DIR_PIN                           PE8
-#define Y_ENABLE_PIN                        PD7
- #ifndef Y_CS_PIN
-  #define Y_CS_PIN                          PB8
-#endif
-
-#define Z_STEP_PIN                          PE13
-#define Z_DIR_PIN                           PC2
-#define Z_ENABLE_PIN                        PC0
-#ifndef Z_CS_PIN
-  #define Z_CS_PIN                          PB9
-#endif
-
-#define E0_STEP_PIN                         PE14
-#define E0_DIR_PIN                          PA0
-#define E0_ENABLE_PIN                       PC3
-#ifndef E0_CS_PIN
-  #define E0_CS_PIN                         PB3
-#endif
-
-#define E1_STEP_PIN                         PD15
-#define E1_DIR_PIN                          PE7
-#define E1_ENABLE_PIN                       PA3
-#ifndef E1_CS_PIN
-  #define E1_CS_PIN                         PG15
-#endif
-
-#define E2_STEP_PIN                         PD13
-#define E2_DIR_PIN                          PG9
-#define E2_ENABLE_PIN                       PF0
-#ifndef E2_CS_PIN
-  #define E2_CS_PIN                         PG12
-#endif
-
-//
-// Software SPI pins for TMC2130 stepper drivers
-//
-#if ENABLED(TMC_USE_SW_SPI)
-  #ifndef TMC_SW_MOSI
-    #define TMC_SW_MOSI                     PC12
-  #endif
-  #ifndef TMC_SW_MISO
-    #define TMC_SW_MISO                     PC11
-  #endif
-  #ifndef TMC_SW_SCK
-    #define TMC_SW_SCK                      PC10
-  #endif
-#endif
-
-#if HAS_TMC_UART
-  /**
-   * TMC2208/TMC2209 stepper drivers
-   *
-   * Hardware serial communication ports.
-   * If undefined software serial is used according to the pins below
-   */
-  //#define X_HARDWARE_SERIAL  Serial
-  //#define X2_HARDWARE_SERIAL Serial1
-  //#define Y_HARDWARE_SERIAL  Serial1
-  //#define Y2_HARDWARE_SERIAL Serial1
-  //#define Z_HARDWARE_SERIAL  Serial1
-  //#define Z2_HARDWARE_SERIAL Serial1
-  //#define E0_HARDWARE_SERIAL Serial1
-  //#define E1_HARDWARE_SERIAL Serial1
-  //#define E2_HARDWARE_SERIAL Serial1
-  //#define E3_HARDWARE_SERIAL Serial1
-  //#define E4_HARDWARE_SERIAL Serial1
-
-  //
-  // Software serial
-  //
-  #define X_SERIAL_TX_PIN                   PC13
-  #define X_SERIAL_RX_PIN                   PC13
-
-  #define Y_SERIAL_TX_PIN                   PE3
-  #define Y_SERIAL_RX_PIN                   PE3
-
-  #define Z_SERIAL_TX_PIN                   PE1
-  #define Z_SERIAL_RX_PIN                   PE1
-
-  #define E0_SERIAL_TX_PIN                  PD4
-  #define E0_SERIAL_RX_PIN                  PD4
-
-  #define E1_SERIAL_TX_PIN                  PD1
-  #define E1_SERIAL_RX_PIN                  PD1
-
-  #define E2_SERIAL_TX_PIN                  PD6
-  #define E2_SERIAL_RX_PIN                  PD6
-
-  // Reduce baud rate to improve software serial reliability
-  #define TMC_BAUD_RATE 19200
-#endif
-
-//
-// Temperature Sensors
-//
-#define TEMP_0_PIN                          PF4   // T1 <-> E0
-#define TEMP_1_PIN                          PF5   // T2 <-> E1
-#define TEMP_2_PIN                          PF6   // T3 <-> E2
-#define TEMP_BED_PIN                        PF3   // T0 <-> Bed
-
-//
-// Heaters / Fans
-//
-#define HEATER_0_PIN                        PB1   // Heater0
-#define HEATER_1_PIN                        PD14  // Heater1
-#define HEATER_2_PIN                        PB0   // Heater1
-#define HEATER_BED_PIN                      PD12  // Hotbed
-#define FAN_PIN                             PC8   // Fan0
-#define FAN1_PIN                            PE5   // Fan1
-#define FAN2_PIN                            PE6
-
-#ifndef E0_AUTO_FAN_PIN
-  #define E0_AUTO_FAN_PIN               FAN1_PIN
-#endif
-
-//
-// Misc. Functions
-//
-
-#ifndef SDCARD_CONNECTION
-  #define SDCARD_CONNECTION                  LCD
-#endif
-
-//
-// Onboard SD card
-// Must use soft SPI because Marlin's default hardware SPI is tied to LCD's EXP2
-//
-#if SD_CONNECTION_IS(ONBOARD)
-  #define SOFTWARE_SPI                            // Use soft SPI for onboard SD
-  #define SDSS                              PA4
-  #define SCK_PIN                           PA5
-  #define MISO_PIN                          PA6
-  #define MOSI_PIN                          PB5
-#endif
-
-/**
- *               _____                                             _____
- *           NC | · · | GND                                    5V | · · | GND
- *        RESET | · · | PF12(SD_DETECT)             (LCD_D7)  PG7 | · · | PG6  (LCD_D6)
- *   (MOSI)PB15 | · · | PF11(BTN_EN2)               (LCD_D5)  PG3 | · · | PG2  (LCD_D4)
- *  (SD_SS)PB12 | · · | PG10(BTN_EN1)               (LCD_RS) PD10 | · · | PD11 (LCD_EN)
- *    (SCK)PB13 | · · | PB14(MISO)                 (BTN_ENC)  PA8 | · · | PG4  (BEEPER)
- *               ￣￣                                               ￣￣
- *               EXP2                                              EXP1
- */
-
-//
-// LCDs and Controllers
-//
-#if HAS_SPI_LCD
-  #define BEEPER_PIN                        PG4
-  #define BTN_ENC                           PA8
-  #if SD_CONNECTION_IS(LCD)
-    #define SDSS                            PB12  // Uses default hardware SPI for LCD's SD
-  #endif
-
-  #if ENABLED(CR10_STOCKDISPLAY)
-    #define LCD_PINS_RS                     PG6
-
-    #define BTN_EN1                         PD11
-    #define BTN_EN2                         PG2
-
-    #define LCD_PINS_ENABLE                 PG7
-    #define LCD_PINS_D4                     PG3
-
-    // CR10_Stock Display needs a different delay setting on SKR PRO v1.1, so undef it here.
-    // It will be defined again at the #HAS_GRAPHICAL_LCD section below.
-    #undef ST7920_DELAY_1
-    #undef ST7920_DELAY_2
-    #undef ST7920_DELAY_3
-
-  #elif ENABLED(MKS_MINI_12864)
-    #define DOGLCD_A0                       PG6
-    #define DOGLCD_CS                       PG3
-
-  #else
-
-    #define LCD_PINS_RS                     PD10
-
-    #define BTN_EN1                         PG10
-    #define BTN_EN2                         PF11
-    #define SD_DETECT_PIN                   PF12
-
-    #define LCD_SDSS                        PB12
-
-    #define LCD_PINS_ENABLE                 PD11
-    #define LCD_PINS_D4                     PG2
-
-    #if ENABLED(FYSETC_MINI_12864)
-      #define DOGLCD_CS                     PD11
-      #define DOGLCD_A0                     PD10
-      //#define LCD_BACKLIGHT_PIN           -1
-      #define LCD_RESET_PIN                 PG2   // Must be high or open for LCD to operate normally.
-      #if EITHER(FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0)
-        #ifndef RGB_LED_R_PIN
-          #define RGB_LED_R_PIN             PG3
-        #endif
-        #ifndef RGB_LED_G_PIN
-          #define RGB_LED_G_PIN             PG6
-        #endif
-        #ifndef RGB_LED_B_PIN
-          #define RGB_LED_B_PIN             PG7
-        #endif
-      #elif ENABLED(FYSETC_MINI_12864_2_1)
-        #define NEOPIXEL_PIN                PG3
-      #endif
-    #endif // !FYSETC_MINI_12864
-
-    #if ENABLED(ULTIPANEL)
-      #define LCD_PINS_D5                   PG3
-      #define LCD_PINS_D6                   PG6
-      #define LCD_PINS_D7                   PG7
-    #endif
-
-  #endif
-
-  // Alter timing for graphical display
-  #if HAS_GRAPHICAL_LCD
-    #define BOARD_ST7920_DELAY_1 DELAY_NS(96)
-    #define BOARD_ST7920_DELAY_2 DELAY_NS(48)
-    #define BOARD_ST7920_DELAY_3 DELAY_NS(600)
-  #endif
-
-#endif // HAS_SPI_LCD
-
-//
-// WIFI
-//
-
-/**
- *          _____
- *      TX | 1 2 | GND      Enable PG1   // Must be high for module to run
- *  Enable | 3 4 | GPIO2    Reset  PG0   // active low, probably OK to leave floating
- *   Reset | 5 6 | GPIO0    GPIO2  PF15  // must be high (ESP3D software configures this with a pullup so OK to leave as floating)
- *     3.3V| 7 8 | RX       GPIO0  PF14  // Leave as unused (ESP3D software configures this with a pullup so OK to leave as floating)
- *           ￣￣
- *            W1
- */
-#define ESP_WIFI_MODULE_COM 6                     // Must also set either SERIAL_PORT or SERIAL_PORT_2 to this
-#define ESP_WIFI_MODULE_BAUDRATE        BAUDRATE  // Must use same BAUDRATE as SERIAL_PORT & SERIAL_PORT_2
-#define ESP_WIFI_MODULE_RESET_PIN           PG0
-#define ESP_WIFI_MODULE_ENABLE_PIN          PG1
-#define ESP_WIFI_MODULE_GPIO0_PIN           PF14
-#define ESP_WIFI_MODULE_GPIO2_PIN           PF15
+#include "pins_BTT_SKR_PRO_common.h"

commit f350e9d0cb6387705cc44d1aa8031958469ae3fa
Author: Leo <leo@nutz.de>
Date:   Fri Jun 5 04:29:47 2020 +0200

    Shorter BTT board names (for LCD info) (#18139)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index ba1ea08796..ccb03e78e5 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -27,7 +27,7 @@
   #error "BIGTREE SKR Pro V1.1 supports up to 3 hotends / E-steppers."
 #endif
 
-#define BOARD_INFO_NAME "BIGTREE SKR Pro 1.1" // redefined?
+#define BOARD_INFO_NAME "BTT SKR Pro V1.1" // redefined?
 
 // Use one of these or SDCard-based Emulation will be used
 #if NO_EEPROM_SELECTED

commit 31eb487da5778f653c771331bcef6b57e3511404
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri May 22 02:02:03 2020 -0500

    whitespace

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 3df81a7842..ba1ea08796 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -352,8 +352,8 @@
  *           ￣￣
  *            W1
  */
-#define ESP_WIFI_MODULE_COM 6                         // Must also set either SERIAL_PORT or SERIAL_PORT_2 to this
-#define ESP_WIFI_MODULE_BAUDRATE            BAUDRATE  // Must use same BAUDRATE as SERIAL_PORT & SERIAL_PORT_2
+#define ESP_WIFI_MODULE_COM 6                     // Must also set either SERIAL_PORT or SERIAL_PORT_2 to this
+#define ESP_WIFI_MODULE_BAUDRATE        BAUDRATE  // Must use same BAUDRATE as SERIAL_PORT & SERIAL_PORT_2
 #define ESP_WIFI_MODULE_RESET_PIN           PG0
 #define ESP_WIFI_MODULE_ENABLE_PIN          PG1
 #define ESP_WIFI_MODULE_GPIO0_PIN           PF14

commit 4680aa659cc9deef619faf2b0a58f2a626c28e0c
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun May 10 23:12:11 2020 -0700

    EEPROM Flash Leveling enabled for more STM32F4 (#17948)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 8eadf523f3..3df81a7842 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -35,6 +35,12 @@
   #define FLASH_EEPROM_EMULATION                  // Use Flash-based EEPROM emulation
 #endif
 
+#if ENABLED(FLASH_EEPROM_EMULATION)
+  // Decrease delays and flash wear by spreading writes across the
+  // 128 kB sector allocated for EEPROM emulation.
+  #define FLASH_EEPROM_LEVELING
+#endif
+
 //
 // Servos
 //

commit 8f3d17699aeccd04ca23b933e43b4aad28e66c42
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Fri May 8 02:43:53 2020 -0500

    Init all ESP01 (module) WIFI pins (#17679)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 8d68ca3f9f..8eadf523f3 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -340,13 +340,15 @@
 /**
  *          _____
  *      TX | 1 2 | GND      Enable PG1   // Must be high for module to run
- *  Enable | 3 4 | GPIO2    Reset  PG0   // Leave as unused (OK to leave floating)
- *   Reset | 5 6 | GPIO0    GPIO2  PF15  // Leave as unused (best to leave floating)
- *     3.3V| 7 8 | RX       GPIO0  PF14  // Leave as unused (best to leave floating)
+ *  Enable | 3 4 | GPIO2    Reset  PG0   // active low, probably OK to leave floating
+ *   Reset | 5 6 | GPIO0    GPIO2  PF15  // must be high (ESP3D software configures this with a pullup so OK to leave as floating)
+ *     3.3V| 7 8 | RX       GPIO0  PF14  // Leave as unused (ESP3D software configures this with a pullup so OK to leave as floating)
  *           ￣￣
  *            W1
  */
-#define ESP_WIFI_MODULE_COM 6                     // Must also set SERIAL_PORT or SERIAL_PORT_2 to this
-#define ESP_WIFI_MODULE_BAUDRATE        BAUDRATE  // Must use same BAUDRATE as SERIAL_PORT & SERIAL_PORT_2
-#define ESP_WIFI_MODULE_RESET_PIN           -1
+#define ESP_WIFI_MODULE_COM 6                         // Must also set either SERIAL_PORT or SERIAL_PORT_2 to this
+#define ESP_WIFI_MODULE_BAUDRATE            BAUDRATE  // Must use same BAUDRATE as SERIAL_PORT & SERIAL_PORT_2
+#define ESP_WIFI_MODULE_RESET_PIN           PG0
 #define ESP_WIFI_MODULE_ENABLE_PIN          PG1
+#define ESP_WIFI_MODULE_GPIO0_PIN           PF14
+#define ESP_WIFI_MODULE_GPIO2_PIN           PF15

commit 5e6faa999d1e1e7ce7dfd51943e1259e56399115
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 29 14:46:33 2020 -0500

    Refine EEPROM types / flags (#17772)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 02f2c9071b..8d68ca3f9f 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -30,8 +30,10 @@
 #define BOARD_INFO_NAME "BIGTREE SKR Pro 1.1" // redefined?
 
 // Use one of these or SDCard-based Emulation will be used
-//#define SRAM_EEPROM_EMULATION                   // Use BackSRAM-based EEPROM emulation
-#define FLASH_EEPROM_EMULATION                    // Use Flash-based EEPROM emulation
+#if NO_EEPROM_SELECTED
+  //#define SRAM_EEPROM_EMULATION                 // Use BackSRAM-based EEPROM emulation
+  #define FLASH_EEPROM_EMULATION                  // Use Flash-based EEPROM emulation
+#endif
 
 //
 // Servos

commit c56b66543d57d7fc7148df8891f20e30718dd491
Author: Neil van Geffen <neilvangeffen@gmail.com>
Date:   Tue Apr 28 01:27:14 2020 +1200

    Permit Stall Sensitivity of 0 (#17722)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index f9e43c0043..02f2c9071b 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -51,7 +51,7 @@
 //
 // Limit Switches
 //
-#if X_STALL_SENSITIVITY
+#ifdef X_STALL_SENSITIVITY
   #define X_STOP_PIN                  X_DIAG_PIN
   #if X_HOME_DIR < 0
     #define X_MAX_PIN                       PE15  // E0
@@ -63,7 +63,7 @@
   #define X_MAX_PIN                         PE15  // E0
 #endif
 
-#if Y_STALL_SENSITIVITY
+#ifdef Y_STALL_SENSITIVITY
   #define Y_STOP_PIN                  Y_DIAG_PIN
   #if Y_HOME_DIR < 0
     #define Y_MAX_PIN                       PE10  // E1
@@ -75,7 +75,7 @@
   #define Y_MAX_PIN                         PE10  // E1
 #endif
 
-#if Z_STALL_SENSITIVITY
+#ifdef Z_STALL_SENSITIVITY
   #define Z_STOP_PIN                  Z_DIAG_PIN
   #if Z_HOME_DIR < 0
     #define Z_MAX_PIN                       PG5   // E2

commit 88bdd26c9998dc7524371f02660e76f778091d73
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Apr 22 15:04:21 2020 -0500

    Clean up SKR Pro v1.1 pins (#17653)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 84b9796774..f9e43c0043 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -218,7 +218,7 @@
 #define FAN2_PIN                            PE6
 
 #ifndef E0_AUTO_FAN_PIN
-  #define E0_AUTO_FAN_PIN                   PC9
+  #define E0_AUTO_FAN_PIN               FAN1_PIN
 #endif
 
 //
@@ -344,7 +344,7 @@
  *           ￣￣
  *            W1
  */
-#define ESP_WIFI_MODULE_COM 6                     // must also set SERIAL_PORT or SERIAL_PORT_2 to this
-#define ESP_WIFI_MODULE_BAUDRATE        BAUDRATE  //115200   // use BAUDRATE ?  would guarantee same baud rate as SERIAL_PORT & SERIAL_PORT_2
+#define ESP_WIFI_MODULE_COM 6                     // Must also set SERIAL_PORT or SERIAL_PORT_2 to this
+#define ESP_WIFI_MODULE_BAUDRATE        BAUDRATE  // Must use same BAUDRATE as SERIAL_PORT & SERIAL_PORT_2
 #define ESP_WIFI_MODULE_RESET_PIN           -1
 #define ESP_WIFI_MODULE_ENABLE_PIN          PG1

commit f5d809f3667846e962c86d1d4f4b8ac97e8a3e5f
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Thu Apr 16 03:55:33 2020 -0500

    SKR Pro 1.1 WiFi and LCD SD card support (#17531)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 77acbc5b48..84b9796774 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -31,7 +31,7 @@
 
 // Use one of these or SDCard-based Emulation will be used
 //#define SRAM_EEPROM_EMULATION                   // Use BackSRAM-based EEPROM emulation
-//#define FLASH_EEPROM_EMULATION                  // Use Flash-based EEPROM emulation
+#define FLASH_EEPROM_EMULATION                    // Use Flash-based EEPROM emulation
 
 //
 // Servos
@@ -215,7 +215,11 @@
 #define HEATER_BED_PIN                      PD12  // Hotbed
 #define FAN_PIN                             PC8   // Fan0
 #define FAN1_PIN                            PE5   // Fan1
-#define FAN2_PIN                            PE6   // Fan2
+#define FAN2_PIN                            PE6
+
+#ifndef E0_AUTO_FAN_PIN
+  #define E0_AUTO_FAN_PIN                   PC9
+#endif
 
 //
 // Misc. Functions
@@ -227,16 +231,14 @@
 
 //
 // Onboard SD card
-//   NOT compatible with LCD
+// Must use soft SPI because Marlin's default hardware SPI is tied to LCD's EXP2
 //
-#if SDCARD_CONNECTION == ONBOARD && !HAS_SPI_LCD
+#if SD_CONNECTION_IS(ONBOARD)
   #define SOFTWARE_SPI                            // Use soft SPI for onboard SD
   #define SDSS                              PA4
   #define SCK_PIN                           PA5
   #define MISO_PIN                          PA6
   #define MOSI_PIN                          PB5
-#else
-  #define SDSS                              PB12
 #endif
 
 /**
@@ -256,6 +258,9 @@
 #if HAS_SPI_LCD
   #define BEEPER_PIN                        PG4
   #define BTN_ENC                           PA8
+  #if SD_CONNECTION_IS(LCD)
+    #define SDSS                            PB12  // Uses default hardware SPI for LCD's SD
+  #endif
 
   #if ENABLED(CR10_STOCKDISPLAY)
     #define LCD_PINS_RS                     PG6
@@ -272,6 +277,10 @@
     #undef ST7920_DELAY_2
     #undef ST7920_DELAY_3
 
+  #elif ENABLED(MKS_MINI_12864)
+    #define DOGLCD_A0                       PG6
+    #define DOGLCD_CS                       PG3
+
   #else
 
     #define LCD_PINS_RS                     PD10
@@ -321,3 +330,21 @@
   #endif
 
 #endif // HAS_SPI_LCD
+
+//
+// WIFI
+//
+
+/**
+ *          _____
+ *      TX | 1 2 | GND      Enable PG1   // Must be high for module to run
+ *  Enable | 3 4 | GPIO2    Reset  PG0   // Leave as unused (OK to leave floating)
+ *   Reset | 5 6 | GPIO0    GPIO2  PF15  // Leave as unused (best to leave floating)
+ *     3.3V| 7 8 | RX       GPIO0  PF14  // Leave as unused (best to leave floating)
+ *           ￣￣
+ *            W1
+ */
+#define ESP_WIFI_MODULE_COM 6                     // must also set SERIAL_PORT or SERIAL_PORT_2 to this
+#define ESP_WIFI_MODULE_BAUDRATE        BAUDRATE  //115200   // use BAUDRATE ?  would guarantee same baud rate as SERIAL_PORT & SERIAL_PORT_2
+#define ESP_WIFI_MODULE_RESET_PIN           -1
+#define ESP_WIFI_MODULE_ENABLE_PIN          PG1

commit cdbc7cc52c9bc0f1889384e8db2dc46a93f3fb94
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Apr 14 19:08:55 2020 -0500

    Define En DIAG pins for auto-assigns

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 2755771030..77acbc5b48 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -44,6 +44,9 @@
 #define X_DIAG_PIN                          PB10  // X-
 #define Y_DIAG_PIN                          PE12  // Y-
 #define Z_DIAG_PIN                          PG8   // Z-
+#define E0_DIAG_PIN                         PE15  // E0
+#define E1_DIAG_PIN                         PE10  // E1
+#define E2_DIAG_PIN                         PG5   // E2
 
 //
 // Limit Switches

commit cae2b7bf4e9995f26e919a6a1534c0bd3473a717
Author: Alexander Amelkin <alexander@amelkin.msk.ru>
Date:   Wed Apr 15 03:03:59 2020 +0300

    SKR Pro V1.1 StallGuard pins (#17550)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 4dbdf0e77f..2755771030 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -38,18 +38,54 @@
 //
 #define SERVO0_PIN                          PA1
 
+//
+// Trinamic Stallguard pins
+//
+#define X_DIAG_PIN                          PB10  // X-
+#define Y_DIAG_PIN                          PE12  // Y-
+#define Z_DIAG_PIN                          PG8   // Z-
+
 //
 // Limit Switches
 //
-#define X_MIN_PIN                           PB10
-#define X_MAX_PIN                           PE15
-#define Y_MIN_PIN                           PE12
-#define Y_MAX_PIN                           PE10
-#define Z_MIN_PIN                           PG8
-#define Z_MAX_PIN                           PG5
+#if X_STALL_SENSITIVITY
+  #define X_STOP_PIN                  X_DIAG_PIN
+  #if X_HOME_DIR < 0
+    #define X_MAX_PIN                       PE15  // E0
+  #else
+    #define X_MIN_PIN                       PE15  // E0
+  #endif
+#else
+  #define X_MIN_PIN                         PB10  // X-
+  #define X_MAX_PIN                         PE15  // E0
+#endif
+
+#if Y_STALL_SENSITIVITY
+  #define Y_STOP_PIN                  Y_DIAG_PIN
+  #if Y_HOME_DIR < 0
+    #define Y_MAX_PIN                       PE10  // E1
+  #else
+    #define Y_MIN_PIN                       PE10  // E1
+  #endif
+#else
+  #define Y_MIN_PIN                         PE12  // Y-
+  #define Y_MAX_PIN                         PE10  // E1
+#endif
+
+#if Z_STALL_SENSITIVITY
+  #define Z_STOP_PIN                  Z_DIAG_PIN
+  #if Z_HOME_DIR < 0
+    #define Z_MAX_PIN                       PG5   // E2
+  #else
+    #define Z_MIN_PIN                       PG5   // E2
+  #endif
+#else
+  #define Z_MIN_PIN                         PG8   // Z-
+  #define Z_MAX_PIN                         PG5   // E2
+#endif
 
 //
-// Z Probe must be this pins
+// Z Probe must be this pin
 //
 #ifndef Z_MIN_PROBE_PIN
   #define Z_MIN_PROBE_PIN                   PA2

commit 2c325c2a7d9b66b50d8585a1d5ced422ed88b1ae
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Mar 21 21:13:19 2020 -0500

    Format some pins files

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
index 3376a99711..4dbdf0e77f 100644
--- a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -30,74 +30,74 @@
 #define BOARD_INFO_NAME "BIGTREE SKR Pro 1.1" // redefined?
 
 // Use one of these or SDCard-based Emulation will be used
-//#define SRAM_EEPROM_EMULATION   // Use BackSRAM-based EEPROM emulation
-//#define FLASH_EEPROM_EMULATION  // Use Flash-based EEPROM emulation
+//#define SRAM_EEPROM_EMULATION                   // Use BackSRAM-based EEPROM emulation
+//#define FLASH_EEPROM_EMULATION                  // Use Flash-based EEPROM emulation
 
 //
 // Servos
 //
-#define SERVO0_PIN         PA1
+#define SERVO0_PIN                          PA1
 
 //
 // Limit Switches
 //
-#define X_MIN_PIN          PB10
-#define X_MAX_PIN          PE15
-#define Y_MIN_PIN          PE12
-#define Y_MAX_PIN          PE10
-#define Z_MIN_PIN          PG8
-#define Z_MAX_PIN          PG5
+#define X_MIN_PIN                           PB10
+#define X_MAX_PIN                           PE15
+#define Y_MIN_PIN                           PE12
+#define Y_MAX_PIN                           PE10
+#define Z_MIN_PIN                           PG8
+#define Z_MAX_PIN                           PG5
 
 //
 // Z Probe must be this pins
 //
 #ifndef Z_MIN_PROBE_PIN
-  #define Z_MIN_PROBE_PIN  PA2
+  #define Z_MIN_PROBE_PIN                   PA2
 #endif
 
 //
 // Steppers
 //
-#define X_STEP_PIN         PE9
-#define X_DIR_PIN          PF1
-#define X_ENABLE_PIN       PF2
+#define X_STEP_PIN                          PE9
+#define X_DIR_PIN                           PF1
+#define X_ENABLE_PIN                        PF2
 #ifndef X_CS_PIN
-  #define X_CS_PIN         PA15
+  #define X_CS_PIN                          PA15
 #endif
 
-#define Y_STEP_PIN         PE11
-#define Y_DIR_PIN          PE8
-#define Y_ENABLE_PIN       PD7
+#define Y_STEP_PIN                          PE11
+#define Y_DIR_PIN                           PE8
+#define Y_ENABLE_PIN                        PD7
  #ifndef Y_CS_PIN
-  #define Y_CS_PIN         PB8
+  #define Y_CS_PIN                          PB8
 #endif
 
-#define Z_STEP_PIN         PE13
-#define Z_DIR_PIN          PC2
-#define Z_ENABLE_PIN       PC0
+#define Z_STEP_PIN                          PE13
+#define Z_DIR_PIN                           PC2
+#define Z_ENABLE_PIN                        PC0
 #ifndef Z_CS_PIN
-  #define Z_CS_PIN         PB9
+  #define Z_CS_PIN                          PB9
 #endif
 
-#define E0_STEP_PIN        PE14
-#define E0_DIR_PIN         PA0
-#define E0_ENABLE_PIN      PC3
+#define E0_STEP_PIN                         PE14
+#define E0_DIR_PIN                          PA0
+#define E0_ENABLE_PIN                       PC3
 #ifndef E0_CS_PIN
-  #define E0_CS_PIN        PB3
+  #define E0_CS_PIN                         PB3
 #endif
 
-#define E1_STEP_PIN        PD15
-#define E1_DIR_PIN         PE7
-#define E1_ENABLE_PIN      PA3
+#define E1_STEP_PIN                         PD15
+#define E1_DIR_PIN                          PE7
+#define E1_ENABLE_PIN                       PA3
 #ifndef E1_CS_PIN
-  #define E1_CS_PIN        PG15
+  #define E1_CS_PIN                         PG15
 #endif
 
-#define E2_STEP_PIN        PD13
-#define E2_DIR_PIN         PG9
-#define E2_ENABLE_PIN      PF0
+#define E2_STEP_PIN                         PD13
+#define E2_DIR_PIN                          PG9
+#define E2_ENABLE_PIN                       PF0
 #ifndef E2_CS_PIN
-  #define E2_CS_PIN        PG12
+  #define E2_CS_PIN                         PG12
 #endif
 
 //
@@ -105,13 +105,13 @@
 //
 #if ENABLED(TMC_USE_SW_SPI)
   #ifndef TMC_SW_MOSI
-    #define TMC_SW_MOSI    PC12
+    #define TMC_SW_MOSI                     PC12
   #endif
   #ifndef TMC_SW_MISO
-    #define TMC_SW_MISO    PC11
+    #define TMC_SW_MISO                     PC11
   #endif
   #ifndef TMC_SW_SCK
-    #define TMC_SW_SCK     PC10
+    #define TMC_SW_SCK                      PC10
   #endif
 #endif
 
@@ -137,23 +137,23 @@
   //
   // Software serial
   //
-  #define X_SERIAL_TX_PIN  PC13
-  #define X_SERIAL_RX_PIN  PC13
+  #define X_SERIAL_TX_PIN                   PC13
+  #define X_SERIAL_RX_PIN                   PC13
 
-  #define Y_SERIAL_TX_PIN  PE3
-  #define Y_SERIAL_RX_PIN  PE3
+  #define Y_SERIAL_TX_PIN                   PE3
+  #define Y_SERIAL_RX_PIN                   PE3
 
-  #define Z_SERIAL_TX_PIN  PE1
-  #define Z_SERIAL_RX_PIN  PE1
+  #define Z_SERIAL_TX_PIN                   PE1
+  #define Z_SERIAL_RX_PIN                   PE1
 
-  #define E0_SERIAL_TX_PIN PD4
-  #define E0_SERIAL_RX_PIN PD4
+  #define E0_SERIAL_TX_PIN                  PD4
+  #define E0_SERIAL_RX_PIN                  PD4
 
-  #define E1_SERIAL_TX_PIN PD1
-  #define E1_SERIAL_RX_PIN PD1
+  #define E1_SERIAL_TX_PIN                  PD1
+  #define E1_SERIAL_RX_PIN                  PD1
 
-  #define E2_SERIAL_TX_PIN PD6
-  #define E2_SERIAL_RX_PIN PD6
+  #define E2_SERIAL_TX_PIN                  PD6
+  #define E2_SERIAL_RX_PIN                  PD6
 
   // Reduce baud rate to improve software serial reliability
   #define TMC_BAUD_RATE 19200
@@ -162,28 +162,28 @@
 //
 // Temperature Sensors
 //
-#define TEMP_0_PIN         PF4  // T1 <-> E0
-#define TEMP_1_PIN         PF5  // T2 <-> E1
-#define TEMP_2_PIN         PF6  // T3 <-> E2
-#define TEMP_BED_PIN       PF3  // T0 <-> Bed
+#define TEMP_0_PIN                          PF4   // T1 <-> E0
+#define TEMP_1_PIN                          PF5   // T2 <-> E1
+#define TEMP_2_PIN                          PF6   // T3 <-> E2
+#define TEMP_BED_PIN                        PF3   // T0 <-> Bed
 
 //
 // Heaters / Fans
 //
-#define HEATER_0_PIN       PB1  // Heater0
-#define HEATER_1_PIN       PD14 // Heater1
-#define HEATER_2_PIN       PB0  // Heater1
-#define HEATER_BED_PIN     PD12 // Hotbed
-#define FAN_PIN            PC8  // Fan0
-#define FAN1_PIN           PE5  // Fan1
-#define FAN2_PIN           PE6  // Fan2
+#define HEATER_0_PIN                        PB1   // Heater0
+#define HEATER_1_PIN                        PD14  // Heater1
+#define HEATER_2_PIN                        PB0   // Heater1
+#define HEATER_BED_PIN                      PD12  // Hotbed
+#define FAN_PIN                             PC8   // Fan0
+#define FAN1_PIN                            PE5   // Fan1
+#define FAN2_PIN                            PE6   // Fan2
 
 //
 // Misc. Functions
 //
 
 #ifndef SDCARD_CONNECTION
-  #define SDCARD_CONNECTION LCD
+  #define SDCARD_CONNECTION                  LCD
 #endif
 
 //
@@ -191,16 +191,15 @@
 //   NOT compatible with LCD
 //
 #if SDCARD_CONNECTION == ONBOARD && !HAS_SPI_LCD
-  #define SOFTWARE_SPI            // Use soft SPI for onboard SD
-  #define SDSS             PA4
-  #define SCK_PIN          PA5
-  #define MISO_PIN         PA6
-  #define MOSI_PIN         PB5
+  #define SOFTWARE_SPI                            // Use soft SPI for onboard SD
+  #define SDSS                              PA4
+  #define SCK_PIN                           PA5
+  #define MISO_PIN                          PA6
+  #define MOSI_PIN                          PB5
 #else
-  #define SDSS             PB12
+  #define SDSS                              PB12
 #endif
 
-
 /**
  *               _____                                             _____
  *           NC | · · | GND                                    5V | · · | GND
@@ -216,17 +215,17 @@
 // LCDs and Controllers
 //
 #if HAS_SPI_LCD
-  #define BEEPER_PIN       PG4
-  #define BTN_ENC          PA8
+  #define BEEPER_PIN                        PG4
+  #define BTN_ENC                           PA8
 
   #if ENABLED(CR10_STOCKDISPLAY)
-    #define LCD_PINS_RS    PG6
+    #define LCD_PINS_RS                     PG6
 
-    #define BTN_EN1        PD11
-    #define BTN_EN2        PG2
+    #define BTN_EN1                         PD11
+    #define BTN_EN2                         PG2
 
-    #define LCD_PINS_ENABLE PG7
-    #define LCD_PINS_D4    PG3
+    #define LCD_PINS_ENABLE                 PG7
+    #define LCD_PINS_D4                     PG3
 
     // CR10_Stock Display needs a different delay setting on SKR PRO v1.1, so undef it here.
     // It will be defined again at the #HAS_GRAPHICAL_LCD section below.
@@ -234,44 +233,43 @@
     #undef ST7920_DELAY_2
     #undef ST7920_DELAY_3
 
-
   #else
 
-    #define LCD_PINS_RS    PD10
+    #define LCD_PINS_RS                     PD10
 
-    #define BTN_EN1        PG10
-    #define BTN_EN2        PF11
-    #define SD_DETECT_PIN  PF12
+    #define BTN_EN1                         PG10
+    #define BTN_EN2                         PF11
+    #define SD_DETECT_PIN                   PF12
 
-    #define LCD_SDSS       PB12
+    #define LCD_SDSS                        PB12
 
-    #define LCD_PINS_ENABLE PD11
-    #define LCD_PINS_D4    PG2
+    #define LCD_PINS_ENABLE                 PD11
+    #define LCD_PINS_D4                     PG2
 
     #if ENABLED(FYSETC_MINI_12864)
-      #define DOGLCD_CS    PD11
-      #define DOGLCD_A0    PD10
-      //#define LCD_BACKLIGHT_PIN -1
-      #define LCD_RESET_PIN PG2   // Must be high or open for LCD to operate normally.
+      #define DOGLCD_CS                     PD11
+      #define DOGLCD_A0                     PD10
+      //#define LCD_BACKLIGHT_PIN           -1
+      #define LCD_RESET_PIN                 PG2   // Must be high or open for LCD to operate normally.
       #if EITHER(FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0)
         #ifndef RGB_LED_R_PIN
-          #define RGB_LED_R_PIN PG3
+          #define RGB_LED_R_PIN             PG3
         #endif
         #ifndef RGB_LED_G_PIN
-          #define RGB_LED_G_PIN PG6
+          #define RGB_LED_G_PIN             PG6
         #endif
         #ifndef RGB_LED_B_PIN
-          #define RGB_LED_B_PIN PG7
+          #define RGB_LED_B_PIN             PG7
         #endif
       #elif ENABLED(FYSETC_MINI_12864_2_1)
-        #define NEOPIXEL_PIN    PG3
+        #define NEOPIXEL_PIN                PG3
       #endif
     #endif // !FYSETC_MINI_12864
 
     #if ENABLED(ULTIPANEL)
-      #define LCD_PINS_D5  PG3
-      #define LCD_PINS_D6  PG6
-      #define LCD_PINS_D7  PG7
+      #define LCD_PINS_D5                   PG3
+      #define LCD_PINS_D6                   PG6
+      #define LCD_PINS_D7                   PG7
     #endif
 
   #endif

commit 04cea864bcc197a91a162f8cc48cd6588260f8af
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 20 23:45:00 2020 -0500

    Split up STM32 pins files (#17212)

diff --git a/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
new file mode 100644
index 0000000000..3376a99711
--- /dev/null
+++ b/Marlin/src/pins/stm32f4/pins_BTT_SKR_PRO_V1_1.h
@@ -0,0 +1,286 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#ifndef TARGET_STM32F4
+  #error "Oops! Select an STM32F4 board in 'Tools > Board.'"
+#elif HOTENDS > 3 || E_STEPPERS > 3
+  #error "BIGTREE SKR Pro V1.1 supports up to 3 hotends / E-steppers."
+#endif
+
+#define BOARD_INFO_NAME "BIGTREE SKR Pro 1.1" // redefined?
+
+// Use one of these or SDCard-based Emulation will be used
+//#define SRAM_EEPROM_EMULATION   // Use BackSRAM-based EEPROM emulation
+//#define FLASH_EEPROM_EMULATION  // Use Flash-based EEPROM emulation
+
+//
+// Servos
+//
+#define SERVO0_PIN         PA1
+
+//
+// Limit Switches
+//
+#define X_MIN_PIN          PB10
+#define X_MAX_PIN          PE15
+#define Y_MIN_PIN          PE12
+#define Y_MAX_PIN          PE10
+#define Z_MIN_PIN          PG8
+#define Z_MAX_PIN          PG5
+
+//
+// Z Probe must be this pins
+//
+#ifndef Z_MIN_PROBE_PIN
+  #define Z_MIN_PROBE_PIN  PA2
+#endif
+
+//
+// Steppers
+//
+#define X_STEP_PIN         PE9
+#define X_DIR_PIN          PF1
+#define X_ENABLE_PIN       PF2
+#ifndef X_CS_PIN
+  #define X_CS_PIN         PA15
+#endif
+
+#define Y_STEP_PIN         PE11
+#define Y_DIR_PIN          PE8
+#define Y_ENABLE_PIN       PD7
+ #ifndef Y_CS_PIN
+  #define Y_CS_PIN         PB8
+#endif
+
+#define Z_STEP_PIN         PE13
+#define Z_DIR_PIN          PC2
+#define Z_ENABLE_PIN       PC0
+#ifndef Z_CS_PIN
+  #define Z_CS_PIN         PB9
+#endif
+
+#define E0_STEP_PIN        PE14
+#define E0_DIR_PIN         PA0
+#define E0_ENABLE_PIN      PC3
+#ifndef E0_CS_PIN
+  #define E0_CS_PIN        PB3
+#endif
+
+#define E1_STEP_PIN        PD15
+#define E1_DIR_PIN         PE7
+#define E1_ENABLE_PIN      PA3
+#ifndef E1_CS_PIN
+  #define E1_CS_PIN        PG15
+#endif
+
+#define E2_STEP_PIN        PD13
+#define E2_DIR_PIN         PG9
+#define E2_ENABLE_PIN      PF0
+#ifndef E2_CS_PIN
+  #define E2_CS_PIN        PG12
+#endif
+
+//
+// Software SPI pins for TMC2130 stepper drivers
+//
+#if ENABLED(TMC_USE_SW_SPI)
+  #ifndef TMC_SW_MOSI
+    #define TMC_SW_MOSI    PC12
+  #endif
+  #ifndef TMC_SW_MISO
+    #define TMC_SW_MISO    PC11
+  #endif
+  #ifndef TMC_SW_SCK
+    #define TMC_SW_SCK     PC10
+  #endif
+#endif
+
+#if HAS_TMC_UART
+  /**
+   * TMC2208/TMC2209 stepper drivers
+   *
+   * Hardware serial communication ports.
+   * If undefined software serial is used according to the pins below
+   */
+  //#define X_HARDWARE_SERIAL  Serial
+  //#define X2_HARDWARE_SERIAL Serial1
+  //#define Y_HARDWARE_SERIAL  Serial1
+  //#define Y2_HARDWARE_SERIAL Serial1
+  //#define Z_HARDWARE_SERIAL  Serial1
+  //#define Z2_HARDWARE_SERIAL Serial1
+  //#define E0_HARDWARE_SERIAL Serial1
+  //#define E1_HARDWARE_SERIAL Serial1
+  //#define E2_HARDWARE_SERIAL Serial1
+  //#define E3_HARDWARE_SERIAL Serial1
+  //#define E4_HARDWARE_SERIAL Serial1
+
+  //
+  // Software serial
+  //
+  #define X_SERIAL_TX_PIN  PC13
+  #define X_SERIAL_RX_PIN  PC13
+
+  #define Y_SERIAL_TX_PIN  PE3
+  #define Y_SERIAL_RX_PIN  PE3
+
+  #define Z_SERIAL_TX_PIN  PE1
+  #define Z_SERIAL_RX_PIN  PE1
+
+  #define E0_SERIAL_TX_PIN PD4
+  #define E0_SERIAL_RX_PIN PD4
+
+  #define E1_SERIAL_TX_PIN PD1
+  #define E1_SERIAL_RX_PIN PD1
+
+  #define E2_SERIAL_TX_PIN PD6
+  #define E2_SERIAL_RX_PIN PD6
+
+  // Reduce baud rate to improve software serial reliability
+  #define TMC_BAUD_RATE 19200
+#endif
+
+//
+// Temperature Sensors
+//
+#define TEMP_0_PIN         PF4  // T1 <-> E0
+#define TEMP_1_PIN         PF5  // T2 <-> E1
+#define TEMP_2_PIN         PF6  // T3 <-> E2
+#define TEMP_BED_PIN       PF3  // T0 <-> Bed
+
+//
+// Heaters / Fans
+//
+#define HEATER_0_PIN       PB1  // Heater0
+#define HEATER_1_PIN       PD14 // Heater1
+#define HEATER_2_PIN       PB0  // Heater1
+#define HEATER_BED_PIN     PD12 // Hotbed
+#define FAN_PIN            PC8  // Fan0
+#define FAN1_PIN           PE5  // Fan1
+#define FAN2_PIN           PE6  // Fan2
+
+//
+// Misc. Functions
+//
+
+#ifndef SDCARD_CONNECTION
+  #define SDCARD_CONNECTION LCD
+#endif
+
+//
+// Onboard SD card
+//   NOT compatible with LCD
+//
+#if SDCARD_CONNECTION == ONBOARD && !HAS_SPI_LCD
+  #define SOFTWARE_SPI            // Use soft SPI for onboard SD
+  #define SDSS             PA4
+  #define SCK_PIN          PA5
+  #define MISO_PIN         PA6
+  #define MOSI_PIN         PB5
+#else
+  #define SDSS             PB12
+#endif
+
+
+/**
+ *               _____                                             _____
+ *           NC | · · | GND                                    5V | · · | GND
+ *        RESET | · · | PF12(SD_DETECT)             (LCD_D7)  PG7 | · · | PG6  (LCD_D6)
+ *   (MOSI)PB15 | · · | PF11(BTN_EN2)               (LCD_D5)  PG3 | · · | PG2  (LCD_D4)
+ *  (SD_SS)PB12 | · · | PG10(BTN_EN1)               (LCD_RS) PD10 | · · | PD11 (LCD_EN)
+ *    (SCK)PB13 | · · | PB14(MISO)                 (BTN_ENC)  PA8 | · · | PG4  (BEEPER)
+ *               ￣￣                                               ￣￣
+ *               EXP2                                              EXP1
+ */
+
+//
+// LCDs and Controllers
+//
+#if HAS_SPI_LCD
+  #define BEEPER_PIN       PG4
+  #define BTN_ENC          PA8
+
+  #if ENABLED(CR10_STOCKDISPLAY)
+    #define LCD_PINS_RS    PG6
+
+    #define BTN_EN1        PD11
+    #define BTN_EN2        PG2
+
+    #define LCD_PINS_ENABLE PG7
+    #define LCD_PINS_D4    PG3
+
+    // CR10_Stock Display needs a different delay setting on SKR PRO v1.1, so undef it here.
+    // It will be defined again at the #HAS_GRAPHICAL_LCD section below.
+    #undef ST7920_DELAY_1
+    #undef ST7920_DELAY_2
+    #undef ST7920_DELAY_3
+
+
+  #else
+
+    #define LCD_PINS_RS    PD10
+
+    #define BTN_EN1        PG10
+    #define BTN_EN2        PF11
+    #define SD_DETECT_PIN  PF12
+
+    #define LCD_SDSS       PB12
+
+    #define LCD_PINS_ENABLE PD11
+    #define LCD_PINS_D4    PG2
+
+    #if ENABLED(FYSETC_MINI_12864)
+      #define DOGLCD_CS    PD11
+      #define DOGLCD_A0    PD10
+      //#define LCD_BACKLIGHT_PIN -1
+      #define LCD_RESET_PIN PG2   // Must be high or open for LCD to operate normally.
+      #if EITHER(FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0)
+        #ifndef RGB_LED_R_PIN
+          #define RGB_LED_R_PIN PG3
+        #endif
+        #ifndef RGB_LED_G_PIN
+          #define RGB_LED_G_PIN PG6
+        #endif
+        #ifndef RGB_LED_B_PIN
+          #define RGB_LED_B_PIN PG7
+        #endif
+      #elif ENABLED(FYSETC_MINI_12864_2_1)
+        #define NEOPIXEL_PIN    PG3
+      #endif
+    #endif // !FYSETC_MINI_12864
+
+    #if ENABLED(ULTIPANEL)
+      #define LCD_PINS_D5  PG3
+      #define LCD_PINS_D6  PG6
+      #define LCD_PINS_D7  PG7
+    #endif
+
+  #endif
+
+  // Alter timing for graphical display
+  #if HAS_GRAPHICAL_LCD
+    #define BOARD_ST7920_DELAY_1 DELAY_NS(96)
+    #define BOARD_ST7920_DELAY_2 DELAY_NS(48)
+    #define BOARD_ST7920_DELAY_3 DELAY_NS(600)
+  #endif
+
+#endif // HAS_SPI_LCD
