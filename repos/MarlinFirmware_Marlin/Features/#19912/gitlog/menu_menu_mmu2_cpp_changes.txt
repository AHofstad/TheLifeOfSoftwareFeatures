commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index ca3627ce10..c9d163357b 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -22,7 +22,7 @@
 
 #include "../../inc/MarlinConfig.h"
 
-#if BOTH(HAS_MARLINUI_MENU, MMU2_MENUS)
+#if ALL(HAS_MARLINUI_MENU, MMU2_MENUS)
 
 #include "../../MarlinCore.h"
 #include "../../feature/mmu/mmu2.h"

commit 06aed792c08ee2e105b034601a4ea773d0869dfd
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sat May 13 23:23:23 2023 +0200

    ü©π MMU2 unload followup (#25825)
    
    Followup to #20147

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index a6ce147024..ca3627ce10 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -47,7 +47,7 @@ void _mmu2_load_to_feeder(const uint8_t index) {
 }
 
 void action_mmu2_load_all() {
-  EXTRUDER_LOOP() _mmu2_load_filament(e);
+  EXTRUDER_LOOP() _mmu2_load_to_feeder(e);
   ui.return_to_status();
 }
 

commit 001d1fd7cb86306cf6e25c11a91d0b2e478007bd
Author: Thomas Niccolo Reyes <niccoreyes@gmail.com>
Date:   Fri May 5 07:09:36 2023 +0800

    üö∏ Improve MMU2 unload (like original MMU2S) (#20147)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 22230687e4..a6ce147024 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -33,20 +33,19 @@
 // Load Filament
 //
 
-inline void action_mmu2_load_filament_to_nozzle(const uint8_t tool) {
-  ui.reset_status();
+inline void action_mmu2_load_to_nozzle(const uint8_t tool) {
   ui.return_to_status();
   ui.status_printf(0, GET_TEXT_F(MSG_MMU2_LOADING_FILAMENT), int(tool + 1));
-  if (mmu2.load_filament_to_nozzle(tool)) ui.reset_status();
-  ui.return_to_status();
+  if (mmu2.load_to_nozzle(tool)) ui.reset_status();
 }
 
-void _mmu2_load_filament(uint8_t index) {
+void _mmu2_load_to_feeder(const uint8_t index) {
   ui.return_to_status();
   ui.status_printf(0, GET_TEXT_F(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
-  mmu2.load_filament(index);
+  mmu2.load_to_feeder(index);
   ui.reset_status();
 }
+
 void action_mmu2_load_all() {
   EXTRUDER_LOOP() _mmu2_load_filament(e);
   ui.return_to_status();
@@ -56,14 +55,14 @@ void menu_mmu2_load_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
   ACTION_ITEM(MSG_MMU2_ALL, action_mmu2_load_all);
-  EXTRUDER_LOOP() ACTION_ITEM_N(e, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(MenuItemBase::itemIndex); });
+  EXTRUDER_LOOP() ACTION_ITEM_N(e, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_to_feeder(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
 void menu_mmu2_load_to_nozzle() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  EXTRUDER_LOOP() ACTION_ITEM_N(e, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(MenuItemBase::itemIndex); });
+  EXTRUDER_LOOP() ACTION_ITEM_N(e, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_to_nozzle(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
@@ -117,7 +116,7 @@ void menu_mmu2() {
 // T* Choose Filament
 //
 
-uint8_t feeder_index;
+int8_t feeder_index;
 bool wait_for_mmu_menu;
 
 inline void action_mmu2_chosen(const uint8_t index) {
@@ -144,10 +143,10 @@ void menu_mmu2_pause() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, SS_DEFAULT|SS_INVERT);
   #endif
-  ACTION_ITEM(MSG_MMU2_RESUME, []{ wait_for_mmu_menu = false; });
+  ACTION_ITEM(MSG_MMU2_RESUME,          []{ wait_for_mmu_menu = false; });
   ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, []{ mmu2.unload(); });
-  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT, []{ mmu2.load_filament(feeder_index); });
-  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE, []{ mmu2.load_filament_to_nozzle(feeder_index); });
+  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT,   []{ mmu2.load_to_feeder(feeder_index); });
+  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE,  []{ mmu2.load_to_nozzle(feeder_index); });
   END_MENU();
 }
 

commit 92721d1bf7d3516ffa591bf7fa9b0b03099f5156
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 14 17:45:45 2023 -0500

    üö∏ "Main" => "Main Menu"

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index a2412b0f6a..22230687e4 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -104,7 +104,7 @@ void action_mmu2_reset() {
 
 void menu_mmu2() {
   START_MENU();
-  BACK_ITEM(MSG_MAIN);
+  BACK_ITEM(MSG_MAIN_MENU);
   SUBMENU(MSG_MMU2_LOAD_FILAMENT, menu_mmu2_load_filament);
   SUBMENU(MSG_MMU2_LOAD_TO_NOZZLE, menu_mmu2_load_to_nozzle);
   SUBMENU(MSG_MMU2_EJECT_FILAMENT, menu_mmu2_eject_filament);

commit a80a303cbe057b02e8d9cd29bc94c161e48784f1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 22 22:22:08 2022 -0500

    üßë‚Äçüíª EXTRUDER_LOOP macro

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 4f3728b74e..a2412b0f6a 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -48,7 +48,7 @@ void _mmu2_load_filament(uint8_t index) {
   ui.reset_status();
 }
 void action_mmu2_load_all() {
-  LOOP_L_N(i, EXTRUDERS) _mmu2_load_filament(i);
+  EXTRUDER_LOOP() _mmu2_load_filament(e);
   ui.return_to_status();
 }
 
@@ -56,14 +56,14 @@ void menu_mmu2_load_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
   ACTION_ITEM(MSG_MMU2_ALL, action_mmu2_load_all);
-  LOOP_L_N(i, EXTRUDERS) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(MenuItemBase::itemIndex); });
+  EXTRUDER_LOOP() ACTION_ITEM_N(e, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
 void menu_mmu2_load_to_nozzle() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  LOOP_L_N(i, EXTRUDERS) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(MenuItemBase::itemIndex); });
+  EXTRUDER_LOOP() ACTION_ITEM_N(e, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
@@ -89,7 +89,7 @@ void action_mmu2_unload_filament() {
 void menu_mmu2_eject_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  LOOP_L_N(i, EXTRUDERS) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(MenuItemBase::itemIndex); });
+  EXTRUDER_LOOP() ACTION_ITEM_N(e, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
@@ -130,7 +130,7 @@ void menu_mmu2_choose_filament() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_DEFAULT|SS_INVERT);
   #endif
-  LOOP_L_N(i, EXTRUDERS) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_chosen(MenuItemBase::itemIndex); });
+  EXTRUDER_LOOP() ACTION_ITEM_N(e, MSG_MMU2_FILAMENT_N, []{ action_mmu2_chosen(MenuItemBase::itemIndex); });
   END_MENU();
 }
 

commit ab46b7e2f298826a5512569d6e79bb59a7a6b8ea
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 25 15:33:03 2022 -0600

    üßë‚Äçüíª HAS_MARLINUI_MENU, HAS_MANUAL_MOVE_MENU

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 99e5c06245..4f3728b74e 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -22,7 +22,7 @@
 
 #include "../../inc/MarlinConfig.h"
 
-#if BOTH(HAS_LCD_MENU, MMU2_MENUS)
+#if BOTH(HAS_MARLINUI_MENU, MMU2_MENUS)
 
 #include "../../MarlinCore.h"
 #include "../../feature/mmu/mmu2.h"
@@ -167,4 +167,4 @@ uint8_t mmu2_choose_filament() {
   return feeder_index;
 }
 
-#endif // HAS_LCD_MENU && MMU2_MENUS
+#endif // HAS_MARLINUI_MENU && MMU2_MENUS

commit 7f1286a11f87065c4e666985e679cf9c77d668bf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 25 17:05:11 2021 -0500

    üé® Apply F() to status message

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 425a8ca751..99e5c06245 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -36,14 +36,14 @@
 inline void action_mmu2_load_filament_to_nozzle(const uint8_t tool) {
   ui.reset_status();
   ui.return_to_status();
-  ui.status_printf_P(0,  GET_TEXT(MSG_MMU2_LOADING_FILAMENT), int(tool + 1));
+  ui.status_printf(0, GET_TEXT_F(MSG_MMU2_LOADING_FILAMENT), int(tool + 1));
   if (mmu2.load_filament_to_nozzle(tool)) ui.reset_status();
   ui.return_to_status();
 }
 
 void _mmu2_load_filament(uint8_t index) {
   ui.return_to_status();
-  ui.status_printf_P(0, GET_TEXT(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
+  ui.status_printf(0, GET_TEXT_F(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
   mmu2.load_filament(index);
   ui.reset_status();
 }
@@ -74,14 +74,14 @@ void menu_mmu2_load_to_nozzle() {
 void _mmu2_eject_filament(uint8_t index) {
   ui.reset_status();
   ui.return_to_status();
-  ui.status_printf_P(0, GET_TEXT(MSG_MMU2_EJECTING_FILAMENT), int(index + 1));
+  ui.status_printf(0, GET_TEXT_F(MSG_MMU2_EJECTING_FILAMENT), int(index + 1));
   if (mmu2.eject_filament(index, true)) ui.reset_status();
 }
 
 void action_mmu2_unload_filament() {
   ui.reset_status();
   ui.return_to_status();
-  LCD_MESSAGEPGM(MSG_MMU2_UNLOADING_FILAMENT);
+  LCD_MESSAGE(MSG_MMU2_UNLOADING_FILAMENT);
   idle();
   if (mmu2.unload()) ui.reset_status();
 }

commit abbe3f0dc7aa23bae4aa26f6d6b09a4a0665a1a0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 18 22:46:59 2021 -0500

    üé® Misc cleanup and fixes

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index af3d9232b2..425a8ca751 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -37,8 +37,7 @@ inline void action_mmu2_load_filament_to_nozzle(const uint8_t tool) {
   ui.reset_status();
   ui.return_to_status();
   ui.status_printf_P(0,  GET_TEXT(MSG_MMU2_LOADING_FILAMENT), int(tool + 1));
-  if (mmu2.load_filament_to_nozzle(tool))
-    ui.reset_status();
+  if (mmu2.load_filament_to_nozzle(tool)) ui.reset_status();
   ui.return_to_status();
 }
 

commit b1cca43252aafe82ca593224bdedfbba0881b066
Author: ellensp <ellensp@hotmail.com>
Date:   Thu May 6 18:43:16 2021 +1200

    Fix MMU2 compile with include (#21809)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 7e71f00d25..af3d9232b2 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -24,6 +24,7 @@
 
 #if BOTH(HAS_LCD_MENU, MMU2_MENUS)
 
+#include "../../MarlinCore.h"
 #include "../../feature/mmu/mmu2.h"
 #include "menu_mmu2.h"
 #include "menu_item.h"

commit 876c2586b9146dd123af4c7b21138b8239ef5d39
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Mon Jan 25 15:58:52 2021 +0100

    Clean up MMU2 code (#20794)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 8a34e7d296..7e71f00d25 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -32,15 +32,12 @@
 // Load Filament
 //
 
-void _mmu2_load_filamentToNozzle(uint8_t index) {
+inline void action_mmu2_load_filament_to_nozzle(const uint8_t tool) {
   ui.reset_status();
   ui.return_to_status();
-  ui.status_printf_P(0,  GET_TEXT(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
-  if (mmu2.load_filament_to_nozzle(index)) ui.reset_status();
-}
-
-inline void action_mmu2_load_filament_to_nozzle(const uint8_t tool) {
-  _mmu2_load_filamentToNozzle(tool);
+  ui.status_printf_P(0,  GET_TEXT(MSG_MMU2_LOADING_FILAMENT), int(tool + 1));
+  if (mmu2.load_filament_to_nozzle(tool))
+    ui.reset_status();
   ui.return_to_status();
 }
 
@@ -59,14 +56,14 @@ void menu_mmu2_load_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
   ACTION_ITEM(MSG_MMU2_ALL, action_mmu2_load_all);
-  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(MenuItemBase::itemIndex); });
+  LOOP_L_N(i, EXTRUDERS) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
 void menu_mmu2_load_to_nozzle() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(MenuItemBase::itemIndex); });
+  LOOP_L_N(i, EXTRUDERS) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
@@ -92,7 +89,7 @@ void action_mmu2_unload_filament() {
 void menu_mmu2_eject_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(MenuItemBase::itemIndex); });
+  LOOP_L_N(i, EXTRUDERS) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
@@ -133,7 +130,7 @@ void menu_mmu2_choose_filament() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_DEFAULT|SS_INVERT);
   #endif
-  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_chosen(MenuItemBase::itemIndex); });
+  LOOP_L_N(i, EXTRUDERS) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_chosen(MenuItemBase::itemIndex); });
   END_MENU();
 }
 

commit 41529b65988a58ba512977e0fe1692aaeeb6c811
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Wed Nov 18 08:27:21 2020 +0100

    SMUFF (MMU2 clone) support (#19912)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 0a63d90c63..8a34e7d296 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -24,13 +24,10 @@
 
 #if BOTH(HAS_LCD_MENU, MMU2_MENUS)
 
-#include "../../feature/mmu2/mmu2.h"
+#include "../../feature/mmu/mmu2.h"
 #include "menu_mmu2.h"
 #include "menu_item.h"
 
-uint8_t currentTool;
-bool mmuMenuWait;
-
 //
 // Load Filament
 //
@@ -123,9 +120,12 @@ void menu_mmu2() {
 // T* Choose Filament
 //
 
-inline void action_mmu2_choose(const uint8_t tool) {
-  currentTool = tool;
-  mmuMenuWait = false;
+uint8_t feeder_index;
+bool wait_for_mmu_menu;
+
+inline void action_mmu2_chosen(const uint8_t index) {
+  feeder_index = index;
+  wait_for_mmu_menu = false;
 }
 
 void menu_mmu2_choose_filament() {
@@ -133,7 +133,7 @@ void menu_mmu2_choose_filament() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_DEFAULT|SS_INVERT);
   #endif
-  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(MenuItemBase::itemIndex); });
+  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_chosen(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
@@ -142,32 +142,32 @@ void menu_mmu2_choose_filament() {
 //
 
 void menu_mmu2_pause() {
-  currentTool = mmu2.get_current_tool();
+  feeder_index = mmu2.get_current_tool();
   START_MENU();
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, SS_DEFAULT|SS_INVERT);
   #endif
-  ACTION_ITEM(MSG_MMU2_RESUME, []{ mmuMenuWait = false; });
+  ACTION_ITEM(MSG_MMU2_RESUME, []{ wait_for_mmu_menu = false; });
   ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, []{ mmu2.unload(); });
-  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT, []{ mmu2.load_filament(currentTool); });
-  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE, []{ mmu2.load_filament_to_nozzle(currentTool); });
+  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT, []{ mmu2.load_filament(feeder_index); });
+  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE, []{ mmu2.load_filament_to_nozzle(feeder_index); });
   END_MENU();
 }
 
 void mmu2_M600() {
   ui.defer_status_screen();
   ui.goto_screen(menu_mmu2_pause);
-  mmuMenuWait = true;
-  while (mmuMenuWait) idle();
+  wait_for_mmu_menu = true;
+  while (wait_for_mmu_menu) idle();
 }
 
 uint8_t mmu2_choose_filament() {
   ui.defer_status_screen();
   ui.goto_screen(menu_mmu2_choose_filament);
-  mmuMenuWait = true;
-  while (mmuMenuWait) idle();
+  wait_for_mmu_menu = true;
+  while (wait_for_mmu_menu) idle();
   ui.return_to_status();
-  return currentTool;
+  return feeder_index;
 }
 
 #endif // HAS_LCD_MENU && MMU2_MENUS

commit 4f67642122059a9270f9e3690978248355f88e72
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 21 05:21:34 2020 -0500

    Header for individual menus

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 304e958877..0a63d90c63 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -26,7 +26,7 @@
 
 #include "../../feature/mmu2/mmu2.h"
 #include "menu_mmu2.h"
-#include "menu.h"
+#include "menu_item.h"
 
 uint8_t currentTool;
 bool mmuMenuWait;

commit c2d5b63a9882dc02f41017a5b2f24363a55fef8d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Aug 8 18:21:44 2020 -0500

    Fix up STATIC_ITEM (#18962)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index e9627b8411..304e958877 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -131,7 +131,7 @@ inline void action_mmu2_choose(const uint8_t tool) {
 void menu_mmu2_choose_filament() {
   START_MENU();
   #if LCD_HEIGHT > 2
-    STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_CENTER|SS_INVERT);
+    STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_DEFAULT|SS_INVERT);
   #endif
   LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(MenuItemBase::itemIndex); });
   END_MENU();
@@ -145,7 +145,7 @@ void menu_mmu2_pause() {
   currentTool = mmu2.get_current_tool();
   START_MENU();
   #if LCD_HEIGHT > 2
-    STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, SS_CENTER|SS_INVERT);
+    STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, SS_DEFAULT|SS_INVERT);
   #endif
   ACTION_ITEM(MSG_MMU2_RESUME, []{ mmuMenuWait = false; });
   ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, []{ mmu2.unload(); });

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index e2ce919340..e9627b8411 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit c536b8de629807b489f054051bb120457f112a11
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 25 17:53:06 2020 -0500

    Apply ternary macros

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 779f94d14f..e2ce919340 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -54,8 +54,7 @@ void _mmu2_load_filament(uint8_t index) {
   ui.reset_status();
 }
 void action_mmu2_load_all() {
-  LOOP_L_N(i, EXTRUDERS)
-    _mmu2_load_filament(i);
+  LOOP_L_N(i, EXTRUDERS) _mmu2_load_filament(i);
   ui.return_to_status();
 }
 

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index e2f5e8d658..779f94d14f 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -22,7 +22,7 @@
 
 #include "../../inc/MarlinConfig.h"
 
-#if HAS_LCD_MENU && ENABLED(MMU2_MENUS)
+#if BOTH(HAS_LCD_MENU, MMU2_MENUS)
 
 #include "../../feature/mmu2/mmu2.h"
 #include "menu_mmu2.h"
@@ -171,4 +171,4 @@ uint8_t mmu2_choose_filament() {
   return currentTool;
 }
 
-#endif //  HAS_LCD_MENU && ENABLED(PRUSA_MMU2_MENUS)
+#endif // HAS_LCD_MENU && MMU2_MENUS

commit 118bd2f8b2a1f81884cb55a8fc00b708a51aa15b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 23:18:16 2020 -0500

    Apply loop shorthand macros (#17159)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index c278c423d2..e2f5e8d658 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -54,7 +54,7 @@ void _mmu2_load_filament(uint8_t index) {
   ui.reset_status();
 }
 void action_mmu2_load_all() {
-  for (uint8_t i = 0; i < EXTRUDERS; i++)
+  LOOP_L_N(i, EXTRUDERS)
     _mmu2_load_filament(i);
   ui.return_to_status();
 }

commit 6bead0c1b04152f6a291d851f6cd4029fe0fc616
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 16:29:29 2020 -0500

    Shorter paths to HAL, ExtUI (#17156)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index c2b8d4ae0a..c278c423d2 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -24,7 +24,7 @@
 
 #if HAS_LCD_MENU && ENABLED(MMU2_MENUS)
 
-#include "../../feature/prusa_MMU2/mmu2.h"
+#include "../../feature/mmu2/mmu2.h"
 #include "menu_mmu2.h"
 #include "menu.h"
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index ad3d649ee4..c2b8d4ae0a 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 1d150e41b6c60d2b93eeed5e67aad0f7c624c02f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 26 02:15:31 2019 -0600

    Reduce MMU2 code, add test

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index b2b87cece7..ad3d649ee4 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -63,22 +63,14 @@ void menu_mmu2_load_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
   ACTION_ITEM(MSG_MMU2_ALL, action_mmu2_load_all);
-  ACTION_ITEM_N(0, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(0); });
-  ACTION_ITEM_N(1, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(1); });
-  ACTION_ITEM_N(2, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(2); });
-  ACTION_ITEM_N(3, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(3); });
-  ACTION_ITEM_N(4, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(4); });
+  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
 void menu_mmu2_load_to_nozzle() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  ACTION_ITEM_N(0, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(0); });
-  ACTION_ITEM_N(1, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(1); });
-  ACTION_ITEM_N(2, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(2); });
-  ACTION_ITEM_N(3, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(3); });
-  ACTION_ITEM_N(4, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(4); });
+  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
@@ -104,11 +96,7 @@ void action_mmu2_unload_filament() {
 void menu_mmu2_eject_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  ACTION_ITEM_N(0, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(0); });
-  ACTION_ITEM_N(1, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(1); });
-  ACTION_ITEM_N(2, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(2); });
-  ACTION_ITEM_N(3, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(3); });
-  ACTION_ITEM_N(4, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(4); });
+  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(MenuItemBase::itemIndex); });
   END_MENU();
 }
 
@@ -146,11 +134,7 @@ void menu_mmu2_choose_filament() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_CENTER|SS_INVERT);
   #endif
-  ACTION_ITEM_N(0, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(0); });
-  ACTION_ITEM_N(1, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(1); });
-  ACTION_ITEM_N(2, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(2); });
-  ACTION_ITEM_N(3, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(3); });
-  ACTION_ITEM_N(4, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(4); });
+  LOOP_L_N(i, 5) ACTION_ITEM_N(i, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(MenuItemBase::itemIndex); });
   END_MENU();
 }
 

commit aa89bb71f9ba3e7f87380c9315d5a4bd110caf39
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Wed Nov 20 06:22:02 2019 +0100

    Fix MMU2 compile error (#15923)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index be258a7c87..b2b87cece7 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -63,22 +63,22 @@ void menu_mmu2_load_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
   ACTION_ITEM(MSG_MMU2_ALL, action_mmu2_load_all);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, []{ _mmu2_load_filament(0); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, []{ _mmu2_load_filament(1); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, []{ _mmu2_load_filament(2); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, []{ _mmu2_load_filament(3); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, []{ _mmu2_load_filament(4); });
+  ACTION_ITEM_N(0, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(0); });
+  ACTION_ITEM_N(1, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(1); });
+  ACTION_ITEM_N(2, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(2); });
+  ACTION_ITEM_N(3, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(3); });
+  ACTION_ITEM_N(4, MSG_MMU2_FILAMENT_N, []{ _mmu2_load_filament(4); });
   END_MENU();
 }
 
 void menu_mmu2_load_to_nozzle() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, []{ action_mmu2_load_filament_to_nozzle(0); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, []{ action_mmu2_load_filament_to_nozzle(1); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, []{ action_mmu2_load_filament_to_nozzle(2); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, []{ action_mmu2_load_filament_to_nozzle(3); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, []{ action_mmu2_load_filament_to_nozzle(4); });
+  ACTION_ITEM_N(0, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(0); });
+  ACTION_ITEM_N(1, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(1); });
+  ACTION_ITEM_N(2, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(2); });
+  ACTION_ITEM_N(3, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(3); });
+  ACTION_ITEM_N(4, MSG_MMU2_FILAMENT_N, []{ action_mmu2_load_filament_to_nozzle(4); });
   END_MENU();
 }
 
@@ -104,11 +104,11 @@ void action_mmu2_unload_filament() {
 void menu_mmu2_eject_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, []{ _mmu2_eject_filament(0); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, []{ _mmu2_eject_filament(1); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, []{ _mmu2_eject_filament(2); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, []{ _mmu2_eject_filament(3); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, []{ _mmu2_eject_filament(4); });
+  ACTION_ITEM_N(0, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(0); });
+  ACTION_ITEM_N(1, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(1); });
+  ACTION_ITEM_N(2, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(2); });
+  ACTION_ITEM_N(3, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(3); });
+  ACTION_ITEM_N(4, MSG_MMU2_FILAMENT_N, []{ _mmu2_eject_filament(4); });
   END_MENU();
 }
 
@@ -146,11 +146,11 @@ void menu_mmu2_choose_filament() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_CENTER|SS_INVERT);
   #endif
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, []{ action_mmu2_choose(0); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, []{ action_mmu2_choose(1); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, []{ action_mmu2_choose(2); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, []{ action_mmu2_choose(3); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, []{ action_mmu2_choose(4); });
+  ACTION_ITEM_N(0, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(0); });
+  ACTION_ITEM_N(1, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(1); });
+  ACTION_ITEM_N(2, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(2); });
+  ACTION_ITEM_N(3, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(3); });
+  ACTION_ITEM_N(4, MSG_MMU2_FILAMENT_N, []{ action_mmu2_choose(4); });
   END_MENU();
 }
 

commit 23d21dd81c0c634046108e40f50fa09e3503a5dd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 2 00:05:05 2019 -0500

    Tweak lambdas

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index aa6eb27ea1..be258a7c87 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -63,22 +63,22 @@ void menu_mmu2_load_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
   ACTION_ITEM(MSG_MMU2_ALL, action_mmu2_load_all);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, [](){ _mmu2_load_filament(0); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, [](){ _mmu2_load_filament(1); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, [](){ _mmu2_load_filament(2); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, [](){ _mmu2_load_filament(3); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, [](){ _mmu2_load_filament(4); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, []{ _mmu2_load_filament(0); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, []{ _mmu2_load_filament(1); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, []{ _mmu2_load_filament(2); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, []{ _mmu2_load_filament(3); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, []{ _mmu2_load_filament(4); });
   END_MENU();
 }
 
 void menu_mmu2_load_to_nozzle() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, [](){ action_mmu2_load_filament_to_nozzle(0); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, [](){ action_mmu2_load_filament_to_nozzle(1); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, [](){ action_mmu2_load_filament_to_nozzle(2); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, [](){ action_mmu2_load_filament_to_nozzle(3); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, [](){ action_mmu2_load_filament_to_nozzle(4); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, []{ action_mmu2_load_filament_to_nozzle(0); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, []{ action_mmu2_load_filament_to_nozzle(1); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, []{ action_mmu2_load_filament_to_nozzle(2); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, []{ action_mmu2_load_filament_to_nozzle(3); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, []{ action_mmu2_load_filament_to_nozzle(4); });
   END_MENU();
 }
 
@@ -104,11 +104,11 @@ void action_mmu2_unload_filament() {
 void menu_mmu2_eject_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, [](){ _mmu2_eject_filament(0); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, [](){ _mmu2_eject_filament(1); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, [](){ _mmu2_eject_filament(2); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, [](){ _mmu2_eject_filament(3); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, [](){ _mmu2_eject_filament(4); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, []{ _mmu2_eject_filament(0); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, []{ _mmu2_eject_filament(1); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, []{ _mmu2_eject_filament(2); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, []{ _mmu2_eject_filament(3); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, []{ _mmu2_eject_filament(4); });
   END_MENU();
 }
 
@@ -146,11 +146,11 @@ void menu_mmu2_choose_filament() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_CENTER|SS_INVERT);
   #endif
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, [](){ action_mmu2_choose(0); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, [](){ action_mmu2_choose(1); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, [](){ action_mmu2_choose(2); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, [](){ action_mmu2_choose(3); });
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, [](){ action_mmu2_choose(4); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, []{ action_mmu2_choose(0); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, []{ action_mmu2_choose(1); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, []{ action_mmu2_choose(2); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, []{ action_mmu2_choose(3); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, []{ action_mmu2_choose(4); });
   END_MENU();
 }
 
@@ -164,10 +164,10 @@ void menu_mmu2_pause() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, SS_CENTER|SS_INVERT);
   #endif
-  ACTION_ITEM(MSG_MMU2_RESUME, [](){ mmuMenuWait = false; });
-  ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, [](){ mmu2.unload(); });
-  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT, [](){ mmu2.load_filament(currentTool); });
-  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE, [](){ mmu2.load_filament_to_nozzle(currentTool); });
+  ACTION_ITEM(MSG_MMU2_RESUME, []{ mmuMenuWait = false; });
+  ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, []{ mmu2.unload(); });
+  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT, []{ mmu2.load_filament(currentTool); });
+  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE, []{ mmu2.load_filament_to_nozzle(currentTool); });
   END_MENU();
 }
 

commit 6a865a614620d71521bd3dc032adffe0bf82378c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Oct 9 18:46:10 2019 -0600

    Multi-language support (#15453)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 0412d86a6f..aa6eb27ea1 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -38,7 +38,7 @@ bool mmuMenuWait;
 void _mmu2_load_filamentToNozzle(uint8_t index) {
   ui.reset_status();
   ui.return_to_status();
-  ui.status_printf_P(0,  PSTR(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
+  ui.status_printf_P(0,  GET_TEXT(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
   if (mmu2.load_filament_to_nozzle(index)) ui.reset_status();
 }
 
@@ -49,7 +49,7 @@ inline void action_mmu2_load_filament_to_nozzle(const uint8_t tool) {
 
 void _mmu2_load_filament(uint8_t index) {
   ui.return_to_status();
-  ui.status_printf_P(0, PSTR(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
+  ui.status_printf_P(0, GET_TEXT(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
   mmu2.load_filament(index);
   ui.reset_status();
 }
@@ -89,7 +89,7 @@ void menu_mmu2_load_to_nozzle() {
 void _mmu2_eject_filament(uint8_t index) {
   ui.reset_status();
   ui.return_to_status();
-  ui.status_printf_P(0, PSTR(MSG_MMU2_EJECTING_FILAMENT), int(index + 1));
+  ui.status_printf_P(0, GET_TEXT(MSG_MMU2_EJECTING_FILAMENT), int(index + 1));
   if (mmu2.eject_filament(index, true)) ui.reset_status();
 }
 
@@ -162,7 +162,7 @@ void menu_mmu2_pause() {
   currentTool = mmu2.get_current_tool();
   START_MENU();
   #if LCD_HEIGHT > 2
-    STATIC_ITEM(MSG_MMU2_FILAMENT_CHANGE_HEADER, SS_CENTER|SS_INVERT);
+    STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, SS_CENTER|SS_INVERT);
   #endif
   ACTION_ITEM(MSG_MMU2_RESUME, [](){ mmuMenuWait = false; });
   ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, [](){ mmu2.unload(); });

commit cc822c1a0513362e28f1b3aff76d4c4c06446f01
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 7 19:44:33 2019 -0500

    Use lambdas in menus, where possible (#15452)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 5bd79c7353..0412d86a6f 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -42,15 +42,10 @@ void _mmu2_load_filamentToNozzle(uint8_t index) {
   if (mmu2.load_filament_to_nozzle(index)) ui.reset_status();
 }
 
-inline void action_mmu2_load_filament_to_nozzl_e(const uint8_t tool) {
+inline void action_mmu2_load_filament_to_nozzle(const uint8_t tool) {
   _mmu2_load_filamentToNozzle(tool);
   ui.return_to_status();
 }
-inline void action_mmu2_load_filament_to_nozzle_0() { action_mmu2_load_filament_to_nozzl_e(0); }
-inline void action_mmu2_load_filament_to_nozzle_1() { action_mmu2_load_filament_to_nozzl_e(1); }
-inline void action_mmu2_load_filament_to_nozzle_2() { action_mmu2_load_filament_to_nozzl_e(2); }
-inline void action_mmu2_load_filament_to_nozzle_3() { action_mmu2_load_filament_to_nozzl_e(3); }
-inline void action_mmu2_load_filament_to_nozzle_4() { action_mmu2_load_filament_to_nozzl_e(4); }
 
 void _mmu2_load_filament(uint8_t index) {
   ui.return_to_status();
@@ -63,32 +58,27 @@ void action_mmu2_load_all() {
     _mmu2_load_filament(i);
   ui.return_to_status();
 }
-inline void action_mmu2_load_filament_0() { _mmu2_load_filament(0); }
-inline void action_mmu2_load_filament_1() { _mmu2_load_filament(1); }
-inline void action_mmu2_load_filament_2() { _mmu2_load_filament(2); }
-inline void action_mmu2_load_filament_3() { _mmu2_load_filament(3); }
-inline void action_mmu2_load_filament_4() { _mmu2_load_filament(4); }
 
 void menu_mmu2_load_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
   ACTION_ITEM(MSG_MMU2_ALL, action_mmu2_load_all);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, action_mmu2_load_filament_0);
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, action_mmu2_load_filament_1);
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, action_mmu2_load_filament_2);
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, action_mmu2_load_filament_3);
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, action_mmu2_load_filament_4);
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, [](){ _mmu2_load_filament(0); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, [](){ _mmu2_load_filament(1); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, [](){ _mmu2_load_filament(2); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, [](){ _mmu2_load_filament(3); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, [](){ _mmu2_load_filament(4); });
   END_MENU();
 }
 
 void menu_mmu2_load_to_nozzle() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, action_mmu2_load_filament_to_nozzle_0);
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, action_mmu2_load_filament_to_nozzle_1);
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, action_mmu2_load_filament_to_nozzle_2);
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, action_mmu2_load_filament_to_nozzle_3);
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, action_mmu2_load_filament_to_nozzle_4);
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, [](){ action_mmu2_load_filament_to_nozzle(0); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, [](){ action_mmu2_load_filament_to_nozzle(1); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, [](){ action_mmu2_load_filament_to_nozzle(2); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, [](){ action_mmu2_load_filament_to_nozzle(3); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, [](){ action_mmu2_load_filament_to_nozzle(4); });
   END_MENU();
 }
 
@@ -102,11 +92,6 @@ void _mmu2_eject_filament(uint8_t index) {
   ui.status_printf_P(0, PSTR(MSG_MMU2_EJECTING_FILAMENT), int(index + 1));
   if (mmu2.eject_filament(index, true)) ui.reset_status();
 }
-inline void action_mmu2_eject_filament_0() { _mmu2_eject_filament(0); }
-inline void action_mmu2_eject_filament_1() { _mmu2_eject_filament(1); }
-inline void action_mmu2_eject_filament_2() { _mmu2_eject_filament(2); }
-inline void action_mmu2_eject_filament_3() { _mmu2_eject_filament(3); }
-inline void action_mmu2_eject_filament_4() { _mmu2_eject_filament(4); }
 
 void action_mmu2_unload_filament() {
   ui.reset_status();
@@ -119,11 +104,11 @@ void action_mmu2_unload_filament() {
 void menu_mmu2_eject_filament() {
   START_MENU();
   BACK_ITEM(MSG_MMU2_MENU);
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, action_mmu2_eject_filament_0);
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, action_mmu2_eject_filament_1);
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, action_mmu2_eject_filament_2);
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, action_mmu2_eject_filament_3);
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, action_mmu2_eject_filament_4);
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, [](){ _mmu2_eject_filament(0); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, [](){ _mmu2_eject_filament(1); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, [](){ _mmu2_eject_filament(2); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, [](){ _mmu2_eject_filament(3); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, [](){ _mmu2_eject_filament(4); });
   END_MENU();
 }
 
@@ -155,22 +140,17 @@ inline void action_mmu2_choose(const uint8_t tool) {
   currentTool = tool;
   mmuMenuWait = false;
 }
-inline void action_mmu2_choose0() { action_mmu2_choose(0); }
-inline void action_mmu2_choose1() { action_mmu2_choose(1); }
-inline void action_mmu2_choose2() { action_mmu2_choose(2); }
-inline void action_mmu2_choose3() { action_mmu2_choose(3); }
-inline void action_mmu2_choose4() { action_mmu2_choose(4); }
 
 void menu_mmu2_choose_filament() {
   START_MENU();
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_CENTER|SS_INVERT);
   #endif
-  ACTION_ITEM(MSG_MMU2_FILAMENT0, action_mmu2_choose0);
-  ACTION_ITEM(MSG_MMU2_FILAMENT1, action_mmu2_choose1);
-  ACTION_ITEM(MSG_MMU2_FILAMENT2, action_mmu2_choose2);
-  ACTION_ITEM(MSG_MMU2_FILAMENT3, action_mmu2_choose3);
-  ACTION_ITEM(MSG_MMU2_FILAMENT4, action_mmu2_choose4);
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, [](){ action_mmu2_choose(0); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, [](){ action_mmu2_choose(1); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, [](){ action_mmu2_choose(2); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, [](){ action_mmu2_choose(3); });
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, [](){ action_mmu2_choose(4); });
   END_MENU();
 }
 
@@ -178,21 +158,16 @@ void menu_mmu2_choose_filament() {
 // MMU2 Filament Runout
 //
 
-inline void action_mmu2_M600_load_current_filament()         { mmu2.load_filament(currentTool); }
-inline void action_mmu2_M600_load_current_filament_to_nozzle() { mmu2.load_filament_to_nozzle(currentTool); }
-inline void action_mmu2_M600_unload_filament()              { mmu2.unload(); }
-inline void action_mmu2_M600_resume()                      { mmuMenuWait = false; }
-
 void menu_mmu2_pause() {
   currentTool = mmu2.get_current_tool();
   START_MENU();
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_FILAMENT_CHANGE_HEADER, SS_CENTER|SS_INVERT);
   #endif
-  ACTION_ITEM(MSG_MMU2_RESUME, action_mmu2_M600_resume);
-  ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_M600_unload_filament);
-  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT, action_mmu2_M600_load_current_filament);
-  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE, action_mmu2_M600_load_current_filament_to_nozzle);
+  ACTION_ITEM(MSG_MMU2_RESUME, [](){ mmuMenuWait = false; });
+  ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, [](){ mmu2.unload(); });
+  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT, [](){ mmu2.load_filament(currentTool); });
+  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE, [](){ mmu2.load_filament_to_nozzle(currentTool); });
   END_MENU();
 }
 

commit 273cbe931e868554bf6782881443ccbf5fdd4208
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 3 05:38:30 2019 -0500

    Aliases for common menu item types

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 9a0908961e..5bd79c7353 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -71,24 +71,24 @@ inline void action_mmu2_load_filament_4() { _mmu2_load_filament(4); }
 
 void menu_mmu2_load_filament() {
   START_MENU();
-  MENU_BACK(MSG_MMU2_MENU);
-  MENU_ITEM(function, MSG_MMU2_ALL, action_mmu2_load_all);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_load_filament_0);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_load_filament_1);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_load_filament_2);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_load_filament_3);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_load_filament_4);
+  BACK_ITEM(MSG_MMU2_MENU);
+  ACTION_ITEM(MSG_MMU2_ALL, action_mmu2_load_all);
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, action_mmu2_load_filament_0);
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, action_mmu2_load_filament_1);
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, action_mmu2_load_filament_2);
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, action_mmu2_load_filament_3);
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, action_mmu2_load_filament_4);
   END_MENU();
 }
 
 void menu_mmu2_load_to_nozzle() {
   START_MENU();
-  MENU_BACK(MSG_MMU2_MENU);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_load_filament_to_nozzle_0);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_load_filament_to_nozzle_1);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_load_filament_to_nozzle_2);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_load_filament_to_nozzle_3);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_load_filament_to_nozzle_4);
+  BACK_ITEM(MSG_MMU2_MENU);
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, action_mmu2_load_filament_to_nozzle_0);
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, action_mmu2_load_filament_to_nozzle_1);
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, action_mmu2_load_filament_to_nozzle_2);
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, action_mmu2_load_filament_to_nozzle_3);
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, action_mmu2_load_filament_to_nozzle_4);
   END_MENU();
 }
 
@@ -118,12 +118,12 @@ void action_mmu2_unload_filament() {
 
 void menu_mmu2_eject_filament() {
   START_MENU();
-  MENU_BACK(MSG_MMU2_MENU);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_eject_filament_0);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_eject_filament_1);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_eject_filament_2);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_eject_filament_3);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_eject_filament_4);
+  BACK_ITEM(MSG_MMU2_MENU);
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, action_mmu2_eject_filament_0);
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, action_mmu2_eject_filament_1);
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, action_mmu2_eject_filament_2);
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, action_mmu2_eject_filament_3);
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, action_mmu2_eject_filament_4);
   END_MENU();
 }
 
@@ -138,12 +138,12 @@ void action_mmu2_reset() {
 
 void menu_mmu2() {
   START_MENU();
-  MENU_BACK(MSG_MAIN);
-  MENU_ITEM(submenu, MSG_MMU2_LOAD_FILAMENT, menu_mmu2_load_filament);
-  MENU_ITEM(submenu, MSG_MMU2_LOAD_TO_NOZZLE, menu_mmu2_load_to_nozzle);
-  MENU_ITEM(submenu, MSG_MMU2_EJECT_FILAMENT, menu_mmu2_eject_filament);
-  MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_unload_filament);
-  MENU_ITEM(function, MSG_MMU2_RESET, action_mmu2_reset);
+  BACK_ITEM(MSG_MAIN);
+  SUBMENU(MSG_MMU2_LOAD_FILAMENT, menu_mmu2_load_filament);
+  SUBMENU(MSG_MMU2_LOAD_TO_NOZZLE, menu_mmu2_load_to_nozzle);
+  SUBMENU(MSG_MMU2_EJECT_FILAMENT, menu_mmu2_eject_filament);
+  ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_unload_filament);
+  ACTION_ITEM(MSG_MMU2_RESET, action_mmu2_reset);
   END_MENU();
 }
 
@@ -166,11 +166,11 @@ void menu_mmu2_choose_filament() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_CENTER|SS_INVERT);
   #endif
-  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_choose0);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_choose1);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_choose2);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_choose3);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_choose4);
+  ACTION_ITEM(MSG_MMU2_FILAMENT0, action_mmu2_choose0);
+  ACTION_ITEM(MSG_MMU2_FILAMENT1, action_mmu2_choose1);
+  ACTION_ITEM(MSG_MMU2_FILAMENT2, action_mmu2_choose2);
+  ACTION_ITEM(MSG_MMU2_FILAMENT3, action_mmu2_choose3);
+  ACTION_ITEM(MSG_MMU2_FILAMENT4, action_mmu2_choose4);
   END_MENU();
 }
 
@@ -189,10 +189,10 @@ void menu_mmu2_pause() {
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_FILAMENT_CHANGE_HEADER, SS_CENTER|SS_INVERT);
   #endif
-  MENU_ITEM(function, MSG_MMU2_RESUME, action_mmu2_M600_resume);
-  MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_M600_unload_filament);
-  MENU_ITEM(function, MSG_MMU2_LOAD_FILAMENT, action_mmu2_M600_load_current_filament);
-  MENU_ITEM(function, MSG_MMU2_LOAD_TO_NOZZLE, action_mmu2_M600_load_current_filament_to_nozzle);
+  ACTION_ITEM(MSG_MMU2_RESUME, action_mmu2_M600_resume);
+  ACTION_ITEM(MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_M600_unload_filament);
+  ACTION_ITEM(MSG_MMU2_LOAD_FILAMENT, action_mmu2_M600_load_current_filament);
+  ACTION_ITEM(MSG_MMU2_LOAD_TO_NOZZLE, action_mmu2_M600_load_current_filament_to_nozzle);
   END_MENU();
 }
 

commit 4c16661153b5035c2c8b4ed9eccce6307ae5ebb4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 27 03:06:23 2019 -0500

    Use named styles in draw_menu_item_static

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index a7dc4e8391..9a0908961e 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -164,7 +164,7 @@ inline void action_mmu2_choose4() { action_mmu2_choose(4); }
 void menu_mmu2_choose_filament() {
   START_MENU();
   #if LCD_HEIGHT > 2
-    STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, true, true);
+    STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, SS_CENTER|SS_INVERT);
   #endif
   MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_choose0);
   MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_choose1);
@@ -187,7 +187,7 @@ void menu_mmu2_pause() {
   currentTool = mmu2.get_current_tool();
   START_MENU();
   #if LCD_HEIGHT > 2
-    STATIC_ITEM(MSG_MMU2_FILAMENT_CHANGE_HEADER, true, true);
+    STATIC_ITEM(MSG_MMU2_FILAMENT_CHANGE_HEADER, SS_CENTER|SS_INVERT);
   #endif
   MENU_ITEM(function, MSG_MMU2_RESUME, action_mmu2_M600_resume);
   MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_M600_unload_filament);

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index af2e296083..a7dc4e8391 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit fae2b7edc38322e69af954f769fa7953d35f5bba
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 8 17:56:40 2019 -0500

    Update MMU2 code style

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index cebf996900..af2e296083 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -35,60 +35,60 @@ bool mmuMenuWait;
 // Load Filament
 //
 
-void _mmu2_loadFilamentToNozzle(uint8_t index) {
+void _mmu2_load_filamentToNozzle(uint8_t index) {
   ui.reset_status();
   ui.return_to_status();
   ui.status_printf_P(0,  PSTR(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
-  if (mmu2.loadFilamentToNozzle(index)) ui.reset_status();
+  if (mmu2.load_filament_to_nozzle(index)) ui.reset_status();
 }
 
-inline void action_mmu2_loadFilamentToNozzle(const uint8_t tool) {
-  _mmu2_loadFilamentToNozzle(tool);
+inline void action_mmu2_load_filament_to_nozzl_e(const uint8_t tool) {
+  _mmu2_load_filamentToNozzle(tool);
   ui.return_to_status();
 }
-inline void action_mmu2_loadFilamentToNozzle0() { action_mmu2_loadFilamentToNozzle(0); }
-inline void action_mmu2_loadFilamentToNozzle1() { action_mmu2_loadFilamentToNozzle(1); }
-inline void action_mmu2_loadFilamentToNozzle2() { action_mmu2_loadFilamentToNozzle(2); }
-inline void action_mmu2_loadFilamentToNozzle3() { action_mmu2_loadFilamentToNozzle(3); }
-inline void action_mmu2_loadFilamentToNozzle4() { action_mmu2_loadFilamentToNozzle(4); }
+inline void action_mmu2_load_filament_to_nozzle_0() { action_mmu2_load_filament_to_nozzl_e(0); }
+inline void action_mmu2_load_filament_to_nozzle_1() { action_mmu2_load_filament_to_nozzl_e(1); }
+inline void action_mmu2_load_filament_to_nozzle_2() { action_mmu2_load_filament_to_nozzl_e(2); }
+inline void action_mmu2_load_filament_to_nozzle_3() { action_mmu2_load_filament_to_nozzl_e(3); }
+inline void action_mmu2_load_filament_to_nozzle_4() { action_mmu2_load_filament_to_nozzl_e(4); }
 
-void _mmu2_loadFilament(uint8_t index) {
+void _mmu2_load_filament(uint8_t index) {
   ui.return_to_status();
   ui.status_printf_P(0, PSTR(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
-  mmu2.loadFilament(index);
+  mmu2.load_filament(index);
   ui.reset_status();
 }
-void action_mmu2_loadAll() {
+void action_mmu2_load_all() {
   for (uint8_t i = 0; i < EXTRUDERS; i++)
-    _mmu2_loadFilament(i);
+    _mmu2_load_filament(i);
   ui.return_to_status();
 }
-inline void action_mmu2_loadFilament0() { _mmu2_loadFilament(0); }
-inline void action_mmu2_loadFilament1() { _mmu2_loadFilament(1); }
-inline void action_mmu2_loadFilament2() { _mmu2_loadFilament(2); }
-inline void action_mmu2_loadFilament3() { _mmu2_loadFilament(3); }
-inline void action_mmu2_loadFilament4() { _mmu2_loadFilament(4); }
+inline void action_mmu2_load_filament_0() { _mmu2_load_filament(0); }
+inline void action_mmu2_load_filament_1() { _mmu2_load_filament(1); }
+inline void action_mmu2_load_filament_2() { _mmu2_load_filament(2); }
+inline void action_mmu2_load_filament_3() { _mmu2_load_filament(3); }
+inline void action_mmu2_load_filament_4() { _mmu2_load_filament(4); }
 
-void menu_mmu2_loadFilament() {
+void menu_mmu2_load_filament() {
   START_MENU();
   MENU_BACK(MSG_MMU2_MENU);
-  MENU_ITEM(function, MSG_MMU2_ALL, action_mmu2_loadAll);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_loadFilament0);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_loadFilament1);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_loadFilament2);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_loadFilament3);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_loadFilament4);
+  MENU_ITEM(function, MSG_MMU2_ALL, action_mmu2_load_all);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_load_filament_0);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_load_filament_1);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_load_filament_2);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_load_filament_3);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_load_filament_4);
   END_MENU();
 }
 
-void menu_mmu2_loadToNozzle() {
+void menu_mmu2_load_to_nozzle() {
   START_MENU();
   MENU_BACK(MSG_MMU2_MENU);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_loadFilamentToNozzle0);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_loadFilamentToNozzle1);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_loadFilamentToNozzle2);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_loadFilamentToNozzle3);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_loadFilamentToNozzle4);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_load_filament_to_nozzle_0);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_load_filament_to_nozzle_1);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_load_filament_to_nozzle_2);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_load_filament_to_nozzle_3);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_load_filament_to_nozzle_4);
   END_MENU();
 }
 
@@ -96,19 +96,19 @@ void menu_mmu2_loadToNozzle() {
 // Eject Filament
 //
 
-void _mmu2_ejectFilament(uint8_t index) {
+void _mmu2_eject_filament(uint8_t index) {
   ui.reset_status();
   ui.return_to_status();
   ui.status_printf_P(0, PSTR(MSG_MMU2_EJECTING_FILAMENT), int(index + 1));
-  if (mmu2.ejectFilament(index, true)) ui.reset_status();
+  if (mmu2.eject_filament(index, true)) ui.reset_status();
 }
-inline void action_mmu2_ejectFilament0() { _mmu2_ejectFilament(0); }
-inline void action_mmu2_ejectFilament1() { _mmu2_ejectFilament(1); }
-inline void action_mmu2_ejectFilament2() { _mmu2_ejectFilament(2); }
-inline void action_mmu2_ejectFilament3() { _mmu2_ejectFilament(3); }
-inline void action_mmu2_ejectFilament4() { _mmu2_ejectFilament(4); }
+inline void action_mmu2_eject_filament_0() { _mmu2_eject_filament(0); }
+inline void action_mmu2_eject_filament_1() { _mmu2_eject_filament(1); }
+inline void action_mmu2_eject_filament_2() { _mmu2_eject_filament(2); }
+inline void action_mmu2_eject_filament_3() { _mmu2_eject_filament(3); }
+inline void action_mmu2_eject_filament_4() { _mmu2_eject_filament(4); }
 
-void action_mmu2_unloadFilament() {
+void action_mmu2_unload_filament() {
   ui.reset_status();
   ui.return_to_status();
   LCD_MESSAGEPGM(MSG_MMU2_UNLOADING_FILAMENT);
@@ -116,14 +116,14 @@ void action_mmu2_unloadFilament() {
   if (mmu2.unload()) ui.reset_status();
 }
 
-void menu_mmu2_ejectFilament() {
+void menu_mmu2_eject_filament() {
   START_MENU();
   MENU_BACK(MSG_MMU2_MENU);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_ejectFilament0);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_ejectFilament1);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_ejectFilament2);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_ejectFilament3);
-  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_ejectFilament4);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_eject_filament_0);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_eject_filament_1);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_eject_filament_2);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_eject_filament_3);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_eject_filament_4);
   END_MENU();
 }
 
@@ -139,10 +139,10 @@ void action_mmu2_reset() {
 void menu_mmu2() {
   START_MENU();
   MENU_BACK(MSG_MAIN);
-  MENU_ITEM(submenu, MSG_MMU2_LOAD_FILAMENT, menu_mmu2_loadFilament);
-  MENU_ITEM(submenu, MSG_MMU2_LOAD_TO_NOZZLE, menu_mmu2_loadToNozzle);
-  MENU_ITEM(submenu, MSG_MMU2_EJECT_FILAMENT, menu_mmu2_ejectFilament);
-  MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_unloadFilament);
+  MENU_ITEM(submenu, MSG_MMU2_LOAD_FILAMENT, menu_mmu2_load_filament);
+  MENU_ITEM(submenu, MSG_MMU2_LOAD_TO_NOZZLE, menu_mmu2_load_to_nozzle);
+  MENU_ITEM(submenu, MSG_MMU2_EJECT_FILAMENT, menu_mmu2_eject_filament);
+  MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_unload_filament);
   MENU_ITEM(function, MSG_MMU2_RESET, action_mmu2_reset);
   END_MENU();
 }
@@ -161,7 +161,7 @@ inline void action_mmu2_choose2() { action_mmu2_choose(2); }
 inline void action_mmu2_choose3() { action_mmu2_choose(3); }
 inline void action_mmu2_choose4() { action_mmu2_choose(4); }
 
-void menu_mmu2_chooseFilament() {
+void menu_mmu2_choose_filament() {
   START_MENU();
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, true, true);
@@ -178,21 +178,21 @@ void menu_mmu2_chooseFilament() {
 // MMU2 Filament Runout
 //
 
-inline void action_mmu2_M600_loadCurrentFilament()         { mmu2.loadFilament(currentTool); }
-inline void action_mmu2_M600_loadCurrentFilamentToNozzle() { mmu2.loadFilamentToNozzle(currentTool); }
-inline void action_mmu2_M600_unloadFilament()              { mmu2.unload(); }
+inline void action_mmu2_M600_load_current_filament()         { mmu2.load_filament(currentTool); }
+inline void action_mmu2_M600_load_current_filament_to_nozzle() { mmu2.load_filament_to_nozzle(currentTool); }
+inline void action_mmu2_M600_unload_filament()              { mmu2.unload(); }
 inline void action_mmu2_M600_resume()                      { mmuMenuWait = false; }
 
 void menu_mmu2_pause() {
-  currentTool = mmu2.getCurrentTool();
+  currentTool = mmu2.get_current_tool();
   START_MENU();
   #if LCD_HEIGHT > 2
     STATIC_ITEM(MSG_MMU2_FILAMENT_CHANGE_HEADER, true, true);
   #endif
   MENU_ITEM(function, MSG_MMU2_RESUME, action_mmu2_M600_resume);
-  MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_M600_unloadFilament);
-  MENU_ITEM(function, MSG_MMU2_LOAD_FILAMENT, action_mmu2_M600_loadCurrentFilament);
-  MENU_ITEM(function, MSG_MMU2_LOAD_TO_NOZZLE, action_mmu2_M600_loadCurrentFilamentToNozzle);
+  MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_M600_unload_filament);
+  MENU_ITEM(function, MSG_MMU2_LOAD_FILAMENT, action_mmu2_M600_load_current_filament);
+  MENU_ITEM(function, MSG_MMU2_LOAD_TO_NOZZLE, action_mmu2_M600_load_current_filament_to_nozzle);
   END_MENU();
 }
 
@@ -203,9 +203,9 @@ void mmu2_M600() {
   while (mmuMenuWait) idle();
 }
 
-uint8_t mmu2_chooseFilament() {
+uint8_t mmu2_choose_filament() {
   ui.defer_status_screen();
-  ui.goto_screen(menu_mmu2_chooseFilament);
+  ui.goto_screen(menu_mmu2_choose_filament);
   mmuMenuWait = true;
   while (mmuMenuWait) idle();
   ui.return_to_status();

commit d8329d858d7d2c2b2a9107f99df39a93816c0841
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Mar 23 16:30:43 2019 -0500

    Default argument to defer_status_screen

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index d02b02c2b0..cebf996900 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -197,14 +197,14 @@ void menu_mmu2_pause() {
 }
 
 void mmu2_M600() {
-  ui.defer_status_screen(true);
+  ui.defer_status_screen();
   ui.goto_screen(menu_mmu2_pause);
   mmuMenuWait = true;
   while (mmuMenuWait) idle();
 }
 
 uint8_t mmu2_chooseFilament() {
-  ui.defer_status_screen(true);
+  ui.defer_status_screen();
   ui.goto_screen(menu_mmu2_chooseFilament);
   mmuMenuWait = true;
   while (mmuMenuWait) idle();

commit 9a515cbd3268b30eb7a4dc9ea0f96f3a253d9063
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 14 02:26:07 2019 -0500

    Fix Pause Print message and behavior (#13394)

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index 4b4b4aa890..d02b02c2b0 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -183,7 +183,7 @@ inline void action_mmu2_M600_loadCurrentFilamentToNozzle() { mmu2.loadFilamentTo
 inline void action_mmu2_M600_unloadFilament()              { mmu2.unload(); }
 inline void action_mmu2_M600_resume()                      { mmuMenuWait = false; }
 
-void menu_mmu2_advanced_pause() {
+void menu_mmu2_pause() {
   currentTool = mmu2.getCurrentTool();
   START_MENU();
   #if LCD_HEIGHT > 2
@@ -198,7 +198,7 @@ void menu_mmu2_advanced_pause() {
 
 void mmu2_M600() {
   ui.defer_status_screen(true);
-  ui.goto_screen(menu_mmu2_advanced_pause);
+  ui.goto_screen(menu_mmu2_pause);
   mmuMenuWait = true;
   while (mmuMenuWait) idle();
 }

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
index e2f7b05d04..4b4b4aa890 100644
--- a/Marlin/src/lcd/menu/menu_mmu2.cpp
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit f269766408fd87a95dfb36df6f30f550235b32e8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 6 17:38:46 2019 -0600

    Put the MMU2 menu with the others

diff --git a/Marlin/src/lcd/menu/menu_mmu2.cpp b/Marlin/src/lcd/menu/menu_mmu2.cpp
new file mode 100644
index 0000000000..e2f7b05d04
--- /dev/null
+++ b/Marlin/src/lcd/menu/menu_mmu2.cpp
@@ -0,0 +1,215 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../inc/MarlinConfig.h"
+
+#if HAS_LCD_MENU && ENABLED(MMU2_MENUS)
+
+#include "../../feature/prusa_MMU2/mmu2.h"
+#include "menu_mmu2.h"
+#include "menu.h"
+
+uint8_t currentTool;
+bool mmuMenuWait;
+
+//
+// Load Filament
+//
+
+void _mmu2_loadFilamentToNozzle(uint8_t index) {
+  ui.reset_status();
+  ui.return_to_status();
+  ui.status_printf_P(0,  PSTR(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
+  if (mmu2.loadFilamentToNozzle(index)) ui.reset_status();
+}
+
+inline void action_mmu2_loadFilamentToNozzle(const uint8_t tool) {
+  _mmu2_loadFilamentToNozzle(tool);
+  ui.return_to_status();
+}
+inline void action_mmu2_loadFilamentToNozzle0() { action_mmu2_loadFilamentToNozzle(0); }
+inline void action_mmu2_loadFilamentToNozzle1() { action_mmu2_loadFilamentToNozzle(1); }
+inline void action_mmu2_loadFilamentToNozzle2() { action_mmu2_loadFilamentToNozzle(2); }
+inline void action_mmu2_loadFilamentToNozzle3() { action_mmu2_loadFilamentToNozzle(3); }
+inline void action_mmu2_loadFilamentToNozzle4() { action_mmu2_loadFilamentToNozzle(4); }
+
+void _mmu2_loadFilament(uint8_t index) {
+  ui.return_to_status();
+  ui.status_printf_P(0, PSTR(MSG_MMU2_LOADING_FILAMENT), int(index + 1));
+  mmu2.loadFilament(index);
+  ui.reset_status();
+}
+void action_mmu2_loadAll() {
+  for (uint8_t i = 0; i < EXTRUDERS; i++)
+    _mmu2_loadFilament(i);
+  ui.return_to_status();
+}
+inline void action_mmu2_loadFilament0() { _mmu2_loadFilament(0); }
+inline void action_mmu2_loadFilament1() { _mmu2_loadFilament(1); }
+inline void action_mmu2_loadFilament2() { _mmu2_loadFilament(2); }
+inline void action_mmu2_loadFilament3() { _mmu2_loadFilament(3); }
+inline void action_mmu2_loadFilament4() { _mmu2_loadFilament(4); }
+
+void menu_mmu2_loadFilament() {
+  START_MENU();
+  MENU_BACK(MSG_MMU2_MENU);
+  MENU_ITEM(function, MSG_MMU2_ALL, action_mmu2_loadAll);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_loadFilament0);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_loadFilament1);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_loadFilament2);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_loadFilament3);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_loadFilament4);
+  END_MENU();
+}
+
+void menu_mmu2_loadToNozzle() {
+  START_MENU();
+  MENU_BACK(MSG_MMU2_MENU);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_loadFilamentToNozzle0);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_loadFilamentToNozzle1);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_loadFilamentToNozzle2);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_loadFilamentToNozzle3);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_loadFilamentToNozzle4);
+  END_MENU();
+}
+
+//
+// Eject Filament
+//
+
+void _mmu2_ejectFilament(uint8_t index) {
+  ui.reset_status();
+  ui.return_to_status();
+  ui.status_printf_P(0, PSTR(MSG_MMU2_EJECTING_FILAMENT), int(index + 1));
+  if (mmu2.ejectFilament(index, true)) ui.reset_status();
+}
+inline void action_mmu2_ejectFilament0() { _mmu2_ejectFilament(0); }
+inline void action_mmu2_ejectFilament1() { _mmu2_ejectFilament(1); }
+inline void action_mmu2_ejectFilament2() { _mmu2_ejectFilament(2); }
+inline void action_mmu2_ejectFilament3() { _mmu2_ejectFilament(3); }
+inline void action_mmu2_ejectFilament4() { _mmu2_ejectFilament(4); }
+
+void action_mmu2_unloadFilament() {
+  ui.reset_status();
+  ui.return_to_status();
+  LCD_MESSAGEPGM(MSG_MMU2_UNLOADING_FILAMENT);
+  idle();
+  if (mmu2.unload()) ui.reset_status();
+}
+
+void menu_mmu2_ejectFilament() {
+  START_MENU();
+  MENU_BACK(MSG_MMU2_MENU);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_ejectFilament0);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_ejectFilament1);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_ejectFilament2);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_ejectFilament3);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_ejectFilament4);
+  END_MENU();
+}
+
+//
+// MMU2 Menu
+//
+
+void action_mmu2_reset() {
+  mmu2.init();
+  ui.reset_status();
+}
+
+void menu_mmu2() {
+  START_MENU();
+  MENU_BACK(MSG_MAIN);
+  MENU_ITEM(submenu, MSG_MMU2_LOAD_FILAMENT, menu_mmu2_loadFilament);
+  MENU_ITEM(submenu, MSG_MMU2_LOAD_TO_NOZZLE, menu_mmu2_loadToNozzle);
+  MENU_ITEM(submenu, MSG_MMU2_EJECT_FILAMENT, menu_mmu2_ejectFilament);
+  MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_unloadFilament);
+  MENU_ITEM(function, MSG_MMU2_RESET, action_mmu2_reset);
+  END_MENU();
+}
+
+//
+// T* Choose Filament
+//
+
+inline void action_mmu2_choose(const uint8_t tool) {
+  currentTool = tool;
+  mmuMenuWait = false;
+}
+inline void action_mmu2_choose0() { action_mmu2_choose(0); }
+inline void action_mmu2_choose1() { action_mmu2_choose(1); }
+inline void action_mmu2_choose2() { action_mmu2_choose(2); }
+inline void action_mmu2_choose3() { action_mmu2_choose(3); }
+inline void action_mmu2_choose4() { action_mmu2_choose(4); }
+
+void menu_mmu2_chooseFilament() {
+  START_MENU();
+  #if LCD_HEIGHT > 2
+    STATIC_ITEM(MSG_MMU2_CHOOSE_FILAMENT_HEADER, true, true);
+  #endif
+  MENU_ITEM(function, MSG_MMU2_FILAMENT0, action_mmu2_choose0);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT1, action_mmu2_choose1);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT2, action_mmu2_choose2);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT3, action_mmu2_choose3);
+  MENU_ITEM(function, MSG_MMU2_FILAMENT4, action_mmu2_choose4);
+  END_MENU();
+}
+
+//
+// MMU2 Filament Runout
+//
+
+inline void action_mmu2_M600_loadCurrentFilament()         { mmu2.loadFilament(currentTool); }
+inline void action_mmu2_M600_loadCurrentFilamentToNozzle() { mmu2.loadFilamentToNozzle(currentTool); }
+inline void action_mmu2_M600_unloadFilament()              { mmu2.unload(); }
+inline void action_mmu2_M600_resume()                      { mmuMenuWait = false; }
+
+void menu_mmu2_advanced_pause() {
+  currentTool = mmu2.getCurrentTool();
+  START_MENU();
+  #if LCD_HEIGHT > 2
+    STATIC_ITEM(MSG_MMU2_FILAMENT_CHANGE_HEADER, true, true);
+  #endif
+  MENU_ITEM(function, MSG_MMU2_RESUME, action_mmu2_M600_resume);
+  MENU_ITEM(function, MSG_MMU2_UNLOAD_FILAMENT, action_mmu2_M600_unloadFilament);
+  MENU_ITEM(function, MSG_MMU2_LOAD_FILAMENT, action_mmu2_M600_loadCurrentFilament);
+  MENU_ITEM(function, MSG_MMU2_LOAD_TO_NOZZLE, action_mmu2_M600_loadCurrentFilamentToNozzle);
+  END_MENU();
+}
+
+void mmu2_M600() {
+  ui.defer_status_screen(true);
+  ui.goto_screen(menu_mmu2_advanced_pause);
+  mmuMenuWait = true;
+  while (mmuMenuWait) idle();
+}
+
+uint8_t mmu2_chooseFilament() {
+  ui.defer_status_screen(true);
+  ui.goto_screen(menu_mmu2_chooseFilament);
+  mmuMenuWait = true;
+  while (mmuMenuWait) idle();
+  ui.return_to_status();
+  return currentTool;
+}
+
+#endif //  HAS_LCD_MENU && ENABLED(PRUSA_MMU2_MENUS)
