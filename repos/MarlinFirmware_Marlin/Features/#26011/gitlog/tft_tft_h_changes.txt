commit 5bcaae62f2c7965ee7f99eb44a44022f1cbad959
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon Jul 24 15:31:39 2023 +1200

    ‚ö°Ô∏è Compact RGB565 TFT boot images (#26011)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 87dea453df..1c81585650 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -37,21 +37,21 @@
   #define ENDIAN_COLOR(C) (C)
 #endif
 
-#ifndef TFT_BUFFER_SIZE
+#ifndef TFT_BUFFER_WORDS
   #ifdef STM32F103xB
-    #define TFT_BUFFER_SIZE       1024
+    #define TFT_BUFFER_WORDS      1024
   #elif defined(STM32F103xE)
-    #define TFT_BUFFER_SIZE       19200 // 320 * 60
+    #define TFT_BUFFER_WORDS      19200 // 320 * 60
   #elif defined(STM32F1)
-    #define TFT_BUFFER_SIZE       8192
+    #define TFT_BUFFER_WORDS      8192
   #else
-    #define TFT_BUFFER_SIZE       19200 // 320 * 60
+    #define TFT_BUFFER_WORDS      19200 // 320 * 60
   #endif
 #endif
 
-#if TFT_BUFFER_SIZE > DMA_MAX_SIZE
+#if TFT_BUFFER_WORDS > DMA_MAX_WORDS
   // DMA Count parameter is uint16_t
-  #error "TFT_BUFFER_SIZE can not exceed DMA_MAX_SIZE"
+  #error "TFT_BUFFER_WORDS can not exceed DMA_MAX_WORDS"
 #endif
 
 class TFT {
@@ -62,7 +62,7 @@ class TFT {
   public:
     static TFT_Queue queue;
 
-    static uint16_t buffer[TFT_BUFFER_SIZE];
+    static uint16_t buffer[TFT_BUFFER_WORDS];
 
     static void init();
     static void set_font(const uint8_t *Font) { string.set_font(Font); }

commit 244de2458ac6fd48f3031d0179ca1bcad6808583
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Mon Jul 17 10:53:36 2023 +0300

    üßë‚Äçüíª Improve TFT Color UI layout / theme (#26077)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 15464cb045..87dea453df 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -23,7 +23,7 @@
 
 #include "tft_queue.h"
 #include "canvas.h"
-#include "tft_color.h"
+#include "ui_theme.h"
 #include "tft_string.h"
 #include "tft_image.h"
 #include "../tft_io/tft_io.h"

commit 9bf95418a7fbc0da0a6dc8bfb5024b624b94a51a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jun 24 02:57:58 2023 -0500

    üêõ Fix TFT_LTDC::writeReg
    
    Followup to #25939

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 4a1d1d8304..15464cb045 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -72,7 +72,7 @@ class TFT {
     static void abort() { io.abort(); }
     static void write_multiple(uint16_t data, uint16_t count) { io.WriteMultipleDMA(data, count); }
     static void write_sequence(uint16_t *data, uint16_t count) { io.writeSequenceDMA(data, count); }
-    static void set_window(uint16_t Xmin, uint16_t Ymin, uint16_t Xmax, uint16_t Ymax) { io.set_window(Xmin, Ymin, Xmax, Ymax); }
+    static void set_window(uint16_t xMin, uint16_t yMin, uint16_t xMax, uint16_t yMax) { io.set_window(xMin, yMin, xMax, yMax); }
 
     static void fill(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.fill(x, y, width, height, color); }
     static void canvas(uint16_t x, uint16_t y, uint16_t width, uint16_t height) { queue.canvas(x, y, width, height); }

commit c3694f1c038fa20ad749118b0a1c7aa88e3dd5f2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 14 17:24:50 2023 -0500

    üé® Lowercase methods, functions, data members (#25939)
    
    For: TFT, DGUS, MarlinUI, Anycubic, JyersUI, CrealityUI

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 7dc3996148..4a1d1d8304 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -69,9 +69,9 @@ class TFT {
     static void add_glyphs(const uint8_t *Font) { string.add_glyphs(Font); }
 
     static bool is_busy() { return io.isBusy(); }
-    static void abort() { io.Abort(); }
-    static void write_multiple(uint16_t Data, uint16_t Count) { io.WriteMultipleDMA(Data, Count); }
-    static void write_sequence(uint16_t *Data, uint16_t Count) { io.WriteSequenceDMA(Data, Count); }
+    static void abort() { io.abort(); }
+    static void write_multiple(uint16_t data, uint16_t count) { io.WriteMultipleDMA(data, count); }
+    static void write_sequence(uint16_t *data, uint16_t count) { io.writeSequenceDMA(data, count); }
     static void set_window(uint16_t Xmin, uint16_t Ymin, uint16_t Xmax, uint16_t Ymax) { io.set_window(Xmin, Ymin, Xmax, Ymax); }
 
     static void fill(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.fill(x, y, width, height, color); }

commit 99d1b04a1f1d66aef78994fd98189a9ba9acbcb1
Author: alexgrach <gav@bmstu.ru>
Date:   Wed Jan 18 02:37:19 2023 +0300

    ‚ú® TFT 320x240 portrait (#25207)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 6df4c22d51..7dc3996148 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -37,22 +37,6 @@
   #define ENDIAN_COLOR(C) (C)
 #endif
 
-#if HAS_UI_320x240
-  #define TFT_WIDTH         320
-  #define TFT_HEIGHT        240
-#elif HAS_UI_480x320
-  #define TFT_WIDTH         480
-  #define TFT_HEIGHT        320
-#elif HAS_UI_480x272
-  #define TFT_WIDTH         480
-  #define TFT_HEIGHT        272
-#elif HAS_UI_1024x600
-  #define TFT_WIDTH         1024
-  #define TFT_HEIGHT        600
-#else
-  #error "Unsupported display resolution!"
-#endif
-
 #ifndef TFT_BUFFER_SIZE
   #ifdef STM32F103xB
     #define TFT_BUFFER_SIZE       1024

commit aaae56a6501fd617cdc1216e0d1bfec39538da61
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Tue Dec 13 00:13:31 2022 +0300

    ‚ú® TFT_COLOR_UI async DMA SPI (#24980)

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 67cec2ee1c..6df4c22d51 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -65,9 +65,9 @@
   #endif
 #endif
 
-#if TFT_BUFFER_SIZE > 65535
+#if TFT_BUFFER_SIZE > DMA_MAX_SIZE
   // DMA Count parameter is uint16_t
-  #error "TFT_BUFFER_SIZE can not exceed 65535"
+  #error "TFT_BUFFER_SIZE can not exceed DMA_MAX_SIZE"
 #endif
 
 class TFT {
@@ -86,8 +86,8 @@ class TFT {
 
     static bool is_busy() { return io.isBusy(); }
     static void abort() { io.Abort(); }
-    static void write_multiple(uint16_t Data, uint16_t Count) { io.WriteMultiple(Data, Count); }
-    static void write_sequence(uint16_t *Data, uint16_t Count) { io.WriteSequence(Data, Count); }
+    static void write_multiple(uint16_t Data, uint16_t Count) { io.WriteMultipleDMA(Data, Count); }
+    static void write_sequence(uint16_t *Data, uint16_t Count) { io.WriteSequenceDMA(Data, Count); }
     static void set_window(uint16_t Xmin, uint16_t Ymin, uint16_t Xmax, uint16_t Ymax) { io.set_window(Xmin, Ymin, Xmax, Ymax); }
 
     static void fill(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.fill(x, y, width, height, color); }

commit 8aca38351cd6d33a1202bf9a13890dc8e5eadd49
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 3 22:56:38 2022 -0500

    üßë‚Äçüíª Extend LCD string substitution (#24278)

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 435e7c30bf..67cec2ee1c 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -94,7 +94,7 @@ class TFT {
     static void canvas(uint16_t x, uint16_t y, uint16_t width, uint16_t height) { queue.canvas(x, y, width, height); }
     static void set_background(uint16_t color) { queue.set_background(color); }
     static void add_text(uint16_t x, uint16_t y, uint16_t color, TFT_String tft_string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, tft_string.string(), maxWidth); }
-    static void add_text(uint16_t x, uint16_t y, uint16_t color, const char *string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, (uint8_t *)string, maxWidth); }
+    static void add_text(uint16_t x, uint16_t y, uint16_t color, const char *string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, string, maxWidth); }
     static void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t *colors) { queue.add_image(x, y, image, colors); }
     static void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t color_main = COLOR_WHITE, uint16_t color_background = COLOR_BACKGROUND, uint16_t color_shadow = COLOR_BLACK) { queue.add_image(x, y, image, color_main,  color_background, color_shadow); }
     static void add_bar(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_bar(x, y, width, height, color); }

commit 6fb2d8a25f096d084348a6f6930f515d947474d4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 02:57:24 2021 -0600

    üßë‚Äçüíª Remove extraneous 'inline' hints

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 1576518b4b..435e7c30bf 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -81,24 +81,24 @@ class TFT {
     static uint16_t buffer[TFT_BUFFER_SIZE];
 
     static void init();
-    static inline void set_font(const uint8_t *Font) { string.set_font(Font); }
-    static inline void add_glyphs(const uint8_t *Font) { string.add_glyphs(Font); }
+    static void set_font(const uint8_t *Font) { string.set_font(Font); }
+    static void add_glyphs(const uint8_t *Font) { string.add_glyphs(Font); }
 
-    static inline bool is_busy() { return io.isBusy(); }
-    static inline void abort() { io.Abort(); }
-    static inline void write_multiple(uint16_t Data, uint16_t Count) { io.WriteMultiple(Data, Count); }
-    static inline void write_sequence(uint16_t *Data, uint16_t Count) { io.WriteSequence(Data, Count); }
-    static inline void set_window(uint16_t Xmin, uint16_t Ymin, uint16_t Xmax, uint16_t Ymax) { io.set_window(Xmin, Ymin, Xmax, Ymax); }
+    static bool is_busy() { return io.isBusy(); }
+    static void abort() { io.Abort(); }
+    static void write_multiple(uint16_t Data, uint16_t Count) { io.WriteMultiple(Data, Count); }
+    static void write_sequence(uint16_t *Data, uint16_t Count) { io.WriteSequence(Data, Count); }
+    static void set_window(uint16_t Xmin, uint16_t Ymin, uint16_t Xmax, uint16_t Ymax) { io.set_window(Xmin, Ymin, Xmax, Ymax); }
 
-    static inline void fill(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.fill(x, y, width, height, color); }
-    static inline void canvas(uint16_t x, uint16_t y, uint16_t width, uint16_t height) { queue.canvas(x, y, width, height); }
-    static inline void set_background(uint16_t color) { queue.set_background(color); }
-    static inline void add_text(uint16_t x, uint16_t y, uint16_t color, TFT_String tft_string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, tft_string.string(), maxWidth); }
-    static inline void add_text(uint16_t x, uint16_t y, uint16_t color, const char *string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, (uint8_t *)string, maxWidth); }
-    static inline void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t *colors) { queue.add_image(x, y, image, colors); }
-    static inline void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t color_main = COLOR_WHITE, uint16_t color_background = COLOR_BACKGROUND, uint16_t color_shadow = COLOR_BLACK) { queue.add_image(x, y, image, color_main,  color_background, color_shadow); }
-    static inline void add_bar(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_bar(x, y, width, height, color); }
-    static inline void add_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_rectangle(x, y, width, height, color); }
+    static void fill(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.fill(x, y, width, height, color); }
+    static void canvas(uint16_t x, uint16_t y, uint16_t width, uint16_t height) { queue.canvas(x, y, width, height); }
+    static void set_background(uint16_t color) { queue.set_background(color); }
+    static void add_text(uint16_t x, uint16_t y, uint16_t color, TFT_String tft_string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, tft_string.string(), maxWidth); }
+    static void add_text(uint16_t x, uint16_t y, uint16_t color, const char *string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, (uint8_t *)string, maxWidth); }
+    static void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t *colors) { queue.add_image(x, y, image, colors); }
+    static void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t color_main = COLOR_WHITE, uint16_t color_background = COLOR_BACKGROUND, uint16_t color_shadow = COLOR_BLACK) { queue.add_image(x, y, image, color_main,  color_background, color_shadow); }
+    static void add_bar(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_bar(x, y, width, height, color); }
+    static void add_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_rectangle(x, y, width, height, color); }
     static void draw_edit_screen_buttons();
 };
 

commit b483a8d652c18626d57b5a38c78fdd2caa6e91c3
Author: BigTreeTech <38851044+bigtreetech@users.noreply.github.com>
Date:   Tue Apr 6 10:40:50 2021 +0800

    BTT SKR-SE-BX (STM32H743IIT6 ARM Cortex M7) and BIQU_BX_TFT70 (#21536)

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 99d335d135..1576518b4b 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -46,6 +46,9 @@
 #elif HAS_UI_480x272
   #define TFT_WIDTH         480
   #define TFT_HEIGHT        272
+#elif HAS_UI_1024x600
+  #define TFT_WIDTH         1024
+  #define TFT_HEIGHT        600
 #else
   #error "Unsupported display resolution!"
 #endif

commit 41e4124af9cba37f1e7cd598f47bf21c51d00488
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Tue Dec 29 02:26:35 2020 -0300

    Support 4.3" (480x272) Color UI display (#20334)

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index d3ef62ec5b..99d335d135 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -43,6 +43,9 @@
 #elif HAS_UI_480x320
   #define TFT_WIDTH         480
   #define TFT_HEIGHT        320
+#elif HAS_UI_480x272
+  #define TFT_WIDTH         480
+  #define TFT_HEIGHT        272
 #else
   #error "Unsupported display resolution!"
 #endif

commit 185e31d322bb699e171d4c6a6fc5d6f34b40cfd3
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Mon Dec 28 02:11:36 2020 -0300

    Fix Menu Mixer for Color UI (#20566)

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 431973b894..d3ef62ec5b 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -93,6 +93,7 @@ class TFT {
     static inline void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t color_main = COLOR_WHITE, uint16_t color_background = COLOR_BACKGROUND, uint16_t color_shadow = COLOR_BLACK) { queue.add_image(x, y, image, color_main,  color_background, color_shadow); }
     static inline void add_bar(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_bar(x, y, width, height, color); }
     static inline void add_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_rectangle(x, y, width, height, color); }
+    static void draw_edit_screen_buttons();
 };
 
 extern TFT tft;

commit 4d6b6bcffc5082de84614aea0bdd2b280f503430
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Wed Dec 23 23:01:21 2020 -0300

    LVGL and Classic UI for STM32 (#20552)

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 159d0e1c19..431973b894 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -30,7 +30,7 @@
 
 #include "../../inc/MarlinConfig.h"
 
-#if TFT_INTERFACE_FSMC_8BIT
+#if ENABLED(TFT_INTERFACE_FSMC_8BIT)
   // When we have a 8 bit interface, we need to invert the bytes of the color
   #define ENDIAN_COLOR(C) (((C) >> 8) | ((C) << 8))
 #else

commit a0c8d348a0baa179a13bc47be6edce4bb652dac9
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Tue Dec 22 04:51:29 2020 -0800

    Anet ET4 / ET4P and Anet TFT28 / TFT35 (#20280)

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index ed3d5e35c1..159d0e1c19 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -30,6 +30,13 @@
 
 #include "../../inc/MarlinConfig.h"
 
+#if TFT_INTERFACE_FSMC_8BIT
+  // When we have a 8 bit interface, we need to invert the bytes of the color
+  #define ENDIAN_COLOR(C) (((C) >> 8) | ((C) << 8))
+#else
+  #define ENDIAN_COLOR(C) (C)
+#endif
+
 #if HAS_UI_320x240
   #define TFT_WIDTH         320
   #define TFT_HEIGHT        240

commit c0920bbf6a2490b7ea66d2a9e828c0f527a6c77b
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Mon Oct 12 18:38:07 2020 -0300

    TFT Refactoring (#19192)
    
    * split tft folder in two: tft for color ui; tft_io for shared tft code
    
    * after the files got moved, now the code was moved to the right place
    
    * classic ui using TFT IO init lcd codes
    
    * feature to compile tft_io when enabled
    
    * compiling fix
    
    * lvgl spi tft working with tft io init codes
    
    * there is no need for separeted fsmc and spi class in lvgl anymore, as tft io handle everything
    
    * remove debug
    
    * base for TFT rotation and mirroring API, and ILI9488 support
    
    * ST7796S rotate and mirror support
    
    * ST7789V rotate and mirror support
    
    * ST7735 rotate and mirror support
    
    * ILI9341 rotate and mirror support
    
    * ILI9328 rotate and mirror support
    
    * R61505 rotate and mirror support
    
    * MKS TFT definitions
    
    * more configs for mks tfts
    
    * update config
    
    * naming typo
    
    * to configure the user interface
    
    * ANYCUBIC_TFT35
    
    * tft configs
    
    * support for SSD1963
    
    * tft display types
    
    * updated conditionals lcd; first board fully working with the new code - all 3 ui!
    
    * compatiblity
    
    * changed name
    
    * move classic ui file name
    
    * rename TURN -> ROTATE
    
    * GRAPHICAL_TFT_ROTATE_180 deprecated
    
    * first fsmc board fully working - chitu v5
    
    * mks robin nano v1.2 + tft 35 ok!
    
    * right pin name
    
    * anycubic tft tested in a TRIGORILLA_PRO
    
    * chitu v6
    
    * nano 32 tft orientation
    
    * mks tft43
    
    * mks tft43 rotation
    
    * fixed LONGER LK tft setup
    
    * GRAPHICAL_TFT_UPSCALE defined by the display type
    
    * better offsets defaults
    
    * Update Configuration.h
    
    * Update tft_fsmc.cpp
    
    * Update Conditionals_LCD.h
    
    * Tweak comments
    
    * update nano tests
    
    * Revert "update nano tests"
    
    This reverts commit a071ebbfad30e28855a4a5695ec8a726542a1a65.
    
    * default tft
    
    * outdated comments
    
    * to not break non-vscode builds
    
    * upscale tft 35
    
    * support tft 180 rotation for color ui
    
    * Each TFT Driver is responsible for its default color mode.
    
    * use auto detect in mks displays, because some of them could be shipped with diferent drivers
    
    * extra s
    
    * unused code
    
    * wrong -1
    
    * missing mirror options
    
    * Smaller regex pattern
    
    * Comment updates
    
    * Clean up old defines
    
    * Apply pins formatting
    
    * GRAPHICAL_TFT_ROTATE_180 => TFT_ROTATE_180
    
    * MKS_ROBIN_TFT_V1_1R
    
    * merge fix
    
    * correct resolution
    
    * auto is default, dont need be there, and it will allow the user to configure it even for named displays
    
    * to not use rotation with MKS_ROBIN_TFT_V1_1R
    
    * i like () in macros
    
    * avoid sleepy commits
    
    * default for st7789 is rgb
    
    * nano follow up
    
    * to allow ili9328 rotation
    
    * default is rgb
    
    * boards merge follow up
    
    * to match bootloader orientation
    
    * HAS_TOUCH_XPT2046 is not hal specific anymore
    
    * lets not forget LPC
    
    * 180 rotation for ili9328 and R61505
    
    * Clean up whitespace
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
index 6d429109c8..ed3d5e35c1 100644
--- a/Marlin/src/lcd/tft/tft.h
+++ b/Marlin/src/lcd/tft/tft.h
@@ -26,7 +26,7 @@
 #include "tft_color.h"
 #include "tft_string.h"
 #include "tft_image.h"
-#include "tft_io.h"
+#include "../tft_io/tft_io.h"
 
 #include "../../inc/MarlinConfig.h"
 
@@ -40,20 +40,6 @@
   #error "Unsupported display resolution!"
 #endif
 
-#define ST7735          0x89F0
-#define ST7789          0x8552
-#define ST7796          0x7796
-#define R61505          0x1505
-#define ILI9328         0x9328
-#define ILI9341         0x9341
-#define ILI9488         0x9488
-#define LERDGE_ST7796   0xFFFE
-#define AUTO            0xFFFF
-
-#ifndef TFT_DRIVER
-  #define TFT_DRIVER    AUTO
-#endif
-
 #ifndef TFT_BUFFER_SIZE
   #ifdef STM32F103xB
     #define TFT_BUFFER_SIZE       1024
@@ -71,14 +57,8 @@
   #error "TFT_BUFFER_SIZE can not exceed 65535"
 #endif
 
-#define ESC_REG(x)        0xFFFF, 0x00FF & (uint16_t)x
-#define ESC_DELAY(x)      0xFFFF, 0x8000 | (x & 0x7FFF)
-#define ESC_END           0xFFFF, 0x7FFF
-#define ESC_FFFF          0xFFFF, 0xFFFF
-
 class TFT {
   private:
-    static uint32_t lcd_id;
     static TFT_String string;
     static TFT_IO io;
 
@@ -91,13 +71,11 @@ class TFT {
     static inline void set_font(const uint8_t *Font) { string.set_font(Font); }
     static inline void add_glyphs(const uint8_t *Font) { string.add_glyphs(Font); }
 
-    static void set_window(uint16_t Xmin, uint16_t Ymin, uint16_t Xmax, uint16_t Ymax);
-    static void write_esc_sequence(const uint16_t *Sequence);
-
     static inline bool is_busy() { return io.isBusy(); }
     static inline void abort() { io.Abort(); }
     static inline void write_multiple(uint16_t Data, uint16_t Count) { io.WriteMultiple(Data, Count); }
     static inline void write_sequence(uint16_t *Data, uint16_t Count) { io.WriteSequence(Data, Count); }
+    static inline void set_window(uint16_t Xmin, uint16_t Ymin, uint16_t Xmax, uint16_t Ymax) { io.set_window(Xmin, Ymin, Xmax, Ymax); }
 
     static inline void fill(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.fill(x, y, width, height, color); }
     static inline void canvas(uint16_t x, uint16_t y, uint16_t width, uint16_t height) { queue.canvas(x, y, width, height); }

commit 117df87d193994f6fbcd46c45573095adf921784
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Thu Jul 30 09:43:19 2020 +0300

    Support for TFT & Touch Screens (#18130)

diff --git a/Marlin/src/lcd/tft/tft.h b/Marlin/src/lcd/tft/tft.h
new file mode 100644
index 0000000000..6d429109c8
--- /dev/null
+++ b/Marlin/src/lcd/tft/tft.h
@@ -0,0 +1,113 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#include "tft_queue.h"
+#include "canvas.h"
+#include "tft_color.h"
+#include "tft_string.h"
+#include "tft_image.h"
+#include "tft_io.h"
+
+#include "../../inc/MarlinConfig.h"
+
+#if HAS_UI_320x240
+  #define TFT_WIDTH         320
+  #define TFT_HEIGHT        240
+#elif HAS_UI_480x320
+  #define TFT_WIDTH         480
+  #define TFT_HEIGHT        320
+#else
+  #error "Unsupported display resolution!"
+#endif
+
+#define ST7735          0x89F0
+#define ST7789          0x8552
+#define ST7796          0x7796
+#define R61505          0x1505
+#define ILI9328         0x9328
+#define ILI9341         0x9341
+#define ILI9488         0x9488
+#define LERDGE_ST7796   0xFFFE
+#define AUTO            0xFFFF
+
+#ifndef TFT_DRIVER
+  #define TFT_DRIVER    AUTO
+#endif
+
+#ifndef TFT_BUFFER_SIZE
+  #ifdef STM32F103xB
+    #define TFT_BUFFER_SIZE       1024
+  #elif defined(STM32F103xE)
+    #define TFT_BUFFER_SIZE       19200 // 320 * 60
+  #elif defined(STM32F1)
+    #define TFT_BUFFER_SIZE       8192
+  #else
+    #define TFT_BUFFER_SIZE       19200 // 320 * 60
+  #endif
+#endif
+
+#if TFT_BUFFER_SIZE > 65535
+  // DMA Count parameter is uint16_t
+  #error "TFT_BUFFER_SIZE can not exceed 65535"
+#endif
+
+#define ESC_REG(x)        0xFFFF, 0x00FF & (uint16_t)x
+#define ESC_DELAY(x)      0xFFFF, 0x8000 | (x & 0x7FFF)
+#define ESC_END           0xFFFF, 0x7FFF
+#define ESC_FFFF          0xFFFF, 0xFFFF
+
+class TFT {
+  private:
+    static uint32_t lcd_id;
+    static TFT_String string;
+    static TFT_IO io;
+
+  public:
+    static TFT_Queue queue;
+
+    static uint16_t buffer[TFT_BUFFER_SIZE];
+
+    static void init();
+    static inline void set_font(const uint8_t *Font) { string.set_font(Font); }
+    static inline void add_glyphs(const uint8_t *Font) { string.add_glyphs(Font); }
+
+    static void set_window(uint16_t Xmin, uint16_t Ymin, uint16_t Xmax, uint16_t Ymax);
+    static void write_esc_sequence(const uint16_t *Sequence);
+
+    static inline bool is_busy() { return io.isBusy(); }
+    static inline void abort() { io.Abort(); }
+    static inline void write_multiple(uint16_t Data, uint16_t Count) { io.WriteMultiple(Data, Count); }
+    static inline void write_sequence(uint16_t *Data, uint16_t Count) { io.WriteSequence(Data, Count); }
+
+    static inline void fill(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.fill(x, y, width, height, color); }
+    static inline void canvas(uint16_t x, uint16_t y, uint16_t width, uint16_t height) { queue.canvas(x, y, width, height); }
+    static inline void set_background(uint16_t color) { queue.set_background(color); }
+    static inline void add_text(uint16_t x, uint16_t y, uint16_t color, TFT_String tft_string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, tft_string.string(), maxWidth); }
+    static inline void add_text(uint16_t x, uint16_t y, uint16_t color, const char *string, uint16_t maxWidth = 0) { queue.add_text(x, y, color, (uint8_t *)string, maxWidth); }
+    static inline void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t *colors) { queue.add_image(x, y, image, colors); }
+    static inline void add_image(int16_t x, int16_t y, MarlinImage image, uint16_t color_main = COLOR_WHITE, uint16_t color_background = COLOR_BACKGROUND, uint16_t color_shadow = COLOR_BLACK) { queue.add_image(x, y, image, color_main,  color_background, color_shadow); }
+    static inline void add_bar(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_bar(x, y, width, height, color); }
+    static inline void add_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color) { queue.add_rectangle(x, y, width, height, color); }
+};
+
+extern TFT tft;
