commit 2064c83c6681afac7dec636ce361e91b8ecba76b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 26 11:57:42 2024 -0500

    üö∏ Fix SD nav after "one click print" (2)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1ff643dc21..9e81c7d4bc 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1105,6 +1105,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 1002: M1002(); break;                                // M1002: [INTERNAL] Tool-change and Relative E Move
       #endif
 
+      #if ENABLED(ONE_CLICK_PRINT)
+        case 1003: M1003(); break;                                // M1003: [INTERNAL] Set the current dir to /
+      #endif
+
       #if ENABLED(UBL_MESH_WIZARD)
         case 1004: M1004(); break;                                // M1004: UBL Mesh Wizard
       #endif

commit 854f3315af645775e7b0aa39bd05db66187bcc38
Author: plampix <plampix@users.noreply.github.com>
Date:   Wed Jan 10 07:33:54 2024 +0100

    ‚ú® EDITABLE_STEPS_PER_UNIT (#26618)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 86d73dd56f..1ff643dc21 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -669,7 +669,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 87: M87(); break;                                    // M87: Cancel Hotend Idle Timeout
       #endif
 
-      case 92: M92(); break;                                      // M92: Set the steps-per-unit for one or more axes
+      #if ENABLED(EDITABLE_STEPS_PER_UNIT)
+        case 92: M92(); break;                                    // M92: Set the steps-per-unit for one or more axes
+      #endif
+
       case 114: M114(); break;                                    // M114: Report current position
 
       #if ENABLED(CAPABILITIES_REPORT)

commit 994aa9f6923e2307d13badd26a15e6d57525955f
Author: plampix <plampix@users.noreply.github.com>
Date:   Fri Jan 5 00:09:53 2024 +0100

    ‚ö°Ô∏è Slimmer null T command (#26615)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5fb0594d9f..86d73dd56f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,14 +122,16 @@ void GcodeSuite::say_units() {
  * Return -1 if the T parameter is out of range
  */
 int8_t GcodeSuite::get_target_extruder_from_command() {
-  if (parser.seenval('T')) {
-    const int8_t e = parser.value_byte();
-    if (e < EXTRUDERS) return e;
-    SERIAL_ECHO_START();
-    SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
-    SERIAL_ECHOLNPGM(" " STR_INVALID_EXTRUDER " ", e);
-    return -1;
-  }
+  #if HAS_TOOLCHANGE
+    if (parser.seenval('T')) {
+      const int8_t e = parser.value_byte();
+      if (e < EXTRUDERS) return e;
+      SERIAL_ECHO_START();
+      SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
+      SERIAL_ECHOLNPGM(" " STR_INVALID_EXTRUDER " ", e);
+      return -1;
+    }
+  #endif
   return active_extruder;
 }
 

commit 6e67ad51b70ce4f02be967bb14e5557a021e48eb
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Thu Jan 4 18:07:53 2024 -0500

    üé® Followup to optional M111/M115 (#26626)
    
    Followup to #26603

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 945da708b4..5fb0594d9f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -670,7 +670,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       case 92: M92(); break;                                      // M92: Set the steps-per-unit for one or more axes
       case 114: M114(); break;                                    // M114: Report current position
 
-      #if ENABLED(REPORT_CAPABILITIES_GCODE)
+      #if ENABLED(CAPABILITIES_REPORT)
         case 115: M115(); break;                                  // M115: Report capabilities
       #endif
 

commit 6d407767e7692d66bc93a0012d71268770e4835c
Author: plampix <plampix@users.noreply.github.com>
Date:   Wed Jan 3 16:43:18 2024 +0100

    üîß CONFIGURE_FILAMENT_CHANGE - Optional M603 (#26613)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4266136ef4..945da708b4 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -948,7 +948,9 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if ENABLED(ADVANCED_PAUSE_FEATURE)
         case 600: M600(); break;                                  // M600: Pause for Filament Change
-        case 603: M603(); break;                                  // M603: Configure Filament Change
+        #if ENABLED(CONFIGURE_FILAMENT_CHANGE)
+          case 603: M603(); break;                                  // M603: Configure Filament Change
+        #endif
       #endif
 
       #if HAS_DUPLICATION_MODE

commit 1ac6428c82aa72cc41c0c9f758659b71e7fce1cf
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Jan 3 13:52:12 2024 +1300

    üî™ Options to slim M111, remove M115 (#26603)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 6a0e8cb171..4266136ef4 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -669,7 +669,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       case 92: M92(); break;                                      // M92: Set the steps-per-unit for one or more axes
       case 114: M114(); break;                                    // M114: Report current position
-      case 115: M115(); break;                                    // M115: Report capabilities
+
+      #if ENABLED(REPORT_CAPABILITIES_GCODE)
+        case 115: M115(); break;                                  // M115: Report capabilities
+      #endif
 
       case 117: TERN_(HAS_STATUS_MESSAGE, M117()); break;         // M117: Set LCD message text, if possible
 

commit 06710e54de8c83af77a4f57d458f6463fbfcad93
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Wed Dec 13 00:33:03 2023 -0500

    ‚ú® EDITABLE_DISPLAY_TIMEOUT (#26517)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d519bd4e29..6a0e8cb171 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -793,7 +793,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 250: M250(); break;                                  // M250: Set LCD contrast
       #endif
 
-      #if HAS_GCODE_M255
+      #if ENABLED(EDITABLE_DISPLAY_TIMEOUT)
         case 255: M255(); break;                                  // M255: Set LCD Sleep/Backlight Timeout (Minutes)
       #endif
 

commit 4744997c164931f8c1f8753ba4112e466b7c83a7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 12 12:14:57 2023 -0500

    üìù GCode => G-Code

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4902cebde2..d519bd4e29 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -153,7 +153,7 @@ int8_t GcodeSuite::get_target_e_stepper_from_command(const int8_t dval/*=-1*/) {
 }
 
 /**
- * Set XYZ...E destination and feedrate from the current GCode command
+ * Set XYZ...E destination and feedrate from the current G-Code command
  *
  *  - Set destination from included axis codes
  *  - Set to current for missing axis codes
@@ -459,7 +459,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       #if ENABLED(DEBUG_GCODE_PARSER)
-        case 800: parser.debug(); break;                          // G800: GCode Parser Test for G
+        case 800: parser.debug(); break;                          // G800: G-Code Parser Test for G
       #endif
 
       default: parser.unknown_command_warning(); break;
@@ -1035,7 +1035,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       #if ENABLED(DEBUG_GCODE_PARSER)
-        case 800: parser.debug(); break;                          // M800: GCode Parser Test for M
+        case 800: parser.debug(); break;                          // M800: G-Code Parser Test for M
       #endif
 
       #if ENABLED(GCODE_REPEAT_MARKERS)

commit e9b9d634c4ef5d48791de84545ef86d46909fec0
Author: Andrew Bortz <andrew@abortz.net>
Date:   Tue Oct 10 20:24:48 2023 -0700

    ‚ú® Nonlinear Extrusion Control (M592) (#26127)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index fd2a78d1fd..4902cebde2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -935,6 +935,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 575: M575(); break;                                  // M575: Set serial baudrate
       #endif
 
+      #if ENABLED(NONLINEAR_EXTRUSION)
+        case 592: M592(); break;                                  // M592: Nonlinear Extrusion control
+      #endif
+
       #if HAS_ZV_SHAPING
         case 593: M593(); break;                                  // M593: Input Shaping control
       #endif

commit 9135e3f7d3fd0d634656f1c54c70a0ba1f878bfd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 20 21:10:03 2023 -0500

    üö∏ Revert M206 Home Offset behavior (#25996)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 16847eb1f1..fd2a78d1fd 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -715,7 +715,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       case 204: M204(); break;                                    // M204: Set acceleration
       case 205: M205(); break;                                    // M205: Set advanced settings
 
-      #if HAS_M206_COMMAND
+      #if HAS_HOME_OFFSET
         case 206: M206(); break;                                  // M206: Set home offsets
       #endif
 
@@ -881,7 +881,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 425: M425(); break;                                  // M425: Tune backlash compensation
       #endif
 
-      #if HAS_M206_COMMAND
+      #if HAS_HOME_OFFSET
         case 428: M428(); break;                                  // M428: Apply current_position to home_offset
       #endif
 

commit 574dd34c49fde76e1e736b8a7e1ea579d724ff22
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 27 13:19:36 2023 -0500

    ‚ôªÔ∏è String helper class (#24390)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 468a9ef65f..16847eb1f1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1173,10 +1173,7 @@ void GcodeSuite::process_subcommands_now(FSTR_P fgcode) {
   for (;;) {
     PGM_P const delim = strchr_P(pgcode, '\n');       // Get address of next newline
     const size_t len = delim ? delim - pgcode : strlen_P(pgcode); // Get the command length
-    char cmd[len + 1];                                // Allocate a stack buffer
-    strncpy_P(cmd, pgcode, len);                      // Copy the command to the stack
-    cmd[len] = '\0';                                  // End with a nul
-    parser.parse(cmd);                                // Parse the command
+    parser.parse(MString<MAX_CMD_SIZE>().setn_P(pgcode, len));    // Parse the command
     process_parsed_command(true);                     // Process it (no "ok")
     if (!delim) break;                                // Last command?
     pgcode = delim + 1;                               // Get the next command

commit 402c4ef5d3de2b22efd73111222ee7d1f1f6b25f
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Sun Jun 25 15:32:56 2023 -0700

    üö∏ M86-M87 Hotend Idle Timeout (#25015)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index cedcf97c51..468a9ef65f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -658,8 +658,15 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 82: M82(); break;                                    // M82: Set E axis normal mode (same as other axes)
         case 83: M83(); break;                                    // M83: Set E axis relative mode
       #endif
+
       case 18: case 84: M18_M84(); break;                         // M18/M84: Disable Steppers / Set Timeout
       case 85: M85(); break;                                      // M85: Set inactivity stepper shutdown timeout
+
+      #if ENABLED(HOTEND_IDLE_TIMEOUT)
+        case 86: M86(); break;                                    // M86: Set Hotend Idle Timeout
+        case 87: M87(); break;                                    // M87: Cancel Hotend Idle Timeout
+      #endif
+
       case 92: M92(); break;                                      // M92: Set the steps-per-unit for one or more axes
       case 114: M114(); break;                                    // M114: Report current position
       case 115: M115(); break;                                    // M115: Report capabilities

commit 2ef71c6ebaa1f1b496eb369879fe22c69cf9adb4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jun 12 16:38:14 2023 -0500

    ‚ôªÔ∏è Simplify SERIAL_ECHO (#25928)
    
    Since this increases AVR code size, try to optimize further.

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 01b48a4af9..cedcf97c51 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -105,8 +105,7 @@ void GcodeSuite::report_heading(const bool forReplay, FSTR_P const fstr, const b
   if (forReplay) return;
   if (fstr) {
     SERIAL_ECHO_START();
-    SERIAL_ECHOPGM("; ");
-    SERIAL_ECHOF(fstr);
+    SERIAL_ECHO(F("; "), fstr);
   }
   if (eol) { SERIAL_CHAR(':'); SERIAL_EOL(); }
 }
@@ -1120,7 +1119,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
   if (!no_ok) queue.ok_to_send();
 
-  SERIAL_OUT(msgDone); // Call the msgDone serial hook to signal command processing done
+  SERIAL_IMPL.msgDone(); // Call the msgDone serial hook to signal command processing done
 }
 
 #if ENABLED(M100_FREE_MEMORY_DUMPER)

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 530cde7901..01b48a4af9 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -82,7 +82,7 @@ millis_t GcodeSuite::previous_move_ms = 0,
 // Relative motion mode for each logical axis
 relative_t GcodeSuite::axis_relative; // Init in constructor
 
-#if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
+#if ANY(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
   bool GcodeSuite::autoreport_paused; // = false
 #endif
 
@@ -204,13 +204,13 @@ void GcodeSuite::get_destination_from_command() {
     TERN_(LASER_FEATURE, cutter.feedrate_mm_m = MMS_TO_MMM(feedrate_mm_s));
   }
 
-  #if BOTH(PRINTCOUNTER, HAS_EXTRUDERS)
+  #if ALL(PRINTCOUNTER, HAS_EXTRUDERS)
     if (!DEBUGGING(DRYRUN) && !skip_move)
       print_job_timer.incFilamentUsed(destination.e - current_position.e);
   #endif
 
   // Get ABCDHI mixing factors
-  #if BOTH(MIXING_EXTRUDER, DIRECT_MIXING_IN_G1)
+  #if ALL(MIXING_EXTRUDER, DIRECT_MIXING_IN_G1)
     M165();
   #endif
 
@@ -442,7 +442,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 61: G61(); break;                                    // G61:  Apply/restore saved coordinates.
       #endif
 
-      #if BOTH(PTC_PROBE, PTC_BED)
+      #if ALL(PTC_PROBE, PTC_BED)
         case 76: G76(); break;                                    // G76: Calibrate first layer compensation values
       #endif
 
@@ -484,11 +484,11 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 7: M7(); break;                                      // M7: Coolant Mist ON
       #endif
 
-      #if EITHER(AIR_ASSIST, COOLANT_FLOOD)
+      #if ANY(AIR_ASSIST, COOLANT_FLOOD)
         case 8: M8(); break;                                      // M8: Air Assist / Coolant Flood ON
       #endif
 
-      #if EITHER(AIR_ASSIST, COOLANT_CONTROL)
+      #if ANY(AIR_ASSIST, COOLANT_CONTROL)
         case 9: M9(); break;                                      // M9: Air Assist / Coolant OFF
       #endif
 
@@ -528,7 +528,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
           case 33: M33(); break;                                  // M33: Get the long full path to a file or folder
         #endif
 
-        #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
+        #if ALL(SDCARD_SORT_ALPHA, SDSORT_GCODE)
           case 34: M34(); break;                                  // M34: Set SD card sorting options
         #endif
 
@@ -628,7 +628,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 154: M154(); break;                                  // M154: Set position auto-report interval
       #endif
 
-      #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
+      #if ALL(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
         case 155: M155(); break;                                  // M155: Set temperature auto-report interval
       #endif
 
@@ -828,7 +828,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 364: if (M364()) return; break;                      // M364: SCARA Psi pos3 (90 deg to Theta)
       #endif
 
-      #if EITHER(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
+      #if ANY(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
         case 380: M380(); break;                                  // M380: Activate solenoid on active (or specified) extruder
         case 381: M381(); break;                                  // M381: Disable all solenoids or, if MANUAL_SOLENOID_CONTROL, active (or specified) solenoid
       #endif
@@ -946,7 +946,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 665: M665(); break;                                  // M665: Set Kinematics parameters
       #endif
 
-      #if EITHER(DELTA, HAS_EXTRA_ENDSTOPS)
+      #if ANY(DELTA, HAS_EXTRA_ENDSTOPS)
         case 666: M666(); break;                                  // M666: Set delta or multiple endstop adjustment
       #endif
 
@@ -987,7 +987,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if ANY(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_PWM, HAS_MOTOR_CURRENT_I2C, HAS_MOTOR_CURRENT_DAC)
         case 907: M907(); break;                                  // M907: Set digital trimpot motor current using axis codes.
-        #if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
+        #if ANY(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
           case 908: M908(); break;                                // M908: Control digital trimpot directly.
           #if HAS_MOTOR_CURRENT_DAC
             case 909: M909(); break;                              // M909: Print digipot/DAC current value

commit 772e19aab988b5d6466bdf2e8948c8c7eee3cafd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 22:10:40 2023 -0500

    ‚ú® EP_BABYSTEPPING (#25869)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2313bbf78f..530cde7901 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -757,6 +757,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if ENABLED(BABYSTEPPING)
         case 290: M290(); break;                                  // M290: Babystepping
+        #if ENABLED(EP_BABYSTEPPING)
+          case 293: IF_DISABLED(EMERGENCY_PARSER, M293()); break; // M293: Babystep up
+          case 294: IF_DISABLED(EMERGENCY_PARSER, M294()); break; // M294: Babystep down
+        #endif
       #endif
 
       #if HAS_SOUND

commit 1234e6af528710c7be4f0c9878a023d69fb7f3fe
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 30 18:05:56 2023 -0500

    üßë‚Äçüíª Axis relative flags type

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 9c24791c82..2313bbf78f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -80,19 +80,7 @@ millis_t GcodeSuite::previous_move_ms = 0,
 #endif
 
 // Relative motion mode for each logical axis
-static constexpr xyze_bool_t ar_init = AXIS_RELATIVE_MODES;
-axis_bits_t GcodeSuite::axis_relative = 0 LOGICAL_AXIS_GANG(
-  | (ar_init.e << REL_E),
-  | (ar_init.x << REL_X),
-  | (ar_init.y << REL_Y),
-  | (ar_init.z << REL_Z),
-  | (ar_init.i << REL_I),
-  | (ar_init.j << REL_J),
-  | (ar_init.k << REL_K),
-  | (ar_init.u << REL_U),
-  | (ar_init.v << REL_V),
-  | (ar_init.w << REL_W)
-);
+relative_t GcodeSuite::axis_relative; // Init in constructor
 
 #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
   bool GcodeSuite::autoreport_paused; // = false

commit e1f6435d4410478930ef5fb7d99a311332f3cee8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue May 2 17:59:27 2023 -0500

    ‚ú® Creality STM32F401RE board (e.g., Ender-5 S1) (#25773)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 013a2bfb74..9c24791c82 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1061,6 +1061,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif
 
+      #if ENABLED(OTA_FIRMWARE_UPDATE)
+        case 936: M936(); break;                                  // M936: OTA update firmware.
+      #endif
+
       #if SPI_FLASH_BACKUP
         case 993: M993(); break;                                  // M993: Backup SPI Flash to SD
         case 994: M994(); break;                                  // M994: Load a Backup from SD to SPI Flash

commit 9a7d9e6995f4f66c4b48147ec7876d49d4b3ae77
Author: Martin Turski <turningtides@outlook.de>
Date:   Thu Apr 27 14:05:24 2023 +0200

    üßë‚Äçüíª Optimize PlatformIO source filtering (#25332)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 931c30c26d..013a2bfb74 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1061,7 +1061,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif
 
-      #if ALL(SPI_FLASH, HAS_MEDIA, MARLIN_DEV_MODE)
+      #if SPI_FLASH_BACKUP
         case 993: M993(); break;                                  // M993: Backup SPI Flash to SD
         case 994: M994(); break;                                  // M994: Load a Backup from SD to SPI Flash
       #endif

commit 68f74784a3a41c643984ee62a507b25903430591
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 26 13:50:45 2023 -0500

    üé® Misc. fixes, cleanup

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 06a9600c43..931c30c26d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -954,7 +954,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 665: M665(); break;                                  // M665: Set Kinematics parameters
       #endif
 
-      #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
+      #if EITHER(DELTA, HAS_EXTRA_ENDSTOPS)
         case 666: M666(); break;                                  // M666: Set delta or multiple endstop adjustment
       #endif
 

commit 5664c02d077e028f84a24efd96c2eebe97ce8763
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 22:43:09 2023 -0500

    üßë‚Äçüíª Generalize SDSUPPORT as HAS_MEDIA
    
    In preparation for single- and multi-volume refactoring.

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 9d1014e8bf..06a9600c43 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -519,7 +519,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       case 17: M17(); break;                                      // M17: Enable all stepper motors
 
-      #if ENABLED(SDSUPPORT)
+      #if HAS_MEDIA
         case 20: M20(); break;                                    // M20: List SD card
         case 21: M21(); break;                                    // M21: Init SD card
         case 22: M22(); break;                                    // M22: Release SD card
@@ -545,7 +545,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         #endif
 
         case 928: M928(); break;                                  // M928: Start SD write
-      #endif // SDSUPPORT
+      #endif // HAS_MEDIA
 
       case 31: M31(); break;                                      // M31: Report time since the start of SD print or last M109
 
@@ -919,7 +919,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         #endif
       #endif
 
-      #if ENABLED(SDSUPPORT)
+      #if HAS_MEDIA
         case 524: M524(); break;                                  // M524: Abort the current SD print job
       #endif
 
@@ -1061,7 +1061,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif
 
-      #if ALL(SPI_FLASH, SDSUPPORT, MARLIN_DEV_MODE)
+      #if ALL(SPI_FLASH, HAS_MEDIA, MARLIN_DEV_MODE)
         case 993: M993(); break;                                  // M993: Backup SPI Flash to SD
         case 994: M994(); break;                                  // M994: Load a Backup from SD to SPI Flash
       #endif
@@ -1081,7 +1081,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 1000: M1000(); break;                                // M1000: [INTERNAL] Resume from power-loss
       #endif
 
-      #if ENABLED(SDSUPPORT)
+      #if HAS_MEDIA
         case 1001: M1001(); break;                                // M1001: [INTERNAL] Handle SD completion
       #endif
 

commit c8ed7950f40f9f454fc769b02d53f1086b17576c
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Apr 22 21:09:17 2023 +1200

    üîß Permit extrude without hotend (#25709)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0711d39204..9d1014e8bf 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -581,7 +581,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 102: M102(); break;                                  // M102: Configure Bed Distance Sensor
       #endif
 
-      #if HAS_EXTRUDERS
+      #if HAS_HOTEND
         case 104: M104(); break;                                  // M104: Set hot end temperature
         case 109: M109(); break;                                  // M109: Wait for hotend temperature to reach target
       #endif

commit c37fa3cc9097a9aa7fad5f168e335caabf23278e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 31 21:18:37 2023 -0500

    ‚ú® Fixed-Time Motion with Input Shaping by Ulendo (#25394)
    
    Co-authored-by: Ulendo Alex <alex@ulendo.io>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1752ae8a18..0711d39204 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -895,6 +895,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 486: M486(); break;                                  // M486: Identify and cancel objects
       #endif
 
+      #if ENABLED(FT_MOTION)
+        case 493: M493(); break;                                  // M493: Fixed-Time Motion control
+      #endif
+
       case 500: M500(); break;                                    // M500: Store settings in EEPROM
       case 501: M501(); break;                                    // M501: Read settings from EEPROM
       case 502: M502(); break;                                    // M502: Revert to default settings
@@ -934,7 +938,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       #if HAS_ZV_SHAPING
-        case 593: M593(); break;                                  // M593: Set Input Shaping parameters
+        case 593: M593(); break;                                  // M593: Input Shaping control
       #endif
 
       #if ENABLED(ADVANCED_PAUSE_FEATURE)

commit 8cdf43f8fdf8900ad903d094d1aeb5dc651b324b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 31 20:26:49 2023 -0500

    üé®  HAS_SHAPING => HAS_ZV_SHAPING

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1eaf4dcd39..1752ae8a18 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -933,7 +933,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 575: M575(); break;                                  // M575: Set serial baudrate
       #endif
 
-      #if HAS_SHAPING
+      #if HAS_ZV_SHAPING
         case 593: M593(); break;                                  // M593: Set Input Shaping parameters
       #endif
 

commit 61f22f34d32ca33d99233eb5b242e52c23aabb23
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Mar 26 17:24:40 2023 -0500

    üîß Clarify axis disable / timeout (#25571)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f08ade8c38..1eaf4dcd39 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -75,8 +75,8 @@ GcodeSuite gcode;
 millis_t GcodeSuite::previous_move_ms = 0,
          GcodeSuite::max_inactive_time = 0;
 
-#if HAS_DISABLE_INACTIVE_AXIS
-  millis_t GcodeSuite::stepper_inactive_time = SEC_TO_MS(DEFAULT_STEPPER_DEACTIVE_TIME);
+#if HAS_DISABLE_IDLE_AXES
+  millis_t GcodeSuite::stepper_inactive_time = SEC_TO_MS(DEFAULT_STEPPER_TIMEOUT_SEC);
 #endif
 
 // Relative motion mode for each logical axis

commit c3fe4abd446336c50bdb892f08fa24a08f1bdda5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 7 22:59:25 2023 -0600

    üî® DGUS_LCD_UI version check

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bb859d8026..f08ade8c38 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1081,7 +1081,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 1001: M1001(); break;                                // M1001: [INTERNAL] Handle SD completion
       #endif
 
-      #if ENABLED(DGUS_LCD_UI_MKS)
+      #if DGUS_LCD_UI_MKS
         case 1002: M1002(); break;                                // M1002: [INTERNAL] Tool-change and Relative E Move
       #endif
 

commit 89334caa526f2d300eee834d34d06d8f837a57d5
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Mon Nov 28 03:38:15 2022 +0000

    ‚ö°Ô∏è Input Shaping improvements (#24951)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ff066ed678..bb859d8026 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -933,7 +933,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 575: M575(); break;                                  // M575: Set serial baudrate
       #endif
 
-      #if ENABLED(INPUT_SHAPING)
+      #if HAS_SHAPING
         case 593: M593(); break;                                  // M593: Set Input Shaping parameters
       #endif
 

commit a460b01c876ff39901fe55a4b66b2c62737ef46c
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Fri Oct 21 22:34:22 2022 +0100

    üöÄ ZV Input Shaping (#24797)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0667ef0b7b..ff066ed678 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -933,6 +933,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 575: M575(); break;                                  // M575: Set serial baudrate
       #endif
 
+      #if ENABLED(INPUT_SHAPING)
+        case 593: M593(); break;                                  // M593: Set Input Shaping parameters
+      #endif
+
       #if ENABLED(ADVANCED_PAUSE_FEATURE)
         case 600: M600(); break;                                  // M600: Pause for Filament Change
         case 603: M603(); break;                                  // M603: Configure Filament Change

commit dd3b65bb1ff41deda223562b24ed230bfa0e0c2a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 17 13:01:45 2022 -0500

    üé® HAS_SPI_FLASH => SPI_FLASH

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7edcaa981c..0667ef0b7b 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1053,7 +1053,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif
 
-      #if ALL(HAS_SPI_FLASH, SDSUPPORT, MARLIN_DEV_MODE)
+      #if ALL(SPI_FLASH, SDSUPPORT, MARLIN_DEV_MODE)
         case 993: M993(); break;                                  // M993: Backup SPI Flash to SD
         case 994: M994(); break;                                  // M994: Load a Backup from SD to SPI Flash
       #endif

commit bbf4bcf5aee7c12ea5a6c9d3319622d30449ab87
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Oct 12 18:15:29 2022 -0500

    üêõ Fix M876 without emergency parser
    
    Fix regression from 1fb2fffdbf

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 6be4f46b21..7edcaa981c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -600,7 +600,9 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 108: M108(); break;                                  // M108: Cancel Waiting
         case 112: M112(); break;                                  // M112: Full Shutdown
         case 410: M410(); break;                                  // M410: Quickstop - Abort all the planned moves.
-        TERN_(HOST_PROMPT_SUPPORT, case 876:)                     // M876: Handle Host prompt responses
+        #if ENABLED(HOST_PROMPT_SUPPORT)
+          case 876: M876(); break;                                // M876: Handle Host prompt responses
+        #endif
       #else
         case 108: case 112: case 410:
         TERN_(HOST_PROMPT_SUPPORT, case 876:)

commit 797aafd645957ec02051c8fff892fbd82e51d94c
Author: adam3654 <adam3654@gmail.com>
Date:   Wed Oct 12 19:03:32 2022 -0400

    ‚ú® DOGM Display Sleep (#24829)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 863d432095..6be4f46b21 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -793,6 +793,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 250: M250(); break;                                  // M250: Set LCD contrast
       #endif
 
+      #if HAS_GCODE_M255
+        case 255: M255(); break;                                  // M255: Set LCD Sleep/Backlight Timeout (Minutes)
+      #endif
+
       #if HAS_LCD_BRIGHTNESS
         case 256: M256(); break;                                  // M256: Set LCD brightness
       #endif

commit f595e40ceb0c79d7f0d6438636658dfcfa2a75b8
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Sun Oct 9 18:30:47 2022 +0300

    ‚ôªÔ∏è Set Progress without LCD (#24767)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 405e2d460c..863d432095 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -561,8 +561,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 48: M48(); break;                                    // M48: Z probe repeatability test
       #endif
 
-      #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
-        case 73: M73(); break;                                    // M73: Set progress percentage (for display on LCD)
+      #if ENABLED(SET_PROGRESS_MANUALLY)
+        case 73: M73(); break;                                    // M73: Set progress percentage
       #endif
 
       case 75: M75(); break;                                      // M75: Start print timer

commit 83320f1052dd09bff7aae789372e7bffccbced97
Author: Mark <niujl123@sina.com>
Date:   Sat Aug 6 14:14:58 2022 +0800

    ‚ú® Bed Distance Sensor (#24554)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bbfe561ffe..405e2d460c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -577,6 +577,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 100: M100(); break;                                  // M100: Free Memory Report
       #endif
 
+      #if ENABLED(BD_SENSOR)
+        case 102: M102(); break;                                  // M102: Configure Bed Distance Sensor
+      #endif
+
       #if HAS_EXTRUDERS
         case 104: M104(); break;                                  // M104: Set hot end temperature
         case 109: M109(); break;                                  // M109: Wait for hotend temperature to reach target

commit 68f13ca9cf7bcf9feae859e0dacfa8b8cd63578f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Aug 6 00:57:37 2022 -0500

    ü©π G0/G1 S seen => seenval

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0cae1573bc..bbfe561ffe 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -233,7 +233,7 @@ void GcodeSuite::get_destination_from_command() {
       if (WITHIN(parser.codenum, 1, TERN(ARC_SUPPORT, 3, 1)) || TERN0(BEZIER_CURVE_SUPPORT, parser.codenum == 5)) {
         planner.laser_inline.status.isPowered = true;
         if (parser.seen('I')) cutter.set_enabled(true);       // This is set for backward LightBurn compatibility.
-        if (parser.seen('S')) {
+        if (parser.seenval('S')) {
           const float v = parser.value_float(),
                       u = TERN(LASER_POWER_TRAP, v, cutter.power_to_range(v));
           cutter.menuPower = cutter.unitPower = u;

commit 5f2908a117ab45cf9e5a03a39e499979a40bf0f3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jul 18 19:53:36 2022 -0500

    ‚ôªÔ∏è Small sound / buzz refactor (#24520)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1cbd3019c8..0cae1573bc 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -765,7 +765,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 290: M290(); break;                                  // M290: Babystepping
       #endif
 
-      #if HAS_BUZZER
+      #if HAS_SOUND
         case 300: M300(); break;                                  // M300: Play beep tone
       #endif
 

commit 9706cd0d7dc9e09faec2ed2b5ec106dbd22e5c61
Author: Arthur Masson <arthur.sw@gmail.com>
Date:   Sat Jul 16 23:58:18 2022 +0200

    ‚ú® Polargraph M665 settings (#24401)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d0242570eb..1cbd3019c8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -933,7 +933,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       #if IS_KINEMATIC
-        case 665: M665(); break;                                  // M665: Set Delta/SCARA parameters
+        case 665: M665(); break;                                  // M665: Set Kinematics parameters
       #endif
 
       #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS

commit 3f4e4a4d891e3c4b73ab80aedec46e69c1b59f0d
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Jul 13 22:16:22 2022 -0500

    üî• Drop STM L64** drivers, STEVAL_3DP001V1 (#24427)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a13940afc3..d0242570eb 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1005,14 +1005,6 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 919: M919(); break;                                  // M919: Set stepper Chopper Times
       #endif
 
-      #if HAS_L64XX
-        case 122: M122(); break;                                   // M122: Report status
-        case 906: M906(); break;                                   // M906: Set or get motor drive level
-        case 916: M916(); break;                                   // M916: L6470 tuning: Increase drive level until thermal warning
-        case 917: M917(); break;                                   // M917: L6470 tuning: Find minimum current thresholds
-        case 918: M918(); break;                                   // M918: L6470 tuning: Increase speed until max or error
-      #endif
-
       #if HAS_MICROSTEPS
         case 350: M350(); break;                                  // M350: Set microstepping mode. Warning: Steps per unit remains unchanged. S code sets stepping mode for all drivers.
         case 351: M351(); break;                                  // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.

commit 6a67ad4e4aacf7e7314f9e15fd8fe8489b73742b
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Wed Jul 6 07:46:39 2022 -0500

    ‚ö°Ô∏è Fix and improve Inline Laser Power (#22690)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f4dac89b0e..a13940afc3 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -53,7 +53,7 @@ GcodeSuite gcode;
   #include "../feature/cancel_object.h"
 #endif
 
-#if ENABLED(LASER_MOVE_POWER)
+#if ENABLED(LASER_FEATURE)
   #include "../feature/spindle_laser.h"
 #endif
 
@@ -210,8 +210,11 @@ void GcodeSuite::get_destination_from_command() {
       recovery.save();
   #endif
 
-  if (parser.floatval('F') > 0)
+  if (parser.floatval('F') > 0) {
     feedrate_mm_s = parser.value_feedrate();
+    // Update the cutter feed rate for use by M4 I set inline moves.
+    TERN_(LASER_FEATURE, cutter.feedrate_mm_m = MMS_TO_MMM(feedrate_mm_s));
+  }
 
   #if BOTH(PRINTCOUNTER, HAS_EXTRUDERS)
     if (!DEBUGGING(DRYRUN) && !skip_move)
@@ -223,15 +226,29 @@ void GcodeSuite::get_destination_from_command() {
     M165();
   #endif
 
-  #if ENABLED(LASER_MOVE_POWER)
-    // Set the laser power in the planner to configure this move
-    if (parser.seen('S')) {
-      const float spwr = parser.value_float();
-      cutter.inline_power(TERN(SPINDLE_LASER_USE_PWM, cutter.power_to_range(cutter_power_t(round(spwr))), spwr > 0 ? 255 : 0));
+  #if ENABLED(LASER_FEATURE)
+    if (cutter.cutter_mode == CUTTER_MODE_CONTINUOUS || cutter.cutter_mode == CUTTER_MODE_DYNAMIC) {
+      // Set the cutter power in the planner to configure this move
+      cutter.last_feedrate_mm_m = 0;
+      if (WITHIN(parser.codenum, 1, TERN(ARC_SUPPORT, 3, 1)) || TERN0(BEZIER_CURVE_SUPPORT, parser.codenum == 5)) {
+        planner.laser_inline.status.isPowered = true;
+        if (parser.seen('I')) cutter.set_enabled(true);       // This is set for backward LightBurn compatibility.
+        if (parser.seen('S')) {
+          const float v = parser.value_float(),
+                      u = TERN(LASER_POWER_TRAP, v, cutter.power_to_range(v));
+          cutter.menuPower = cutter.unitPower = u;
+          cutter.inline_power(TERN(SPINDLE_LASER_USE_PWM, cutter.upower_to_ocr(u), u > 0 ? 255 : 0));
+        }
+      }
+      else if (parser.codenum == 0) {
+        // For dynamic mode we need to flag isPowered off, dynamic power is calculated in the stepper based on feedrate.
+        if (cutter.cutter_mode == CUTTER_MODE_DYNAMIC) planner.laser_inline.status.isPowered = false;
+        cutter.inline_power(0); // This is planner-based so only set power and do not disable inline control flags.
+      }
     }
-    else if (ENABLED(LASER_MOVE_G0_OFF) && parser.codenum == 0) // G0
-      cutter.set_inline_enabled(false);
-  #endif
+    else if (parser.codenum == 0)
+      cutter.apply_power(0);
+  #endif // LASER_FEATURE
 }
 
 /**

commit 8c3ba69c9841c248882388d0a572deaf33e0f758
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Jun 22 16:13:18 2022 +1200

    üêõ Fix M423 invocation (#24360)
    
    Followup to #23745

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5425fc701f..f4dac89b0e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -848,6 +848,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 421: M421(); break;                                  // M421: Set a Mesh Bed Leveling Z coordinate
       #endif
 
+      #if ENABLED(X_AXIS_TWIST_COMPENSATION)
+        case 423: M423(); break;                                  // M423: Reset, modify, or report X-Twist Compensation data
+      #endif
+
       #if ENABLED(BACKLASH_GCODE)
         case 425: M425(); break;                                  // M425: Tune backlash compensation
       #endif

commit 85c0875db28477d7ed6515c39376b93407353b27
Author: John Robertson <john@cirtech.co.uk>
Date:   Tue May 31 23:09:44 2022 +0100

    ‚ú® Laser Safety Timeout (#24189)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2ba48f9ef2..5425fc701f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -73,8 +73,11 @@ GcodeSuite gcode;
 
 // Inactivity shutdown
 millis_t GcodeSuite::previous_move_ms = 0,
-         GcodeSuite::max_inactive_time = 0,
-         GcodeSuite::stepper_inactive_time = SEC_TO_MS(DEFAULT_STEPPER_DEACTIVE_TIME);
+         GcodeSuite::max_inactive_time = 0;
+
+#if HAS_DISABLE_INACTIVE_AXIS
+  millis_t GcodeSuite::stepper_inactive_time = SEC_TO_MS(DEFAULT_STEPPER_DEACTIVE_TIME);
+#endif
 
 // Relative motion mode for each logical axis
 static constexpr xyze_bool_t ar_init = AXIS_RELATIVE_MODES;

commit 58ce5182c2ea93e79ccaef4c912c68aa554e637e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 31 12:43:44 2022 -0500

    üé® Fix spelling, whitespace

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index b8668c74a8..2ba48f9ef2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -21,7 +21,7 @@
  */
 
 /**
- * gcode.cpp - Temporary container for all gcode handlers
+ * gcode.cpp - Temporary container for all G-code handlers
  *             Most will migrate to classes, by feature.
  */
 

commit 3905234b0d4a8543614e1e76b537350ca4976f11
Author: Christian Piper <42127153+CAP1Sup@users.noreply.github.com>
Date:   Thu Apr 21 03:15:07 2022 -0400

    ü©π Fix PRINTCOUNTER with EXTRUDERS 0 (#24063)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5c02cbb507..b8668c74a8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -210,7 +210,7 @@ void GcodeSuite::get_destination_from_command() {
   if (parser.floatval('F') > 0)
     feedrate_mm_s = parser.value_feedrate();
 
-  #if ENABLED(PRINTCOUNTER)
+  #if BOTH(PRINTCOUNTER, HAS_EXTRUDERS)
     if (!DEBUGGING(DRYRUN) && !skip_move)
       print_job_timer.incFilamentUsed(destination.e - current_position.e);
   #endif

commit 72b2e2b2c7230245dea9fcb46b9b8a92bcb11bcc
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Fri Apr 1 08:14:14 2022 +0100

    ‚öóÔ∏è Temperature Model Predictive Control (#23751)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 9d225cef51..5c02cbb507 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -790,6 +790,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 305: M305(); break;                                  // M305: Set user thermistor parameters
       #endif
 
+      #if ENABLED(MPCTEMP)
+        case 306: M306(); break;                                  // M306: MPC autotune
+      #endif
+
       #if ENABLED(REPETIER_GCODE_M360)
         case 360: M360(); break;                                  // M360: Firmware settings
       #endif

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c365f8a67b..9d225cef51 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -85,7 +85,10 @@ axis_bits_t GcodeSuite::axis_relative = 0 LOGICAL_AXIS_GANG(
   | (ar_init.z << REL_Z),
   | (ar_init.i << REL_I),
   | (ar_init.j << REL_J),
-  | (ar_init.k << REL_K)
+  | (ar_init.k << REL_K),
+  | (ar_init.u << REL_U),
+  | (ar_init.v << REL_V),
+  | (ar_init.w << REL_W)
 );
 
 #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
@@ -176,7 +179,7 @@ void GcodeSuite::get_destination_from_command() {
   #endif
 
   // Get new XYZ position, whether absolute or relative
-  LOOP_LINEAR_AXES(i) {
+  LOOP_NUM_AXES(i) {
     if ( (seen[i] = parser.seenval(AXIS_CHAR(i))) ) {
       const float v = parser.value_axis_units((AxisEnum)i);
       if (skip_move)

commit 6fbfeb68010e63c76b545e2c27aeb48ee73be68b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 1 22:54:27 2022 -0600

    ‚ú® M919 : Chopper Timing (#23400)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2f031b3b74..c365f8a67b 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -971,6 +971,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         #if USE_SENSORLESS
           case 914: M914(); break;                                // M914: Set StallGuard sensitivity.
         #endif
+        case 919: M919(); break;                                  // M919: Set stepper Chopper Times
       #endif
 
       #if HAS_L64XX

commit ff46d7cae274375eba82a278ca70fe0da016f778
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 31 01:43:25 2021 -0600

    üêõ Fix "no T param" handling

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d3d8f335df..2f031b3b74 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -148,6 +148,7 @@ int8_t GcodeSuite::get_target_extruder_from_command() {
 int8_t GcodeSuite::get_target_e_stepper_from_command(const int8_t dval/*=-1*/) {
   const int8_t e = parser.intval('T', dval);
   if (WITHIN(e, 0, E_STEPPERS - 1)) return e;
+  if (dval == -2) return dval;
 
   SERIAL_ECHO_START();
   SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);

commit 02b4e48c6df1604d3de09cbef072f685fe956e92
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 05:43:10 2021 -0600

    üö∏ Refine stepper-driver-related G-codes (#23372)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c05ac5494d..d3d8f335df 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -159,7 +159,7 @@ int8_t GcodeSuite::get_target_e_stepper_from_command(const int8_t dval/*=-1*/) {
 }
 
 /**
- * Set XYZIJKE destination and feedrate from the current GCode command
+ * Set XYZ...E destination and feedrate from the current GCode command
  *
  *  - Set destination from included axis codes
  *  - Set to current for missing axis codes

commit 363a17ac464e72bb013150e742b0e95f9df707eb
Author: Stuart Pittaway <1201909+stuartpittaway@users.noreply.github.com>
Date:   Sat Dec 4 23:44:10 2021 +0000

    ‚ú® M3426 to read i2c MCP3426 ADC (#23184)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 24eb9914d1..c05ac5494d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1054,6 +1054,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 7219: M7219(); break;                                // M7219: Set LEDs, columns, and rows
       #endif
 
+      #if ENABLED(HAS_MCP3426_ADC)
+        case 3426: M3426(); break;                                // M3426: Read MCP3426 ADC (over i2c)
+      #endif
+
       default: parser.unknown_command_warning(); break;
     }
     break;

commit 7110d11c9d8933c8c412c2fabd3b065a5ab97b6e
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Nov 23 21:01:53 2021 +0100

    ‚ú® Fan tachometer support (#23086)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index b2cb26122f..24eb9914d1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -65,6 +65,10 @@ GcodeSuite gcode;
   #include "../feature/password/password.h"
 #endif
 
+#if HAS_FANCHECK
+  #include "../feature/fancheck.h"
+#endif
+
 #include "../MarlinCore.h" // for idle, kill
 
 // Inactivity shutdown
@@ -296,6 +300,8 @@ void GcodeSuite::dwell(millis_t time) {
  * Process the parsed command and dispatch it to its handler
  */
 void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
+  TERN_(HAS_FANCHECK, fan_check.check_deferred_error());
+
   KEEPALIVE_STATE(IN_HANDLER);
 
  /**
@@ -577,6 +583,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 113: M113(); break;                                  // M113: Set Host Keepalive interval
       #endif
 
+      #if HAS_FANCHECK
+        case 123: M123(); break;                                  // M123: Report fan states or set fans auto-report interval
+      #endif
+
       #if HAS_HEATED_BED
         case 140: M140(); break;                                  // M140: Set bed temperature
         case 190: M190(); break;                                  // M190: Wait for bed temperature to reach target

commit 296a6137cd06ce06f062767ab1b59f99ee95a094
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Mon Nov 1 23:03:50 2021 +0000

    üö∏ More flexible Probe Temperature Compensation (#23033)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index fb1669c1ea..b2cb26122f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -424,7 +424,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 61: G61(); break;                                    // G61:  Apply/restore saved coordinates.
       #endif
 
-      #if ENABLED(PROBE_TEMP_COMPENSATION)
+      #if BOTH(PTC_PROBE, PTC_BED)
         case 76: G76(); break;                                    // G76: Calibrate first layer compensation values
       #endif
 
@@ -587,6 +587,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 191: M191(); break;                                  // M191: Wait for chamber temperature to reach target
       #endif
 
+      #if HAS_TEMP_PROBE
+        case 192: M192(); break;                                  // M192: Wait for probe temp
+      #endif
+
       #if HAS_COOLER
         case 143: M143(); break;                                  // M143: Set cooler temperature
         case 193: M193(); break;                                  // M193: Wait for cooler temperature to reach target
@@ -921,8 +925,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 852: M852(); break;                                  // M852: Set Skew factors
       #endif
 
-      #if ENABLED(PROBE_TEMP_COMPENSATION)
-        case 192: M192(); break;                                  // M192: Wait for probe temp
+      #if HAS_PTC
         case 871: M871(); break;                                  // M871: Print/reset/clear first layer temperature offset values
       #endif
 

commit 1d80464ba77bc576426f15af28a633bf48d769ad
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 27 21:15:58 2021 -0500

    üé® Define HAS_PREHEAT conditional

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 30c7d926e0..fb1669c1ea 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -640,7 +640,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       case 120: M120(); break;                                    // M120: Enable endstops
       case 121: M121(); break;                                    // M121: Disable endstops
 
-      #if PREHEAT_COUNT
+      #if HAS_PREHEAT
         case 145: M145(); break;                                  // M145: Set material heatup parameters
       #endif
 

commit 73875cf9ccd4b23bbe2a46bb57192109b7d1a7c6
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Mon Oct 25 22:29:40 2021 +0100

    üö∏ Default T0 for M569, M906, M913 (#23020)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ef21935185..30c7d926e0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -137,11 +137,12 @@ int8_t GcodeSuite::get_target_extruder_from_command() {
 }
 
 /**
- * Get the target e stepper from the T parameter
- * Return -1 if the T parameter is out of range or unspecified
+ * Get the target E stepper from the 'T' parameter.
+ * If there is no 'T' parameter then dval will be substituted.
+ * Returns -1 if the resulting E stepper index is out of range.
  */
-int8_t GcodeSuite::get_target_e_stepper_from_command() {
-  const int8_t e = parser.intval('T', -1);
+int8_t GcodeSuite::get_target_e_stepper_from_command(const int8_t dval/*=-1*/) {
+  const int8_t e = parser.intval('T', dval);
   if (WITHIN(e, 0, E_STEPPERS - 1)) return e;
 
   SERIAL_ECHO_START();

commit 52edc543bd72bfacb4ac6eb47eae2e466dcce62d
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Tue Oct 19 06:05:23 2021 -0500

    ü©π Fix pragma ignored for older GCC (#22978)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5a030e97ab..ef21935185 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1095,14 +1095,15 @@ void GcodeSuite::process_next_command() {
   process_parsed_command();
 }
 
+#pragma GCC diagnostic push
+#if GCC_VERSION >= 80000
+  #pragma GCC diagnostic ignored "-Wstringop-truncation"
+#endif
+
 /**
  * Run a series of commands, bypassing the command queue to allow
  * G-code "macros" to be called from within other G-code handlers.
  */
-
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wstringop-truncation"
-
 void GcodeSuite::process_subcommands_now(FSTR_P fgcode) {
   PGM_P pgcode = FTOP(fgcode);
   char * const saved_cmd = parser.command_ptr;        // Save the parser state

commit ee28a14e8e7f6b33fe5813dbedcd85380207c345
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 15 00:24:08 2021 -0500

    üé® Refactor Host Actions as singleton

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1bfb82622e..5a030e97ab 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -237,9 +237,9 @@ void GcodeSuite::dwell(millis_t time) {
 #if ENABLED(G29_RETRY_AND_RECOVER)
 
   void GcodeSuite::event_probe_recover() {
-    TERN_(HOST_PROMPT_SUPPORT, host_prompt_do(PROMPT_INFO, F("G29 Retrying"), FPSTR(DISMISS_STR)));
+    TERN_(HOST_PROMPT_SUPPORT, hostui.prompt_do(PROMPT_INFO, F("G29 Retrying"), FPSTR(DISMISS_STR)));
     #ifdef ACTION_ON_G29_RECOVER
-      host_action(F(ACTION_ON_G29_RECOVER));
+      hostui.g29_recover();
     #endif
     #ifdef G29_RECOVER_COMMANDS
       process_subcommands_now(F(G29_RECOVER_COMMANDS));
@@ -252,14 +252,14 @@ void GcodeSuite::dwell(millis_t time) {
 
   void GcodeSuite::event_probe_failure() {
     #ifdef ACTION_ON_G29_FAILURE
-      host_action(F(ACTION_ON_G29_FAILURE));
+      hostui.g29_failure();
     #endif
     #ifdef G29_FAILURE_COMMANDS
       process_subcommands_now(F(G29_FAILURE_COMMANDS));
     #endif
     #if ENABLED(G29_HALT_ON_FAILURE)
       #ifdef ACTION_ON_CANCEL
-        host_action_cancel();
+        hostui.cancel();
       #endif
       kill(GET_TEXT_F(MSG_LCD_PROBING_FAILED));
     #endif
@@ -282,7 +282,7 @@ void GcodeSuite::dwell(millis_t time) {
       }
     }
 
-    TERN_(HOST_PROMPT_SUPPORT, host_action_prompt_end());
+    TERN_(HOST_PROMPT_SUPPORT, hostui.prompt_end());
 
     #ifdef G29_SUCCESS_COMMANDS
       process_subcommands_now(F(G29_SUCCESS_COMMANDS));

commit 9922410a73fd3285bfba0478ac16f04eeee48b8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 5 21:35:31 2021 -0500

    üî® Port libsdl2_net required for macOS simulator

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e0d6101ae2..1bfb82622e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1100,6 +1100,9 @@ void GcodeSuite::process_next_command() {
  * G-code "macros" to be called from within other G-code handlers.
  */
 
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wstringop-truncation"
+
 void GcodeSuite::process_subcommands_now(FSTR_P fgcode) {
   PGM_P pgcode = FTOP(fgcode);
   char * const saved_cmd = parser.command_ptr;        // Save the parser state
@@ -1117,6 +1120,8 @@ void GcodeSuite::process_subcommands_now(FSTR_P fgcode) {
   parser.parse(saved_cmd);                            // Restore the parser state
 }
 
+#pragma GCC diagnostic pop
+
 void GcodeSuite::process_subcommands_now(char * gcode) {
   char * const saved_cmd = parser.command_ptr;        // Save the parser state
   for (;;) {

commit 65b950a489c35b1d5547da3a504af4dad8cde3d7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 28 20:15:52 2021 -0500

    üé® Apply F() to kill / sendinfoscreen

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 126f7452b8..e0d6101ae2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -261,7 +261,7 @@ void GcodeSuite::dwell(millis_t time) {
       #ifdef ACTION_ON_CANCEL
         host_action_cancel();
       #endif
-      kill(GET_TEXT(MSG_LCD_PROBING_FAILED));
+      kill(GET_TEXT_F(MSG_LCD_PROBING_FAILED));
     #endif
   }
 

commit 1dafd1887e40399faf16e3455e3670ed3acfac52
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 13:46:42 2021 -0500

    üé® Apply F() to various reports

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5f84ca3c38..126f7452b8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1067,7 +1067,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 }
 
 #if ENABLED(M100_FREE_MEMORY_DUMPER)
-  void M100_dump_routine(PGM_P const title, const char * const start, const uintptr_t size);
+  void M100_dump_routine(FSTR_P const title, const char * const start, const uintptr_t size);
 #endif
 
 /**
@@ -1086,7 +1086,7 @@ void GcodeSuite::process_next_command() {
     SERIAL_ECHOLN(command.buffer);
     #if ENABLED(M100_FREE_MEMORY_DUMPER)
       SERIAL_ECHOPGM("slot:", queue.ring_buffer.index_r);
-      M100_dump_routine(PSTR("   Command Queue:"), (const char*)&queue.ring_buffer, sizeof(queue.ring_buffer));
+      M100_dump_routine(F("   Command Queue:"), (const char*)&queue.ring_buffer, sizeof(queue.ring_buffer));
     #endif
   }
 

commit d7fede3a6324cd6b1ec91a9c8e248fce8f0d7cf2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 13:40:01 2021 -0500

    üé® Apply F() to G-code report header

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c9c80639b5..5f84ca3c38 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -103,12 +103,12 @@ axis_bits_t GcodeSuite::axis_relative = 0 LOGICAL_AXIS_GANG(
 #endif
 
 void GcodeSuite::report_echo_start(const bool forReplay) { if (!forReplay) SERIAL_ECHO_START(); }
-void GcodeSuite::report_heading(const bool forReplay, PGM_P const pstr, const bool eol/*=true*/) {
+void GcodeSuite::report_heading(const bool forReplay, FSTR_P const fstr, const bool eol/*=true*/) {
   if (forReplay) return;
-  if (pstr) {
+  if (fstr) {
     SERIAL_ECHO_START();
     SERIAL_ECHOPGM("; ");
-    SERIAL_ECHOPGM_P(pstr);
+    SERIAL_ECHOF(fstr);
   }
   if (eol) { SERIAL_CHAR(':'); SERIAL_EOL(); }
 }

commit 008bf1bcaef181cd1b74638692e2465bb9e07a4d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 11:55:08 2021 -0500

    üé® Apply F() to Host Actions strings

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e7be0bd37f..c9c80639b5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -237,9 +237,9 @@ void GcodeSuite::dwell(millis_t time) {
 #if ENABLED(G29_RETRY_AND_RECOVER)
 
   void GcodeSuite::event_probe_recover() {
-    TERN_(HOST_PROMPT_SUPPORT, host_prompt_do(PROMPT_INFO, PSTR("G29 Retrying"), DISMISS_STR));
+    TERN_(HOST_PROMPT_SUPPORT, host_prompt_do(PROMPT_INFO, F("G29 Retrying"), FPSTR(DISMISS_STR)));
     #ifdef ACTION_ON_G29_RECOVER
-      host_action(PSTR(ACTION_ON_G29_RECOVER));
+      host_action(F(ACTION_ON_G29_RECOVER));
     #endif
     #ifdef G29_RECOVER_COMMANDS
       process_subcommands_now(F(G29_RECOVER_COMMANDS));
@@ -252,7 +252,7 @@ void GcodeSuite::dwell(millis_t time) {
 
   void GcodeSuite::event_probe_failure() {
     #ifdef ACTION_ON_G29_FAILURE
-      host_action(PSTR(ACTION_ON_G29_FAILURE));
+      host_action(F(ACTION_ON_G29_FAILURE));
     #endif
     #ifdef G29_FAILURE_COMMANDS
       process_subcommands_now(F(G29_FAILURE_COMMANDS));

commit 59dac3a7e41ae7964686d9dff56baba821a278f7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 25 18:43:52 2021 -0500

    üé® Apply F() to G-code subcommands

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 888dbe7027..e7be0bd37f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -242,7 +242,7 @@ void GcodeSuite::dwell(millis_t time) {
       host_action(PSTR(ACTION_ON_G29_RECOVER));
     #endif
     #ifdef G29_RECOVER_COMMANDS
-      process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
+      process_subcommands_now(F(G29_RECOVER_COMMANDS));
     #endif
   }
 
@@ -255,7 +255,7 @@ void GcodeSuite::dwell(millis_t time) {
       host_action(PSTR(ACTION_ON_G29_FAILURE));
     #endif
     #ifdef G29_FAILURE_COMMANDS
-      process_subcommands_now_P(PSTR(G29_FAILURE_COMMANDS));
+      process_subcommands_now(F(G29_FAILURE_COMMANDS));
     #endif
     #if ENABLED(G29_HALT_ON_FAILURE)
       #ifdef ACTION_ON_CANCEL
@@ -285,7 +285,7 @@ void GcodeSuite::dwell(millis_t time) {
     TERN_(HOST_PROMPT_SUPPORT, host_action_prompt_end());
 
     #ifdef G29_SUCCESS_COMMANDS
-      process_subcommands_now_P(PSTR(G29_SUCCESS_COMMANDS));
+      process_subcommands_now(F(G29_SUCCESS_COMMANDS));
     #endif
   }
 
@@ -1100,7 +1100,8 @@ void GcodeSuite::process_next_command() {
  * G-code "macros" to be called from within other G-code handlers.
  */
 
-void GcodeSuite::process_subcommands_now_P(PGM_P pgcode) {
+void GcodeSuite::process_subcommands_now(FSTR_P fgcode) {
+  PGM_P pgcode = FTOP(fgcode);
   char * const saved_cmd = parser.command_ptr;        // Save the parser state
   for (;;) {
     PGM_P const delim = strchr_P(pgcode, '\n');       // Get address of next newline

commit dc5bef62ba185461ba969db6af996ebc93a33ba7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 23 10:01:37 2021 -0500

    üé® Various multi-axis patches (#22823)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0fc6db07d6..888dbe7027 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -74,7 +74,7 @@ millis_t GcodeSuite::previous_move_ms = 0,
 
 // Relative motion mode for each logical axis
 static constexpr xyze_bool_t ar_init = AXIS_RELATIVE_MODES;
-uint8_t GcodeSuite::axis_relative = 0 LOGICAL_AXIS_GANG(
+axis_bits_t GcodeSuite::axis_relative = 0 LOGICAL_AXIS_GANG(
   | (ar_init.e << REL_E),
   | (ar_init.x << REL_X),
   | (ar_init.y << REL_Y),

commit 3344071f24b505d180dd1423b11510172c3f1c1c
Author: Dan Royer <dan@marginallyclever.com>
Date:   Mon Sep 20 13:42:33 2021 -0700

    Polargraph / Makelangelo kinematics (#22790)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4e7c3df78d..0fc6db07d6 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -885,8 +885,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 605: M605(); break;                                  // M605: Set Dual X Carriage movement mode
       #endif
 
-      #if ENABLED(DELTA)
-        case 665: M665(); break;                                  // M665: Set delta configurations
+      #if IS_KINEMATIC
+        case 665: M665(); break;                                  // M665: Set Delta/SCARA parameters
       #endif
 
       #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS

commit 21e8f99500554d69cb91ac2be0b4ab1497bf9fac
Author: Dakkaron <dak1st@gmx.at>
Date:   Wed Sep 15 02:00:48 2021 +0200

    ‚ú® M282 - Detach Servo (#22760)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e3b90b65b3..4e7c3df78d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -717,6 +717,9 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         #if ENABLED(EDITABLE_SERVO_ANGLES)
           case 281: M281(); break;                                // M281: Set servo angles
         #endif
+        #if ENABLED(SERVO_DETACH_GCODE)
+          case 282: M282(); break;                                // M282: Detach servo
+        #endif
       #endif
 
       #if ENABLED(BABYSTEPPING)

commit 798a8a7a0852c12fb8640c4a531fac70fbc57eda
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 13 16:28:12 2021 -0500

    üîß SPINDLE_LASER_PWM => SPINDLE_LASER_USE_PWM

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 477d43ed63..e3b90b65b3 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -215,7 +215,7 @@ void GcodeSuite::get_destination_from_command() {
     // Set the laser power in the planner to configure this move
     if (parser.seen('S')) {
       const float spwr = parser.value_float();
-      cutter.inline_power(TERN(SPINDLE_LASER_PWM, cutter.power_to_range(cutter_power_t(round(spwr))), spwr > 0 ? 255 : 0));
+      cutter.inline_power(TERN(SPINDLE_LASER_USE_PWM, cutter.power_to_range(cutter_power_t(round(spwr))), spwr > 0 ? 255 : 0));
     }
     else if (ENABLED(LASER_MOVE_G0_OFF) && parser.codenum == 0) // G0
       cutter.set_inline_enabled(false);

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4c03fd9f85..477d43ed63 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -130,7 +130,7 @@ int8_t GcodeSuite::get_target_extruder_from_command() {
     if (e < EXTRUDERS) return e;
     SERIAL_ECHO_START();
     SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
-    SERIAL_ECHOLNPAIR(" " STR_INVALID_EXTRUDER " ", e);
+    SERIAL_ECHOLNPGM(" " STR_INVALID_EXTRUDER " ", e);
     return -1;
   }
   return active_extruder;
@@ -149,7 +149,7 @@ int8_t GcodeSuite::get_target_e_stepper_from_command() {
   if (e == -1)
     SERIAL_ECHOLNPGM(" " STR_E_STEPPER_NOT_SPECIFIED);
   else
-    SERIAL_ECHOLNPAIR(" " STR_INVALID_E_STEPPER " ", e);
+    SERIAL_ECHOLNPGM(" " STR_INVALID_E_STEPPER " ", e);
   return -1;
 }
 
@@ -1082,7 +1082,7 @@ void GcodeSuite::process_next_command() {
     SERIAL_ECHO_START();
     SERIAL_ECHOLN(command.buffer);
     #if ENABLED(M100_FREE_MEMORY_DUMPER)
-      SERIAL_ECHOPAIR("slot:", queue.ring_buffer.index_r);
+      SERIAL_ECHOPGM("slot:", queue.ring_buffer.index_r);
       M100_dump_routine(PSTR("   Command Queue:"), (const char*)&queue.ring_buffer, sizeof(queue.ring_buffer));
     #endif
   }

commit 79c72ed821564507b0ef46cbb26f9577585e2ccc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 7 18:06:10 2021 -0500

    üé® Standardize G-code reporting

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 94496f2b25..4c03fd9f85 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -102,6 +102,24 @@ uint8_t GcodeSuite::axis_relative = 0 LOGICAL_AXIS_GANG(
   xyz_pos_t GcodeSuite::coordinate_system[MAX_COORDINATE_SYSTEMS];
 #endif
 
+void GcodeSuite::report_echo_start(const bool forReplay) { if (!forReplay) SERIAL_ECHO_START(); }
+void GcodeSuite::report_heading(const bool forReplay, PGM_P const pstr, const bool eol/*=true*/) {
+  if (forReplay) return;
+  if (pstr) {
+    SERIAL_ECHO_START();
+    SERIAL_ECHOPGM("; ");
+    SERIAL_ECHOPGM_P(pstr);
+  }
+  if (eol) { SERIAL_CHAR(':'); SERIAL_EOL(); }
+}
+
+void GcodeSuite::say_units() {
+  SERIAL_ECHOLNPGM_P(
+    TERN_(INCH_MODE_SUPPORT, parser.linear_unit_factor != 1.0 ? PSTR(" (in)") :)
+    PSTR(" (mm)")
+  );
+}
+
 /**
  * Get the target extruder from the T parameter or the active_extruder
  * Return -1 if the T parameter is out of range
@@ -180,7 +198,7 @@ void GcodeSuite::get_destination_from_command() {
       recovery.save();
   #endif
 
-  if (parser.linearval('F') > 0)
+  if (parser.floatval('F') > 0)
     feedrate_mm_s = parser.value_feedrate();
 
   #if ENABLED(PRINTCOUNTER)

commit 4b4de71304a426e0d9b2696dae4e82eb55ba7079
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 29 13:57:47 2021 -0500

    ‚ö°Ô∏è Improve G2/G3 arc handling (#22599)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7933c3141a..94496f2b25 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -136,7 +136,7 @@ int8_t GcodeSuite::get_target_e_stepper_from_command() {
 }
 
 /**
- * Set XYZE destination and feedrate from the current GCode command
+ * Set XYZIJKE destination and feedrate from the current GCode command
  *
  *  - Set destination from included axis codes
  *  - Set to current for missing axis codes

commit 1e33c1a2a78392e9182442db043384b0f96cca20
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 1 14:28:53 2021 -0500

    M256 LCD brightness (#22478)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 12fd231ca8..7933c3141a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -729,6 +729,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 250: M250(); break;                                  // M250: Set LCD contrast
       #endif
 
+      #if HAS_LCD_BRIGHTNESS
+        case 256: M256(); break;                                  // M256: Set LCD brightness
+      #endif
+
       #if ENABLED(EXPERIMENTAL_I2CBUS)
         case 260: M260(); break;                                  // M260: Send data to an i2c slave
         case 261: M261(); break;                                  // M261: Request data from an i2c slave

commit c0ecc6625ffbe70cf761465ddd5443ac30124cae
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Mon Jul 12 00:22:08 2021 -0500

    üèóÔ∏è Allow headless Flow Meter (#22234)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0f66c4035e..12fd231ca8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -292,7 +292,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
   #endif
 
   #if ENABLED(FLOWMETER_SAFETY)
-    if (cooler.fault) {
+    if (cooler.flowfault) {
       SERIAL_ECHO_MSG(STR_FLOWMETER_FAULT);
       return;
     }

commit 26bfc267977ddc444513c793c18f76847e23310e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 9 17:09:58 2021 -0500

    üé® Check flags without ENABLED

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ac3b5010b9..0f66c4035e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -908,7 +908,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 907: M907(); break;                                  // M907: Set digital trimpot motor current using axis codes.
         #if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
           case 908: M908(); break;                                // M908: Control digital trimpot directly.
-          #if ENABLED(HAS_MOTOR_CURRENT_DAC)
+          #if HAS_MOTOR_CURRENT_DAC
             case 909: M909(); break;                              // M909: Print digipot/DAC current value
             case 910: M910(); break;                              // M910: Commit digipot/DAC value to external EEPROM
           #endif

commit 135801d9a614a2dd1ba7bea60bc8dcad523b9d59
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Thu Jun 17 22:46:59 2021 -0500

    üêõ Fix Air Assist (#22159)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index eb650851f8..ac3b5010b9 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -441,20 +441,23 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 3: M3_M4(false); break;                              // M3: Turn ON Laser | Spindle (clockwise), set Power | Speed
         case 4: M3_M4(true ); break;                              // M4: Turn ON Laser | Spindle (counter-clockwise), set Power | Speed
         case 5: M5(); break;                                      // M5: Turn OFF Laser | Spindle
-        #if ENABLED(AIR_EVACUATION)
-          case 10: M10(); break;                                  // M10: Vacuum or Blower motor ON
-          case 11: M11(); break;                                  // M11: Vacuum or Blower motor OFF
-        #endif
       #endif
 
-      #if ENABLED(COOLANT_CONTROL)
-        #if ENABLED(COOLANT_MIST)
-          case 7: M7(); break;                                    // M7: Mist coolant ON
-        #endif
-        #if ENABLED(COOLANT_FLOOD)
-          case 8: M8(); break;                                    // M8: Flood coolant ON
-        #endif
-        case 9: M9(); break;                                      // M9: Coolant OFF
+      #if ENABLED(COOLANT_MIST)
+        case 7: M7(); break;                                      // M7: Coolant Mist ON
+      #endif
+
+      #if EITHER(AIR_ASSIST, COOLANT_FLOOD)
+        case 8: M8(); break;                                      // M8: Air Assist / Coolant Flood ON
+      #endif
+
+      #if EITHER(AIR_ASSIST, COOLANT_CONTROL)
+        case 9: M9(); break;                                      // M9: Air Assist / Coolant OFF
+      #endif
+
+      #if ENABLED(AIR_EVACUATION)
+        case 10: M10(); break;                                    // M10: Vacuum or Blower motor ON
+        case 11: M11(); break;                                    // M11: Vacuum or Blower motor OFF
       #endif
 
       #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)

commit 7726af9c5348c1c7d0fd9a56eca87d00cd75fee6
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Jun 5 09:18:47 2021 +0200

    üèóÔ∏è Support for up to 6 linear axes (#19112)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index b7a842ece7..eb650851f8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -78,7 +78,10 @@ uint8_t GcodeSuite::axis_relative = 0 LOGICAL_AXIS_GANG(
   | (ar_init.e << REL_E),
   | (ar_init.x << REL_X),
   | (ar_init.y << REL_Y),
-  | (ar_init.z << REL_Z)
+  | (ar_init.z << REL_Z),
+  | (ar_init.i << REL_I),
+  | (ar_init.j << REL_J),
+  | (ar_init.k << REL_K)
 );
 
 #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)

commit dd4990252e891cdfe56cb7d6e3bbe1e6289be649
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon May 24 16:38:57 2021 -0500

    ‚ôªÔ∏è Refactor Linear / Logical / Distinct Axes (#21953)
    
    * More patches supporting EXTRUDERS 0
    * Extend types in prep for more axes

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 29dbf8d1c2..b7a842ece7 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -74,11 +74,11 @@ millis_t GcodeSuite::previous_move_ms = 0,
 
 // Relative motion mode for each logical axis
 static constexpr xyze_bool_t ar_init = AXIS_RELATIVE_MODES;
-uint8_t GcodeSuite::axis_relative = (
-    (ar_init.x ? _BV(REL_X) : 0)
-  | (ar_init.y ? _BV(REL_Y) : 0)
-  | (ar_init.z ? _BV(REL_Z) : 0)
-  | (ar_init.e ? _BV(REL_E) : 0)
+uint8_t GcodeSuite::axis_relative = 0 LOGICAL_AXIS_GANG(
+  | (ar_init.e << REL_E),
+  | (ar_init.x << REL_X),
+  | (ar_init.y << REL_Y),
+  | (ar_init.z << REL_Z)
 );
 
 #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
@@ -161,13 +161,15 @@ void GcodeSuite::get_destination_from_command() {
       destination[i] = current_position[i];
   }
 
-  // Get new E position, whether absolute or relative
-  if ( (seen.e = parser.seenval('E')) ) {
-    const float v = parser.value_axis_units(E_AXIS);
-    destination.e = axis_is_relative(E_AXIS) ? current_position.e + v : v;
-  }
-  else
-    destination.e = current_position.e;
+  #if HAS_EXTRUDERS
+    // Get new E position, whether absolute or relative
+    if ( (seen.e = parser.seenval('E')) ) {
+      const float v = parser.value_axis_units(E_AXIS);
+      destination.e = axis_is_relative(E_AXIS) ? current_position.e + v : v;
+    }
+    else
+      destination.e = current_position.e;
+  #endif
 
   #if ENABLED(POWER_LOSS_RECOVERY) && !PIN_EXISTS(POWER_LOSS)
     // Only update power loss recovery on moves with E

commit 731370051de73ad4c92d60ec01563def3da53ddb
Author: ellensp <ellensp@hotmail.com>
Date:   Mon May 24 13:29:19 2021 +1200

    ‚ö°Ô∏è PIO filters for M117, M300 and M414 (#21972)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index fa4682c082..29dbf8d1c2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -605,7 +605,9 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       case 92: M92(); break;                                      // M92: Set the steps-per-unit for one or more axes
       case 114: M114(); break;                                    // M114: Report current position
       case 115: M115(); break;                                    // M115: Report capabilities
-      case 117: M117(); break;                                    // M117: Set LCD message text, if possible
+
+      case 117: TERN_(HAS_STATUS_MESSAGE, M117()); break;         // M117: Set LCD message text, if possible
+
       case 118: M118(); break;                                    // M118: Display a message in the host console
       case 119: M119(); break;                                    // M119: Report endstop states
       case 120: M120(); break;                                    // M120: Enable endstops

commit d71b35c24f5e8d4c40d5e721f3548abfe899592d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 22 21:12:53 2021 -0500

    üé® Apply shorthand and cleanups

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 30151b3bd0..fa4682c082 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -566,7 +566,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       #if ENABLED(AUTO_REPORT_POSITION)
-        case 154: M154(); break;                                  // M155: Set position auto-report interval
+        case 154: M154(); break;                                  // M154: Set position auto-report interval
       #endif
 
       #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)

commit 2de54dab84d82ef69fb9ac3bd9025444f4f84813
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 21 08:23:09 2021 -0500

    üé® Move HAS_EXTRUDERS

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 33877cd61c..30151b3bd0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -520,7 +520,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 100: M100(); break;                                  // M100: Free Memory Report
       #endif
 
-      #if EXTRUDERS
+      #if HAS_EXTRUDERS
         case 104: M104(); break;                                  // M104: Set hot end temperature
         case 109: M109(); break;                                  // M109: Wait for hotend temperature to reach target
       #endif
@@ -596,8 +596,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
       case 81: M81(); break;                                      // M81: Turn off Power, including Power Supply, if possible
 
-      case 82: M82(); break;                                      // M82: Set E axis normal mode (same as other axes)
-      case 83: M83(); break;                                      // M83: Set E axis relative mode
+      #if HAS_EXTRUDERS
+        case 82: M82(); break;                                    // M82: Set E axis normal mode (same as other axes)
+        case 83: M83(); break;                                    // M83: Set E axis relative mode
+      #endif
       case 18: case 84: M18_M84(); break;                         // M18/M84: Disable Steppers / Set Timeout
       case 85: M85(); break;                                      // M85: Set inactivity stepper shutdown timeout
       case 92: M92(); break;                                      // M92: Set the steps-per-unit for one or more axes
@@ -674,7 +676,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       case 220: M220(); break;                                    // M220: Set Feedrate Percentage: S<percent> ("FR" on your LCD)
 
-      #if EXTRUDERS
+      #if HAS_EXTRUDERS
         case 221: M221(); break;                                  // M221: Set Flow Percentage
       #endif
 

commit a6e5492b088add3589aeac168136369f21614e60
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 18 22:51:19 2021 -0500

    ‚ôªÔ∏è Refactor axis counts and loops

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 34a719c466..33877cd61c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -149,8 +149,8 @@ void GcodeSuite::get_destination_from_command() {
   #endif
 
   // Get new XYZ position, whether absolute or relative
-  LOOP_XYZ(i) {
-    if ( (seen[i] = parser.seenval(XYZ_CHAR(i))) ) {
+  LOOP_LINEAR_AXES(i) {
+    if ( (seen[i] = parser.seenval(AXIS_CHAR(i))) ) {
       const float v = parser.value_axis_units((AxisEnum)i);
       if (skip_move)
         destination[i] = current_position[i];

commit abbe3f0dc7aa23bae4aa26f6d6b09a4a0665a1a0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 18 22:46:59 2021 -0500

    üé® Misc cleanup and fixes

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0ca6c82c2a..34a719c466 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -140,7 +140,7 @@ int8_t GcodeSuite::get_target_e_stepper_from_command() {
  *  - Set the feedrate, if included
  */
 void GcodeSuite::get_destination_from_command() {
-  xyze_bool_t seen = { false, false, false, false };
+  xyze_bool_t seen{false};
 
   #if ENABLED(CANCEL_OBJECTS)
     const bool &skip_move = cancelable.skipping;

commit 7f774cab9005dd56667bf4db09c23370bd2c873f
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Sat May 15 15:02:20 2021 -0500

    M154 Position Auto-Report (#18427)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7a3976a7bd..0ca6c82c2a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -565,6 +565,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 193: M193(); break;                                  // M193: Wait for cooler temperature to reach target
       #endif
 
+      #if ENABLED(AUTO_REPORT_POSITION)
+        case 154: M154(); break;                                  // M155: Set position auto-report interval
+      #endif
+
       #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
         case 155: M155(); break;                                  // M155: Set temperature auto-report interval
       #endif

commit 874c531f27e7f342c7864c12310ef12c177d9000
Author: ondrada <82547068+ondrada@users.noreply.github.com>
Date:   Sat May 15 05:29:17 2021 +0200

    Fix G29_RETRY_AND_RECOVER dependency (#21907)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 241def0f77..7a3976a7bd 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -211,7 +211,7 @@ void GcodeSuite::dwell(millis_t time) {
  * When G29_RETRY_AND_RECOVER is enabled, call G29() in
  * a loop with recovery and retry handling.
  */
-#if BOTH(HAS_LEVELING, G29_RETRY_AND_RECOVER)
+#if ENABLED(G29_RETRY_AND_RECOVER)
 
   void GcodeSuite::event_probe_recover() {
     TERN_(HOST_PROMPT_SUPPORT, host_prompt_do(PROMPT_INFO, PSTR("G29 Retrying"), DISMISS_STR));
@@ -223,6 +223,10 @@ void GcodeSuite::dwell(millis_t time) {
     #endif
   }
 
+  #if ENABLED(G29_HALT_ON_FAILURE)
+    #include "../lcd/marlinui.h"
+  #endif
+
   void GcodeSuite::event_probe_failure() {
     #ifdef ACTION_ON_G29_FAILURE
       host_action(PSTR(ACTION_ON_G29_FAILURE));
@@ -262,7 +266,7 @@ void GcodeSuite::dwell(millis_t time) {
     #endif
   }
 
-#endif // HAS_LEVELING && G29_RETRY_AND_RECOVER
+#endif // G29_RETRY_AND_RECOVER
 
 /**
  * Process the parsed command and dispatch it to its handler

commit fccfcfbe5fc222bc53dd52f7a9effa8e305fafbf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 5 06:32:54 2021 -0500

    Cleanup, hex formatting, includes

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c0c5201222..241def0f77 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1064,7 +1064,7 @@ void GcodeSuite::process_subcommands_now_P(PGM_P pgcode) {
     strncpy_P(cmd, pgcode, len);                      // Copy the command to the stack
     cmd[len] = '\0';                                  // End with a nul
     parser.parse(cmd);                                // Parse the command
-    process_parsed_command(true);                     // Process it
+    process_parsed_command(true);                     // Process it (no "ok")
     if (!delim) break;                                // Last command?
     pgcode = delim + 1;                               // Get the next command
   }
@@ -1077,7 +1077,7 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
     char * const delim = strchr(gcode, '\n');         // Get address of next newline
     if (delim) *delim = '\0';                         // Replace with nul
     parser.parse(gcode);                              // Parse the current command
-    process_parsed_command(true);                     // Process it
+    process_parsed_command(true);                     // Process it (no "ok")
     if (!delim) break;                                // Last command?
     *delim = '\n';                                    // Put back the newline
     gcode = delim + 1;                                // Get the next command

commit cb5e6bfef64ae4bc05db336a5e53a528bb3b7042
Author: Vert <45634861+Vertabreak@users.noreply.github.com>
Date:   Sun May 2 17:38:55 2021 -0400

    UBL Mesh Wizard (#21556)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bf26fe5d89..c0c5201222 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -987,6 +987,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 1002: M1002(); break;                                // M1002: [INTERNAL] Tool-change and Relative E Move
       #endif
 
+      #if ENABLED(UBL_MESH_WIZARD)
+        case 1004: M1004(); break;                                // M1004: UBL Mesh Wizard
+      #endif
+
       #if ENABLED(MAX7219_GCODE)
         case 7219: M7219(); break;                                // M7219: Set LEDs, columns, and rows
       #endif

commit f075dd0db3496d99c84fcf77242f60731982184c
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Thu Apr 22 18:19:41 2021 -0500

    M10-M11 Air Evacuation for Spindle/Laser (#21668)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index efea087602..bf26fe5d89 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -432,6 +432,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 3: M3_M4(false); break;                              // M3: Turn ON Laser | Spindle (clockwise), set Power | Speed
         case 4: M3_M4(true ); break;                              // M4: Turn ON Laser | Spindle (counter-clockwise), set Power | Speed
         case 5: M5(); break;                                      // M5: Turn OFF Laser | Spindle
+        #if ENABLED(AIR_EVACUATION)
+          case 10: M10(); break;                                  // M10: Vacuum or Blower motor ON
+          case 11: M11(); break;                                  // M11: Vacuum or Blower motor OFF
+        #endif
       #endif
 
       #if ENABLED(COOLANT_CONTROL)

commit 32dba5e0c735166d3bb54783efbf0d5d1b275b66
Author: fedetony <45215920+fedetony@users.noreply.github.com>
Date:   Fri Apr 16 08:59:28 2021 +0200

    Realtime Reporting, S000, P000, R000 (#19330)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 574e93aecc..efea087602 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -289,8 +289,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
     }
   #endif
 
-  // Handle a known G, M, or T
+  // Handle a known command or reply "unknown command"
+
   switch (parser.command_letter) {
+
     case 'G': switch (parser.codenum) {
 
       case 0: case 1:                                             // G0: Fast Move, G1: Linear Move
@@ -995,6 +997,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       case 'D': D(parser.codenum); break;                         // Dn: Debug codes
     #endif
 
+    #if ENABLED(REALTIME_REPORTING_COMMANDS)
+      case 'S': case 'P': case 'R': break;                        // Invalid S, P, R commands already filtered
+    #endif
+
     default:
       #if ENABLED(WIFI_CUSTOM_COMMAND)
         if (wifi_custom_command(parser.command_ptr)) break;
@@ -1087,12 +1093,15 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
         case IN_HANDLER:
         case IN_PROCESS:
           SERIAL_ECHO_MSG(STR_BUSY_PROCESSING);
+          TERN_(FULL_REPORT_TO_HOST_FEATURE, report_current_position_moving());
           break;
         case PAUSED_FOR_USER:
           SERIAL_ECHO_MSG(STR_BUSY_PAUSED_FOR_USER);
+          TERN_(FULL_REPORT_TO_HOST_FEATURE, set_and_report_grblstate(M_HOLD));
           break;
         case PAUSED_FOR_INPUT:
           SERIAL_ECHO_MSG(STR_BUSY_PAUSED_FOR_INPUT);
+          TERN_(FULL_REPORT_TO_HOST_FEATURE, set_and_report_grblstate(M_HOLD));
           break;
         default:
           break;

commit 4cba40f9fd9ea7dae24dbf7aef89091e88f99126
Author: Sola <42537573+solawc@users.noreply.github.com>
Date:   Sat Apr 10 04:29:59 2021 +0800

    Fix manual move with MKS H43 (#21511)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index cdf11e870b..574e93aecc 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -977,6 +977,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 1001: M1001(); break;                                // M1001: [INTERNAL] Handle SD completion
       #endif
 
+      #if ENABLED(DGUS_LCD_UI_MKS)
+        case 1002: M1002(); break;                                // M1002: [INTERNAL] Tool-change and Relative E Move
+      #endif
+
       #if ENABLED(MAX7219_GCODE)
         case 7219: M7219(); break;                                // M7219: Set LEDs, columns, and rows
       #endif

commit ccdbffbf3f599f0860c643647ce6c40f1eb5a4cd
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Mon Mar 29 01:41:56 2021 -0500

    Laser Coolant Flow Meter / Safety Shutdown (#21431)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index aa206bfeba..cdf11e870b 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -57,6 +57,10 @@ GcodeSuite gcode;
   #include "../feature/spindle_laser.h"
 #endif
 
+#if ENABLED(FLOWMETER_SAFETY)
+  #include "../feature/cooler.h"
+#endif
+
 #if ENABLED(PASSWORD_FEATURE)
   #include "../feature/password/password.h"
 #endif
@@ -278,6 +282,13 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
     }
   #endif
 
+  #if ENABLED(FLOWMETER_SAFETY)
+    if (cooler.fault) {
+      SERIAL_ECHO_MSG(STR_FLOWMETER_FAULT);
+      return;
+    }
+  #endif
+
   // Handle a known G, M, or T
   switch (parser.command_letter) {
     case 'G': switch (parser.codenum) {

commit 22fc59ab5973aa91cc2fed68792dce521cc70c93
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Mar 23 01:03:32 2021 -0500

    Minor process_subcommands_now followup

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 6290d7a1d5..aa206bfeba 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1049,8 +1049,8 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
     if (delim) *delim = '\0';                         // Replace with nul
     parser.parse(gcode);                              // Parse the current command
     process_parsed_command(true);                     // Process it
-    if (delim) *delim = '\n';                         // Put back the newline
     if (!delim) break;                                // Last command?
+    *delim = '\n';                                    // Put back the newline
     gcode = delim + 1;                                // Get the next command
   }
   parser.parse(saved_cmd);                            // Restore the parser state

commit 50a6ffa9528d7d7419855cce631f95a7e19d5d6a
Author: mihtjel <mihtjel@gmail.com>
Date:   Tue Mar 23 07:00:22 2021 +0100

    Fix macros that call macros crashing (#21383)
    
    When macros call macros, the null termination should remain in place until the macro is completed, and only then put back. Otherwise, the macro handler interprets this as setting the macro called to a new value.

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4e324e7892..6290d7a1d5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1048,8 +1048,8 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
     char * const delim = strchr(gcode, '\n');         // Get address of next newline
     if (delim) *delim = '\0';                         // Replace with nul
     parser.parse(gcode);                              // Parse the current command
-    if (delim) *delim = '\n';                         // Put back the newline
     process_parsed_command(true);                     // Process it
+    if (delim) *delim = '\n';                         // Put back the newline
     if (!delim) break;                                // Last command?
     gcode = delim + 1;                                // Get the next command
   }

commit 55c31fbe9a70710c6a209d40b7d0165d081dcdd0
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Tue Mar 9 10:20:37 2021 +0100

    Distinguish serial index from mask (#21287)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5f30064b11..4e324e7892 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1067,7 +1067,7 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
     static millis_t next_busy_signal_ms = 0;
     if (!autoreport_paused && host_keepalive_interval && busy_state != NOT_BUSY) {
       if (PENDING(ms, next_busy_signal_ms)) return;
-      PORT_REDIRECT(SERIAL_ALL);
+      PORT_REDIRECT(SerialMask::All);
       switch (busy_state) {
         case IN_HANDLER:
         case IN_PROCESS:

commit 1b9ff68f8ce59a2b142bbabd0fad3d3b377b5997
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Mon Mar 8 04:11:37 2021 -0300

    Fix Host Keepalive serial target (#21283)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 34b8d767d1..5f30064b11 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1067,6 +1067,7 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
     static millis_t next_busy_signal_ms = 0;
     if (!autoreport_paused && host_keepalive_interval && busy_state != NOT_BUSY) {
       if (PENDING(ms, next_busy_signal_ms)) return;
+      PORT_REDIRECT(SERIAL_ALL);
       switch (busy_state) {
         case IN_HANDLER:
         case IN_PROCESS:

commit b95e548ddbcbc1c088eabc17992d0a06f82ac167
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sat Mar 6 14:13:28 2021 -0600

    Cooler (for Laser) - M143, M193 (#21255)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e9a6d4aa2a..34b8d767d1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -539,6 +539,11 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 191: M191(); break;                                  // M191: Wait for chamber temperature to reach target
       #endif
 
+      #if HAS_COOLER
+        case 143: M143(); break;                                  // M143: Set cooler temperature
+        case 193: M193(); break;                                  // M193: Wait for cooler temperature to reach target
+      #endif
+
       #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
         case 155: M155(); break;                                  // M155: Set temperature auto-report interval
       #endif

commit 6903a2ffc50c01d05c761d0b3384bad076e537c1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 4 16:36:44 2021 -0600

    Remove extra G42

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 428caa5a15..e9a6d4aa2a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -396,10 +396,6 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       case 92: G92(); break;                                      // G92: Set current axis position(s)
 
-      #if HAS_MESH
-        case 42: G42(); break;                                    // G42: Coordinated move to a mesh point
-      #endif
-
       #if ENABLED(CALIBRATION_GCODE)
         case 425: G425(); break;                                  // G425: Perform calibration with calibration cube
       #endif

commit 6225870aa917e81c35a910653f0f482998a6e5c7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 4 03:15:32 2021 -0600

    Implement G42, after all

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d7535dd4ff..428caa5a15 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -364,6 +364,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
           break;
       #endif
 
+      #if HAS_MESH
+        case 42: G42(); break;                                    // G42: Coordinated move to a mesh point
+      #endif
+
       #if ENABLED(CNC_COORDINATE_SYSTEMS)
         case 53: G53(); break;                                    // G53: (prefix) Apply native workspace
         case 54: G54(); break;                                    // G54: Switch to Workspace 1

commit ec42be346d5c0d072feb8a1b63ef2fdbd6dc1e98
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Fri Feb 26 23:54:46 2021 +0100

    Fix and improve G-code queue (#21122)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a410ad90a4..d7535dd4ff 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -260,13 +260,6 @@ void GcodeSuite::dwell(millis_t time) {
 
 #endif // HAS_LEVELING && G29_RETRY_AND_RECOVER
 
-//
-// Placeholders for non-migrated codes
-//
-#if ENABLED(M100_FREE_MEMORY_WATCHER)
-  extern void M100_dump_routine(PGM_P const title, const char * const start, const char * const end);
-#endif
-
 /**
  * Process the parsed command and dispatch it to its handler
  */
@@ -994,30 +987,32 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
   SERIAL_OUT(msgDone); // Call the msgDone serial hook to signal command processing done
 }
 
+#if ENABLED(M100_FREE_MEMORY_DUMPER)
+  void M100_dump_routine(PGM_P const title, const char * const start, const uintptr_t size);
+#endif
+
 /**
  * Process a single command and dispatch it to its handler
  * This is called from the main loop()
  */
 void GcodeSuite::process_next_command() {
-  char * const current_command = queue.command_buffer[queue.index_r];
+  GCodeQueue::CommandLine &command = queue.ring_buffer.peek_next_command();
 
-  PORT_REDIRECT(SERIAL_PORTMASK(queue.port[queue.index_r]));
+  PORT_REDIRECT(SERIAL_PORTMASK(command.port));
 
-  #if ENABLED(POWER_LOSS_RECOVERY)
-    recovery.queue_index_r = queue.index_r;
-  #endif
+  TERN_(POWER_LOSS_RECOVERY, recovery.queue_index_r = queue.ring_buffer.index_r);
 
   if (DEBUGGING(ECHO)) {
     SERIAL_ECHO_START();
-    SERIAL_ECHOLN(current_command);
+    SERIAL_ECHOLN(command.buffer);
     #if ENABLED(M100_FREE_MEMORY_DUMPER)
-      SERIAL_ECHOPAIR("slot:", queue.index_r);
-      M100_dump_routine(PSTR("   Command Queue:"), &queue.command_buffer[0][0], &queue.command_buffer[BUFSIZE - 1][MAX_CMD_SIZE - 1]);
+      SERIAL_ECHOPAIR("slot:", queue.ring_buffer.index_r);
+      M100_dump_routine(PSTR("   Command Queue:"), (const char*)&queue.ring_buffer, sizeof(queue.ring_buffer));
     #endif
   }
 
   // Parse the next command in the queue
-  parser.parse(current_command);
+  parser.parse(command.buffer);
   process_parsed_command();
 }
 

commit a3a10b62f21cfbedfd001746faa46ac55d248b36
Author: Ken Sanislo <ksanislo@users.noreply.github.com>
Date:   Wed Feb 24 16:26:51 2021 -0800

    Chamber Heater PID (#21156)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 77ac1fbff8..a410ad90a4 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -682,6 +682,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 304: M304(); break;                                  // M304: Set bed PID parameters
       #endif
 
+      #if ENABLED(PIDTEMPCHAMBER)
+        case 309: M309(); break;                                  // M309: Set chamber PID parameters
+      #endif
+
       #if ENABLED(PHOTO_GCODE)
         case 240: M240(); break;                                  // M240: Trigger a camera
       #endif

commit e7c711996bd3080f5e343eff5556736cbf2e2416
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Mon Feb 8 07:37:24 2021 +0100

    Serial refactor. Default 8-bit ECHO to int, not char (#20985)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f9173188dc..77ac1fbff8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -105,7 +105,7 @@ int8_t GcodeSuite::get_target_extruder_from_command() {
     if (e < EXTRUDERS) return e;
     SERIAL_ECHO_START();
     SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
-    SERIAL_ECHOLNPAIR(" " STR_INVALID_EXTRUDER " ", int(e));
+    SERIAL_ECHOLNPAIR(" " STR_INVALID_EXTRUDER " ", e);
     return -1;
   }
   return active_extruder;
@@ -124,7 +124,7 @@ int8_t GcodeSuite::get_target_e_stepper_from_command() {
   if (e == -1)
     SERIAL_ECHOLNPGM(" " STR_E_STEPPER_NOT_SPECIFIED);
   else
-    SERIAL_ECHOLNPAIR(" " STR_INVALID_E_STEPPER " ", int(e));
+    SERIAL_ECHOLNPAIR(" " STR_INVALID_E_STEPPER " ", e);
   return -1;
 }
 

commit 3f01b222b2b4f77cff66096dd5a18a64828e1fa4
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Thu Jan 28 09:02:06 2021 +0100

    Refactor serial class with templates (#20783)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a29289d8d1..f9173188dc 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -986,6 +986,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
   }
 
   if (!no_ok) queue.ok_to_send();
+
+  SERIAL_OUT(msgDone); // Call the msgDone serial hook to signal command processing done
 }
 
 /**
@@ -995,7 +997,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 void GcodeSuite::process_next_command() {
   char * const current_command = queue.command_buffer[queue.index_r];
 
-  PORT_REDIRECT(queue.port[queue.index_r]);
+  PORT_REDIRECT(SERIAL_PORTMASK(queue.port[queue.index_r]));
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     recovery.queue_index_r = queue.index_r;

commit 90c0194598791b3b49765aaef08657f6fd0a4e93
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Fri Jan 22 22:58:08 2021 +0100

    "Move ‚Ä¶ code" followup (#20852)
    
    Fix regression from #20832

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 88607b4081..a29289d8d1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -40,7 +40,7 @@ GcodeSuite gcode;
   #include "../module/printcounter.h"
 #endif
 
-#if ENABLED(HOST_PROMPT_SUPPORT)
+#if ENABLED(HOST_ACTION_COMMANDS)
   #include "../feature/host_actions.h"
 #endif
 

commit c0870d417a68ff4303100f165282d41be9129a5c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jan 21 03:40:07 2021 -0600

    Move some MarlinCore and MarlinUI code (#20832)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 90a0b0ded0..88607b4081 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -61,7 +61,7 @@ GcodeSuite gcode;
   #include "../feature/password/password.h"
 #endif
 
-#include "../MarlinCore.h" // for idle()
+#include "../MarlinCore.h" // for idle, kill
 
 // Inactivity shutdown
 millis_t GcodeSuite::previous_move_ms = 0,
@@ -209,6 +209,31 @@ void GcodeSuite::dwell(millis_t time) {
  */
 #if BOTH(HAS_LEVELING, G29_RETRY_AND_RECOVER)
 
+  void GcodeSuite::event_probe_recover() {
+    TERN_(HOST_PROMPT_SUPPORT, host_prompt_do(PROMPT_INFO, PSTR("G29 Retrying"), DISMISS_STR));
+    #ifdef ACTION_ON_G29_RECOVER
+      host_action(PSTR(ACTION_ON_G29_RECOVER));
+    #endif
+    #ifdef G29_RECOVER_COMMANDS
+      process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
+    #endif
+  }
+
+  void GcodeSuite::event_probe_failure() {
+    #ifdef ACTION_ON_G29_FAILURE
+      host_action(PSTR(ACTION_ON_G29_FAILURE));
+    #endif
+    #ifdef G29_FAILURE_COMMANDS
+      process_subcommands_now_P(PSTR(G29_FAILURE_COMMANDS));
+    #endif
+    #if ENABLED(G29_HALT_ON_FAILURE)
+      #ifdef ACTION_ON_CANCEL
+        host_action_cancel();
+      #endif
+      kill(GET_TEXT(MSG_LCD_PROBING_FAILED));
+    #endif
+  }
+
   #ifndef G29_MAX_RETRIES
     #define G29_MAX_RETRIES 0
   #endif
@@ -216,7 +241,10 @@ void GcodeSuite::dwell(millis_t time) {
   void GcodeSuite::G29_with_retry() {
     uint8_t retries = G29_MAX_RETRIES;
     while (G29()) { // G29 should return true for failed probes ONLY
-      if (retries--) event_probe_recover();
+      if (retries) {
+        event_probe_recover();
+        --retries;
+      }
       else {
         event_probe_failure();
         return;

commit 68abaeab19b41824bc151bc0f65e76ce8a2e4916
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jan 20 18:52:06 2021 -0600

    MarlinUI multi-language support (#20725)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 89bc0dc7af..90a0b0ded0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -718,6 +718,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 412: M412(); break;                                  // M412: Enable/Disable filament runout detection
       #endif
 
+      #if HAS_MULTI_LANGUAGE
+        case 414: M414(); break;                                  // M414: Select multi language menu
+      #endif
+
       #if HAS_LEVELING
         case 420: M420(); break;                                  // M420: Enable/Disable Bed Leveling
       #endif

commit 257dc6d1734d616f8d4d9628433f0d00bc9cc58c
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Tue Dec 1 23:52:09 2020 -0600

    Help hosts when password-locked (#20348)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8e2ef62204..89bc0dc7af 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -252,6 +252,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
   #if ENABLED(PASSWORD_FEATURE)
     if (password.is_locked && !parser.is_command('M', 511)) {
       SERIAL_ECHO_MSG(STR_PRINTER_LOCKED);
+      if (!no_ok) queue.ok_to_send();
       return;
     }
   #endif

commit b6a32500c401877e3ee1300fa613e81086bb31d3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 26 21:18:40 2020 -0600

    M808 Repeat Markers (#20084)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3bce34c1f3..8e2ef62204 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -882,6 +882,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 800: parser.debug(); break;                          // M800: GCode Parser Test for M
       #endif
 
+      #if ENABLED(GCODE_REPEAT_MARKERS)
+        case 808: M808(); break;                                  // M808: Set / Goto repeat markers
+      #endif
+
       #if ENABLED(I2C_POSITION_ENCODERS)
         case 860: M860(); break;                                  // M860: Report encoder module position
         case 861: M861(); break;                                  // M861: Report encoder module status

commit 41529b65988a58ba512977e0fe1692aaeeb6c811
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Wed Nov 18 08:27:21 2020 +0100

    SMUFF (MMU2 clone) support (#19912)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 544d7b777d..3bce34c1f3 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -702,7 +702,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 402: M402(); break;                                  // M402: Stow probe
       #endif
 
-      #if ENABLED(PRUSA_MMU2)
+      #if HAS_PRUSA_MMU2
         case 403: M403(); break;
       #endif
 

commit c5e411f49218535cd71c92b26bc226f9a9146e7d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Nov 14 18:09:17 2020 -0600

    Add parser.is_command(letter, code)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ee8aa0bba4..544d7b777d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -250,7 +250,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
   * Will still block Gcodes if M511 is disabled, in which case the printer should be unlocked via LCD Menu
   */
   #if ENABLED(PASSWORD_FEATURE)
-    if (password.is_locked && !(parser.command_letter == 'M' && parser.codenum == 511)) {
+    if (password.is_locked && !parser.is_command('M', 511)) {
       SERIAL_ECHO_MSG(STR_PRINTER_LOCKED);
       return;
     }

commit 1b0a5abd73d162b68b2881486630f60a1e9e7825
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Thu Nov 12 23:54:18 2020 -0500

    G34 Z stepper locking (#20091)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1d6bd94231..ee8aa0bba4 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -327,7 +327,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 33: G33(); break;                                    // G33: Delta Auto-Calibration
       #endif
 
-      #if EITHER(Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
+      #if ANY(Z_MULTI_ENDSTOPS, Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
         case 34: G34(); break;                                    // G34: Z Stepper automatic alignment using probe
       #endif
 

commit f17394d67740e1f5591b3e0e23cc7313b218776d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Nov 9 18:53:19 2020 -0600

    Ability to disable M32

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e2c70ad3ae..1d6bd94231 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -431,7 +431,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 28: M28(); break;                                    // M28: Start SD write
         case 29: M29(); break;                                    // M29: Stop SD write
         case 30: M30(); break;                                    // M30 <filename> Delete File
-        case 32: M32(); break;                                    // M32: Select file and start SD print
+
+        #if HAS_MEDIA_SUBCALLS
+          case 32: M32(); break;                                  // M32: Select file and start SD print
+        #endif
 
         #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
           case 33: M33(); break;                                  // M33: Get the long full path to a file or folder

commit 9baa944460e0bf5f15e46a501b64ebd39a9d5f34
Author: bilsef <bilsef1@gmail.com>
Date:   Tue Oct 20 12:35:29 2020 -0700

    Teensy 4.1 Ethernet support (#19801)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 852d389b13..e2c70ad3ae 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -766,6 +766,12 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 540: M540(); break;                                  // M540: Set abort on endstop hit for SD printing
       #endif
 
+      #if HAS_ETHERNET
+        case 552: M552(); break;                                  // M552: Set IP address
+        case 553: M553(); break;                                  // M553: Set gateway
+        case 554: M554(); break;                                  // M554: Set netmask
+      #endif
+
       #if ENABLED(BAUD_RATE_GCODE)
         case 575: M575(); break;                                  // M575: Set serial baudrate
       #endif

commit 21ce39aa9b304d627e6f2f7eecde873c7edb7af9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 19 04:24:57 2020 -0500

    Use PGM serial strings

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f2bd81e670..852d389b13 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -754,8 +754,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
           case 511: M511(); break;                                // M511: Unlock Printer
         #endif
         #if ENABLED(PASSWORD_CHANGE_GCODE)
-          case 512: M512(); break;
-        #endif                                                    // M512: Set/Change/Remove Password
+          case 512: M512(); break;                                // M512: Set/Change/Remove Password
+        #endif
       #endif
 
       #if ENABLED(SDSUPPORT)

commit e7838c5f7904924eed7e996d2ff95fff0f64e30e
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Oct 11 22:34:27 2020 -0400

    G34 Mechanical Gantry Calibration (like Prusa M915) (#18972)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1d4e8f9d4d..f2bd81e670 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -327,7 +327,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 33: G33(); break;                                    // G33: Delta Auto-Calibration
       #endif
 
-      #if ENABLED(Z_STEPPER_AUTO_ALIGN)
+      #if EITHER(Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
         case 34: G34(); break;                                    // G34: Z Stepper automatic alignment using probe
       #endif
 

commit 492ba2a111ce541513d4515c4af3f57ceaa897ea
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Oct 11 14:58:35 2020 -0500

    Digipots refactor / cleanup (#19690)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index cbf62e0fcf..1d4e8f9d4d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -823,11 +823,11 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 900: M900(); break;                                  // M900: Set advance K factor.
       #endif
 
-      #if ANY(HAS_DIGIPOTSS, HAS_MOTOR_CURRENT_PWM, HAS_I2C_DIGIPOT, DAC_STEPPER_CURRENT)
+      #if ANY(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_PWM, HAS_MOTOR_CURRENT_I2C, HAS_MOTOR_CURRENT_DAC)
         case 907: M907(); break;                                  // M907: Set digital trimpot motor current using axis codes.
-        #if EITHER(HAS_DIGIPOTSS, DAC_STEPPER_CURRENT)
+        #if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
           case 908: M908(); break;                                // M908: Control digital trimpot directly.
-          #if ENABLED(DAC_STEPPER_CURRENT)
+          #if ENABLED(HAS_MOTOR_CURRENT_DAC)
             case 909: M909(); break;                              // M909: Print digipot/DAC current value
             case 910: M910(); break;                              // M910: Commit digipot/DAC value to external EEPROM
           #endif

commit 0988af453c567fae1796cc821bbc41e930b45836
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 9 16:42:23 2020 -0500

    Optional `M42`/`M226`; Add more features filters (#19664)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3d70b7c85c..cbf62e0fcf 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -445,7 +445,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif // SDSUPPORT
 
       case 31: M31(); break;                                      // M31: Report time since the start of SD print or last M109
-      case 42: M42(); break;                                      // M42: Change pin state
+
+      #if ENABLED(DIRECT_PIN_CONTROL)
+        case 42: M42(); break;                                    // M42: Change pin state
+      #endif
 
       #if ENABLED(PINS_DEBUGGING)
         case 43: M43(); break;                                    // M43: Read pin state
@@ -620,7 +623,9 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 221: M221(); break;                                  // M221: Set Flow Percentage
       #endif
 
-      case 226: M226(); break;                                    // M226: Wait until a pin reaches a state
+      #if ENABLED(DIRECT_PIN_CONTROL)
+        case 226: M226(); break;                                  // M226: Wait until a pin reaches a state
+      #endif
 
       #if HAS_SERVOS
         case 280: M280(); break;                                  // M280: Set servo position absolute

commit 631457ffea46debd43079137e09bc2d36b5d4fe4
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Fri Oct 9 08:25:23 2020 -0300

    Support for Debug Codes - Dnnn (#19225)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1de54259be..3d70b7c85c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -923,6 +923,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
     case 'T': T(parser.codenum); break;                           // Tn: Tool Change
 
+    #if ENABLED(MARLIN_DEV_MODE)
+      case 'D': D(parser.codenum); break;                         // Dn: Debug codes
+    #endif
+
     default:
       #if ENABLED(WIFI_CUSTOM_COMMAND)
         if (wifi_custom_command(parser.command_ptr)) break;

commit 7e0524109ed7217cbfcb2a8c2383d2a3005e81d9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 4 17:29:12 2020 -0500

    Add HAS_FAST_MOVES

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 39276bc729..1de54259be 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -260,12 +260,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
   switch (parser.command_letter) {
     case 'G': switch (parser.codenum) {
 
-      case 0: case 1: G0_G1(                                      // G0: Fast Move, G1: Linear Move
-                        #if IS_SCARA || defined(G0_FEEDRATE)
-                          parser.codenum == 0
-                        #endif
-                      );
-                      break;
+      case 0: case 1:                                             // G0: Fast Move, G1: Linear Move
+        G0_G1(TERN_(HAS_FAST_MOVES, parser.codenum == 0)); break;
 
       #if ENABLED(ARC_SUPPORT) && DISABLED(SCARA)
         case 2: case 3: G2_G3(parser.codenum == 2); break;        // G2: CW ARC, G3: CCW ARC
@@ -315,13 +311,9 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if HAS_LEVELING
         case 29:                                                  // G29: Bed leveling calibration
-          #if ENABLED(G29_RETRY_AND_RECOVER)
-            G29_with_retry();
-          #else
-            G29();
-          #endif
+          TERN(G29_RETRY_AND_RECOVER, G29_with_retry, G29)();
           break;
-      #endif // HAS_LEVELING
+      #endif
 
       #if HAS_BED_PROBE
         case 30: G30(); break;                                    // G30: Single Z probe

commit 76d8d1742c1d4a1efe0fd6c0645d3fc656bfd0b2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 20 18:29:08 2020 -0500

    Add multi-extruder condition

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c1b6deeadd..39276bc729 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -614,7 +614,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 211: M211(); break;                                  // M211: Enable, Disable, and/or Report software endstops
       #endif
 
-      #if EXTRUDERS > 1
+      #if HAS_MULTI_EXTRUDER
         case 217: M217(); break;                                  // M217: Set filament swap parameters
       #endif
 

commit cd85fa3abecd1a24de0fdbdb21a0ed2a2074af91
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Sep 11 23:05:27 2020 -0500

    Better choice of code
    
    Followup to #19344

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bace7adc75..c1b6deeadd 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -818,8 +818,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       #if ENABLED(PROBE_TEMP_COMPENSATION)
+        case 192: M192(); break;                                  // M192: Wait for probe temp
         case 871: M871(); break;                                  // M871: Print/reset/clear first layer temperature offset values
-        case 872: M872(); break;                                  // M872: Wait for probe temp
       #endif
 
       #if ENABLED(LIN_ADVANCE)

commit 1917ed8741ed5c27c6a505c3936050e4f461d075
Author: Neskik <axel.gouverneur@gmail.com>
Date:   Sat Sep 12 05:51:19 2020 +0200

    M872 wait for probe temperature (#19344)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c0a795025f..bace7adc75 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -819,6 +819,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if ENABLED(PROBE_TEMP_COMPENSATION)
         case 871: M871(); break;                                  // M871: Print/reset/clear first layer temperature offset values
+        case 872: M872(); break;                                  // M872: Wait for probe temp
       #endif
 
       #if ENABLED(LIN_ADVANCE)

commit 6036a0df6b8eeb5d7af97c82bbf0e6cb9636e424
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 02:07:42 2020 -0500

    Fix DUET_SMART_EFFECTOR

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index edbeca9c92..c0a795025f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -790,7 +790,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 666: M666(); break;                                  // M666: Set delta or multiple endstop adjustment
       #endif
 
-      #if ENABLED(SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
+      #if ENABLED(DUET_SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
         case 672: M672(); break;                                  // M672: Set/clear Duet Smart Effector sensitivity
       #endif
 

commit 81f5973afc6da027bb2eb51f3f76a864585c01f8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Aug 9 15:57:59 2020 -0500

    Followup for SPI Flash

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 840df54f6a..edbeca9c92 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -896,7 +896,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif
 
-      #if BOTH(HAS_SPI_FLASH, SDSUPPORT)
+      #if ALL(HAS_SPI_FLASH, SDSUPPORT, MARLIN_DEV_MODE)
         case 993: M993(); break;                                  // M993: Backup SPI Flash to SD
         case 994: M994(); break;                                  // M994: Load a Backup from SD to SPI Flash
       #endif

commit 852e5ae0421810ecc6f44631237208030e70751f
Author: sherwin-dc <59867245+sherwin-dc@users.noreply.github.com>
Date:   Sun Aug 9 09:00:42 2020 +0800

    Password via G-code and MarlinUI (#18399)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2309953f88..840df54f6a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -57,6 +57,10 @@ GcodeSuite gcode;
   #include "../feature/spindle_laser.h"
 #endif
 
+#if ENABLED(PASSWORD_FEATURE)
+  #include "../feature/password/password.h"
+#endif
+
 #include "../MarlinCore.h" // for idle()
 
 // Inactivity shutdown
@@ -241,6 +245,17 @@ void GcodeSuite::dwell(millis_t time) {
 void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
   KEEPALIVE_STATE(IN_HANDLER);
 
+ /**
+  * Block all Gcodes except M511 Unlock Printer, if printer is locked
+  * Will still block Gcodes if M511 is disabled, in which case the printer should be unlocked via LCD Menu
+  */
+  #if ENABLED(PASSWORD_FEATURE)
+    if (password.is_locked && !(parser.command_letter == 'M' && parser.codenum == 511)) {
+      SERIAL_ECHO_MSG(STR_PRINTER_LOCKED);
+      return;
+    }
+  #endif
+
   // Handle a known G, M, or T
   switch (parser.command_letter) {
     case 'G': switch (parser.codenum) {
@@ -736,6 +751,16 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 504: M504(); break;                                  // M504: Validate EEPROM contents
       #endif
 
+      #if ENABLED(PASSWORD_FEATURE)
+        case 510: M510(); break;                                  // M510: Lock Printer
+        #if ENABLED(PASSWORD_UNLOCK_GCODE)
+          case 511: M511(); break;                                // M511: Unlock Printer
+        #endif
+        #if ENABLED(PASSWORD_CHANGE_GCODE)
+          case 512: M512(); break;
+        #endif                                                    // M512: Set/Change/Remove Password
+      #endif
+
       #if ENABLED(SDSUPPORT)
         case 524: M524(); break;                                  // M524: Abort the current SD print job
       #endif

commit 0a1b8659871f681464f24c40b16aa64cd2f7ca8e
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Aug 8 21:24:31 2020 -0300

    W25QXX SPI Flash support (#18897)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f1692ee807..2309953f88 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -871,6 +871,11 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif
 
+      #if BOTH(HAS_SPI_FLASH, SDSUPPORT)
+        case 993: M993(); break;                                  // M993: Backup SPI Flash to SD
+        case 994: M994(); break;                                  // M994: Load a Backup from SD to SPI Flash
+      #endif
+
       #if ENABLED(TOUCH_SCREEN_CALIBRATION)
         case 995: M995(); break;                                  // M995: Touch screen calibration for TFT display
       #endif

commit 99ba866d8d3c9abc16558ca12ba34efb9a7922e5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Aug 6 08:14:00 2020 -0500

    Optimize G-code / feature dependencies (#18919)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7c1083f7f7..f1692ee807 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -842,7 +842,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 351: M351(); break;                                  // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.
       #endif
 
-      #if HAS_CASE_LIGHT
+      #if ENABLED(CASE_LIGHT_ENABLE)
         case 355: M355(); break;                                  // M355: Set case light brightness
       #endif
 

commit a9912681b40ebaea6b452a41fb0d25ec9c93c8fc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Aug 6 00:49:15 2020 -0500

    General cleanup

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8d103d52b1..7c1083f7f7 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -874,7 +874,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #if ENABLED(TOUCH_SCREEN_CALIBRATION)
         case 995: M995(); break;                                  // M995: Touch screen calibration for TFT display
       #endif
-      
+
       #if ENABLED(PLATFORM_M997_SUPPORT)
         case 997: M997(); break;                                  // M997: Perform in-application firmware update
       #endif

commit 117df87d193994f6fbcd46c45573095adf921784
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Thu Jul 30 09:43:19 2020 +0300

    Support for TFT & Touch Screens (#18130)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7f00ec5a34..8d103d52b1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -871,6 +871,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif
 
+      #if ENABLED(TOUCH_SCREEN_CALIBRATION)
+        case 995: M995(); break;                                  // M995: Touch screen calibration for TFT display
+      #endif
+      
       #if ENABLED(PLATFORM_M997_SUPPORT)
         case 997: M997(); break;                                  // M997: Perform in-application firmware update
       #endif

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0b0a29cc20..7f00ec5a34 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit c43bbcce152b4d3b4697e1e188d3bcada76a24a7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 1 16:27:28 2020 -0500

    Enforce sensor range for temperature target (#18465)
    
    * Mitigate stepper timeout
    
    * Add CHAMBER PWM code
    
    * Structured thermistor tables
    
    * Fix reversed sensor ranges
    
    * Prevent temps outside sensor range

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d34e0665c6..0b0a29cc20 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -59,7 +59,10 @@ GcodeSuite gcode;
 
 #include "../MarlinCore.h" // for idle()
 
-millis_t GcodeSuite::previous_move_ms;
+// Inactivity shutdown
+millis_t GcodeSuite::previous_move_ms = 0,
+         GcodeSuite::max_inactive_time = 0,
+         GcodeSuite::stepper_inactive_time = SEC_TO_MS(DEFAULT_STEPPER_DEACTIVE_TIME);
 
 // Relative motion mode for each logical axis
 static constexpr xyze_bool_t ar_init = AXIS_RELATIVE_MODES;

commit 4275466f4930ce554419f5f03f07119b8a9aec04
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 24 19:44:50 2020 -0500

    Fix issues with no hotend / bed / fan (#18395)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2ff25057db..d34e0665c6 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -541,7 +541,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       case 120: M120(); break;                                    // M120: Enable endstops
       case 121: M121(); break;                                    // M121: Disable endstops
 
-      #if HAS_HOTEND && HAS_LCD_MENU
+      #if PREHEAT_COUNT
         case 145: M145(); break;                                  // M145: Set material heatup parameters
       #endif
 

commit 1fb2fffdbf14c8970d57c8a59310539c814bca89
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 23 18:49:45 2020 -0500

    General cleanup

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 960acc3040..2ff25057db 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -327,13 +327,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if ENABLED(G38_PROBE_TARGET)
         case 38:                                                  // G38.2, G38.3: Probe towards target
-          if (WITHIN(parser.subcode, 2,
-            #if ENABLED(G38_PROBE_AWAY)
-              5
-            #else
-              3
-            #endif
-          )) G38(parser.subcode);                                 // G38.4, G38.5: Probe away from target
+          if (WITHIN(parser.subcode, 2, TERN(G38_PROBE_AWAY, 5, 3)))
+            G38(parser.subcode);                                  // G38.4, G38.5: Probe away from target
           break;
       #endif
 
@@ -485,14 +480,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 108: M108(); break;                                  // M108: Cancel Waiting
         case 112: M112(); break;                                  // M112: Full Shutdown
         case 410: M410(); break;                                  // M410: Quickstop - Abort all the planned moves.
-        #if ENABLED(HOST_PROMPT_SUPPORT)
-          case 876: M876(); break;                                // M876: Handle Host prompt responses
-        #endif
+        TERN_(HOST_PROMPT_SUPPORT, case 876:)                     // M876: Handle Host prompt responses
       #else
         case 108: case 112: case 410:
-        #if ENABLED(HOST_PROMPT_SUPPORT)
-          case 876:
-        #endif
+        TERN_(HOST_PROMPT_SUPPORT, case 876:)
         break;
       #endif
 

commit ac50a355a37673e521a052dc2d38d991144b4d05
Author: Rui Caridade <rmcbc@users.noreply.github.com>
Date:   Sun Jun 21 10:27:51 2020 +0100

    G35: Bed tramming assistant (#16897)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 859826ca2e..960acc3040 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -321,6 +321,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 34: G34(); break;                                    // G34: Z Stepper automatic alignment using probe
       #endif
 
+      #if ENABLED(ASSISTED_TRAMMING)
+        case 35: G35(); break;                                    // G35: Read four bed corners to help adjust bed screws
+      #endif
+
       #if ENABLED(G38_PROBE_TARGET)
         case 38:                                                  // G38.2, G38.3: Probe towards target
           if (WITHIN(parser.subcode, 2,

commit 424569b4c4bf112a3939724b30bad528a76a2b08
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 18 15:23:03 2020 -0500

    Power monitor and display (#17437)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f543342e81..859826ca2e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -720,6 +720,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 428: M428(); break;                                  // M428: Apply current_position to home_offset
       #endif
 
+      #if HAS_POWER_MONITOR
+        case 430: M430(); break;                                  // M430: Read the system current (A), voltage (V), and power (W)
+      #endif
+
       #if ENABLED(CANCEL_OBJECTS)
         case 486: M486(); break;                                  // M486: Identify and cancel objects
       #endif

commit 23806aeb3c5db7248ca8a390d1954f444ad2dced
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Jun 16 16:49:32 2020 -0400

    Fix non-PWM spindle/laser compile (#18311)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>
    Co-authored-by: Luu Lac <45380455+shitcreek@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5dee317ca7..f543342e81 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -179,8 +179,10 @@ void GcodeSuite::get_destination_from_command() {
 
   #if ENABLED(LASER_MOVE_POWER)
     // Set the laser power in the planner to configure this move
-    if (parser.seen('S'))
-      cutter.inline_power(cutter.power_to_range(cutter_power_t(round(parser.value_float()))));
+    if (parser.seen('S')) {
+      const float spwr = parser.value_float();
+      cutter.inline_power(TERN(SPINDLE_LASER_PWM, cutter.power_to_range(cutter_power_t(round(spwr))), spwr > 0 ? 255 : 0));
+    }
     else if (ENABLED(LASER_MOVE_G0_OFF) && parser.codenum == 0) // G0
       cutter.set_inline_enabled(false);
   #endif

commit eda2fd8dbea69cb8f571f2992cb11334b2cb7a2f
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Mon Jun 8 00:47:31 2020 -0500

    Improvements for Laser / Spindle (#17661)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 14f2eea7d9..5dee317ca7 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -180,13 +180,9 @@ void GcodeSuite::get_destination_from_command() {
   #if ENABLED(LASER_MOVE_POWER)
     // Set the laser power in the planner to configure this move
     if (parser.seen('S'))
-      cutter.inline_power(parser.value_int());
-    else {
-      #if ENABLED(LASER_MOVE_G0_OFF)
-        if (parser.codenum == 0)        // G0
-          cutter.inline_enabled(false);
-      #endif
-    }
+      cutter.inline_power(cutter.power_to_range(cutter_power_t(round(parser.value_float()))));
+    else if (ENABLED(LASER_MOVE_G0_OFF) && parser.codenum == 0) // G0
+      cutter.set_inline_enabled(false);
   #endif
 }
 

commit 8a22ef0c83a94f742be39005f259226e005ded2d
Author: Colin Godsey <crgodsey@gmail.com>
Date:   Mon May 11 18:22:41 2020 -0600

    G6 Direct Stepping (#17853)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ac5a60ed93..14f2eea7d9 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -261,6 +261,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 5: G5(); break;                                      // G5: Cubic B_spline
       #endif
 
+      #if ENABLED(DIRECT_STEPPING)
+        case 6: G6(); break;                                      // G6: Direct Stepper Move
+      #endif
+
       #if ENABLED(FWRETRACT)
         case 10: G10(); break;                                    // G10: Retract / Swap Retract
         case 11: G11(); break;                                    // G11: Recover / Swap Recover

commit a4c981469e317b30ff21fba109e1b126e5dcafcf
Author: Gurmeet Athwal <gurmeet.athwal@gmail.com>
Date:   Wed May 6 10:04:04 2020 +0530

    Extended reporting options (#16741)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index de6fe29e6a..ac5a60ed93 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -663,6 +663,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 305: M305(); break;                                  // M305: Set user thermistor parameters
       #endif
 
+      #if ENABLED(REPETIER_GCODE_M360)
+        case 360: M360(); break;                                  // M360: Firmware settings
+      #endif
+
       #if ENABLED(MORGAN_SCARA)
         case 360: if (M360()) return; break;                      // M360: SCARA Theta pos1
         case 361: if (M361()) return; break;                      // M361: SCARA Theta pos2

commit 01c646a892c9cd36baf577ca9be344e3490a7727
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 22:35:25 2020 -0500

    Apply more HAS_HOTEND

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a6f54ee022..de6fe29e6a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -544,7 +544,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       case 120: M120(); break;                                    // M120: Enable endstops
       case 121: M121(); break;                                    // M121: Disable endstops
 
-      #if HOTENDS && HAS_LCD_MENU
+      #if HAS_HOTEND && HAS_LCD_MENU
         case 145: M145(); break;                                  // M145: Set material heatup parameters
       #endif
 

commit 8b3c7dda755ebce5bd57a7ce52891a137ea12b35
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 04:41:18 2020 -0500

    Add HAS_FAN and others

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8bebeb1c15..a6f54ee022 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -467,7 +467,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       case 105: M105(); return;                                   // M105: Report Temperatures (and say "ok")
 
-      #if FAN_COUNT > 0
+      #if HAS_FAN
         case 106: M106(); break;                                  // M106: Fan On
         case 107: M107(); break;                                  // M107: Fan Off
       #endif

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 693410861d..8bebeb1c15 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -70,7 +70,7 @@ uint8_t GcodeSuite::axis_relative = (
   | (ar_init.e ? _BV(REL_E) : 0)
 );
 
-#if HAS_AUTO_REPORTING || ENABLED(HOST_KEEPALIVE_FEATURE)
+#if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
   bool GcodeSuite::autoreport_paused; // = false
 #endif
 
@@ -202,7 +202,7 @@ void GcodeSuite::dwell(millis_t time) {
  * When G29_RETRY_AND_RECOVER is enabled, call G29() in
  * a loop with recovery and retry handling.
  */
-#if HAS_LEVELING && ENABLED(G29_RETRY_AND_RECOVER)
+#if BOTH(HAS_LEVELING, G29_RETRY_AND_RECOVER)
 
   #ifndef G29_MAX_RETRIES
     #define G29_MAX_RETRIES 0
@@ -504,7 +504,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 191: M191(); break;                                  // M191: Wait for chamber temperature to reach target
       #endif
 
-      #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
+      #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
         case 155: M155(); break;                                  // M155: Set temperature auto-report interval
       #endif
 
@@ -792,9 +792,9 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 900: M900(); break;                                  // M900: Set advance K factor.
       #endif
 
-      #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || HAS_I2C_DIGIPOT || ENABLED(DAC_STEPPER_CURRENT)
+      #if ANY(HAS_DIGIPOTSS, HAS_MOTOR_CURRENT_PWM, HAS_I2C_DIGIPOT, DAC_STEPPER_CURRENT)
         case 907: M907(); break;                                  // M907: Set digital trimpot motor current using axis codes.
-        #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
+        #if EITHER(HAS_DIGIPOTSS, DAC_STEPPER_CURRENT)
           case 908: M908(); break;                                // M908: Control digital trimpot directly.
           #if ENABLED(DAC_STEPPER_CURRENT)
             case 909: M909(); break;                              // M909: Print digipot/DAC current value

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index dd2ede5d22..693410861d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -218,9 +218,7 @@ void GcodeSuite::dwell(millis_t time) {
       }
     }
 
-    #if ENABLED(HOST_PROMPT_SUPPORT)
-      host_action_prompt_end();
-    #endif
+    TERN_(HOST_PROMPT_SUPPORT, host_action_prompt_end());
 
     #ifdef G29_SUCCESS_COMMANDS
       process_subcommands_now_P(PSTR(G29_SUCCESS_COMMANDS));

commit 4a5a3d27ed29d7bab3de9b64b1a1728fd65c755f
Author: grauerfuchs <42082416+grauerfuchs@users.noreply.github.com>
Date:   Sat Apr 18 23:56:23 2020 -0400

    Option to use raw digipot values (#17536)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 57abc37b0d..dd2ede5d22 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -794,7 +794,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 900: M900(); break;                                  // M900: Set advance K factor.
       #endif
 
-      #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || EITHER(DIGIPOT_I2C, DAC_STEPPER_CURRENT)
+      #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || HAS_I2C_DIGIPOT || ENABLED(DAC_STEPPER_CURRENT)
         case 907: M907(); break;                                  // M907: Set digital trimpot motor current using axis codes.
         #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
           case 908: M908(); break;                                // M908: Control digital trimpot directly.

commit 0e06aaa2bc5c58e018fcdd466ae8836ac0c38e13
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Apr 3 19:49:45 2020 -0500

    Add millis helper macros

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0937a86bd2..57abc37b0d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -988,7 +988,7 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
           break;
       }
     }
-    next_busy_signal_ms = ms + host_keepalive_interval * 1000UL;
+    next_busy_signal_ms = ms + SEC_TO_MS(host_keepalive_interval);
   }
 
 #endif // HOST_KEEPALIVE_FEATURE

commit df8b7dfc406be095a62b5445b69c40034d418823
Author: Ben <jediminer543@users.noreply.github.com>
Date:   Fri Apr 3 01:31:08 2020 +0100

    Various Laser / Spindle improvements (#15335)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1f9d710bb4..0937a86bd2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -53,6 +53,10 @@ GcodeSuite gcode;
   #include "../feature/cancel_object.h"
 #endif
 
+#if ENABLED(LASER_MOVE_POWER)
+  #include "../feature/spindle_laser.h"
+#endif
+
 #include "../MarlinCore.h" // for idle()
 
 millis_t GcodeSuite::previous_move_ms;
@@ -172,6 +176,18 @@ void GcodeSuite::get_destination_from_command() {
   #if BOTH(MIXING_EXTRUDER, DIRECT_MIXING_IN_G1)
     M165();
   #endif
+
+  #if ENABLED(LASER_MOVE_POWER)
+    // Set the laser power in the planner to configure this move
+    if (parser.seen('S'))
+      cutter.inline_power(parser.value_int());
+    else {
+      #if ENABLED(LASER_MOVE_G0_OFF)
+        if (parser.codenum == 0)        // G0
+          cutter.inline_enabled(false);
+      #endif
+    }
+  #endif
 }
 
 /**

commit 747b964295118d425ad41cd7593dae48ccf9f14f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 28 03:18:53 2020 -0500

    Clean up user-wait, SD completion (#17315)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1ce1e3d5cb..1f9d710bb4 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -857,7 +857,11 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if ENABLED(POWER_LOSS_RECOVERY)
         case 413: M413(); break;                                  // M413: Enable/disable/query Power-Loss Recovery
-        case 1000: M1000(); break;                                // M1000: Resume from power-loss
+        case 1000: M1000(); break;                                // M1000: [INTERNAL] Resume from power-loss
+      #endif
+
+      #if ENABLED(SDSUPPORT)
+        case 1001: M1001(); break;                                // M1001: [INTERNAL] Handle SD completion
       #endif
 
       #if ENABLED(MAX7219_GCODE)

commit 83eec683c969d793b473015476d03f868b470c04
Author: Erkan Colak <erkanc@gmx.de>
Date:   Wed Mar 18 19:41:12 2020 +0100

    New Controller Fan options and M710 gcode (#17149)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 266361a099..1ce1e3d5cb 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -752,6 +752,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 702: M702(); break;                                  // M702: Unload Filament
       #endif
 
+      #if ENABLED(CONTROLLER_FAN_EDITABLE)
+        case 710: M710(); break;                                  // M710: Set Controller Fan settings
+      #endif
+
       #if ENABLED(GCODE_MACROS)
         case 810: case 811: case 812: case 813: case 814:
         case 815: case 816: case 817: case 818: case 819:

commit 6bead0c1b04152f6a291d851f6cd4029fe0fc616
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 16:29:29 2020 -0500

    Shorter paths to HAL, ExtUI (#17156)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e58ca5b15b..266361a099 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -46,7 +46,7 @@ GcodeSuite gcode;
 
 #if ENABLED(POWER_LOSS_RECOVERY)
   #include "../sd/cardreader.h"
-  #include "../feature/power_loss_recovery.h"
+  #include "../feature/powerloss.h"
 #endif
 
 #if ENABLED(CANCEL_OBJECTS)

commit 318a16637bd9dacae046706bcc0f70cdae20a33c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 11 17:15:33 2020 -0500

    Fix M810 macro multiple use
    
    Fixes #17125

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e53a17eeb0..e58ca5b15b 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -930,6 +930,7 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
     char * const delim = strchr(gcode, '\n');         // Get address of next newline
     if (delim) *delim = '\0';                         // Replace with nul
     parser.parse(gcode);                              // Parse the current command
+    if (delim) *delim = '\n';                         // Put back the newline
     process_parsed_command(true);                     // Process it
     if (!delim) break;                                // Last command?
     gcode = delim + 1;                                // Get the next command

commit 5171e9da93d5913f7e4c75df9fdbe93c7c8fb32e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 2 20:50:06 2020 -0600

    No more direct G28 calls

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f5df737630..e53a17eeb0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -277,7 +277,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 27: G27(); break;                                    // G27: Nozzle Park
       #endif
 
-      case 28: G28(false); break;                                 // G28: Home all axes, one at a time
+      case 28: G28(); break;                                      // G28: Home one or more axes
 
       #if HAS_LEVELING
         case 29:                                                  // G29: Bed leveling calibration

commit b1a50d54e2a6f8e415a72e0e2d275304029d8ada
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 2 12:03:43 2020 -0600

    HAS_TRINAMIC => HAS_TRINAMIC_CONFIG

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f6b8e6f59b..f5df737630 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -785,7 +785,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         #endif
       #endif
 
-      #if HAS_TRINAMIC
+      #if HAS_TRINAMIC_CONFIG
         case 122: M122(); break;                                  // M122: Report driver configuration and status
         case 906: M906(); break;                                  // M906: Set motor current in milliamps using axis codes X, Y, Z, E
         #if HAS_STEALTHCHOP

commit c4db8e49a7429a696431c0d3419b545d13eead31
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Mar 1 10:36:15 2020 -0600

    XYZ_CHAR macro

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0d2b656dd6..f6b8e6f59b 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -135,7 +135,7 @@ void GcodeSuite::get_destination_from_command() {
 
   // Get new XYZ position, whether absolute or relative
   LOOP_XYZ(i) {
-    if ( (seen[i] = parser.seenval(axis_codes[i])) ) {
+    if ( (seen[i] = parser.seenval(XYZ_CHAR(i))) ) {
       const float v = parser.value_axis_units((AxisEnum)i);
       if (skip_move)
         destination[i] = current_position[i];

commit e78f607ef33044eecde744e77beea87532817c47
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 26 03:02:03 2020 -0600

    Use a STR_ prefix for non-translated strings

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4c9832dbad..0d2b656dd6 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -94,7 +94,7 @@ int8_t GcodeSuite::get_target_extruder_from_command() {
     if (e < EXTRUDERS) return e;
     SERIAL_ECHO_START();
     SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
-    SERIAL_ECHOLNPAIR(" " MSG_INVALID_EXTRUDER " ", int(e));
+    SERIAL_ECHOLNPAIR(" " STR_INVALID_EXTRUDER " ", int(e));
     return -1;
   }
   return active_extruder;
@@ -111,9 +111,9 @@ int8_t GcodeSuite::get_target_e_stepper_from_command() {
   SERIAL_ECHO_START();
   SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
   if (e == -1)
-    SERIAL_ECHOLNPGM(" " MSG_E_STEPPER_NOT_SPECIFIED);
+    SERIAL_ECHOLNPGM(" " STR_E_STEPPER_NOT_SPECIFIED);
   else
-    SERIAL_ECHOLNPAIR(" " MSG_INVALID_E_STEPPER " ", int(e));
+    SERIAL_ECHOLNPAIR(" " STR_INVALID_E_STEPPER " ", int(e));
   return -1;
 }
 
@@ -951,13 +951,13 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
       switch (busy_state) {
         case IN_HANDLER:
         case IN_PROCESS:
-          SERIAL_ECHO_MSG(MSG_BUSY_PROCESSING);
+          SERIAL_ECHO_MSG(STR_BUSY_PROCESSING);
           break;
         case PAUSED_FOR_USER:
-          SERIAL_ECHO_MSG(MSG_BUSY_PAUSED_FOR_USER);
+          SERIAL_ECHO_MSG(STR_BUSY_PAUSED_FOR_USER);
           break;
         case PAUSED_FOR_INPUT:
-          SERIAL_ECHO_MSG(MSG_BUSY_PAUSED_FOR_INPUT);
+          SERIAL_ECHO_MSG(STR_BUSY_PAUSED_FOR_INPUT);
           break;
         default:
           break;

commit a1f026f57ad7dbf4c50b135cf1dc0f9eacc06025
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Feb 20 20:09:37 2020 -0600

    Inline manage_inactivity, tweak autoreport_paused

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 06ab3af52a..4c9832dbad 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -53,7 +53,7 @@ GcodeSuite gcode;
   #include "../feature/cancel_object.h"
 #endif
 
-#include "../MarlinCore.h" // for idle() and suspend_auto_report
+#include "../MarlinCore.h" // for idle()
 
 millis_t GcodeSuite::previous_move_ms;
 
@@ -66,6 +66,10 @@ uint8_t GcodeSuite::axis_relative = (
   | (ar_init.e ? _BV(REL_E) : 0)
 );
 
+#if HAS_AUTO_REPORTING || ENABLED(HOST_KEEPALIVE_FEATURE)
+  bool GcodeSuite::autoreport_paused; // = false
+#endif
+
 #if ENABLED(HOST_KEEPALIVE_FEATURE)
   GcodeSuite::MarlinBusyState GcodeSuite::busy_state = NOT_BUSY;
   uint8_t GcodeSuite::host_keepalive_interval = DEFAULT_KEEPALIVE_INTERVAL;
@@ -942,7 +946,7 @@ void GcodeSuite::process_subcommands_now(char * gcode) {
   void GcodeSuite::host_keepalive() {
     const millis_t ms = millis();
     static millis_t next_busy_signal_ms = 0;
-    if (!suspend_auto_report && host_keepalive_interval && busy_state != NOT_BUSY) {
+    if (!autoreport_paused && host_keepalive_interval && busy_state != NOT_BUSY) {
       if (PENDING(ms, next_busy_signal_ms)) return;
       switch (busy_state) {
         case IN_HANDLER:

commit 38873596ece459ae1d3b65bb8d7905287c3dae6a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Feb 8 23:11:45 2020 -0600

    Tweak parser warning

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 164ae931d3..06ab3af52a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -353,7 +353,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 800: parser.debug(); break;                          // G800: GCode Parser Test for G
       #endif
 
-      default: parser.unknown_command_error(); break;
+      default: parser.unknown_command_warning(); break;
     }
     break;
 
@@ -856,7 +856,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 7219: M7219(); break;                                // M7219: Set LEDs, columns, and rows
       #endif
 
-      default: parser.unknown_command_error(); break;
+      default: parser.unknown_command_warning(); break;
     }
     break;
 
@@ -866,7 +866,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #if ENABLED(WIFI_CUSTOM_COMMAND)
         if (wifi_custom_command(parser.command_ptr)) break;
       #endif
-      parser.unknown_command_error();
+      parser.unknown_command_warning();
   }
 
   if (!no_ok) queue.ok_to_send();

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0c0ab4c24c..164ae931d3 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 8bd6b60a0141fa892984f2d5b61f06eadbbf9a5f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 27 15:40:08 2020 -0600

    Remove extraneous G60/G61 lines

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 955e62e80e..0c0ab4c24c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -332,9 +332,6 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 76: G76(); break;                                    // G76: Calibrate first layer compensation values
       #endif
 
-      case 60: G60(); break;                                      // G60:  save current position
-      case 61: G61(); break;                                      // G61:  Apply/restore saved coordinates.
-
       #if ENABLED(GCODE_MOTION_MODES)
         case 80: G80(); break;                                    // G80: Reset the current motion mode
       #endif

commit e2eef1256a6feaceb8f4c7f02188e8d6d6d43519
Author: Hans007a <32525735+Hans007a@users.noreply.github.com>
Date:   Tue Jan 7 20:52:19 2020 +0100

    G60/G61 Position Save/Restore (#16557)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7ff86f3149..955e62e80e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -314,19 +314,27 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       #if ENABLED(CNC_COORDINATE_SYSTEMS)
-        case 53: G53(); break;
-        case 54: G54(); break;
-        case 55: G55(); break;
-        case 56: G56(); break;
-        case 57: G57(); break;
-        case 58: G58(); break;
-        case 59: G59(); break;
+        case 53: G53(); break;                                    // G53: (prefix) Apply native workspace
+        case 54: G54(); break;                                    // G54: Switch to Workspace 1
+        case 55: G55(); break;                                    // G55: Switch to Workspace 2
+        case 56: G56(); break;                                    // G56: Switch to Workspace 3
+        case 57: G57(); break;                                    // G57: Switch to Workspace 4
+        case 58: G58(); break;                                    // G58: Switch to Workspace 5
+        case 59: G59(); break;                                    // G59.0 - G59.3: Switch to Workspace 6-9
+      #endif
+
+      #if SAVED_POSITIONS
+        case 60: G60(); break;                                    // G60:  save current position
+        case 61: G61(); break;                                    // G61:  Apply/restore saved coordinates.
       #endif
 
       #if ENABLED(PROBE_TEMP_COMPENSATION)
         case 76: G76(); break;                                    // G76: Calibrate first layer compensation values
       #endif
 
+      case 60: G60(); break;                                      // G60:  save current position
+      case 61: G61(); break;                                      // G61:  Apply/restore saved coordinates.
+
       #if ENABLED(GCODE_MOTION_MODES)
         case 80: G80(); break;                                    // G80: Reset the current motion mode
       #endif

commit 0d166f9c7dccbf5f1cc243f06e3882c82a4bd86a
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Sat Jan 25 02:00:51 2020 -0600

    Duet Smart Effector support (#16641)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8260db20a6..7ff86f3149 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -562,14 +562,6 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 206: M206(); break;                                  // M206: Set home offsets
       #endif
 
-      #if ENABLED(DELTA)
-        case 665: M665(); break;                                  // M665: Set delta configurations
-      #endif
-
-      #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
-        case 666: M666(); break;                                  // M666: Set delta or multiple endstop adjustment
-      #endif
-
       #if ENABLED(FWRETRACT)
         case 207: M207(); break;                                  // M207: Set Retract Length, Feedrate, and Z lift
         case 208: M208(); break;                                  // M208: Set Recover (unretract) Additional Length and Feedrate
@@ -714,7 +706,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       #if ENABLED(SDSUPPORT)
-        case 524: M524(); break;                                   // M524: Abort the current SD print job
+        case 524: M524(); break;                                  // M524: Abort the current SD print job
       #endif
 
       #if ENABLED(SD_ABORT_ON_ENDSTOP_HIT)
@@ -725,14 +717,6 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 575: M575(); break;                                  // M575: Set serial baudrate
       #endif
 
-      #if HAS_BED_PROBE
-        case 851: M851(); break;                                  // M851: Set Z Probe Z Offset
-      #endif
-
-      #if ENABLED(SKEW_CORRECTION_GCODE)
-        case 852: M852(); break;                                  // M852: Set Skew factors
-      #endif
-
       #if ENABLED(ADVANCED_PAUSE_FEATURE)
         case 600: M600(); break;                                  // M600: Pause for Filament Change
         case 603: M603(); break;                                  // M603: Configure Filament Change
@@ -742,21 +726,37 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 605: M605(); break;                                  // M605: Set Dual X Carriage movement mode
       #endif
 
+      #if ENABLED(DELTA)
+        case 665: M665(); break;                                  // M665: Set delta configurations
+      #endif
+
+      #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
+        case 666: M666(); break;                                  // M666: Set delta or multiple endstop adjustment
+      #endif
+
+      #if ENABLED(SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
+        case 672: M672(); break;                                  // M672: Set/clear Duet Smart Effector sensitivity
+      #endif
+
       #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
         case 701: M701(); break;                                  // M701: Load Filament
         case 702: M702(); break;                                  // M702: Unload Filament
       #endif
 
-      #if ENABLED(MAX7219_GCODE)
-        case 7219: M7219(); break;                                // M7219: Set LEDs, columns, and rows
-      #endif
-
       #if ENABLED(GCODE_MACROS)
         case 810: case 811: case 812: case 813: case 814:
         case 815: case 816: case 817: case 818: case 819:
         M810_819(); break;                                        // M810-M819: Define/execute G-code macro
       #endif
 
+      #if HAS_BED_PROBE
+        case 851: M851(); break;                                  // M851: Set Z Probe Z Offset
+      #endif
+
+      #if ENABLED(SKEW_CORRECTION_GCODE)
+        case 852: M852(); break;                                  // M852: Set Skew factors
+      #endif
+
       #if ENABLED(PROBE_TEMP_COMPENSATION)
         case 871: M871(); break;                                  // M871: Print/reset/clear first layer temperature offset values
       #endif
@@ -847,6 +847,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 1000: M1000(); break;                                // M1000: Resume from power-loss
       #endif
 
+      #if ENABLED(MAX7219_GCODE)
+        case 7219: M7219(); break;                                // M7219: Set LEDs, columns, and rows
+      #endif
+
       default: parser.unknown_command_error(); break;
     }
     break;

commit 0fcf2b1110d9f0d362e5aab9cc73d963710e9865
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Jan 20 00:35:07 2020 -0500

    Quad Z stepper support (#16277)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5630146a52..8260db20a6 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -566,8 +566,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 665: M665(); break;                                  // M665: Set delta configurations
       #endif
 
-      #if ANY(DELTA, X_DUAL_ENDSTOPS, Y_DUAL_ENDSTOPS, Z_DUAL_ENDSTOPS)
-        case 666: M666(); break;                                  // M666: Set delta or dual endstop adjustment
+      #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
+        case 666: M666(); break;                                  // M666: Set delta or multiple endstop adjustment
       #endif
 
       #if ENABLED(FWRETRACT)

commit a338dce83f6f3b3348a8422ad8acd7b81cc1cefe
Author: tompe-proj <59094873+tompe-proj@users.noreply.github.com>
Date:   Sat Jan 18 00:16:45 2020 +0100

    PINDA v2 temperature sensor / compensation (#16293)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 860e8c3552..5630146a52 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -323,6 +323,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 59: G59(); break;
       #endif
 
+      #if ENABLED(PROBE_TEMP_COMPENSATION)
+        case 76: G76(); break;                                    // G76: Calibrate first layer compensation values
+      #endif
+
       #if ENABLED(GCODE_MOTION_MODES)
         case 80: G80(); break;                                    // G80: Reset the current motion mode
       #endif
@@ -753,6 +757,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         M810_819(); break;                                        // M810-M819: Define/execute G-code macro
       #endif
 
+      #if ENABLED(PROBE_TEMP_COMPENSATION)
+        case 871: M871(); break;                                  // M871: Print/reset/clear first layer temperature offset values
+      #endif
+
       #if ENABLED(LIN_ADVANCE)
         case 900: M900(); break;                                  // M900: Set advance K factor.
       #endif

commit 1ad53cee1f4e2768310fca98de0381df9c39b617
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Mon Jan 13 18:47:30 2020 -0600

    Improved STMicro L64XX stepper driver support (#16452)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index fad5b80822..860e8c3552 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -786,7 +786,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         #endif
       #endif
 
-      #if HAS_DRIVER(L6470)
+      #if HAS_L64XX
         case 122: M122(); break;                                   // M122: Report status
         case 906: M906(); break;                                   // M906: Set or get motor drive level
         case 916: M916(); break;                                   // M916: L6470 tuning: Increase drive level until thermal warning

commit d854c8fa5fb4f65eeafd230885a6eea982fbed22
Author: Luc <8822552+luc-github@users.noreply.github.com>
Date:   Sat Jan 11 00:15:05 2020 +0100

    ESP3d integration for ESP32 (#16515)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f07d2fbe40..fad5b80822 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -28,6 +28,10 @@
 #include "gcode.h"
 GcodeSuite gcode;
 
+#if ENABLED(WIFI_CUSTOM_COMMAND)
+  extern bool wifi_custom_command(char * const command_ptr);
+#endif
+
 #include "parser.h"
 #include "queue.h"
 #include "../module/motion.h"
@@ -841,7 +845,11 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
     case 'T': T(parser.codenum); break;                           // Tn: Tool Change
 
-    default: parser.unknown_command_error();
+    default:
+      #if ENABLED(WIFI_CUSTOM_COMMAND)
+        if (wifi_custom_command(parser.command_ptr)) break;
+      #endif
+      parser.unknown_command_error();
   }
 
   if (!no_ok) queue.ok_to_send();

commit d0e1166cce60381fbdad1105d13765806a525d99
Author: Dirk O. Kaar <19971886+dok-net@users.noreply.github.com>
Date:   Fri Jan 3 02:01:38 2020 +0100

    Fix Visual Micro "Arduino IDE for Visual Studio" support (#16418)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d835ce6555..f07d2fbe40 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -49,7 +49,7 @@ GcodeSuite gcode;
   #include "../feature/cancel_object.h"
 #endif
 
-#include "../Marlin.h" // for idle() and suspend_auto_report
+#include "../MarlinCore.h" // for idle() and suspend_auto_report
 
 millis_t GcodeSuite::previous_move_ms;
 

commit deff538909f50ee9b792b313fe8c32f32beb6263
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Dec 15 20:21:56 2019 -0600

    Fix broken M100_dump_routine

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 92928cf8b3..d835ce6555 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -209,7 +209,7 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 #if ENABLED(M100_FREE_MEMORY_WATCHER)
-  extern void M100_dump_routine(PGM_P const title, char *start, char *end);
+  extern void M100_dump_routine(PGM_P const title, const char * const start, const char * const end);
 #endif
 
 /**
@@ -865,7 +865,7 @@ void GcodeSuite::process_next_command() {
     SERIAL_ECHOLN(current_command);
     #if ENABLED(M100_FREE_MEMORY_DUMPER)
       SERIAL_ECHOPAIR("slot:", queue.index_r);
-      M100_dump_routine(PSTR("   Command Queue:"), queue.command_buffer, queue.command_buffer + sizeof(queue.command_buffer));
+      M100_dump_routine(PSTR("   Command Queue:"), &queue.command_buffer[0][0], &queue.command_buffer[BUFSIZE - 1][MAX_CMD_SIZE - 1]);
     #endif
   }
 

commit 732bf898781385cef60fd2653c6587e17dc51b6a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 25 19:38:05 2019 -0500

    Get 'cancelable' for gcode.cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index b0ce24a2e5..92928cf8b3 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -45,6 +45,10 @@ GcodeSuite gcode;
   #include "../feature/power_loss_recovery.h"
 #endif
 
+#if ENABLED(CANCEL_OBJECTS)
+  #include "../feature/cancel_object.h"
+#endif
+
 #include "../Marlin.h" // for idle() and suspend_auto_report
 
 millis_t GcodeSuite::previous_move_ms;

commit 93f001295988a335552d8fea5463a112e3aa64e4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 24 15:35:40 2019 -0500

    Cancel Objects - As seen at ERRF2019 (#15590)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3da1307748..b0ce24a2e5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -114,15 +114,34 @@ int8_t GcodeSuite::get_target_e_stepper_from_command() {
  */
 void GcodeSuite::get_destination_from_command() {
   xyze_bool_t seen = { false, false, false, false };
-  LOOP_XYZE(i) {
+
+  #if ENABLED(CANCEL_OBJECTS)
+    const bool &skip_move = cancelable.skipping;
+  #else
+    constexpr bool skip_move = false;
+  #endif
+
+  // Get new XYZ position, whether absolute or relative
+  LOOP_XYZ(i) {
     if ( (seen[i] = parser.seenval(axis_codes[i])) ) {
       const float v = parser.value_axis_units((AxisEnum)i);
-      destination[i] = axis_is_relative(AxisEnum(i)) ? current_position[i] + v : (i == E_AXIS) ? v : LOGICAL_TO_NATIVE(v, i);
+      if (skip_move)
+        destination[i] = current_position[i];
+      else
+        destination[i] = axis_is_relative(AxisEnum(i)) ? current_position[i] + v : LOGICAL_TO_NATIVE(v, i);
     }
     else
       destination[i] = current_position[i];
   }
 
+  // Get new E position, whether absolute or relative
+  if ( (seen.e = parser.seenval('E')) ) {
+    const float v = parser.value_axis_units(E_AXIS);
+    destination.e = axis_is_relative(E_AXIS) ? current_position.e + v : v;
+  }
+  else
+    destination.e = current_position.e;
+
   #if ENABLED(POWER_LOSS_RECOVERY) && !PIN_EXISTS(POWER_LOSS)
     // Only update power loss recovery on moves with E
     if (recovery.enabled && IS_SD_PRINTING() && seen.e && (seen.x || seen.y))
@@ -133,7 +152,7 @@ void GcodeSuite::get_destination_from_command() {
     feedrate_mm_s = parser.value_feedrate();
 
   #if ENABLED(PRINTCOUNTER)
-    if (!DEBUGGING(DRYRUN))
+    if (!DEBUGGING(DRYRUN) && !skip_move)
       print_job_timer.incFilamentUsed(destination.e - current_position.e);
   #endif
 
@@ -322,6 +341,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
     break;
 
     case 'M': switch (parser.codenum) {
+
       #if HAS_RESUME_CONTINUE
         case 0:                                                   // M0: Unconditional stop - Wait for user button press on LCD
         case 1: M0_M1(); break;                                   // M1: Conditional stop - Wait for user button press on LCD
@@ -667,6 +687,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 428: M428(); break;                                  // M428: Apply current_position to home_offset
       #endif
 
+      #if ENABLED(CANCEL_OBJECTS)
+        case 486: M486(); break;                                  // M486: Identify and cancel objects
+      #endif
+
       case 500: M500(); break;                                    // M500: Store settings in EEPROM
       case 501: M501(); break;                                    // M501: Read settings from EEPROM
       case 502: M502(); break;                                    // M502: Revert to default settings

commit af214ff121dd977b002c9a9065f84b7ae1a66247
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 22 15:43:37 2019 -0500

    Fix up PSU_CONTROL checks

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index cced238ddc..3da1307748 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -471,7 +471,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         #endif
       #endif // BARICUDA
 
-      #if HAS_POWER_SWITCH
+      #if ENABLED(PSU_CONTROL)
         case 80: M80(); break;                                    // M80: Turn on Power Supply
       #endif
       case 81: M81(); break;                                      // M81: Turn off Power, including Power Supply, if possible

commit 0d7736d6636760a4fd706aab3558e5ea67487e14
Author: Bo Herrmannsen <bo.herrmannsen@gmail.com>
Date:   Wed Oct 16 22:02:37 2019 +0200

    Enable M191 (#15531)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 32885af6ca..cced238ddc 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -446,7 +446,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if HAS_HEATED_CHAMBER
         case 141: M141(); break;                                  // M141: Set chamber temperature
-        //case 191: M191(); break;                                // M191: Wait for chamber temperature to reach target
+        case 191: M191(); break;                                  // M191: Wait for chamber temperature to reach target
       #endif
 
       #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR

commit 50e4545255605eb506c20eb107270038b0fe7bdb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 29 04:25:39 2019 -0500

    Add custom types for position (#15204)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f542f842ce..32885af6ca 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -49,12 +49,13 @@ GcodeSuite gcode;
 
 millis_t GcodeSuite::previous_move_ms;
 
-static constexpr bool ar_init[XYZE] = AXIS_RELATIVE_MODES;
+// Relative motion mode for each logical axis
+static constexpr xyze_bool_t ar_init = AXIS_RELATIVE_MODES;
 uint8_t GcodeSuite::axis_relative = (
-    (ar_init[X_AXIS] ? _BV(REL_X) : 0)
-  | (ar_init[Y_AXIS] ? _BV(REL_Y) : 0)
-  | (ar_init[Z_AXIS] ? _BV(REL_Z) : 0)
-  | (ar_init[E_AXIS] ? _BV(REL_E) : 0)
+    (ar_init.x ? _BV(REL_X) : 0)
+  | (ar_init.y ? _BV(REL_Y) : 0)
+  | (ar_init.z ? _BV(REL_Z) : 0)
+  | (ar_init.e ? _BV(REL_E) : 0)
 );
 
 #if ENABLED(HOST_KEEPALIVE_FEATURE)
@@ -68,7 +69,7 @@ uint8_t GcodeSuite::axis_relative = (
 
 #if ENABLED(CNC_COORDINATE_SYSTEMS)
   int8_t GcodeSuite::active_coordinate_system = -1; // machine space
-  float GcodeSuite::coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
+  xyz_pos_t GcodeSuite::coordinate_system[MAX_COORDINATE_SYSTEMS];
 #endif
 
 /**
@@ -112,7 +113,7 @@ int8_t GcodeSuite::get_target_e_stepper_from_command() {
  *  - Set the feedrate, if included
  */
 void GcodeSuite::get_destination_from_command() {
-  bool seen[XYZE] = { false, false, false, false };
+  xyze_bool_t seen = { false, false, false, false };
   LOOP_XYZE(i) {
     if ( (seen[i] = parser.seenval(axis_codes[i])) ) {
       const float v = parser.value_axis_units((AxisEnum)i);
@@ -124,7 +125,7 @@ void GcodeSuite::get_destination_from_command() {
 
   #if ENABLED(POWER_LOSS_RECOVERY) && !PIN_EXISTS(POWER_LOSS)
     // Only update power loss recovery on moves with E
-    if (recovery.enabled && IS_SD_PRINTING() && seen[E_AXIS] && (seen[X_AXIS] || seen[Y_AXIS]))
+    if (recovery.enabled && IS_SD_PRINTING() && seen.e && (seen.x || seen.y))
       recovery.save();
   #endif
 
@@ -133,7 +134,7 @@ void GcodeSuite::get_destination_from_command() {
 
   #if ENABLED(PRINTCOUNTER)
     if (!DEBUGGING(DRYRUN))
-      print_job_timer.incFilamentUsed(destination[E_AXIS] - current_position[E_AXIS]);
+      print_job_timer.incFilamentUsed(destination.e - current_position.e);
   #endif
 
   // Get ABCDHI mixing factors

commit 455dabb18334c89878a75be62bccebd9f537574d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 26 01:28:09 2019 -0500

    Add a feedRate_t data type (#15349)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 61b75753e7..f542f842ce 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -129,7 +129,7 @@ void GcodeSuite::get_destination_from_command() {
   #endif
 
   if (parser.linearval('F') > 0)
-    feedrate_mm_s = MMM_TO_MMS(parser.value_feedrate());
+    feedrate_mm_s = parser.value_feedrate();
 
   #if ENABLED(PRINTCOUNTER)
     if (!DEBUGGING(DRYRUN))

commit 6091e6300aa86a52fd855f4f6ab8d7f8a1ad57f9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Sep 11 01:29:33 2019 -0500

    Fix G90, G91, M82, M83 rel/abs modes (#15218)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a554232216..61b75753e7 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -49,7 +49,13 @@ GcodeSuite gcode;
 
 millis_t GcodeSuite::previous_move_ms;
 
-bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
+static constexpr bool ar_init[XYZE] = AXIS_RELATIVE_MODES;
+uint8_t GcodeSuite::axis_relative = (
+    (ar_init[X_AXIS] ? _BV(REL_X) : 0)
+  | (ar_init[Y_AXIS] ? _BV(REL_Y) : 0)
+  | (ar_init[Z_AXIS] ? _BV(REL_Z) : 0)
+  | (ar_init[E_AXIS] ? _BV(REL_E) : 0)
+);
 
 #if ENABLED(HOST_KEEPALIVE_FEATURE)
   GcodeSuite::MarlinBusyState GcodeSuite::busy_state = NOT_BUSY;
@@ -110,9 +116,7 @@ void GcodeSuite::get_destination_from_command() {
   LOOP_XYZE(i) {
     if ( (seen[i] = parser.seenval(axis_codes[i])) ) {
       const float v = parser.value_axis_units((AxisEnum)i);
-      destination[i] = (axis_relative_modes[i] || relative_mode)
-        ? current_position[i] + v
-        : (i == E_AXIS) ? v : LOGICAL_TO_NATIVE(v, i);
+      destination[i] = axis_is_relative(AxisEnum(i)) ? current_position[i] + v : (i == E_AXIS) ? v : LOGICAL_TO_NATIVE(v, i);
     }
     else
       destination[i] = current_position[i];
@@ -295,8 +299,8 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 80: G80(); break;                                    // G80: Reset the current motion mode
       #endif
 
-      case 90: relative_mode = false; break;                      // G90: Relative Mode
-      case 91: relative_mode = true; break;                       // G91: Absolute Mode
+      case 90: set_relative_mode(false); break;                   // G90: Absolute Mode
+      case 91: set_relative_mode(true);  break;                   // G91: Relative Mode
 
       case 92: G92(); break;                                      // G92: Set current axis position(s)
 

commit c590e8ac05c3b417aa42ecd1f4967c4f70cfdd71
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 10 18:52:41 2019 -0500

    Improve Power-loss Recovery (#15135)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 680fa35974..a554232216 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -118,7 +118,7 @@ void GcodeSuite::get_destination_from_command() {
       destination[i] = current_position[i];
   }
 
-  #if ENABLED(POWER_LOSS_RECOVERY)
+  #if ENABLED(POWER_LOSS_RECOVERY) && !PIN_EXISTS(POWER_LOSS)
     // Only update power loss recovery on moves with E
     if (recovery.enabled && IS_SD_PRINTING() && seen[E_AXIS] && (seen[X_AXIS] || seen[Y_AXIS]))
       recovery.save();
@@ -823,6 +823,10 @@ void GcodeSuite::process_next_command() {
 
   PORT_REDIRECT(queue.port[queue.index_r]);
 
+  #if ENABLED(POWER_LOSS_RECOVERY)
+    recovery.queue_index_r = queue.index_r;
+  #endif
+
   if (DEBUGGING(ECHO)) {
     SERIAL_ECHO_START();
     SERIAL_ECHOLN(current_command);

commit 584c86bed1d81548da03681bd3b3c6bd54ae0fe3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 10 02:20:49 2019 -0500

    More "zero extruders" changes (#15213)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8ad818c925..680fa35974 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -400,8 +400,18 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 100: M100(); break;                                  // M100: Free Memory Report
       #endif
 
-      case 104: M104(); break;                                    // M104: Set hot end temperature
-      case 109: M109(); break;                                    // M109: Wait for hotend temperature to reach target
+      #if EXTRUDERS
+        case 104: M104(); break;                                  // M104: Set hot end temperature
+        case 109: M109(); break;                                  // M109: Wait for hotend temperature to reach target
+      #endif
+
+      case 105: M105(); return;                                   // M105: Report Temperatures (and say "ok")
+
+      #if FAN_COUNT > 0
+        case 106: M106(); break;                                  // M106: Fan On
+        case 107: M107(); break;                                  // M107: Fan Off
+      #endif
+
       case 110: M110(); break;                                    // M110: Set Current Line Number
       case 111: M111(); break;                                    // M111: Set debug level
 
@@ -410,7 +420,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 112: M112(); break;                                  // M112: Full Shutdown
         case 410: M410(); break;                                  // M410: Quickstop - Abort all the planned moves.
         #if ENABLED(HOST_PROMPT_SUPPORT)
-          case 876: M876(); break;                                  // M876: Handle Host prompt responses
+          case 876: M876(); break;                                // M876: Handle Host prompt responses
         #endif
       #else
         case 108: case 112: case 410:
@@ -434,17 +444,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         //case 191: M191(); break;                                // M191: Wait for chamber temperature to reach target
       #endif
 
-      case 105: M105(); return;                                   // M105: Report Temperatures (and say "ok")
-
       #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
         case 155: M155(); break;                                  // M155: Set temperature auto-report interval
       #endif
 
-      #if FAN_COUNT > 0
-        case 106: M106(); break;                                  // M106: Fan On
-        case 107: M107(); break;                                  // M107: Fan Off
-      #endif
-
       #if ENABLED(PARK_HEAD_ON_PAUSE)
         case 125: M125(); break;                                  // M125: Store current position and move to filament change position
       #endif
@@ -481,7 +484,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       case 120: M120(); break;                                    // M120: Enable endstops
       case 121: M121(); break;                                    // M121: Disable endstops
 
-      #if HAS_LCD_MENU
+      #if HOTENDS && HAS_LCD_MENU
         case 145: M145(); break;                                  // M145: Set material heatup parameters
       #endif
 
@@ -553,7 +556,11 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
       #endif
 
       case 220: M220(); break;                                    // M220: Set Feedrate Percentage: S<percent> ("FR" on your LCD)
-      case 221: M221(); break;                                    // M221: Set Flow Percentage
+
+      #if EXTRUDERS
+        case 221: M221(); break;                                  // M221: Set Flow Percentage
+      #endif
+
       case 226: M226(); break;                                    // M226: Wait until a pin reaches a state
 
       #if HAS_SERVOS

commit a2e412c0ce9865c170f72331052bb3b88a28ffce
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 1 20:21:11 2019 -0500

    Rename command buffer var

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 49503b9b5c..8ad818c925 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -812,7 +812,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
  * This is called from the main loop()
  */
 void GcodeSuite::process_next_command() {
-  char * const current_command = queue.buffer[queue.index_r];
+  char * const current_command = queue.command_buffer[queue.index_r];
 
   PORT_REDIRECT(queue.port[queue.index_r]);
 
@@ -821,7 +821,7 @@ void GcodeSuite::process_next_command() {
     SERIAL_ECHOLN(current_command);
     #if ENABLED(M100_FREE_MEMORY_DUMPER)
       SERIAL_ECHOPAIR("slot:", queue.index_r);
-      M100_dump_routine(PSTR("   Command Queue:"), queue.buffer, queue.buffer + sizeof(queue.buffer));
+      M100_dump_routine(PSTR("   Command Queue:"), queue.command_buffer, queue.command_buffer + sizeof(queue.command_buffer));
     #endif
   }
 

commit b7796bcce6a1d375b57d72db5fd4dd03d66fcceb
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Aug 28 01:51:01 2019 -0400

    Disable steppers on M112 (#15065)
    
    And change verbiage to not refer to "Emergency Stop."

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 91282d0ab5..49503b9b5c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -407,7 +407,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
 
       #if DISABLED(EMERGENCY_PARSER)
         case 108: M108(); break;                                  // M108: Cancel Waiting
-        case 112: M112(); break;                                  // M112: Emergency Stop
+        case 112: M112(); break;                                  // M112: Full Shutdown
         case 410: M410(); break;                                  // M410: Quickstop - Abort all the planned moves.
         #if ENABLED(HOST_PROMPT_SUPPORT)
           case 876: M876(); break;                                  // M876: Handle Host prompt responses

commit 0fbb26c28fb714a6b34fe0b69b07fc14835c957b
Author: Joseph Bozarth <bozarjp@gmail.com>
Date:   Tue Aug 13 23:38:45 2019 -0500

    M16 - Expected Printer Check (#14924)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index cbad59eac6..91282d0ab5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -342,6 +342,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 12: M12(); break;                                    // M12: Synchronize and optionally force a CLC set
       #endif
 
+      #if ENABLED(EXPECTED_PRINTER_CHECK)
+        case 16: M16(); break;                                    // M16: Expected printer check
+      #endif
+
       case 17: M17(); break;                                      // M17: Enable all stepper motors
 
       #if ENABLED(SDSUPPORT)

commit e44fccf3d25c6adae4347cf54b654b66a797f7b2
Author: rafaljot <rafal@jastrzebscy.org>
Date:   Tue Jul 30 08:30:00 2019 +0100

    Add support for M575 (#14757)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ec76671f1c..cbad59eac6 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -669,6 +669,10 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 540: M540(); break;                                  // M540: Set abort on endstop hit for SD printing
       #endif
 
+      #if ENABLED(BAUD_RATE_GCODE)
+        case 575: M575(); break;                                  // M575: Set serial baudrate
+      #endif
+
       #if HAS_BED_PROBE
         case 851: M851(); break;                                  // M851: Set Z Probe Z Offset
       #endif

commit d16954dc885f75869b572549c5e90561b89a95bc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jun 29 22:49:50 2019 -0500

    Make KEEPALIVE_STATE a scoped auto-restore (#14446)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f78aa826b5..ec76671f1c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -430,7 +430,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         //case 191: M191(); break;                                // M191: Wait for chamber temperature to reach target
       #endif
 
-      case 105: M105(); KEEPALIVE_STATE(NOT_BUSY); return;        // M105: Report Temperatures (and say "ok")
+      case 105: M105(); return;                                   // M105: Report Temperatures (and say "ok")
 
       #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
         case 155: M155(); break;                                  // M155: Set temperature auto-report interval
@@ -796,8 +796,6 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
     default: parser.unknown_command_error();
   }
 
-  KEEPALIVE_STATE(NOT_BUSY);
-
   if (!no_ok) queue.ok_to_send();
 }
 

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4b4bc70a23..f78aa826b5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit d7d80418aedad1c89e27fcba6aab9aa48187b5cc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 27 23:06:49 2019 -0500

    Singleton for cutting tools (#14429)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 98091f78fd..4b4bc70a23 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -322,7 +322,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
         case 1: M0_M1(); break;                                   // M1: Conditional stop - Wait for user button press on LCD
       #endif
 
-      #if ENABLED(SPINDLE_LASER_ENABLE)
+      #if HAS_CUTTER
         case 3: M3_M4(false); break;                              // M3: Turn ON Laser | Spindle (clockwise), set Power | Speed
         case 4: M3_M4(true ); break;                              // M4: Turn ON Laser | Spindle (counter-clockwise), set Power | Speed
         case 5: M5(); break;                                      // M5: Turn OFF Laser | Spindle

commit 4c872a01f284cbf181f52c84e2ba6b4618e62556
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 19 00:00:19 2019 -0500

    G-code queue singleton, front injection (#14236)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8607ae2eb8..98091f78fd 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -187,7 +187,7 @@ void GcodeSuite::dwell(millis_t time) {
 /**
  * Process the parsed command and dispatch it to its handler
  */
-void GcodeSuite::process_parsed_command(const bool no_ok) {
+void GcodeSuite::process_parsed_command(const bool no_ok/*=false*/) {
   KEEPALIVE_STATE(IN_HANDLER);
 
   // Handle a known G, M, or T
@@ -798,7 +798,7 @@ void GcodeSuite::process_parsed_command(const bool no_ok) {
 
   KEEPALIVE_STATE(NOT_BUSY);
 
-  if (!no_ok) ok_to_send();
+  if (!no_ok) queue.ok_to_send();
 }
 
 /**
@@ -806,16 +806,16 @@ void GcodeSuite::process_parsed_command(const bool no_ok) {
  * This is called from the main loop()
  */
 void GcodeSuite::process_next_command() {
-  char * const current_command = command_queue[cmd_queue_index_r];
+  char * const current_command = queue.buffer[queue.index_r];
 
-  PORT_REDIRECT(command_queue_port[cmd_queue_index_r]);
+  PORT_REDIRECT(queue.port[queue.index_r]);
 
   if (DEBUGGING(ECHO)) {
     SERIAL_ECHO_START();
     SERIAL_ECHOLN(current_command);
     #if ENABLED(M100_FREE_MEMORY_DUMPER)
-      SERIAL_ECHOPAIR("slot:", cmd_queue_index_r);
-      M100_dump_routine(PSTR("   Command Queue:"), (const char*)command_queue, (const char*)(command_queue) + sizeof(command_queue));
+      SERIAL_ECHOPAIR("slot:", queue.index_r);
+      M100_dump_routine(PSTR("   Command Queue:"), queue.buffer, queue.buffer + sizeof(queue.buffer));
     #endif
   }
 

commit bf64dd4db6e28f3ab9cddabbcdec3a56abda03de
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Jun 18 08:02:18 2019 -0400

    Improve G34, M422 (Z alignment) (#14142)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 55137d2078..8607ae2eb8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -187,11 +187,7 @@ void GcodeSuite::dwell(millis_t time) {
 /**
  * Process the parsed command and dispatch it to its handler
  */
-void GcodeSuite::process_parsed_command(
-  #if USE_EXECUTE_COMMANDS_IMMEDIATE
-    const bool no_ok
-  #endif
-) {
+void GcodeSuite::process_parsed_command(const bool no_ok) {
   KEEPALIVE_STATE(IN_HANDLER);
 
   // Handle a known G, M, or T
@@ -802,10 +798,7 @@ void GcodeSuite::process_parsed_command(
 
   KEEPALIVE_STATE(NOT_BUSY);
 
-  #if USE_EXECUTE_COMMANDS_IMMEDIATE
-    if (!no_ok)
-  #endif
-      ok_to_send();
+  if (!no_ok) ok_to_send();
 }
 
 /**
@@ -831,43 +824,39 @@ void GcodeSuite::process_next_command() {
   process_parsed_command();
 }
 
-#if USE_EXECUTE_COMMANDS_IMMEDIATE
-
-  /**
-   * Run a series of commands, bypassing the command queue to allow
-   * G-code "macros" to be called from within other G-code handlers.
-   */
+/**
+ * Run a series of commands, bypassing the command queue to allow
+ * G-code "macros" to be called from within other G-code handlers.
+ */
 
-  void GcodeSuite::process_subcommands_now_P(PGM_P pgcode) {
-    char * const saved_cmd = parser.command_ptr;        // Save the parser state
-    for (;;) {
-      PGM_P const delim = strchr_P(pgcode, '\n');       // Get address of next newline
-      const size_t len = delim ? delim - pgcode : strlen_P(pgcode); // Get the command length
-      char cmd[len + 1];                                // Allocate a stack buffer
-      strncpy_P(cmd, pgcode, len);                      // Copy the command to the stack
-      cmd[len] = '\0';                                  // End with a nul
-      parser.parse(cmd);                                // Parse the command
-      process_parsed_command(true);                     // Process it
-      if (!delim) break;                                // Last command?
-      pgcode = delim + 1;                               // Get the next command
-    }
-    parser.parse(saved_cmd);                            // Restore the parser state
+void GcodeSuite::process_subcommands_now_P(PGM_P pgcode) {
+  char * const saved_cmd = parser.command_ptr;        // Save the parser state
+  for (;;) {
+    PGM_P const delim = strchr_P(pgcode, '\n');       // Get address of next newline
+    const size_t len = delim ? delim - pgcode : strlen_P(pgcode); // Get the command length
+    char cmd[len + 1];                                // Allocate a stack buffer
+    strncpy_P(cmd, pgcode, len);                      // Copy the command to the stack
+    cmd[len] = '\0';                                  // End with a nul
+    parser.parse(cmd);                                // Parse the command
+    process_parsed_command(true);                     // Process it
+    if (!delim) break;                                // Last command?
+    pgcode = delim + 1;                               // Get the next command
   }
+  parser.parse(saved_cmd);                            // Restore the parser state
+}
 
-  void GcodeSuite::process_subcommands_now(char * gcode) {
-    char * const saved_cmd = parser.command_ptr;        // Save the parser state
-    for (;;) {
-      char * const delim = strchr(gcode, '\n');         // Get address of next newline
-      if (delim) *delim = '\0';                         // Replace with nul
-      parser.parse(gcode);                              // Parse the current command
-      process_parsed_command(true);                     // Process it
-      if (!delim) break;                                // Last command?
-      gcode = delim + 1;                                // Get the next command
-    }
-    parser.parse(saved_cmd);                            // Restore the parser state
+void GcodeSuite::process_subcommands_now(char * gcode) {
+  char * const saved_cmd = parser.command_ptr;        // Save the parser state
+  for (;;) {
+    char * const delim = strchr(gcode, '\n');         // Get address of next newline
+    if (delim) *delim = '\0';                         // Replace with nul
+    parser.parse(gcode);                              // Parse the current command
+    process_parsed_command(true);                     // Process it
+    if (!delim) break;                                // Last command?
+    gcode = delim + 1;                                // Get the next command
   }
-
-#endif // USE_EXECUTE_COMMANDS_IMMEDIATE
+  parser.parse(saved_cmd);                            // Restore the parser state
+}
 
 #if ENABLED(HOST_KEEPALIVE_FEATURE)
 

commit bf8bfb5c66bd3b2f86e522c441affb832982ec39
Author: mb300sd <mb300sd@mb300sd.net>
Date:   Thu Jun 13 19:43:11 2019 -0400

    Add Coolant Control M7/M8/M9 (#10745)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 10021d5ef1..55137d2078 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -327,9 +327,19 @@ void GcodeSuite::process_parsed_command(
       #endif
 
       #if ENABLED(SPINDLE_LASER_ENABLE)
-        case 3: M3_M4(false); break;                              // M3: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CW
-        case 4: M3_M4(true ); break;                              // M4: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CCW
-        case 5: M5(); break;                                      // M5 - turn spindle/laser off
+        case 3: M3_M4(false); break;                              // M3: Turn ON Laser | Spindle (clockwise), set Power | Speed
+        case 4: M3_M4(true ); break;                              // M4: Turn ON Laser | Spindle (counter-clockwise), set Power | Speed
+        case 5: M5(); break;                                      // M5: Turn OFF Laser | Spindle
+      #endif
+
+      #if ENABLED(COOLANT_CONTROL)
+        #if ENABLED(COOLANT_MIST)
+          case 7: M7(); break;                                    // M7: Mist coolant ON
+        #endif
+        #if ENABLED(COOLANT_FLOOD)
+          case 8: M8(); break;                                    // M8: Flood coolant ON
+        #endif
+        case 9: M9(); break;                                      // M9: Coolant OFF
       #endif
 
       #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
@@ -339,9 +349,9 @@ void GcodeSuite::process_parsed_command(
       case 17: M17(); break;                                      // M17: Enable all stepper motors
 
       #if ENABLED(SDSUPPORT)
-        case 20: M20(); break;                                    // M20: list SD card
-        case 21: M21(); break;                                    // M21: init SD card
-        case 22: M22(); break;                                    // M22: release SD card
+        case 20: M20(); break;                                    // M20: List SD card
+        case 21: M21(); break;                                    // M21: Init SD card
+        case 22: M22(); break;                                    // M22: Release SD card
         case 23: M23(); break;                                    // M23: Select file
         case 24: M24(); break;                                    // M24: Start SD print
         case 25: M25(); break;                                    // M25: Pause SD print

commit 04715e04ee64e5d2f28d4f622143fb0b19de4a65
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jun 12 03:12:03 2019 -0500

    Minor M100 cleanup

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2c784a5bbc..10021d5ef1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -181,7 +181,7 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 #if ENABLED(M100_FREE_MEMORY_WATCHER)
-  extern void M100_dump_routine(PGM_P const title, const char *start, const char *end);
+  extern void M100_dump_routine(PGM_P const title, char *start, char *end);
 #endif
 
 /**

commit 8cf5504a34b3133e0b4856f1646ffc5a2ef139dd
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Tue Jun 11 06:33:35 2019 +0200

    Redundant but faster recovery.enabled test (#14175)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8d54bac525..2c784a5bbc 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -120,7 +120,8 @@ void GcodeSuite::get_destination_from_command() {
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     // Only update power loss recovery on moves with E
-    if (seen[E_AXIS] && (seen[X_AXIS] || seen[Y_AXIS]) && IS_SD_PRINTING()) recovery.save();
+    if (recovery.enabled && IS_SD_PRINTING() && seen[E_AXIS] && (seen[X_AXIS] || seen[Y_AXIS]))
+      recovery.save();
   #endif
 
   if (parser.linearval('F') > 0)

commit 0ca2073625fcf1eb35de8c37d49960bf20bed4b6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jun 10 17:25:43 2019 -0500

    ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED => SD_ABORT_ON_ENDSTOP_HIT

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 734468ff8e..8d54bac525 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -658,7 +658,7 @@ void GcodeSuite::process_parsed_command(
         case 524: M524(); break;                                   // M524: Abort the current SD print job
       #endif
 
-      #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
+      #if ENABLED(SD_ABORT_ON_ENDSTOP_HIT)
         case 540: M540(); break;                                  // M540: Set abort on endstop hit for SD printing
       #endif
 

commit 7b78a20fb7ab6224e2f5c49b43d9c16a42015bd0
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Sat May 11 23:44:39 2019 +0700

    Fix: Debug Memory Dump size (#13957)
    
    * Fix Memory Dump size
    
    * Fix Compile error on Memory Dump

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 44eadfa368..734468ff8e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -809,9 +809,9 @@ void GcodeSuite::process_next_command() {
   if (DEBUGGING(ECHO)) {
     SERIAL_ECHO_START();
     SERIAL_ECHOLN(current_command);
-    #if ENABLED(M100_FREE_MEMORY_WATCHER)
+    #if ENABLED(M100_FREE_MEMORY_DUMPER)
       SERIAL_ECHOPAIR("slot:", cmd_queue_index_r);
-      M100_dump_routine(PSTR("   Command Queue:"), (const char*)command_queue, (const char*)(command_queue + sizeof(command_queue)));
+      M100_dump_routine(PSTR("   Command Queue:"), (const char*)command_queue, (const char*)(command_queue) + sizeof(command_queue));
     #endif
   }
 

commit 23a8707ef1969be3db28251ccee2287e1ea7b9e4
Author: doggyfan <49303635+doggyfan@users.noreply.github.com>
Date:   Tue May 7 00:51:06 2019 +0100

    Configurable Thermistor (#13888)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 45f00b7ddc..44eadfa368 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -589,6 +589,10 @@ void GcodeSuite::process_parsed_command(
         case 303: M303(); break;                                  // M303: PID autotune
       #endif
 
+      #if HAS_USER_THERMISTORS
+        case 305: M305(); break;                                  // M305: Set user thermistor parameters
+      #endif
+
       #if ENABLED(MORGAN_SCARA)
         case 360: if (M360()) return; break;                      // M360: SCARA Theta pos1
         case 361: if (M361()) return; break;                      // M361: SCARA Theta pos2

commit ee243e4edfe45fa855d4ff71abf8a9a118b66369
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Wed May 1 22:55:58 2019 -0400

    Fix mixing extruder filament change (#13803)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5b179dcaf0..45f00b7ddc 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -72,17 +72,32 @@ bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
 int8_t GcodeSuite::get_target_extruder_from_command() {
   if (parser.seenval('T')) {
     const int8_t e = parser.value_byte();
-    if (e >= EXTRUDERS) {
-      SERIAL_ECHO_START();
-      SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
-      SERIAL_ECHOLNPAIR(" " MSG_INVALID_EXTRUDER " ", int(e));
-      return -1;
-    }
-    return e;
+    if (e < EXTRUDERS) return e;
+    SERIAL_ECHO_START();
+    SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
+    SERIAL_ECHOLNPAIR(" " MSG_INVALID_EXTRUDER " ", int(e));
+    return -1;
   }
   return active_extruder;
 }
 
+/**
+ * Get the target e stepper from the T parameter
+ * Return -1 if the T parameter is out of range or unspecified
+ */
+int8_t GcodeSuite::get_target_e_stepper_from_command() {
+  const int8_t e = parser.intval('T', -1);
+  if (WITHIN(e, 0, E_STEPPERS - 1)) return e;
+
+  SERIAL_ECHO_START();
+  SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
+  if (e == -1)
+    SERIAL_ECHOLNPGM(" " MSG_E_STEPPER_NOT_SPECIFIED);
+  else
+    SERIAL_ECHOLNPAIR(" " MSG_INVALID_E_STEPPER " ", int(e));
+  return -1;
+}
+
 /**
  * Set XYZE destination and feedrate from the current GCode command
  *

commit 9dd4252b392dd7b51d4c5abc70f0d497f4f3d1ac
Merge: 5de7b5b35e bdfffee037
Author: Bob-the-Kuhn <bob.kuhn@att.net>
Date:   Fri Apr 12 22:07:12 2019 -0500

    Merge branch 'bugfix-2.0.x' of https://github.com/MarlinFirmware/Marlin into bugfix-2.0.x

diff --combined Marlin/src/gcode/gcode.cpp
index dc40a4a887,546898433a..5b179dcaf0
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@@ -105,7 -105,7 +105,7 @@@ void GcodeSuite::get_destination_from_c
  
    #if ENABLED(POWER_LOSS_RECOVERY)
      // Only update power loss recovery on moves with E
-     if ((seen[E_AXIS] || seen[Z_AXIS]) && IS_SD_PRINTING()) recovery.save();
+     if (seen[E_AXIS] && (seen[X_AXIS] || seen[Y_AXIS]) && IS_SD_PRINTING()) recovery.save();
    #endif
  
    if (parser.linearval('F') > 0)
@@@ -269,6 -269,16 +269,16 @@@ void GcodeSuite::process_parsed_command
            break;
        #endif
  
+       #if ENABLED(CNC_COORDINATE_SYSTEMS)
+         case 53: G53(); break;
+         case 54: G54(); break;
+         case 55: G55(); break;
+         case 56: G56(); break;
+         case 57: G57(); break;
+         case 58: G58(); break;
+         case 59: G59(); break;
+       #endif
 -      
++
        #if ENABLED(GCODE_MOTION_MODES)
          case 80: G80(); break;                                    // G80: Reset the current motion mode
        #endif
@@@ -348,10 -358,6 +358,6 @@@
          case 48: M48(); break;                                    // M48: Z probe repeatability test
        #endif
  
-       #if ENABLED(G26_MESH_VALIDATION)
-         case 49: M49(); break;                                    // M49: Turn on or off G26 debug flag for verbose output
-       #endif
- 
        #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
          case 73: M73(); break;                                    // M73: Set progress percentage (for display on LCD)
        #endif

commit 509dc283f298f5fdc737e58294f599eca519c59a
Author: Jamie <vector76@users.noreply.github.com>
Date:   Thu Apr 11 13:51:05 2019 -0500

    Restore declarations of G53-G59 (#13654)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0837e1d0fa..546898433a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -269,6 +269,16 @@ void GcodeSuite::process_parsed_command(
           break;
       #endif
 
+      #if ENABLED(CNC_COORDINATE_SYSTEMS)
+        case 53: G53(); break;
+        case 54: G54(); break;
+        case 55: G55(); break;
+        case 56: G56(); break;
+        case 57: G57(); break;
+        case 58: G58(); break;
+        case 59: G59(); break;
+      #endif
+      
       #if ENABLED(GCODE_MOTION_MODES)
         case 80: G80(); break;                                    // G80: Reset the current motion mode
       #endif

commit cf12fc8366f2ffbc3811173769d5428236af0dd9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 5 20:02:46 2019 -0500

    Expand on serial debugging (#13577)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c8d8131770..0837e1d0fa 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -348,10 +348,6 @@ void GcodeSuite::process_parsed_command(
         case 48: M48(); break;                                    // M48: Z probe repeatability test
       #endif
 
-      #if ENABLED(G26_MESH_VALIDATION)
-        case 49: M49(); break;                                    // M49: Turn on or off G26 debug flag for verbose output
-      #endif
-
       #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
         case 73: M73(); break;                                    // M73: Set progress percentage (for display on LCD)
       #endif

commit a0a5c31c055419f11775918f4566917bc4f223f1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 1 17:52:45 2019 -0500

    Power-Loss initialization fix (#13553)
    
    - Only save to PLR file on moves with E and X or Y
    - Save to PLR after any long-ish Z downward move

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index dc40a4a887..c8d8131770 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -105,7 +105,7 @@ void GcodeSuite::get_destination_from_command() {
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     // Only update power loss recovery on moves with E
-    if ((seen[E_AXIS] || seen[Z_AXIS]) && IS_SD_PRINTING()) recovery.save();
+    if (seen[E_AXIS] && (seen[X_AXIS] || seen[Y_AXIS]) && IS_SD_PRINTING()) recovery.save();
   #endif
 
   if (parser.linearval('F') > 0)

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3e2a3f5f3d..dc40a4a887 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,7 +117,7 @@ void GcodeSuite::get_destination_from_command() {
   #endif
 
   // Get ABCDHI mixing factors
-  #if ENABLED(MIXING_EXTRUDER) && ENABLED(DIRECT_MIXING_IN_G1)
+  #if BOTH(MIXING_EXTRUDER, DIRECT_MIXING_IN_G1)
     M165();
   #endif
 }
@@ -330,7 +330,7 @@ void GcodeSuite::process_parsed_command(
           case 33: M33(); break;                                  // M33: Get the long full path to a file or folder
         #endif
 
-        #if ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_GCODE)
+        #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
           case 34: M34(); break;                                  // M34: Set SD card sorting options
         #endif
 
@@ -494,7 +494,7 @@ void GcodeSuite::process_parsed_command(
         case 665: M665(); break;                                  // M665: Set delta configurations
       #endif
 
-      #if ENABLED(DELTA) || ENABLED(X_DUAL_ENDSTOPS) || ENABLED(Y_DUAL_ENDSTOPS) || ENABLED(Z_DUAL_ENDSTOPS)
+      #if ANY(DELTA, X_DUAL_ENDSTOPS, Y_DUAL_ENDSTOPS, Z_DUAL_ENDSTOPS)
         case 666: M666(); break;                                  // M666: Set delta or dual endstop adjustment
       #endif
 
@@ -576,7 +576,7 @@ void GcodeSuite::process_parsed_command(
         case 364: if (M364()) return; break;                      // M364: SCARA Psi pos3 (90 deg to Theta)
       #endif
 
-      #if ENABLED(EXT_SOLENOID) || ENABLED(MANUAL_SOLENOID_CONTROL)
+      #if EITHER(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
         case 380: M380(); break;                                  // M380: Activate solenoid on active (or specified) extruder
         case 381: M381(); break;                                  // M381: Disable all solenoids or, if MANUAL_SOLENOID_CONTROL, active (or specified) solenoid
       #endif
@@ -673,7 +673,7 @@ void GcodeSuite::process_parsed_command(
         case 900: M900(); break;                                  // M900: Set advance K factor.
       #endif
 
-      #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
+      #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || EITHER(DIGIPOT_I2C, DAC_STEPPER_CURRENT)
         case 907: M907(); break;                                  // M907: Set digital trimpot motor current using axis codes.
         #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
           case 908: M908(); break;                                // M908: Control digital trimpot directly.

commit 050eac03afb67743131b5537bf7464e3dafbce23
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Mar 13 01:42:50 2019 -0400

    Single X Duplication Extension (#13373)
    
    * Multi-nozzle selective duplication
    * Use a bit-mask, reduce stepper_indirection.h size
    * Tweak the multi-nozzle duplication description
    * Use 'S' as a bool in M605
    * Add HAS_DUPLICATION_MODE conditional
    * Remove '_MODE' from the option name
    * M605 in the style of Stacker M280
    * Also include direct mask style (P)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 01186b626f..3e2a3f5f3d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -650,7 +650,7 @@ void GcodeSuite::process_parsed_command(
         case 603: M603(); break;                                  // M603: Configure Filament Change
       #endif
 
-      #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
+      #if HAS_DUPLICATION_MODE
         case 605: M605(); break;                                  // M605: Set Dual X Carriage movement mode
       #endif
 

commit d94e077901e15557e94f64640adf37e10defb7f2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 11 20:48:49 2019 -0500

    Apply HAS_HOTEND_OFFSET where needed

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 780942e97c..01186b626f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -516,7 +516,7 @@ void GcodeSuite::process_parsed_command(
         case 217: M217(); break;                                  // M217: Set filament swap parameters
       #endif
 
-      #if HOTENDS > 1
+      #if HAS_HOTEND_OFFSET
         case 218: M218(); break;                                  // M218: Set a tool offset
       #endif
 

commit b824a517aaad62001cf815e577b2f383f4766402
Author: Michiel Baird <michielbaird@gmail.com>
Date:   Sun Mar 10 15:22:09 2019 -0700

    Add G38.4 and G38.5 (#13348)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2c9232f1ba..780942e97c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -258,9 +258,14 @@ void GcodeSuite::process_parsed_command(
       #endif
 
       #if ENABLED(G38_PROBE_TARGET)
-        case 38:                                                  // G38.2 & G38.3: Probe towards target
-          if (parser.subcode == 2 || parser.subcode == 3)
-            G38(parser.subcode == 2);
+        case 38:                                                  // G38.2, G38.3: Probe towards target
+          if (WITHIN(parser.subcode, 2,
+            #if ENABLED(G38_PROBE_AWAY)
+              5
+            #else
+              3
+            #endif
+          )) G38(parser.subcode);                                 // G38.4, G38.5: Probe away from target
           break;
       #endif
 

commit 645ca7af7ac27af9d6690659dc71ff9867b34b6c
Author: 3dlabsio <shane@warnertci.com>
Date:   Thu Mar 7 00:09:39 2019 -0800

    M141 Heated Chamber, Temperature rework (#12201)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 91d91df927..2c9232f1ba 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -392,6 +392,11 @@ void GcodeSuite::process_parsed_command(
         case 190: M190(); break;                                  // M190: Wait for bed temperature to reach target
       #endif
 
+      #if HAS_HEATED_CHAMBER
+        case 141: M141(); break;                                  // M141: Set chamber temperature
+        //case 191: M191(); break;                                // M191: Wait for chamber temperature to reach target
+      #endif
+
       case 105: M105(); KEEPALIVE_STATE(NOT_BUSY); return;        // M105: Report Temperatures (and say "ok")
 
       #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR

commit 2e5a3b01fd7e6a5510f0f0251d0a9cc0f63c79fb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Mar 5 01:47:06 2019 -0600

    Save Power Loss Recovery only on move commands

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c9a6995170..91d91df927 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -40,6 +40,11 @@ GcodeSuite gcode;
   #include "../feature/host_actions.h"
 #endif
 
+#if ENABLED(POWER_LOSS_RECOVERY)
+  #include "../sd/cardreader.h"
+  #include "../feature/power_loss_recovery.h"
+#endif
+
 #include "../Marlin.h" // for idle() and suspend_auto_report
 
 millis_t GcodeSuite::previous_move_ms;
@@ -86,8 +91,9 @@ int8_t GcodeSuite::get_target_extruder_from_command() {
  *  - Set the feedrate, if included
  */
 void GcodeSuite::get_destination_from_command() {
+  bool seen[XYZE] = { false, false, false, false };
   LOOP_XYZE(i) {
-    if (parser.seen(axis_codes[i])) {
+    if ( (seen[i] = parser.seenval(axis_codes[i])) ) {
       const float v = parser.value_axis_units((AxisEnum)i);
       destination[i] = (axis_relative_modes[i] || relative_mode)
         ? current_position[i] + v
@@ -97,6 +103,11 @@ void GcodeSuite::get_destination_from_command() {
       destination[i] = current_position[i];
   }
 
+  #if ENABLED(POWER_LOSS_RECOVERY)
+    // Only update power loss recovery on moves with E
+    if ((seen[E_AXIS] || seen[Z_AXIS]) && IS_SD_PRINTING()) recovery.save();
+  #endif
+
   if (parser.linearval('F') > 0)
     feedrate_mm_s = MMM_TO_MMS(parser.value_feedrate());
 

commit b0553d2d970f0d4d36a7bca34ccb7e4c57505575
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Sat Mar 2 02:11:50 2019 +0000

    Add M997 support and simple implementation for LPC176x (#13281)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index edc9fa7a2e..c9a6995170 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -723,6 +723,10 @@ void GcodeSuite::process_parsed_command(
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif
 
+      #if ENABLED(PLATFORM_M997_SUPPORT)
+        case 997: M997(); break;                                  // M997: Perform in-application firmware update
+      #endif
+
       case 999: M999(); break;                                    // M999: Restart after being Stopped
 
       #if ENABLED(POWER_LOSS_RECOVERY)

commit e15354e387cc825390fc4eaaf3ae4b784a8fd588
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 23 22:53:01 2019 -0600

    Simplify serial port redirect (#13234)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0df31176c0..edc9fa7a2e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -754,6 +754,8 @@ void GcodeSuite::process_parsed_command(
 void GcodeSuite::process_next_command() {
   char * const current_command = command_queue[cmd_queue_index_r];
 
+  PORT_REDIRECT(command_queue_port[cmd_queue_index_r]);
+
   if (DEBUGGING(ECHO)) {
     SERIAL_ECHO_START();
     SERIAL_ECHOLN(current_command);

commit 109e67169c75d1b58b761725d1a568ae7f42e638
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Fri Feb 22 14:35:32 2019 -0700

    Define G21 as NOOP w/o INCH_MODE_SUPPORT (#13229)
    
    Ticket #13228
    
    If `INCH_MODE_SUPPORT` is undefined, G20 is an unknown command as it should be (Marlin is, by default, operating in metric mode). G21, however, is found in many slicers and printer start gcode sections and should be accepted (as a NOOP) to avoid the unknown commands.

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4b0a859943..0df31176c0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -206,6 +206,8 @@ void GcodeSuite::process_parsed_command(
       #if ENABLED(INCH_MODE_SUPPORT)
         case 20: G20(); break;                                    // G20: Inch Mode
         case 21: G21(); break;                                    // G21: MM Mode
+      #else
+        case 21: NOOP; break;                                     // No error on unknown G21
       #endif
 
       #if ENABLED(G26_MESH_VALIDATION)

commit ba39186364b69f7399f33b7ddb1115db42c6eabc
Author: LinFor <linfor@gmail.com>
Date:   Wed Feb 20 11:22:42 2019 +0300

    TMC_DEBUG optimization and improvements (#13135)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a5f7bc2775..4b0a859943 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -662,7 +662,7 @@ void GcodeSuite::process_parsed_command(
       #endif
 
       #if HAS_TRINAMIC
-        case 122: M122(); break;
+        case 122: M122(); break;                                  // M122: Report driver configuration and status
         case 906: M906(); break;                                  // M906: Set motor current in milliamps using axis codes X, Y, Z, E
         #if HAS_STEALTHCHOP
           case 569: M569(); break;                                // M569: Enable stealthChop on an axis.

commit 19af90face9ff836a4b6dc24a2af055a3b6146a7
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Feb 19 15:47:31 2019 -0500

    Fix a host action compile error (#13208)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 9efded4db8..a5f7bc2775 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -140,7 +140,7 @@ void GcodeSuite::dwell(millis_t time) {
     }
 
     #if ENABLED(HOST_PROMPT_SUPPORT)
-      if (host_prompt_reason == PROMPT_G29_RETRY) host_action_prompt_end();
+      host_action_prompt_end();
     #endif
 
     #ifdef G29_SUCCESS_COMMANDS

commit d2bdb71c13fa18957638b137395200ba2c28e1b2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 14 15:09:35 2019 -0600

    Add PHOTO_GCODE option, photo trigger physical move (#13168)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 6d4c47f582..9efded4db8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -524,8 +524,8 @@ void GcodeSuite::process_parsed_command(
         case 304: M304(); break;                                  // M304: Set bed PID parameters
       #endif
 
-      #if PIN_EXISTS(CHDK) || HAS_PHOTOGRAPH
-        case 240: M240(); break;                                  // M240: Trigger a camera by emulating a Canon RC-1 : http://www.doc-diy.net/photo/rc-1_hacked/
+      #if ENABLED(PHOTO_GCODE)
+        case 240: M240(); break;                                  // M240: Trigger a camera
       #endif
 
       #if HAS_LCD_CONTRAST

commit 7cf9b93f26f728f0104dc9b930f6b23096639d98
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 20:08:34 2019 -0600

    Add HAS_FILAMENT_SENSOR ahead of 12962

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index fe095b55d5..6d4c47f582 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -576,7 +576,7 @@ void GcodeSuite::process_parsed_command(
         case 407: M407(); break;                                  // M407: Display measured filament diameter
       #endif
 
-      #if ENABLED(FILAMENT_RUNOUT_SENSOR)
+      #if HAS_FILAMENT_SENSOR
         case 412: M412(); break;                                  // M412: Enable/Disable filament runout detection
       #endif
 

commit 7f1b69b0c83ae914ed9ae35fdad9f79814069652
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Feb 12 16:55:47 2019 -0500

    Add HOST_PROMPT_SUPPORT (#13039)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 829749804c..fe095b55d5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -36,6 +36,10 @@ GcodeSuite gcode;
   #include "../module/printcounter.h"
 #endif
 
+#if ENABLED(HOST_PROMPT_SUPPORT)
+  #include "../feature/host_actions.h"
+#endif
+
 #include "../Marlin.h" // for idle() and suspend_auto_report
 
 millis_t GcodeSuite::previous_move_ms;
@@ -128,27 +132,17 @@ void GcodeSuite::dwell(millis_t time) {
   void GcodeSuite::G29_with_retry() {
     uint8_t retries = G29_MAX_RETRIES;
     while (G29()) { // G29 should return true for failed probes ONLY
-      if (retries--) {
-        #ifdef G29_ACTION_ON_RECOVER
-          host_action(PSTR(G29_ACTION_ON_RECOVER));
-        #endif
-        #ifdef G29_RECOVER_COMMANDS
-          process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
-        #endif
-      }
+      if (retries--) event_probe_recover();
       else {
-        #ifdef G29_FAILURE_COMMANDS
-          process_subcommands_now_P(PSTR(G29_FAILURE_COMMANDS));
-        #endif
-        #ifdef G29_ACTION_ON_FAILURE
-          host_action(PSTR(G29_ACTION_ON_FAILURE));
-        #endif
-        #if ENABLED(G29_HALT_ON_FAILURE)
-          kill(PSTR(MSG_ERR_PROBING_FAILED));
-        #endif
+        event_probe_failure();
         return;
       }
     }
+
+    #if ENABLED(HOST_PROMPT_SUPPORT)
+      if (host_prompt_reason == PROMPT_G29_RETRY) host_action_prompt_end();
+    #endif
+
     #ifdef G29_SUCCESS_COMMANDS
       process_subcommands_now_P(PSTR(G29_SUCCESS_COMMANDS));
     #endif
@@ -365,8 +359,15 @@ void GcodeSuite::process_parsed_command(
         case 108: M108(); break;                                  // M108: Cancel Waiting
         case 112: M112(); break;                                  // M112: Emergency Stop
         case 410: M410(); break;                                  // M410: Quickstop - Abort all the planned moves.
+        #if ENABLED(HOST_PROMPT_SUPPORT)
+          case 876: M876(); break;                                  // M876: Handle Host prompt responses
+        #endif
       #else
-        case 108: case 112: case 410: break;
+        case 108: case 112: case 410:
+        #if ENABLED(HOST_PROMPT_SUPPORT)
+          case 876:
+        #endif
+        break;
       #endif
 
       #if ENABLED(HOST_KEEPALIVE_FEATURE)

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2fdd42aa52..829749804c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 6de3d3437849c0710881311bc9ad4069b0aee55d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 10 04:54:23 2019 -0600

    M166 Gradients, LCD Menu for 2-channel Mixer (Geeetech A10M/A20M) (#13022)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5dc5a9a0d7..2fdd42aa52 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -443,6 +443,9 @@ void GcodeSuite::process_parsed_command(
         #if ENABLED(DIRECT_MIXING_IN_G1)
           case 165: M165(); break;                                // M165: Set multiple mix weights
         #endif
+        #if ENABLED(GRADIENT_MIX)
+          case 166: M166(); break;                                // M166: Set Gradient Mix
+        #endif
       #endif
 
       #if DISABLED(NO_VOLUMETRICS)

commit e1604198ffa550f1eed2b8f5d39d51fdc0c2762f
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Feb 6 16:20:17 2019 -0700

    G425 ‚Äî Auto-calibrate Backlash and Nozzle Offsets (#13050)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 39b257bc0d..5dc5a9a0d7 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -270,6 +270,10 @@ void GcodeSuite::process_parsed_command(
         case 42: G42(); break;                                    // G42: Coordinated move to a mesh point
       #endif
 
+      #if ENABLED(CALIBRATION_GCODE)
+        case 425: G425(); break;                                  // G425: Perform calibration with calibration cube
+      #endif
+
       #if ENABLED(DEBUG_GCODE_PARSER)
         case 800: parser.debug(); break;                          // G800: GCode Parser Test for G
       #endif

commit 19cf72e057c65a92ad12a18cd6926d0fd260641a
Author: Mark Zachmann <MZachmann@users.noreply.github.com>
Date:   Wed Feb 6 07:34:53 2019 -0500

    Support individual solenoid disable with M381 (#13008)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2ca8e08c28..39b257bc0d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -547,7 +547,7 @@ void GcodeSuite::process_parsed_command(
 
       #if ENABLED(EXT_SOLENOID) || ENABLED(MANUAL_SOLENOID_CONTROL)
         case 380: M380(); break;                                  // M380: Activate solenoid on active (or specified) extruder
-        case 381: M381(); break;                                  // M381: Disable all solenoids
+        case 381: M381(); break;                                  // M381: Disable all solenoids or, if MANUAL_SOLENOID_CONTROL, active (or specified) solenoid
       #endif
 
       case 400: M400(); break;                                    // M400: Finish all moves

commit 524c6c10bf52b9956ca2f68eb3d3074e5cba0706
Author: Rolf Werum <39219447+Weruminger@users.noreply.github.com>
Date:   Wed Feb 6 13:30:53 2019 +0100

    MAGNETIC_PARKING_EXTRUDER (#12351)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 34d35c4c75..2ca8e08c28 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -705,6 +705,10 @@ void GcodeSuite::process_parsed_command(
         case 869: M869(); break;                                  // M869: Report axis error
       #endif
 
+      #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
+        case 951: M951(); break;                                  // M951: Set Magnetic Parking Extruder parameters
+      #endif
+
       #if ENABLED(Z_STEPPER_AUTO_ALIGN)
         case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
       #endif

commit 6a57d0b381db99d67cccd48135cbdd2d831588a7
Author: revilor <oliver.rossmueller@web.de>
Date:   Fri Feb 1 02:10:52 2019 +0100

    Prusa MMU2 (#12967)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7e43693491..34d35c4c75 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -557,6 +557,10 @@ void GcodeSuite::process_parsed_command(
         case 402: M402(); break;                                  // M402: Stow probe
       #endif
 
+      #if ENABLED(PRUSA_MMU2)
+        case 403: M403(); break;
+      #endif
+
       #if ENABLED(FILAMENT_WIDTH_SENSOR)
         case 404: M404(); break;                                  // M404: Enter the nominal filament width (3mm, 1.75mm ) N<3.0> or display nominal filament width
         case 405: M405(); break;                                  // M405: Turn on filament sensor for control

commit 48a3502656b29439ae7172d24259353dc3183dd9
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Jan 27 23:43:13 2019 -0500

    Remote streamer improvements (#12982)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 45ebbe381d..7e43693491 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -130,7 +130,7 @@ void GcodeSuite::dwell(millis_t time) {
     while (G29()) { // G29 should return true for failed probes ONLY
       if (retries--) {
         #ifdef G29_ACTION_ON_RECOVER
-          SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_RECOVER);
+          host_action(PSTR(G29_ACTION_ON_RECOVER));
         #endif
         #ifdef G29_RECOVER_COMMANDS
           process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
@@ -141,7 +141,7 @@ void GcodeSuite::dwell(millis_t time) {
           process_subcommands_now_P(PSTR(G29_FAILURE_COMMANDS));
         #endif
         #ifdef G29_ACTION_ON_FAILURE
-          SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_FAILURE);
+          host_action(PSTR(G29_ACTION_ON_FAILURE));
         #endif
         #if ENABLED(G29_HALT_ON_FAILURE)
           kill(PSTR(MSG_ERR_PROBING_FAILED));

commit 2f35747f294c4b3dc3e6920b34e208f89bd4841d
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Jan 23 19:06:54 2019 -0600

    L6470 SPI daisy chain support (#12895)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 900d6d0075..45ebbe381d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -667,6 +667,14 @@ void GcodeSuite::process_parsed_command(
         #endif
       #endif
 
+      #if HAS_DRIVER(L6470)
+        case 122: M122(); break;                                   // M122: Report status
+        case 906: M906(); break;                                   // M906: Set or get motor drive level
+        case 916: M916(); break;                                   // M916: L6470 tuning: Increase drive level until thermal warning
+        case 917: M917(); break;                                   // M917: L6470 tuning: Find minimum current thresholds
+        case 918: M918(); break;                                   // M918: L6470 tuning: Increase speed until max or error
+      #endif
+
       #if HAS_MICROSTEPS
         case 350: M350(); break;                                  // M350: Set microstepping mode. Warning: Steps per unit remains unchanged. S code sets stepping mode for all drivers.
         case 351: M351(); break;                                  // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.

commit a1cf49935ded121d5db26175f706a01dda9d6feb
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Jan 21 00:41:47 2019 -0500

    Add laser control menu (#12883)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a25fc55c03..900d6d0075 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -285,8 +285,8 @@ void GcodeSuite::process_parsed_command(
       #endif
 
       #if ENABLED(SPINDLE_LASER_ENABLE)
-        case 3: M3_M4(true ); break;                              // M3: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CW
-        case 4: M3_M4(false); break;                              // M4: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CCW
+        case 3: M3_M4(false); break;                              // M3: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CW
+        case 4: M3_M4(true ); break;                              // M4: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CCW
         case 5: M5(); break;                                      // M5 - turn spindle/laser off
       #endif
 

commit e6805582a67b106691423a35ab580bd6b0895949
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Thu Jan 17 21:17:16 2019 +0200

    M569 to change stepping mode. Add new TMC section to LCD. (#12884)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4d4d9b77d7..a25fc55c03 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -652,6 +652,9 @@ void GcodeSuite::process_parsed_command(
       #if HAS_TRINAMIC
         case 122: M122(); break;
         case 906: M906(); break;                                  // M906: Set motor current in milliamps using axis codes X, Y, Z, E
+        #if HAS_STEALTHCHOP
+          case 569: M569(); break;                                // M569: Enable stealthChop on an axis.
+        #endif
         #if ENABLED(MONITOR_DRIVER_STATUS)
           case 911: M911(); break;                                // M911: Report TMC2130 prewarn triggered flags
           case 912: M912(); break;                                // M912: Clear TMC2130 prewarn triggered flags

commit 85f149befeebde5e67e9d0241d2708c30a356640
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Jan 15 03:56:30 2019 +0100

    Save some progmem (#12913)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 9833f2d12a..4d4d9b77d7 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -669,7 +669,9 @@ void GcodeSuite::process_parsed_command(
         case 351: M351(); break;                                  // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.
       #endif
 
-      case 355: M355(); break;                                    // M355: Set case light brightness
+      #if HAS_CASE_LIGHT
+        case 355: M355(); break;                                  // M355: Set case light brightness
+      #endif
 
       #if ENABLED(DEBUG_GCODE_PARSER)
         case 800: parser.debug(); break;                          // M800: GCode Parser Test for M

commit 1a79878dff2d4846b1f58a45b8880a346fb9cb41
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Sat Jan 12 00:56:23 2019 +0200

    Remove TMC_Z_CALIBRATION in favor of Z_STEPPER_AUTO_ALIGN

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f8ad8864ab..9833f2d12a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -662,9 +662,6 @@ void GcodeSuite::process_parsed_command(
         #if USE_SENSORLESS
           case 914: M914(); break;                                // M914: Set StallGuard sensitivity.
         #endif
-        #if ENABLED(TMC_Z_CALIBRATION)
-          case 915: M915(); break;                                // M915: TMC Z axis calibration.
-        #endif
       #endif
 
       #if HAS_MICROSTEPS

commit 709a6356f78ecec41d079823f2ad230cb1ddcead
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sat Jan 5 21:02:45 2019 +0100

    Remove obsolete test conditions (#12829)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3b60486721..f8ad8864ab 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -336,7 +336,7 @@ void GcodeSuite::process_parsed_command(
         case 49: M49(); break;                                    // M49: Turn on or off G26 debug flag for verbose output
       #endif
 
-      #if ENABLED(LCD_SET_PROGRESS_MANUALLY) && (ENABLED(ULTRA_LCD) || ENABLED(EXTENSIBLE_UI))
+      #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
         case 73: M73(); break;                                    // M73: Set progress percentage (for display on LCD)
       #endif
 

commit 902d5b0f8ba2f46f30fa063b7d2ab8b6193339cc
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Dec 12 16:21:37 2018 -0700

    Allow ExtUI to use LCD_SET_PROGRESS_MANUALLY (#12628)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 973d8713ea..3b60486721 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -336,7 +336,7 @@ void GcodeSuite::process_parsed_command(
         case 49: M49(); break;                                    // M49: Turn on or off G26 debug flag for verbose output
       #endif
 
-      #if ENABLED(ULTRA_LCD) && ENABLED(LCD_SET_PROGRESS_MANUALLY)
+      #if ENABLED(LCD_SET_PROGRESS_MANUALLY) && (ENABLED(ULTRA_LCD) || ENABLED(EXTENSIBLE_UI))
         case 73: M73(); break;                                    // M73: Set progress percentage (for display on LCD)
       #endif
 

commit 55144284c2578dccca7a6a5fa472a3d927ff09f2
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Mon Dec 10 04:54:48 2018 +0200

    TMC connection test, spreadCycle parameters, improved debugging (#12616)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5f7e4b1f0a..973d8713ea 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -650,9 +650,7 @@ void GcodeSuite::process_parsed_command(
       #endif
 
       #if HAS_TRINAMIC
-        #if ENABLED(TMC_DEBUG)
-          case 122: M122(); break;
-        #endif
+        case 122: M122(); break;
         case 906: M906(); break;                                  // M906: Set motor current in milliamps using axis codes X, Y, Z, E
         #if ENABLED(MONITOR_DRIVER_STATUS)
           case 911: M911(); break;                                // M911: Report TMC2130 prewarn triggered flags

commit b22716e938397d8beb64f5855b64f6fdb375b5d2
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Sat Dec 8 13:36:46 2018 -0700

    M425 Backlash Correction (#11061)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8aea242a46..5f7e4b1f0a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -576,6 +576,10 @@ void GcodeSuite::process_parsed_command(
         case 421: M421(); break;                                  // M421: Set a Mesh Bed Leveling Z coordinate
       #endif
 
+      #if ENABLED(BACKLASH_GCODE)
+        case 425: M425(); break;                                  // M425: Tune backlash compensation
+      #endif
+
       #if HAS_M206_COMMAND
         case 428: M428(); break;                                  // M428: Apply current_position to home_offset
       #endif

commit c98623983774b9773800bc7dcef695c4bad81c0e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 29 16:58:58 2018 -0600

    A single SERIAL_ECHO macro type (#12557)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e1e3f10658..8aea242a46 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -790,16 +790,13 @@ void GcodeSuite::process_next_command() {
       switch (busy_state) {
         case IN_HANDLER:
         case IN_PROCESS:
-          SERIAL_ECHO_START();
-          SERIAL_ECHOLNPGM(MSG_BUSY_PROCESSING);
+          SERIAL_ECHO_MSG(MSG_BUSY_PROCESSING);
           break;
         case PAUSED_FOR_USER:
-          SERIAL_ECHO_START();
-          SERIAL_ECHOLNPGM(MSG_BUSY_PAUSED_FOR_USER);
+          SERIAL_ECHO_MSG(MSG_BUSY_PAUSED_FOR_USER);
           break;
         case PAUSED_FOR_INPUT:
-          SERIAL_ECHO_START();
-          SERIAL_ECHOLNPGM(MSG_BUSY_PAUSED_FOR_INPUT);
+          SERIAL_ECHO_MSG(MSG_BUSY_PAUSED_FOR_INPUT);
           break;
         default:
           break;

commit d97e31db4c2b8b27ab1c6fbbe05f11aa9d5e94e2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 16 20:47:07 2018 -0600

    Optimize Power-Loss Recovery (#12440)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0124d7b049..e1e3f10658 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -695,6 +695,11 @@ void GcodeSuite::process_parsed_command(
 
       case 999: M999(); break;                                    // M999: Restart after being Stopped
 
+      #if ENABLED(POWER_LOSS_RECOVERY)
+        case 413: M413(); break;                                  // M413: Enable/disable/query Power-Loss Recovery
+        case 1000: M1000(); break;                                // M1000: Resume from power-loss
+      #endif
+
       default: parser.unknown_command_error(); break;
     }
     break;

commit 7a075a5dc99b8769061b197854af70aefccbdae8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Nov 16 01:29:06 2018 -0600

    Tweak extruder errors

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bdb65a4a74..0124d7b049 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -65,9 +65,8 @@ int8_t GcodeSuite::get_target_extruder_from_command() {
     const int8_t e = parser.value_byte();
     if (e >= EXTRUDERS) {
       SERIAL_ECHO_START();
-      SERIAL_CHAR('M');
-      SERIAL_ECHO(parser.codenum);
-      SERIAL_ECHOLNPAIR(" " MSG_INVALID_EXTRUDER " ", e);
+      SERIAL_CHAR('M'); SERIAL_ECHO(parser.codenum);
+      SERIAL_ECHOLNPAIR(" " MSG_INVALID_EXTRUDER " ", int(e));
       return -1;
     }
     return e;

commit d2bb53702a5b8bc03d6691230f252a21ca3ee375
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 14 17:33:04 2018 -0600

    Optimize target_extruder, ignore T with mixing (#12432)
    
    * Optimize target_extruder, ignore T with mixing
    * Give G-code Tn parity with tool_change

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e6bec1f854..bdb65a4a74 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -38,7 +38,6 @@ GcodeSuite gcode;
 
 #include "../Marlin.h" // for idle() and suspend_auto_report
 
-uint8_t GcodeSuite::target_extruder;
 millis_t GcodeSuite::previous_move_ms;
 
 bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
@@ -58,11 +57,10 @@ bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
 #endif
 
 /**
- * Set target_extruder from the T parameter or the active_extruder
- *
- * Returns TRUE if the target is invalid
+ * Get the target extruder from the T parameter or the active_extruder
+ * Return -1 if the T parameter is out of range
  */
-bool GcodeSuite::get_target_extruder_from_command() {
+int8_t GcodeSuite::get_target_extruder_from_command() {
   if (parser.seenval('T')) {
     const int8_t e = parser.value_byte();
     if (e >= EXTRUDERS) {
@@ -70,14 +68,11 @@ bool GcodeSuite::get_target_extruder_from_command() {
       SERIAL_CHAR('M');
       SERIAL_ECHO(parser.codenum);
       SERIAL_ECHOLNPAIR(" " MSG_INVALID_EXTRUDER " ", e);
-      return true;
+      return -1;
     }
-    target_extruder = e;
+    return e;
   }
-  else
-    target_extruder = active_extruder;
-
-  return false;
+  return active_extruder;
 }
 
 /**
@@ -539,7 +534,9 @@ void GcodeSuite::process_parsed_command(
         case 302: M302(); break;                                  // M302: Allow cold extrudes (set the minimum extrude temperature)
       #endif
 
-      case 303: M303(); break;                                    // M303: PID autotune
+      #if HAS_PID_HEATING
+        case 303: M303(); break;                                  // M303: PID autotune
+      #endif
 
       #if ENABLED(MORGAN_SCARA)
         case 360: if (M360()) return; break;                      // M360: SCARA Theta pos1

commit 143b2896e0693442f642e2dc5e3fd2f05c2019c8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Nov 12 21:29:46 2018 -0600

    Add M412 to enable/disable filament runout detection (#12406)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1281f4519e..e6bec1f854 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -568,6 +568,10 @@ void GcodeSuite::process_parsed_command(
         case 407: M407(); break;                                  // M407: Display measured filament diameter
       #endif
 
+      #if ENABLED(FILAMENT_RUNOUT_SENSOR)
+        case 412: M412(); break;                                  // M412: Enable/Disable filament runout detection
+      #endif
+
       #if HAS_LEVELING
         case 420: M420(); break;                                  // M420: Enable/Disable Bed Leveling
       #endif

commit b60abc7c378e47959fb11f890d49ee7e90588d3d
Author: revilor <oliver.rossmueller@web.de>
Date:   Fri Nov 9 12:25:08 2018 +0100

    [2.0.x] Macro G-codes (#9365)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0d26e86689..1281f4519e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -624,6 +624,12 @@ void GcodeSuite::process_parsed_command(
         case 7219: M7219(); break;                                // M7219: Set LEDs, columns, and rows
       #endif
 
+      #if ENABLED(GCODE_MACROS)
+        case 810: case 811: case 812: case 813: case 814:
+        case 815: case 816: case 817: case 818: case 819:
+        M810_819(); break;                                        // M810-M819: Define/execute G-code macro
+      #endif
+
       #if ENABLED(LIN_ADVANCE)
         case 900: M900(); break;                                  // M900: Set advance K factor.
       #endif

commit 4dbaa6369fa457c3338408b60d25f82636494110
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Tue Nov 6 18:49:39 2018 -0700

    Fix const pointer assignment compile error (#12350)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 9502c7b6a2..0d26e86689 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -753,7 +753,7 @@ void GcodeSuite::process_next_command() {
   void GcodeSuite::process_subcommands_now(char * gcode) {
     char * const saved_cmd = parser.command_ptr;        // Save the parser state
     for (;;) {
-      const char * const delim = strchr(gcode, '\n');   // Get address of next newline
+      char * const delim = strchr(gcode, '\n');         // Get address of next newline
       if (delim) *delim = '\0';                         // Replace with nul
       parser.parse(gcode);                              // Parse the current command
       process_parsed_command(true);                     // Process it

commit 498dfa291e3e75a9c47fdc2e9fcfe3b0fdea5bc7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Nov 5 01:08:40 2018 -0600

    Update and fix CHDK

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c80e55b2ff..9502c7b6a2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -522,7 +522,7 @@ void GcodeSuite::process_parsed_command(
         case 304: M304(); break;                                  // M304: Set bed PID parameters
       #endif
 
-      #if defined(CHDK) || HAS_PHOTOGRAPH
+      #if PIN_EXISTS(CHDK) || HAS_PHOTOGRAPH
         case 240: M240(); break;                                  // M240: Trigger a camera by emulating a Canon RC-1 : http://www.doc-diy.net/photo/rc-1_hacked/
       #endif
 

commit d1ff22b9830bbb94efea52f4233b2f11ad0a0c4a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 3 03:56:33 2018 -0500

    Revive SCARA's home offset (unimplemented)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 66457666fd..c80e55b2ff 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -483,7 +483,9 @@ void GcodeSuite::process_parsed_command(
         #endif
       #endif
 
-      case 211: M211(); break;                                    // M211: Enable, Disable, and/or Report software endstops
+      #if HAS_SOFTWARE_ENDSTOPS
+        case 211: M211(); break;                                  // M211: Enable, Disable, and/or Report software endstops
+      #endif
 
       #if EXTRUDERS > 1
         case 217: M217(); break;                                  // M217: Set filament swap parameters

commit 31c28d0dd243331adba3debb4801fbd03f7f6ec2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 2 00:42:16 2018 -0500

    Drop pgm_read_*_near and let headers choose (#12301)
    
    - Drop `pgm_read_*_near` and let headers choose.
    - Define `USE_EXECUTE_COMMANDS_IMMEDIATE` as a conditional.
    - Add `process_subcommands_now` for SRAM-based commands.

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 83f0367910..66457666fd 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -173,7 +173,7 @@ void GcodeSuite::dwell(millis_t time) {
  * Process the parsed command and dispatch it to its handler
  */
 void GcodeSuite::process_parsed_command(
-  #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+  #if USE_EXECUTE_COMMANDS_IMMEDIATE
     const bool no_ok
   #endif
 ) {
@@ -698,7 +698,7 @@ void GcodeSuite::process_parsed_command(
 
   KEEPALIVE_STATE(NOT_BUSY);
 
-  #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+  #if USE_EXECUTE_COMMANDS_IMMEDIATE
     if (!no_ok)
   #endif
       ok_to_send();
@@ -725,35 +725,43 @@ void GcodeSuite::process_next_command() {
   process_parsed_command();
 }
 
-#if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+#if USE_EXECUTE_COMMANDS_IMMEDIATE
+
   /**
    * Run a series of commands, bypassing the command queue to allow
    * G-code "macros" to be called from within other G-code handlers.
    */
+
   void GcodeSuite::process_subcommands_now_P(PGM_P pgcode) {
-    // Save the parser state
-    char * const saved_cmd = parser.command_ptr;
-
-    // Process individual commands in string
-    while (pgm_read_byte_near(pgcode)) {
-      // Break up string at '\n' delimiters
-      PGM_P const delim = strchr_P(pgcode, '\n');
-      size_t len = delim ? delim - pgcode : strlen_P(pgcode);
-      char cmd[len + 1];
-      strncpy_P(cmd, pgcode, len);
-      cmd[len] = '\0';
-      pgcode += len;
-      if (delim) pgcode++;
-
-      // Parse the next command in the string
-      parser.parse(cmd);
-      process_parsed_command(true);
+    char * const saved_cmd = parser.command_ptr;        // Save the parser state
+    for (;;) {
+      PGM_P const delim = strchr_P(pgcode, '\n');       // Get address of next newline
+      const size_t len = delim ? delim - pgcode : strlen_P(pgcode); // Get the command length
+      char cmd[len + 1];                                // Allocate a stack buffer
+      strncpy_P(cmd, pgcode, len);                      // Copy the command to the stack
+      cmd[len] = '\0';                                  // End with a nul
+      parser.parse(cmd);                                // Parse the command
+      process_parsed_command(true);                     // Process it
+      if (!delim) break;                                // Last command?
+      pgcode = delim + 1;                               // Get the next command
     }
+    parser.parse(saved_cmd);                            // Restore the parser state
+  }
 
-    // Restore the parser state
-    parser.parse(saved_cmd);
+  void GcodeSuite::process_subcommands_now(char * gcode) {
+    char * const saved_cmd = parser.command_ptr;        // Save the parser state
+    for (;;) {
+      const char * const delim = strchr(gcode, '\n');   // Get address of next newline
+      if (delim) *delim = '\0';                         // Replace with nul
+      parser.parse(gcode);                              // Parse the current command
+      process_parsed_command(true);                     // Process it
+      if (!delim) break;                                // Last command?
+      gcode = delim + 1;                                // Get the next command
+    }
+    parser.parse(saved_cmd);                            // Restore the parser state
   }
-#endif
+
+#endif // USE_EXECUTE_COMMANDS_IMMEDIATE
 
 #if ENABLED(HOST_KEEPALIVE_FEATURE)
 

commit 3583e2b4490e8fd6778d18003641c2fdd333e8a5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Oct 30 16:34:45 2018 -0500

    Followup to Menu Refactor (#12275)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 593ae26cc9..83f0367910 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -427,7 +427,7 @@ void GcodeSuite::process_parsed_command(
       case 120: M120(); break;                                    // M120: Enable endstops
       case 121: M121(); break;                                    // M121: Disable endstops
 
-      #if ENABLED(ULTIPANEL)
+      #if HAS_LCD_MENU
         case 145: M145(); break;                                  // M145: Set material heatup parameters
       #endif
 

commit 553622835911b520c6ba43bc03e71868f3972cb3
Author: TheLongAndOnly <github@mueller-gelff.de>
Date:   Mon Oct 29 20:01:36 2018 +0100

    G34 Auto-align multi-stepper Z axis (#11302)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d2426bc46f..593ae26cc9 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -252,8 +252,12 @@ void GcodeSuite::process_parsed_command(
         case 33: G33(); break;                                    // G33: Delta Auto-Calibration
       #endif
 
+      #if ENABLED(Z_STEPPER_AUTO_ALIGN)
+        case 34: G34(); break;                                    // G34: Z Stepper automatic alignment using probe
+      #endif
+
       #if ENABLED(G38_PROBE_TARGET)
-        case 38:                                                  // G38.2 & G38.3
+        case 38:                                                  // G38.2 & G38.3: Probe towards target
           if (parser.subcode == 2 || parser.subcode == 3)
             G38(parser.subcode == 2);
           break;
@@ -677,6 +681,10 @@ void GcodeSuite::process_parsed_command(
         case 869: M869(); break;                                  // M869: Report axis error
       #endif
 
+      #if ENABLED(Z_STEPPER_AUTO_ALIGN)
+        case 422: M422(); break;                                  // M422: Set Z Stepper automatic alignment position using probe
+      #endif
+
       case 999: M999(); break;                                    // M999: Restart after being Stopped
 
       default: parser.unknown_command_error(); break;

commit a07ac6312f29b3f500c49c32b50374d57e0a3986
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Thu Oct 25 17:35:16 2018 +0200

    G0 feedrate may be fixed or variable (#12172)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 905a65f114..d2426bc46f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -184,7 +184,7 @@ void GcodeSuite::process_parsed_command(
     case 'G': switch (parser.codenum) {
 
       case 0: case 1: G0_G1(                                      // G0: Fast Move, G1: Linear Move
-                        #if IS_SCARA || ENABLED(G0_FEEDRATE)
+                        #if IS_SCARA || defined(G0_FEEDRATE)
                           parser.codenum == 0
                         #endif
                       );

commit b381cad39994fbae79351d1e87368cb98fbe1a8d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 19 15:27:07 2018 -0500

    Clean up trailing whitespace

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 17d7d51dd3..905a65f114 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -587,7 +587,7 @@ void GcodeSuite::process_parsed_command(
       #if ENABLED(SDSUPPORT)
         case 524: M524(); break;                                   // M524: Abort the current SD print job
       #endif
-      
+
       #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
         case 540: M540(); break;                                  // M540: Set abort on endstop hit for SD printing
       #endif

commit 1fb9b299d4d96276ff1fb6cd2ee5e73e753e2b23
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Fri Oct 19 21:25:07 2018 +0200

    Add M524 to abort SD printing (#12155)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4de056de7a..17d7d51dd3 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -584,6 +584,10 @@ void GcodeSuite::process_parsed_command(
         case 504: M504(); break;                                  // M504: Validate EEPROM contents
       #endif
 
+      #if ENABLED(SDSUPPORT)
+        case 524: M524(); break;                                   // M524: Abort the current SD print job
+      #endif
+      
       #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
         case 540: M540(); break;                                  // M540: Set abort on endstop hit for SD printing
       #endif

commit 3ec38727305862c881f268e2fc27f8188b5bc767
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Oct 17 12:11:41 2018 -0400

    Single Z raise value for all tool-changing / parking (#12090)
    
    * Universal tool-change Z lift
    * Add TOOLCHANGE_ZRAISE to example configs
    * Park/unpark changes to example configs
    * Implement DEBUG_DXC_MODE

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0185676821..4de056de7a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -481,7 +481,7 @@ void GcodeSuite::process_parsed_command(
 
       case 211: M211(); break;                                    // M211: Enable, Disable, and/or Report software endstops
 
-      #if ENABLED(SINGLENOZZLE)
+      #if EXTRUDERS > 1
         case 217: M217(); break;                                  // M217: Set filament swap parameters
       #endif
 

commit f56968ba0b8d4eaccbc9b0c7834cf0cd2f5872d8
Author: AnHardt <github@kitelab.de>
Date:   Tue Oct 16 10:38:57 2018 +0200

    New Continuous Filament Mixer (#12098)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 868a103436..0185676821 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -36,10 +36,6 @@ GcodeSuite gcode;
   #include "../module/printcounter.h"
 #endif
 
-#if ENABLED(DIRECT_MIXING_IN_G1)
-  #include "../feature/mixing.h"
-#endif
-
 #include "../Marlin.h" // for idle() and suspend_auto_report
 
 uint8_t GcodeSuite::target_extruder;
@@ -113,7 +109,7 @@ void GcodeSuite::get_destination_from_command() {
 
   // Get ABCDHI mixing factors
   #if ENABLED(MIXING_EXTRUDER) && ENABLED(DIRECT_MIXING_IN_G1)
-    gcode_get_mix();
+    M165();
   #endif
 }
 
@@ -441,9 +437,7 @@ void GcodeSuite::process_parsed_command(
 
       #if ENABLED(MIXING_EXTRUDER)
         case 163: M163(); break;                                  // M163: Set a component weight for mixing extruder
-        #if MIXING_VIRTUAL_TOOLS > 1
-          case 164: M164(); break;                                // M164: Save current mix as a virtual extruder
-        #endif
+        case 164: M164(); break;                                  // M164: Save current mix as a virtual extruder
         #if ENABLED(DIRECT_MIXING_IN_G1)
           case 165: M165(); break;                                // M165: Set multiple mix weights
         #endif

commit af939c158ac8e774fbdbbfba6908a02a9e26e745
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Tue Oct 16 08:49:51 2018 +0200

    Option for G0 to have a separate feedrate (#12089)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f5db858552..868a103436 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -188,7 +188,7 @@ void GcodeSuite::process_parsed_command(
     case 'G': switch (parser.codenum) {
 
       case 0: case 1: G0_G1(                                      // G0: Fast Move, G1: Linear Move
-                        #if IS_SCARA
+                        #if IS_SCARA || ENABLED(G0_FEEDRATE)
                           parser.codenum == 0
                         #endif
                       );

commit f2ecf8d5107e17508b55c2e9108c0f7395c7bb49
Author: Sam Lane <9569766+SJ-Innovation@users.noreply.github.com>
Date:   Sun Oct 7 23:07:12 2018 +0100

    Add option to control Solenoids under PARKING_EXTRUDER (#12028)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 39953a2461..f5db858552 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -549,8 +549,8 @@ void GcodeSuite::process_parsed_command(
         case 364: if (M364()) return; break;                      // M364: SCARA Psi pos3 (90 deg to Theta)
       #endif
 
-      #if ENABLED(EXT_SOLENOID)
-        case 380: M380(); break;                                  // M380: Activate solenoid on active extruder
+      #if ENABLED(EXT_SOLENOID) || ENABLED(MANUAL_SOLENOID_CONTROL)
+        case 380: M380(); break;                                  // M380: Activate solenoid on active (or specified) extruder
         case 381: M381(); break;                                  // M381: Disable all solenoids
       #endif
 

commit 74cd6cb4fc90e4c483e7a97a313c0257790f1375
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Oct 7 18:06:14 2018 -0400

    Single nozzle filament change (#11994)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 36a01c1f7f..39953a2461 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -487,6 +487,10 @@ void GcodeSuite::process_parsed_command(
 
       case 211: M211(); break;                                    // M211: Enable, Disable, and/or Report software endstops
 
+      #if ENABLED(SINGLENOZZLE)
+        case 217: M217(); break;                                  // M217: Set filament swap parameters
+      #endif
+
       #if HOTENDS > 1
         case 218: M218(); break;                                  // M218: Set a tool offset
       #endif

commit 52a37913c16ab50a0c35e34a4c597bd1428edc7e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 5 18:19:45 2018 -0500

    Extend and apply some corrections

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7e1a7f80cf..36a01c1f7f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -263,6 +263,10 @@ void GcodeSuite::process_parsed_command(
           break;
       #endif
 
+      #if ENABLED(GCODE_MOTION_MODES)
+        case 80: G80(); break;                                    // G80: Reset the current motion mode
+      #endif
+
       case 90: relative_mode = false; break;                      // G90: Relative Mode
       case 91: relative_mode = true; break;                       // G91: Absolute Mode
 

commit 3e58b3a5d49e985dace724493f5d8831092d5c54
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 3 02:55:10 2018 -0500

    Followup to #11943

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f71b5ab3c7..7e1a7f80cf 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -633,8 +633,8 @@ void GcodeSuite::process_parsed_command(
         #endif
         case 906: M906(); break;                                  // M906: Set motor current in milliamps using axis codes X, Y, Z, E
         #if ENABLED(MONITOR_DRIVER_STATUS)
-          case 911: M911(); break;                                  // M911: Report TMC2130 prewarn triggered flags
-          case 912: M912(); break;                                  // M912: Clear TMC2130 prewarn triggered flags
+          case 911: M911(); break;                                // M911: Report TMC2130 prewarn triggered flags
+          case 912: M912(); break;                                // M912: Clear TMC2130 prewarn triggered flags
         #endif
         #if ENABLED(HYBRID_THRESHOLD)
           case 913: M913(); break;                                // M913: Set HYBRID_THRESHOLD speed.

commit c3229e1b3461b6da8373e7a24a7eeb131912a15b
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Wed Oct 3 10:48:49 2018 +0300

    Migrate to a new TMC library (#11943)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7f1b63d4ed..f71b5ab3c7 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -632,8 +632,10 @@ void GcodeSuite::process_parsed_command(
           case 122: M122(); break;
         #endif
         case 906: M906(); break;                                  // M906: Set motor current in milliamps using axis codes X, Y, Z, E
-        case 911: M911(); break;                                  // M911: Report TMC2130 prewarn triggered flags
-        case 912: M912(); break;                                  // M912: Clear TMC2130 prewarn triggered flags
+        #if ENABLED(MONITOR_DRIVER_STATUS)
+          case 911: M911(); break;                                  // M911: Report TMC2130 prewarn triggered flags
+          case 912: M912(); break;                                  // M912: Clear TMC2130 prewarn triggered flags
+        #endif
         #if ENABLED(HYBRID_THRESHOLD)
           case 913: M913(); break;                                // M913: Set HYBRID_THRESHOLD speed.
         #endif

commit 11ac75edcb34a2f90b50ca134ff40839f8c29199
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 30 23:44:33 2018 -0500

    Use PGM_P for PSTR pointers (#11977)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 040a0df63c..7f1b63d4ed 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -170,7 +170,7 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 #if ENABLED(M100_FREE_MEMORY_WATCHER)
-  extern void M100_dump_routine(const char * const title, const char *start, const char *end);
+  extern void M100_dump_routine(PGM_P const title, const char *start, const char *end);
 #endif
 
 /**
@@ -700,7 +700,7 @@ void GcodeSuite::process_next_command() {
     SERIAL_ECHOLN(current_command);
     #if ENABLED(M100_FREE_MEMORY_WATCHER)
       SERIAL_ECHOPAIR("slot:", cmd_queue_index_r);
-      M100_dump_routine("   Command Queue:", (const char*)command_queue, (const char*)(command_queue + sizeof(command_queue)));
+      M100_dump_routine(PSTR("   Command Queue:"), (const char*)command_queue, (const char*)(command_queue + sizeof(command_queue)));
     #endif
   }
 
@@ -714,14 +714,14 @@ void GcodeSuite::process_next_command() {
    * Run a series of commands, bypassing the command queue to allow
    * G-code "macros" to be called from within other G-code handlers.
    */
-  void GcodeSuite::process_subcommands_now_P(const char *pgcode) {
+  void GcodeSuite::process_subcommands_now_P(PGM_P pgcode) {
     // Save the parser state
     char * const saved_cmd = parser.command_ptr;
 
     // Process individual commands in string
     while (pgm_read_byte_near(pgcode)) {
       // Break up string at '\n' delimiters
-      const char *delim = strchr_P(pgcode, '\n');
+      PGM_P const delim = strchr_P(pgcode, '\n');
       size_t len = delim ? delim - pgcode : strlen_P(pgcode);
       char cmd[len + 1];
       strncpy_P(cmd, pgcode, len);

commit 3286325044a7788f12ceb3f3d6cef00dc8b32433
Author: Thomas Moore <tcm0116@gmail.com>
Date:   Sun Sep 9 15:59:12 2018 -0400

    Add TMC2130 sensorless probing

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 09786f81aa..040a0df63c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -637,8 +637,8 @@ void GcodeSuite::process_parsed_command(
         #if ENABLED(HYBRID_THRESHOLD)
           case 913: M913(); break;                                // M913: Set HYBRID_THRESHOLD speed.
         #endif
-        #if ENABLED(SENSORLESS_HOMING)
-          case 914: M914(); break;                                // M914: Set SENSORLESS_HOMING sensitivity.
+        #if USE_SENSORLESS
+          case 914: M914(); break;                                // M914: Set StallGuard sensitivity.
         #endif
         #if ENABLED(TMC_Z_CALIBRATION)
           case 915: M915(); break;                                // M915: TMC Z axis calibration.

commit 93839e2f73c78fd2448c15c5ffefef62fd53fe6b
Author: Victor Tseng <palatis@gmail.com>
Date:   Sat Sep 29 05:52:56 2018 +0800

    Add option to enable/disable autoretract altogether (#11904)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 063f32999f..09786f81aa 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -474,9 +474,11 @@ void GcodeSuite::process_parsed_command(
       #if ENABLED(FWRETRACT)
         case 207: M207(); break;                                  // M207: Set Retract Length, Feedrate, and Z lift
         case 208: M208(); break;                                  // M208: Set Recover (unretract) Additional Length and Feedrate
-        case 209:
-          if (MIN_AUTORETRACT <= MAX_AUTORETRACT) M209();         // M209: Turn Automatic Retract Detection on/off
-          break;
+        #if ENABLED(FWRETRACT_AUTORETRACT)
+          case 209:
+            if (MIN_AUTORETRACT <= MAX_AUTORETRACT) M209();       // M209: Turn Automatic Retract Detection on/off
+            break;
+        #endif
       #endif
 
       case 211: M211(); break;                                    // M211: Enable, Disable, and/or Report software endstops

commit 1b6bc194279b24e24df29bdd677a112236deac34
Author: Sam Lane <sl01172@surrey.ac.uk>
Date:   Sat Sep 8 18:08:31 2018 +0100

    Add external closed loop controller support

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 6682cfbeb9..063f32999f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -292,6 +292,10 @@ void GcodeSuite::process_parsed_command(
         case 5: M5(); break;                                      // M5 - turn spindle/laser off
       #endif
 
+      #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
+        case 12: M12(); break;                                    // M12: Synchronize and optionally force a CLC set
+      #endif
+
       case 17: M17(); break;                                      // M17: Enable all stepper motors
 
       #if ENABLED(SDSUPPORT)

commit 3e81745e81fea173599b06ac9db7ed776e986808
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Aug 24 21:53:42 2018 -0500

    Fix issues, make optional

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index cfe98c8fad..6682cfbeb9 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -487,7 +487,9 @@ void GcodeSuite::process_parsed_command(
 
       #if HAS_SERVOS
         case 280: M280(); break;                                  // M280: Set servo position absolute
-        case 281: M281(); break;
+        #if ENABLED(EDITABLE_SERVO_ANGLES)
+          case 281: M281(); break;                                // M281: Set servo angles
+        #endif
       #endif
 
       #if ENABLED(BABYSTEPPING)

commit aa80e448e24a27ac0006de4e3d3e93b18c73e3e0
Author: Jan <janschon@uni-bremen.de>
Date:   Tue Aug 7 17:04:46 2018 +0200

    Store servo angles in EEPROM

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ef282add0a..cfe98c8fad 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -487,6 +487,7 @@ void GcodeSuite::process_parsed_command(
 
       #if HAS_SERVOS
         case 280: M280(); break;                                  // M280: Set servo position absolute
+        case 281: M281(); break;
       #endif
 
       #if ENABLED(BABYSTEPPING)

commit 2a2e8c314e25a92a212b0a578fb765da2bf55258
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Aug 29 00:58:32 2018 -0500

    Suppress emergency parser G-code errors
    
    Co-Authored-By: srieche <srieche@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4708e4cfe9..ef282add0a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -359,6 +359,8 @@ void GcodeSuite::process_parsed_command(
         case 108: M108(); break;                                  // M108: Cancel Waiting
         case 112: M112(); break;                                  // M112: Emergency Stop
         case 410: M410(); break;                                  // M410: Quickstop - Abort all the planned moves.
+      #else
+        case 108: case 112: case 410: break;
       #endif
 
       #if ENABLED(HOST_KEEPALIVE_FEATURE)

commit e05e95cf9721262d241fe313e9a4f15a779c18d9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jul 25 18:49:32 2018 -0500

    Clean trailing whitespace

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c067d8e1e6..4708e4cfe9 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -134,7 +134,7 @@ void GcodeSuite::dwell(millis_t time) {
   #ifndef G29_MAX_RETRIES
     #define G29_MAX_RETRIES 0
   #endif
-   
+
   void GcodeSuite::G29_with_retry() {
     uint8_t retries = G29_MAX_RETRIES;
     while (G29()) { // G29 should return true for failed probes ONLY
@@ -144,7 +144,7 @@ void GcodeSuite::dwell(millis_t time) {
         #endif
         #ifdef G29_RECOVER_COMMANDS
           process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
-        #endif   
+        #endif
       }
       else {
         #ifdef G29_FAILURE_COMMANDS

commit 1367df2875b4aff41e9c98824e3f7b56f4403e4d
Author: etagle <ejtagle@hotmail.com>
Date:   Sun Jul 1 17:20:28 2018 -0300

    Replace double with float, optimize calculation

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 36848b48f2..c067d8e1e6 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -103,7 +103,7 @@ void GcodeSuite::get_destination_from_command() {
       destination[i] = current_position[i];
   }
 
-  if (parser.linearval('F') > 0.0)
+  if (parser.linearval('F') > 0)
     feedrate_mm_s = MMM_TO_MMS(parser.value_feedrate());
 
   #if ENABLED(PRINTCOUNTER)

commit 0fff79c24b1fbf890c9d5b25172a6f0a6274ad34
Author: Colin Gilgenbach <colin@gilgenbach.net>
Date:   Fri Jun 29 19:48:11 2018 -0600

    Fixes G29_with_retry behavior (#11045)
    
    * Fix G29 (ABL) retry behavior

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7ece602705..36848b48f2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -61,11 +61,6 @@ bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
   float GcodeSuite::coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
 #endif
 
-#if HAS_LEVELING && ENABLED(G29_RETRY_AND_RECOVER)
-  #include "../feature/bedlevel/bedlevel.h"
-  #include "../module/planner.h"
-#endif
-
 /**
  * Set target_extruder from the T parameter or the active_extruder
  *
@@ -136,34 +131,37 @@ void GcodeSuite::dwell(millis_t time) {
  */
 #if HAS_LEVELING && ENABLED(G29_RETRY_AND_RECOVER)
 
+  #ifndef G29_MAX_RETRIES
+    #define G29_MAX_RETRIES 0
+  #endif
+   
   void GcodeSuite::G29_with_retry() {
-    set_bed_leveling_enabled(false);
-    for (uint8_t retries_left = G29_MAX_RETRIES;;) {
-      G29();
-      if (planner.leveling_active || !retries_left--) break;
-      #ifdef G29_ACTION_ON_RECOVER
-        SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_RECOVER);
-      #endif
-      #ifdef G29_RECOVER_COMMANDS
-        process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
-      #endif
-    }
-    if (planner.leveling_active) {
-      #ifdef G29_SUCCESS_COMMANDS
-        process_subcommands_now_P(PSTR(G29_SUCCESS_COMMANDS));
-      #endif
-    }
-    else {
-      #ifdef G29_FAILURE_COMMANDS
-        process_subcommands_now_P(PSTR(G29_FAILURE_COMMANDS));
-      #endif
-      #ifdef G29_ACTION_ON_FAILURE
-        SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_FAILURE);
-      #endif
-      #if ENABLED(G29_HALT_ON_FAILURE)
-        kill(PSTR(MSG_ERR_PROBING_FAILED));
-      #endif
+    uint8_t retries = G29_MAX_RETRIES;
+    while (G29()) { // G29 should return true for failed probes ONLY
+      if (retries--) {
+        #ifdef G29_ACTION_ON_RECOVER
+          SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_RECOVER);
+        #endif
+        #ifdef G29_RECOVER_COMMANDS
+          process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
+        #endif   
+      }
+      else {
+        #ifdef G29_FAILURE_COMMANDS
+          process_subcommands_now_P(PSTR(G29_FAILURE_COMMANDS));
+        #endif
+        #ifdef G29_ACTION_ON_FAILURE
+          SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_FAILURE);
+        #endif
+        #if ENABLED(G29_HALT_ON_FAILURE)
+          kill(PSTR(MSG_ERR_PROBING_FAILED));
+        #endif
+        return;
+      }
     }
+    #ifdef G29_SUCCESS_COMMANDS
+      process_subcommands_now_P(PSTR(G29_SUCCESS_COMMANDS));
+    #endif
   }
 
 #endif // HAS_LEVELING && G29_RETRY_AND_RECOVER

commit a264030526b5d8c029084a410b465c9bce783f64
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jun 29 16:38:24 2018 -0500

    Fix "G29" G29_MAX_RETRIES handling

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7e8d33a38f..7ece602705 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -138,9 +138,9 @@ void GcodeSuite::dwell(millis_t time) {
 
   void GcodeSuite::G29_with_retry() {
     set_bed_leveling_enabled(false);
-    for (uint8_t i = G29_MAX_RETRIES; i--;) {
+    for (uint8_t retries_left = G29_MAX_RETRIES;;) {
       G29();
-      if (planner.leveling_active) break;
+      if (planner.leveling_active || !retries_left--) break;
       #ifdef G29_ACTION_ON_RECOVER
         SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_RECOVER);
       #endif

commit e366d55bc2ea9471397c1f414128de5e8171e660
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 19 21:48:28 2018 -0500

    Don't reset stepper timeout for all g-codes

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 377612dc59..7e8d33a38f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -695,8 +695,6 @@ void GcodeSuite::process_next_command() {
     #endif
   }
 
-  reset_stepper_timeout(); // Keep steppers powered
-
   // Parse the next command in the queue
   parser.parse(current_command);
   process_parsed_command();

commit d4795e5b8eff93fcab4a80d16cd7bc5ceb2ebc51
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jun 18 22:04:03 2018 -0500

    [2.0.x] Tweaks and additions for MAX7219 (#11034)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index cd393f4e4d..377612dc59 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -599,6 +599,10 @@ void GcodeSuite::process_parsed_command(
         case 702: M702(); break;                                  // M702: Unload Filament
       #endif
 
+      #if ENABLED(MAX7219_GCODE)
+        case 7219: M7219(); break;                                // M7219: Set LEDs, columns, and rows
+      #endif
+
       #if ENABLED(LIN_ADVANCE)
         case 900: M900(); break;                                  // M900: Set advance K factor.
       #endif

commit 724e9f56c800af038e607ee1d3e4185fa9f62eef
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Fri Apr 27 16:48:52 2018 -0600

    Removed "const" to match parser. (#10548)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3a24f62479..cd393f4e4d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -705,7 +705,7 @@ void GcodeSuite::process_next_command() {
    */
   void GcodeSuite::process_subcommands_now_P(const char *pgcode) {
     // Save the parser state
-    const char * const saved_cmd = parser.command_ptr;
+    char * const saved_cmd = parser.command_ptr;
 
     // Process individual commands in string
     while (pgm_read_byte_near(pgcode)) {

commit 2e1939e85c7f4a796b58456abe189765addd8b7d
Author: Giuliano <3684609+GMagician@users.noreply.github.com>
Date:   Sat Apr 28 00:40:27 2018 +0200

    [2.0.x] report error on unsupported commands (#10553)
    
    Raise an error when an unknown/unsupported G/M command is requires.
    
    This will address #10546

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 4416425270..3a24f62479 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -277,6 +277,8 @@ void GcodeSuite::process_parsed_command(
       #if ENABLED(DEBUG_GCODE_PARSER)
         case 800: parser.debug(); break;                          // G800: GCode Parser Test for G
       #endif
+
+      default: parser.unknown_command_error(); break;
     }
     break;
 
@@ -655,6 +657,8 @@ void GcodeSuite::process_parsed_command(
       #endif
 
       case 999: M999(); break;                                    // M999: Restart after being Stopped
+
+      default: parser.unknown_command_error(); break;
     }
     break;
 

commit 63e0b36f8b9c9257c93a630bb5b0ace1b21d3e90
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Apr 27 01:24:45 2018 -0500

    Fix G29_RECOVER_COMMANDS typo

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5c84db13de..4416425270 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -144,7 +144,7 @@ void GcodeSuite::dwell(millis_t time) {
       #ifdef G29_ACTION_ON_RECOVER
         SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_RECOVER);
       #endif
-      #ifdef G29_RECOVERY_COMMANDS
+      #ifdef G29_RECOVER_COMMANDS
         process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
       #endif
     }

commit 02a711c4d661da6814be050a6acb66174c9b3e96
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Tue Apr 24 12:44:22 2018 -0600

    [2.0.x] Fix crash upon repeated calls to process_subcommands_now_P (#10509)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index b9ded9863a..5c84db13de 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -701,8 +701,7 @@ void GcodeSuite::process_next_command() {
    */
   void GcodeSuite::process_subcommands_now_P(const char *pgcode) {
     // Save the parser state
-    char saved_cmd[strlen(parser.command_ptr) + 1];
-    strcpy(saved_cmd, parser.command_ptr);
+    const char * const saved_cmd = parser.command_ptr;
 
     // Process individual commands in string
     while (pgm_read_byte_near(pgcode)) {

commit cb46cb8480c33ffc9f6361b96ed200986a3bd9ac
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 23 17:13:01 2018 -0500

    Add HAS_HEATED_BED conditional (#10495)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 88c9555c5b..b9ded9863a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -365,7 +365,7 @@ void GcodeSuite::process_parsed_command(
         case 113: M113(); break;                                  // M113: Set Host Keepalive interval
       #endif
 
-      #if HAS_HEATER_BED && HAS_TEMP_BED
+      #if HAS_HEATED_BED
         case 140: M140(); break;                                  // M140: Set bed temperature
         case 190: M190(); break;                                  // M190: Wait for bed temperature to reach target
       #endif

commit 5cc7916e699a711bee82f0fbe342b7ebd80b6b37
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Apr 18 15:56:10 2018 -0600

    Add G29_RETRY_AND_RECOVER feature
    
    - Add an option to retry G29, optionally executing a G-code procedure after each failed probe.

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 20b93af186..88c9555c5b 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -61,6 +61,11 @@ bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
   float GcodeSuite::coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
 #endif
 
+#if HAS_LEVELING && ENABLED(G29_RETRY_AND_RECOVER)
+  #include "../feature/bedlevel/bedlevel.h"
+  #include "../module/planner.h"
+#endif
+
 /**
  * Set target_extruder from the T parameter or the active_extruder
  *
@@ -125,6 +130,44 @@ void GcodeSuite::dwell(millis_t time) {
   while (PENDING(millis(), time)) idle();
 }
 
+/**
+ * When G29_RETRY_AND_RECOVER is enabled, call G29() in
+ * a loop with recovery and retry handling.
+ */
+#if HAS_LEVELING && ENABLED(G29_RETRY_AND_RECOVER)
+
+  void GcodeSuite::G29_with_retry() {
+    set_bed_leveling_enabled(false);
+    for (uint8_t i = G29_MAX_RETRIES; i--;) {
+      G29();
+      if (planner.leveling_active) break;
+      #ifdef G29_ACTION_ON_RECOVER
+        SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_RECOVER);
+      #endif
+      #ifdef G29_RECOVERY_COMMANDS
+        process_subcommands_now_P(PSTR(G29_RECOVER_COMMANDS));
+      #endif
+    }
+    if (planner.leveling_active) {
+      #ifdef G29_SUCCESS_COMMANDS
+        process_subcommands_now_P(PSTR(G29_SUCCESS_COMMANDS));
+      #endif
+    }
+    else {
+      #ifdef G29_FAILURE_COMMANDS
+        process_subcommands_now_P(PSTR(G29_FAILURE_COMMANDS));
+      #endif
+      #ifdef G29_ACTION_ON_FAILURE
+        SERIAL_ECHOLNPGM("//action:" G29_ACTION_ON_FAILURE);
+      #endif
+      #if ENABLED(G29_HALT_ON_FAILURE)
+        kill(PSTR(MSG_ERR_PROBING_FAILED));
+      #endif
+    }
+  }
+
+#endif // HAS_LEVELING && G29_RETRY_AND_RECOVER
+
 //
 // Placeholders for non-migrated codes
 //
@@ -135,7 +178,11 @@ void GcodeSuite::dwell(millis_t time) {
 /**
  * Process the parsed command and dispatch it to its handler
  */
-void GcodeSuite::process_parsed_command() {
+void GcodeSuite::process_parsed_command(
+  #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+    const bool no_ok
+  #endif
+) {
   KEEPALIVE_STATE(IN_HANDLER);
 
   // Handle a known G, M, or T
@@ -190,8 +237,14 @@ void GcodeSuite::process_parsed_command() {
       case 28: G28(false); break;                                 // G28: Home all axes, one at a time
 
       #if HAS_LEVELING
-        case 29: G29(); break;                                    // G29: Bed leveling calibration
-      #endif
+        case 29:                                                  // G29: Bed leveling calibration
+          #if ENABLED(G29_RETRY_AND_RECOVER)
+            G29_with_retry();
+          #else
+            G29();
+          #endif
+          break;
+      #endif // HAS_LEVELING
 
       #if HAS_BED_PROBE
         case 30: G30(); break;                                    // G30: Single Z probe
@@ -612,7 +665,10 @@ void GcodeSuite::process_parsed_command() {
 
   KEEPALIVE_STATE(NOT_BUSY);
 
-  ok_to_send();
+  #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+    if (!no_ok)
+  #endif
+      ok_to_send();
 }
 
 /**
@@ -638,6 +694,37 @@ void GcodeSuite::process_next_command() {
   process_parsed_command();
 }
 
+#if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+  /**
+   * Run a series of commands, bypassing the command queue to allow
+   * G-code "macros" to be called from within other G-code handlers.
+   */
+  void GcodeSuite::process_subcommands_now_P(const char *pgcode) {
+    // Save the parser state
+    char saved_cmd[strlen(parser.command_ptr) + 1];
+    strcpy(saved_cmd, parser.command_ptr);
+
+    // Process individual commands in string
+    while (pgm_read_byte_near(pgcode)) {
+      // Break up string at '\n' delimiters
+      const char *delim = strchr_P(pgcode, '\n');
+      size_t len = delim ? delim - pgcode : strlen_P(pgcode);
+      char cmd[len + 1];
+      strncpy_P(cmd, pgcode, len);
+      cmd[len] = '\0';
+      pgcode += len;
+      if (delim) pgcode++;
+
+      // Parse the next command in the string
+      parser.parse(cmd);
+      process_parsed_command(true);
+    }
+
+    // Restore the parser state
+    parser.parse(saved_cmd);
+  }
+#endif
+
 #if ENABLED(HOST_KEEPALIVE_FEATURE)
 
   /**

commit 3c5c6d478adfae0afcdcb1d66ba9f00c5115bfa1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Apr 13 00:08:28 2018 -0500

    Prettify process_parsed_command

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a218baf864..20b93af186 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -142,520 +142,419 @@ void GcodeSuite::process_parsed_command() {
   switch (parser.command_letter) {
     case 'G': switch (parser.codenum) {
 
-      // G0, G1
-      case 0:
-      case 1:
-        #if IS_SCARA
-          G0_G1(parser.codenum == 0);
-        #else
-          G0_G1();
-        #endif
-        break;
+      case 0: case 1: G0_G1(                                      // G0: Fast Move, G1: Linear Move
+                        #if IS_SCARA
+                          parser.codenum == 0
+                        #endif
+                      );
+                      break;
 
-      // G2, G3
       #if ENABLED(ARC_SUPPORT) && DISABLED(SCARA)
-        case 2: // G2: CW ARC
-        case 3: // G3: CCW ARC
-          G2_G3(parser.codenum == 2);
-          break;
+        case 2: case 3: G2_G3(parser.codenum == 2); break;        // G2: CW ARC, G3: CCW ARC
       #endif
 
-      // G4 Dwell
-      case 4:
-        G4();
-        break;
+      case 4: G4(); break;                                        // G4: Dwell
 
       #if ENABLED(BEZIER_CURVE_SUPPORT)
-        case 5: // G5: Cubic B_spline
-          G5();
-          break;
-      #endif // BEZIER_CURVE_SUPPORT
+        case 5: G5(); break;                                      // G5: Cubic B_spline
+      #endif
 
       #if ENABLED(FWRETRACT)
-        case 10: // G10: retract
-          G10();
-          break;
-        case 11: // G11: retract_recover
-          G11();
-          break;
-      #endif // FWRETRACT
+        case 10: G10(); break;                                    // G10: Retract / Swap Retract
+        case 11: G11(); break;                                    // G11: Recover / Swap Recover
+      #endif
 
       #if ENABLED(NOZZLE_CLEAN_FEATURE)
-        case 12:
-          G12(); // G12: Nozzle Clean
-          break;
-      #endif // NOZZLE_CLEAN_FEATURE
+        case 12: G12(); break;                                    // G12: Nozzle Clean
+      #endif
 
       #if ENABLED(CNC_WORKSPACE_PLANES)
-        case 17: // G17: Select Plane XY
-          G17();
-          break;
-        case 18: // G18: Select Plane ZX
-          G18();
-          break;
-        case 19: // G19: Select Plane YZ
-          G19();
-          break;
-      #endif // CNC_WORKSPACE_PLANES
+        case 17: G17(); break;                                    // G17: Select Plane XY
+        case 18: G18(); break;                                    // G18: Select Plane ZX
+        case 19: G19(); break;                                    // G19: Select Plane YZ
+      #endif
 
       #if ENABLED(INCH_MODE_SUPPORT)
-        case 20: // G20: Inch Mode
-          G20();
-          break;
-
-        case 21: // G21: MM Mode
-          G21();
-          break;
-      #endif // INCH_MODE_SUPPORT
+        case 20: G20(); break;                                    // G20: Inch Mode
+        case 21: G21(); break;                                    // G21: MM Mode
+      #endif
 
       #if ENABLED(G26_MESH_VALIDATION)
-        case 26: // G26: Mesh Validation Pattern generation
-          G26();
-          break;
-      #endif // AUTO_BED_LEVELING_UBL
+        case 26: G26(); break;                                    // G26: Mesh Validation Pattern generation
+      #endif
 
       #if ENABLED(NOZZLE_PARK_FEATURE)
-        case 27: // G27: Nozzle Park
-          G27();
-          break;
-      #endif // NOZZLE_PARK_FEATURE
+        case 27: G27(); break;                                    // G27: Nozzle Park
+      #endif
 
-      case 28: // G28: Home all axes, one at a time
-        G28(false);
-        break;
+      case 28: G28(false); break;                                 // G28: Home all axes, one at a time
 
       #if HAS_LEVELING
-        case 29: // G29 Detailed Z probe, probes the bed at 3 or more points,
-                 // or provides access to the UBL System if enabled.
-          G29();
-          break;
-      #endif // HAS_LEVELING
+        case 29: G29(); break;                                    // G29: Bed leveling calibration
+      #endif
 
       #if HAS_BED_PROBE
-
-        case 30: // G30 Single Z probe
-          G30();
-          break;
-
+        case 30: G30(); break;                                    // G30: Single Z probe
         #if ENABLED(Z_PROBE_SLED)
-
-            case 31: // G31: dock the sled
-              G31();
-              break;
-
-            case 32: // G32: undock the sled
-              G32();
-              break;
-
-        #endif // Z_PROBE_SLED
-
-      #endif // HAS_BED_PROBE
+          case 31: G31(); break;                                  // G31: dock the sled
+          case 32: G32(); break;                                  // G32: undock the sled
+        #endif
+      #endif
 
       #if ENABLED(DELTA_AUTO_CALIBRATION)
-        case 33: // G33: Delta Auto-Calibration
-          G33();
-          break;
-      #endif // DELTA_AUTO_CALIBRATION
+        case 33: G33(); break;                                    // G33: Delta Auto-Calibration
+      #endif
 
       #if ENABLED(G38_PROBE_TARGET)
-        case 38: // G38.2 & G38.3
+        case 38:                                                  // G38.2 & G38.3
           if (parser.subcode == 2 || parser.subcode == 3)
             G38(parser.subcode == 2);
           break;
       #endif
 
-      case 90: // G90
-        relative_mode = false;
-        break;
-      case 91: // G91
-        relative_mode = true;
-        break;
+      case 90: relative_mode = false; break;                      // G90: Relative Mode
+      case 91: relative_mode = true; break;                       // G91: Absolute Mode
 
-      case 92: // G92 - Set current axis position(s)
-        G92();
-        break;
+      case 92: G92(); break;                                      // G92: Set current axis position(s)
 
       #if HAS_MESH
-        case 42: G42(); break;        // G42: Coordinated move to a mesh point
+        case 42: G42(); break;                                    // G42: Coordinated move to a mesh point
       #endif
 
       #if ENABLED(DEBUG_GCODE_PARSER)
-        case 800:
-          parser.debug(); // GCode Parser Test for G
-          break;
+        case 800: parser.debug(); break;                          // G800: GCode Parser Test for G
       #endif
     }
     break;
 
     case 'M': switch (parser.codenum) {
       #if HAS_RESUME_CONTINUE
-        case 0: // M0: Unconditional stop - Wait for user button press on LCD
-        case 1: // M1: Conditional stop - Wait for user button press on LCD
-          M0_M1();
-          break;
-      #endif // ULTIPANEL
+        case 0:                                                   // M0: Unconditional stop - Wait for user button press on LCD
+        case 1: M0_M1(); break;                                   // M1: Conditional stop - Wait for user button press on LCD
+      #endif
 
       #if ENABLED(SPINDLE_LASER_ENABLE)
-        // These synchronize with movement commands...
-        case 3: M3_M4(true ); break;  // M3: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CW
-        case 4: M3_M4(false); break;  // M4: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CCW
-        case 5: M5(); break;          // M5 - turn spindle/laser off
+        case 3: M3_M4(true ); break;                              // M3: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CW
+        case 4: M3_M4(false); break;                              // M4: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CCW
+        case 5: M5(); break;                                      // M5 - turn spindle/laser off
       #endif
 
-      case 17: // M17: Enable all stepper motors
-        M17();
-        break;
+      case 17: M17(); break;                                      // M17: Enable all stepper motors
 
       #if ENABLED(SDSUPPORT)
-        case 20: M20(); break;    // M20: list SD card
-        case 21: M21(); break;    // M21: init SD card
-        case 22: M22(); break;    // M22: release SD card
-        case 23: M23(); break;    // M23: Select file
-        case 24: M24(); break;    // M24: Start SD print
-        case 25: M25(); break;    // M25: Pause SD print
-        case 26: M26(); break;    // M26: Set SD index
-        case 27: M27(); break;    // M27: Get SD status
-        case 28: M28(); break;    // M28: Start SD write
-        case 29: M29(); break;    // M29: Stop SD write
-        case 30: M30(); break;    // M30 <filename> Delete File
-        case 32: M32(); break;    // M32: Select file and start SD print
+        case 20: M20(); break;                                    // M20: list SD card
+        case 21: M21(); break;                                    // M21: init SD card
+        case 22: M22(); break;                                    // M22: release SD card
+        case 23: M23(); break;                                    // M23: Select file
+        case 24: M24(); break;                                    // M24: Start SD print
+        case 25: M25(); break;                                    // M25: Pause SD print
+        case 26: M26(); break;                                    // M26: Set SD index
+        case 27: M27(); break;                                    // M27: Get SD status
+        case 28: M28(); break;                                    // M28: Start SD write
+        case 29: M29(); break;                                    // M29: Stop SD write
+        case 30: M30(); break;                                    // M30 <filename> Delete File
+        case 32: M32(); break;                                    // M32: Select file and start SD print
 
         #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
-          case 33: M33(); break;  // M33: Get the long full path to a file or folder
+          case 33: M33(); break;                                  // M33: Get the long full path to a file or folder
         #endif
 
         #if ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_GCODE)
-          case 34: M34(); break;  // M34: Set SD card sorting options
+          case 34: M34(); break;                                  // M34: Set SD card sorting options
         #endif
 
-        case 928: M928(); break;  // M928: Start SD write
+        case 928: M928(); break;                                  // M928: Start SD write
       #endif // SDSUPPORT
 
-      case 31: M31(); break;      // M31: Report time since the start of SD print or last M109
-
-      case 42: M42(); break;      // M42: Change pin state
+      case 31: M31(); break;                                      // M31: Report time since the start of SD print or last M109
+      case 42: M42(); break;                                      // M42: Change pin state
 
       #if ENABLED(PINS_DEBUGGING)
-        case 43: M43(); break;    // M43: Read pin state
+        case 43: M43(); break;                                    // M43: Read pin state
       #endif
 
       #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
-        case 48: M48(); break;    // M48: Z probe repeatability test
+        case 48: M48(); break;                                    // M48: Z probe repeatability test
       #endif
 
       #if ENABLED(G26_MESH_VALIDATION)
-        case 49: M49(); break;    // M49: Turn on or off G26 debug flag for verbose output
+        case 49: M49(); break;                                    // M49: Turn on or off G26 debug flag for verbose output
       #endif
 
       #if ENABLED(ULTRA_LCD) && ENABLED(LCD_SET_PROGRESS_MANUALLY)
-        case 73: M73(); break;    // M73: Set progress percentage (for display on LCD)
+        case 73: M73(); break;                                    // M73: Set progress percentage (for display on LCD)
       #endif
 
-      case 75: M75(); break;      // M75: Start print timer
-      case 76: M76(); break;      // M76: Pause print timer
-      case 77: M77(); break;      // M77: Stop print timer
+      case 75: M75(); break;                                      // M75: Start print timer
+      case 76: M76(); break;                                      // M76: Pause print timer
+      case 77: M77(); break;                                      // M77: Stop print timer
 
       #if ENABLED(PRINTCOUNTER)
-        case 78: M78(); break;    // M78: Show print statistics
+        case 78: M78(); break;                                    // M78: Show print statistics
       #endif
 
       #if ENABLED(M100_FREE_MEMORY_WATCHER)
-        case 100: M100(); break;  // M100: Free Memory Report
+        case 100: M100(); break;                                  // M100: Free Memory Report
       #endif
 
-      case 104: M104(); break;    // M104: Set hot end temperature
-      case 109: M109(); break;    // M109: Wait for hotend temperature to reach target
-
-      case 110: M110(); break;    // M110: Set Current Line Number
-
-      case 111: M111(); break;    // M111: Set debug level
+      case 104: M104(); break;                                    // M104: Set hot end temperature
+      case 109: M109(); break;                                    // M109: Wait for hotend temperature to reach target
+      case 110: M110(); break;                                    // M110: Set Current Line Number
+      case 111: M111(); break;                                    // M111: Set debug level
 
       #if DISABLED(EMERGENCY_PARSER)
-        case 108: M108(); break;  // M108: Cancel Waiting
-        case 112: M112(); break;  // M112: Emergency Stop
-        case 410: M410(); break;  // M410: Quickstop - Abort all the planned moves.
+        case 108: M108(); break;                                  // M108: Cancel Waiting
+        case 112: M112(); break;                                  // M112: Emergency Stop
+        case 410: M410(); break;                                  // M410: Quickstop - Abort all the planned moves.
       #endif
 
       #if ENABLED(HOST_KEEPALIVE_FEATURE)
-        case 113: M113(); break; // M113: Set Host Keepalive interval
+        case 113: M113(); break;                                  // M113: Set Host Keepalive interval
       #endif
 
       #if HAS_HEATER_BED && HAS_TEMP_BED
-        case 140: M140(); break;  // M140: Set bed temperature
-        case 190: M190(); break;  // M190: Wait for bed temperature to reach target
+        case 140: M140(); break;                                  // M140: Set bed temperature
+        case 190: M190(); break;                                  // M190: Wait for bed temperature to reach target
       #endif
 
-      case 105: // M105: Report current temperature
-        M105();
-        KEEPALIVE_STATE(NOT_BUSY);
-        return; // "ok" already printed
+      case 105: M105(); KEEPALIVE_STATE(NOT_BUSY); return;        // M105: Report Temperatures (and say "ok")
 
       #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
-        case 155: M155(); break;  // M155: Set temperature auto-report interval
+        case 155: M155(); break;                                  // M155: Set temperature auto-report interval
       #endif
 
       #if FAN_COUNT > 0
-        case 106: M106(); break;  // M106: Fan On
-        case 107: M107(); break;  // M107: Fan Off
+        case 106: M106(); break;                                  // M106: Fan On
+        case 107: M107(); break;                                  // M107: Fan Off
       #endif
 
       #if ENABLED(PARK_HEAD_ON_PAUSE)
-        case 125: M125(); break;  // M125: Store current position and move to filament change position
+        case 125: M125(); break;                                  // M125: Store current position and move to filament change position
       #endif
 
       #if ENABLED(BARICUDA)
         // PWM for HEATER_1_PIN
         #if HAS_HEATER_1
-          case 126: M126(); break;  // M126: valve open
-          case 127: M127(); break;  // M127: valve closed
+          case 126: M126(); break;                                // M126: valve open
+          case 127: M127(); break;                                // M127: valve closed
         #endif
 
         // PWM for HEATER_2_PIN
         #if HAS_HEATER_2
-          case 128: M128(); break;  // M128: valve open
-          case 129: M129(); break;  // M129: valve closed
+          case 128: M128(); break;                                // M128: valve open
+          case 129: M129(); break;                                // M129: valve closed
         #endif
       #endif // BARICUDA
 
       #if HAS_POWER_SWITCH
-        case 80: M80(); break;    // M80: Turn on Power Supply
-      #endif
-
-      case 81: M81(); break;      // M81: Turn off Power, including Power Supply, if possible
-
-      case 82: M82(); break;      // M82: Set E axis normal mode (same as other axes)
-      case 83: M83(); break;      // M83: Set E axis relative mode
-
-      case 18: // M18 => M84
-      case 84: M18_M84(); break;  // M84: Disable all steppers or set timeout
-      case 85: M85(); break;      // M85: Set inactivity stepper shutdown timeout
-
-      case 92: M92(); break;      // M92: Set the steps-per-unit for one or more axes
-
-      case 114: M114(); break;    // M114: Report current position
-
-      case 115: M115(); break;    // M115: Report capabilities
-
-      case 117: M117(); break;    // M117: Set LCD message text, if possible
-      case 118: M118(); break;    // M118: Display a message in the host console
-
-      case 119: M119(); break;    // M119: Report endstop states
-      case 120: M120(); break;    // M120: Enable endstops
-      case 121: M121(); break;    // M121: Disable endstops
+        case 80: M80(); break;                                    // M80: Turn on Power Supply
+      #endif
+      case 81: M81(); break;                                      // M81: Turn off Power, including Power Supply, if possible
+
+      case 82: M82(); break;                                      // M82: Set E axis normal mode (same as other axes)
+      case 83: M83(); break;                                      // M83: Set E axis relative mode
+      case 18: case 84: M18_M84(); break;                         // M18/M84: Disable Steppers / Set Timeout
+      case 85: M85(); break;                                      // M85: Set inactivity stepper shutdown timeout
+      case 92: M92(); break;                                      // M92: Set the steps-per-unit for one or more axes
+      case 114: M114(); break;                                    // M114: Report current position
+      case 115: M115(); break;                                    // M115: Report capabilities
+      case 117: M117(); break;                                    // M117: Set LCD message text, if possible
+      case 118: M118(); break;                                    // M118: Display a message in the host console
+      case 119: M119(); break;                                    // M119: Report endstop states
+      case 120: M120(); break;                                    // M120: Enable endstops
+      case 121: M121(); break;                                    // M121: Disable endstops
 
       #if ENABLED(ULTIPANEL)
-        case 145: M145(); break;  // M145: Set material heatup parameters
+        case 145: M145(); break;                                  // M145: Set material heatup parameters
       #endif
 
       #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
-        case 149: M149(); break;  // M149: Set temperature units
+        case 149: M149(); break;                                  // M149: Set temperature units
       #endif
 
       #if HAS_COLOR_LEDS
-        case 150: M150(); break;  // M150: Set Status LED Color
+        case 150: M150(); break;                                  // M150: Set Status LED Color
       #endif
 
       #if ENABLED(MIXING_EXTRUDER)
-        case 163: M163(); break;    // M163: Set a component weight for mixing extruder
+        case 163: M163(); break;                                  // M163: Set a component weight for mixing extruder
         #if MIXING_VIRTUAL_TOOLS > 1
-          case 164: M164(); break;  // M164: Save current mix as a virtual extruder
+          case 164: M164(); break;                                // M164: Save current mix as a virtual extruder
         #endif
         #if ENABLED(DIRECT_MIXING_IN_G1)
-          case 165: M165(); break;  // M165: Set multiple mix weights
+          case 165: M165(); break;                                // M165: Set multiple mix weights
         #endif
       #endif
 
       #if DISABLED(NO_VOLUMETRICS)
-        case 200: M200(); break;  // M200: Set filament diameter, E to cubic units
+        case 200: M200(); break;                                  // M200: Set filament diameter, E to cubic units
       #endif
 
-      case 201: M201(); break;  // M201: Set max acceleration for print moves (units/s^2)
+      case 201: M201(); break;                                    // M201: Set max acceleration for print moves (units/s^2)
 
       #if 0
-        case 202: M202(); break; // Not used for Sprinter/grbl gen6
+        case 202: M202(); break;                                  // M202: Not used for Sprinter/grbl gen6
       #endif
 
-      case 203: M203(); break;    // M203: Set max feedrate (units/sec)
-      case 204: M204(); break;    // M204: Set acceleration
-      case 205: M205(); break;    // M205: Set advanced settings
+      case 203: M203(); break;                                    // M203: Set max feedrate (units/sec)
+      case 204: M204(); break;                                    // M204: Set acceleration
+      case 205: M205(); break;                                    // M205: Set advanced settings
 
       #if HAS_M206_COMMAND
-        case 206: M206(); break;  // M206: Set home offsets
+        case 206: M206(); break;                                  // M206: Set home offsets
       #endif
 
       #if ENABLED(DELTA)
-        case 665: M665(); break;  // M665: Set delta configurations
+        case 665: M665(); break;                                  // M665: Set delta configurations
       #endif
 
       #if ENABLED(DELTA) || ENABLED(X_DUAL_ENDSTOPS) || ENABLED(Y_DUAL_ENDSTOPS) || ENABLED(Z_DUAL_ENDSTOPS)
-        case 666: M666(); break;  // M666: Set delta or dual endstop adjustment
+        case 666: M666(); break;                                  // M666: Set delta or dual endstop adjustment
       #endif
 
       #if ENABLED(FWRETRACT)
-        case 207: M207(); break;  // M207: Set Retract Length, Feedrate, and Z lift
-        case 208: M208(); break;  // M208: Set Recover (unretract) Additional Length and Feedrate
-        case 209: if (MIN_AUTORETRACT <= MAX_AUTORETRACT) M209(); break;  // M209: Turn Automatic Retract Detection on/off
+        case 207: M207(); break;                                  // M207: Set Retract Length, Feedrate, and Z lift
+        case 208: M208(); break;                                  // M208: Set Recover (unretract) Additional Length and Feedrate
+        case 209:
+          if (MIN_AUTORETRACT <= MAX_AUTORETRACT) M209();         // M209: Turn Automatic Retract Detection on/off
+          break;
       #endif
 
-      case 211: M211(); break;    // M211: Enable, Disable, and/or Report software endstops
+      case 211: M211(); break;                                    // M211: Enable, Disable, and/or Report software endstops
 
       #if HOTENDS > 1
-        case 218: // M218: Set a tool offset
-          M218();
-          break;
+        case 218: M218(); break;                                  // M218: Set a tool offset
       #endif
 
-      case 220: M220(); break;    // M220: Set Feedrate Percentage: S<percent> ("FR" on your LCD)
-
-      case 221: // M221: Set Flow Percentage
-        M221();
-        break;
-
-      case 226: M226(); break;    // M226: Wait until a pin reaches a state
+      case 220: M220(); break;                                    // M220: Set Feedrate Percentage: S<percent> ("FR" on your LCD)
+      case 221: M221(); break;                                    // M221: Set Flow Percentage
+      case 226: M226(); break;                                    // M226: Wait until a pin reaches a state
 
       #if HAS_SERVOS
-        case 280: M280(); break;  // M280: Set servo position absolute
+        case 280: M280(); break;                                  // M280: Set servo position absolute
       #endif
 
       #if ENABLED(BABYSTEPPING)
-        case 290: M290(); break;  // M290: Babystepping
+        case 290: M290(); break;                                  // M290: Babystepping
       #endif
 
       #if HAS_BUZZER
-        case 300: M300(); break;  // M300: Play beep tone
+        case 300: M300(); break;                                  // M300: Play beep tone
       #endif
 
       #if ENABLED(PIDTEMP)
-        case 301: M301(); break;  // M301: Set hotend PID parameters
+        case 301: M301(); break;                                  // M301: Set hotend PID parameters
       #endif
 
       #if ENABLED(PIDTEMPBED)
-        case 304: M304(); break;  // M304: Set bed PID parameters
+        case 304: M304(); break;                                  // M304: Set bed PID parameters
       #endif
 
       #if defined(CHDK) || HAS_PHOTOGRAPH
-        case 240: M240(); break;  // M240: Trigger a camera by emulating a Canon RC-1 : http://www.doc-diy.net/photo/rc-1_hacked/
+        case 240: M240(); break;                                  // M240: Trigger a camera by emulating a Canon RC-1 : http://www.doc-diy.net/photo/rc-1_hacked/
       #endif
 
       #if HAS_LCD_CONTRAST
-        case 250: M250(); break;  // M250: Set LCD contrast
+        case 250: M250(); break;                                  // M250: Set LCD contrast
       #endif
 
       #if ENABLED(EXPERIMENTAL_I2CBUS)
-        case 260: M260(); break;  // M260: Send data to an i2c slave
-        case 261: M261(); break;  // M261: Request data from an i2c slave
+        case 260: M260(); break;                                  // M260: Send data to an i2c slave
+        case 261: M261(); break;                                  // M261: Request data from an i2c slave
       #endif
 
       #if ENABLED(PREVENT_COLD_EXTRUSION)
-        case 302: M302(); break;  // M302: Allow cold extrudes (set the minimum extrude temperature)
+        case 302: M302(); break;                                  // M302: Allow cold extrudes (set the minimum extrude temperature)
       #endif
 
-      case 303: // M303: PID autotune
-        M303();
-        break;
+      case 303: M303(); break;                                    // M303: PID autotune
 
       #if ENABLED(MORGAN_SCARA)
-        case 360: if (M360()) return; break;  // M360: SCARA Theta pos1
-        case 361: if (M361()) return; break;  // M361: SCARA Theta pos2
-        case 362: if (M362()) return; break;  // M362: SCARA Psi pos1
-        case 363: if (M363()) return; break;  // M363: SCARA Psi pos2
-        case 364: if (M364()) return; break;  // M364: SCARA Psi pos3 (90 deg to Theta)
+        case 360: if (M360()) return; break;                      // M360: SCARA Theta pos1
+        case 361: if (M361()) return; break;                      // M361: SCARA Theta pos2
+        case 362: if (M362()) return; break;                      // M362: SCARA Psi pos1
+        case 363: if (M363()) return; break;                      // M363: SCARA Psi pos2
+        case 364: if (M364()) return; break;                      // M364: SCARA Psi pos3 (90 deg to Theta)
       #endif
 
       #if ENABLED(EXT_SOLENOID)
-        case 380: M380(); break;  // M380: Activate solenoid on active extruder
-        case 381: M381(); break;  // M381: Disable all solenoids
+        case 380: M380(); break;                                  // M380: Activate solenoid on active extruder
+        case 381: M381(); break;                                  // M381: Disable all solenoids
       #endif
 
-      case 400: M400(); break;    // M400: Finish all moves
+      case 400: M400(); break;                                    // M400: Finish all moves
 
       #if HAS_BED_PROBE
-        case 401: M401(); break;  // M401: Deploy probe
-        case 402: M402(); break;  // M402: Stow probe
+        case 401: M401(); break;                                  // M401: Deploy probe
+        case 402: M402(); break;                                  // M402: Stow probe
       #endif
 
       #if ENABLED(FILAMENT_WIDTH_SENSOR)
-        case 404:  // M404: Enter the nominal filament width (3mm, 1.75mm ) N<3.0> or display nominal filament width
-          M404();
-          break;
-        case 405:  // M405: Turn on filament sensor for control
-          M405();
-          break;
-        case 406:  // M406: Turn off filament sensor for control
-          M406();
-          break;
-        case 407:   // M407: Display measured filament diameter
-          M407();
-          break;
-      #endif // FILAMENT_WIDTH_SENSOR
+        case 404: M404(); break;                                  // M404: Enter the nominal filament width (3mm, 1.75mm ) N<3.0> or display nominal filament width
+        case 405: M405(); break;                                  // M405: Turn on filament sensor for control
+        case 406: M406(); break;                                  // M406: Turn off filament sensor for control
+        case 407: M407(); break;                                  // M407: Display measured filament diameter
+      #endif
 
       #if HAS_LEVELING
-        case 420: // M420: Enable/Disable Bed Leveling
-          M420();
-          break;
+        case 420: M420(); break;                                  // M420: Enable/Disable Bed Leveling
       #endif
 
       #if HAS_MESH
-        case 421: // M421: Set a Mesh Bed Leveling Z coordinate
-          M421();
-          break;
+        case 421: M421(); break;                                  // M421: Set a Mesh Bed Leveling Z coordinate
       #endif
 
       #if HAS_M206_COMMAND
-        case 428: M428(); break;  // M428: Apply current_position to home_offset
+        case 428: M428(); break;                                  // M428: Apply current_position to home_offset
       #endif
 
-      case 500: M500(); break;    // M500: Store settings in EEPROM
-      case 501: M501(); break;    // M501: Read settings from EEPROM
-      case 502: M502(); break;    // M502: Revert to default settings
+      case 500: M500(); break;                                    // M500: Store settings in EEPROM
+      case 501: M501(); break;                                    // M501: Read settings from EEPROM
+      case 502: M502(); break;                                    // M502: Revert to default settings
       #if DISABLED(DISABLE_M503)
-        case 503: M503(); break;  // M503: print settings currently in memory
+        case 503: M503(); break;                                  // M503: print settings currently in memory
       #endif
       #if ENABLED(EEPROM_SETTINGS)
-        case 504: M504(); break;  // M504: Validate EEPROM contents
+        case 504: M504(); break;                                  // M504: Validate EEPROM contents
       #endif
 
       #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
-        case 540: M540(); break;  // M540: Set abort on endstop hit for SD printing
+        case 540: M540(); break;                                  // M540: Set abort on endstop hit for SD printing
       #endif
 
       #if HAS_BED_PROBE
-        case 851: // M851: Set Z Probe Z Offset
-          M851();
-          break;
-      #endif // HAS_BED_PROBE
+        case 851: M851(); break;                                  // M851: Set Z Probe Z Offset
+      #endif
 
       #if ENABLED(SKEW_CORRECTION_GCODE)
-        case 852: // M852: Set Skew factors
-          M852();
-          break;
+        case 852: M852(); break;                                  // M852: Set Skew factors
       #endif
 
       #if ENABLED(ADVANCED_PAUSE_FEATURE)
-        case 600: M600(); break;  // M600: Pause for Filament Change
-        case 603: M603(); break;  // M603: Configure Filament Change
-      #endif // ADVANCED_PAUSE_FEATURE
+        case 600: M600(); break;                                  // M600: Pause for Filament Change
+        case 603: M603(); break;                                  // M603: Configure Filament Change
+      #endif
 
       #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
-        case 605: M605(); break;  // M605: Set Dual X Carriage movement mode
+        case 605: M605(); break;                                  // M605: Set Dual X Carriage movement mode
       #endif
 
       #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
-        case 701: M701(); break;  // M701: Load Filament
-        case 702: M702(); break;  // M702: Unload Filament
+        case 701: M701(); break;                                  // M701: Load Filament
+        case 702: M702(); break;                                  // M702: Unload Filament
       #endif
 
       #if ENABLED(LIN_ADVANCE)
-        case 900: M900(); break;  // M900: Set advance K factor.
+        case 900: M900(); break;                                  // M900: Set advance K factor.
       #endif
 
       #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
-        case 907: M907(); break;      // M907: Set digital trimpot motor current using axis codes.
+        case 907: M907(); break;                                  // M907: Set digital trimpot motor current using axis codes.
         #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
-          case 908: M908(); break;    // M908: Control digital trimpot directly.
-          #if ENABLED(DAC_STEPPER_CURRENT) // As with Printrbot RevF
-            case 909: M909(); break;  // M909: Print digipot/DAC current value
-            case 910: M910(); break;  // M910: Commit digipot/DAC value to external EEPROM
+          case 908: M908(); break;                                // M908: Control digital trimpot directly.
+          #if ENABLED(DAC_STEPPER_CURRENT)
+            case 909: M909(); break;                              // M909: Print digipot/DAC current value
+            case 910: M910(); break;                              // M910: Commit digipot/DAC value to external EEPROM
           #endif
         #endif
       #endif
@@ -664,51 +563,49 @@ void GcodeSuite::process_parsed_command() {
         #if ENABLED(TMC_DEBUG)
           case 122: M122(); break;
         #endif
-        case 906: M906(); break;    // M906: Set motor current in milliamps using axis codes X, Y, Z, E
-        case 911: M911(); break;    // M911: Report TMC2130 prewarn triggered flags
-        case 912: M912(); break;    // M912: Clear TMC2130 prewarn triggered flags
+        case 906: M906(); break;                                  // M906: Set motor current in milliamps using axis codes X, Y, Z, E
+        case 911: M911(); break;                                  // M911: Report TMC2130 prewarn triggered flags
+        case 912: M912(); break;                                  // M912: Clear TMC2130 prewarn triggered flags
         #if ENABLED(HYBRID_THRESHOLD)
-          case 913: M913(); break;  // M913: Set HYBRID_THRESHOLD speed.
+          case 913: M913(); break;                                // M913: Set HYBRID_THRESHOLD speed.
         #endif
         #if ENABLED(SENSORLESS_HOMING)
-          case 914: M914(); break;  // M914: Set SENSORLESS_HOMING sensitivity.
+          case 914: M914(); break;                                // M914: Set SENSORLESS_HOMING sensitivity.
         #endif
         #if ENABLED(TMC_Z_CALIBRATION)
-          case 915: M915(); break;  // M915: TMC Z axis calibration.
+          case 915: M915(); break;                                // M915: TMC Z axis calibration.
         #endif
       #endif
 
       #if HAS_MICROSTEPS
-        case 350: M350(); break;    // M350: Set microstepping mode. Warning: Steps per unit remains unchanged. S code sets stepping mode for all drivers.
-        case 351: M351(); break;    // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.
+        case 350: M350(); break;                                  // M350: Set microstepping mode. Warning: Steps per unit remains unchanged. S code sets stepping mode for all drivers.
+        case 351: M351(); break;                                  // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.
       #endif
 
-      case 355: M355(); break;      // M355: Set case light brightness
+      case 355: M355(); break;                                    // M355: Set case light brightness
 
       #if ENABLED(DEBUG_GCODE_PARSER)
-        case 800:
-          parser.debug(); // GCode Parser Test for M
-          break;
+        case 800: parser.debug(); break;                          // M800: GCode Parser Test for M
       #endif
 
       #if ENABLED(I2C_POSITION_ENCODERS)
-        case 860: M860(); break; // M860: Report encoder module position
-        case 861: M861(); break; // M861: Report encoder module status
-        case 862: M862(); break; // M862: Perform axis test
-        case 863: M863(); break; // M863: Calibrate steps/mm
-        case 864: M864(); break; // M864: Change module address
-        case 865: M865(); break; // M865: Check module firmware version
-        case 866: M866(); break; // M866: Report axis error count
-        case 867: M867(); break; // M867: Toggle error correction
-        case 868: M868(); break; // M868: Set error correction threshold
-        case 869: M869(); break; // M869: Report axis error
-      #endif
-
-      case 999: M999(); break;  // M999: Restart after being Stopped
+        case 860: M860(); break;                                  // M860: Report encoder module position
+        case 861: M861(); break;                                  // M861: Report encoder module status
+        case 862: M862(); break;                                  // M862: Perform axis test
+        case 863: M863(); break;                                  // M863: Calibrate steps/mm
+        case 864: M864(); break;                                  // M864: Change module address
+        case 865: M865(); break;                                  // M865: Check module firmware version
+        case 866: M866(); break;                                  // M866: Report axis error count
+        case 867: M867(); break;                                  // M867: Toggle error correction
+        case 868: M868(); break;                                  // M868: Set error correction threshold
+        case 869: M869(); break;                                  // M869: Report axis error
+      #endif
+
+      case 999: M999(); break;                                    // M999: Restart after being Stopped
     }
     break;
 
-    case 'T': T(parser.codenum); break; // Tn: Tool Change
+    case 'T': T(parser.codenum); break;                           // Tn: Tool Change
 
     default: parser.unknown_command_error();
   }

commit 1cb810ff1c04065daa29182a6c22ecf6b0c0098b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 21 19:30:06 2018 -0500

    [2.0.x] Automatically reset stepper timeout (#10179)
    
    * Automatically reset stepper timeout in manage_inactivity
    
    Any code that adds moves to the planner can skip resetting the stepper timeout. We can let `idle` / `manage_inactivity` reset the timer whenever it detects any moves in the planner.
    
    * blocks_queued => has_blocks_queued

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index deb3c09d44..a218baf864 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -43,7 +43,7 @@ GcodeSuite gcode;
 #include "../Marlin.h" // for idle() and suspend_auto_report
 
 uint8_t GcodeSuite::target_extruder;
-millis_t GcodeSuite::previous_cmd_ms;
+millis_t GcodeSuite::previous_move_ms;
 
 bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
 
@@ -121,8 +121,7 @@ void GcodeSuite::get_destination_from_command() {
  * Dwell waits immediately. It does not synchronize. Use M400 instead of G4
  */
 void GcodeSuite::dwell(millis_t time) {
-  refresh_cmd_timeout();
-  time += previous_cmd_ms;
+  time += millis();
   while (PENDING(millis(), time)) idle();
 }
 
@@ -735,6 +734,8 @@ void GcodeSuite::process_next_command() {
     #endif
   }
 
+  reset_stepper_timeout(); // Keep steppers powered
+
   // Parse the next command in the queue
   parser.parse(current_command);
   process_parsed_command();

commit ae39fbd646829b33f0ec6d181bcdc0bdc61f0b19
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 21 00:29:09 2018 -0500

    Also suppress keepalive with suspend_auto_report

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bb56eaf91e..deb3c09d44 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -40,7 +40,7 @@ GcodeSuite gcode;
   #include "../feature/mixing.h"
 #endif
 
-#include "../Marlin.h" // for idle()
+#include "../Marlin.h" // for idle() and suspend_auto_report
 
 uint8_t GcodeSuite::target_extruder;
 millis_t GcodeSuite::previous_cmd_ms;
@@ -749,7 +749,7 @@ void GcodeSuite::process_next_command() {
   void GcodeSuite::host_keepalive() {
     const millis_t ms = millis();
     static millis_t next_busy_signal_ms = 0;
-    if (host_keepalive_interval && busy_state != NOT_BUSY) {
+    if (!suspend_auto_report && host_keepalive_interval && busy_state != NOT_BUSY) {
       if (PENDING(ms, next_busy_signal_ms)) return;
       switch (busy_state) {
         case IN_HANDLER:

commit f00317375256ce6125ba84290bb59333cb4f10dd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Mar 10 19:52:30 2018 -0600

    Fixup M666
    
    Followup to d6df032

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 938488996e..bb56eaf91e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -488,7 +488,7 @@ void GcodeSuite::process_parsed_command() {
         case 665: M665(); break;  // M665: Set delta configurations
       #endif
 
-      #if ENABLED(DELTA) || ENABLED(Z_DUAL_ENDSTOPS)
+      #if ENABLED(DELTA) || ENABLED(X_DUAL_ENDSTOPS) || ENABLED(Y_DUAL_ENDSTOPS) || ENABLED(Z_DUAL_ENDSTOPS)
         case 666: M666(); break;  // M666: Set delta or dual endstop adjustment
       #endif
 

commit ffbf63e6afb7728849d434ccfda89e3fd8b37094
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 7 01:53:50 2018 -0600

    Add HAS_TEMP_SENSOR conditional

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 45f7dc6108..938488996e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -391,7 +391,7 @@ void GcodeSuite::process_parsed_command() {
         KEEPALIVE_STATE(NOT_BUSY);
         return; // "ok" already printed
 
-      #if ENABLED(AUTO_REPORT_TEMPERATURES) && (HAS_TEMP_HOTEND || HAS_TEMP_BED)
+      #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
         case 155: M155(); break;  // M155: Set temperature auto-report interval
       #endif
 

commit 3db35ba9be05355fdad018fb9128335e03097f7a
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Mon Jan 22 10:21:42 2018 -0600

    [2.0.x] Fix change filament for delta machines (#9295)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 421d0b1f62..45f7dc6108 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -633,17 +633,17 @@ void GcodeSuite::process_parsed_command() {
       #endif
 
       #if ENABLED(ADVANCED_PAUSE_FEATURE)
-        case 600: // M600: Pause for filament change
-          M600();
-          break;
+        case 600: M600(); break;  // M600: Pause for Filament Change
+        case 603: M603(); break;  // M603: Configure Filament Change
       #endif // ADVANCED_PAUSE_FEATURE
 
       #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
         case 605: M605(); break;  // M605: Set Dual X Carriage movement mode
       #endif
 
-      #if ENABLED(MK2_MULTIPLEXER)
-        case 702: M702(); break;  // M702: Unload all extruders
+      #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
+        case 701: M701(); break;  // M701: Load Filament
+        case 702: M702(); break;  // M702: Unload Filament
       #endif
 
       #if ENABLED(LIN_ADVANCE)

commit 9b519864bfeb043bad7d07f4bf10fe249ab8e27a
Author: GMagician <3684609+GMagician@users.noreply.github.com>
Date:   Sat Jan 20 22:22:03 2018 +0100

    [2.0.x] Relative movements fix (#9259)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3187186662..421d0b1f62 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -94,8 +94,10 @@ bool GcodeSuite::get_target_extruder_from_command() {
 void GcodeSuite::get_destination_from_command() {
   LOOP_XYZE(i) {
     if (parser.seen(axis_codes[i])) {
-      const float v = parser.value_axis_units((AxisEnum)i) + (axis_relative_modes[i] || relative_mode ? current_position[i] : 0);
-      destination[i] = i == E_AXIS ? v : LOGICAL_TO_NATIVE(v, i);
+      const float v = parser.value_axis_units((AxisEnum)i);
+      destination[i] = (axis_relative_modes[i] || relative_mode)
+        ? current_position[i] + v
+        : (i == E_AXIS) ? v : LOGICAL_TO_NATIVE(v, i);
     }
     else
       destination[i] = current_position[i];

commit 9d923c6c03e87cc8b66882ed9325ac47ddf9c3a0
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Fri Dec 29 21:38:08 2017 +0200

    Fix TMC gcode commands

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 70e396f4ab..3187186662 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -659,8 +659,10 @@ void GcodeSuite::process_parsed_command() {
         #endif
       #endif
 
-      #if HAVE_TRINAMIC
-        case 122: M122(); break;
+      #if HAS_TRINAMIC
+        #if ENABLED(TMC_DEBUG)
+          case 122: M122(); break;
+        #endif
         case 906: M906(); break;    // M906: Set motor current in milliamps using axis codes X, Y, Z, E
         case 911: M911(); break;    // M911: Report TMC2130 prewarn triggered flags
         case 912: M912(); break;    // M912: Clear TMC2130 prewarn triggered flags
@@ -670,6 +672,9 @@ void GcodeSuite::process_parsed_command() {
         #if ENABLED(SENSORLESS_HOMING)
           case 914: M914(); break;  // M914: Set SENSORLESS_HOMING sensitivity.
         #endif
+        #if ENABLED(TMC_Z_CALIBRATION)
+          case 915: M915(); break;  // M915: TMC Z axis calibration.
+        #endif
       #endif
 
       #if HAS_MICROSTEPS

commit 51e0f2bee34e485d038ad0ca35fca7398a1576de
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 4 19:51:18 2018 -0600

    Add MarlinSettings::validate()

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 31d628d859..70e396f4ab 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -610,6 +610,9 @@ void GcodeSuite::process_parsed_command() {
       #if DISABLED(DISABLE_M503)
         case 503: M503(); break;  // M503: print settings currently in memory
       #endif
+      #if ENABLED(EEPROM_SETTINGS)
+        case 504: M504(); break;  // M504: Validate EEPROM contents
+      #endif
 
       #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
         case 540: M540(); break;  // M540: Set abort on endstop hit for SD printing

commit 7541316bb49303ce97e062da601e26426321c4ba
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 4 05:06:34 2018 -0600

    Add M701/M702 Filament Load/Unload, M603

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 35305df7b1..31d628d859 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -399,8 +399,7 @@ void GcodeSuite::process_parsed_command() {
       #endif
 
       #if ENABLED(PARK_HEAD_ON_PAUSE)
-        case 125: // M125: Store current position and move to filament change position
-          M125(); break;
+        case 125: M125(); break;  // M125: Store current position and move to filament change position
       #endif
 
       #if ENABLED(BARICUDA)

commit 933f76fda3a2e8ecd9b3e8493b2885f4356b0430
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Dec 19 19:44:11 2017 -0600

    Option to disable all volumetric extrusion

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bec1c192d0..35305df7b1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -465,9 +465,9 @@ void GcodeSuite::process_parsed_command() {
         #endif
       #endif
 
-      case 200: // M200: Set filament diameter, E to cubic units
-        M200();
-        break;
+      #if DISABLED(NO_VOLUMETRICS)
+        case 200: M200(); break;  // M200: Set filament diameter, E to cubic units
+      #endif
 
       case 201: M201(); break;  // M201: Set max acceleration for print moves (units/s^2)
 

commit 0cd1e91056213d6a0bd422848ccff7cd1191d001
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Fri Dec 15 23:03:14 2017 +0200

    [2.0.x] TMC driver update (#8769)

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index cce5d2d57a..bec1c192d0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -657,7 +657,8 @@ void GcodeSuite::process_parsed_command() {
         #endif
       #endif
 
-      #if ENABLED(HAVE_TMC2130)
+      #if HAVE_TRINAMIC
+        case 122: M122(); break;
         case 906: M906(); break;    // M906: Set motor current in milliamps using axis codes X, Y, Z, E
         case 911: M911(); break;    // M911: Report TMC2130 prewarn triggered flags
         case 912: M912(); break;    // M912: Clear TMC2130 prewarn triggered flags

commit 0154e3480c44bf9d96d662382da25afaaf3fd854
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 1 16:42:23 2017 -0600

    New feature: BED_SKEW_CORRECTION

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index fdb73256b0..cce5d2d57a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -622,6 +622,12 @@ void GcodeSuite::process_parsed_command() {
           break;
       #endif // HAS_BED_PROBE
 
+      #if ENABLED(SKEW_CORRECTION_GCODE)
+        case 852: // M852: Set Skew factors
+          M852();
+          break;
+      #endif
+
       #if ENABLED(ADVANCED_PAUSE_FEATURE)
         case 600: // M600: Pause for filament change
           M600();

commit c6b0c104bbab04d4d59c4f3f8fddb728e9b99603
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 23 17:59:43 2017 -0600

    Adapt G26 to work for all meshes

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 958c4e017f..fdb73256b0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -207,7 +207,7 @@ void GcodeSuite::process_parsed_command() {
           break;
       #endif // INCH_MODE_SUPPORT
 
-      #if ENABLED(UBL_G26_MESH_VALIDATION)
+      #if ENABLED(G26_MESH_VALIDATION)
         case 26: // G26: Mesh Validation Pattern generation
           G26();
           break;
@@ -342,7 +342,7 @@ void GcodeSuite::process_parsed_command() {
         case 48: M48(); break;    // M48: Z probe repeatability test
       #endif
 
-      #if ENABLED(UBL_G26_MESH_VALIDATION)
+      #if ENABLED(G26_MESH_VALIDATION)
         case 49: M49(); break;    // M49: Turn on or off G26 debug flag for verbose output
       #endif
 

commit e6788bb6ae4261ad3e424cec0cf01ebab5b79b69
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 8 12:54:00 2017 -0600

    Fix get_destination_from_command for E

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 75dc8f4b4b..958c4e017f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -93,8 +93,10 @@ bool GcodeSuite::get_target_extruder_from_command() {
  */
 void GcodeSuite::get_destination_from_command() {
   LOOP_XYZE(i) {
-    if (parser.seen(axis_codes[i]))
-      destination[i] = LOGICAL_TO_NATIVE(parser.value_axis_units((AxisEnum)i) + (axis_relative_modes[i] || relative_mode ? current_position[i] : 0), i);
+    if (parser.seen(axis_codes[i])) {
+      const float v = parser.value_axis_units((AxisEnum)i) + (axis_relative_modes[i] || relative_mode ? current_position[i] : 0);
+      destination[i] = i == E_AXIS ? v : LOGICAL_TO_NATIVE(v, i);
+    }
     else
       destination[i] = current_position[i];
   }

commit 1b40e9c46475a9f9c712eba5588c72256f7dd584
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 4 16:36:41 2017 -0500

    Implement CNC_COORDINATE_SYSTEMS

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 57dee60151..75dc8f4b4b 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -56,6 +56,11 @@ bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
   GcodeSuite::WorkspacePlane GcodeSuite::workspace_plane = PLANE_XY;
 #endif
 
+#if ENABLED(CNC_COORDINATE_SYSTEMS)
+  int8_t GcodeSuite::active_coordinate_system = -1; // machine space
+  float GcodeSuite::coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
+#endif
+
 /**
  * Set target_extruder from the T parameter or the active_extruder
  *
@@ -125,26 +130,11 @@ void GcodeSuite::dwell(millis_t time) {
 #endif
 
 /**
- * Process a single command and dispatch it to its handler
- * This is called from the main loop()
+ * Process the parsed command and dispatch it to its handler
  */
-void GcodeSuite::process_next_command() {
-  char * const current_command = command_queue[cmd_queue_index_r];
-
-  if (DEBUGGING(ECHO)) {
-    SERIAL_ECHO_START();
-    SERIAL_ECHOLN(current_command);
-    #if ENABLED(M100_FREE_MEMORY_WATCHER)
-      SERIAL_ECHOPAIR("slot:", cmd_queue_index_r);
-      M100_dump_routine("   Command Queue:", (const char*)command_queue, (const char*)(command_queue + sizeof(command_queue)));
-    #endif
-  }
-
+void GcodeSuite::process_parsed_command() {
   KEEPALIVE_STATE(IN_HANDLER);
 
-  // Parse the next command in the queue
-  parser.parse(current_command);
-
   // Handle a known G, M, or T
   switch (parser.command_letter) {
     case 'G': switch (parser.codenum) {
@@ -711,6 +701,27 @@ void GcodeSuite::process_next_command() {
   ok_to_send();
 }
 
+/**
+ * Process a single command and dispatch it to its handler
+ * This is called from the main loop()
+ */
+void GcodeSuite::process_next_command() {
+  char * const current_command = command_queue[cmd_queue_index_r];
+
+  if (DEBUGGING(ECHO)) {
+    SERIAL_ECHO_START();
+    SERIAL_ECHOLN(current_command);
+    #if ENABLED(M100_FREE_MEMORY_WATCHER)
+      SERIAL_ECHOPAIR("slot:", cmd_queue_index_r);
+      M100_dump_routine("   Command Queue:", (const char*)command_queue, (const char*)(command_queue + sizeof(command_queue)));
+    #endif
+  }
+
+  // Parse the next command in the queue
+  parser.parse(current_command);
+  process_parsed_command();
+}
+
 #if ENABLED(HOST_KEEPALIVE_FEATURE)
 
   /**

commit f8393a09086f01eafbb8563411da3b237c96b982
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 2 23:59:42 2017 -0500

    Operate in Native Machine Space

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0e79f56fef..57dee60151 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -89,7 +89,7 @@ bool GcodeSuite::get_target_extruder_from_command() {
 void GcodeSuite::get_destination_from_command() {
   LOOP_XYZE(i) {
     if (parser.seen(axis_codes[i]))
-      destination[i] = parser.value_axis_units((AxisEnum)i) + (axis_relative_modes[i] || relative_mode ? current_position[i] : 0);
+      destination[i] = LOGICAL_TO_NATIVE(parser.value_axis_units((AxisEnum)i) + (axis_relative_modes[i] || relative_mode ? current_position[i] : 0), i);
     else
       destination[i] = current_position[i];
   }

commit bd78ca0ee3c362add556c9cb4ff3b5256c61d019
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 25 15:49:34 2017 -0500

    Add M290 Babystepping

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5c0502772a..0e79f56fef 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -525,6 +525,10 @@ void GcodeSuite::process_next_command() {
         case 280: M280(); break;  // M280: Set servo position absolute
       #endif
 
+      #if ENABLED(BABYSTEPPING)
+        case 290: M290(); break;  // M290: Babystepping
+      #endif
+
       #if HAS_BUZZER
         case 300: M300(); break;  // M300: Play beep tone
       #endif

commit 5c4f3e010786c1a280b7a8d448426de521e369b7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 15 02:15:19 2017 -0500

    Add LCD_SET_PROGRESS_MANUALLY

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 880cf1b059..5c0502772a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -354,6 +354,10 @@ void GcodeSuite::process_next_command() {
         case 49: M49(); break;    // M49: Turn on or off G26 debug flag for verbose output
       #endif
 
+      #if ENABLED(ULTRA_LCD) && ENABLED(LCD_SET_PROGRESS_MANUALLY)
+        case 73: M73(); break;    // M73: Set progress percentage (for display on LCD)
+      #endif
+
       case 75: M75(); break;      // M75: Start print timer
       case 76: M76(); break;      // M76: Pause print timer
       case 77: M77(); break;      // M77: Stop print timer

commit 0cb00f52d94773411e405ae10a463a4687b70658
Author: Thomas Moore <tcm0116@gmail.com>
Date:   Sat Sep 30 16:06:43 2017 -0500

    Cleanup warnings

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1dccf74469..880cf1b059 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -36,6 +36,10 @@ GcodeSuite gcode;
   #include "../module/printcounter.h"
 #endif
 
+#if ENABLED(DIRECT_MIXING_IN_G1)
+  #include "../feature/mixing.h"
+#endif
+
 #include "../Marlin.h" // for idle()
 
 uint8_t GcodeSuite::target_extruder;

commit 1587962547910eb21362cac32f3f644d79a46656
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 23 18:09:14 2017 -0500

    Combine G-code files into fewer units
    
    Addressing #7707

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index aa8cfd6dfc..1dccf74469 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -636,13 +636,14 @@ void GcodeSuite::process_next_command() {
         case 900: M900(); break;  // M900: Set advance K factor.
       #endif
 
-      case 907: M907(); break;      // M907: Set digital trimpot motor current using axis codes.
-
-      #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
-        case 908: M908(); break;    // M908: Control digital trimpot directly.
-        #if ENABLED(DAC_STEPPER_CURRENT) // As with Printrbot RevF
-          case 909: M909(); break;  // M909: Print digipot/DAC current value
-          case 910: M910(); break;  // M910: Commit digipot/DAC value to external EEPROM
+      #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
+        case 907: M907(); break;      // M907: Set digital trimpot motor current using axis codes.
+        #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
+          case 908: M908(); break;    // M908: Control digital trimpot directly.
+          #if ENABLED(DAC_STEPPER_CURRENT) // As with Printrbot RevF
+            case 909: M909(); break;  // M909: Print digipot/DAC current value
+            case 910: M910(); break;  // M910: Commit digipot/DAC value to external EEPROM
+          #endif
         #endif
       #endif
 

commit 07cf75883f125d569cb2013594a7519074eb34e4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 18 01:05:44 2017 -0500

    Move T (tool change) to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c3a1597c06..aa8cfd6dfc 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,8 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_T(uint8_t tmp_extruder);
-
 #if ENABLED(M100_FREE_MEMORY_WATCHER)
   extern void M100_dump_routine(const char * const title, const char *start, const char *end);
 #endif
@@ -690,9 +688,7 @@ void GcodeSuite::process_next_command() {
     }
     break;
 
-    case 'T':
-      gcode_T(parser.codenum);
-      break;
+    case 'T': T(parser.codenum); break; // Tn: Tool Change
 
     default: parser.unknown_command_error();
   }

commit 927524af6bc8e0cd8d88b8768667488841698a5b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 18 00:52:06 2017 -0500

    Move M999 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ee68d5a77e..c3a1597c06 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M999();
 extern void gcode_T(uint8_t tmp_extruder);
 
 #if ENABLED(M100_FREE_MEMORY_WATCHER)
@@ -687,9 +686,7 @@ void GcodeSuite::process_next_command() {
         case 869: M869(); break; // M869: Report axis error
       #endif
 
-      case 999: // M999: Restart after being Stopped
-        gcode_M999();
-        break;
+      case 999: M999(); break;  // M999: Restart after being Stopped
     }
     break;
 

commit 1a37ebc76dfc2a1e27fcd71590fcea7bc49d980a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 18 00:06:16 2017 -0500

    Move M163-M165 MIXING_EXTRUDER to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 065bf1fe26..ee68d5a77e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,9 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M163();
-extern void gcode_M164();
-extern void gcode_M165();
 extern void gcode_M999();
 extern void gcode_T(uint8_t tmp_extruder);
 
@@ -462,18 +459,12 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(MIXING_EXTRUDER)
-        case 163: // M163: Set a component weight for mixing extruder
-          gcode_M163();
-          break;
+        case 163: M163(); break;    // M163: Set a component weight for mixing extruder
         #if MIXING_VIRTUAL_TOOLS > 1
-          case 164: // M164: Save current mix as a virtual extruder
-            gcode_M164();
-            break;
+          case 164: M164(); break;  // M164: Save current mix as a virtual extruder
         #endif
         #if ENABLED(DIRECT_MIXING_IN_G1)
-          case 165: // M165: Set multiple mix weights
-            gcode_M165();
-            break;
+          case 165: M165(); break;  // M165: Set multiple mix weights
         #endif
       #endif
 

commit 8ca0b2fd683e62192821fbe2022f897483294804
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 18:56:29 2017 -0500

    Move M355 caselight to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 971da19aac..065bf1fe26 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M355();
 extern void gcode_M999();
 extern void gcode_T(uint8_t tmp_extruder);
 
@@ -676,9 +675,7 @@ void GcodeSuite::process_next_command() {
         case 351: M351(); break;    // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.
       #endif
 
-      case 355: // M355 set case light brightness
-        gcode_M355();
-        break;
+      case 355: M355(); break;      // M355: Set case light brightness
 
       #if ENABLED(DEBUG_GCODE_PARSER)
         case 800:

commit 59608086e630c45167209e20d9a924f89e0908c6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 18:48:55 2017 -0500

    Move M350_M351 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f899f700e2..971da19aac 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,8 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M350();
-extern void gcode_M351();
 extern void gcode_M355();
 extern void gcode_M999();
 extern void gcode_T(uint8_t tmp_extruder);
@@ -674,16 +672,9 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if HAS_MICROSTEPS
-
-        case 350: // M350: Set microstepping mode. Warning: Steps per unit remains unchanged. S code sets stepping mode for all drivers.
-          gcode_M350();
-          break;
-
-        case 351: // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.
-          gcode_M351();
-          break;
-
-      #endif // HAS_MICROSTEPS
+        case 350: M350(); break;    // M350: Set microstepping mode. Warning: Steps per unit remains unchanged. S code sets stepping mode for all drivers.
+        case 351: M351(); break;    // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.
+      #endif
 
       case 355: // M355 set case light brightness
         gcode_M355();

commit 6e0503eab2329ee9664a3611b225e55559a97944
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 18:45:21 2017 -0500

    Move M907-M910 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a2dc0cec0c..f899f700e2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,10 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M907();
-extern void gcode_M908();
-extern void gcode_M909();
-extern void gcode_M910();
 extern void gcode_M999();
 extern void gcode_T(uint8_t tmp_extruder);
 
@@ -655,29 +651,15 @@ void GcodeSuite::process_next_command() {
         case 900: M900(); break;  // M900: Set advance K factor.
       #endif
 
-      case 907: // M907: Set digital trimpot motor current using axis codes.
-        gcode_M907();
-        break;
+      case 907: M907(); break;      // M907: Set digital trimpot motor current using axis codes.
 
       #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
-
-        case 908: // M908: Control digital trimpot directly.
-          gcode_M908();
-          break;
-
+        case 908: M908(); break;    // M908: Control digital trimpot directly.
         #if ENABLED(DAC_STEPPER_CURRENT) // As with Printrbot RevF
-
-          case 909: // M909: Print digipot/DAC current value
-            gcode_M909();
-            break;
-
-          case 910: // M910: Commit digipot/DAC value to external EEPROM
-            gcode_M910();
-            break;
-
+          case 909: M909(); break;  // M909: Print digipot/DAC current value
+          case 910: M910(); break;  // M910: Commit digipot/DAC value to external EEPROM
         #endif
-
-      #endif // HAS_DIGIPOTSS || DAC_STEPPER_CURRENT
+      #endif
 
       #if ENABLED(HAVE_TMC2130)
         case 906: M906(); break;    // M906: Set motor current in milliamps using axis codes X, Y, Z, E

commit 2e89685154dbae09f97dc4ac95022cad56b40365
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 18:34:04 2017 -0500

    Move TMC2130 g-codes to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3df7179084..a2dc0cec0c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,11 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M906();
-extern void gcode_M911();
-extern void gcode_M912();
-extern void gcode_M913();
-extern void gcode_M914();
 extern void gcode_M907();
 extern void gcode_M908();
 extern void gcode_M909();
@@ -660,12 +655,6 @@ void GcodeSuite::process_next_command() {
         case 900: M900(); break;  // M900: Set advance K factor.
       #endif
 
-      #if ENABLED(HAVE_TMC2130)
-        case 906: // M906: Set motor current in milliamps using axis codes X, Y, Z, E
-          gcode_M906();
-          break;
-      #endif
-
       case 907: // M907: Set digital trimpot motor current using axis codes.
         gcode_M907();
         break;
@@ -691,24 +680,14 @@ void GcodeSuite::process_next_command() {
       #endif // HAS_DIGIPOTSS || DAC_STEPPER_CURRENT
 
       #if ENABLED(HAVE_TMC2130)
-        case 911: // M911: Report TMC2130 prewarn triggered flags
-          gcode_M911();
-          break;
-
-        case 912: // M911: Clear TMC2130 prewarn triggered flags
-          gcode_M912();
-          break;
-
+        case 906: M906(); break;    // M906: Set motor current in milliamps using axis codes X, Y, Z, E
+        case 911: M911(); break;    // M911: Report TMC2130 prewarn triggered flags
+        case 912: M912(); break;    // M912: Clear TMC2130 prewarn triggered flags
         #if ENABLED(HYBRID_THRESHOLD)
-          case 913: // M913: Set HYBRID_THRESHOLD speed.
-            gcode_M913();
-            break;
+          case 913: M913(); break;  // M913: Set HYBRID_THRESHOLD speed.
         #endif
-
         #if ENABLED(SENSORLESS_HOMING)
-          case 914: // M914: Set SENSORLESS_HOMING sensitivity.
-            gcode_M914();
-            break;
+          case 914: M914(); break;  // M914: Set SENSORLESS_HOMING sensitivity.
         #endif
       #endif
 

commit 19dde5be03e2c532f63860723e74fa4895965c05
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 17:42:53 2017 -0500

    Move M900 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f2b7017226..3df7179084 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,7 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M900();
 extern void gcode_M906();
 extern void gcode_M911();
 extern void gcode_M912();
@@ -658,9 +657,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(LIN_ADVANCE)
-        case 900: // M900: Set advance K factor.
-          gcode_M900();
-          break;
+        case 900: M900(); break;  // M900: Set advance K factor.
       #endif
 
       #if ENABLED(HAVE_TMC2130)

commit 1b0acbff720046cdaa7d24dcbc8dbf5d26b3c1b8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 17:24:56 2017 -0500

    Move M605 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bdea78350f..f2b7017226 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,7 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M605();
 extern void gcode_M900();
 extern void gcode_M906();
 extern void gcode_M911();
@@ -651,10 +650,8 @@ void GcodeSuite::process_next_command() {
       #endif // ADVANCED_PAUSE_FEATURE
 
       #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
-        case 605: // M605: Set Dual X Carriage movement mode
-          gcode_M605();
-          break;
-      #endif // DUAL_X_CARRIAGE
+        case 605: M605(); break;  // M605: Set Dual X Carriage movement mode
+      #endif
 
       #if ENABLED(MK2_MULTIPLEXER)
         case 702: M702(); break;  // M702: Unload all extruders

commit 75cf17d8165beed9b0392f1edb6e0a8a67b5f874
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 16:58:16 2017 -0500

    Move M702 MK2_MULTIPLEXER to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 6d9e77aa0c..bdea78350f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -123,7 +123,6 @@ extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
 extern void gcode_M605();
-extern void gcode_M702();
 extern void gcode_M900();
 extern void gcode_M906();
 extern void gcode_M911();
@@ -658,9 +657,7 @@ void GcodeSuite::process_next_command() {
       #endif // DUAL_X_CARRIAGE
 
       #if ENABLED(MK2_MULTIPLEXER)
-        case 702: // M702: Unload all extruders
-          gcode_M702();
-          break;
+        case 702: M702(); break;  // M702: Unload all extruders
       #endif
 
       #if ENABLED(LIN_ADVANCE)

commit 7ba2ab4fb373867371db1ae8c72d7b21545bff80
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 15:26:15 2017 -0500

    Move M540 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 205f01502a..6d9e77aa0c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,7 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M540();
 extern void gcode_M605();
 extern void gcode_M702();
 extern void gcode_M900();
@@ -637,9 +636,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
-        case 540: // M540: Set abort on endstop hit for SD printing
-          gcode_M540();
-          break;
+        case 540: M540(); break;  // M540: Set abort on endstop hit for SD printing
       #endif
 
       #if HAS_BED_PROBE

commit a90c7dbf64eafe10a2f8103420c9e222363b35a7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 04:28:25 2017 -0500

    Move M500-M503 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5343f8f8d2..205f01502a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,10 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M500();
-extern void gcode_M501();
-extern void gcode_M502();
-extern void gcode_M503();
 extern void gcode_M540();
 extern void gcode_M605();
 extern void gcode_M702();
@@ -633,20 +629,11 @@ void GcodeSuite::process_next_command() {
         case 428: M428(); break;  // M428: Apply current_position to home_offset
       #endif
 
-      case 500: // M500: Store settings in EEPROM
-        gcode_M500();
-        break;
-      case 501: // M501: Read settings from EEPROM
-        gcode_M501();
-        break;
-      case 502: // M502: Revert to default settings
-        gcode_M502();
-        break;
-
+      case 500: M500(); break;    // M500: Store settings in EEPROM
+      case 501: M501(); break;    // M501: Read settings from EEPROM
+      case 502: M502(); break;    // M502: Revert to default settings
       #if DISABLED(DISABLE_M503)
-        case 503: // M503: print settings currently in memory
-          gcode_M503();
-          break;
+        case 503: M503(); break;  // M503: print settings currently in memory
       #endif
 
       #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)

commit aab548996240a4d4463d34720cc57644c52de522
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 04:22:37 2017 -0500

    Move M428 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 69dd1d4371..5343f8f8d2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,7 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M428();
 extern void gcode_M500();
 extern void gcode_M501();
 extern void gcode_M502();
@@ -631,9 +630,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if HAS_M206_COMMAND
-        case 428: // M428: Apply current_position to home_offset
-          gcode_M428();
-          break;
+        case 428: M428(); break;  // M428: Apply current_position to home_offset
       #endif
 
       case 500: // M500: Store settings in EEPROM

commit 1fe25271e4a6bfd23f29a34ccedbfc6010d363d6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 04:16:28 2017 -0500

    Move M401_M402 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e4923509a8..69dd1d4371 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,8 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M401();
-extern void gcode_M402();
 extern void gcode_M428();
 extern void gcode_M500();
 extern void gcode_M501();
@@ -601,13 +599,9 @@ void GcodeSuite::process_next_command() {
       case 400: M400(); break;    // M400: Finish all moves
 
       #if HAS_BED_PROBE
-        case 401: // M401: Deploy probe
-          gcode_M401();
-          break;
-        case 402: // M402: Stow probe
-          gcode_M402();
-          break;
-      #endif // HAS_BED_PROBE
+        case 401: M401(); break;  // M401: Deploy probe
+        case 402: M402(); break;  // M402: Stow probe
+      #endif
 
       #if ENABLED(FILAMENT_WIDTH_SENSOR)
         case 404:  // M404: Enter the nominal filament width (3mm, 1.75mm ) N<3.0> or display nominal filament width

commit 0589884d26a73b76455a276de45f5eab0eefb606
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:53:36 2017 -0500

    Move M400 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 95b8bffcb5..e4923509a8 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,7 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M400();
 extern void gcode_M401();
 extern void gcode_M402();
 extern void gcode_M428();
@@ -599,9 +598,7 @@ void GcodeSuite::process_next_command() {
         case 381: M381(); break;  // M381: Disable all solenoids
       #endif
 
-      case 400: // M400: Finish all moves
-        gcode_M400();
-        break;
+      case 400: M400(); break;    // M400: Finish all moves
 
       #if HAS_BED_PROBE
         case 401: // M401: Deploy probe

commit 4a220a8b79ec9c355faa2a0ab640d91dad508217
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:43:45 2017 -0500

    Move M380_M381 to cpp, solenoid feature

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8186fe787f..95b8bffcb5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,8 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern void gcode_M380();
-extern void gcode_M381();
 extern void gcode_M400();
 extern void gcode_M401();
 extern void gcode_M402();
@@ -597,12 +595,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(EXT_SOLENOID)
-        case 380: // M380: Activate solenoid on active extruder
-          gcode_M380();
-          break;
-        case 381: // M381: Disable all solenoids
-          gcode_M381();
-          break;
+        case 380: M380(); break;  // M380: Activate solenoid on active extruder
+        case 381: M381(); break;  // M381: Disable all solenoids
       #endif
 
       case 400: // M400: Finish all moves

commit 9be8cb0ac9cd6689651a3f3ddc9af0144f782922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:34:20 2017 -0500

    Move M360-M364 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index dd90c9a1bb..8186fe787f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,11 +122,6 @@ extern void gcode_M165();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
-extern bool gcode_M360();
-extern bool gcode_M361();
-extern bool gcode_M362();
-extern bool gcode_M363();
-extern bool gcode_M364();
 extern void gcode_M380();
 extern void gcode_M381();
 extern void gcode_M400();
@@ -594,22 +589,12 @@ void GcodeSuite::process_next_command() {
         break;
 
       #if ENABLED(MORGAN_SCARA)
-        case 360:  // M360: SCARA Theta pos1
-          if (gcode_M360()) return;
-          break;
-        case 361:  // M361: SCARA Theta pos2
-          if (gcode_M361()) return;
-          break;
-        case 362:  // M362: SCARA Psi pos1
-          if (gcode_M362()) return;
-          break;
-        case 363:  // M363: SCARA Psi pos2
-          if (gcode_M363()) return;
-          break;
-        case 364:  // M364: SCARA Psi pos3 (90 deg to Theta)
-          if (gcode_M364()) return;
-          break;
-      #endif // SCARA
+        case 360: if (M360()) return; break;  // M360: SCARA Theta pos1
+        case 361: if (M361()) return; break;  // M361: SCARA Theta pos2
+        case 362: if (M362()) return; break;  // M362: SCARA Psi pos1
+        case 363: if (M363()) return; break;  // M363: SCARA Psi pos2
+        case 364: if (M364()) return; break;  // M364: SCARA Psi pos3 (90 deg to Theta)
+      #endif
 
       #if ENABLED(EXT_SOLENOID)
         case 380: // M380: Activate solenoid on active extruder

commit 828405cac817c13623cc384aee170e6c352f5607
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:29:29 2017 -0500

    Move M302 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 157b8ffb94..dd90c9a1bb 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M302();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
@@ -587,10 +586,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(PREVENT_COLD_EXTRUSION)
-        case 302: // M302: Allow cold extrudes (set the minimum extrude temperature)
-          gcode_M302();
-          break;
-      #endif // PREVENT_COLD_EXTRUSION
+        case 302: M302(); break;  // M302: Allow cold extrudes (set the minimum extrude temperature)
+      #endif
 
       case 303: // M303: PID autotune
         M303();

commit 8584f7e390f22886b9c6c52302ed87ab81ddad06
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:23:20 2017 -0500

    Move M250 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index bb0b637c9a..157b8ffb94 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M250();
 extern void gcode_M302();
 extern void gcode_M350();
 extern void gcode_M351();
@@ -579,10 +578,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if HAS_LCD_CONTRAST
-        case 250: // M250: Set LCD contrast
-          gcode_M250();
-          break;
-      #endif // HAS_LCD_CONTRAST
+        case 250: M250(); break;  // M250: Set LCD contrast
+      #endif
 
       #if ENABLED(EXPERIMENTAL_I2CBUS)
         case 260: M260(); break;  // M260: Send data to an i2c slave

commit ebb9bd541919c9682e9550aab5dc6052e3ebb729
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:20:32 2017 -0500

    Move M240 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5f965ddb50..bb0b637c9a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M240();
 extern void gcode_M250();
 extern void gcode_M302();
 extern void gcode_M350();
@@ -576,10 +575,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if defined(CHDK) || HAS_PHOTOGRAPH
-        case 240: // M240: Trigger a camera by emulating a Canon RC-1 : http://www.doc-diy.net/photo/rc-1_hacked/
-          gcode_M240();
-          break;
-      #endif // CHDK || PHOTOGRAPH_PIN
+        case 240: M240(); break;  // M240: Trigger a camera by emulating a Canon RC-1 : http://www.doc-diy.net/photo/rc-1_hacked/
+      #endif
 
       #if HAS_LCD_CONTRAST
         case 250: // M250: Set LCD contrast

commit d4aaa0f1c8ac3cb29c5763972d029f60c5e91dba
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:09:48 2017 -0500

    Move M304 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 9a24eb877d..5f965ddb50 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -122,7 +122,6 @@ extern void gcode_M165();
 extern void gcode_M240();
 extern void gcode_M250();
 extern void gcode_M302();
-extern void gcode_M304();
 extern void gcode_M350();
 extern void gcode_M351();
 extern void gcode_M355();
@@ -573,10 +572,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(PIDTEMPBED)
-        case 304: // M304: Set bed PID parameters
-          gcode_M304();
-          break;
-      #endif // PIDTEMPBED
+        case 304: M304(); break;  // M304: Set bed PID parameters
+      #endif
 
       #if defined(CHDK) || HAS_PHOTOGRAPH
         case 240: // M240: Trigger a camera by emulating a Canon RC-1 : http://www.doc-diy.net/photo/rc-1_hacked/

commit 609c4eea3250da58c0dea79117309c7dfa92ad2b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:07:35 2017 -0500

    Move M301 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5e089afb24..9a24eb877d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -121,7 +121,6 @@ extern void gcode_M164();
 extern void gcode_M165();
 extern void gcode_M240();
 extern void gcode_M250();
-extern void gcode_M301();
 extern void gcode_M302();
 extern void gcode_M304();
 extern void gcode_M350();
@@ -570,10 +569,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(PIDTEMP)
-        case 301: // M301: Set hotend PID parameters
-          gcode_M301();
-          break;
-      #endif // PIDTEMP
+        case 301: M301(); break;  // M301: Set hotend PID parameters
+      #endif
 
       #if ENABLED(PIDTEMPBED)
         case 304: // M304: Set bed PID parameters

commit 4f14849675208d1bd8b69c84a77f2ae7f82297cb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:04:52 2017 -0500

    Move M300 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1ba1f5c661..5e089afb24 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -121,7 +121,6 @@ extern void gcode_M164();
 extern void gcode_M165();
 extern void gcode_M240();
 extern void gcode_M250();
-extern void gcode_M300();
 extern void gcode_M301();
 extern void gcode_M302();
 extern void gcode_M304();
@@ -567,10 +566,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if HAS_BUZZER
-        case 300: // M300: Play beep tone
-          gcode_M300();
-          break;
-      #endif // HAS_BUZZER
+        case 300: M300(); break;  // M300: Play beep tone
+      #endif
 
       #if ENABLED(PIDTEMP)
         case 301: // M301: Set hotend PID parameters

commit 6ed5252884ed3f7ab9a27537b69371804b940088
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 02:58:39 2017 -0500

    Move M280 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7de00309e0..1ba1f5c661 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -121,7 +121,6 @@ extern void gcode_M164();
 extern void gcode_M165();
 extern void gcode_M240();
 extern void gcode_M250();
-extern void gcode_M280();
 extern void gcode_M300();
 extern void gcode_M301();
 extern void gcode_M302();
@@ -564,10 +563,8 @@ void GcodeSuite::process_next_command() {
       case 226: M226(); break;    // M226: Wait until a pin reaches a state
 
       #if HAS_SERVOS
-        case 280: // M280: Set servo position absolute
-          gcode_M280();
-          break;
-      #endif // HAS_SERVOS
+        case 280: M280(); break;  // M280: Set servo position absolute
+      #endif
 
       #if HAS_BUZZER
         case 300: // M300: Play beep tone

commit d4d3d92f8a60abe4145439332006dd616ccb3dc5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 02:49:13 2017 -0500

    Move M260_M261 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 79dd5e3bc7..7de00309e0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -121,8 +121,6 @@ extern void gcode_M164();
 extern void gcode_M165();
 extern void gcode_M240();
 extern void gcode_M250();
-extern void gcode_M260();
-extern void gcode_M261();
 extern void gcode_M280();
 extern void gcode_M300();
 extern void gcode_M301();
@@ -602,16 +600,9 @@ void GcodeSuite::process_next_command() {
       #endif // HAS_LCD_CONTRAST
 
       #if ENABLED(EXPERIMENTAL_I2CBUS)
-
-        case 260: // M260: Send data to an i2c slave
-          gcode_M260();
-          break;
-
-        case 261: // M261: Request data from an i2c slave
-          gcode_M261();
-          break;
-
-      #endif // EXPERIMENTAL_I2CBUS
+        case 260: M260(); break;  // M260: Send data to an i2c slave
+        case 261: M261(); break;  // M261: Request data from an i2c slave
+      #endif
 
       #if ENABLED(PREVENT_COLD_EXTRUSION)
         case 302: // M302: Allow cold extrudes (set the minimum extrude temperature)

commit 3e761696a04b3671997b3140f907b51e417c78ab
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 02:43:36 2017 -0500

    Move M226 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 71557f7fd5..79dd5e3bc7 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M226();
 extern void gcode_M240();
 extern void gcode_M250();
 extern void gcode_M260();
@@ -564,9 +563,7 @@ void GcodeSuite::process_next_command() {
         M221();
         break;
 
-      case 226: // M226: Wait until a pin reaches a state
-        gcode_M226();
-        break;
+      case 226: M226(); break;    // M226: Wait until a pin reaches a state
 
       #if HAS_SERVOS
         case 280: // M280: Set servo position absolute

commit 0e319104c2d93ddd4c4d4be5816695b7e00e3344
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 02:39:44 2017 -0500

    Move M220 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e037f6bf17..71557f7fd5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M220();
 extern void gcode_M226();
 extern void gcode_M240();
 extern void gcode_M250();
@@ -559,9 +558,7 @@ void GcodeSuite::process_next_command() {
           break;
       #endif
 
-      case 220: // M220: Set Feedrate Percentage: S<percent> ("FR" on your LCD)
-        gcode_M220();
-        break;
+      case 220: M220(); break;    // M220: Set Feedrate Percentage: S<percent> ("FR" on your LCD)
 
       case 221: // M221: Set Flow Percentage
         M221();

commit 234de3547c53fd9e4f35f8cfd61ded0a555256a2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 02:36:22 2017 -0500

    Move M211 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 30433e1316..e037f6bf17 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M211();
 extern void gcode_M220();
 extern void gcode_M226();
 extern void gcode_M240();
@@ -552,9 +551,7 @@ void GcodeSuite::process_next_command() {
         case 209: if (MIN_AUTORETRACT <= MAX_AUTORETRACT) M209(); break;  // M209: Turn Automatic Retract Detection on/off
       #endif
 
-      case 211: // M211: Enable, Disable, and/or Report software endstops
-        gcode_M211();
-        break;
+      case 211: M211(); break;    // M211: Enable, Disable, and/or Report software endstops
 
       #if HOTENDS > 1
         case 218: // M218: Set a tool offset

commit 6c7bad8bc334aac0c82ddc0ed818dc6ed0c0a90f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 02:25:52 2017 -0500

    Move M666 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3546a706e3..30433e1316 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -151,7 +151,6 @@ extern void gcode_M502();
 extern void gcode_M503();
 extern void gcode_M540();
 extern void gcode_M605();
-extern void gcode_M666();
 extern void gcode_M702();
 extern void gcode_M900();
 extern void gcode_M906();
@@ -544,9 +543,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(DELTA) || ENABLED(Z_DUAL_ENDSTOPS)
-        case 666: // M666: Set delta or dual endstop adjustment
-          gcode_M666();
-          break;
+        case 666: M666(); break;  // M666: Set delta or dual endstop adjustment
       #endif
 
       #if ENABLED(FWRETRACT)

commit f5877aa93e6a7e592a4a9b1dd6f1dfcf6803b031
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 02:21:21 2017 -0500

    Move M665 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a5da9ce62c..3546a706e3 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -151,7 +151,6 @@ extern void gcode_M502();
 extern void gcode_M503();
 extern void gcode_M540();
 extern void gcode_M605();
-extern void gcode_M665();
 extern void gcode_M666();
 extern void gcode_M702();
 extern void gcode_M900();
@@ -541,9 +540,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(DELTA)
-        case 665: // M665: Set delta configurations
-          gcode_M665();
-          break;
+        case 665: M665(); break;  // M665: Set delta configurations
       #endif
 
       #if ENABLED(DELTA) || ENABLED(Z_DUAL_ENDSTOPS)

commit 33861d4e04cf478a81db0a9ad077ea722f48a07d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 01:43:20 2017 -0500

    Move M206 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1525ba2fa5..a5da9ce62c 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M206();
 extern void gcode_M211();
 extern void gcode_M220();
 extern void gcode_M226();
@@ -538,9 +537,7 @@ void GcodeSuite::process_next_command() {
       case 205: M205(); break;    // M205: Set advanced settings
 
       #if HAS_M206_COMMAND
-        case 206: // M206: Set home offsets
-          gcode_M206();
-          break;
+        case 206: M206(); break;  // M206: Set home offsets
       #endif
 
       #if ENABLED(DELTA)

commit 7aca9fe2f7aa2b05998f8db4119e5153184372ba
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 01:38:58 2017 -0500

    Move M203-M205 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0ae62b6461..1525ba2fa5 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,9 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M203();
-extern void gcode_M204();
-extern void gcode_M205();
 extern void gcode_M206();
 extern void gcode_M211();
 extern void gcode_M220();
@@ -536,15 +533,9 @@ void GcodeSuite::process_next_command() {
         case 202: M202(); break; // Not used for Sprinter/grbl gen6
       #endif
 
-      case 203: // M203: Set max feedrate (units/sec)
-        gcode_M203();
-        break;
-      case 204: // M204: Set acceleration
-        gcode_M204();
-        break;
-      case 205: // M205: Set advanced settings
-        gcode_M205();
-        break;
+      case 203: M203(); break;    // M203: Set max feedrate (units/sec)
+      case 204: M204(); break;    // M204: Set acceleration
+      case 205: M205(); break;    // M205: Set advanced settings
 
       #if HAS_M206_COMMAND
         case 206: // M206: Set home offsets

commit b3822b9242bc24924ea75582484a45db22131145
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 01:34:59 2017 -0500

    M202 is unused

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index b1c36da3d4..0ae62b6461 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -532,11 +532,10 @@ void GcodeSuite::process_next_command() {
 
       case 201: M201(); break;  // M201: Set max acceleration for print moves (units/s^2)
 
-      #if 0 // Not used for Sprinter/grbl gen6
-        case 202: // M202
-          gcode_M202();
-          break;
+      #if 0
+        case 202: M202(); break; // Not used for Sprinter/grbl gen6
       #endif
+
       case 203: // M203: Set max feedrate (units/sec)
         gcode_M203();
         break;

commit 5e63efc1d9510ea896089b9a55c54878945a73cd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 01:33:25 2017 -0500

    Move M201 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c6fddf2580..b1c36da3d4 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -119,7 +119,6 @@ void GcodeSuite::dwell(millis_t time) {
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M201();
 extern void gcode_M203();
 extern void gcode_M204();
 extern void gcode_M205();
@@ -530,9 +529,9 @@ void GcodeSuite::process_next_command() {
       case 200: // M200: Set filament diameter, E to cubic units
         M200();
         break;
-      case 201: // M201: Set max acceleration for print moves (units/s^2)
-        gcode_M201();
-        break;
+
+      case 201: M201(); break;  // M201: Set max acceleration for print moves (units/s^2)
+
       #if 0 // Not used for Sprinter/grbl gen6
         case 202: // M202
           gcode_M202();

commit 92c15f5578aa5c6baa4609399bce7f756310ea97
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:50:24 2017 -0500

    Move M150 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 0d6e2b1552..c6fddf2580 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M150();
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
@@ -509,12 +508,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if HAS_COLOR_LEDS
-
-        case 150: // M150: Set Status LED Color
-          gcode_M150();
-          break;
-
-      #endif // HAS_COLOR_LEDS
+        case 150: M150(); break;  // M150: Set Status LED Color
+      #endif
 
       #if ENABLED(MIXING_EXTRUDER)
         case 163: // M163: Set a component weight for mixing extruder

commit eef4a5477887996e67947239add9dde2d34550e6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:46:24 2017 -0500

    Move M119-M121 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3c3f1cd807..0d6e2b1552 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,9 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M119();
-extern void gcode_M120();
-extern void gcode_M121();
 extern void gcode_M150();
 extern void gcode_M163();
 extern void gcode_M164();
@@ -499,15 +496,9 @@ void GcodeSuite::process_next_command() {
       case 117: M117(); break;    // M117: Set LCD message text, if possible
       case 118: M118(); break;    // M118: Display a message in the host console
 
-      case 119: // M119: Report endstop states
-        gcode_M119();
-        break;
-      case 120: // M120: Enable endstops
-        gcode_M120();
-        break;
-      case 121: // M121: Disable endstops
-        gcode_M121();
-        break;
+      case 119: M119(); break;    // M119: Report endstop states
+      case 120: M120(); break;    // M120: Enable endstops
+      case 121: M121(); break;    // M121: Disable endstops
 
       #if ENABLED(ULTIPANEL)
         case 145: M145(); break;  // M145: Set material heatup parameters

commit 379f16558e5ebdfc2c005463e40211ac295fb28b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:42:42 2017 -0500

    Move M118 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index b2145675a1..3c3f1cd807 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M118();
 extern void gcode_M119();
 extern void gcode_M120();
 extern void gcode_M121();
@@ -498,9 +497,8 @@ void GcodeSuite::process_next_command() {
       case 115: M115(); break;    // M115: Report capabilities
 
       case 117: M117(); break;    // M117: Set LCD message text, if possible
-      case 118: // M118: Display a message in the host console
-        gcode_M118();
-        break;
+      case 118: M118(); break;    // M118: Display a message in the host console
+
       case 119: // M119: Report endstop states
         gcode_M119();
         break;

commit 811c32b85adfa69fe855de5e6b877b314506388a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:40:59 2017 -0500

    Move M117 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d0f8ad4b4e..b2145675a1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M117();
 extern void gcode_M118();
 extern void gcode_M119();
 extern void gcode_M120();
@@ -498,9 +497,7 @@ void GcodeSuite::process_next_command() {
 
       case 115: M115(); break;    // M115: Report capabilities
 
-      case 117: // M117: Set LCD message text, if possible
-        gcode_M117();
-        break;
+      case 117: M117(); break;    // M117: Set LCD message text, if possible
       case 118: // M118: Display a message in the host console
         gcode_M118();
         break;

commit 1d2061c9353aec7871016b9126185722fef43b97
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:38:39 2017 -0500

    Move M115 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f378679005..d0f8ad4b4e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M115();
 extern void gcode_M117();
 extern void gcode_M118();
 extern void gcode_M119();
@@ -496,9 +495,9 @@ void GcodeSuite::process_next_command() {
       case 92: M92(); break;      // M92: Set the steps-per-unit for one or more axes
 
       case 114: M114(); break;    // M114: Report current position
-      case 115: // M115: Report capabilities
-        gcode_M115();
-        break;
+
+      case 115: M115(); break;    // M115: Report capabilities
+
       case 117: // M117: Set LCD message text, if possible
         gcode_M117();
         break;

commit 81b8fbf4d6c5336bbb1fb4c686522fbaa145e5a2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:36:30 2017 -0500

    Move M114 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7e2a08b2bf..f378679005 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M114();
 extern void gcode_M115();
 extern void gcode_M117();
 extern void gcode_M118();
@@ -496,9 +495,7 @@ void GcodeSuite::process_next_command() {
 
       case 92: M92(); break;      // M92: Set the steps-per-unit for one or more axes
 
-      case 114: // M114: Report current position
-        gcode_M114();
-        break;
+      case 114: M114(); break;    // M114: Report current position
       case 115: // M115: Report capabilities
         gcode_M115();
         break;

commit 5d2681a10518c2e279c10976c6efdc46ec2bdae7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:33:00 2017 -0500

    Move M100 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8c98f70b39..7e2a08b2bf 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M100();
 extern void gcode_M114();
 extern void gcode_M115();
 extern void gcode_M117();
@@ -424,9 +423,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(M100_FREE_MEMORY_WATCHER)
-        case 100: // M100: Free Memory Report
-          gcode_M100();
-          break;
+        case 100: M100(); break;  // M100: Free Memory Report
       #endif
 
       case 104: M104(); break;    // M104: Set hot end temperature

commit beb346e49f1acbf3b74b5fde8bb9cb7ad080e58b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:28:10 2017 -0500

    Move M92 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 30c39dfabf..8c98f70b39 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M92();
 extern void gcode_M100();
 extern void gcode_M114();
 extern void gcode_M115();
@@ -498,9 +497,8 @@ void GcodeSuite::process_next_command() {
       case 84: M18_M84(); break;  // M84: Disable all steppers or set timeout
       case 85: M85(); break;      // M85: Set inactivity stepper shutdown timeout
 
-      case 92: // M92: Set the steps-per-unit for one or more axes
-        gcode_M92();
-        break;
+      case 92: M92(); break;      // M92: Set the steps-per-unit for one or more axes
+
       case 114: // M114: Report current position
         gcode_M114();
         break;

commit 381b17e6a91783bad1c0eed2ddbb779df2b4b6ef
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 23:57:09 2017 -0500

    Move M18_M84, M85 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 84793f3919..30c39dfabf 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,8 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M18_M84();
-extern void gcode_M85();
 extern void gcode_M92();
 extern void gcode_M100();
 extern void gcode_M114();
@@ -497,12 +495,9 @@ void GcodeSuite::process_next_command() {
       case 83: M83(); break;      // M83: Set E axis relative mode
 
       case 18: // M18 => M84
-      case 84: // M84: Disable all steppers or set timeout
-        gcode_M18_M84();
-        break;
-      case 85: // M85: Set inactivity stepper shutdown timeout
-        gcode_M85();
-        break;
+      case 84: M18_M84(); break;  // M84: Disable all steppers or set timeout
+      case 85: M85(); break;      // M85: Set inactivity stepper shutdown timeout
+
       case 92: // M92: Set the steps-per-unit for one or more axes
         gcode_M92();
         break;

commit a911215b0ef44e721dbc4cc18f833c486009e3e0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 23:27:06 2017 -0500

    Move M82_M83 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index dc47ff426a..84793f3919 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,8 +117,6 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 extern void gcode_M18_M84();
-extern void gcode_M82();
-extern void gcode_M83();
 extern void gcode_M85();
 extern void gcode_M92();
 extern void gcode_M100();
@@ -495,12 +493,9 @@ void GcodeSuite::process_next_command() {
 
       case 81: M81(); break;      // M81: Turn off Power, including Power Supply, if possible
 
-      case 82: // M82: Set E axis normal mode (same as other axes)
-        gcode_M82();
-        break;
-      case 83: // M83: Set E axis relative mode
-        gcode_M83();
-        break;
+      case 82: M82(); break;      // M82: Set E axis normal mode (same as other axes)
+      case 83: M83(); break;      // M83: Set E axis relative mode
+
       case 18: // M18 => M84
       case 84: // M84: Disable all steppers or set timeout
         gcode_M18_M84();

commit 4b9d1b9f260589e5e758bcc90968535cab7bdfa4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 23:25:01 2017 -0500

    Move M80-M81 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 9698998fab..dc47ff426a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,8 +117,6 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 extern void gcode_M18_M84();
-extern void gcode_M80();
-extern void gcode_M81();
 extern void gcode_M82();
 extern void gcode_M83();
 extern void gcode_M85();
@@ -492,16 +490,10 @@ void GcodeSuite::process_next_command() {
       #endif // BARICUDA
 
       #if HAS_POWER_SWITCH
+        case 80: M80(); break;    // M80: Turn on Power Supply
+      #endif
 
-        case 80: // M80: Turn on Power Supply
-          gcode_M80();
-          break;
-
-      #endif // HAS_POWER_SWITCH
-
-      case 81: // M81: Turn off Power, including Power Supply, if possible
-        gcode_M81();
-        break;
+      case 81: M81(); break;      // M81: Turn off Power, including Power Supply, if possible
 
       case 82: // M82: Set E axis normal mode (same as other axes)
         gcode_M82();

commit 0c7ba52451195c9ad5b77a6accb92c8d5aa9b58d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 23:15:33 2017 -0500

    Move M149 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8622025007..9698998fab 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -131,7 +131,6 @@ extern void gcode_M118();
 extern void gcode_M119();
 extern void gcode_M120();
 extern void gcode_M121();
-extern void gcode_M149();
 extern void gcode_M150();
 extern void gcode_M163();
 extern void gcode_M164();
@@ -547,9 +546,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
-        case 149: // M149: Set temperature units
-          gcode_M149();
-          break;
+        case 149: M149(); break;  // M149: Set temperature units
       #endif
 
       #if HAS_COLOR_LEDS

commit cbf40f7ee9ea0cbc1192129920df5163deed1f6b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 23:11:35 2017 -0500

    Move M145 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ffee424562..8622025007 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -131,7 +131,6 @@ extern void gcode_M118();
 extern void gcode_M119();
 extern void gcode_M120();
 extern void gcode_M121();
-extern void gcode_M145();
 extern void gcode_M149();
 extern void gcode_M150();
 extern void gcode_M163();
@@ -544,11 +543,7 @@ void GcodeSuite::process_next_command() {
         break;
 
       #if ENABLED(ULTIPANEL)
-
-        case 145: // M145: Set material heatup parameters
-          gcode_M145();
-          break;
-
+        case 145: M145(); break;  // M145: Set material heatup parameters
       #endif
 
       #if ENABLED(TEMPERATURE_UNITS_SUPPORT)

commit b464887ea198d92bb3b5eac07e72decf074861b6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 22:58:13 2017 -0500

    Make BARICUDA a feature

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 50d6673b14..ffee424562 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -131,10 +131,6 @@ extern void gcode_M118();
 extern void gcode_M119();
 extern void gcode_M120();
 extern void gcode_M121();
-extern void gcode_M126();
-extern void gcode_M127();
-extern void gcode_M128();
-extern void gcode_M129();
 extern void gcode_M145();
 extern void gcode_M149();
 extern void gcode_M150();
@@ -486,23 +482,15 @@ void GcodeSuite::process_next_command() {
       #if ENABLED(BARICUDA)
         // PWM for HEATER_1_PIN
         #if HAS_HEATER_1
-          case 126: // M126: valve open
-            gcode_M126();
-            break;
-          case 127: // M127: valve closed
-            gcode_M127();
-            break;
-        #endif // HAS_HEATER_1
+          case 126: M126(); break;  // M126: valve open
+          case 127: M127(); break;  // M127: valve closed
+        #endif
 
         // PWM for HEATER_2_PIN
         #if HAS_HEATER_2
-          case 128: // M128: valve open
-            gcode_M128();
-            break;
-          case 129: // M129: valve closed
-            gcode_M129();
-            break;
-        #endif // HAS_HEATER_2
+          case 128: M128(); break;  // M128: valve open
+          case 129: M129(); break;  // M129: valve closed
+        #endif
       #endif // BARICUDA
 
       #if HAS_POWER_SWITCH

commit 14a5d2a2736c5e699d0b6f7d5526306b2ae47558
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 22:45:58 2017 -0500

    Move M113 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index f9f508ffd1..50d6673b14 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -124,7 +124,6 @@ extern void gcode_M83();
 extern void gcode_M85();
 extern void gcode_M92();
 extern void gcode_M100();
-extern void gcode_M113();
 extern void gcode_M114();
 extern void gcode_M115();
 extern void gcode_M117();
@@ -457,9 +456,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(HOST_KEEPALIVE_FEATURE)
-        case 113: // M113: Set Host Keepalive interval
-          gcode_M113();
-          break;
+        case 113: M113(); break; // M113: Set Host Keepalive interval
       #endif
 
       #if HAS_HEATER_BED && HAS_TEMP_BED

commit 06f3c8029efff175fb70aa71184be4c1329ca292
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 22:40:04 2017 -0500

    Move M111 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 822c31786d..f9f508ffd1 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -124,7 +124,6 @@ extern void gcode_M83();
 extern void gcode_M85();
 extern void gcode_M92();
 extern void gcode_M100();
-extern void gcode_M111();
 extern void gcode_M113();
 extern void gcode_M114();
 extern void gcode_M115();
@@ -449,9 +448,7 @@ void GcodeSuite::process_next_command() {
 
       case 110: M110(); break;    // M110: Set Current Line Number
 
-      case 111: // M111: Set debug level
-        gcode_M111();
-        break;
+      case 111: M111(); break;    // M111: Set debug level
 
       #if DISABLED(EMERGENCY_PARSER)
         case 108: M108(); break;  // M108: Cancel Waiting

commit a831977deeac481c425ff617738a241c61078f63
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 22:34:40 2017 -0500

    Move M110 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c02c2f1e51..822c31786d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -124,7 +124,6 @@ extern void gcode_M83();
 extern void gcode_M85();
 extern void gcode_M92();
 extern void gcode_M100();
-extern void gcode_M110();
 extern void gcode_M111();
 extern void gcode_M113();
 extern void gcode_M114();
@@ -448,9 +447,7 @@ void GcodeSuite::process_next_command() {
       case 104: M104(); break;    // M104: Set hot end temperature
       case 109: M109(); break;    // M109: Wait for hotend temperature to reach target
 
-      case 110: // M110: Set Current Line Number
-        gcode_M110();
-        break;
+      case 110: M110(); break;    // M110: Set Current Line Number
 
       case 111: // M111: Set debug level
         gcode_M111();

commit 7479ff98b7e3c95b4a90176fe62397f77e1a9552
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 22:13:32 2017 -0500

    Move M140, M190 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 6f18733ef3..c02c2f1e51 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -138,14 +138,12 @@ extern void gcode_M126();
 extern void gcode_M127();
 extern void gcode_M128();
 extern void gcode_M129();
-extern void gcode_M140();
 extern void gcode_M145();
 extern void gcode_M149();
 extern void gcode_M150();
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
-extern void gcode_M190();
 extern void gcode_M201();
 extern void gcode_M203();
 extern void gcode_M204();
@@ -470,10 +468,10 @@ void GcodeSuite::process_next_command() {
           break;
       #endif
 
-      case 140: // M140: Set bed temperature
-        gcode_M140();
-        break;
-
+      #if HAS_HEATER_BED && HAS_TEMP_BED
+        case 140: M140(); break;  // M140: Set bed temperature
+        case 190: M190(); break;  // M190: Wait for bed temperature to reach target
+      #endif
 
       case 105: // M105: Report current temperature
         M105();
@@ -484,12 +482,6 @@ void GcodeSuite::process_next_command() {
         case 155: M155(); break;  // M155: Set temperature auto-report interval
       #endif
 
-      #if HAS_TEMP_BED
-        case 190: // M190: Wait for bed temperature to reach target
-          gcode_M190();
-          break;
-      #endif // HAS_TEMP_BED
-
       #if FAN_COUNT > 0
         case 106: M106(); break;  // M106: Fan On
         case 107: M107(); break;  // M107: Fan Off

commit 5b3e49babdcf8f90c7f6d2ed1bc4e61d11db9d75
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 13:24:32 2017 -0500

    Move M108, M112, M410 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 081a17015f..6f18733ef3 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -124,10 +124,8 @@ extern void gcode_M83();
 extern void gcode_M85();
 extern void gcode_M92();
 extern void gcode_M100();
-extern void gcode_M108();
 extern void gcode_M110();
 extern void gcode_M111();
-extern void gcode_M112();
 extern void gcode_M113();
 extern void gcode_M114();
 extern void gcode_M115();
@@ -178,7 +176,6 @@ extern void gcode_M381();
 extern void gcode_M400();
 extern void gcode_M401();
 extern void gcode_M402();
-extern void gcode_M410();
 extern void gcode_M428();
 extern void gcode_M500();
 extern void gcode_M501();
@@ -462,19 +459,9 @@ void GcodeSuite::process_next_command() {
         break;
 
       #if DISABLED(EMERGENCY_PARSER)
-
-        case 108: // M108: Cancel Waiting
-          gcode_M108();
-          break;
-
-        case 112: // M112: Emergency Stop
-          gcode_M112();
-          break;
-
-        case 410: // M410 quickstop - Abort all the planned moves.
-          gcode_M410();
-          break;
-
+        case 108: M108(); break;  // M108: Cancel Waiting
+        case 112: M112(); break;  // M112: Emergency Stop
+        case 410: M410(); break;  // M410: Quickstop - Abort all the planned moves.
       #endif
 
       #if ENABLED(HOST_KEEPALIVE_FEATURE)

commit df0432c7c8abee61e1bc8956cbf8adb8e35c846a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 13:05:01 2017 -0500

    Move M155 to cpp, auto-report to Temperature

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 6f9b16f0de..081a17015f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -144,7 +144,6 @@ extern void gcode_M140();
 extern void gcode_M145();
 extern void gcode_M149();
 extern void gcode_M150();
-extern void gcode_M155();
 extern void gcode_M163();
 extern void gcode_M164();
 extern void gcode_M165();
@@ -495,9 +494,7 @@ void GcodeSuite::process_next_command() {
         return; // "ok" already printed
 
       #if ENABLED(AUTO_REPORT_TEMPERATURES) && (HAS_TEMP_HOTEND || HAS_TEMP_BED)
-        case 155: // M155: Set temperature auto-report interval
-          gcode_M155();
-          break;
+        case 155: M155(); break;  // M155: Set temperature auto-report interval
       #endif
 
       #if HAS_TEMP_BED

commit df031ab100e666f3c70d358deefac0f87925e571
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 13:14:44 2017 -0500

    Move M106_M107 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index fa7a697716..6f9b16f0de 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -124,8 +124,6 @@ extern void gcode_M83();
 extern void gcode_M85();
 extern void gcode_M92();
 extern void gcode_M100();
-extern void gcode_M106();
-extern void gcode_M107();
 extern void gcode_M108();
 extern void gcode_M110();
 extern void gcode_M111();
@@ -509,13 +507,9 @@ void GcodeSuite::process_next_command() {
       #endif // HAS_TEMP_BED
 
       #if FAN_COUNT > 0
-        case 106: // M106: Fan On
-          gcode_M106();
-          break;
-        case 107: // M107: Fan Off
-          gcode_M107();
-          break;
-      #endif // FAN_COUNT > 0
+        case 106: M106(); break;  // M106: Fan On
+        case 107: M107(); break;  // M107: Fan Off
+      #endif
 
       #if ENABLED(PARK_HEAD_ON_PAUSE)
         case 125: // M125: Store current position and move to filament change position

commit 99c4b9050a4fb650dc7cbd0c841728a6a0abf912
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 12:25:27 2017 -0500

    Move M105 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 15d3e80f69..fa7a697716 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -124,7 +124,6 @@ extern void gcode_M83();
 extern void gcode_M85();
 extern void gcode_M92();
 extern void gcode_M100();
-extern void gcode_M105();
 extern void gcode_M106();
 extern void gcode_M107();
 extern void gcode_M108();
@@ -493,7 +492,7 @@ void GcodeSuite::process_next_command() {
 
 
       case 105: // M105: Report current temperature
-        gcode_M105();
+        M105();
         KEEPALIVE_STATE(NOT_BUSY);
         return; // "ok" already printed
 

commit 2c1eda9e00d37ae420df98617a0c5dd90144b32c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 04:27:45 2017 -0500

    Move M75-M78 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index c30b21a669..15d3e80f69 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,10 +117,6 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 extern void gcode_M18_M84();
-extern void gcode_M75();
-extern void gcode_M76();
-extern void gcode_M77();
-extern void gcode_M78();
 extern void gcode_M80();
 extern void gcode_M81();
 extern void gcode_M82();
@@ -444,16 +440,12 @@ void GcodeSuite::process_next_command() {
         case 49: M49(); break;    // M49: Turn on or off G26 debug flag for verbose output
       #endif
 
-      case 75: // M75: Start print timer
-        gcode_M75(); break;
-      case 76: // M76: Pause print timer
-        gcode_M76(); break;
-      case 77: // M77: Stop print timer
-        gcode_M77(); break;
+      case 75: M75(); break;      // M75: Start print timer
+      case 76: M76(); break;      // M76: Pause print timer
+      case 77: M77(); break;      // M77: Stop print timer
 
       #if ENABLED(PRINTCOUNTER)
-        case 78: // M78: Show print statistics
-          gcode_M78(); break;
+        case 78: M78(); break;    // M78: Show print statistics
       #endif
 
       #if ENABLED(M100_FREE_MEMORY_WATCHER)

commit fc52fc72ac4ff1b2a66a0189a45745f36c2bf23e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 04:13:55 2017 -0500

    Move M48 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ca69bcbeda..c30b21a669 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,7 +117,6 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 extern void gcode_M18_M84();
-extern void gcode_M48();
 extern void gcode_M75();
 extern void gcode_M76();
 extern void gcode_M77();
@@ -438,10 +437,8 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
-        case 48: // M48: Z probe repeatability test
-          gcode_M48();
-          break;
-      #endif // Z_MIN_PROBE_REPEATABILITY_TEST
+        case 48: M48(); break;    // M48: Z probe repeatability test
+      #endif
 
       #if ENABLED(UBL_G26_MESH_VALIDATION)
         case 49: M49(); break;    // M49: Turn on or off G26 debug flag for verbose output

commit be8d9134842943ab98c4dbc10f9df421549ecb0b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 04:06:28 2017 -0500

    Move M43 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 547b03b242..ca69bcbeda 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,7 +117,6 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 extern void gcode_M18_M84();
-extern void gcode_M43();
 extern void gcode_M48();
 extern void gcode_M75();
 extern void gcode_M76();
@@ -435,11 +434,9 @@ void GcodeSuite::process_next_command() {
       case 42: M42(); break;      // M42: Change pin state
 
       #if ENABLED(PINS_DEBUGGING)
-        case 43: // M43: Read pin state
-          gcode_M43(); break;
+        case 43: M43(); break;    // M43: Read pin state
       #endif
 
-
       #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
         case 48: // M48: Z probe repeatability test
           gcode_M48();

commit 10fab24e508147a2e6921f1e2372eca68f8c8e8d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 03:42:05 2017 -0500

    Move M42 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 8b886593ee..547b03b242 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,7 +117,6 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 extern void gcode_M18_M84();
-extern void gcode_M42();
 extern void gcode_M43();
 extern void gcode_M48();
 extern void gcode_M75();
@@ -433,8 +432,7 @@ void GcodeSuite::process_next_command() {
 
       case 31: M31(); break;      // M31: Report time since the start of SD print or last M109
 
-      case 42: // M42: Change pin state
-        gcode_M42(); break;
+      case 42: M42(); break;      // M42: Change pin state
 
       #if ENABLED(PINS_DEBUGGING)
         case 43: // M43: Read pin state

commit 69b664b6fe4db25ffe45b1b872373bd64c1ff0c9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 03:32:16 2017 -0500

    Move M31 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 799a5df58a..8b886593ee 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,7 +117,6 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 extern void gcode_M18_M84();
-extern void gcode_M31();
 extern void gcode_M42();
 extern void gcode_M43();
 extern void gcode_M48();
@@ -432,8 +431,7 @@ void GcodeSuite::process_next_command() {
         case 928: M928(); break;  // M928: Start SD write
       #endif // SDSUPPORT
 
-      case 31: // M31: Report time since the start of SD print or last M109
-        gcode_M31(); break;
+      case 31: M31(); break;      // M31: Report time since the start of SD print or last M109
 
       case 42: // M42: Change pin state
         gcode_M42(); break;

commit a442c34a1ad1a181238fddfd0a52a922de9a643c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 03:24:47 2017 -0500

    Move SD commands to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e41444f0f2..799a5df58a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -117,20 +117,7 @@ void GcodeSuite::dwell(millis_t time) {
 // Placeholders for non-migrated codes
 //
 extern void gcode_M18_M84();
-extern void gcode_M20();
-extern void gcode_M21();
-extern void gcode_M22();
-extern void gcode_M23();
-extern void gcode_M25();
-extern void gcode_M26();
-extern void gcode_M27();
-extern void gcode_M28();
-extern void gcode_M29();
-extern void gcode_M30();
 extern void gcode_M31();
-extern void gcode_M32();
-extern void gcode_M33();
-extern void gcode_M34();
 extern void gcode_M42();
 extern void gcode_M43();
 extern void gcode_M48();
@@ -160,7 +147,6 @@ extern void gcode_M118();
 extern void gcode_M119();
 extern void gcode_M120();
 extern void gcode_M121();
-extern void gcode_M125();
 extern void gcode_M126();
 extern void gcode_M127();
 extern void gcode_M128();
@@ -225,7 +211,6 @@ extern void gcode_M907();
 extern void gcode_M908();
 extern void gcode_M909();
 extern void gcode_M910();
-extern void gcode_M928();
 extern void gcode_M999();
 extern void gcode_T(uint8_t tmp_extruder);
 
@@ -423,43 +408,28 @@ void GcodeSuite::process_next_command() {
         break;
 
       #if ENABLED(SDSUPPORT)
-        case 20: // M20: list SD card
-          gcode_M20(); break;
-        case 21: // M21: init SD card
-          gcode_M21(); break;
-        case 22: // M22: release SD card
-          gcode_M22(); break;
-        case 23: // M23: Select file
-          gcode_M23(); break;
-        case 24: // M24: Start SD print
-          M24(); break;
-        case 25: // M25: Pause SD print
-          gcode_M25(); break;
-        case 26: // M26: Set SD index
-          gcode_M26(); break;
-        case 27: // M27: Get SD status
-          gcode_M27(); break;
-        case 28: // M28: Start SD write
-          gcode_M28(); break;
-        case 29: // M29: Stop SD write
-          gcode_M29(); break;
-        case 30: // M30 <filename> Delete File
-          gcode_M30(); break;
-        case 32: // M32: Select file and start SD print
-          gcode_M32(); break;
+        case 20: M20(); break;    // M20: list SD card
+        case 21: M21(); break;    // M21: init SD card
+        case 22: M22(); break;    // M22: release SD card
+        case 23: M23(); break;    // M23: Select file
+        case 24: M24(); break;    // M24: Start SD print
+        case 25: M25(); break;    // M25: Pause SD print
+        case 26: M26(); break;    // M26: Set SD index
+        case 27: M27(); break;    // M27: Get SD status
+        case 28: M28(); break;    // M28: Start SD write
+        case 29: M29(); break;    // M29: Stop SD write
+        case 30: M30(); break;    // M30 <filename> Delete File
+        case 32: M32(); break;    // M32: Select file and start SD print
 
         #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
-          case 33: // M33: Get the long full path to a file or folder
-            gcode_M33(); break;
+          case 33: M33(); break;  // M33: Get the long full path to a file or folder
         #endif
 
         #if ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_GCODE)
-          case 34: // M34: Set SD card sorting options
-            gcode_M34(); break;
-        #endif // SDCARD_SORT_ALPHA && SDSORT_GCODE
+          case 34: M34(); break;  // M34: Set SD card sorting options
+        #endif
 
-        case 928: // M928: Start SD write
-          gcode_M928(); break;
+        case 928: M928(); break;  // M928: Start SD write
       #endif // SDSUPPORT
 
       case 31: // M31: Report time since the start of SD print or last M109

commit be0e4a4ad066d20ffb4ede4eb468b43f4a784c62
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 02:13:07 2017 -0500

    Consolidate pause, apply to M125, M600, M24

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 99bac95ec2..e41444f0f2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -121,7 +121,6 @@ extern void gcode_M20();
 extern void gcode_M21();
 extern void gcode_M22();
 extern void gcode_M23();
-extern void gcode_M24();
 extern void gcode_M25();
 extern void gcode_M26();
 extern void gcode_M27();
@@ -212,7 +211,6 @@ extern void gcode_M501();
 extern void gcode_M502();
 extern void gcode_M503();
 extern void gcode_M540();
-extern void gcode_M600();
 extern void gcode_M605();
 extern void gcode_M665();
 extern void gcode_M666();
@@ -434,7 +432,7 @@ void GcodeSuite::process_next_command() {
         case 23: // M23: Select file
           gcode_M23(); break;
         case 24: // M24: Start SD print
-          gcode_M24(); break;
+          M24(); break;
         case 25: // M25: Pause SD print
           gcode_M25(); break;
         case 26: // M26: Set SD index
@@ -570,7 +568,7 @@ void GcodeSuite::process_next_command() {
 
       #if ENABLED(PARK_HEAD_ON_PAUSE)
         case 125: // M125: Store current position and move to filament change position
-          gcode_M125(); break;
+          M125(); break;
       #endif
 
       #if ENABLED(BARICUDA)
@@ -911,7 +909,7 @@ void GcodeSuite::process_next_command() {
 
       #if ENABLED(ADVANCED_PAUSE_FEATURE)
         case 600: // M600: Pause for filament change
-          gcode_M600();
+          M600();
           break;
       #endif // ADVANCED_PAUSE_FEATURE
 

commit adca4a9b791d9100261b3c3f73efb4cd2dd4a0b8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 01:14:21 2017 -0500

    Move M17 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index e69c9fce6a..99bac95ec2 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M17();
 extern void gcode_M18_M84();
 extern void gcode_M20();
 extern void gcode_M21();
@@ -422,7 +421,7 @@ void GcodeSuite::process_next_command() {
       #endif
 
       case 17: // M17: Enable all stepper motors
-        gcode_M17();
+        M17();
         break;
 
       #if ENABLED(SDSUPPORT)

commit 33e00b6cd60248d0399e63aa637eaca0b8f3e112
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 01:07:00 2017 -0500

    Move M3-M5 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 08265d8980..e69c9fce6a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,8 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M3_M4(bool is_M3);
-extern void gcode_M5();
 extern void gcode_M17();
 extern void gcode_M18_M84();
 extern void gcode_M20();
@@ -417,16 +415,12 @@ void GcodeSuite::process_next_command() {
       #endif // ULTIPANEL
 
       #if ENABLED(SPINDLE_LASER_ENABLE)
-        case 3:
-          gcode_M3_M4(true);   // M3: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CW
-          break;               // synchronizes with movement commands
-        case 4:
-          gcode_M3_M4(false);  // M4: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CCW
-          break;               // synchronizes with movement commands
-        case 5:
-          gcode_M5();     // M5 - turn spindle/laser off
-          break;          // synchronizes with movement commands
+        // These synchronize with movement commands...
+        case 3: M3_M4(true ); break;  // M3: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CW
+        case 4: M3_M4(false); break;  // M4: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CCW
+        case 5: M5(); break;          // M5 - turn spindle/laser off
       #endif
+
       case 17: // M17: Enable all stepper motors
         gcode_M17();
         break;

commit 04583d46af0246e12bf29609bd676b40b6096662
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 01:00:31 2017 -0500

    Move M0_M1 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index be5fe3d4f0..08265d8980 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_M0_M1();
 extern void gcode_M3_M4(bool is_M3);
 extern void gcode_M5();
 extern void gcode_M17();
@@ -413,7 +412,7 @@ void GcodeSuite::process_next_command() {
       #if HAS_RESUME_CONTINUE
         case 0: // M0: Unconditional stop - Wait for user button press on LCD
         case 1: // M1: Conditional stop - Wait for user button press on LCD
-          gcode_M0_M1();
+          M0_M1();
           break;
       #endif // ULTIPANEL
 

commit 04376975ce3e0ef677890708ddf18e0e5f97b27e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 00:37:35 2017 -0500

    Move G92 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7698523ac9..be5fe3d4f0 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G92();
 extern void gcode_M0_M1();
 extern void gcode_M3_M4(bool is_M3);
 extern void gcode_M5();
@@ -394,8 +393,8 @@ void GcodeSuite::process_next_command() {
         relative_mode = true;
         break;
 
-      case 92: // G92
-        gcode_G92();
+      case 92: // G92 - Set current axis position(s)
+        G92();
         break;
 
       #if HAS_MESH

commit 931aa79d855ea20fff61fb2213782e11d487cd53
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 00:04:21 2017 -0500

    Move G42 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ec302ace46..7698523ac9 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G42();
 extern void gcode_G92();
 extern void gcode_M0_M1();
 extern void gcode_M3_M4(bool is_M3);
@@ -400,9 +399,7 @@ void GcodeSuite::process_next_command() {
         break;
 
       #if HAS_MESH
-        case 42:
-          gcode_G42();
-          break;
+        case 42: G42(); break;        // G42: Coordinated move to a mesh point
       #endif
 
       #if ENABLED(DEBUG_GCODE_PARSER)

commit 84ddae56a8202ba0a9484e914d75e738db754550
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 23:44:29 2017 -0500

    Move G38 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 947b3dd71e..ec302ace46 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G38(bool is_38_2);
 extern void gcode_G42();
 extern void gcode_G92();
 extern void gcode_M0_M1();
@@ -385,7 +384,7 @@ void GcodeSuite::process_next_command() {
       #if ENABLED(G38_PROBE_TARGET)
         case 38: // G38.2 & G38.3
           if (parser.subcode == 2 || parser.subcode == 3)
-            gcode_G38(parser.subcode == 2);
+            G38(parser.subcode == 2);
           break;
       #endif
 

commit b8adae07859ffc204908624e0468c50cdb8af7fe
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 23:31:06 2017 -0500

    Move G31_G32 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index ab94884ccb..947b3dd71e 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,8 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G31();
-extern void gcode_G32();
 extern void gcode_G38(bool is_38_2);
 extern void gcode_G42();
 extern void gcode_G92();
@@ -367,11 +365,11 @@ void GcodeSuite::process_next_command() {
         #if ENABLED(Z_PROBE_SLED)
 
             case 31: // G31: dock the sled
-              gcode_G31();
+              G31();
               break;
 
             case 32: // G32: undock the sled
-              gcode_G32();
+              G32();
               break;
 
         #endif // Z_PROBE_SLED

commit 9db5d21837c1b867626d62272f959c9d764c9f48
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 23:27:30 2017 -0500

    Move G30 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 43776191bf..ab94884ccb 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G30();
 extern void gcode_G31();
 extern void gcode_G32();
 extern void gcode_G38(bool is_38_2);
@@ -362,7 +361,7 @@ void GcodeSuite::process_next_command() {
       #if HAS_BED_PROBE
 
         case 30: // G30 Single Z probe
-          gcode_G30();
+          G30();
           break;
 
         #if ENABLED(Z_PROBE_SLED)

commit 13136376ee6e39c4fdc393b32b71dfcf61807faf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 23:22:58 2017 -0500

    Move G27 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 5df697a760..43776191bf 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,7 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G27();
 extern void gcode_G30();
 extern void gcode_G31();
 extern void gcode_G32();
@@ -345,7 +344,7 @@ void GcodeSuite::process_next_command() {
 
       #if ENABLED(NOZZLE_PARK_FEATURE)
         case 27: // G27: Nozzle Park
-          gcode_G27();
+          G27();
           break;
       #endif // NOZZLE_PARK_FEATURE
 

commit a1ee1628e58cb53d945bc32e8ed5c68f3b1964ce
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 23:18:05 2017 -0500

    Move G20_G21 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1577defd35..5df697a760 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -116,8 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G20();
-extern void gcode_G21();
 extern void gcode_G27();
 extern void gcode_G30();
 extern void gcode_G31();
@@ -331,11 +329,11 @@ void GcodeSuite::process_next_command() {
 
       #if ENABLED(INCH_MODE_SUPPORT)
         case 20: // G20: Inch Mode
-          gcode_G20();
+          G20();
           break;
 
         case 21: // G21: MM Mode
-          gcode_G21();
+          G21();
           break;
       #endif // INCH_MODE_SUPPORT
 

commit 9b4aa5ea8bb0baf78a3a2959e4f603fe6e9f14e1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 23:08:48 2017 -0500

    Move G17-G19 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 471152942b..1577defd35 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -48,6 +48,10 @@ bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
   uint8_t GcodeSuite::host_keepalive_interval = DEFAULT_KEEPALIVE_INTERVAL;
 #endif
 
+#if ENABLED(CNC_WORKSPACE_PLANES)
+  GcodeSuite::WorkspacePlane GcodeSuite::workspace_plane = PLANE_XY;
+#endif
+
 /**
  * Set target_extruder from the T parameter or the active_extruder
  *
@@ -112,9 +116,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G17();
-extern void gcode_G18();
-extern void gcode_G19();
 extern void gcode_G20();
 extern void gcode_G21();
 extern void gcode_G27();
@@ -318,13 +319,13 @@ void GcodeSuite::process_next_command() {
 
       #if ENABLED(CNC_WORKSPACE_PLANES)
         case 17: // G17: Select Plane XY
-          gcode_G17();
+          G17();
           break;
         case 18: // G18: Select Plane ZX
-          gcode_G18();
+          G18();
           break;
         case 19: // G19: Select Plane YZ
-          gcode_G19();
+          G19();
           break;
       #endif // CNC_WORKSPACE_PLANES
 

commit 94d9def81c50ef9b6686d109334ab976ab7e6c40
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 22:13:05 2017 -0500

    Move G12 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a613d31810..471152942b 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -112,7 +112,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G12();
 extern void gcode_G17();
 extern void gcode_G18();
 extern void gcode_G19();
@@ -313,7 +312,7 @@ void GcodeSuite::process_next_command() {
 
       #if ENABLED(NOZZLE_CLEAN_FEATURE)
         case 12:
-          gcode_G12(); // G12: Nozzle Clean
+          G12(); // G12: Nozzle Clean
           break;
       #endif // NOZZLE_CLEAN_FEATURE
 

commit 56f4a4353535c95d7010a9a40733a590462a1fd1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 21:28:54 2017 -0500

    Move G5 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index d0d9df282f..a613d31810 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -112,7 +112,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G5();
 extern void gcode_G12();
 extern void gcode_G17();
 extern void gcode_G18();
@@ -299,7 +298,7 @@ void GcodeSuite::process_next_command() {
 
       #if ENABLED(BEZIER_CURVE_SUPPORT)
         case 5: // G5: Cubic B_spline
-          gcode_G5();
+          G5();
           break;
       #endif // BEZIER_CURVE_SUPPORT
 

commit 760f29a88eeef220fee764065036433222fed7eb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 21:17:34 2017 -0500

    Move G4 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index a8c05c2141..d0d9df282f 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -112,7 +112,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G4();
 extern void gcode_G5();
 extern void gcode_G12();
 extern void gcode_G17();
@@ -295,7 +294,7 @@ void GcodeSuite::process_next_command() {
 
       // G4 Dwell
       case 4:
-        gcode_G4();
+        G4();
         break;
 
       #if ENABLED(BEZIER_CURVE_SUPPORT)

commit 4007cbfe9e1316b23e594281f520ac49e36f2561
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 20:57:52 2017 -0500

    Move G2_G3 to cpp

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 89bc70946a..a8c05c2141 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -112,7 +112,6 @@ void GcodeSuite::dwell(millis_t time) {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G2_G3(bool clockwise);
 extern void gcode_G4();
 extern void gcode_G5();
 extern void gcode_G12();
@@ -290,7 +289,7 @@ void GcodeSuite::process_next_command() {
       #if ENABLED(ARC_SUPPORT) && DISABLED(SCARA)
         case 2: // G2: CW ARC
         case 3: // G3: CCW ARC
-          gcode_G2_G3(parser.codenum == 2);
+          G2_G3(parser.codenum == 2);
           break;
       #endif
 

commit 51f195e698e2cbdbb8f1a97213f0c9553e8fc470
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 20:44:40 2017 -0500

    Move dwell to gcode

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 530a689468..89bc70946a 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -31,12 +31,13 @@ GcodeSuite gcode;
 #include "parser.h"
 #include "queue.h"
 #include "../module/motion.h"
-#include "../module/printcounter.h"
 
 #if ENABLED(PRINTCOUNTER)
   #include "../module/printcounter.h"
 #endif
 
+#include "../Marlin.h" // for idle()
+
 uint8_t GcodeSuite::target_extruder;
 millis_t GcodeSuite::previous_cmd_ms;
 
@@ -99,6 +100,15 @@ void GcodeSuite::get_destination_from_command() {
   #endif
 }
 
+/**
+ * Dwell waits immediately. It does not synchronize. Use M400 instead of G4
+ */
+void GcodeSuite::dwell(millis_t time) {
+  refresh_cmd_timeout();
+  time += previous_cmd_ms;
+  while (PENDING(millis(), time)) idle();
+}
+
 //
 // Placeholders for non-migrated codes
 //

commit 4f1eadf41f1e2d79f7c62c60a1ead6ae34b63be5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 12 15:02:17 2017 -0500

    FILAMENT_WIDTH_SENSOR feature

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 3d92736aee..530a689468 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -102,11 +102,6 @@ void GcodeSuite::get_destination_from_command() {
 //
 // Placeholders for non-migrated codes
 //
-extern void gcode_G0_G1(
-  #if IS_SCARA
-    bool fast_move=false
-  #endif
-);
 extern void gcode_G2_G3(bool clockwise);
 extern void gcode_G4();
 extern void gcode_G5();
@@ -216,10 +211,6 @@ extern void gcode_M381();
 extern void gcode_M400();
 extern void gcode_M401();
 extern void gcode_M402();
-extern void gcode_M404();
-extern void gcode_M405();
-extern void gcode_M406();
-extern void gcode_M407();
 extern void gcode_M410();
 extern void gcode_M428();
 extern void gcode_M500();
@@ -871,16 +862,16 @@ void GcodeSuite::process_next_command() {
 
       #if ENABLED(FILAMENT_WIDTH_SENSOR)
         case 404:  // M404: Enter the nominal filament width (3mm, 1.75mm ) N<3.0> or display nominal filament width
-          gcode_M404();
+          M404();
           break;
         case 405:  // M405: Turn on filament sensor for control
-          gcode_M405();
+          M405();
           break;
         case 406:  // M406: Turn off filament sensor for control
-          gcode_M406();
+          M406();
           break;
         case 407:   // M407: Display measured filament diameter
-          gcode_M407();
+          M407();
           break;
       #endif // FILAMENT_WIDTH_SENSOR
 

commit d5fe0fb02b40311f00c2355df25400f139eb34f4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 9 00:18:43 2017 -0500

    Consolidate PrintCounter

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 2acdcb73de..3d92736aee 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -31,6 +31,7 @@ GcodeSuite gcode;
 #include "parser.h"
 #include "queue.h"
 #include "../module/motion.h"
+#include "../module/printcounter.h"
 
 #if ENABLED(PRINTCOUNTER)
   #include "../module/printcounter.h"

commit 551752eac73a6f60de45b6465e2f224b2b2dca24
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 8 15:35:25 2017 -0500

    Consolidate "bedlevel" code

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 1b1525de84..2acdcb73de 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -115,14 +115,10 @@ extern void gcode_G18();
 extern void gcode_G19();
 extern void gcode_G20();
 extern void gcode_G21();
-extern void gcode_G26();
 extern void gcode_G27();
-extern void gcode_G28(const bool always_home_all);
-extern void gcode_G29();
 extern void gcode_G30();
 extern void gcode_G31();
 extern void gcode_G32();
-extern void gcode_G33();
 extern void gcode_G38(bool is_38_2);
 extern void gcode_G42();
 extern void gcode_G92();
@@ -149,7 +145,6 @@ extern void gcode_M34();
 extern void gcode_M42();
 extern void gcode_M43();
 extern void gcode_M48();
-extern void gcode_M49();
 extern void gcode_M75();
 extern void gcode_M76();
 extern void gcode_M77();
@@ -225,8 +220,6 @@ extern void gcode_M405();
 extern void gcode_M406();
 extern void gcode_M407();
 extern void gcode_M410();
-extern void gcode_M420();
-extern void gcode_M421();
 extern void gcode_M428();
 extern void gcode_M500();
 extern void gcode_M501();
@@ -238,7 +231,6 @@ extern void gcode_M605();
 extern void gcode_M665();
 extern void gcode_M666();
 extern void gcode_M702();
-extern void gcode_M851();
 extern void gcode_M900();
 extern void gcode_M906();
 extern void gcode_M911();
@@ -348,9 +340,9 @@ void GcodeSuite::process_next_command() {
           break;
       #endif // INCH_MODE_SUPPORT
 
-      #if ENABLED(AUTO_BED_LEVELING_UBL) && ENABLED(UBL_G26_MESH_VALIDATION)
+      #if ENABLED(UBL_G26_MESH_VALIDATION)
         case 26: // G26: Mesh Validation Pattern generation
-          gcode_G26();
+          G26();
           break;
       #endif // AUTO_BED_LEVELING_UBL
 
@@ -361,13 +353,13 @@ void GcodeSuite::process_next_command() {
       #endif // NOZZLE_PARK_FEATURE
 
       case 28: // G28: Home all axes, one at a time
-        gcode_G28(false);
+        G28(false);
         break;
 
       #if HAS_LEVELING
         case 29: // G29 Detailed Z probe, probes the bed at 3 or more points,
                  // or provides access to the UBL System if enabled.
-          gcode_G29();
+          G29();
           break;
       #endif // HAS_LEVELING
 
@@ -391,17 +383,11 @@ void GcodeSuite::process_next_command() {
 
       #endif // HAS_BED_PROBE
 
-      #if PROBE_SELECTED
-
-        #if ENABLED(DELTA_AUTO_CALIBRATION)
-
-          case 33: // G33: Delta Auto-Calibration
-            gcode_G33();
-            break;
-
-        #endif // DELTA_AUTO_CALIBRATION
-
-      #endif // PROBE_SELECTED
+      #if ENABLED(DELTA_AUTO_CALIBRATION)
+        case 33: // G33: Delta Auto-Calibration
+          G33();
+          break;
+      #endif // DELTA_AUTO_CALIBRATION
 
       #if ENABLED(G38_PROBE_TARGET)
         case 38: // G38.2 & G38.3
@@ -516,11 +502,9 @@ void GcodeSuite::process_next_command() {
           break;
       #endif // Z_MIN_PROBE_REPEATABILITY_TEST
 
-      #if ENABLED(AUTO_BED_LEVELING_UBL) && ENABLED(UBL_G26_MESH_VALIDATION)
-        case 49: // M49: Turn on or off G26 debug flag for verbose output
-          gcode_M49();
-          break;
-      #endif // AUTO_BED_LEVELING_UBL && UBL_G26_MESH_VALIDATION
+      #if ENABLED(UBL_G26_MESH_VALIDATION)
+        case 49: M49(); break;    // M49: Turn on or off G26 debug flag for verbose output
+      #endif
 
       case 75: // M75: Start print timer
         gcode_M75(); break;
@@ -901,13 +885,13 @@ void GcodeSuite::process_next_command() {
 
       #if HAS_LEVELING
         case 420: // M420: Enable/Disable Bed Leveling
-          gcode_M420();
+          M420();
           break;
       #endif
 
-      #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(AUTO_BED_LEVELING_BILINEAR)
+      #if HAS_MESH
         case 421: // M421: Set a Mesh Bed Leveling Z coordinate
-          gcode_M421();
+          M421();
           break;
       #endif
 
@@ -941,7 +925,7 @@ void GcodeSuite::process_next_command() {
 
       #if HAS_BED_PROBE
         case 851: // M851: Set Z Probe Z Offset
-          gcode_M851();
+          M851();
           break;
       #endif // HAS_BED_PROBE
 

commit 8dc2838d985cabe3a5e53cf989056084f5674043
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 8 23:49:49 2017 -0500

    Move host keepalive to GcodeSuite

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 7fd4f0df3d..1b1525de84 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -41,6 +41,11 @@ millis_t GcodeSuite::previous_cmd_ms;
 
 bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
 
+#if ENABLED(HOST_KEEPALIVE_FEATURE)
+  GcodeSuite::MarlinBusyState GcodeSuite::busy_state = NOT_BUSY;
+  uint8_t GcodeSuite::host_keepalive_interval = DEFAULT_KEEPALIVE_INTERVAL;
+#endif
+
 /**
  * Set target_extruder from the T parameter or the active_extruder
  *
@@ -1068,3 +1073,37 @@ void GcodeSuite::process_next_command() {
 
   ok_to_send();
 }
+
+#if ENABLED(HOST_KEEPALIVE_FEATURE)
+
+  /**
+   * Output a "busy" message at regular intervals
+   * while the machine is not accepting commands.
+   */
+  void GcodeSuite::host_keepalive() {
+    const millis_t ms = millis();
+    static millis_t next_busy_signal_ms = 0;
+    if (host_keepalive_interval && busy_state != NOT_BUSY) {
+      if (PENDING(ms, next_busy_signal_ms)) return;
+      switch (busy_state) {
+        case IN_HANDLER:
+        case IN_PROCESS:
+          SERIAL_ECHO_START();
+          SERIAL_ECHOLNPGM(MSG_BUSY_PROCESSING);
+          break;
+        case PAUSED_FOR_USER:
+          SERIAL_ECHO_START();
+          SERIAL_ECHOLNPGM(MSG_BUSY_PAUSED_FOR_USER);
+          break;
+        case PAUSED_FOR_INPUT:
+          SERIAL_ECHO_START();
+          SERIAL_ECHOLNPGM(MSG_BUSY_PAUSED_FOR_INPUT);
+          break;
+        default:
+          break;
+      }
+    }
+    next_busy_signal_ms = ms + host_keepalive_interval * 1000UL;
+  }
+
+#endif // HOST_KEEPALIVE_FEATURE

commit a98e9874dbf24a73874ecbda86b5fe739a8223d0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 7 22:40:32 2017 -0500

    FWRETRACT as a feature

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
index 367725fe5c..7fd4f0df3d 100644
--- a/Marlin/src/gcode/gcode.cpp
+++ b/Marlin/src/gcode/gcode.cpp
@@ -754,16 +754,10 @@ void GcodeSuite::process_next_command() {
       #endif
 
       #if ENABLED(FWRETRACT)
-        case 207: // M207: Set Retract Length, Feedrate, and Z lift
-          M207();
-          break;
-        case 208: // M208: Set Recover (unretract) Additional Length and Feedrate
-          M208();
-          break;
-        case 209: // M209: Turn Automatic Retract Detection on/off
-          if (MIN_AUTORETRACT <= MAX_AUTORETRACT) M209();
-          break;
-      #endif // FWRETRACT
+        case 207: M207(); break;  // M207: Set Retract Length, Feedrate, and Z lift
+        case 208: M208(); break;  // M208: Set Recover (unretract) Additional Length and Feedrate
+        case 209: if (MIN_AUTORETRACT <= MAX_AUTORETRACT) M209(); break;  // M209: Turn Automatic Retract Detection on/off
+      #endif
 
       case 211: // M211: Enable, Disable, and/or Report software endstops
         gcode_M211();

commit 722786966ad284a708502d18ac5daad02012bfc8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 7 22:33:16 2017 -0500

    Add gcode.cpp, motion.*, queue.* - Apply to some G-codes.

diff --git a/Marlin/src/gcode/gcode.cpp b/Marlin/src/gcode/gcode.cpp
new file mode 100644
index 0000000000..367725fe5c
--- /dev/null
+++ b/Marlin/src/gcode/gcode.cpp
@@ -0,0 +1,1076 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * gcode.cpp - Temporary container for all gcode handlers
+ *             Most will migrate to classes, by feature.
+ */
+
+#include "gcode.h"
+GcodeSuite gcode;
+
+#include "parser.h"
+#include "queue.h"
+#include "../module/motion.h"
+
+#if ENABLED(PRINTCOUNTER)
+  #include "../module/printcounter.h"
+#endif
+
+uint8_t GcodeSuite::target_extruder;
+millis_t GcodeSuite::previous_cmd_ms;
+
+bool GcodeSuite::axis_relative_modes[] = AXIS_RELATIVE_MODES;
+
+/**
+ * Set target_extruder from the T parameter or the active_extruder
+ *
+ * Returns TRUE if the target is invalid
+ */
+bool GcodeSuite::get_target_extruder_from_command() {
+  if (parser.seenval('T')) {
+    const int8_t e = parser.value_byte();
+    if (e >= EXTRUDERS) {
+      SERIAL_ECHO_START();
+      SERIAL_CHAR('M');
+      SERIAL_ECHO(parser.codenum);
+      SERIAL_ECHOLNPAIR(" " MSG_INVALID_EXTRUDER " ", e);
+      return true;
+    }
+    target_extruder = e;
+  }
+  else
+    target_extruder = active_extruder;
+
+  return false;
+}
+
+/**
+ * Set XYZE destination and feedrate from the current GCode command
+ *
+ *  - Set destination from included axis codes
+ *  - Set to current for missing axis codes
+ *  - Set the feedrate, if included
+ */
+void GcodeSuite::get_destination_from_command() {
+  LOOP_XYZE(i) {
+    if (parser.seen(axis_codes[i]))
+      destination[i] = parser.value_axis_units((AxisEnum)i) + (axis_relative_modes[i] || relative_mode ? current_position[i] : 0);
+    else
+      destination[i] = current_position[i];
+  }
+
+  if (parser.linearval('F') > 0.0)
+    feedrate_mm_s = MMM_TO_MMS(parser.value_feedrate());
+
+  #if ENABLED(PRINTCOUNTER)
+    if (!DEBUGGING(DRYRUN))
+      print_job_timer.incFilamentUsed(destination[E_AXIS] - current_position[E_AXIS]);
+  #endif
+
+  // Get ABCDHI mixing factors
+  #if ENABLED(MIXING_EXTRUDER) && ENABLED(DIRECT_MIXING_IN_G1)
+    gcode_get_mix();
+  #endif
+}
+
+//
+// Placeholders for non-migrated codes
+//
+extern void gcode_G0_G1(
+  #if IS_SCARA
+    bool fast_move=false
+  #endif
+);
+extern void gcode_G2_G3(bool clockwise);
+extern void gcode_G4();
+extern void gcode_G5();
+extern void gcode_G12();
+extern void gcode_G17();
+extern void gcode_G18();
+extern void gcode_G19();
+extern void gcode_G20();
+extern void gcode_G21();
+extern void gcode_G26();
+extern void gcode_G27();
+extern void gcode_G28(const bool always_home_all);
+extern void gcode_G29();
+extern void gcode_G30();
+extern void gcode_G31();
+extern void gcode_G32();
+extern void gcode_G33();
+extern void gcode_G38(bool is_38_2);
+extern void gcode_G42();
+extern void gcode_G92();
+extern void gcode_M0_M1();
+extern void gcode_M3_M4(bool is_M3);
+extern void gcode_M5();
+extern void gcode_M17();
+extern void gcode_M18_M84();
+extern void gcode_M20();
+extern void gcode_M21();
+extern void gcode_M22();
+extern void gcode_M23();
+extern void gcode_M24();
+extern void gcode_M25();
+extern void gcode_M26();
+extern void gcode_M27();
+extern void gcode_M28();
+extern void gcode_M29();
+extern void gcode_M30();
+extern void gcode_M31();
+extern void gcode_M32();
+extern void gcode_M33();
+extern void gcode_M34();
+extern void gcode_M42();
+extern void gcode_M43();
+extern void gcode_M48();
+extern void gcode_M49();
+extern void gcode_M75();
+extern void gcode_M76();
+extern void gcode_M77();
+extern void gcode_M78();
+extern void gcode_M80();
+extern void gcode_M81();
+extern void gcode_M82();
+extern void gcode_M83();
+extern void gcode_M85();
+extern void gcode_M92();
+extern void gcode_M100();
+extern void gcode_M105();
+extern void gcode_M106();
+extern void gcode_M107();
+extern void gcode_M108();
+extern void gcode_M110();
+extern void gcode_M111();
+extern void gcode_M112();
+extern void gcode_M113();
+extern void gcode_M114();
+extern void gcode_M115();
+extern void gcode_M117();
+extern void gcode_M118();
+extern void gcode_M119();
+extern void gcode_M120();
+extern void gcode_M121();
+extern void gcode_M125();
+extern void gcode_M126();
+extern void gcode_M127();
+extern void gcode_M128();
+extern void gcode_M129();
+extern void gcode_M140();
+extern void gcode_M145();
+extern void gcode_M149();
+extern void gcode_M150();
+extern void gcode_M155();
+extern void gcode_M163();
+extern void gcode_M164();
+extern void gcode_M165();
+extern void gcode_M190();
+extern void gcode_M201();
+extern void gcode_M203();
+extern void gcode_M204();
+extern void gcode_M205();
+extern void gcode_M206();
+extern void gcode_M211();
+extern void gcode_M220();
+extern void gcode_M226();
+extern void gcode_M240();
+extern void gcode_M250();
+extern void gcode_M260();
+extern void gcode_M261();
+extern void gcode_M280();
+extern void gcode_M300();
+extern void gcode_M301();
+extern void gcode_M302();
+extern void gcode_M304();
+extern void gcode_M350();
+extern void gcode_M351();
+extern void gcode_M355();
+extern bool gcode_M360();
+extern bool gcode_M361();
+extern bool gcode_M362();
+extern bool gcode_M363();
+extern bool gcode_M364();
+extern void gcode_M380();
+extern void gcode_M381();
+extern void gcode_M400();
+extern void gcode_M401();
+extern void gcode_M402();
+extern void gcode_M404();
+extern void gcode_M405();
+extern void gcode_M406();
+extern void gcode_M407();
+extern void gcode_M410();
+extern void gcode_M420();
+extern void gcode_M421();
+extern void gcode_M428();
+extern void gcode_M500();
+extern void gcode_M501();
+extern void gcode_M502();
+extern void gcode_M503();
+extern void gcode_M540();
+extern void gcode_M600();
+extern void gcode_M605();
+extern void gcode_M665();
+extern void gcode_M666();
+extern void gcode_M702();
+extern void gcode_M851();
+extern void gcode_M900();
+extern void gcode_M906();
+extern void gcode_M911();
+extern void gcode_M912();
+extern void gcode_M913();
+extern void gcode_M914();
+extern void gcode_M907();
+extern void gcode_M908();
+extern void gcode_M909();
+extern void gcode_M910();
+extern void gcode_M928();
+extern void gcode_M999();
+extern void gcode_T(uint8_t tmp_extruder);
+
+#if ENABLED(M100_FREE_MEMORY_WATCHER)
+  extern void M100_dump_routine(const char * const title, const char *start, const char *end);
+#endif
+
+/**
+ * Process a single command and dispatch it to its handler
+ * This is called from the main loop()
+ */
+void GcodeSuite::process_next_command() {
+  char * const current_command = command_queue[cmd_queue_index_r];
+
+  if (DEBUGGING(ECHO)) {
+    SERIAL_ECHO_START();
+    SERIAL_ECHOLN(current_command);
+    #if ENABLED(M100_FREE_MEMORY_WATCHER)
+      SERIAL_ECHOPAIR("slot:", cmd_queue_index_r);
+      M100_dump_routine("   Command Queue:", (const char*)command_queue, (const char*)(command_queue + sizeof(command_queue)));
+    #endif
+  }
+
+  KEEPALIVE_STATE(IN_HANDLER);
+
+  // Parse the next command in the queue
+  parser.parse(current_command);
+
+  // Handle a known G, M, or T
+  switch (parser.command_letter) {
+    case 'G': switch (parser.codenum) {
+
+      // G0, G1
+      case 0:
+      case 1:
+        #if IS_SCARA
+          G0_G1(parser.codenum == 0);
+        #else
+          G0_G1();
+        #endif
+        break;
+
+      // G2, G3
+      #if ENABLED(ARC_SUPPORT) && DISABLED(SCARA)
+        case 2: // G2: CW ARC
+        case 3: // G3: CCW ARC
+          gcode_G2_G3(parser.codenum == 2);
+          break;
+      #endif
+
+      // G4 Dwell
+      case 4:
+        gcode_G4();
+        break;
+
+      #if ENABLED(BEZIER_CURVE_SUPPORT)
+        case 5: // G5: Cubic B_spline
+          gcode_G5();
+          break;
+      #endif // BEZIER_CURVE_SUPPORT
+
+      #if ENABLED(FWRETRACT)
+        case 10: // G10: retract
+          G10();
+          break;
+        case 11: // G11: retract_recover
+          G11();
+          break;
+      #endif // FWRETRACT
+
+      #if ENABLED(NOZZLE_CLEAN_FEATURE)
+        case 12:
+          gcode_G12(); // G12: Nozzle Clean
+          break;
+      #endif // NOZZLE_CLEAN_FEATURE
+
+      #if ENABLED(CNC_WORKSPACE_PLANES)
+        case 17: // G17: Select Plane XY
+          gcode_G17();
+          break;
+        case 18: // G18: Select Plane ZX
+          gcode_G18();
+          break;
+        case 19: // G19: Select Plane YZ
+          gcode_G19();
+          break;
+      #endif // CNC_WORKSPACE_PLANES
+
+      #if ENABLED(INCH_MODE_SUPPORT)
+        case 20: // G20: Inch Mode
+          gcode_G20();
+          break;
+
+        case 21: // G21: MM Mode
+          gcode_G21();
+          break;
+      #endif // INCH_MODE_SUPPORT
+
+      #if ENABLED(AUTO_BED_LEVELING_UBL) && ENABLED(UBL_G26_MESH_VALIDATION)
+        case 26: // G26: Mesh Validation Pattern generation
+          gcode_G26();
+          break;
+      #endif // AUTO_BED_LEVELING_UBL
+
+      #if ENABLED(NOZZLE_PARK_FEATURE)
+        case 27: // G27: Nozzle Park
+          gcode_G27();
+          break;
+      #endif // NOZZLE_PARK_FEATURE
+
+      case 28: // G28: Home all axes, one at a time
+        gcode_G28(false);
+        break;
+
+      #if HAS_LEVELING
+        case 29: // G29 Detailed Z probe, probes the bed at 3 or more points,
+                 // or provides access to the UBL System if enabled.
+          gcode_G29();
+          break;
+      #endif // HAS_LEVELING
+
+      #if HAS_BED_PROBE
+
+        case 30: // G30 Single Z probe
+          gcode_G30();
+          break;
+
+        #if ENABLED(Z_PROBE_SLED)
+
+            case 31: // G31: dock the sled
+              gcode_G31();
+              break;
+
+            case 32: // G32: undock the sled
+              gcode_G32();
+              break;
+
+        #endif // Z_PROBE_SLED
+
+      #endif // HAS_BED_PROBE
+
+      #if PROBE_SELECTED
+
+        #if ENABLED(DELTA_AUTO_CALIBRATION)
+
+          case 33: // G33: Delta Auto-Calibration
+            gcode_G33();
+            break;
+
+        #endif // DELTA_AUTO_CALIBRATION
+
+      #endif // PROBE_SELECTED
+
+      #if ENABLED(G38_PROBE_TARGET)
+        case 38: // G38.2 & G38.3
+          if (parser.subcode == 2 || parser.subcode == 3)
+            gcode_G38(parser.subcode == 2);
+          break;
+      #endif
+
+      case 90: // G90
+        relative_mode = false;
+        break;
+      case 91: // G91
+        relative_mode = true;
+        break;
+
+      case 92: // G92
+        gcode_G92();
+        break;
+
+      #if HAS_MESH
+        case 42:
+          gcode_G42();
+          break;
+      #endif
+
+      #if ENABLED(DEBUG_GCODE_PARSER)
+        case 800:
+          parser.debug(); // GCode Parser Test for G
+          break;
+      #endif
+    }
+    break;
+
+    case 'M': switch (parser.codenum) {
+      #if HAS_RESUME_CONTINUE
+        case 0: // M0: Unconditional stop - Wait for user button press on LCD
+        case 1: // M1: Conditional stop - Wait for user button press on LCD
+          gcode_M0_M1();
+          break;
+      #endif // ULTIPANEL
+
+      #if ENABLED(SPINDLE_LASER_ENABLE)
+        case 3:
+          gcode_M3_M4(true);   // M3: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CW
+          break;               // synchronizes with movement commands
+        case 4:
+          gcode_M3_M4(false);  // M4: turn spindle/laser on, set laser/spindle power/speed, set rotation direction CCW
+          break;               // synchronizes with movement commands
+        case 5:
+          gcode_M5();     // M5 - turn spindle/laser off
+          break;          // synchronizes with movement commands
+      #endif
+      case 17: // M17: Enable all stepper motors
+        gcode_M17();
+        break;
+
+      #if ENABLED(SDSUPPORT)
+        case 20: // M20: list SD card
+          gcode_M20(); break;
+        case 21: // M21: init SD card
+          gcode_M21(); break;
+        case 22: // M22: release SD card
+          gcode_M22(); break;
+        case 23: // M23: Select file
+          gcode_M23(); break;
+        case 24: // M24: Start SD print
+          gcode_M24(); break;
+        case 25: // M25: Pause SD print
+          gcode_M25(); break;
+        case 26: // M26: Set SD index
+          gcode_M26(); break;
+        case 27: // M27: Get SD status
+          gcode_M27(); break;
+        case 28: // M28: Start SD write
+          gcode_M28(); break;
+        case 29: // M29: Stop SD write
+          gcode_M29(); break;
+        case 30: // M30 <filename> Delete File
+          gcode_M30(); break;
+        case 32: // M32: Select file and start SD print
+          gcode_M32(); break;
+
+        #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
+          case 33: // M33: Get the long full path to a file or folder
+            gcode_M33(); break;
+        #endif
+
+        #if ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_GCODE)
+          case 34: // M34: Set SD card sorting options
+            gcode_M34(); break;
+        #endif // SDCARD_SORT_ALPHA && SDSORT_GCODE
+
+        case 928: // M928: Start SD write
+          gcode_M928(); break;
+      #endif // SDSUPPORT
+
+      case 31: // M31: Report time since the start of SD print or last M109
+        gcode_M31(); break;
+
+      case 42: // M42: Change pin state
+        gcode_M42(); break;
+
+      #if ENABLED(PINS_DEBUGGING)
+        case 43: // M43: Read pin state
+          gcode_M43(); break;
+      #endif
+
+
+      #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
+        case 48: // M48: Z probe repeatability test
+          gcode_M48();
+          break;
+      #endif // Z_MIN_PROBE_REPEATABILITY_TEST
+
+      #if ENABLED(AUTO_BED_LEVELING_UBL) && ENABLED(UBL_G26_MESH_VALIDATION)
+        case 49: // M49: Turn on or off G26 debug flag for verbose output
+          gcode_M49();
+          break;
+      #endif // AUTO_BED_LEVELING_UBL && UBL_G26_MESH_VALIDATION
+
+      case 75: // M75: Start print timer
+        gcode_M75(); break;
+      case 76: // M76: Pause print timer
+        gcode_M76(); break;
+      case 77: // M77: Stop print timer
+        gcode_M77(); break;
+
+      #if ENABLED(PRINTCOUNTER)
+        case 78: // M78: Show print statistics
+          gcode_M78(); break;
+      #endif
+
+      #if ENABLED(M100_FREE_MEMORY_WATCHER)
+        case 100: // M100: Free Memory Report
+          gcode_M100();
+          break;
+      #endif
+
+      case 104: M104(); break;    // M104: Set hot end temperature
+      case 109: M109(); break;    // M109: Wait for hotend temperature to reach target
+
+      case 110: // M110: Set Current Line Number
+        gcode_M110();
+        break;
+
+      case 111: // M111: Set debug level
+        gcode_M111();
+        break;
+
+      #if DISABLED(EMERGENCY_PARSER)
+
+        case 108: // M108: Cancel Waiting
+          gcode_M108();
+          break;
+
+        case 112: // M112: Emergency Stop
+          gcode_M112();
+          break;
+
+        case 410: // M410 quickstop - Abort all the planned moves.
+          gcode_M410();
+          break;
+
+      #endif
+
+      #if ENABLED(HOST_KEEPALIVE_FEATURE)
+        case 113: // M113: Set Host Keepalive interval
+          gcode_M113();
+          break;
+      #endif
+
+      case 140: // M140: Set bed temperature
+        gcode_M140();
+        break;
+
+
+      case 105: // M105: Report current temperature
+        gcode_M105();
+        KEEPALIVE_STATE(NOT_BUSY);
+        return; // "ok" already printed
+
+      #if ENABLED(AUTO_REPORT_TEMPERATURES) && (HAS_TEMP_HOTEND || HAS_TEMP_BED)
+        case 155: // M155: Set temperature auto-report interval
+          gcode_M155();
+          break;
+      #endif
+
+      #if HAS_TEMP_BED
+        case 190: // M190: Wait for bed temperature to reach target
+          gcode_M190();
+          break;
+      #endif // HAS_TEMP_BED
+
+      #if FAN_COUNT > 0
+        case 106: // M106: Fan On
+          gcode_M106();
+          break;
+        case 107: // M107: Fan Off
+          gcode_M107();
+          break;
+      #endif // FAN_COUNT > 0
+
+      #if ENABLED(PARK_HEAD_ON_PAUSE)
+        case 125: // M125: Store current position and move to filament change position
+          gcode_M125(); break;
+      #endif
+
+      #if ENABLED(BARICUDA)
+        // PWM for HEATER_1_PIN
+        #if HAS_HEATER_1
+          case 126: // M126: valve open
+            gcode_M126();
+            break;
+          case 127: // M127: valve closed
+            gcode_M127();
+            break;
+        #endif // HAS_HEATER_1
+
+        // PWM for HEATER_2_PIN
+        #if HAS_HEATER_2
+          case 128: // M128: valve open
+            gcode_M128();
+            break;
+          case 129: // M129: valve closed
+            gcode_M129();
+            break;
+        #endif // HAS_HEATER_2
+      #endif // BARICUDA
+
+      #if HAS_POWER_SWITCH
+
+        case 80: // M80: Turn on Power Supply
+          gcode_M80();
+          break;
+
+      #endif // HAS_POWER_SWITCH
+
+      case 81: // M81: Turn off Power, including Power Supply, if possible
+        gcode_M81();
+        break;
+
+      case 82: // M82: Set E axis normal mode (same as other axes)
+        gcode_M82();
+        break;
+      case 83: // M83: Set E axis relative mode
+        gcode_M83();
+        break;
+      case 18: // M18 => M84
+      case 84: // M84: Disable all steppers or set timeout
+        gcode_M18_M84();
+        break;
+      case 85: // M85: Set inactivity stepper shutdown timeout
+        gcode_M85();
+        break;
+      case 92: // M92: Set the steps-per-unit for one or more axes
+        gcode_M92();
+        break;
+      case 114: // M114: Report current position
+        gcode_M114();
+        break;
+      case 115: // M115: Report capabilities
+        gcode_M115();
+        break;
+      case 117: // M117: Set LCD message text, if possible
+        gcode_M117();
+        break;
+      case 118: // M118: Display a message in the host console
+        gcode_M118();
+        break;
+      case 119: // M119: Report endstop states
+        gcode_M119();
+        break;
+      case 120: // M120: Enable endstops
+        gcode_M120();
+        break;
+      case 121: // M121: Disable endstops
+        gcode_M121();
+        break;
+
+      #if ENABLED(ULTIPANEL)
+
+        case 145: // M145: Set material heatup parameters
+          gcode_M145();
+          break;
+
+      #endif
+
+      #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
+        case 149: // M149: Set temperature units
+          gcode_M149();
+          break;
+      #endif
+
+      #if HAS_COLOR_LEDS
+
+        case 150: // M150: Set Status LED Color
+          gcode_M150();
+          break;
+
+      #endif // HAS_COLOR_LEDS
+
+      #if ENABLED(MIXING_EXTRUDER)
+        case 163: // M163: Set a component weight for mixing extruder
+          gcode_M163();
+          break;
+        #if MIXING_VIRTUAL_TOOLS > 1
+          case 164: // M164: Save current mix as a virtual extruder
+            gcode_M164();
+            break;
+        #endif
+        #if ENABLED(DIRECT_MIXING_IN_G1)
+          case 165: // M165: Set multiple mix weights
+            gcode_M165();
+            break;
+        #endif
+      #endif
+
+      case 200: // M200: Set filament diameter, E to cubic units
+        M200();
+        break;
+      case 201: // M201: Set max acceleration for print moves (units/s^2)
+        gcode_M201();
+        break;
+      #if 0 // Not used for Sprinter/grbl gen6
+        case 202: // M202
+          gcode_M202();
+          break;
+      #endif
+      case 203: // M203: Set max feedrate (units/sec)
+        gcode_M203();
+        break;
+      case 204: // M204: Set acceleration
+        gcode_M204();
+        break;
+      case 205: // M205: Set advanced settings
+        gcode_M205();
+        break;
+
+      #if HAS_M206_COMMAND
+        case 206: // M206: Set home offsets
+          gcode_M206();
+          break;
+      #endif
+
+      #if ENABLED(DELTA)
+        case 665: // M665: Set delta configurations
+          gcode_M665();
+          break;
+      #endif
+
+      #if ENABLED(DELTA) || ENABLED(Z_DUAL_ENDSTOPS)
+        case 666: // M666: Set delta or dual endstop adjustment
+          gcode_M666();
+          break;
+      #endif
+
+      #if ENABLED(FWRETRACT)
+        case 207: // M207: Set Retract Length, Feedrate, and Z lift
+          M207();
+          break;
+        case 208: // M208: Set Recover (unretract) Additional Length and Feedrate
+          M208();
+          break;
+        case 209: // M209: Turn Automatic Retract Detection on/off
+          if (MIN_AUTORETRACT <= MAX_AUTORETRACT) M209();
+          break;
+      #endif // FWRETRACT
+
+      case 211: // M211: Enable, Disable, and/or Report software endstops
+        gcode_M211();
+        break;
+
+      #if HOTENDS > 1
+        case 218: // M218: Set a tool offset
+          M218();
+          break;
+      #endif
+
+      case 220: // M220: Set Feedrate Percentage: S<percent> ("FR" on your LCD)
+        gcode_M220();
+        break;
+
+      case 221: // M221: Set Flow Percentage
+        M221();
+        break;
+
+      case 226: // M226: Wait until a pin reaches a state
+        gcode_M226();
+        break;
+
+      #if HAS_SERVOS
+        case 280: // M280: Set servo position absolute
+          gcode_M280();
+          break;
+      #endif // HAS_SERVOS
+
+      #if HAS_BUZZER
+        case 300: // M300: Play beep tone
+          gcode_M300();
+          break;
+      #endif // HAS_BUZZER
+
+      #if ENABLED(PIDTEMP)
+        case 301: // M301: Set hotend PID parameters
+          gcode_M301();
+          break;
+      #endif // PIDTEMP
+
+      #if ENABLED(PIDTEMPBED)
+        case 304: // M304: Set bed PID parameters
+          gcode_M304();
+          break;
+      #endif // PIDTEMPBED
+
+      #if defined(CHDK) || HAS_PHOTOGRAPH
+        case 240: // M240: Trigger a camera by emulating a Canon RC-1 : http://www.doc-diy.net/photo/rc-1_hacked/
+          gcode_M240();
+          break;
+      #endif // CHDK || PHOTOGRAPH_PIN
+
+      #if HAS_LCD_CONTRAST
+        case 250: // M250: Set LCD contrast
+          gcode_M250();
+          break;
+      #endif // HAS_LCD_CONTRAST
+
+      #if ENABLED(EXPERIMENTAL_I2CBUS)
+
+        case 260: // M260: Send data to an i2c slave
+          gcode_M260();
+          break;
+
+        case 261: // M261: Request data from an i2c slave
+          gcode_M261();
+          break;
+
+      #endif // EXPERIMENTAL_I2CBUS
+
+      #if ENABLED(PREVENT_COLD_EXTRUSION)
+        case 302: // M302: Allow cold extrudes (set the minimum extrude temperature)
+          gcode_M302();
+          break;
+      #endif // PREVENT_COLD_EXTRUSION
+
+      case 303: // M303: PID autotune
+        M303();
+        break;
+
+      #if ENABLED(MORGAN_SCARA)
+        case 360:  // M360: SCARA Theta pos1
+          if (gcode_M360()) return;
+          break;
+        case 361:  // M361: SCARA Theta pos2
+          if (gcode_M361()) return;
+          break;
+        case 362:  // M362: SCARA Psi pos1
+          if (gcode_M362()) return;
+          break;
+        case 363:  // M363: SCARA Psi pos2
+          if (gcode_M363()) return;
+          break;
+        case 364:  // M364: SCARA Psi pos3 (90 deg to Theta)
+          if (gcode_M364()) return;
+          break;
+      #endif // SCARA
+
+      #if ENABLED(EXT_SOLENOID)
+        case 380: // M380: Activate solenoid on active extruder
+          gcode_M380();
+          break;
+        case 381: // M381: Disable all solenoids
+          gcode_M381();
+          break;
+      #endif
+
+      case 400: // M400: Finish all moves
+        gcode_M400();
+        break;
+
+      #if HAS_BED_PROBE
+        case 401: // M401: Deploy probe
+          gcode_M401();
+          break;
+        case 402: // M402: Stow probe
+          gcode_M402();
+          break;
+      #endif // HAS_BED_PROBE
+
+      #if ENABLED(FILAMENT_WIDTH_SENSOR)
+        case 404:  // M404: Enter the nominal filament width (3mm, 1.75mm ) N<3.0> or display nominal filament width
+          gcode_M404();
+          break;
+        case 405:  // M405: Turn on filament sensor for control
+          gcode_M405();
+          break;
+        case 406:  // M406: Turn off filament sensor for control
+          gcode_M406();
+          break;
+        case 407:   // M407: Display measured filament diameter
+          gcode_M407();
+          break;
+      #endif // FILAMENT_WIDTH_SENSOR
+
+      #if HAS_LEVELING
+        case 420: // M420: Enable/Disable Bed Leveling
+          gcode_M420();
+          break;
+      #endif
+
+      #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(AUTO_BED_LEVELING_BILINEAR)
+        case 421: // M421: Set a Mesh Bed Leveling Z coordinate
+          gcode_M421();
+          break;
+      #endif
+
+      #if HAS_M206_COMMAND
+        case 428: // M428: Apply current_position to home_offset
+          gcode_M428();
+          break;
+      #endif
+
+      case 500: // M500: Store settings in EEPROM
+        gcode_M500();
+        break;
+      case 501: // M501: Read settings from EEPROM
+        gcode_M501();
+        break;
+      case 502: // M502: Revert to default settings
+        gcode_M502();
+        break;
+
+      #if DISABLED(DISABLE_M503)
+        case 503: // M503: print settings currently in memory
+          gcode_M503();
+          break;
+      #endif
+
+      #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
+        case 540: // M540: Set abort on endstop hit for SD printing
+          gcode_M540();
+          break;
+      #endif
+
+      #if HAS_BED_PROBE
+        case 851: // M851: Set Z Probe Z Offset
+          gcode_M851();
+          break;
+      #endif // HAS_BED_PROBE
+
+      #if ENABLED(ADVANCED_PAUSE_FEATURE)
+        case 600: // M600: Pause for filament change
+          gcode_M600();
+          break;
+      #endif // ADVANCED_PAUSE_FEATURE
+
+      #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
+        case 605: // M605: Set Dual X Carriage movement mode
+          gcode_M605();
+          break;
+      #endif // DUAL_X_CARRIAGE
+
+      #if ENABLED(MK2_MULTIPLEXER)
+        case 702: // M702: Unload all extruders
+          gcode_M702();
+          break;
+      #endif
+
+      #if ENABLED(LIN_ADVANCE)
+        case 900: // M900: Set advance K factor.
+          gcode_M900();
+          break;
+      #endif
+
+      #if ENABLED(HAVE_TMC2130)
+        case 906: // M906: Set motor current in milliamps using axis codes X, Y, Z, E
+          gcode_M906();
+          break;
+      #endif
+
+      case 907: // M907: Set digital trimpot motor current using axis codes.
+        gcode_M907();
+        break;
+
+      #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
+
+        case 908: // M908: Control digital trimpot directly.
+          gcode_M908();
+          break;
+
+        #if ENABLED(DAC_STEPPER_CURRENT) // As with Printrbot RevF
+
+          case 909: // M909: Print digipot/DAC current value
+            gcode_M909();
+            break;
+
+          case 910: // M910: Commit digipot/DAC value to external EEPROM
+            gcode_M910();
+            break;
+
+        #endif
+
+      #endif // HAS_DIGIPOTSS || DAC_STEPPER_CURRENT
+
+      #if ENABLED(HAVE_TMC2130)
+        case 911: // M911: Report TMC2130 prewarn triggered flags
+          gcode_M911();
+          break;
+
+        case 912: // M911: Clear TMC2130 prewarn triggered flags
+          gcode_M912();
+          break;
+
+        #if ENABLED(HYBRID_THRESHOLD)
+          case 913: // M913: Set HYBRID_THRESHOLD speed.
+            gcode_M913();
+            break;
+        #endif
+
+        #if ENABLED(SENSORLESS_HOMING)
+          case 914: // M914: Set SENSORLESS_HOMING sensitivity.
+            gcode_M914();
+            break;
+        #endif
+      #endif
+
+      #if HAS_MICROSTEPS
+
+        case 350: // M350: Set microstepping mode. Warning: Steps per unit remains unchanged. S code sets stepping mode for all drivers.
+          gcode_M350();
+          break;
+
+        case 351: // M351: Toggle MS1 MS2 pins directly, S# determines MS1 or MS2, X# sets the pin high/low.
+          gcode_M351();
+          break;
+
+      #endif // HAS_MICROSTEPS
+
+      case 355: // M355 set case light brightness
+        gcode_M355();
+        break;
+
+      #if ENABLED(DEBUG_GCODE_PARSER)
+        case 800:
+          parser.debug(); // GCode Parser Test for M
+          break;
+      #endif
+
+      #if ENABLED(I2C_POSITION_ENCODERS)
+        case 860: M860(); break; // M860: Report encoder module position
+        case 861: M861(); break; // M861: Report encoder module status
+        case 862: M862(); break; // M862: Perform axis test
+        case 863: M863(); break; // M863: Calibrate steps/mm
+        case 864: M864(); break; // M864: Change module address
+        case 865: M865(); break; // M865: Check module firmware version
+        case 866: M866(); break; // M866: Report axis error count
+        case 867: M867(); break; // M867: Toggle error correction
+        case 868: M868(); break; // M868: Set error correction threshold
+        case 869: M869(); break; // M869: Report axis error
+      #endif
+
+      case 999: // M999: Restart after being Stopped
+        gcode_M999();
+        break;
+    }
+    break;
+
+    case 'T':
+      gcode_T(parser.codenum);
+      break;
+
+    default: parser.unknown_command_error();
+  }
+
+  KEEPALIVE_STATE(NOT_BUSY);
+
+  ok_to_send();
+}
