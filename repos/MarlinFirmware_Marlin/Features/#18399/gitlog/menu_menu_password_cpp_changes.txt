commit 86c811660ebf0b3fcbae2f34273d4c9d0c22abc4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:30:34 2023 -0500

    üßë‚Äçüíª Remove LOOP macros (#25917)

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index 6ca4202f6c..33d4231cd5 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -85,7 +85,7 @@ void Password::authentication_done() {
 // A single digit was completed
 void Password::digit_entered() {
   uint32_t multiplier = CAT(1e, PASSWORD_LENGTH); // 1e5 = 100000
-  LOOP_LE_N(i, digit_no) multiplier /= 10;
+  for (uint8_t i = 0; i <= digit_no; ++i) multiplier /= 10;
   value_entry += editable.uint8 * multiplier;
   string[digit_no++] = '0' + editable.uint8;
 

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index b50194d60d..6ca4202f6c 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -26,7 +26,7 @@
 
 #include "../../inc/MarlinConfigPre.h"
 
-#if BOTH(HAS_MARLINUI_MENU, PASSWORD_FEATURE)
+#if ALL(HAS_MARLINUI_MENU, PASSWORD_FEATURE)
 
 #include "../../feature/password/password.h"
 

commit 50e3e4d8628aeb2e2d106e341b9244e272965796
Author: Thomas Buck <taucher.bodensee@googlemail.com>
Date:   Sun Nov 27 01:59:13 2022 +0100

    üö∏ Optional Cutter/Laser status for HD44780 (#25003)

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index d29b77311f..b50194d60d 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -61,10 +61,10 @@ void Password::menu_password_entry() {
   FSTR_P const label = GET_TEXT_F(MSG_ENTER_DIGIT);
   EDIT_ITEM_F(uint8, label, &editable.uint8, 0, 9, digit_entered);
   MENU_ITEM_ADDON_START(utf8_strlen(label) + 1);
-    lcd_put_lchar(' ');
+    lcd_put_u8str(F(" "));
     lcd_put_lchar('1' + digit_no);
     SETCURSOR_X(LCD_WIDTH - 2);
-    lcd_put_lchar('>');
+    lcd_put_u8str(F(">"));
   MENU_ITEM_ADDON_END();
 
   ACTION_ITEM(MSG_START_OVER, start_over);

commit cb4a79173be3e8ed1ff45e7c346df1c28e744d5a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jul 1 04:49:37 2022 -0500

    ü©π Remove poison wchar_t macro

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index 89ea42d704..d29b77311f 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -61,10 +61,10 @@ void Password::menu_password_entry() {
   FSTR_P const label = GET_TEXT_F(MSG_ENTER_DIGIT);
   EDIT_ITEM_F(uint8, label, &editable.uint8, 0, 9, digit_entered);
   MENU_ITEM_ADDON_START(utf8_strlen(label) + 1);
-    lcd_put_wchar(' ');
-    lcd_put_wchar('1' + digit_no);
+    lcd_put_lchar(' ');
+    lcd_put_lchar('1' + digit_no);
     SETCURSOR_X(LCD_WIDTH - 2);
-    lcd_put_wchar('>');
+    lcd_put_lchar('>');
   MENU_ITEM_ADDON_END();
 
   ACTION_ITEM(MSG_START_OVER, start_over);

commit a5e1d4c50ae40c8203d8490be83ef86e16ebf1c2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 22 19:56:46 2022 -0500

    ‚ôªÔ∏è Apply F() to more LCD code (#24228)

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index 32059103b3..89ea42d704 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -49,18 +49,18 @@ void Password::menu_password_entry() {
   START_MENU();
 
   // "Login" or "New Code"
-  STATIC_ITEM_P(authenticating ? GET_TEXT(MSG_LOGIN_REQUIRED) : GET_TEXT(MSG_EDIT_PASSWORD), SS_CENTER|SS_INVERT);
+  STATIC_ITEM_F(authenticating ? GET_TEXT_F(MSG_LOGIN_REQUIRED) : GET_TEXT_F(MSG_EDIT_PASSWORD), SS_CENTER|SS_INVERT);
 
-  STATIC_ITEM_P(NUL_STR, SS_CENTER, string);
+  STATIC_ITEM_F(FPSTR(NUL_STR), SS_CENTER, string);
 
   #if HAS_MARLINUI_U8GLIB
-    STATIC_ITEM_P(NUL_STR, SS_CENTER, "");
+    STATIC_ITEM_F(FPSTR(NUL_STR), SS_CENTER, "");
   #endif
 
   // Make the digit edit item look like a sub-menu
-  PGM_P const label = GET_TEXT(MSG_ENTER_DIGIT);
-  EDIT_ITEM_P(uint8, label, &editable.uint8, 0, 9, digit_entered);
-  MENU_ITEM_ADDON_START(utf8_strlen_P(label) + 1);
+  FSTR_P const label = GET_TEXT_F(MSG_ENTER_DIGIT);
+  EDIT_ITEM_F(uint8, label, &editable.uint8, 0, 9, digit_entered);
+  MENU_ITEM_ADDON_START(utf8_strlen(label) + 1);
     lcd_put_wchar(' ');
     lcd_put_wchar('1' + digit_no);
     SETCURSOR_X(LCD_WIDTH - 2);

commit ab46b7e2f298826a5512569d6e79bb59a7a6b8ea
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 25 15:33:03 2022 -0600

    üßë‚Äçüíª HAS_MARLINUI_MENU, HAS_MANUAL_MOVE_MENU

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index d3a35abff2..32059103b3 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -26,7 +26,7 @@
 
 #include "../../inc/MarlinConfigPre.h"
 
-#if BOTH(HAS_LCD_MENU, PASSWORD_FEATURE)
+#if BOTH(HAS_MARLINUI_MENU, PASSWORD_FEATURE)
 
 #include "../../feature/password/password.h"
 
@@ -184,4 +184,4 @@ void Password::menu_password() {
   END_MENU();
 }
 
-#endif // HAS_LCD_MENU && PASSWORD_FEATURE
+#endif // HAS_MARLINUI_MENU && PASSWORD_FEATURE

commit f9051e5469cdd99bcb93bc46124e95984c279984
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jun 27 00:33:44 2021 -0500

    ‚ôªÔ∏è Refactor status screen timeout

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index 590ce48d59..d3a35abff2 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -177,7 +177,7 @@ void Password::menu_password() {
   START_MENU();
   BACK_ITEM(MSG_ADVANCED_SETTINGS);
   SUBMENU(MSG_CHANGE_PASSWORD, screen_set_password);
-  ACTION_ITEM(MSG_REMOVE_PASSWORD, []{ ui.save_previous_screen(); remove_password(); } );
+  ACTION_ITEM(MSG_REMOVE_PASSWORD, []{ ui.push_current_screen(); remove_password(); } );
   #if ENABLED(EEPROM_SETTINGS)
     ACTION_ITEM(MSG_STORE_EEPROM, ui.store_settings);
   #endif

commit 8857fc6c4b7dda4bd4a0907050c81183d989c0e9
Author: ellensp <ellensp@hotmail.com>
Date:   Thu Mar 11 11:02:35 2021 +1300

    Fix password menu stickiness before first auth (#21295)

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index 80c5c3dc66..590ce48d59 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -44,12 +44,18 @@ static uint8_t digit_no;
 // Screen for both editing and setting the password
 //
 void Password::menu_password_entry() {
+  ui.defer_status_screen(!did_first_run); // No timeout to status before first auth
+
   START_MENU();
 
   // "Login" or "New Code"
   STATIC_ITEM_P(authenticating ? GET_TEXT(MSG_LOGIN_REQUIRED) : GET_TEXT(MSG_EDIT_PASSWORD), SS_CENTER|SS_INVERT);
 
-  STATIC_ITEM_P(NUL_STR, SS_CENTER|SS_INVERT, string);
+  STATIC_ITEM_P(NUL_STR, SS_CENTER, string);
+
+  #if HAS_MARLINUI_U8GLIB
+    STATIC_ITEM_P(NUL_STR, SS_CENTER, "");
+  #endif
 
   // Make the digit edit item look like a sub-menu
   PGM_P const label = GET_TEXT(MSG_ENTER_DIGIT);
@@ -57,7 +63,7 @@ void Password::menu_password_entry() {
   MENU_ITEM_ADDON_START(utf8_strlen_P(label) + 1);
     lcd_put_wchar(' ');
     lcd_put_wchar('1' + digit_no);
-    SETCURSOR_X(LCD_WIDTH - 1);
+    SETCURSOR_X(LCD_WIDTH - 2);
     lcd_put_wchar('>');
   MENU_ITEM_ADDON_END();
 
@@ -104,7 +110,7 @@ void Password::screen_password_entry() {
   value_entry = 0;
   digit_no = 0;
   editable.uint8 = 0;
-  memset(string, '-', PASSWORD_LENGTH);
+  memset(string, '_', PASSWORD_LENGTH);
   string[PASSWORD_LENGTH] = '\0';
   menu_password_entry();
 }
@@ -120,7 +126,6 @@ void Password::authenticate_user(const screenFunc_t in_succ_scr, const screenFun
   if (is_set) {
     authenticating = true;
     ui.goto_screen(screen_password_entry);
-    ui.defer_status_screen();
     ui.update();
   }
   else {

commit d33fe2378c25d258b02440aef6cc31e36753f98f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 22 15:01:19 2021 -0600

    Move common strings (#20846)

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index c58931cf2e..80c5c3dc66 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -49,7 +49,7 @@ void Password::menu_password_entry() {
   // "Login" or "New Code"
   STATIC_ITEM_P(authenticating ? GET_TEXT(MSG_LOGIN_REQUIRED) : GET_TEXT(MSG_EDIT_PASSWORD), SS_CENTER|SS_INVERT);
 
-  STATIC_ITEM_P(PSTR(""), SS_CENTER|SS_INVERT, string);
+  STATIC_ITEM_P(NUL_STR, SS_CENTER|SS_INVERT, string);
 
   // Make the digit edit item look like a sub-menu
   PGM_P const label = GET_TEXT(MSG_ENTER_DIGIT);

commit ecd8227de0c17427f9f8d76cfc279acbc5a0a188
Author: Thomas Niccolo Reyes <niccoreyes@gmail.com>
Date:   Wed Nov 18 12:30:32 2020 +0800

    Open File Browser on Media Insert (option) (#20151)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index c3924b5686..c58931cf2e 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -152,19 +152,17 @@ void Password::menu_password_report() {
   END_SCREEN();
 }
 
-void Password::set_password_done() {
-  is_set = true;
+void Password::set_password_done(const bool with_set/*=true*/) {
+  is_set = with_set;
   value = value_entry;
   ui.completion_feedback(true);
   ui.goto_screen(menu_password_report);
 }
 
 void Password::remove_password() {
-  is_set = false;
   string[0] = '0';
   string[1] = '\0';
-  ui.completion_feedback(true);
-  ui.goto_screen(menu_password_report);
+  set_password_done(false);
 }
 
 //

commit 4f67642122059a9270f9e3690978248355f88e72
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 21 05:21:34 2020 -0500

    Header for individual menus

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
index f8e0b56721..c3924b5686 100644
--- a/Marlin/src/lcd/menu/menu_password.cpp
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -30,7 +30,7 @@
 
 #include "../../feature/password/password.h"
 
-#include "menu.h"
+#include "menu_item.h"
 #include "menu_addon.h"
 
 void menu_advanced_settings();

commit 852e5ae0421810ecc6f44631237208030e70751f
Author: sherwin-dc <59867245+sherwin-dc@users.noreply.github.com>
Date:   Sun Aug 9 09:00:42 2020 +0800

    Password via G-code and MarlinUI (#18399)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/menu/menu_password.cpp b/Marlin/src/lcd/menu/menu_password.cpp
new file mode 100644
index 0000000000..f8e0b56721
--- /dev/null
+++ b/Marlin/src/lcd/menu/menu_password.cpp
@@ -0,0 +1,184 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+
+//
+// Advanced Settings Menus
+//
+
+#include "../../inc/MarlinConfigPre.h"
+
+#if BOTH(HAS_LCD_MENU, PASSWORD_FEATURE)
+
+#include "../../feature/password/password.h"
+
+#include "menu.h"
+#include "menu_addon.h"
+
+void menu_advanced_settings();
+
+screenFunc_t success_screen, fail_screen;
+bool authenticating; // = false
+char string[(PASSWORD_LENGTH) + 1];
+static uint8_t digit_no;
+
+//
+// Screen for both editing and setting the password
+//
+void Password::menu_password_entry() {
+  START_MENU();
+
+  // "Login" or "New Code"
+  STATIC_ITEM_P(authenticating ? GET_TEXT(MSG_LOGIN_REQUIRED) : GET_TEXT(MSG_EDIT_PASSWORD), SS_CENTER|SS_INVERT);
+
+  STATIC_ITEM_P(PSTR(""), SS_CENTER|SS_INVERT, string);
+
+  // Make the digit edit item look like a sub-menu
+  PGM_P const label = GET_TEXT(MSG_ENTER_DIGIT);
+  EDIT_ITEM_P(uint8, label, &editable.uint8, 0, 9, digit_entered);
+  MENU_ITEM_ADDON_START(utf8_strlen_P(label) + 1);
+    lcd_put_wchar(' ');
+    lcd_put_wchar('1' + digit_no);
+    SETCURSOR_X(LCD_WIDTH - 1);
+    lcd_put_wchar('>');
+  MENU_ITEM_ADDON_END();
+
+  ACTION_ITEM(MSG_START_OVER, start_over);
+
+  if (!authenticating) BACK_ITEM(MSG_BUTTON_CANCEL);
+
+  END_MENU();
+}
+
+//
+// Authentication check
+//
+void Password::authentication_done() {
+  ui.goto_screen(is_locked ? fail_screen : success_screen);
+  ui.completion_feedback(!is_locked);
+}
+
+// A single digit was completed
+void Password::digit_entered() {
+  uint32_t multiplier = CAT(1e, PASSWORD_LENGTH); // 1e5 = 100000
+  LOOP_LE_N(i, digit_no) multiplier /= 10;
+  value_entry += editable.uint8 * multiplier;
+  string[digit_no++] = '0' + editable.uint8;
+
+  // Exit edit screen menu and go to another screen
+  ui.goto_previous_screen();
+  ui.use_click();
+  ui.goto_screen(menu_password_entry);
+
+  // After password has been keyed in
+  if (digit_no == PASSWORD_LENGTH) {
+    if (authenticating)
+      authentication_check();
+    else
+      set_password_done();
+  }
+}
+
+//
+// Set/Change Password
+//
+void Password::screen_password_entry() {
+  value_entry = 0;
+  digit_no = 0;
+  editable.uint8 = 0;
+  memset(string, '-', PASSWORD_LENGTH);
+  string[PASSWORD_LENGTH] = '\0';
+  menu_password_entry();
+}
+
+void Password::screen_set_password() {
+  authenticating = false;
+  screen_password_entry();
+}
+
+void Password::authenticate_user(const screenFunc_t in_succ_scr, const screenFunc_t in_fail_scr) {
+  success_screen = in_succ_scr;
+  fail_screen = in_fail_scr;
+  if (is_set) {
+    authenticating = true;
+    ui.goto_screen(screen_password_entry);
+    ui.defer_status_screen();
+    ui.update();
+  }
+  else {
+    ui.goto_screen(in_succ_scr);
+    is_locked = false;
+  }
+}
+
+void Password::access_menu_password() {
+  authenticate_user(menu_password, menu_advanced_settings);
+}
+
+#if ENABLED(PASSWORD_ON_SD_PRINT_MENU)
+  void Password::media_gatekeeper() {
+    authenticate_user(menu_media, menu_main);
+  }
+#endif
+
+void Password::start_over() {
+  ui.goto_previous_screen(); // Goto previous screen, if any
+  ui.goto_screen(screen_password_entry);
+}
+
+void Password::menu_password_report() {
+  START_SCREEN();
+  BACK_ITEM(MSG_PASSWORD_SETTINGS);
+  STATIC_ITEM(MSG_PASSWORD_SET, SS_LEFT, string);
+  STATIC_ITEM(MSG_REMINDER_SAVE_SETTINGS, SS_LEFT);
+  END_SCREEN();
+}
+
+void Password::set_password_done() {
+  is_set = true;
+  value = value_entry;
+  ui.completion_feedback(true);
+  ui.goto_screen(menu_password_report);
+}
+
+void Password::remove_password() {
+  is_set = false;
+  string[0] = '0';
+  string[1] = '\0';
+  ui.completion_feedback(true);
+  ui.goto_screen(menu_password_report);
+}
+
+//
+// Password Menu
+//
+void Password::menu_password() {
+  START_MENU();
+  BACK_ITEM(MSG_ADVANCED_SETTINGS);
+  SUBMENU(MSG_CHANGE_PASSWORD, screen_set_password);
+  ACTION_ITEM(MSG_REMOVE_PASSWORD, []{ ui.save_previous_screen(); remove_password(); } );
+  #if ENABLED(EEPROM_SETTINGS)
+    ACTION_ITEM(MSG_STORE_EEPROM, ui.store_settings);
+  #endif
+  END_MENU();
+}
+
+#endif // HAS_LCD_MENU && PASSWORD_FEATURE
