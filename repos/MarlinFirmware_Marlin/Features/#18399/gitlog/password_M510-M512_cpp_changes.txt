commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    ðŸŽ¨ Fewer serial macros

diff --git a/Marlin/src/gcode/feature/password/M510-M512.cpp b/Marlin/src/gcode/feature/password/M510-M512.cpp
index eeb9b1df22..a5f017f5f3 100644
--- a/Marlin/src/gcode/feature/password/M510-M512.cpp
+++ b/Marlin/src/gcode/feature/password/M510-M512.cpp
@@ -66,7 +66,7 @@ void GcodeSuite::M510() {
       if (password.value_entry < CAT(1e, PASSWORD_LENGTH)) {
         password.is_set = true;
         password.value = password.value_entry;
-        SERIAL_ECHOLNPAIR(STR_PASSWORD_SET, password.value); // TODO: Update password.string
+        SERIAL_ECHOLNPGM(STR_PASSWORD_SET, password.value); // TODO: Update password.string
       }
       else
         SERIAL_ECHOLNPGM(STR_PASSWORD_TOO_LONG);

commit 1f7c085527ef0237bfc9068c141288b159ef309a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Oct 20 22:36:22 2020 -0500

    ESP32: i2s_init requires I2S_STEPPER_STREAM

diff --git a/Marlin/src/gcode/feature/password/M510-M512.cpp b/Marlin/src/gcode/feature/password/M510-M512.cpp
index 79f1da065b..eeb9b1df22 100644
--- a/Marlin/src/gcode/feature/password/M510-M512.cpp
+++ b/Marlin/src/gcode/feature/password/M510-M512.cpp
@@ -58,7 +58,7 @@ void GcodeSuite::M510() {
     if (password.is_set && parser.ulongval('P') != password.value) {
       SERIAL_ECHOLNPGM(STR_WRONG_PASSWORD);
       return;
-     }
+    }
 
     if (parser.seenval('S')) {
       password.value_entry = parser.ulongval('S');

commit c488070859c1995fe957938b1b6302c4eeef1ea3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 23:57:51 2020 -0500

    Minor cleanup w/r/t LEDs

diff --git a/Marlin/src/gcode/feature/password/M510-M512.cpp b/Marlin/src/gcode/feature/password/M510-M512.cpp
index f26fb75fda..79f1da065b 100644
--- a/Marlin/src/gcode/feature/password/M510-M512.cpp
+++ b/Marlin/src/gcode/feature/password/M510-M512.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit 8318d90e859219af9aa750ba2b91c7568f4dac55
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Aug 8 20:13:15 2020 -0500

    Password followup

diff --git a/Marlin/src/gcode/feature/password/M510-M512.cpp b/Marlin/src/gcode/feature/password/M510-M512.cpp
index bcdeb7b91c..f26fb75fda 100644
--- a/Marlin/src/gcode/feature/password/M510-M512.cpp
+++ b/Marlin/src/gcode/feature/password/M510-M512.cpp
@@ -60,8 +60,8 @@ void GcodeSuite::M510() {
       return;
      }
 
-    if (parser.seenval('N')) {
-      password.value_entry = parser.ulongval('N');
+    if (parser.seenval('S')) {
+      password.value_entry = parser.ulongval('S');
 
       if (password.value_entry < CAT(1e, PASSWORD_LENGTH)) {
         password.is_set = true;

commit 852e5ae0421810ecc6f44631237208030e70751f
Author: sherwin-dc <59867245+sherwin-dc@users.noreply.github.com>
Date:   Sun Aug 9 09:00:42 2020 +0800

    Password via G-code and MarlinUI (#18399)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/password/M510-M512.cpp b/Marlin/src/gcode/feature/password/M510-M512.cpp
new file mode 100644
index 0000000000..bcdeb7b91c
--- /dev/null
+++ b/Marlin/src/gcode/feature/password/M510-M512.cpp
@@ -0,0 +1,83 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../../inc/MarlinConfigPre.h"
+
+#if ENABLED(PASSWORD_FEATURE)
+
+#include "../../../feature/password/password.h"
+#include "../../../core/serial.h"
+#include "../../gcode.h"
+
+//
+// M510: Lock Printer
+//
+void GcodeSuite::M510() {
+  password.lock_machine();
+}
+
+//
+// M511: Unlock Printer
+//
+#if ENABLED(PASSWORD_UNLOCK_GCODE)
+
+  void GcodeSuite::M511() {
+    if (password.is_locked) {
+      password.value_entry = parser.ulongval('P');
+      password.authentication_check();
+    }
+  }
+
+#endif // PASSWORD_UNLOCK_GCODE
+
+//
+// M512: Set/Change/Remove Password
+//
+#if ENABLED(PASSWORD_CHANGE_GCODE)
+
+  void GcodeSuite::M512() {
+    if (password.is_set && parser.ulongval('P') != password.value) {
+      SERIAL_ECHOLNPGM(STR_WRONG_PASSWORD);
+      return;
+     }
+
+    if (parser.seenval('N')) {
+      password.value_entry = parser.ulongval('N');
+
+      if (password.value_entry < CAT(1e, PASSWORD_LENGTH)) {
+        password.is_set = true;
+        password.value = password.value_entry;
+        SERIAL_ECHOLNPAIR(STR_PASSWORD_SET, password.value); // TODO: Update password.string
+      }
+      else
+        SERIAL_ECHOLNPGM(STR_PASSWORD_TOO_LONG);
+    }
+    else {
+      password.is_set = false;
+      SERIAL_ECHOLNPGM(STR_PASSWORD_REMOVED);
+    }
+    SERIAL_ECHOLNPGM(STR_REMINDER_SAVE_SETTINGS);
+  }
+
+#endif // PASSWORD_CHANGE_GCODE
+
+#endif // PASSWORD_FEATURE
