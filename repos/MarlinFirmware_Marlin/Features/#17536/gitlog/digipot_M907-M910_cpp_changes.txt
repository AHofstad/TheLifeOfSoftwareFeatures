commit 08fe8a3076c21f881f151bc596e54ff24831bdea
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 12 13:08:17 2024 -0500

    üîß Undef motor current PWM for unused axes

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index e36cf76e88..ab1c316705 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -68,7 +68,7 @@ void GcodeSuite::M907() {
       #define HAS_X_Y_XY_I_J_K_U_V_W 1
     #endif
 
-    #if HAS_X_Y_XY_I_J_K_U_V_W || ANY_PIN(MOTOR_CURRENT_PWM_E, MOTOR_CURRENT_PWM_Z)
+    #if HAS_X_Y_XY_I_J_K_U_V_W || HAS_MOTOR_CURRENT_PWM_E || PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
 
       if (!parser.seen("S"
         #if HAS_X_Y_XY_I_J_K_U_V_W
@@ -77,7 +77,7 @@ void GcodeSuite::M907() {
         #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
           "Z"
         #endif
-        #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+        #if HAS_MOTOR_CURRENT_PWM_E
           "E"
         #endif
       )) return M907_report();
@@ -94,7 +94,7 @@ void GcodeSuite::M907() {
       #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
         if (parser.seenval('Z')) stepper.set_digipot_current(1, parser.value_int());
       #endif
-      #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+      #if HAS_MOTOR_CURRENT_PWM_E
         if (parser.seenval('E')) stepper.set_digipot_current(2, parser.value_int());
       #endif
 
@@ -133,7 +133,7 @@ void GcodeSuite::M907() {
       SERIAL_ECHOLNPGM_P(                                     // PWM-based has 3 values:
           PSTR("  M907 X"), stepper.motor_current_setting[0]  // X, Y, (I, J, K, U, V, W)
         , SP_Z_STR,         stepper.motor_current_setting[1]  // Z
-        #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+        #if HAS_MOTOR_CURRENT_PWM_E
           , SP_E_STR,       stepper.motor_current_setting[2]  // E
         #endif
       );

commit cd357b027881dc1d3a432127f74d54d3d9ee91db
Author: Holger M√∂√üinger <hm2dev@users.noreply.github.com>
Date:   Wed Mar 27 20:38:08 2024 +0100

    üîßüö∏ Tweaks for (MiniRambo) CNC (#26892)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 55d43f1b41..e36cf76e88 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -133,7 +133,9 @@ void GcodeSuite::M907() {
       SERIAL_ECHOLNPGM_P(                                     // PWM-based has 3 values:
           PSTR("  M907 X"), stepper.motor_current_setting[0]  // X, Y, (I, J, K, U, V, W)
         , SP_Z_STR,         stepper.motor_current_setting[1]  // Z
-        , SP_E_STR,         stepper.motor_current_setting[2]  // E
+        #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+          , SP_E_STR,       stepper.motor_current_setting[2]  // E
+        #endif
       );
     #elif HAS_MOTOR_CURRENT_SPI
       SERIAL_ECHOPGM("  M907");                               // SPI-based has 5 values:

commit 669814d0d408a622f020a55971ba04030e4fa4bf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 7 23:40:54 2024 -0600

    ‚ú® MARLIN_SMALL_BUILD option (#26775)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 8869f8d494..55d43f1b41 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -126,6 +126,8 @@ void GcodeSuite::M907() {
 #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM
 
   void GcodeSuite::M907_report(const bool forReplay/*=true*/) {
+    TERN_(MARLIN_SMALL_BUILD, return);
+
     report_heading_etc(forReplay, F(STR_STEPPER_MOTOR_CURRENTS));
     #if HAS_MOTOR_CURRENT_PWM
       SERIAL_ECHOLNPGM_P(                                     // PWM-based has 3 values:

commit 86c811660ebf0b3fcbae2f34273d4c9d0c22abc4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:30:34 2023 -0500

    üßë‚Äçüíª Remove LOOP macros (#25917)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 9ebe713cde..8869f8d494 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -51,7 +51,7 @@ void GcodeSuite::M907() {
     if (!parser.seen("BS" STR_AXES_LOGICAL))
       return M907_report();
 
-    if (parser.seenval('S')) LOOP_L_N(i, MOTOR_CURRENT_COUNT) stepper.set_digipot_current(i, parser.value_int());
+    if (parser.seenval('S')) for (uint8_t i = 0; i < MOTOR_CURRENT_COUNT; ++i) stepper.set_digipot_current(i, parser.value_int());
     LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) stepper.set_digipot_current(i, parser.value_int());    // X Y Z (I J K U V W) E (map to drivers according to DIGIPOT_CHANNELS. Default with NUM_AXES 3: map X Y Z E to X Y Z E0)
     // Additional extruders use B,C.
     // TODO: Change these parameters because 'E' is used and D should be reserved for debugging. B<index>?
@@ -82,7 +82,7 @@ void GcodeSuite::M907() {
         #endif
       )) return M907_report();
 
-      if (parser.seenval('S')) LOOP_L_N(a, MOTOR_CURRENT_COUNT) stepper.set_digipot_current(a, parser.value_int());
+      if (parser.seenval('S')) for (uint8_t a = 0; a < MOTOR_CURRENT_COUNT; ++a) stepper.set_digipot_current(a, parser.value_int());
 
       #if HAS_X_Y_XY_I_J_K_U_V_W
         if (NUM_AXIS_GANG(
@@ -104,7 +104,7 @@ void GcodeSuite::M907() {
 
   #if HAS_MOTOR_CURRENT_I2C
     // this one uses actual amps in floating point
-    if (parser.seenval('S')) LOOP_L_N(q, DIGIPOT_I2C_NUM_CHANNELS) digipot_i2c.set_current(q, parser.value_float());
+    if (parser.seenval('S')) for (uint8_t q = 0; q < DIGIPOT_I2C_NUM_CHANNELS; ++q) digipot_i2c.set_current(q, parser.value_float());
       LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) digipot_i2c.set_current(i, parser.value_float());      // X Y Z (I J K U V W) E (map to drivers according to pots adresses. Default with NUM_AXES 3 X Y Z E: map to X Y Z E0)
     // Additional extruders use B,C,D.
     // TODO: Change these parameters because 'E' is used and because 'D' should be reserved for debugging. B<index>?

commit 31413a7d773e384753dd889ca2f5dcd8aa1fdeca
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon May 23 21:59:36 2022 -0500

    üßë‚Äçüíª Combined axis strings

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index f1f1bcb484..9ebe713cde 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -48,7 +48,7 @@
 void GcodeSuite::M907() {
   #if HAS_MOTOR_CURRENT_SPI
 
-    if (!parser.seen("BS" LOGICAL_AXES_STRING))
+    if (!parser.seen("BS" STR_AXES_LOGICAL))
       return M907_report();
 
     if (parser.seenval('S')) LOOP_L_N(i, MOTOR_CURRENT_COUNT) stepper.set_digipot_current(i, parser.value_int());

commit 8aaf64d9172bacff2231823ccedbe27a1a968d45
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Tue Apr 19 05:15:15 2022 +0200

    üí• Update Motor Current G-codes for extra axes (#23975)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 3b66f78593..f1f1bcb484 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -40,8 +40,10 @@
 
 /**
  * M907: Set digital trimpot motor current using axis codes X [Y] [Z] [I] [J] [K] [U] [V] [W] [E]
- *   B<current> - Special case for 4th (E) axis
- *   S<current> - Special case to set first 3 axes
+ *   B<current> - Special case for E1 (Requires DIGIPOTSS_PIN or DIGIPOT_MCP4018 or DIGIPOT_MCP4451)
+ *   C<current> - Special case for E2 (Requires DIGIPOTSS_PIN or DIGIPOT_MCP4018 or DIGIPOT_MCP4451)
+ *   S<current> - Set current in mA for all axes (Requires DIGIPOTSS_PIN or DIGIPOT_MCP4018 or DIGIPOT_MCP4451), or
+ *                Set percentage of max current for all axes (Requires HAS_DIGIPOT_DAC)
  */
 void GcodeSuite::M907() {
   #if HAS_MOTOR_CURRENT_SPI
@@ -49,47 +51,65 @@ void GcodeSuite::M907() {
     if (!parser.seen("BS" LOGICAL_AXES_STRING))
       return M907_report();
 
-    LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) stepper.set_digipot_current(i, parser.value_int());
-    if (parser.seenval('B')) stepper.set_digipot_current(4, parser.value_int());
-    if (parser.seenval('S')) LOOP_LE_N(i, 4) stepper.set_digipot_current(i, parser.value_int());
+    if (parser.seenval('S')) LOOP_L_N(i, MOTOR_CURRENT_COUNT) stepper.set_digipot_current(i, parser.value_int());
+    LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) stepper.set_digipot_current(i, parser.value_int());    // X Y Z (I J K U V W) E (map to drivers according to DIGIPOT_CHANNELS. Default with NUM_AXES 3: map X Y Z E to X Y Z E0)
+    // Additional extruders use B,C.
+    // TODO: Change these parameters because 'E' is used and D should be reserved for debugging. B<index>?
+    #if E_STEPPERS >= 2
+      if (parser.seenval('B')) stepper.set_digipot_current(E_AXIS + 1, parser.value_int());
+      #if E_STEPPERS >= 3
+        if (parser.seenval('C')) stepper.set_digipot_current(E_AXIS + 2, parser.value_int());
+      #endif
+    #endif
 
   #elif HAS_MOTOR_CURRENT_PWM
 
-    if (!parser.seen(
-      #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K, MOTOR_CURRENT_PWM_U, MOTOR_CURRENT_PWM_V, MOTOR_CURRENT_PWM_W)
-        "XY" SECONDARY_AXIS_GANG("I", "J", "K", "U", "V", "W")
+    #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K, MOTOR_CURRENT_PWM_U, MOTOR_CURRENT_PWM_V, MOTOR_CURRENT_PWM_W)
+      #define HAS_X_Y_XY_I_J_K_U_V_W 1
+    #endif
+
+    #if HAS_X_Y_XY_I_J_K_U_V_W || ANY_PIN(MOTOR_CURRENT_PWM_E, MOTOR_CURRENT_PWM_Z)
+
+      if (!parser.seen("S"
+        #if HAS_X_Y_XY_I_J_K_U_V_W
+          "XY" SECONDARY_AXIS_GANG("I", "J", "K", "U", "V", "W")
+        #endif
+        #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
+          "Z"
+        #endif
+        #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+          "E"
+        #endif
+      )) return M907_report();
+
+      if (parser.seenval('S')) LOOP_L_N(a, MOTOR_CURRENT_COUNT) stepper.set_digipot_current(a, parser.value_int());
+
+      #if HAS_X_Y_XY_I_J_K_U_V_W
+        if (NUM_AXIS_GANG(
+               parser.seenval('X'), || parser.seenval('Y'), || false,
+            || parser.seenval('I'), || parser.seenval('J'), || parser.seenval('K'),
+            || parser.seenval('U'), || parser.seenval('V'), || parser.seenval('W')
+        )) stepper.set_digipot_current(0, parser.value_int());
       #endif
       #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
-        "Z"
+        if (parser.seenval('Z')) stepper.set_digipot_current(1, parser.value_int());
       #endif
       #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
-        "E"
+        if (parser.seenval('E')) stepper.set_digipot_current(2, parser.value_int());
       #endif
-    )) return M907_report();
 
-    #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K, MOTOR_CURRENT_PWM_U, MOTOR_CURRENT_PWM_V, MOTOR_CURRENT_PWM_W)
-      if (NUM_AXIS_GANG(
-             parser.seenval('X'), || parser.seenval('Y'), || false,
-          || parser.seenval('I'), || parser.seenval('J'), || parser.seenval('K'),
-          || parser.seenval('U'), || parser.seenval('V'), || parser.seenval('W')
-      )) stepper.set_digipot_current(0, parser.value_int());
-    #endif
-    #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
-      if (parser.seenval('Z')) stepper.set_digipot_current(1, parser.value_int());
-    #endif
-    #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
-      if (parser.seenval('E')) stepper.set_digipot_current(2, parser.value_int());
     #endif
 
   #endif // HAS_MOTOR_CURRENT_PWM
 
   #if HAS_MOTOR_CURRENT_I2C
     // this one uses actual amps in floating point
-    LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) digipot_i2c.set_current(i, parser.value_float());
-    // Additional extruders use B,C,D for channels 4,5,6.
-    // TODO: Change these parameters because 'E' is used. B<index>?
-    #if HAS_EXTRUDERS
-      for (uint8_t i = E_AXIS + 1; i < DIGIPOT_I2C_NUM_CHANNELS; i++)
+    if (parser.seenval('S')) LOOP_L_N(q, DIGIPOT_I2C_NUM_CHANNELS) digipot_i2c.set_current(q, parser.value_float());
+      LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) digipot_i2c.set_current(i, parser.value_float());      // X Y Z (I J K U V W) E (map to drivers according to pots adresses. Default with NUM_AXES 3 X Y Z E: map to X Y Z E0)
+    // Additional extruders use B,C,D.
+    // TODO: Change these parameters because 'E' is used and because 'D' should be reserved for debugging. B<index>?
+    #if E_STEPPERS >= 2
+      for (uint8_t i = E_AXIS + 1; i < _MAX(DIGIPOT_I2C_NUM_CHANNELS, (NUM_AXES + 3)); i++)
         if (parser.seenval('B' + i - (E_AXIS + 1))) digipot_i2c.set_current(i, parser.value_float());
     #endif
   #endif
@@ -97,9 +117,9 @@ void GcodeSuite::M907() {
   #if HAS_MOTOR_CURRENT_DAC
     if (parser.seenval('S')) {
       const float dac_percent = parser.value_float();
-      LOOP_LE_N(i, 4) stepper_dac.set_current_percent(i, dac_percent);
+      LOOP_LOGICAL_AXES(i) stepper_dac.set_current_percent(i, dac_percent);
     }
-    LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) stepper_dac.set_current_percent(i, parser.value_float());
+    LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) stepper_dac.set_current_percent(i, parser.value_float());   // X Y Z (I J K U V W) E (map to drivers according to DAC_STEPPER_ORDER. Default with NUM_AXES 3: X Y Z E map to X Y Z E0)
   #endif
 }
 
@@ -119,8 +139,14 @@ void GcodeSuite::M907() {
         SERIAL_CHAR(' ', IAXIS_CHAR(q));
         SERIAL_ECHO(stepper.motor_current_setting[q]);
       }
-      SERIAL_CHAR(' ', 'B');                                  // B (maps to E1 by default)
-      SERIAL_ECHOLN(stepper.motor_current_setting[4]);
+      #if E_STEPPERS >= 2
+        SERIAL_ECHOPGM_P(PSTR(" B"), stepper.motor_current_setting[E_AXIS + 1]  // B (maps to E1 with NUM_AXES 3 according to DIGIPOT_CHANNELS)
+          #if E_STEPPERS >= 3
+            , PSTR(" C"), stepper.motor_current_setting[E_AXIS + 2]             // C (mapping to E2 must be defined by DIGIPOT_CHANNELS)
+          #endif
+        );
+      #endif
+      SERIAL_EOL();
     #endif
   }
 

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 95adde3ea5..3b66f78593 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -39,7 +39,7 @@
 #endif
 
 /**
- * M907: Set digital trimpot motor current using axis codes X [Y] [Z] [E]
+ * M907: Set digital trimpot motor current using axis codes X [Y] [Z] [I] [J] [K] [U] [V] [W] [E]
  *   B<current> - Special case for 4th (E) axis
  *   S<current> - Special case to set first 3 axes
  */
@@ -49,15 +49,15 @@ void GcodeSuite::M907() {
     if (!parser.seen("BS" LOGICAL_AXES_STRING))
       return M907_report();
 
-    LOOP_LOGICAL_AXES(i) if (parser.seenval(axis_codes[i])) stepper.set_digipot_current(i, parser.value_int());
+    LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) stepper.set_digipot_current(i, parser.value_int());
     if (parser.seenval('B')) stepper.set_digipot_current(4, parser.value_int());
     if (parser.seenval('S')) LOOP_LE_N(i, 4) stepper.set_digipot_current(i, parser.value_int());
 
   #elif HAS_MOTOR_CURRENT_PWM
 
     if (!parser.seen(
-      #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY)
-        "XY"
+      #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K, MOTOR_CURRENT_PWM_U, MOTOR_CURRENT_PWM_V, MOTOR_CURRENT_PWM_W)
+        "XY" SECONDARY_AXIS_GANG("I", "J", "K", "U", "V", "W")
       #endif
       #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
         "Z"
@@ -67,8 +67,12 @@ void GcodeSuite::M907() {
       #endif
     )) return M907_report();
 
-    #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY)
-      if (parser.seenval('X') || parser.seenval('Y')) stepper.set_digipot_current(0, parser.value_int());
+    #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K, MOTOR_CURRENT_PWM_U, MOTOR_CURRENT_PWM_V, MOTOR_CURRENT_PWM_W)
+      if (NUM_AXIS_GANG(
+             parser.seenval('X'), || parser.seenval('Y'), || false,
+          || parser.seenval('I'), || parser.seenval('J'), || parser.seenval('K'),
+          || parser.seenval('U'), || parser.seenval('V'), || parser.seenval('W')
+      )) stepper.set_digipot_current(0, parser.value_int());
     #endif
     #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
       if (parser.seenval('Z')) stepper.set_digipot_current(1, parser.value_int());
@@ -81,7 +85,7 @@ void GcodeSuite::M907() {
 
   #if HAS_MOTOR_CURRENT_I2C
     // this one uses actual amps in floating point
-    LOOP_LOGICAL_AXES(i) if (parser.seenval(axis_codes[i])) digipot_i2c.set_current(i, parser.value_float());
+    LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) digipot_i2c.set_current(i, parser.value_float());
     // Additional extruders use B,C,D for channels 4,5,6.
     // TODO: Change these parameters because 'E' is used. B<index>?
     #if HAS_EXTRUDERS
@@ -95,7 +99,7 @@ void GcodeSuite::M907() {
       const float dac_percent = parser.value_float();
       LOOP_LE_N(i, 4) stepper_dac.set_current_percent(i, dac_percent);
     }
-    LOOP_LOGICAL_AXES(i) if (parser.seenval(axis_codes[i])) stepper_dac.set_current_percent(i, parser.value_float());
+    LOOP_LOGICAL_AXES(i) if (parser.seenval(IAXIS_CHAR(i))) stepper_dac.set_current_percent(i, parser.value_float());
   #endif
 }
 
@@ -104,15 +108,15 @@ void GcodeSuite::M907() {
   void GcodeSuite::M907_report(const bool forReplay/*=true*/) {
     report_heading_etc(forReplay, F(STR_STEPPER_MOTOR_CURRENTS));
     #if HAS_MOTOR_CURRENT_PWM
-      SERIAL_ECHOLNPGM_P(                                    // PWM-based has 3 values:
-          PSTR("  M907 X"), stepper.motor_current_setting[0]  // X and Y
+      SERIAL_ECHOLNPGM_P(                                     // PWM-based has 3 values:
+          PSTR("  M907 X"), stepper.motor_current_setting[0]  // X, Y, (I, J, K, U, V, W)
         , SP_Z_STR,         stepper.motor_current_setting[1]  // Z
         , SP_E_STR,         stepper.motor_current_setting[2]  // E
       );
     #elif HAS_MOTOR_CURRENT_SPI
       SERIAL_ECHOPGM("  M907");                               // SPI-based has 5 values:
-      LOOP_LOGICAL_AXES(q) {                                  // X Y Z (I J K) E (map to X Y Z (I J K) E0 by default)
-        SERIAL_CHAR(' ', axis_codes[q]);
+      LOOP_LOGICAL_AXES(q) {                                  // X Y Z (I J K U V W) E (map to X Y Z (I J K U V W) E0 by default)
+        SERIAL_CHAR(' ', IAXIS_CHAR(q));
         SERIAL_ECHO(stepper.motor_current_setting[q]);
       }
       SERIAL_CHAR(' ', 'B');                                  // B (maps to E1 by default)

commit 40481947fc1f11a01235c5c55333a4437fc45c5f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 14 03:14:13 2022 -0600

    üßë‚Äçüíª Misc. updates for extra axes (#23521)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 757cffd473..95adde3ea5 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -39,7 +39,9 @@
 #endif
 
 /**
- * M907: Set digital trimpot motor current using axis codes X, Y, Z, E, B, S
+ * M907: Set digital trimpot motor current using axis codes X [Y] [Z] [E]
+ *   B<current> - Special case for 4th (E) axis
+ *   S<current> - Special case to set first 3 axes
  */
 void GcodeSuite::M907() {
   #if HAS_MOTOR_CURRENT_SPI
@@ -75,7 +77,7 @@ void GcodeSuite::M907() {
       if (parser.seenval('E')) stepper.set_digipot_current(2, parser.value_int());
     #endif
 
-  #endif
+  #endif // HAS_MOTOR_CURRENT_PWM
 
   #if HAS_MOTOR_CURRENT_I2C
     // this one uses actual amps in floating point

commit d7fede3a6324cd6b1ec91a9c8e248fce8f0d7cf2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 13:40:01 2021 -0500

    üé® Apply F() to G-code report header

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index a0b5c48e82..757cffd473 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -100,7 +100,7 @@ void GcodeSuite::M907() {
 #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM
 
   void GcodeSuite::M907_report(const bool forReplay/*=true*/) {
-    report_heading_etc(forReplay, PSTR(STR_STEPPER_MOTOR_CURRENTS));
+    report_heading_etc(forReplay, F(STR_STEPPER_MOTOR_CURRENTS));
     #if HAS_MOTOR_CURRENT_PWM
       SERIAL_ECHOLNPGM_P(                                    // PWM-based has 3 values:
           PSTR("  M907 X"), stepper.motor_current_setting[0]  // X and Y

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index cde73ff271..a0b5c48e82 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -102,7 +102,7 @@ void GcodeSuite::M907() {
   void GcodeSuite::M907_report(const bool forReplay/*=true*/) {
     report_heading_etc(forReplay, PSTR(STR_STEPPER_MOTOR_CURRENTS));
     #if HAS_MOTOR_CURRENT_PWM
-      SERIAL_ECHOLNPAIR_P(                                    // PWM-based has 3 values:
+      SERIAL_ECHOLNPGM_P(                                    // PWM-based has 3 values:
           PSTR("  M907 X"), stepper.motor_current_setting[0]  // X and Y
         , SP_Z_STR,         stepper.motor_current_setting[1]  // Z
         , SP_E_STR,         stepper.motor_current_setting[2]  // E

commit 79c72ed821564507b0ef46cbb26f9577585e2ccc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 7 18:06:10 2021 -0500

    üé® Standardize G-code reporting

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index bd741f8a64..cde73ff271 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -22,7 +22,7 @@
 
 #include "../../../inc/MarlinConfig.h"
 
-#if ANY(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_PWM, HAS_MOTOR_CURRENT_I2C, HAS_MOTOR_CURRENT_DAC)
+#if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM || HAS_MOTOR_CURRENT_I2C || HAS_MOTOR_CURRENT_DAC
 
 #include "../../gcode.h"
 
@@ -44,12 +44,27 @@
 void GcodeSuite::M907() {
   #if HAS_MOTOR_CURRENT_SPI
 
+    if (!parser.seen("BS" LOGICAL_AXES_STRING))
+      return M907_report();
+
     LOOP_LOGICAL_AXES(i) if (parser.seenval(axis_codes[i])) stepper.set_digipot_current(i, parser.value_int());
     if (parser.seenval('B')) stepper.set_digipot_current(4, parser.value_int());
     if (parser.seenval('S')) LOOP_LE_N(i, 4) stepper.set_digipot_current(i, parser.value_int());
 
   #elif HAS_MOTOR_CURRENT_PWM
 
+    if (!parser.seen(
+      #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY)
+        "XY"
+      #endif
+      #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
+        "Z"
+      #endif
+      #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+        "E"
+      #endif
+    )) return M907_report();
+
     #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY)
       if (parser.seenval('X') || parser.seenval('Y')) stepper.set_digipot_current(0, parser.value_int());
     #endif
@@ -82,7 +97,30 @@ void GcodeSuite::M907() {
   #endif
 }
 
-#if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
+#if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM
+
+  void GcodeSuite::M907_report(const bool forReplay/*=true*/) {
+    report_heading_etc(forReplay, PSTR(STR_STEPPER_MOTOR_CURRENTS));
+    #if HAS_MOTOR_CURRENT_PWM
+      SERIAL_ECHOLNPAIR_P(                                    // PWM-based has 3 values:
+          PSTR("  M907 X"), stepper.motor_current_setting[0]  // X and Y
+        , SP_Z_STR,         stepper.motor_current_setting[1]  // Z
+        , SP_E_STR,         stepper.motor_current_setting[2]  // E
+      );
+    #elif HAS_MOTOR_CURRENT_SPI
+      SERIAL_ECHOPGM("  M907");                               // SPI-based has 5 values:
+      LOOP_LOGICAL_AXES(q) {                                  // X Y Z (I J K) E (map to X Y Z (I J K) E0 by default)
+        SERIAL_CHAR(' ', axis_codes[q]);
+        SERIAL_ECHO(stepper.motor_current_setting[q]);
+      }
+      SERIAL_CHAR(' ', 'B');                                  // B (maps to E1 by default)
+      SERIAL_ECHOLN(stepper.motor_current_setting[4]);
+    #endif
+  }
+
+#endif // HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM
+
+#if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_DAC
 
   /**
    * M908: Control digital trimpot directly (M908 P<pin> S<current>)

commit 26bfc267977ddc444513c793c18f76847e23310e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 9 17:09:58 2021 -0500

    üé® Check flags without ENABLED

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 118ad21564..bd741f8a64 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -34,7 +34,7 @@
   #include "../../../feature/digipot/digipot.h"
 #endif
 
-#if ENABLED(HAS_MOTOR_CURRENT_DAC)
+#if HAS_MOTOR_CURRENT_DAC
   #include "../../../feature/dac/stepper_dac.h"
 #endif
 
@@ -73,7 +73,7 @@ void GcodeSuite::M907() {
     #endif
   #endif
 
-  #if ENABLED(HAS_MOTOR_CURRENT_DAC)
+  #if HAS_MOTOR_CURRENT_DAC
     if (parser.seenval('S')) {
       const float dac_percent = parser.value_float();
       LOOP_LE_N(i, 4) stepper_dac.set_current_percent(i, dac_percent);
@@ -92,7 +92,7 @@ void GcodeSuite::M907() {
     TERN_(HAS_MOTOR_CURRENT_DAC, stepper_dac.set_current_value(parser.byteval('P', -1), parser.ushortval('S', 0)));
   }
 
-  #if ENABLED(HAS_MOTOR_CURRENT_DAC)
+  #if HAS_MOTOR_CURRENT_DAC
 
     void GcodeSuite::M909() { stepper_dac.print_values(); }
     void GcodeSuite::M910() { stepper_dac.commit_eeprom(); }

commit a2be93c54189c7a513f1ef7f42e7033de6e9a6e9
Author: gjdodd <31553294+gjdodd@users.noreply.github.com>
Date:   Fri Jun 18 01:37:27 2021 +0100

    ü©π Extruders 0 patch for PWM Motor Current (#22163)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index ee9801eda9..118ad21564 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -67,8 +67,10 @@ void GcodeSuite::M907() {
     LOOP_LOGICAL_AXES(i) if (parser.seenval(axis_codes[i])) digipot_i2c.set_current(i, parser.value_float());
     // Additional extruders use B,C,D for channels 4,5,6.
     // TODO: Change these parameters because 'E' is used. B<index>?
-    for (uint8_t i = E_AXIS + 1; i < DIGIPOT_I2C_NUM_CHANNELS; i++)
-      if (parser.seenval('B' + i - (E_AXIS + 1))) digipot_i2c.set_current(i, parser.value_float());
+    #if HAS_EXTRUDERS
+      for (uint8_t i = E_AXIS + 1; i < DIGIPOT_I2C_NUM_CHANNELS; i++)
+        if (parser.seenval('B' + i - (E_AXIS + 1))) digipot_i2c.set_current(i, parser.value_float());
+    #endif
   #endif
 
   #if ENABLED(HAS_MOTOR_CURRENT_DAC)

commit a6e5492b088add3589aeac168136369f21614e60
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 18 22:51:19 2021 -0500

    ‚ôªÔ∏è Refactor axis counts and loops

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index e463666207..ee9801eda9 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -44,7 +44,7 @@
 void GcodeSuite::M907() {
   #if HAS_MOTOR_CURRENT_SPI
 
-    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) stepper.set_digipot_current(i, parser.value_int());
+    LOOP_LOGICAL_AXES(i) if (parser.seenval(axis_codes[i])) stepper.set_digipot_current(i, parser.value_int());
     if (parser.seenval('B')) stepper.set_digipot_current(4, parser.value_int());
     if (parser.seenval('S')) LOOP_LE_N(i, 4) stepper.set_digipot_current(i, parser.value_int());
 
@@ -64,7 +64,7 @@ void GcodeSuite::M907() {
 
   #if HAS_MOTOR_CURRENT_I2C
     // this one uses actual amps in floating point
-    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) digipot_i2c.set_current(i, parser.value_float());
+    LOOP_LOGICAL_AXES(i) if (parser.seenval(axis_codes[i])) digipot_i2c.set_current(i, parser.value_float());
     // Additional extruders use B,C,D for channels 4,5,6.
     // TODO: Change these parameters because 'E' is used. B<index>?
     for (uint8_t i = E_AXIS + 1; i < DIGIPOT_I2C_NUM_CHANNELS; i++)
@@ -76,7 +76,7 @@ void GcodeSuite::M907() {
       const float dac_percent = parser.value_float();
       LOOP_LE_N(i, 4) stepper_dac.set_current_percent(i, dac_percent);
     }
-    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) stepper_dac.set_current_percent(i, parser.value_float());
+    LOOP_LOGICAL_AXES(i) if (parser.seenval(axis_codes[i])) stepper_dac.set_current_percent(i, parser.value_float());
   #endif
 }
 

commit 492ba2a111ce541513d4515c4af3f57ceaa897ea
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Oct 11 14:58:35 2020 -0500

    Digipots refactor / cleanup (#19690)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 54599a0451..e463666207 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -22,19 +22,19 @@
 
 #include "../../../inc/MarlinConfig.h"
 
-#if ANY(HAS_DIGIPOTSS, HAS_MOTOR_CURRENT_PWM, HAS_I2C_DIGIPOT, DAC_STEPPER_CURRENT)
+#if ANY(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_PWM, HAS_MOTOR_CURRENT_I2C, HAS_MOTOR_CURRENT_DAC)
 
 #include "../../gcode.h"
 
-#if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM
+#if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM
   #include "../../../module/stepper.h"
 #endif
 
-#if HAS_I2C_DIGIPOT
+#if HAS_MOTOR_CURRENT_I2C
   #include "../../../feature/digipot/digipot.h"
 #endif
 
-#if ENABLED(DAC_STEPPER_CURRENT)
+#if ENABLED(HAS_MOTOR_CURRENT_DAC)
   #include "../../../feature/dac/stepper_dac.h"
 #endif
 
@@ -42,61 +42,61 @@
  * M907: Set digital trimpot motor current using axis codes X, Y, Z, E, B, S
  */
 void GcodeSuite::M907() {
-  #if HAS_DIGIPOTSS
+  #if HAS_MOTOR_CURRENT_SPI
 
-    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) stepper.digipot_current(i, parser.value_int());
-    if (parser.seenval('B')) stepper.digipot_current(4, parser.value_int());
-    if (parser.seenval('S')) LOOP_LE_N(i, 4) stepper.digipot_current(i, parser.value_int());
+    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) stepper.set_digipot_current(i, parser.value_int());
+    if (parser.seenval('B')) stepper.set_digipot_current(4, parser.value_int());
+    if (parser.seenval('S')) LOOP_LE_N(i, 4) stepper.set_digipot_current(i, parser.value_int());
 
   #elif HAS_MOTOR_CURRENT_PWM
 
     #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY)
-      if (parser.seenval('X') || parser.seenval('Y')) stepper.digipot_current(0, parser.value_int());
+      if (parser.seenval('X') || parser.seenval('Y')) stepper.set_digipot_current(0, parser.value_int());
     #endif
     #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
-      if (parser.seenval('Z')) stepper.digipot_current(1, parser.value_int());
+      if (parser.seenval('Z')) stepper.set_digipot_current(1, parser.value_int());
     #endif
     #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
-      if (parser.seenval('E')) stepper.digipot_current(2, parser.value_int());
+      if (parser.seenval('E')) stepper.set_digipot_current(2, parser.value_int());
     #endif
 
   #endif
 
-  #if HAS_I2C_DIGIPOT
+  #if HAS_MOTOR_CURRENT_I2C
     // this one uses actual amps in floating point
-    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) digipot_i2c_set_current(i, parser.value_float());
+    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) digipot_i2c.set_current(i, parser.value_float());
     // Additional extruders use B,C,D for channels 4,5,6.
     // TODO: Change these parameters because 'E' is used. B<index>?
     for (uint8_t i = E_AXIS + 1; i < DIGIPOT_I2C_NUM_CHANNELS; i++)
-      if (parser.seenval('B' + i - (E_AXIS + 1))) digipot_i2c_set_current(i, parser.value_float());
+      if (parser.seenval('B' + i - (E_AXIS + 1))) digipot_i2c.set_current(i, parser.value_float());
   #endif
 
-  #if ENABLED(DAC_STEPPER_CURRENT)
+  #if ENABLED(HAS_MOTOR_CURRENT_DAC)
     if (parser.seenval('S')) {
       const float dac_percent = parser.value_float();
-      LOOP_LE_N(i, 4) dac_current_percent(i, dac_percent);
+      LOOP_LE_N(i, 4) stepper_dac.set_current_percent(i, dac_percent);
     }
-    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) dac_current_percent(i, parser.value_float());
+    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) stepper_dac.set_current_percent(i, parser.value_float());
   #endif
 }
 
-#if EITHER(HAS_DIGIPOTSS, DAC_STEPPER_CURRENT)
+#if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
 
   /**
    * M908: Control digital trimpot directly (M908 P<pin> S<current>)
    */
   void GcodeSuite::M908() {
-    TERN_(HAS_DIGIPOTSS, stepper.digitalPotWrite(parser.intval('P'), parser.intval('S')));
-    TERN_(DAC_STEPPER_CURRENT, dac_current_raw(parser.byteval('P', -1), parser.ushortval('S', 0)));
+    TERN_(HAS_MOTOR_CURRENT_SPI, stepper.set_digipot_value_spi(parser.intval('P'), parser.intval('S')));
+    TERN_(HAS_MOTOR_CURRENT_DAC, stepper_dac.set_current_value(parser.byteval('P', -1), parser.ushortval('S', 0)));
   }
 
-#endif // HAS_DIGIPOTSS || DAC_STEPPER_CURRENT
+  #if ENABLED(HAS_MOTOR_CURRENT_DAC)
 
-#if ENABLED(DAC_STEPPER_CURRENT)
+    void GcodeSuite::M909() { stepper_dac.print_values(); }
+    void GcodeSuite::M910() { stepper_dac.commit_eeprom(); }
 
-  void GcodeSuite::M909() { dac_print_values(); }
-  void GcodeSuite::M910() { dac_commit_eeprom(); }
+  #endif // HAS_MOTOR_CURRENT_DAC
 
-#endif // DAC_STEPPER_CURRENT
+#endif // HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_DAC
 
-#endif // HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || HAS_I2C_DIGIPOT || DAC_STEPPER_CURRENT
+#endif // HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM || HAS_MOTOR_CURRENT_I2C || HAS_MOTOR_CURRENT_DAC

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 23cc349650..54599a0451 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 8f54c5d6fb..23cc349650 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -22,7 +22,7 @@
 
 #include "../../../inc/MarlinConfig.h"
 
-#if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || HAS_I2C_DIGIPOT || ENABLED(DAC_STEPPER_CURRENT)
+#if ANY(HAS_DIGIPOTSS, HAS_MOTOR_CURRENT_PWM, HAS_I2C_DIGIPOT, DAC_STEPPER_CURRENT)
 
 #include "../../gcode.h"
 
@@ -80,7 +80,7 @@ void GcodeSuite::M907() {
   #endif
 }
 
-#if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
+#if EITHER(HAS_DIGIPOTSS, DAC_STEPPER_CURRENT)
 
   /**
    * M908: Control digital trimpot directly (M908 P<pin> S<current>)

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index a61a4a1943..8f54c5d6fb 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -86,12 +86,8 @@ void GcodeSuite::M907() {
    * M908: Control digital trimpot directly (M908 P<pin> S<current>)
    */
   void GcodeSuite::M908() {
-    #if HAS_DIGIPOTSS
-      stepper.digitalPotWrite(parser.intval('P'), parser.intval('S'));
-    #endif
-    #if ENABLED(DAC_STEPPER_CURRENT)
-      dac_current_raw(parser.byteval('P', -1), parser.ushortval('S', 0));
-    #endif
+    TERN_(HAS_DIGIPOTSS, stepper.digitalPotWrite(parser.intval('P'), parser.intval('S')));
+    TERN_(DAC_STEPPER_CURRENT, dac_current_raw(parser.byteval('P', -1), parser.ushortval('S', 0)));
   }
 
 #endif // HAS_DIGIPOTSS || DAC_STEPPER_CURRENT

commit 4a5a3d27ed29d7bab3de9b64b1a1728fd65c755f
Author: grauerfuchs <42082416+grauerfuchs@users.noreply.github.com>
Date:   Sat Apr 18 23:56:23 2020 -0400

    Option to use raw digipot values (#17536)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index fe8e37ebdd..a61a4a1943 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -22,7 +22,7 @@
 
 #include "../../../inc/MarlinConfig.h"
 
-#if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || EITHER(DIGIPOT_I2C, DAC_STEPPER_CURRENT)
+#if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || HAS_I2C_DIGIPOT || ENABLED(DAC_STEPPER_CURRENT)
 
 #include "../../gcode.h"
 
@@ -30,7 +30,7 @@
   #include "../../../module/stepper.h"
 #endif
 
-#if ENABLED(DIGIPOT_I2C)
+#if HAS_I2C_DIGIPOT
   #include "../../../feature/digipot/digipot.h"
 #endif
 
@@ -62,7 +62,7 @@ void GcodeSuite::M907() {
 
   #endif
 
-  #if ENABLED(DIGIPOT_I2C)
+  #if HAS_I2C_DIGIPOT
     // this one uses actual amps in floating point
     LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) digipot_i2c_set_current(i, parser.value_float());
     // Additional extruders use B,C,D for channels 4,5,6.
@@ -103,4 +103,4 @@ void GcodeSuite::M907() {
 
 #endif // DAC_STEPPER_CURRENT
 
-#endif // HAS_DIGIPOTSS || DAC_STEPPER_CURRENT || HAS_MOTOR_CURRENT_PWM || DIGIPOT_I2C
+#endif // HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || HAS_I2C_DIGIPOT || DAC_STEPPER_CURRENT

commit 118bd2f8b2a1f81884cb55a8fc00b708a51aa15b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 23:18:16 2020 -0500

    Apply loop shorthand macros (#17159)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index a8ded07d77..fe8e37ebdd 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -46,7 +46,7 @@ void GcodeSuite::M907() {
 
     LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) stepper.digipot_current(i, parser.value_int());
     if (parser.seenval('B')) stepper.digipot_current(4, parser.value_int());
-    if (parser.seenval('S')) for (uint8_t i = 0; i <= 4; i++) stepper.digipot_current(i, parser.value_int());
+    if (parser.seenval('S')) LOOP_LE_N(i, 4) stepper.digipot_current(i, parser.value_int());
 
   #elif HAS_MOTOR_CURRENT_PWM
 
@@ -74,7 +74,7 @@ void GcodeSuite::M907() {
   #if ENABLED(DAC_STEPPER_CURRENT)
     if (parser.seenval('S')) {
       const float dac_percent = parser.value_float();
-      for (uint8_t i = 0; i <= 4; i++) dac_current_percent(i, dac_percent);
+      LOOP_LE_N(i, 4) dac_current_percent(i, dac_percent);
     }
     LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) dac_current_percent(i, parser.value_float());
   #endif

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index a7546b2833..a8ded07d77 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 519cc1bc67b8762d94cd47e91bfe8a78a7319342
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 6 22:18:03 2019 -0500

    NUM_AXIS is now obsolete

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 4f48bb77ed..a7546b2833 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -65,8 +65,10 @@ void GcodeSuite::M907() {
   #if ENABLED(DIGIPOT_I2C)
     // this one uses actual amps in floating point
     LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) digipot_i2c_set_current(i, parser.value_float());
-    // for each additional extruder (named B,C,D,E..., channels 4,5,6,7...)
-    for (uint8_t i = NUM_AXIS; i < DIGIPOT_I2C_NUM_CHANNELS; i++) if (parser.seenval('B' + i - (NUM_AXIS))) digipot_i2c_set_current(i, parser.value_float());
+    // Additional extruders use B,C,D for channels 4,5,6.
+    // TODO: Change these parameters because 'E' is used. B<index>?
+    for (uint8_t i = E_AXIS + 1; i < DIGIPOT_I2C_NUM_CHANNELS; i++)
+      if (parser.seenval('B' + i - (E_AXIS + 1))) digipot_i2c_set_current(i, parser.value_float());
   #endif
 
   #if ENABLED(DAC_STEPPER_CURRENT)

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 541c32d054..4f48bb77ed 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 356410dcfce70972f9cfbafd9c32a71701781640
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 11 07:41:54 2019 -0500

    Move crc16 function to libs

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 107c77f41c..541c32d054 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -85,16 +85,10 @@ void GcodeSuite::M907() {
    */
   void GcodeSuite::M908() {
     #if HAS_DIGIPOTSS
-      stepper.digitalPotWrite(
-        parser.intval('P'),
-        parser.intval('S')
-      );
+      stepper.digitalPotWrite(parser.intval('P'), parser.intval('S'));
     #endif
     #if ENABLED(DAC_STEPPER_CURRENT)
-      dac_current_raw(
-        parser.byteval('P', -1),
-        parser.ushortval('S', 0)
-      );
+      dac_current_raw(parser.byteval('P', -1), parser.ushortval('S', 0));
     #endif
   }
 

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index e7cad77757..107c77f41c 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -22,7 +22,7 @@
 
 #include "../../../inc/MarlinConfig.h"
 
-#if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
+#if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || EITHER(DIGIPOT_I2C, DAC_STEPPER_CURRENT)
 
 #include "../../gcode.h"
 
@@ -50,7 +50,7 @@ void GcodeSuite::M907() {
 
   #elif HAS_MOTOR_CURRENT_PWM
 
-    #if PIN_EXISTS(MOTOR_CURRENT_PWM_X) || PIN_EXISTS(MOTOR_CURRENT_PWM_Y) || PIN_EXISTS(MOTOR_CURRENT_PWM_XY)
+    #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY)
       if (parser.seenval('X') || parser.seenval('Y')) stepper.digipot_current(0, parser.value_int());
     #endif
     #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)

commit ddbe4cfa20165b5efcd8fb28078083261136cf72
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Tue Feb 26 21:03:13 2019 -0600

    Printrboard G2 support (#13116)

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 8e6ca7c919..e7cad77757 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -44,37 +44,37 @@
 void GcodeSuite::M907() {
   #if HAS_DIGIPOTSS
 
-    LOOP_XYZE(i) if (parser.seen(axis_codes[i])) stepper.digipot_current(i, parser.value_int());
-    if (parser.seen('B')) stepper.digipot_current(4, parser.value_int());
-    if (parser.seen('S')) for (uint8_t i = 0; i <= 4; i++) stepper.digipot_current(i, parser.value_int());
+    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) stepper.digipot_current(i, parser.value_int());
+    if (parser.seenval('B')) stepper.digipot_current(4, parser.value_int());
+    if (parser.seenval('S')) for (uint8_t i = 0; i <= 4; i++) stepper.digipot_current(i, parser.value_int());
 
   #elif HAS_MOTOR_CURRENT_PWM
 
-    #if PIN_EXISTS(MOTOR_CURRENT_PWM_XY)
-      if (parser.seen('X')) stepper.digipot_current(0, parser.value_int());
+    #if PIN_EXISTS(MOTOR_CURRENT_PWM_X) || PIN_EXISTS(MOTOR_CURRENT_PWM_Y) || PIN_EXISTS(MOTOR_CURRENT_PWM_XY)
+      if (parser.seenval('X') || parser.seenval('Y')) stepper.digipot_current(0, parser.value_int());
     #endif
     #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
-      if (parser.seen('Z')) stepper.digipot_current(1, parser.value_int());
+      if (parser.seenval('Z')) stepper.digipot_current(1, parser.value_int());
     #endif
     #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
-      if (parser.seen('E')) stepper.digipot_current(2, parser.value_int());
+      if (parser.seenval('E')) stepper.digipot_current(2, parser.value_int());
     #endif
 
   #endif
 
   #if ENABLED(DIGIPOT_I2C)
     // this one uses actual amps in floating point
-    LOOP_XYZE(i) if (parser.seen(axis_codes[i])) digipot_i2c_set_current(i, parser.value_float());
+    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) digipot_i2c_set_current(i, parser.value_float());
     // for each additional extruder (named B,C,D,E..., channels 4,5,6,7...)
-    for (uint8_t i = NUM_AXIS; i < DIGIPOT_I2C_NUM_CHANNELS; i++) if (parser.seen('B' + i - (NUM_AXIS))) digipot_i2c_set_current(i, parser.value_float());
+    for (uint8_t i = NUM_AXIS; i < DIGIPOT_I2C_NUM_CHANNELS; i++) if (parser.seenval('B' + i - (NUM_AXIS))) digipot_i2c_set_current(i, parser.value_float());
   #endif
 
   #if ENABLED(DAC_STEPPER_CURRENT)
-    if (parser.seen('S')) {
+    if (parser.seenval('S')) {
       const float dac_percent = parser.value_float();
       for (uint8_t i = 0; i <= 4; i++) dac_current_percent(i, dac_percent);
     }
-    LOOP_XYZE(i) if (parser.seen(axis_codes[i])) dac_current_percent(i, parser.value_float());
+    LOOP_XYZE(i) if (parser.seenval(axis_codes[i])) dac_current_percent(i, parser.value_float());
   #endif
 }
 

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
index 10849f2eb8..8e6ca7c919 100644
--- a/Marlin/src/gcode/feature/digipot/M907-M910.cpp
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 1587962547910eb21362cac32f3f644d79a46656
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 23 18:09:14 2017 -0500

    Combine G-code files into fewer units
    
    Addressing #7707

diff --git a/Marlin/src/gcode/feature/digipot/M907-M910.cpp b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
new file mode 100644
index 0000000000..10849f2eb8
--- /dev/null
+++ b/Marlin/src/gcode/feature/digipot/M907-M910.cpp
@@ -0,0 +1,110 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../../inc/MarlinConfig.h"
+
+#if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
+
+#include "../../gcode.h"
+
+#if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM
+  #include "../../../module/stepper.h"
+#endif
+
+#if ENABLED(DIGIPOT_I2C)
+  #include "../../../feature/digipot/digipot.h"
+#endif
+
+#if ENABLED(DAC_STEPPER_CURRENT)
+  #include "../../../feature/dac/stepper_dac.h"
+#endif
+
+/**
+ * M907: Set digital trimpot motor current using axis codes X, Y, Z, E, B, S
+ */
+void GcodeSuite::M907() {
+  #if HAS_DIGIPOTSS
+
+    LOOP_XYZE(i) if (parser.seen(axis_codes[i])) stepper.digipot_current(i, parser.value_int());
+    if (parser.seen('B')) stepper.digipot_current(4, parser.value_int());
+    if (parser.seen('S')) for (uint8_t i = 0; i <= 4; i++) stepper.digipot_current(i, parser.value_int());
+
+  #elif HAS_MOTOR_CURRENT_PWM
+
+    #if PIN_EXISTS(MOTOR_CURRENT_PWM_XY)
+      if (parser.seen('X')) stepper.digipot_current(0, parser.value_int());
+    #endif
+    #if PIN_EXISTS(MOTOR_CURRENT_PWM_Z)
+      if (parser.seen('Z')) stepper.digipot_current(1, parser.value_int());
+    #endif
+    #if PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+      if (parser.seen('E')) stepper.digipot_current(2, parser.value_int());
+    #endif
+
+  #endif
+
+  #if ENABLED(DIGIPOT_I2C)
+    // this one uses actual amps in floating point
+    LOOP_XYZE(i) if (parser.seen(axis_codes[i])) digipot_i2c_set_current(i, parser.value_float());
+    // for each additional extruder (named B,C,D,E..., channels 4,5,6,7...)
+    for (uint8_t i = NUM_AXIS; i < DIGIPOT_I2C_NUM_CHANNELS; i++) if (parser.seen('B' + i - (NUM_AXIS))) digipot_i2c_set_current(i, parser.value_float());
+  #endif
+
+  #if ENABLED(DAC_STEPPER_CURRENT)
+    if (parser.seen('S')) {
+      const float dac_percent = parser.value_float();
+      for (uint8_t i = 0; i <= 4; i++) dac_current_percent(i, dac_percent);
+    }
+    LOOP_XYZE(i) if (parser.seen(axis_codes[i])) dac_current_percent(i, parser.value_float());
+  #endif
+}
+
+#if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
+
+  /**
+   * M908: Control digital trimpot directly (M908 P<pin> S<current>)
+   */
+  void GcodeSuite::M908() {
+    #if HAS_DIGIPOTSS
+      stepper.digitalPotWrite(
+        parser.intval('P'),
+        parser.intval('S')
+      );
+    #endif
+    #if ENABLED(DAC_STEPPER_CURRENT)
+      dac_current_raw(
+        parser.byteval('P', -1),
+        parser.ushortval('S', 0)
+      );
+    #endif
+  }
+
+#endif // HAS_DIGIPOTSS || DAC_STEPPER_CURRENT
+
+#if ENABLED(DAC_STEPPER_CURRENT)
+
+  void GcodeSuite::M909() { dac_print_values(); }
+  void GcodeSuite::M910() { dac_commit_eeprom(); }
+
+#endif // DAC_STEPPER_CURRENT
+
+#endif // HAS_DIGIPOTSS || DAC_STEPPER_CURRENT || HAS_MOTOR_CURRENT_PWM || DIGIPOT_I2C
