commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
deleted file mode 100644
index 1eb54d231e..0000000000
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
+++ /dev/null
@@ -1,202 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- */
-#include "../../../../inc/MarlinConfigPre.h"
-
-#if HAS_TFT_LVGL_UI
-
-#include "../../../../MarlinCore.h"
-#include "draw_ready_print.h"
-#include "draw_set.h"
-#include "lv_conf.h"
-#include "draw_ui.h"
-#include "../../../../gcode/queue.h"
-
-extern lv_group_t * g;
-static lv_obj_t * scr;
-
-enum {
-  ID_GCODE = 1,
-  #if HAS_USER_ITEM(1)
-    ID_CUSTOM_1,
-  #endif
-  #if HAS_USER_ITEM(2)
-    ID_CUSTOM_2,
-  #endif
-  #if HAS_USER_ITEM(3)
-    ID_CUSTOM_3,
-  #endif
-  #if HAS_USER_ITEM(4)
-    ID_CUSTOM_4,
-  #endif
-  #if HAS_USER_ITEM(5)
-    ID_CUSTOM_5,
-  #endif
-  #if HAS_USER_ITEM(6)
-    ID_CUSTOM_6,
-  #endif
-  ID_M_RETURN,
-};
-
-static void event_handler(lv_obj_t * obj, lv_event_t event) {
-  if (event != LV_EVENT_RELEASED) return;
-  switch (obj->mks_obj_id) {
-    case ID_GCODE: lv_clear_more(); lv_draw_gcode(true); break;
-    #if HAS_USER_ITEM(1)
-      case ID_CUSTOM_1: queue.inject_P(PSTR(USER_GCODE_1)); break;
-    #endif
-    #if HAS_USER_ITEM(2)
-      case ID_CUSTOM_2: queue.inject_P(PSTR(USER_GCODE_2)); break;
-    #endif
-    #if HAS_USER_ITEM(3)
-      case ID_CUSTOM_3: queue.inject_P(PSTR(USER_GCODE_3)); break;
-    #endif
-    #if HAS_USER_ITEM(4)
-      case ID_CUSTOM_4: queue.inject_P(PSTR(USER_GCODE_4)); break;
-    #endif
-    #if HAS_USER_ITEM(5)
-      case ID_CUSTOM_5: queue.inject_P(PSTR(USER_GCODE_5)); break;
-    #endif
-    #if HAS_USER_ITEM(6)
-      case ID_CUSTOM_6: queue.inject_P(PSTR(USER_GCODE_6)); break;
-    #endif
-    case ID_M_RETURN:
-      lv_clear_more();
-      lv_draw_tool();
-      break;
-  }
-}
-
-void lv_draw_more() {
-  scr = lv_screen_create(MORE_UI);
-
-  const bool enc_ena = TERN0(HAS_ROTARY_ENCODER, gCfgItems.encoder_enable);
-
-  lv_obj_t *buttonGCode = lv_imgbtn_create(scr, "F:/bmp_machine_para.bin", INTERVAL_V, titleHeight, event_handler, ID_GCODE);
-  if (enc_ena) lv_group_add_obj(g, buttonGCode);
-  lv_obj_t *labelGCode = lv_label_create_empty(buttonGCode);
-
-  #if HAS_USER_ITEM(1)
-    lv_obj_t *buttonCustom1 = lv_imgbtn_create(scr, "F:/bmp_custom1.bin", BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_CUSTOM_1);
-    if (enc_ena) lv_group_add_obj(g, buttonCustom1);
-    lv_obj_t *labelCustom1 = lv_label_create_empty(buttonCustom1);
-  #endif
-
-  #if HAS_USER_ITEM(2)
-    lv_obj_t *buttonCustom2 = lv_imgbtn_create(scr, "F:/bmp_custom2.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_CUSTOM_2);
-    if (enc_ena) lv_group_add_obj(g, buttonCustom2);
-    lv_obj_t *labelCustom2 = lv_label_create_empty(buttonCustom2);
-  #endif
-
-  #if HAS_USER_ITEM(3)
-    lv_obj_t *buttonCustom3 = lv_imgbtn_create(scr, "F:/bmp_custom3.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_CUSTOM_3);
-    if (enc_ena) lv_group_add_obj(g, buttonCustom3);
-    lv_obj_t *labelCustom3 = lv_label_create_empty(buttonCustom3);
-  #endif
-
-  #if HAS_USER_ITEM(4)
-    lv_obj_t *buttonCustom4 = lv_imgbtn_create(scr, "F:/bmp_custom4.bin", INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_4);
-    if (enc_ena) lv_group_add_obj(g, buttonCustom4);
-    lv_obj_t *labelCustom4 = lv_label_create_empty(buttonCustom4);
-  #endif
-
-  #if HAS_USER_ITEM(5)
-    lv_obj_t *buttonCustom5 = lv_imgbtn_create(scr, "F:/bmp_custom5.bin", BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_5);
-    if (enc_ena) lv_group_add_obj(g, buttonCustom5);
-    lv_obj_t *labelCustom5 = lv_label_create_empty(buttonCustom5);
-  #endif
-
-  #if HAS_USER_ITEM(6)
-    lv_obj_t *buttonCustom6 = lv_imgbtn_create(scr, "F:/bmp_custom6.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_6);
-    if (enc_ena) lv_group_add_obj(g, buttonCustom6);
-    lv_obj_t *labelCustom6 = lv_label_create_empty(buttonCustom6);
-  #endif
-
-  lv_obj_t *buttonBack = lv_imgbtn_create(scr, "F:/bmp_return.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_M_RETURN);
-  if (enc_ena) lv_group_add_obj(g, buttonBack);
-  lv_obj_t *label_Back = lv_label_create_empty(buttonBack);
-
-  if (gCfgItems.multiple_language != 0) {
-    lv_label_set_text(labelGCode, more_menu.gcode);
-    lv_obj_align(labelGCode, buttonGCode, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-
-    #if HAS_USER_ITEM(1)
-      lv_label_set_text(labelCustom1, more_menu.custom1);
-      lv_obj_align(labelCustom1, buttonCustom1, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-    #endif
-    #if HAS_USER_ITEM(2)
-      lv_label_set_text(labelCustom2, more_menu.custom2);
-      lv_obj_align(labelCustom2, buttonCustom2, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-    #endif
-    #if HAS_USER_ITEM(3)
-      lv_label_set_text(labelCustom3, more_menu.custom3);
-      lv_obj_align(labelCustom3, buttonCustom3, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-    #endif
-    #if HAS_USER_ITEM(4)
-      lv_label_set_text(labelCustom4, more_menu.custom4);
-      lv_obj_align(labelCustom4, buttonCustom4, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-    #endif
-    #if HAS_USER_ITEM(5)
-      lv_label_set_text(labelCustom5, more_menu.custom5);
-      lv_obj_align(labelCustom5, buttonCustom5, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-    #endif
-    #if HAS_USER_ITEM(6)
-      lv_label_set_text(labelCustom6, more_menu.custom6);
-      lv_obj_align(labelCustom6, buttonCustom6, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-    #endif
-    lv_label_set_text(label_Back, common_menu.text_back);
-    lv_obj_align(label_Back, buttonBack, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-  }
-
-  #if BUTTONS_EXIST(EN1, EN2, ENC)
-    if (enc_ena) {
-      lv_group_add_obj(g, buttonGCode);
-      #if HAS_USER_ITEM(1)
-        lv_group_add_obj(g, buttonCustom1);
-      #endif
-      #if HAS_USER_ITEM(2)
-        lv_group_add_obj(g, buttonCustom2);
-      #endif
-      #if HAS_USER_ITEM(3)
-        lv_group_add_obj(g, buttonCustom3);
-      #endif
-      #if HAS_USER_ITEM(4)
-        lv_group_add_obj(g, buttonCustom4);
-      #endif
-      #if HAS_USER_ITEM(5)
-        lv_group_add_obj(g, buttonCustom5);
-      #endif
-      #if HAS_USER_ITEM(6)
-        lv_group_add_obj(g, buttonCustom6);
-      #endif
-      lv_group_add_obj(g, buttonBack);
-    }
-  #endif
-}
-
-void lv_clear_more() {
-  #if BUTTONS_EXIST(EN1, EN2, ENC)
-    if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
-  #endif
-  lv_obj_del(scr);
-}
-
-#endif // HAS_TFT_LVGL_UI

commit 01756b6b021118e82d109f9c5996846b10caed62
Author: Malderin <52313714+Malderin@users.noreply.github.com>
Date:   Sun Feb 7 20:45:14 2021 -0300

    Fix LVGL "more" menu user items (#21004)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
index 62769ae89f..1eb54d231e 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
@@ -33,8 +33,6 @@
 extern lv_group_t * g;
 static lv_obj_t * scr;
 
-#define HAS_USER_ITEM(N) (ENABLED(CUSTOM_USER_MENUS) && defined(USER_DESC_##N) && defined(USER_GCODE_##N))
-
 enum {
   ID_GCODE = 1,
   #if HAS_USER_ITEM(1)

commit 9025c63c433d2668bb26bdb45c00b9a8ae59dea9
Author: Malderin <52313714+Malderin@users.noreply.github.com>
Date:   Tue Feb 2 19:04:23 2021 -0300

    Add "more" menu in LVGL interface (#20940)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
index c085c4c936..62769ae89f 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
@@ -33,14 +33,28 @@
 extern lv_group_t * g;
 static lv_obj_t * scr;
 
+#define HAS_USER_ITEM(N) (ENABLED(CUSTOM_USER_MENUS) && defined(USER_DESC_##N) && defined(USER_GCODE_##N))
+
 enum {
   ID_GCODE = 1,
-  ID_CUSTOM_1,
-  ID_CUSTOM_2,
-  ID_CUSTOM_3,
-  ID_CUSTOM_4,
-  ID_CUSTOM_5,
-  ID_CUSTOM_6,
+  #if HAS_USER_ITEM(1)
+    ID_CUSTOM_1,
+  #endif
+  #if HAS_USER_ITEM(2)
+    ID_CUSTOM_2,
+  #endif
+  #if HAS_USER_ITEM(3)
+    ID_CUSTOM_3,
+  #endif
+  #if HAS_USER_ITEM(4)
+    ID_CUSTOM_4,
+  #endif
+  #if HAS_USER_ITEM(5)
+    ID_CUSTOM_5,
+  #endif
+  #if HAS_USER_ITEM(6)
+    ID_CUSTOM_6,
+  #endif
   ID_M_RETURN,
 };
 
@@ -48,12 +62,24 @@ static void event_handler(lv_obj_t * obj, lv_event_t event) {
   if (event != LV_EVENT_RELEASED) return;
   switch (obj->mks_obj_id) {
     case ID_GCODE: lv_clear_more(); lv_draw_gcode(true); break;
-    case ID_CUSTOM_1: TERN_(USER_CMD_1_ENABLE, queue.inject_P(PSTR(USER_GCODE_1))); break;
-    case ID_CUSTOM_2: TERN_(USER_CMD_2_ENABLE, queue.inject_P(PSTR(USER_GCODE_2))); break;
-    case ID_CUSTOM_3: TERN_(USER_CMD_3_ENABLE, queue.inject_P(PSTR(USER_GCODE_3))); break;
-    case ID_CUSTOM_4: TERN_(USER_CMD_4_ENABLE, queue.inject_P(PSTR(USER_GCODE_4))); break;
-    case ID_CUSTOM_5: TERN_(USER_CMD_5_ENABLE, queue.inject_P(PSTR(USER_GCODE_5))); break;
-    case ID_CUSTOM_6: TERN_(USER_CMD_6_ENABLE, queue.inject_P(PSTR(USER_GCODE_6))); break;
+    #if HAS_USER_ITEM(1)
+      case ID_CUSTOM_1: queue.inject_P(PSTR(USER_GCODE_1)); break;
+    #endif
+    #if HAS_USER_ITEM(2)
+      case ID_CUSTOM_2: queue.inject_P(PSTR(USER_GCODE_2)); break;
+    #endif
+    #if HAS_USER_ITEM(3)
+      case ID_CUSTOM_3: queue.inject_P(PSTR(USER_GCODE_3)); break;
+    #endif
+    #if HAS_USER_ITEM(4)
+      case ID_CUSTOM_4: queue.inject_P(PSTR(USER_GCODE_4)); break;
+    #endif
+    #if HAS_USER_ITEM(5)
+      case ID_CUSTOM_5: queue.inject_P(PSTR(USER_GCODE_5)); break;
+    #endif
+    #if HAS_USER_ITEM(6)
+      case ID_CUSTOM_6: queue.inject_P(PSTR(USER_GCODE_6)); break;
+    #endif
     case ID_M_RETURN:
       lv_clear_more();
       lv_draw_tool();
@@ -70,37 +96,37 @@ void lv_draw_more() {
   if (enc_ena) lv_group_add_obj(g, buttonGCode);
   lv_obj_t *labelGCode = lv_label_create_empty(buttonGCode);
 
-  #if ENABLED(USER_CMD_1_ENABLE)
+  #if HAS_USER_ITEM(1)
     lv_obj_t *buttonCustom1 = lv_imgbtn_create(scr, "F:/bmp_custom1.bin", BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_CUSTOM_1);
     if (enc_ena) lv_group_add_obj(g, buttonCustom1);
     lv_obj_t *labelCustom1 = lv_label_create_empty(buttonCustom1);
   #endif
 
-  #if ENABLED(USER_CMD_2_ENABLE)
+  #if HAS_USER_ITEM(2)
     lv_obj_t *buttonCustom2 = lv_imgbtn_create(scr, "F:/bmp_custom2.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_CUSTOM_2);
     if (enc_ena) lv_group_add_obj(g, buttonCustom2);
     lv_obj_t *labelCustom2 = lv_label_create_empty(buttonCustom2);
   #endif
 
-  #if ENABLED(USER_CMD_3_ENABLE)
+  #if HAS_USER_ITEM(3)
     lv_obj_t *buttonCustom3 = lv_imgbtn_create(scr, "F:/bmp_custom3.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_CUSTOM_3);
     if (enc_ena) lv_group_add_obj(g, buttonCustom3);
     lv_obj_t *labelCustom3 = lv_label_create_empty(buttonCustom3);
   #endif
 
-  #if ENABLED(USER_CMD_4_ENABLE)
+  #if HAS_USER_ITEM(4)
     lv_obj_t *buttonCustom4 = lv_imgbtn_create(scr, "F:/bmp_custom4.bin", INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_4);
     if (enc_ena) lv_group_add_obj(g, buttonCustom4);
     lv_obj_t *labelCustom4 = lv_label_create_empty(buttonCustom4);
   #endif
 
-  #if ENABLED(USER_CMD_5_ENABLE)
+  #if HAS_USER_ITEM(5)
     lv_obj_t *buttonCustom5 = lv_imgbtn_create(scr, "F:/bmp_custom5.bin", BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_5);
     if (enc_ena) lv_group_add_obj(g, buttonCustom5);
     lv_obj_t *labelCustom5 = lv_label_create_empty(buttonCustom5);
   #endif
 
-  #if ENABLED(USER_CMD_6_ENABLE)
+  #if HAS_USER_ITEM(6)
     lv_obj_t *buttonCustom6 = lv_imgbtn_create(scr, "F:/bmp_custom6.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_6);
     if (enc_ena) lv_group_add_obj(g, buttonCustom6);
     lv_obj_t *labelCustom6 = lv_label_create_empty(buttonCustom6);
@@ -114,27 +140,27 @@ void lv_draw_more() {
     lv_label_set_text(labelGCode, more_menu.gcode);
     lv_obj_align(labelGCode, buttonGCode, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
-    #if ENABLED(USER_CMD_1_ENABLE)
+    #if HAS_USER_ITEM(1)
       lv_label_set_text(labelCustom1, more_menu.custom1);
       lv_obj_align(labelCustom1, buttonCustom1, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
-    #if ENABLED(USER_CMD_2_ENABLE)
+    #if HAS_USER_ITEM(2)
       lv_label_set_text(labelCustom2, more_menu.custom2);
       lv_obj_align(labelCustom2, buttonCustom2, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
-    #if ENABLED(USER_CMD_3_ENABLE)
+    #if HAS_USER_ITEM(3)
       lv_label_set_text(labelCustom3, more_menu.custom3);
       lv_obj_align(labelCustom3, buttonCustom3, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
-    #if ENABLED(USER_CMD_4_ENABLE)
+    #if HAS_USER_ITEM(4)
       lv_label_set_text(labelCustom4, more_menu.custom4);
       lv_obj_align(labelCustom4, buttonCustom4, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
-    #if ENABLED(USER_CMD_5_ENABLE)
+    #if HAS_USER_ITEM(5)
       lv_label_set_text(labelCustom5, more_menu.custom5);
       lv_obj_align(labelCustom5, buttonCustom5, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
-    #if ENABLED(USER_CMD_6_ENABLE)
+    #if HAS_USER_ITEM(6)
       lv_label_set_text(labelCustom6, more_menu.custom6);
       lv_obj_align(labelCustom6, buttonCustom6, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
@@ -145,12 +171,24 @@ void lv_draw_more() {
   #if BUTTONS_EXIST(EN1, EN2, ENC)
     if (enc_ena) {
       lv_group_add_obj(g, buttonGCode);
-      TERN_(USER_CMD_1_ENABLE, lv_group_add_obj(g, buttonCustom1));
-      TERN_(USER_CMD_2_ENABLE, lv_group_add_obj(g, buttonCustom2));
-      TERN_(USER_CMD_3_ENABLE, lv_group_add_obj(g, buttonCustom3));
-      TERN_(USER_CMD_4_ENABLE, lv_group_add_obj(g, buttonCustom4));
-      TERN_(USER_CMD_5_ENABLE, lv_group_add_obj(g, buttonCustom5));
-      TERN_(USER_CMD_6_ENABLE, lv_group_add_obj(g, buttonCustom6));
+      #if HAS_USER_ITEM(1)
+        lv_group_add_obj(g, buttonCustom1);
+      #endif
+      #if HAS_USER_ITEM(2)
+        lv_group_add_obj(g, buttonCustom2);
+      #endif
+      #if HAS_USER_ITEM(3)
+        lv_group_add_obj(g, buttonCustom3);
+      #endif
+      #if HAS_USER_ITEM(4)
+        lv_group_add_obj(g, buttonCustom4);
+      #endif
+      #if HAS_USER_ITEM(5)
+        lv_group_add_obj(g, buttonCustom5);
+      #endif
+      #if HAS_USER_ITEM(6)
+        lv_group_add_obj(g, buttonCustom6);
+      #endif
       lv_group_add_obj(g, buttonBack);
     }
   #endif

commit c74f972627ab8dcf69a637268cf86682959bd18e
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Mon Feb 1 01:18:39 2021 +0100

    LVGL UI G-code console (#20755)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
index 76bb34988a..c085c4c936 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
@@ -41,20 +41,19 @@ enum {
   ID_CUSTOM_4,
   ID_CUSTOM_5,
   ID_CUSTOM_6,
-  ID_CUSTOM_7,
   ID_M_RETURN,
 };
 
 static void event_handler(lv_obj_t * obj, lv_event_t event) {
   if (event != LV_EVENT_RELEASED) return;
   switch (obj->mks_obj_id) {
+    case ID_GCODE: lv_clear_more(); lv_draw_gcode(true); break;
     case ID_CUSTOM_1: TERN_(USER_CMD_1_ENABLE, queue.inject_P(PSTR(USER_GCODE_1))); break;
     case ID_CUSTOM_2: TERN_(USER_CMD_2_ENABLE, queue.inject_P(PSTR(USER_GCODE_2))); break;
     case ID_CUSTOM_3: TERN_(USER_CMD_3_ENABLE, queue.inject_P(PSTR(USER_GCODE_3))); break;
     case ID_CUSTOM_4: TERN_(USER_CMD_4_ENABLE, queue.inject_P(PSTR(USER_GCODE_4))); break;
     case ID_CUSTOM_5: TERN_(USER_CMD_5_ENABLE, queue.inject_P(PSTR(USER_GCODE_5))); break;
     case ID_CUSTOM_6: TERN_(USER_CMD_6_ENABLE, queue.inject_P(PSTR(USER_GCODE_6))); break;
-    case ID_CUSTOM_7: TERN_(USER_CMD_7_ENABLE, queue.inject_P(PSTR(USER_GCODE_7))); break;
     case ID_M_RETURN:
       lv_clear_more();
       lv_draw_tool();
@@ -67,53 +66,54 @@ void lv_draw_more() {
 
   const bool enc_ena = TERN0(HAS_ROTARY_ENCODER, gCfgItems.encoder_enable);
 
+  lv_obj_t *buttonGCode = lv_imgbtn_create(scr, "F:/bmp_machine_para.bin", INTERVAL_V, titleHeight, event_handler, ID_GCODE);
+  if (enc_ena) lv_group_add_obj(g, buttonGCode);
+  lv_obj_t *labelGCode = lv_label_create_empty(buttonGCode);
+
   #if ENABLED(USER_CMD_1_ENABLE)
-    lv_obj_t *buttonCustom1 = lv_imgbtn_create(scr, "F:/bmp_custom1.bin", INTERVAL_V, titleHeight, event_handler, ID_CUSTOM_1);
+    lv_obj_t *buttonCustom1 = lv_imgbtn_create(scr, "F:/bmp_custom1.bin", BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_CUSTOM_1);
     if (enc_ena) lv_group_add_obj(g, buttonCustom1);
     lv_obj_t *labelCustom1 = lv_label_create_empty(buttonCustom1);
   #endif
 
   #if ENABLED(USER_CMD_2_ENABLE)
-    lv_obj_t *buttonCustom2 = lv_imgbtn_create(scr, "F:/bmp_custom2.bin", BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_CUSTOM_2);
+    lv_obj_t *buttonCustom2 = lv_imgbtn_create(scr, "F:/bmp_custom2.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_CUSTOM_2);
     if (enc_ena) lv_group_add_obj(g, buttonCustom2);
     lv_obj_t *labelCustom2 = lv_label_create_empty(buttonCustom2);
   #endif
 
   #if ENABLED(USER_CMD_3_ENABLE)
-    lv_obj_t *buttonCustom3 = lv_imgbtn_create(scr, "F:/bmp_custom3.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_CUSTOM_3);
+    lv_obj_t *buttonCustom3 = lv_imgbtn_create(scr, "F:/bmp_custom3.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_CUSTOM_3);
     if (enc_ena) lv_group_add_obj(g, buttonCustom3);
     lv_obj_t *labelCustom3 = lv_label_create_empty(buttonCustom3);
   #endif
 
   #if ENABLED(USER_CMD_4_ENABLE)
-    lv_obj_t *buttonCustom4 = lv_imgbtn_create(scr, "F:/bmp_custom4.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_CUSTOM_4);
+    lv_obj_t *buttonCustom4 = lv_imgbtn_create(scr, "F:/bmp_custom4.bin", INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_4);
     if (enc_ena) lv_group_add_obj(g, buttonCustom4);
     lv_obj_t *labelCustom4 = lv_label_create_empty(buttonCustom4);
   #endif
 
   #if ENABLED(USER_CMD_5_ENABLE)
-    lv_obj_t *buttonCustom5 = lv_imgbtn_create(scr, "F:/bmp_custom5.bin", INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_5);
+    lv_obj_t *buttonCustom5 = lv_imgbtn_create(scr, "F:/bmp_custom5.bin", BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_5);
     if (enc_ena) lv_group_add_obj(g, buttonCustom5);
     lv_obj_t *labelCustom5 = lv_label_create_empty(buttonCustom5);
   #endif
 
   #if ENABLED(USER_CMD_6_ENABLE)
-    lv_obj_t *buttonCustom6 = lv_imgbtn_create(scr, "F:/bmp_custom6.bin", BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_6);
+    lv_obj_t *buttonCustom6 = lv_imgbtn_create(scr, "F:/bmp_custom6.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_6);
     if (enc_ena) lv_group_add_obj(g, buttonCustom6);
     lv_obj_t *labelCustom6 = lv_label_create_empty(buttonCustom6);
   #endif
 
-  #if ENABLED(USER_CMD_7_ENABLE)
-    blv_obj_t *uttonCustom7 = lv_imgbtn_create(scr, "F:/bmp_custom7.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_7);
-    if (enc_ena) lv_group_add_obj(g, buttonCustom7);
-    lv_obj_t *labelCustom7 = lv_label_create_empty(buttonCustom7);
-  #endif
-
   lv_obj_t *buttonBack = lv_imgbtn_create(scr, "F:/bmp_return.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_M_RETURN);
   if (enc_ena) lv_group_add_obj(g, buttonBack);
   lv_obj_t *label_Back = lv_label_create_empty(buttonBack);
 
   if (gCfgItems.multiple_language != 0) {
+    lv_label_set_text(labelGCode, more_menu.gcode);
+    lv_obj_align(labelGCode, buttonGCode, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+
     #if ENABLED(USER_CMD_1_ENABLE)
       lv_label_set_text(labelCustom1, more_menu.custom1);
       lv_obj_align(labelCustom1, buttonCustom1, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
@@ -138,23 +138,19 @@ void lv_draw_more() {
       lv_label_set_text(labelCustom6, more_menu.custom6);
       lv_obj_align(labelCustom6, buttonCustom6, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
-    #if ENABLED(USER_CMD_7_ENABLE)
-      lv_label_set_text(labelCustom7, more_menu.custom7);
-      lv_obj_align(labelCustom7, buttonCustom7, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-    #endif
     lv_label_set_text(label_Back, common_menu.text_back);
     lv_obj_align(label_Back, buttonBack, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
   }
 
   #if BUTTONS_EXIST(EN1, EN2, ENC)
     if (enc_ena) {
+      lv_group_add_obj(g, buttonGCode);
       TERN_(USER_CMD_1_ENABLE, lv_group_add_obj(g, buttonCustom1));
       TERN_(USER_CMD_2_ENABLE, lv_group_add_obj(g, buttonCustom2));
       TERN_(USER_CMD_3_ENABLE, lv_group_add_obj(g, buttonCustom3));
       TERN_(USER_CMD_4_ENABLE, lv_group_add_obj(g, buttonCustom4));
       TERN_(USER_CMD_5_ENABLE, lv_group_add_obj(g, buttonCustom5));
       TERN_(USER_CMD_6_ENABLE, lv_group_add_obj(g, buttonCustom6));
-      TERN_(USER_CMD_7_ENABLE, lv_group_add_obj(g, buttonCustom7));
       lv_group_add_obj(g, buttonBack);
     }
   #endif

commit c753fc690f6cdd181213304224eee029988ffd34
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 14 00:23:56 2021 -0600

    More MKS UI prelim. cleanup

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
index f718e62589..76bb34988a 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
@@ -33,53 +33,28 @@
 extern lv_group_t * g;
 static lv_obj_t * scr;
 
-#define ID_CUSTOM_1   1
-#define ID_CUSTOM_2   2
-#define ID_CUSTOM_3   3
-#define ID_CUSTOM_4   4
-#define ID_CUSTOM_5   5
-#define ID_CUSTOM_6   6
-#define ID_CUSTOM_7   7
-#define ID_M_RETURN   8
+enum {
+  ID_GCODE = 1,
+  ID_CUSTOM_1,
+  ID_CUSTOM_2,
+  ID_CUSTOM_3,
+  ID_CUSTOM_4,
+  ID_CUSTOM_5,
+  ID_CUSTOM_6,
+  ID_CUSTOM_7,
+  ID_M_RETURN,
+};
 
 static void event_handler(lv_obj_t * obj, lv_event_t event) {
   if (event != LV_EVENT_RELEASED) return;
   switch (obj->mks_obj_id) {
-    #if ENABLED(USER_CMD_1_ENABLE)
-      case ID_CUSTOM_1:
-        queue.inject_P(PSTR(USER_GCODE_1));
-        break;
-    #endif
-    #if ENABLED(USER_CMD_2_ENABLE)
-      case ID_CUSTOM_2:
-        queue.inject_P(PSTR(USER_GCODE_2));
-        break;
-    #endif
-    #if ENABLED(USER_CMD_3_ENABLE)
-      case ID_CUSTOM_3:
-        queue.inject_P(PSTR(USER_GCODE_3));
-        break;
-    #endif
-    #if ENABLED(USER_CMD_4_ENABLE)
-      case ID_CUSTOM_4:
-        queue.inject_P(PSTR(USER_GCODE_4));
-        break;
-    #endif
-    #if ENABLED(USER_CMD_5_ENABLE)
-      case ID_CUSTOM_5:
-        queue.inject_P(PSTR(USER_GCODE_5));
-        break;
-    #endif
-    #if ENABLED(USER_CMD_6_ENABLE)
-      case ID_CUSTOM_6:
-        queue.inject_P(PSTR(USER_GCODE_6));
-        break;
-    #endif
-    #if ENABLED(USER_CMD_7_ENABLE)
-      case ID_CUSTOM_7:
-        queue.inject_P(PSTR(USER_GCODE_7));
-        break;
-    #endif
+    case ID_CUSTOM_1: TERN_(USER_CMD_1_ENABLE, queue.inject_P(PSTR(USER_GCODE_1))); break;
+    case ID_CUSTOM_2: TERN_(USER_CMD_2_ENABLE, queue.inject_P(PSTR(USER_GCODE_2))); break;
+    case ID_CUSTOM_3: TERN_(USER_CMD_3_ENABLE, queue.inject_P(PSTR(USER_GCODE_3))); break;
+    case ID_CUSTOM_4: TERN_(USER_CMD_4_ENABLE, queue.inject_P(PSTR(USER_GCODE_4))); break;
+    case ID_CUSTOM_5: TERN_(USER_CMD_5_ENABLE, queue.inject_P(PSTR(USER_GCODE_5))); break;
+    case ID_CUSTOM_6: TERN_(USER_CMD_6_ENABLE, queue.inject_P(PSTR(USER_GCODE_6))); break;
+    case ID_CUSTOM_7: TERN_(USER_CMD_7_ENABLE, queue.inject_P(PSTR(USER_GCODE_7))); break;
     case ID_M_RETURN:
       lv_clear_more();
       lv_draw_tool();
@@ -87,7 +62,7 @@ static void event_handler(lv_obj_t * obj, lv_event_t event) {
   }
 }
 
-void lv_draw_more(void) {
+void lv_draw_more() {
   scr = lv_screen_create(MORE_UI);
 
   const bool enc_ena = TERN0(HAS_ROTARY_ENCODER, gCfgItems.encoder_enable);
@@ -173,27 +148,13 @@ void lv_draw_more(void) {
 
   #if BUTTONS_EXIST(EN1, EN2, ENC)
     if (enc_ena) {
-      #if ENABLED(USER_CMD_1_ENABLE)
-        lv_group_add_obj(g, buttonCustom1);
-      #endif
-      #if ENABLED(USER_CMD_2_ENABLE)
-        lv_group_add_obj(g, buttonCustom2);
-      #endif
-      #if ENABLED(USER_CMD_3_ENABLE)
-        lv_group_add_obj(g, buttonCustom3);
-      #endif
-      #if ENABLED(USER_CMD_4_ENABLE)
-        lv_group_add_obj(g, buttonCustom4);
-      #endif
-      #if ENABLED(USER_CMD_5_ENABLE)
-        lv_group_add_obj(g, buttonCustom5);
-      #endif
-      #if ENABLED(USER_CMD_6_ENABLE)
-        lv_group_add_obj(g, buttonCustom6);
-      #endif
-      #if ENABLED(USER_CMD_7_ENABLE)
-        lv_group_add_obj(g, buttonCustom7);
-      #endif
+      TERN_(USER_CMD_1_ENABLE, lv_group_add_obj(g, buttonCustom1));
+      TERN_(USER_CMD_2_ENABLE, lv_group_add_obj(g, buttonCustom2));
+      TERN_(USER_CMD_3_ENABLE, lv_group_add_obj(g, buttonCustom3));
+      TERN_(USER_CMD_4_ENABLE, lv_group_add_obj(g, buttonCustom4));
+      TERN_(USER_CMD_5_ENABLE, lv_group_add_obj(g, buttonCustom5));
+      TERN_(USER_CMD_6_ENABLE, lv_group_add_obj(g, buttonCustom6));
+      TERN_(USER_CMD_7_ENABLE, lv_group_add_obj(g, buttonCustom7));
       lv_group_add_obj(g, buttonBack);
     }
   #endif

commit 35c1b330ec62e698a455176330e7d75600af461d
Author: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
Date:   Thu Jan 14 12:41:09 2021 +0800

    MKS WiFi for TFT_LVGL_UI (#20191)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
new file mode 100644
index 0000000000..f718e62589
--- /dev/null
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_more.cpp
@@ -0,0 +1,209 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#include "../../../../inc/MarlinConfigPre.h"
+
+#if HAS_TFT_LVGL_UI
+
+#include "../../../../MarlinCore.h"
+#include "draw_ready_print.h"
+#include "draw_set.h"
+#include "lv_conf.h"
+#include "draw_ui.h"
+#include "../../../../gcode/queue.h"
+
+extern lv_group_t * g;
+static lv_obj_t * scr;
+
+#define ID_CUSTOM_1   1
+#define ID_CUSTOM_2   2
+#define ID_CUSTOM_3   3
+#define ID_CUSTOM_4   4
+#define ID_CUSTOM_5   5
+#define ID_CUSTOM_6   6
+#define ID_CUSTOM_7   7
+#define ID_M_RETURN   8
+
+static void event_handler(lv_obj_t * obj, lv_event_t event) {
+  if (event != LV_EVENT_RELEASED) return;
+  switch (obj->mks_obj_id) {
+    #if ENABLED(USER_CMD_1_ENABLE)
+      case ID_CUSTOM_1:
+        queue.inject_P(PSTR(USER_GCODE_1));
+        break;
+    #endif
+    #if ENABLED(USER_CMD_2_ENABLE)
+      case ID_CUSTOM_2:
+        queue.inject_P(PSTR(USER_GCODE_2));
+        break;
+    #endif
+    #if ENABLED(USER_CMD_3_ENABLE)
+      case ID_CUSTOM_3:
+        queue.inject_P(PSTR(USER_GCODE_3));
+        break;
+    #endif
+    #if ENABLED(USER_CMD_4_ENABLE)
+      case ID_CUSTOM_4:
+        queue.inject_P(PSTR(USER_GCODE_4));
+        break;
+    #endif
+    #if ENABLED(USER_CMD_5_ENABLE)
+      case ID_CUSTOM_5:
+        queue.inject_P(PSTR(USER_GCODE_5));
+        break;
+    #endif
+    #if ENABLED(USER_CMD_6_ENABLE)
+      case ID_CUSTOM_6:
+        queue.inject_P(PSTR(USER_GCODE_6));
+        break;
+    #endif
+    #if ENABLED(USER_CMD_7_ENABLE)
+      case ID_CUSTOM_7:
+        queue.inject_P(PSTR(USER_GCODE_7));
+        break;
+    #endif
+    case ID_M_RETURN:
+      lv_clear_more();
+      lv_draw_tool();
+      break;
+  }
+}
+
+void lv_draw_more(void) {
+  scr = lv_screen_create(MORE_UI);
+
+  const bool enc_ena = TERN0(HAS_ROTARY_ENCODER, gCfgItems.encoder_enable);
+
+  #if ENABLED(USER_CMD_1_ENABLE)
+    lv_obj_t *buttonCustom1 = lv_imgbtn_create(scr, "F:/bmp_custom1.bin", INTERVAL_V, titleHeight, event_handler, ID_CUSTOM_1);
+    if (enc_ena) lv_group_add_obj(g, buttonCustom1);
+    lv_obj_t *labelCustom1 = lv_label_create_empty(buttonCustom1);
+  #endif
+
+  #if ENABLED(USER_CMD_2_ENABLE)
+    lv_obj_t *buttonCustom2 = lv_imgbtn_create(scr, "F:/bmp_custom2.bin", BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_CUSTOM_2);
+    if (enc_ena) lv_group_add_obj(g, buttonCustom2);
+    lv_obj_t *labelCustom2 = lv_label_create_empty(buttonCustom2);
+  #endif
+
+  #if ENABLED(USER_CMD_3_ENABLE)
+    lv_obj_t *buttonCustom3 = lv_imgbtn_create(scr, "F:/bmp_custom3.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_CUSTOM_3);
+    if (enc_ena) lv_group_add_obj(g, buttonCustom3);
+    lv_obj_t *labelCustom3 = lv_label_create_empty(buttonCustom3);
+  #endif
+
+  #if ENABLED(USER_CMD_4_ENABLE)
+    lv_obj_t *buttonCustom4 = lv_imgbtn_create(scr, "F:/bmp_custom4.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_CUSTOM_4);
+    if (enc_ena) lv_group_add_obj(g, buttonCustom4);
+    lv_obj_t *labelCustom4 = lv_label_create_empty(buttonCustom4);
+  #endif
+
+  #if ENABLED(USER_CMD_5_ENABLE)
+    lv_obj_t *buttonCustom5 = lv_imgbtn_create(scr, "F:/bmp_custom5.bin", INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_5);
+    if (enc_ena) lv_group_add_obj(g, buttonCustom5);
+    lv_obj_t *labelCustom5 = lv_label_create_empty(buttonCustom5);
+  #endif
+
+  #if ENABLED(USER_CMD_6_ENABLE)
+    lv_obj_t *buttonCustom6 = lv_imgbtn_create(scr, "F:/bmp_custom6.bin", BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_6);
+    if (enc_ena) lv_group_add_obj(g, buttonCustom6);
+    lv_obj_t *labelCustom6 = lv_label_create_empty(buttonCustom6);
+  #endif
+
+  #if ENABLED(USER_CMD_7_ENABLE)
+    blv_obj_t *uttonCustom7 = lv_imgbtn_create(scr, "F:/bmp_custom7.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_CUSTOM_7);
+    if (enc_ena) lv_group_add_obj(g, buttonCustom7);
+    lv_obj_t *labelCustom7 = lv_label_create_empty(buttonCustom7);
+  #endif
+
+  lv_obj_t *buttonBack = lv_imgbtn_create(scr, "F:/bmp_return.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_M_RETURN);
+  if (enc_ena) lv_group_add_obj(g, buttonBack);
+  lv_obj_t *label_Back = lv_label_create_empty(buttonBack);
+
+  if (gCfgItems.multiple_language != 0) {
+    #if ENABLED(USER_CMD_1_ENABLE)
+      lv_label_set_text(labelCustom1, more_menu.custom1);
+      lv_obj_align(labelCustom1, buttonCustom1, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #endif
+    #if ENABLED(USER_CMD_2_ENABLE)
+      lv_label_set_text(labelCustom2, more_menu.custom2);
+      lv_obj_align(labelCustom2, buttonCustom2, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #endif
+    #if ENABLED(USER_CMD_3_ENABLE)
+      lv_label_set_text(labelCustom3, more_menu.custom3);
+      lv_obj_align(labelCustom3, buttonCustom3, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #endif
+    #if ENABLED(USER_CMD_4_ENABLE)
+      lv_label_set_text(labelCustom4, more_menu.custom4);
+      lv_obj_align(labelCustom4, buttonCustom4, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #endif
+    #if ENABLED(USER_CMD_5_ENABLE)
+      lv_label_set_text(labelCustom5, more_menu.custom5);
+      lv_obj_align(labelCustom5, buttonCustom5, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #endif
+    #if ENABLED(USER_CMD_6_ENABLE)
+      lv_label_set_text(labelCustom6, more_menu.custom6);
+      lv_obj_align(labelCustom6, buttonCustom6, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #endif
+    #if ENABLED(USER_CMD_7_ENABLE)
+      lv_label_set_text(labelCustom7, more_menu.custom7);
+      lv_obj_align(labelCustom7, buttonCustom7, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #endif
+    lv_label_set_text(label_Back, common_menu.text_back);
+    lv_obj_align(label_Back, buttonBack, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+  }
+
+  #if BUTTONS_EXIST(EN1, EN2, ENC)
+    if (enc_ena) {
+      #if ENABLED(USER_CMD_1_ENABLE)
+        lv_group_add_obj(g, buttonCustom1);
+      #endif
+      #if ENABLED(USER_CMD_2_ENABLE)
+        lv_group_add_obj(g, buttonCustom2);
+      #endif
+      #if ENABLED(USER_CMD_3_ENABLE)
+        lv_group_add_obj(g, buttonCustom3);
+      #endif
+      #if ENABLED(USER_CMD_4_ENABLE)
+        lv_group_add_obj(g, buttonCustom4);
+      #endif
+      #if ENABLED(USER_CMD_5_ENABLE)
+        lv_group_add_obj(g, buttonCustom5);
+      #endif
+      #if ENABLED(USER_CMD_6_ENABLE)
+        lv_group_add_obj(g, buttonCustom6);
+      #endif
+      #if ENABLED(USER_CMD_7_ENABLE)
+        lv_group_add_obj(g, buttonCustom7);
+      #endif
+      lv_group_add_obj(g, buttonBack);
+    }
+  #endif
+}
+
+void lv_clear_more() {
+  #if BUTTONS_EXIST(EN1, EN2, ENC)
+    if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
+  #endif
+  lv_obj_del(scr);
+}
+
+#endif // HAS_TFT_LVGL_UI
