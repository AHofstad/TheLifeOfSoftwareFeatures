commit f4f75b6b1298147aad79dd7bf01fe2124666129c
Author: Nicolas Graziano <nicolas.graziano@free.fr>
Date:   Tue Jun 11 21:31:57 2024 +0200

    üî® Rename AnyCubic Vyper binary (#27167)
    
    The vyper board need a file name which begin with 'main_board_'

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index b164615c89..3a74b6caf7 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -170,20 +170,21 @@ board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
 
 #
 # Trigorilla V0.0.6 (GD32F103)
 #  modified version of env:STM32F103RE_creality
 #
 [env:trigorilla_v006]
 extends                     = env:STM32F103RE_creality
 board_build.offset          = 0x8000
 board_upload.offset_address = 0x08008000
+board_build.rename          = main_board_{date}_{time}.bin
 
 #
 # Creality 256K (STM32F103RC)
 #
 [env:STM32F103RC_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RC
 
 #
 # Creality 256K (STM32F103RC) with custom binary upload to SD (see above).

commit 71e0275a4c1c54b5083ac49b9a12e19e149f055e
Author: Skopus <71988971+skopusdotorg@users.noreply.github.com>
Date:   Sat Dec 23 13:54:19 2023 +0330

    ‚ú® Orca 3D Modular Controller (#26534)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 11814e4b16..b164615c89 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -486,10 +486,22 @@ board_upload.maximum_size = 499712
 #
 # Mingda D2 DZ301 V1.0 (STM32F103ZE)
 #
 [env:mingda_d301]
 extends                     = stm32_variant
 board                       = genericSTM32F103ZE
 board_build.variant         = MARLIN_F103Zx
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags} -DSTM32F1xx
+
+#
+# ORCA 3D SPRINGER Modular Controller (STM32F103VCT6)
+#
+[env:STM32F103VC_orca3d]
+extends                     = stm32_variant
+board                       = genericSTM32F103VC
+board_build.variant         = MARLIN_F103Vx
+build_flags                 = ${stm32_variant.build_flags} -DDEBUG_LEVEL=0
+monitor_speed               = 115200
+board_build.offset          = 0x8000
+board_upload.offset_address = 0x08008000

commit 7f59b65fc872e79675d2addab1af656f0d58bfff
Author: Luiz Eduardo Carneiro <lscarneiro@outlook.com>
Date:   Sat Nov 11 21:44:45 2023 -0500

    ‚ú® MINGDA D2 D301 v1.0 (#26340)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 2eab5d6f46..11814e4b16 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -475,10 +475,21 @@ extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VC
 board_build.variant  = MARLIN_F103Vx
 build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 
 [env:STM32F103VE_ZM3E4V2_USB]
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VE
 board_build.variant  = MARLIN_F103Vx
 build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 board_upload.maximum_size = 499712
+
+#
+# Mingda D2 DZ301 V1.0 (STM32F103ZE)
+#
+[env:mingda_d301]
+extends                     = stm32_variant
+board                       = genericSTM32F103ZE
+board_build.variant         = MARLIN_F103Zx
+board_build.offset          = 0x7000
+board_upload.offset_address = 0x08007000
+build_flags                 = ${stm32_variant.build_flags} -DSTM32F1xx

commit fd41757aef29c167fb8284ff8a8fc94ef566018a
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Tue Aug 8 00:54:27 2023 +0300

    üêõ Fix MKS Robin Mini servo timer (#26150)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 35a4dc4078..2eab5d6f46 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -295,21 +295,22 @@ extends                     = mks_robin_nano_v1v2_common
 extends                     = mks_robin_nano_v1v2_common
 build_flags                 = ${mks_robin_nano_v1v2_common.build_flags} -DENABLE_HWSERIAL3
 build_unflags               = ${mks_robin_nano_v1v2_common.build_unflags} -DUSBCON -DUSBD_USE_CDC
 
 #
 # MKS Robin Mini (STM32F103VET6)
 #
 [env:mks_robin_mini]
 extends                     = STM32F103VE_robin
 board_build.encrypt_mks     = Robin_mini.bin
-build_unflags               = ${STM32F103VE_robin.build_unflags} -DSS_TIMER=4
+build_unflags               = ${STM32F103VE_robin.build_unflags} -DSS_TIMER=4 -DTIMER_SERVO=TIM2
+build_flags                 = ${STM32F103VE_robin.build_flags} -DTIMER_SERVO=TIM1
 
 #
 # MKS Robin E3p (STM32F103VET6)
 #  - LVGL UI
 #
 [env:mks_robin_e3p]
 extends                     = STM32F103VE_robin
 board_build.encrypt_mks     = Robin_e3p.bin
 debug_tool                  = jlink
 upload_protocol             = jlink

commit ca0209b868be80d1438e1d695e2f103ab1025f92
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Mon Aug 7 14:00:50 2023 -0700

    üî® Fix USB FD env names (#26131)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 08686a1fb4..35a4dc4078 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -47,21 +47,21 @@ monitor_speed = 115200
 #
 [env:STM32F103ZE]
 extends       = common_stm32
 board         = genericSTM32F103ZE
 monitor_speed = 115200
 
 #
 # BigTreeTech SKR Mini V1.1 / SKR Mini E3 & MZ (STM32F103RCT6 ARM Cortex-M3)
 #
 #   STM32F103RC_btt ............. RCT6 with 256K
-#   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
+#   STM32F103RC_btt_USB ......... RCT6 with 256K with USB Media Share Support
 #
 [env:STM32F103RC_btt]
 extends                     = common_STM32F103RC_variant
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM5
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 
 [env:STM32F103RC_btt_USB]
 extends           = env:STM32F103RC_btt
@@ -199,21 +199,21 @@ board   = genericSTM32F103RC
 extends             = STM32F103Rx_creality
 board               = genericSTM32F103VE
 board_build.variant = MARLIN_F103Vx
 build_flags         = ${stm32_variant.build_flags}
                       -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                       -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 #
 # BigTreeTech SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
-#   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
+#   STM32F103RE_btt_USB ......... RET6 with USB Media Share Support
 #
 [env:STM32F103RE_btt]
 extends                     = stm32_variant
 board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5

commit 00ab015de7b728082196c203626dd215dc8427d3
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sat Jun 10 17:20:50 2023 -0700

    üî® Firmware rename followup (#25966)
    
    Followup to #25957

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index feb64a098f..08686a1fb4 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -114,21 +114,21 @@ build_unflags               = ${common_STM32F103RC_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 debug_tool                  = stlink
 
 #
 # Creality (STM32F103Rx)
 #
 [STM32F103Rx_creality]
 extends                     = stm32_variant
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x7000
-board_build.rename          = firmware-{date}-{time}
+board_build.rename          = firmware-{date}-{time}.bin
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink

commit 0ed46406d1d4b4280f8458d56b45b7bdab33e113
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 9 02:56:25 2023 -0500

    üî® Simpler distinct firmware rename (#25957)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index d19de4d2dd..feb64a098f 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -114,29 +114,28 @@ build_unflags               = ${common_STM32F103RC_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 debug_tool                  = stlink
 
 #
 # Creality (STM32F103Rx)
 #
 [STM32F103Rx_creality]
 extends                     = stm32_variant
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x7000
+board_build.rename          = firmware-{date}-{time}
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
-extra_scripts               = ${stm32_variant.extra_scripts}
-                              pre:buildroot/share/PlatformIO/scripts/random-bin.py
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 #
 # Creality (STM32F103Rx)
 # With custom upload to SD via Marlin with binary protocol.
 # Requires Marlin with BINARY_FILE_TRANSFER already installed on the target board.
 # If CUSTOM_FIRMWARE_UPLOAD is also installed, Marlin will reboot the board to install the firmware.
 # Currently CUSTOM_FIRMWARE_UPLOAD must also be enabled to use 'xfer' build envs.

commit 9a7d9e6995f4f66c4b48147ec7876d49d4b3ae77
Author: Martin Turski <turningtides@outlook.de>
Date:   Thu Apr 27 14:05:24 2023 +0200

    üßë‚Äçüíª Optimize PlatformIO source filtering (#25332)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 230f1ae774..d19de4d2dd 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -246,21 +246,21 @@ build_unflags        = ${stm32_variant.build_unflags}
 
 #
 # Malyan M200 (STM32F103CB)
 #
 [env:STM32F103CB_malyan]
 extends          = common_stm32
 board            = malyanm200_f103cb
 build_flags      = ${common_stm32.build_flags}
                    -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB
                    -DHAL_UART_MODULE_ENABLED
-build_src_filter = ${common.default_src_filter} +<src/HAL/STM32>
+build_src_filter = ${common.default_src_filter} +<src/HAL/STM32> -<src/HAL/STM32/tft>
 
 #
 # FLYmaker FLY Mini (STM32F103RCT6)
 #
 [env:FLY_MINI]
 extends                     = stm32_variant
 board                       = genericSTM32F103RC
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000

commit 358a54ecdc4e13d46d3859485255ef0856e3f2ba
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 26 14:39:56 2023 -0500

    üî® Servo Timer 1 with STM32F103RC_fysetc (#25741)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 9aaa39ea20..230f1ae774 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -364,20 +364,21 @@ build_flags                 = ${stm32_variant.build_flags}
 extra_scripts               = ${stm32_variant.extra_scripts}
                               buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
 
 #
 # FYSETC STM32F103RC
 #
 [env:STM32F103RC_fysetc]
 extends         = common_STM32F103RC_variant
 extra_scripts   = ${common_STM32F103RC_variant.extra_scripts}
                   buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
+build_flags     = ${common_STM32F103RC_variant.build_flags} -DTIMER_SERVO=TIM1
 lib_ldf_mode    = chain
 debug_tool      = stlink
 upload_protocol = serial
 
 #
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
 extends                     = stm32_variant
 lib_deps                    = ${common.lib_deps}

commit ff44663f5fe4e9ddc1cb2ddd8c2a6c5994e3d143
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Tue Apr 18 07:51:25 2023 +1200

    üî® Fix, clean up STM32F1 envs (#25697)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 783d05fab4..9aaa39ea20 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -127,30 +127,20 @@ build_flags                 = ${stm32_variant.build_flags}
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 extra_scripts               = ${stm32_variant.extra_scripts}
                               pre:buildroot/share/PlatformIO/scripts/random-bin.py
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
-#
-# Trigorilla V0.0.6 (GD32F103)
-#  modified version of env:STM32F103RE_creality
-#
-[env:trigorilla_v006]
-extends                     = STM32F103Rx_creality
-board                       = genericSTM32F103RE
-board_build.offset          = 0x8000
-board_upload.offset_address = 0x08008000
-
 #
 # Creality (STM32F103Rx)
 # With custom upload to SD via Marlin with binary protocol.
 # Requires Marlin with BINARY_FILE_TRANSFER already installed on the target board.
 # If CUSTOM_FIRMWARE_UPLOAD is also installed, Marlin will reboot the board to install the firmware.
 # Currently CUSTOM_FIRMWARE_UPLOAD must also be enabled to use 'xfer' build envs.
 #
 [STM32F103Rx_creality_xfer]
 extends         = STM32F103Rx_creality
 build_flags     = ${STM32F103Rx_creality.build_flags} -DXFER_BUILD
@@ -169,24 +159,33 @@ board   = genericSTM32F103RE
 # Creality 512K (STM32F103RE) with custom binary upload to SD (see above).
 #
 [env:STM32F103RE_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RE
 
 #
 # Creality 512K (STM32F103RE) for new 64KiB bootloader (CR-10 Smart Pro printer)
 #
 [env:STM32F103RE_creality_smartPro]
-extends                     = STM32F103Rx_creality
+extends                     = env:STM32F103RE_creality
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
 
+#
+# Trigorilla V0.0.6 (GD32F103)
+#  modified version of env:STM32F103RE_creality
+#
+[env:trigorilla_v006]
+extends                     = env:STM32F103RE_creality
+board_build.offset          = 0x8000
+board_upload.offset_address = 0x08008000
+
 #
 # Creality 256K (STM32F103RC)
 #
 [env:STM32F103RC_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RC
 
 #
 # Creality 256K (STM32F103RC) with custom binary upload to SD (see above).
 #
@@ -223,68 +222,21 @@ build_flags                 = ${stm32_variant.build_flags}
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 [env:STM32F103RE_btt_USB]
 extends           = env:STM32F103RE_btt
 platform_packages = ${stm_flash_drive.platform_packages}
 build_flags       = ${env:STM32F103RE_btt.build_flags}
                     -DUSE_USB_FS -DUSBD_IRQ_PRIO=5
                     -DUSBD_IRQ_SUBPRIO=6 -DUSBD_USE_CDC_MSC
-build_unflags     = ${stm32_variant.build_unflags} -DUSBD_USE_CDC
-
-#
-# FLSUN QQS Pro (STM32F103VET6)
-# board Hispeedv1
-#
-[env:flsun_hispeedv1]
-extends                     = stm32_variant
-board                       = genericSTM32F103VE
-board_build.variant         = MARLIN_F103Vx
-board_build.encrypt_mks     = Robin_mini.bin
-board_build.offset          = 0x7000
-board_upload.offset_address = 0x08007000
-build_flags                 = ${stm32_variant.build_flags}
-                              -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
-                              -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
-build_unflags               = ${stm32_variant.build_unflags}
-                              -DUSBCON -DUSBD_USE_CDC
-
-[mks_robin_nano_v1v2_common]
-extends                     = stm32_variant
-board                       = genericSTM32F103VE
-board_build.variant         = MARLIN_F103Vx
-board_build.encrypt_mks     = Robin_nano35.bin
-board_build.offset          = 0x7000
-board_upload.offset_address = 0x08007000
-debug_tool                  = stlink
-upload_protocol             = stlink
-
-#
-# MKS Robin Nano V1.2 and V2
-#
-[env:mks_robin_nano_v1v2]
-extends                     = mks_robin_nano_v1v2_common
-build_flags                 = ${stm32_variant.build_flags}
-                              -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
-                              -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
-build_unflags               = ${stm32_variant.build_unflags}
-                              -DUSBCON -DUSBD_USE_CDC
-
-#
-# MKS/ZNP Robin Nano V1.2 and V2 with native USB modification
-#
-[env:mks_robin_nano_v1v2_usbmod]
-extends                     = mks_robin_nano_v1v2_common
-build_flags                 = ${common_stm32.build_flags}
-                              -DMCU_STM32F103VE -DSS_TIMER=4
-                              -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
+build_unflags     = ${env:STM32F103RE_btt.build_unflags} -DUSBD_USE_CDC
 
 #
 # Mingda MPX_ARM_MINI
 #
 [env:mingda_mpx_arm_mini]
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x10000
 build_flags          = ${stm32_variant.build_flags}
@@ -308,31 +260,77 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/STM32>
 #
 [env:FLY_MINI]
 extends                     = stm32_variant
 board                       = genericSTM32F103RC
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 build_flags                 = ${stm32_variant.build_flags} -DSS_TIMER=4
 
 #
-# MKS Robin Mini (STM32F103VET6)
+# (STM32F103VE_robin)
 #
-[env:mks_robin_mini]
+[STM32F103VE_robin]
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
-board_build.encrypt_mks     = Robin_mini.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
-build_flags                 = ${stm32_variant.build_flags}
-                              -DMCU_STM32F103VE -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
+build_flags                 = ${stm32_variant.build_flags} -DMCU_STM32F103VE -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2 -DSS_TIMER=4
+
+[mks_robin_nano_v1v2_common]
+extends                     = STM32F103VE_robin
+board_build.encrypt_mks     = Robin_nano35.bin
+debug_tool                  = stlink
+upload_protocol             = stlink
+
+#
+# MKS/ZNP Robin Nano V1.2 and V2 with native USB modification
+#
+[env:mks_robin_nano_v1v2_usbmod]
+extends                     = mks_robin_nano_v1v2_common
+
+#
+# MKS Robin Nano V1.2 and V2
+#
+[env:mks_robin_nano_v1v2]
+extends                     = mks_robin_nano_v1v2_common
+build_flags                 = ${mks_robin_nano_v1v2_common.build_flags} -DENABLE_HWSERIAL3
+build_unflags               = ${mks_robin_nano_v1v2_common.build_unflags} -DUSBCON -DUSBD_USE_CDC
+
+#
+# MKS Robin Mini (STM32F103VET6)
+#
+[env:mks_robin_mini]
+extends                     = STM32F103VE_robin
+board_build.encrypt_mks     = Robin_mini.bin
+build_unflags               = ${STM32F103VE_robin.build_unflags} -DSS_TIMER=4
+
+#
+# MKS Robin E3p (STM32F103VET6)
+#  - LVGL UI
+#
+[env:mks_robin_e3p]
+extends                     = STM32F103VE_robin
+board_build.encrypt_mks     = Robin_e3p.bin
+debug_tool                  = jlink
+upload_protocol             = jlink
+
+#
+# FLSUN QQS Pro (STM32F103VET6)
+# Hispeedv1 Robin mini variant
+#
+[env:flsun_hispeedv1]
+extends                     = STM32F103VE_robin
+board_build.encrypt_mks     = Robin_mini.bin
+build_flags                 = ${STM32F103VE_robin.build_flags} -DENABLE_HWSERIAL3
+build_unflags               = ${STM32F103VE_robin.build_unflags} -DUSBCON -DUSBD_USE_CDC
 
 #
 # MKS Robin Lite/Lite2 (STM32F103RCT6)
 #
 [env:mks_robin_lite]
 extends                     = stm32_variant
 board                       = genericSTM32F103RC
 board_build.variant         = MARLIN_F103Rx
 board_build.encrypt_mks     = mksLite.bin
 board_build.offset          = 0x5000
@@ -345,37 +343,20 @@ board_upload.offset_address = 0x08005000
 extends                     = env:mks_robin_lite
 board_build.encrypt_mks     = mksLite3.bin
 
 #
 # MKS Robin Pro (STM32F103ZET6)
 #
 [env:mks_robin_pro]
 extends                 = env:mks_robin
 board_build.encrypt_mks = Robin_pro.bin
 
-#
-# MKS Robin E3p (STM32F103VET6)
-#  - LVGL UI
-#
-[env:mks_robin_e3p]
-extends                     = stm32_variant
-board                       = genericSTM32F103VE
-board_build.variant         = MARLIN_F103Vx
-board_build.encrypt_mks     = Robin_e3p.bin
-board_build.offset          = 0x7000
-board_upload.offset_address = 0x08007000
-build_flags                 = ${stm32_variant.build_flags}
-                              -DMCU_STM32F103VE -DSS_TIMER=4
-                              -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
-debug_tool                  = jlink
-upload_protocol             = jlink
-
 #
 # JGAurora A5S A1 (STM32F103ZET6)
 #
 [env:jgaurora_a5s_a1]
 extends                     = stm32_variant
 board                       = genericSTM32F103ZE
 board_build.variant         = MARLIN_F103Zx
 board_build.offset          = 0xA000
 board_upload.offset_address = 0x0800A000
 build_flags                 = ${stm32_variant.build_flags}

commit 0021a58943721a81b1ef23fa5e7366cfd80a3d28
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Sun Mar 26 04:07:25 2023 -0500

    ‚ú® AnyCubic Vyper / Vyper LCD (#25405)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 1adc83a8f9..783d05fab4 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -127,20 +127,30 @@ build_flags                 = ${stm32_variant.build_flags}
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 extra_scripts               = ${stm32_variant.extra_scripts}
                               pre:buildroot/share/PlatformIO/scripts/random-bin.py
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
+#
+# Trigorilla V0.0.6 (GD32F103)
+#  modified version of env:STM32F103RE_creality
+#
+[env:trigorilla_v006]
+extends                     = STM32F103Rx_creality
+board                       = genericSTM32F103RE
+board_build.offset          = 0x8000
+board_upload.offset_address = 0x08008000
+
 #
 # Creality (STM32F103Rx)
 # With custom upload to SD via Marlin with binary protocol.
 # Requires Marlin with BINARY_FILE_TRANSFER already installed on the target board.
 # If CUSTOM_FIRMWARE_UPLOAD is also installed, Marlin will reboot the board to install the firmware.
 # Currently CUSTOM_FIRMWARE_UPLOAD must also be enabled to use 'xfer' build envs.
 #
 [STM32F103Rx_creality_xfer]
 extends         = STM32F103Rx_creality
 build_flags     = ${STM32F103Rx_creality.build_flags} -DXFER_BUILD

commit 8a9de407a1105a1b21274bfd018d9aabd6ab9df5
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Thu Feb 9 06:46:02 2023 +0300

    üî® Adjust INI comments (#25183)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index d8db3628c3..1adc83a8f9 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -128,52 +128,65 @@ build_flags                 = ${stm32_variant.build_flags}
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 extra_scripts               = ${stm32_variant.extra_scripts}
                               pre:buildroot/share/PlatformIO/scripts/random-bin.py
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 #
-# Custom upload to SD via Marlin with Binary Protocol
+# Creality (STM32F103Rx)
+# With custom upload to SD via Marlin with binary protocol.
+# Requires Marlin with BINARY_FILE_TRANSFER already installed on the target board.
+# If CUSTOM_FIRMWARE_UPLOAD is also installed, Marlin will reboot the board to install the firmware.
+# Currently CUSTOM_FIRMWARE_UPLOAD must also be enabled to use 'xfer' build envs.
 #
 [STM32F103Rx_creality_xfer]
 extends         = STM32F103Rx_creality
 build_flags     = ${STM32F103Rx_creality.build_flags} -DXFER_BUILD
 extra_scripts   = ${STM32F103Rx_creality.extra_scripts}
                   pre:buildroot/share/scripts/upload.py
 upload_protocol = custom
 
 #
 # Creality 512K (STM32F103RE)
 #
 [env:STM32F103RE_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RE
 
+#
+# Creality 512K (STM32F103RE) with custom binary upload to SD (see above).
+#
 [env:STM32F103RE_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RE
 
+#
+# Creality 512K (STM32F103RE) for new 64KiB bootloader (CR-10 Smart Pro printer)
+#
 [env:STM32F103RE_creality_smartPro]
 extends                     = STM32F103Rx_creality
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
 
 #
 # Creality 256K (STM32F103RC)
 #
 [env:STM32F103RC_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RC
 
+#
+# Creality 256K (STM32F103RC) with custom binary upload to SD (see above).
+#
 [env:STM32F103RC_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RC
 
 #
 # Creality 512K (STM32F103VE)
 #
 [env:STM32F103VE_creality]
 extends             = STM32F103Rx_creality
 board               = genericSTM32F103VE

commit 91fafec4240ab28eb18e281dbf8937c283c28acb
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sun Oct 2 05:25:00 2022 +1300

    ‚ú® Creality v5.2.1 board (#24815)
    
    Followup to #24760

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index ecdf554328..d8db3628c3 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -164,20 +164,30 @@ board_upload.offset_address = 0x08010000
 # Creality 256K (STM32F103RC)
 #
 [env:STM32F103RC_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RC
 
 [env:STM32F103RC_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RC
 
+#
+# Creality 512K (STM32F103VE)
+#
+[env:STM32F103VE_creality]
+extends             = STM32F103Rx_creality
+board               = genericSTM32F103VE
+board_build.variant = MARLIN_F103Vx
+build_flags         = ${stm32_variant.build_flags}
+                      -DSS_TIMER=4 -DTIMER_SERVO=TIM5
+                      -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 #
 # BigTreeTech SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
 extends                     = stm32_variant
 board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx
@@ -460,31 +470,10 @@ extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VC
 board_build.variant  = MARLIN_F103Vx
 build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 
 [env:STM32F103VE_ZM3E4V2_USB]
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VE
 board_build.variant  = MARLIN_F103Vx
 build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 board_upload.maximum_size = 499712
-
-#
-# Creality (STM32F103RET6)
-#
-[env:STM32F103RET6_creality]
-platform                    = ${common_stm32f1.platform}
-extends                     = stm32_variant
-board                       = genericSTM32F103VE
-board_build.variant         = MARLIN_F103Vx
-board_build.offset          = 0x7000
-board_upload.offset_address = 0x08007000
-build_flags                 = ${stm32_variant.build_flags}
-                              -DSS_TIMER=4 -DTIMER_SERVO=TIM5
-                              -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
-build_unflags               = ${stm32_variant.build_unflags}
-                              -DUSBCON -DUSBD_USE_CDC
-extra_scripts               = ${stm32_variant.extra_scripts}
-                              pre:buildroot/share/PlatformIO/scripts/random-bin.py
-monitor_speed               = 115200
-debug_tool                  = jlink
-upload_protocol             = jlink

commit 1b3941c0d2064f5417b33b491db28930e8412e86
Author: Plynix / Ben Hartiwch <77836725+Plyn1x@users.noreply.github.com>
Date:   Wed Sep 28 16:46:50 2022 +0200

    ‚ú® Creality v5.2.1 board (#24760)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 49dac9e476..ecdf554328 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -460,10 +460,31 @@ extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VC
 board_build.variant  = MARLIN_F103Vx
 build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 
 [env:STM32F103VE_ZM3E4V2_USB]
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VE
 board_build.variant  = MARLIN_F103Vx
 build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 board_upload.maximum_size = 499712
+
+#
+# Creality (STM32F103RET6)
+#
+[env:STM32F103RET6_creality]
+platform                    = ${common_stm32f1.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103VE
+board_build.variant         = MARLIN_F103Vx
+board_build.offset          = 0x7000
+board_upload.offset_address = 0x08007000
+build_flags                 = ${stm32_variant.build_flags}
+                              -DSS_TIMER=4 -DTIMER_SERVO=TIM5
+                              -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
+build_unflags               = ${stm32_variant.build_unflags}
+                              -DUSBCON -DUSBD_USE_CDC
+extra_scripts               = ${stm32_variant.extra_scripts}
+                              pre:buildroot/share/PlatformIO/scripts/random-bin.py
+monitor_speed               = 115200
+debug_tool                  = jlink
+upload_protocol             = jlink

commit bcb6f6e85e1ec2ccd4e4cfa119109637f4381675
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Fri Sep 2 05:47:37 2022 +0300

    üî® Native USB modified env followup (#24669)
    
    Followup to #24619

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index f06eef4594..49dac9e476 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -231,23 +231,23 @@ upload_protocol             = stlink
 #
 [env:mks_robin_nano_v1v2]
 extends                     = mks_robin_nano_v1v2_common
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 
 #
-# MKS/ZNP Robin Nano v1.2 with native USB modification
+# MKS/ZNP Robin Nano V1.2 and V2 with native USB modification
 #
-[env:mks_robin_nano_v1_2_usbmod]
+[env:mks_robin_nano_v1v2_usbmod]
 extends                     = mks_robin_nano_v1v2_common
 build_flags                 = ${common_stm32.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 
 #
 # Mingda MPX_ARM_MINI
 #
 [env:mingda_mpx_arm_mini]
 extends              = stm32_variant

commit 2a1c2e26ed38e55c52d569807884585a9523389c
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Mon Aug 22 18:31:02 2022 +0300

    ‚ú® Robin Nano v1 CDC (USB mod) (#24619)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 1e29ea6de5..f06eef4594 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -209,37 +209,49 @@ board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
 board_build.encrypt_mks     = Robin_mini.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 
-#
-# MKS Robin Nano V1.2 and V2
-#
-[env:mks_robin_nano35]
+[mks_robin_nano_v1v2_common]
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
 board_build.encrypt_mks     = Robin_nano35.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
+debug_tool                  = stlink
+upload_protocol             = stlink
+
+#
+# MKS Robin Nano V1.2 and V2
+#
+[env:mks_robin_nano_v1v2]
+extends                     = mks_robin_nano_v1v2_common
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
-debug_tool                  = jlink
-upload_protocol             = jlink
+
+#
+# MKS/ZNP Robin Nano v1.2 with native USB modification
+#
+[env:mks_robin_nano_v1_2_usbmod]
+extends                     = mks_robin_nano_v1v2_common
+build_flags                 = ${common_stm32.build_flags}
+                              -DMCU_STM32F103VE -DSS_TIMER=4
+                              -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 
 #
 # Mingda MPX_ARM_MINI
 #
 [env:mingda_mpx_arm_mini]
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x10000
 build_flags          = ${stm32_variant.build_flags}

commit 83320f1052dd09bff7aae789372e7bffccbced97
Author: Mark <niujl123@sina.com>
Date:   Sat Aug 6 14:14:58 2022 +0800

    ‚ú® Bed Distance Sensor (#24554)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index d68704216f..1e29ea6de5 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -76,21 +76,22 @@ build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 #
 # Panda Pi V2.9 - Standalone (STM32F103RC)
 # Headless, without direct Pi control, but potentially hosting OctoPrint, stepdaemon, etc.
 #
 [env:PANDA_PI_V29]
 extends                     = common_STM32F103RC_variant
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM1
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
-
+lib_deps =
+  markyue/Panda_SoftMasterI2C@1.0.3
 #
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
 extends                 = stm32_variant
 board                   = genericSTM32F103ZE
 board_build.variant     = MARLIN_F103Zx
 board_build.encrypt_mks = Robin.bin
 board_build.offset      = 0x7000

commit 7f10f8932eb6ca377bcc69fae2bd9b72e4aca172
Author: J.C. Nelson <32139633+xC0000005@users.noreply.github.com>
Date:   Fri Aug 5 22:09:46 2022 -0700

    üî® Trigorilla Pro disk based update (#24591)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index c0415c5f84..d68704216f 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -371,26 +371,45 @@ debug_tool                  = stlink
 #
 [env:trigorilla_pro]
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 build_flags          = ${stm32_variant.build_flags}
                        -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${stm32_variant.build_unflags}
                        -DUSBCON -DUSBD_USE_CDC
 
+#
+# TRIGORILLA PRO DISK BASED (STM32F103ZET6)
+# Builds for Trigorilla to update from SD
+#
+[env:trigorilla_pro_disk]
+extends              = stm32_variant
+board                = genericSTM32F103ZE
+board_build.crypt_chitu = update.zw
+board_build.variant  = MARLIN_F103Zx
+board_build.offset   = 0x8800
+build_flags          = ${stm32_variant.build_flags}
+                       -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
+build_unflags        = ${stm32_variant.build_unflags}
+                       -DUSBCON -DUSBD_USE_CDC
+extra_scripts        = ${stm32_variant.extra_scripts}
+                       buildroot/share/PlatformIO/scripts/chitu_crypt.py
+
+
 #
 # Chitu boards like Tronxy X5s (STM32F103ZET6)
 #
 [env:chitu_f103]
 extends              = stm32_variant
 board                = genericSTM32F103ZE
+board_build.crypt_chitu = update.cbd
 board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x8800
 build_flags          = ${stm32_variant.build_flags}
                        -DSTM32F1xx
 build_unflags        = ${stm32_variant.build_unflags}
 extra_scripts        = ${stm32_variant.extra_scripts}
                        buildroot/share/PlatformIO/scripts/chitu_crypt.py
 
 #
 # Some Chitu V5 boards have a problem with GPIO init.

commit 0f0edd2e3732cb586833bc1a1d08e9eed61bd6da
Author: lukasradek <lukasradek@users.noreply.github.com>
Date:   Sat Jul 30 01:53:39 2022 +0200

    üìù README Updates (#24564)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 8dc9bc3061..c0415c5f84 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -44,21 +44,21 @@ monitor_speed = 115200
 
 #
 # STM32F103ZE
 #
 [env:STM32F103ZE]
 extends       = common_stm32
 board         = genericSTM32F103ZE
 monitor_speed = 115200
 
 #
-# BigTree SKR Mini V1.1 / SKR Mini E3 & MZ (STM32F103RCT6 ARM Cortex-M3)
+# BigTreeTech SKR Mini V1.1 / SKR Mini E3 & MZ (STM32F103RCT6 ARM Cortex-M3)
 #
 #   STM32F103RC_btt ............. RCT6 with 256K
 #   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
 #
 [env:STM32F103RC_btt]
 extends                     = common_STM32F103RC_variant
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM5
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
@@ -164,21 +164,21 @@ board_upload.offset_address = 0x08010000
 #
 [env:STM32F103RC_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RC
 
 [env:STM32F103RC_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RC
 
 #
-# BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
+# BigTreeTech SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
 extends                     = stm32_variant
 board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000

commit 12a869e2ad3b36d6b965be2738308956963e2da4
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Thu Jun 23 23:58:26 2022 -0500

    üêõ Fix Lerdge build / encrypt (#24391)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 91005af2ff..8dc9bc3061 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -82,36 +82,36 @@ extends                     = common_STM32F103RC_variant
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM1
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 
 #
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
-extends              = stm32_variant
-board                = genericSTM32F103ZE
-board_build.variant  = MARLIN_F103Zx
-board_build.encrypt  = Robin.bin
-board_build.offset   = 0x7000
-build_flags          = ${stm32_variant.build_flags}
-                       -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
-build_unflags        = ${stm32_variant.build_unflags}
-                       -DUSBCON -DUSBD_USE_CDC
+extends                 = stm32_variant
+board                   = genericSTM32F103ZE
+board_build.variant     = MARLIN_F103Zx
+board_build.encrypt_mks = Robin.bin
+board_build.offset      = 0x7000
+build_flags             = ${stm32_variant.build_flags}
+                          -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
+build_unflags           = ${stm32_variant.build_unflags}
+                          -DUSBCON -DUSBD_USE_CDC
 
 #
 # MKS Robin E3/E3D (STM32F103RCT6) with TMC2209
 #
 [env:mks_robin_e3]
 extends                     = common_STM32F103RC_variant
-board_build.encrypt         = Robin_e3.bin
+board_build.encrypt_mks     = Robin_e3.bin
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM5 -DDEFAULT_SPI=3
 build_unflags               = ${common_STM32F103RC_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 debug_tool                  = stlink
 
 #
 # Creality (STM32F103Rx)
@@ -199,37 +199,37 @@ build_flags       = ${env:STM32F103RE_btt.build_flags}
 build_unflags     = ${stm32_variant.build_unflags} -DUSBD_USE_CDC
 
 #
 # FLSUN QQS Pro (STM32F103VET6)
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
-board_build.encrypt         = Robin_mini.bin
+board_build.encrypt_mks     = Robin_mini.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 
 #
 # MKS Robin Nano V1.2 and V2
 #
 [env:mks_robin_nano35]
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
-board_build.encrypt         = Robin_nano35.bin
+board_build.encrypt_mks     = Robin_nano35.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 debug_tool                  = jlink
 upload_protocol             = jlink
 
@@ -268,60 +268,60 @@ board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 build_flags                 = ${stm32_variant.build_flags} -DSS_TIMER=4
 
 #
 # MKS Robin Mini (STM32F103VET6)
 #
 [env:mks_robin_mini]
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
-board_build.encrypt         = Robin_mini.bin
+board_build.encrypt_mks     = Robin_mini.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 
 #
 # MKS Robin Lite/Lite2 (STM32F103RCT6)
 #
 [env:mks_robin_lite]
 extends                     = stm32_variant
 board                       = genericSTM32F103RC
 board_build.variant         = MARLIN_F103Rx
-board_build.encrypt         = mksLite.bin
+board_build.encrypt_mks     = mksLite.bin
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 
 #
 # MKS ROBIN LITE3 (STM32F103RCT6)
 #
 [env:mks_robin_lite3]
 extends                     = env:mks_robin_lite
-board_build.encrypt         = mksLite3.bin
+board_build.encrypt_mks     = mksLite3.bin
 
 #
 # MKS Robin Pro (STM32F103ZET6)
 #
 [env:mks_robin_pro]
-extends             = env:mks_robin
-board_build.encrypt = Robin_pro.bin
+extends                 = env:mks_robin
+board_build.encrypt_mks = Robin_pro.bin
 
 #
 # MKS Robin E3p (STM32F103VET6)
 #  - LVGL UI
 #
 [env:mks_robin_e3p]
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
-board_build.encrypt         = Robin_e3p.bin
+board_build.encrypt_mks     = Robin_e3p.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 #
 # JGAurora A5S A1 (STM32F103ZET6)

commit 43e9fe7f8874fe11ea7152276e43279c88fea1e8
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Jun 11 17:03:20 2022 +1200

    üêõ Fix JGAurora A5S A1 build (#24326)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 7493e3682c..91005af2ff 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -324,21 +324,20 @@ debug_tool                  = jlink
 upload_protocol             = jlink
 
 #
 # JGAurora A5S A1 (STM32F103ZET6)
 #
 [env:jgaurora_a5s_a1]
 extends                     = stm32_variant
 board                       = genericSTM32F103ZE
 board_build.variant         = MARLIN_F103Zx
 board_build.offset          = 0xA000
-board_build.rename          = firmware_for_sd_upload.bin
 board_upload.offset_address = 0x0800A000
 build_flags                 = ${stm32_variant.build_flags}
                               -DSTM32F1xx -DSTM32_XL_DENSITY
 extra_scripts               = ${stm32_variant.extra_scripts}
                               buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
 
 #
 # FYSETC STM32F103RC
 #
 [env:STM32F103RC_fysetc]

commit 2b4a89eafe50322d276a6104374e797c00cedfac
Author: elimisback <elimisback@gmail.com>
Date:   Sat May 28 16:22:59 2022 -0400

    üî® BTT STM32G0B1RE xfer build (#24245)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 6bf6a1cb85..7493e3682c 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -131,20 +131,21 @@ extra_scripts               = ${stm32_variant.extra_scripts}
                               pre:buildroot/share/PlatformIO/scripts/random-bin.py
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 #
 # Custom upload to SD via Marlin with Binary Protocol
 #
 [STM32F103Rx_creality_xfer]
 extends         = STM32F103Rx_creality
+build_flags     = ${STM32F103Rx_creality.build_flags} -DXFER_BUILD
 extra_scripts   = ${STM32F103Rx_creality.extra_scripts}
                   pre:buildroot/share/scripts/upload.py
 upload_protocol = custom
 
 #
 # Creality 512K (STM32F103RE)
 #
 [env:STM32F103RE_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RE

commit 639b1f64c64c581f67c5133f5d13144eccfb90bd
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon May 23 19:39:50 2022 +1200

    Revert "Firmware upload‚Ä¶" (#24229)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 4b3714f6d4..6bf6a1cb85 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -141,43 +141,36 @@ extends         = STM32F103Rx_creality
 extra_scripts   = ${STM32F103Rx_creality.extra_scripts}
                   pre:buildroot/share/scripts/upload.py
 upload_protocol = custom
 
 #
 # Creality 512K (STM32F103RE)
 #
 [env:STM32F103RE_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RE
-extra_scripts  = ${STM32F103Rx_creality.extra_scripts}
-                 buildroot/share/PlatformIO/scripts/upload_prompt_extra_script.py
-upload_protocol = mbed
-
 
 [env:STM32F103RE_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RE
 
 [env:STM32F103RE_creality_smartPro]
 extends                     = STM32F103Rx_creality
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
 
 #
 # Creality 256K (STM32F103RC)
 #
 [env:STM32F103RC_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RC
-extra_scripts  = ${STM32F103Rx_creality.extra_scripts}
-                 buildroot/share/PlatformIO/scripts/upload_prompt_extra_script.py
-upload_protocol = mbed
 
 [env:STM32F103RC_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RC
 
 #
 # BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)

commit c1ff38c7a0d2d578638324212677d2e855fb190f
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon May 23 14:19:10 2022 +1200

    üö∏ Firmware upload destination prompt (using Tk) (#24074)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 6bf6a1cb85..4b3714f6d4 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -141,36 +141,43 @@ extends         = STM32F103Rx_creality
 extra_scripts   = ${STM32F103Rx_creality.extra_scripts}
                   pre:buildroot/share/scripts/upload.py
 upload_protocol = custom
 
 #
 # Creality 512K (STM32F103RE)
 #
 [env:STM32F103RE_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RE
+extra_scripts  = ${STM32F103Rx_creality.extra_scripts}
+                 buildroot/share/PlatformIO/scripts/upload_prompt_extra_script.py
+upload_protocol = mbed
+
 
 [env:STM32F103RE_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RE
 
 [env:STM32F103RE_creality_smartPro]
 extends                     = STM32F103Rx_creality
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
 
 #
 # Creality 256K (STM32F103RC)
 #
 [env:STM32F103RC_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RC
+extra_scripts  = ${STM32F103Rx_creality.extra_scripts}
+                 buildroot/share/PlatformIO/scripts/upload_prompt_extra_script.py
+upload_protocol = mbed
 
 [env:STM32F103RC_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RC
 
 #
 # BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)

commit 6a880280e4c7e7ed6ebc72d9b446017bd7db3702
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Fri May 20 02:15:57 2022 +1200

    üî® Require PIO >= 6.0.1 (#24205)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 464048adcb..6bf6a1cb85 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -242,26 +242,26 @@ board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x10000
 build_flags          = ${stm32_variant.build_flags}
                        -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${stm32_variant.build_unflags}
                        -DUSBCON -DUSBD_USE_CDC
 
 #
 # Malyan M200 (STM32F103CB)
 #
 [env:STM32F103CB_malyan]
-extends     = common_stm32
-board       = malyanm200_f103cb
-build_flags = ${common_stm32.build_flags}
-              -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB
-              -DHAL_UART_MODULE_ENABLED
-src_filter  = ${common.default_src_filter} +<src/HAL/STM32>
+extends          = common_stm32
+board            = malyanm200_f103cb
+build_flags      = ${common_stm32.build_flags}
+                   -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB
+                   -DHAL_UART_MODULE_ENABLED
+build_src_filter = ${common.default_src_filter} +<src/HAL/STM32>
 
 #
 # FLYmaker FLY Mini (STM32F103RCT6)
 #
 [env:FLY_MINI]
 extends                     = stm32_variant
 board                       = genericSTM32F103RC
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000

commit 64ebb78892026e22996dca50af1480232f915dac
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Thu May 12 06:38:05 2022 -0400

    ‚ú® Creality CR-10 SmartPro (#24151)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 9002f81a81..464048adcb 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -146,20 +146,25 @@ upload_protocol = custom
 # Creality 512K (STM32F103RE)
 #
 [env:STM32F103RE_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RE
 
 [env:STM32F103RE_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RE
 
+[env:STM32F103RE_creality_smartPro]
+extends                     = STM32F103Rx_creality
+board_build.offset          = 0x10000
+board_upload.offset_address = 0x08010000
+
 #
 # Creality 256K (STM32F103RC)
 #
 [env:STM32F103RC_creality]
 extends = STM32F103Rx_creality
 board   = genericSTM32F103RC
 
 [env:STM32F103RC_creality_xfer]
 extends = STM32F103Rx_creality_xfer
 board   = genericSTM32F103RC

commit a02a1def625bfb917d17cd290de93532408dc63f
Author: Mark <niujl123@sina.com>
Date:   Fri Mar 18 12:49:47 2022 +0800

    üìå PandaPi V2.9 ‚Äì Standalone mode (#23908)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 07b75e4e94..9002f81a81 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -66,20 +66,31 @@ board_upload.offset_address = 0x08007000
 [env:STM32F103RC_btt_USB]
 extends           = env:STM32F103RC_btt
 platform_packages = ${stm_flash_drive.platform_packages}
 build_flags       = ${env:STM32F103RC_btt.build_flags}
                     -DUSE_USB_FS
                     -DUSBD_IRQ_PRIO=5
                     -DUSBD_IRQ_SUBPRIO=6
                     -DUSBD_USE_CDC_MSC
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 
+#
+# Panda Pi V2.9 - Standalone (STM32F103RC)
+# Headless, without direct Pi control, but potentially hosting OctoPrint, stepdaemon, etc.
+#
+[env:PANDA_PI_V29]
+extends                     = common_STM32F103RC_variant
+build_flags                 = ${common_STM32F103RC_variant.build_flags}
+                              -DTIMER_SERVO=TIM1
+board_build.offset          = 0x5000
+board_upload.offset_address = 0x08005000
+
 #
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 board_build.encrypt  = Robin.bin
 board_build.offset   = 0x7000

commit f6ea8d11857b92a31edd17a5d9e46b55fcd59bf9
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Tue Jan 25 00:09:53 2022 -0800

    üî® Creality RCT6 (256K) variants (#23599)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index a0957dbaec..07b75e4e94 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -96,46 +96,70 @@ extends                     = common_STM32F103RC_variant
 board_build.encrypt         = Robin_e3.bin
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM5 -DDEFAULT_SPI=3
 build_unflags               = ${common_STM32F103RC_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 debug_tool                  = stlink
 
 #
-# Creality (STM32F103RET6)
+# Creality (STM32F103Rx)
 #
-[env:STM32F103RET6_creality]
+[STM32F103Rx_creality]
 extends                     = stm32_variant
-board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 extra_scripts               = ${stm32_variant.extra_scripts}
                               pre:buildroot/share/PlatformIO/scripts/random-bin.py
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
-[env:STM32F103RET6_creality_xfer]
-extends         = env:STM32F103RET6_creality
-extra_scripts   = ${env:STM32F103RET6_creality.extra_scripts}
+#
+# Custom upload to SD via Marlin with Binary Protocol
+#
+[STM32F103Rx_creality_xfer]
+extends         = STM32F103Rx_creality
+extra_scripts   = ${STM32F103Rx_creality.extra_scripts}
                   pre:buildroot/share/scripts/upload.py
 upload_protocol = custom
 
+#
+# Creality 512K (STM32F103RE)
+#
+[env:STM32F103RE_creality]
+extends = STM32F103Rx_creality
+board   = genericSTM32F103RE
+
+[env:STM32F103RE_creality_xfer]
+extends = STM32F103Rx_creality_xfer
+board   = genericSTM32F103RE
+
+#
+# Creality 256K (STM32F103RC)
+#
+[env:STM32F103RC_creality]
+extends = STM32F103Rx_creality
+board   = genericSTM32F103RC
+
+[env:STM32F103RC_creality_xfer]
+extends = STM32F103Rx_creality_xfer
+board   = genericSTM32F103RC
+
 #
 # BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
 extends                     = stm32_variant
 board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx

commit 1363b439462af4fac2e9e3a8801abde5981575cf
Author: GHGiampy <83699429+GHGiampy@users.noreply.github.com>
Date:   Sun Jan 9 08:14:03 2022 +0100

    ‚ú® Firmware Upload via Binary Transfer (#23462)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 939f51ffbf..a0957dbaec 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -93,21 +93,20 @@ build_unflags        = ${stm32_variant.build_unflags}
 #
 [env:mks_robin_e3]
 extends                     = common_STM32F103RC_variant
 board_build.encrypt         = Robin_e3.bin
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM5 -DDEFAULT_SPI=3
 build_unflags               = ${common_STM32F103RC_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
-monitor_speed               = 115200
 debug_tool                  = stlink
 
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
 extends                     = stm32_variant
 board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x7000
@@ -117,20 +116,26 @@ build_flags                 = ${stm32_variant.build_flags}
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 extra_scripts               = ${stm32_variant.extra_scripts}
                               pre:buildroot/share/PlatformIO/scripts/random-bin.py
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
+[env:STM32F103RET6_creality_xfer]
+extends         = env:STM32F103RET6_creality
+extra_scripts   = ${env:STM32F103RET6_creality.extra_scripts}
+                  pre:buildroot/share/scripts/upload.py
+upload_protocol = custom
+
 #
 # BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
 extends                     = stm32_variant
 board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx

commit 554a2fc84a5cd67cc9b0be8b01551a9eca3925bf
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Jan 2 21:27:22 2022 -0800

    ‚¨ÜÔ∏è Assert newer GCC in PIO via atmelavr@~3.4 (#23432)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index a2cd1b0f58..939f51ffbf 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -23,105 +23,97 @@
 extends              = stm32_variant
 board                = genericSTM32F103RC
 board_build.variant  = MARLIN_F103Rx
 build_flags          = ${stm32_variant.build_flags} -DDEBUG_LEVEL=0
 monitor_speed        = 115200
 
 #
 # STM32F103RE
 #
 [env:STM32F103RE]
-platform      = ${common_stm32.platform}
 extends       = common_stm32
 board         = genericSTM32F103RE
 monitor_speed = 115200
 
 #
 # STM32F103VE
 #
 [env:STM32F103VE]
-platform      = ${common_stm32.platform}
 extends       = common_stm32
 board         = genericSTM32F103VE
 monitor_speed = 115200
 
 #
 # STM32F103ZE
 #
 [env:STM32F103ZE]
-platform      = ${common_stm32.platform}
 extends       = common_stm32
 board         = genericSTM32F103ZE
 monitor_speed = 115200
 
 #
 # BigTree SKR Mini V1.1 / SKR Mini E3 & MZ (STM32F103RCT6 ARM Cortex-M3)
 #
 #   STM32F103RC_btt ............. RCT6 with 256K
 #   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
 #
 [env:STM32F103RC_btt]
-platform                    = ${common_stm32.platform}
 extends                     = common_STM32F103RC_variant
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM5
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 
 [env:STM32F103RC_btt_USB]
-platform          = ${common_stm32.platform}
 extends           = env:STM32F103RC_btt
 platform_packages = ${stm_flash_drive.platform_packages}
 build_flags       = ${env:STM32F103RC_btt.build_flags}
                     -DUSE_USB_FS
                     -DUSBD_IRQ_PRIO=5
                     -DUSBD_IRQ_SUBPRIO=6
                     -DUSBD_USE_CDC_MSC
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 
 #
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
-platform             = ${common_stm32.platform}
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 board_build.encrypt  = Robin.bin
 board_build.offset   = 0x7000
 build_flags          = ${stm32_variant.build_flags}
                        -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${stm32_variant.build_unflags}
                        -DUSBCON -DUSBD_USE_CDC
 
 #
 # MKS Robin E3/E3D (STM32F103RCT6) with TMC2209
 #
 [env:mks_robin_e3]
-platform                    = ${common_stm32.platform}
 extends                     = common_STM32F103RC_variant
 board_build.encrypt         = Robin_e3.bin
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 build_flags                 = ${common_STM32F103RC_variant.build_flags}
                               -DTIMER_SERVO=TIM5 -DDEFAULT_SPI=3
 build_unflags               = ${common_STM32F103RC_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 monitor_speed               = 115200
 debug_tool                  = stlink
 
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 build_unflags               = ${stm32_variant.build_unflags}
@@ -132,291 +124,269 @@ monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 #
 # BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103RE
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED
                               -DSS_TIMER=4 -DTIMER_SERVO=TIM5
                               -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 monitor_speed               = 115200
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 [env:STM32F103RE_btt_USB]
-platform          = ${common_stm32.platform}
 extends           = env:STM32F103RE_btt
 platform_packages = ${stm_flash_drive.platform_packages}
 build_flags       = ${env:STM32F103RE_btt.build_flags}
                     -DUSE_USB_FS -DUSBD_IRQ_PRIO=5
                     -DUSBD_IRQ_SUBPRIO=6 -DUSBD_USE_CDC_MSC
 build_unflags     = ${stm32_variant.build_unflags} -DUSBD_USE_CDC
 
 #
 # FLSUN QQS Pro (STM32F103VET6)
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
 board_build.encrypt         = Robin_mini.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 
 #
 # MKS Robin Nano V1.2 and V2
 #
 [env:mks_robin_nano35]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
 board_build.encrypt         = Robin_nano35.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 #
 # Mingda MPX_ARM_MINI
 #
 [env:mingda_mpx_arm_mini]
-platform             = ${common_stm32.platform}
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x10000
 build_flags          = ${stm32_variant.build_flags}
                        -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${stm32_variant.build_unflags}
                        -DUSBCON -DUSBD_USE_CDC
 
 #
 # Malyan M200 (STM32F103CB)
 #
 [env:STM32F103CB_malyan]
-platform    = ${common_stm32.platform}
 extends     = common_stm32
 board       = malyanm200_f103cb
 build_flags = ${common_stm32.build_flags}
               -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB
               -DHAL_UART_MODULE_ENABLED
 src_filter  = ${common.default_src_filter} +<src/HAL/STM32>
 
 #
 # FLYmaker FLY Mini (STM32F103RCT6)
 #
 [env:FLY_MINI]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103RC
 board_build.variant         = MARLIN_F103Rx
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 build_flags                 = ${stm32_variant.build_flags} -DSS_TIMER=4
 
 #
 # MKS Robin Mini (STM32F103VET6)
 #
 [env:mks_robin_mini]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
 board_build.encrypt         = Robin_mini.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 
 #
 # MKS Robin Lite/Lite2 (STM32F103RCT6)
 #
 [env:mks_robin_lite]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103RC
 board_build.variant         = MARLIN_F103Rx
 board_build.encrypt         = mksLite.bin
 board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
 
 #
 # MKS ROBIN LITE3 (STM32F103RCT6)
 #
 [env:mks_robin_lite3]
-platform                    = ${common_stm32.platform}
 extends                     = env:mks_robin_lite
 board_build.encrypt         = mksLite3.bin
 
 #
 # MKS Robin Pro (STM32F103ZET6)
 #
 [env:mks_robin_pro]
-platform            = ${common_stm32.platform}
 extends             = env:mks_robin
 board_build.encrypt = Robin_pro.bin
 
 #
 # MKS Robin E3p (STM32F103VET6)
 #  - LVGL UI
 #
 [env:mks_robin_e3p]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
 board_build.encrypt         = Robin_e3p.bin
 board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DSS_TIMER=4
                               -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 debug_tool                  = jlink
 upload_protocol             = jlink
 
 #
 # JGAurora A5S A1 (STM32F103ZET6)
 #
 [env:jgaurora_a5s_a1]
-platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103ZE
 board_build.variant         = MARLIN_F103Zx
 board_build.offset          = 0xA000
 board_build.rename          = firmware_for_sd_upload.bin
 board_upload.offset_address = 0x0800A000
 build_flags                 = ${stm32_variant.build_flags}
                               -DSTM32F1xx -DSTM32_XL_DENSITY
 extra_scripts               = ${stm32_variant.extra_scripts}
                               buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
 
 #
 # FYSETC STM32F103RC
 #
 [env:STM32F103RC_fysetc]
-platform        = ${common_stm32.platform}
 extends         = common_STM32F103RC_variant
 extra_scripts   = ${common_STM32F103RC_variant.extra_scripts}
                   buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
 lib_ldf_mode    = chain
 debug_tool      = stlink
 upload_protocol = serial
 
 #
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
-platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
 lib_deps                    = ${common.lib_deps}
   https://github.com/tpruvot/STM32_Servo_OpenDrain/archive/2.0.zip
-extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103VE_LONGER
 board_build.rename          = project.bin
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
 build_flags                 = ${stm32_variant.build_flags} -DMCU_STM32F103VE -DU20 -DTS_V12
 build_unflags               = ${stm32_variant.build_unflags} -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
 extra_scripts               = ${stm32_variant.extra_scripts}
 monitor_speed               = 250000
 debug_tool                  = stlink
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
-platform             = ${stm32_variant.platform}
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 build_flags          = ${stm32_variant.build_flags}
                        -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${stm32_variant.build_unflags}
                        -DUSBCON -DUSBD_USE_CDC
 
 #
 # Chitu boards like Tronxy X5s (STM32F103ZET6)
 #
 [env:chitu_f103]
-platform             = ${common_stm32.platform}
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x8800
 build_flags          = ${stm32_variant.build_flags}
                        -DSTM32F1xx
 build_unflags        = ${stm32_variant.build_unflags}
 extra_scripts        = ${stm32_variant.extra_scripts}
                        buildroot/share/PlatformIO/scripts/chitu_crypt.py
 
 #
 # Some Chitu V5 boards have a problem with GPIO init.
 # Use this target if G28 or G29 are always failing.
 #
 [env:chitu_v5_gpio_init]
-platform      = ${common_stm32.platform}
 extends       = env:chitu_f103
 build_flags   = ${env:chitu_f103.build_flags} -DCHITU_V5_Z_MIN_BUGFIX
 
 #
 # Zonestar ZM3E2 V1.0 / ZM3E4 V1.0 / ZM3E4 V2.0
 #
 #  STM32F103RC_ZM3E2_USB ........... RCT6 with 256K
 #  STM32F103VC_ZM3E4_USB ........... VCT6 with 256K
 #  STM32F103VE_ZM3E4V2_USB ......... VET6 with 512K
 #
 [ZONESTAR_ZM3E]
-platform                  = ${common_stm32.platform}
 extends                   = stm32_variant
 platform_packages         = ${stm_flash_drive.platform_packages}
 board_upload.offset_address = 0x08005000
 board_build.offset        = 0x5000
 board_upload.maximum_size = 237568
 extra_scripts             = ${stm32_variant.extra_scripts}
 build_flags               = ${common_stm32.build_flags}
   -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DUSE_USB_FS -DUSBD_IRQ_PRIO=5 -DUSBD_IRQ_SUBPRIO=6 -DUSBD_USE_CDC_MSC
 build_unflags             = ${stm32_variant.build_unflags} -DUSBD_USE_CDC
 
 [env:STM32F103RC_ZM3E2_USB]
-platform             = ${ZONESTAR_ZM3E.platform}
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103RC
 board_build.variant  = MARLIN_F103Rx
 
 [env:STM32F103VC_ZM3E4_USB]
-platform             = ${ZONESTAR_ZM3E.platform}
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VC
 board_build.variant  = MARLIN_F103Vx
 build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 
 [env:STM32F103VE_ZM3E4V2_USB]
-platform             = ${ZONESTAR_ZM3E.platform}
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VE
 board_build.variant  = MARLIN_F103Vx
 build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 board_upload.maximum_size = 499712

commit fcb48598e2e2dfebb92acdc103f7119c7f9fcaa3
Author: tommywienert <53783769+tommywienert@users.noreply.github.com>
Date:   Sun Dec 5 23:16:23 2021 +0100

    üêõ Fix env:chitu_f103 (#23225)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 0e57848b10..a2cd1b0f58 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -358,22 +358,23 @@ build_unflags        = ${stm32_variant.build_unflags}
                        -DUSBCON -DUSBD_USE_CDC
 
 #
 # Chitu boards like Tronxy X5s (STM32F103ZET6)
 #
 [env:chitu_f103]
 platform             = ${common_stm32.platform}
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
+board_build.offset   = 0x8800
 build_flags          = ${stm32_variant.build_flags}
-                       -DSTM32F1xx -DSTM32_XL_DENSITY
+                       -DSTM32F1xx
 build_unflags        = ${stm32_variant.build_unflags}
 extra_scripts        = ${stm32_variant.extra_scripts}
                        buildroot/share/PlatformIO/scripts/chitu_crypt.py
 
 #
 # Some Chitu V5 boards have a problem with GPIO init.
 # Use this target if G28 or G29 are always failing.
 #
 [env:chitu_v5_gpio_init]
 platform      = ${common_stm32.platform}

commit e949b4439becc0e440c64bbcba1825654dd9efce
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Dec 4 09:48:54 2021 +1300

    üêõ Fix TIMER_TONE for ZM3E4 (#23212)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index da7cedd3a3..0e57848b10 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -403,19 +403,19 @@ build_unflags             = ${stm32_variant.build_unflags} -DUSBD_USE_CDC
 platform             = ${ZONESTAR_ZM3E.platform}
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103RC
 board_build.variant  = MARLIN_F103Rx
 
 [env:STM32F103VC_ZM3E4_USB]
 platform             = ${ZONESTAR_ZM3E.platform}
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VC
 board_build.variant  = MARLIN_F103Vx
-build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=1
+build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 
 [env:STM32F103VE_ZM3E4V2_USB]
 platform             = ${ZONESTAR_ZM3E.platform}
 extends              = ZONESTAR_ZM3E
 board                = genericSTM32F103VE
 board_build.variant  = MARLIN_F103Vx
-build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=1
+build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=TIM1
 board_upload.maximum_size = 499712

commit c9d54bc3f34c18691a051c0a9f196010dd7c7de9
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon Sep 13 11:03:24 2021 +1200

    üêõ Fix Trigorilla Pro HAL/STM32 build offset (#22761)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index a27d275fc1..da7cedd3a3 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -345,21 +345,20 @@ monitor_speed               = 250000
 debug_tool                  = stlink
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
 platform             = ${stm32_variant.platform}
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
-board_build.offset   = 0x7000
 build_flags          = ${stm32_variant.build_flags}
                        -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${stm32_variant.build_unflags}
                        -DUSBCON -DUSBD_USE_CDC
 
 #
 # Chitu boards like Tronxy X5s (STM32F103ZET6)
 #
 [env:chitu_f103]
 platform             = ${common_stm32.platform}

commit efb9ea92b85ec469e9436969129bcee33aadd3bc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Aug 30 17:02:12 2021 -0500

    üî® Fix HAL/STM32 F103Zx builds (#22610)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index f1cb078fd8..a27d275fc1 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -341,23 +341,29 @@ board_upload.offset_address = 0x08010000
 build_flags                 = ${stm32_variant.build_flags} -DMCU_STM32F103VE -DU20 -DTS_V12
 build_unflags               = ${stm32_variant.build_unflags} -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
 extra_scripts               = ${stm32_variant.extra_scripts}
 monitor_speed               = 250000
 debug_tool                  = stlink
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
-platform      = ${common_stm32.platform}
-extends       = env:mks_robin
-extra_scripts = ${common_stm32.extra_scripts}
+platform             = ${stm32_variant.platform}
+extends              = stm32_variant
+board                = genericSTM32F103ZE
+board_build.variant  = MARLIN_F103Zx
+board_build.offset   = 0x7000
+build_flags          = ${stm32_variant.build_flags}
+                       -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
+build_unflags        = ${stm32_variant.build_unflags}
+                       -DUSBCON -DUSBD_USE_CDC
 
 #
 # Chitu boards like Tronxy X5s (STM32F103ZET6)
 #
 [env:chitu_f103]
 platform             = ${common_stm32.platform}
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 build_flags          = ${stm32_variant.build_flags}

commit 36e40b68c9d34c254dccea2cc135b1dca5a80ce9
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Fri Aug 27 23:06:45 2021 +0200

    üî® Set Longer3D timers in variant (#22632)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index dc9607ef84..f1cb078fd8 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -331,21 +331,21 @@ upload_protocol = serial
 [env:STM32F103VE_longer]
 platform                    = ${common_stm32.platform}
 lib_deps                    = ${common.lib_deps}
   https://github.com/tpruvot/STM32_Servo_OpenDrain/archive/2.0.zip
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103VE_LONGER
 board_build.rename          = project.bin
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
-build_flags                 = ${stm32_variant.build_flags} -DMCU_STM32F103VE -DSTEP_TIMER=5 -DU20 -DTS_V12
+build_flags                 = ${stm32_variant.build_flags} -DMCU_STM32F103VE -DU20 -DTS_V12
 build_unflags               = ${stm32_variant.build_unflags} -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
 extra_scripts               = ${stm32_variant.extra_scripts}
 monitor_speed               = 250000
 debug_tool                  = stlink
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
 platform      = ${common_stm32.platform}

commit f8c67c48101c3456c301461fbb9013107f20f182
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Wed Aug 18 05:37:27 2021 +0200

    üêõ Fix Longer3D PWM/timer pins (#22583)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index f1cb078fd8..dc9607ef84 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -331,21 +331,21 @@ upload_protocol = serial
 [env:STM32F103VE_longer]
 platform                    = ${common_stm32.platform}
 lib_deps                    = ${common.lib_deps}
   https://github.com/tpruvot/STM32_Servo_OpenDrain/archive/2.0.zip
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103VE_LONGER
 board_build.rename          = project.bin
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
-build_flags                 = ${stm32_variant.build_flags} -DMCU_STM32F103VE -DU20 -DTS_V12
+build_flags                 = ${stm32_variant.build_flags} -DMCU_STM32F103VE -DSTEP_TIMER=5 -DU20 -DTS_V12
 build_unflags               = ${stm32_variant.build_unflags} -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
 extra_scripts               = ${stm32_variant.extra_scripts}
 monitor_speed               = 250000
 debug_tool                  = stlink
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
 platform      = ${common_stm32.platform}

commit 76c10b3e02aa5a699ee68a36663337de60fea4e8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 8 21:31:10 2021 -0500

    üèóÔ∏è Define HAL_STM32 for HAL/STM32 (#22537)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index d03898a12e..f1cb078fd8 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -3,21 +3,21 @@
 # PlatformIO Configuration File
 #
 
 #################################
 #
 # STM32F1 Architecture with unified STM32 HAL
 #
 # Naming Example: STM32F103RCT6
 #
 #   F : Foundation (sometimes High Performance F2/F4)
-#   1 : Cortex M3 core
+#   1 : Cortex M3 core (0:M0, 1-2:M3, 3-4:M4, 7:M7)
 #  03 : Line/Features
 #   R : 64 or 66 pins  (T:36, C:48, V:100, Z:144, I:176)
 #   C : 256KB Flash-memory  (B: 128KB, D:384KB, E:512KB, G:1024KB)
 #   T : LQFP package
 #   6 : -40...85¬∞C   (7: ...105¬∞C)
 #
 #################################
 
 [common_STM32F103RC_variant]
 extends              = stm32_variant

commit 5756f8898e8868704516385bae17e65f367aa140
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sun Aug 8 19:45:51 2021 +1200

    ‚ú® Zonestar ZM3E2, ZM3E4 V1, ZM3E4 V2 (#22498)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 1185e8f84d..d03898a12e 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -367,10 +367,50 @@ extra_scripts        = ${stm32_variant.extra_scripts}
                        buildroot/share/PlatformIO/scripts/chitu_crypt.py
 
 #
 # Some Chitu V5 boards have a problem with GPIO init.
 # Use this target if G28 or G29 are always failing.
 #
 [env:chitu_v5_gpio_init]
 platform      = ${common_stm32.platform}
 extends       = env:chitu_f103
 build_flags   = ${env:chitu_f103.build_flags} -DCHITU_V5_Z_MIN_BUGFIX
+
+#
+# Zonestar ZM3E2 V1.0 / ZM3E4 V1.0 / ZM3E4 V2.0
+#
+#  STM32F103RC_ZM3E2_USB ........... RCT6 with 256K
+#  STM32F103VC_ZM3E4_USB ........... VCT6 with 256K
+#  STM32F103VE_ZM3E4V2_USB ......... VET6 with 512K
+#
+[ZONESTAR_ZM3E]
+platform                  = ${common_stm32.platform}
+extends                   = stm32_variant
+platform_packages         = ${stm_flash_drive.platform_packages}
+board_upload.offset_address = 0x08005000
+board_build.offset        = 0x5000
+board_upload.maximum_size = 237568
+extra_scripts             = ${stm32_variant.extra_scripts}
+build_flags               = ${common_stm32.build_flags}
+  -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DUSE_USB_FS -DUSBD_IRQ_PRIO=5 -DUSBD_IRQ_SUBPRIO=6 -DUSBD_USE_CDC_MSC
+build_unflags             = ${stm32_variant.build_unflags} -DUSBD_USE_CDC
+
+[env:STM32F103RC_ZM3E2_USB]
+platform             = ${ZONESTAR_ZM3E.platform}
+extends              = ZONESTAR_ZM3E
+board                = genericSTM32F103RC
+board_build.variant  = MARLIN_F103Rx
+
+[env:STM32F103VC_ZM3E4_USB]
+platform             = ${ZONESTAR_ZM3E.platform}
+extends              = ZONESTAR_ZM3E
+board                = genericSTM32F103VC
+board_build.variant  = MARLIN_F103Vx
+build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=1
+
+[env:STM32F103VE_ZM3E4V2_USB]
+platform             = ${ZONESTAR_ZM3E.platform}
+extends              = ZONESTAR_ZM3E
+board                = genericSTM32F103VE
+board_build.variant  = MARLIN_F103Vx
+build_flags          = ${ZONESTAR_ZM3E.build_flags} -DTIMER_TONE=1
+board_upload.maximum_size = 499712

commit 0e065579aa81e1b285b12c5d8a8f579698ce47e7
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Wed Aug 4 08:14:54 2021 +0200

    üêõ Fix Longer3D STM32 boot, add Maple test (#22473)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 029763b9ed..1185e8f84d 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -323,33 +323,33 @@ extra_scripts   = ${common_STM32F103RC_variant.extra_scripts}
                   buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
 lib_ldf_mode    = chain
 debug_tool      = stlink
 upload_protocol = serial
 
 #
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
 platform                    = ${common_stm32.platform}
+lib_deps                    = ${common.lib_deps}
+  https://github.com/tpruvot/STM32_Servo_OpenDrain/archive/2.0.zip
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
-board_build.variant         = MARLIN_F103Vx
+board_build.variant         = MARLIN_F103VE_LONGER
 board_build.rename          = project.bin
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
-build_flags                 = ${stm32_variant.build_flags}
-                              -DMCU_STM32F103VE -DU20 -DTS_V12 -DLED_BUILTIN=PC2 -UPIN_WIRE_SDA
-                              -UPIN_WIRE_SCL -DPIN_WIRE_SDA=PB11 -DPIN_WIRE_SCL=PB10
-                              -DHAL_DAC_MODULE_DISABLED -DHAL_I2S_MODULE_DISABLED
-build_unflags               = ${stm32_variant.build_unflags}
-                              -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
+build_flags                 = ${stm32_variant.build_flags} -DMCU_STM32F103VE -DU20 -DTS_V12
+build_unflags               = ${stm32_variant.build_unflags} -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
 extra_scripts               = ${stm32_variant.extra_scripts}
+monitor_speed               = 250000
+debug_tool                  = stlink
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
 platform      = ${common_stm32.platform}
 extends       = env:mks_robin
 extra_scripts = ${common_stm32.extra_scripts}
 
 #

commit 002c500b7185284b0644b3ccbd60d95f7c4bb713
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Sat Jul 31 06:49:12 2021 +0200

    üî® Update Longer and Chitu envs (#22467)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 175d0e45b0..029763b9ed 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -326,52 +326,50 @@ debug_tool      = stlink
 upload_protocol = serial
 
 #
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
 platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
+board_build.rename          = project.bin
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
 build_flags                 = ${stm32_variant.build_flags}
                               -DMCU_STM32F103VE -DU20 -DTS_V12 -DLED_BUILTIN=PC2 -UPIN_WIRE_SDA
                               -UPIN_WIRE_SCL -DPIN_WIRE_SDA=PB11 -DPIN_WIRE_SCL=PB10
                               -DHAL_DAC_MODULE_DISABLED -DHAL_I2S_MODULE_DISABLED
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
 extra_scripts               = ${stm32_variant.extra_scripts}
-                              buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
 platform      = ${common_stm32.platform}
 extends       = env:mks_robin
 extra_scripts = ${common_stm32.extra_scripts}
 
 #
 # Chitu boards like Tronxy X5s (STM32F103ZET6)
 #
 [env:chitu_f103]
 platform             = ${common_stm32.platform}
 extends              = stm32_variant
 board                = genericSTM32F103ZE
 board_build.variant  = MARLIN_F103Zx
 build_flags          = ${stm32_variant.build_flags}
                        -DSTM32F1xx -DSTM32_XL_DENSITY
 build_unflags        = ${stm32_variant.build_unflags}
-                       -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=
-                       -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
 extra_scripts        = ${stm32_variant.extra_scripts}
                        buildroot/share/PlatformIO/scripts/chitu_crypt.py
 
 #
 # Some Chitu V5 boards have a problem with GPIO init.
 # Use this target if G28 or G29 are always failing.
 #
 [env:chitu_v5_gpio_init]
 platform      = ${common_stm32.platform}
 extends       = env:chitu_f103

commit eb2f086522c0befd3628693250ba56fe56a1a7a1
Author: Luke Harrison <looxonline@gmail.com>
Date:   Wed Jul 21 07:43:33 2021 +0200

    üîß Octopus SPI display pins, fix USB build env (#22412)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 0f1d308660..175d0e45b0 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -329,21 +329,21 @@ upload_protocol = serial
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
 platform                    = ${common_stm32.platform}
 extends                     = stm32_variant
 board                       = genericSTM32F103VE
 board_build.variant         = MARLIN_F103Vx
 board_build.offset          = 0x10000
 board_upload.offset_address = 0x08010000
 build_flags                 = ${stm32_variant.build_flags}
-                              -DMCU_STM32F103VE -DU20 -DTS_V12 -DLED_BUILTIN=PC2 -UPIN_WIRE_SDA 
+                              -DMCU_STM32F103VE -DU20 -DTS_V12 -DLED_BUILTIN=PC2 -UPIN_WIRE_SDA
                               -UPIN_WIRE_SCL -DPIN_WIRE_SDA=PB11 -DPIN_WIRE_SCL=PB10
                               -DHAL_DAC_MODULE_DISABLED -DHAL_I2S_MODULE_DISABLED
 build_unflags               = ${stm32_variant.build_unflags}
                               -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
 extra_scripts               = ${stm32_variant.extra_scripts}
                               buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #

commit da0450605a31626f423808c4842256671152c489
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Tue Jul 20 12:20:28 2021 -0700

    ‚ôªÔ∏è Refactor STM32 ini files (#22377)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index f487dc62fc..0f1d308660 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -3,410 +3,376 @@
 # PlatformIO Configuration File
 #
 
 #################################
 #
 # STM32F1 Architecture with unified STM32 HAL
 #
 # Naming Example: STM32F103RCT6
 #
 #   F : Foundation (sometimes High Performance F2/F4)
-#   1 : Cortex M1 core
+#   1 : Cortex M3 core
 #  03 : Line/Features
-#   R : 64 or 66 pins  (V:100, Z:144, I:176)
-#   C : 256KB Flash-memory  (D:384KB, E:512KB, G:1024KB)
+#   R : 64 or 66 pins  (T:36, C:48, V:100, Z:144, I:176)
+#   C : 256KB Flash-memory  (B: 128KB, D:384KB, E:512KB, G:1024KB)
 #   T : LQFP package
 #   6 : -40...85¬∞C   (7: ...105¬∞C)
 #
 #################################
 
-#
-# HAL/STM32 Base Environment values
-#
-[common_stm32]
-platform      = ststm32@~12.1
-build_flags   = ${common.build_flags}
-  -std=gnu++14
-  -DUSBCON -DUSBD_USE_CDC
-  -DTIM_IRQ_PRIO=13
-  -DADC_RESOLUTION=12
-build_unflags = -std=gnu++11
-src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/backtrace>
-extra_scripts = ${common.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/stm32_serialbuffer.py
-
-[stm32f1_variant]
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
-  buildroot/share/PlatformIO/scripts/offset_and_rename.py
-
-[common_STM32F103RC]
-platform             = ${common_stm32.platform}
-extends              = common_stm32
+[common_STM32F103RC_variant]
+extends              = stm32_variant
 board                = genericSTM32F103RC
-monitor_speed        = 115200
-board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
-extra_scripts        = ${stm32f1_variant.extra_scripts}
+build_flags          = ${stm32_variant.build_flags} -DDEBUG_LEVEL=0
+monitor_speed        = 115200
 
 #
 # STM32F103RE
 #
 [env:STM32F103RE]
-platform          = ${common_stm32.platform}
-extends           = common_stm32
-board             = genericSTM32F103RE
-monitor_speed     = 115200
+platform      = ${common_stm32.platform}
+extends       = common_stm32
+board         = genericSTM32F103RE
+monitor_speed = 115200
 
 #
 # STM32F103VE
 #
 [env:STM32F103VE]
-platform          = ${common_stm32.platform}
-extends           = common_stm32
-board             = genericSTM32F103VE
-monitor_speed     = 115200
+platform      = ${common_stm32.platform}
+extends       = common_stm32
+board         = genericSTM32F103VE
+monitor_speed = 115200
 
 #
 # STM32F103ZE
 #
 [env:STM32F103ZE]
-platform          = ${common_stm32.platform}
-extends           = common_stm32
-board             = genericSTM32F103ZE
-monitor_speed     = 115200
+platform      = ${common_stm32.platform}
+extends       = common_stm32
+board         = genericSTM32F103ZE
+monitor_speed = 115200
 
 #
 # BigTree SKR Mini V1.1 / SKR Mini E3 & MZ (STM32F103RCT6 ARM Cortex-M3)
 #
 #   STM32F103RC_btt ............. RCT6 with 256K
 #   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
 #
 [env:STM32F103RC_btt]
-platform             = ${common_stm32.platform}
-extends              = common_STM32F103RC
-build_flags          = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
-board_build.offset   = 0x7000
+platform                    = ${common_stm32.platform}
+extends                     = common_STM32F103RC_variant
+build_flags                 = ${common_STM32F103RC_variant.build_flags}
+                              -DTIMER_SERVO=TIM5
+board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
 
 [env:STM32F103RC_btt_USB]
-extends           = env:STM32F103RC_btt
 platform          = ${common_stm32.platform}
-platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-3.zip
+extends           = env:STM32F103RC_btt
+platform_packages = ${stm_flash_drive.platform_packages}
+build_flags       = ${env:STM32F103RC_btt.build_flags}
+                    -DUSE_USB_FS
+                    -DUSBD_IRQ_PRIO=5
+                    -DUSBD_IRQ_SUBPRIO=6
+                    -DUSBD_USE_CDC_MSC
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
-build_flags       = ${env:STM32F103RC_btt.build_flags} ${env:stm32_flash_drive.build_flags}
-  -DUSBCON
-  -DUSE_USB_FS
-  -DUSBD_IRQ_PRIO=5
-  -DUSBD_IRQ_SUBPRIO=6
-  -DUSBD_USE_CDC_MSC
 
 #
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
 platform             = ${common_stm32.platform}
-extends              = common_stm32
+extends              = stm32_variant
 board                = genericSTM32F103ZE
-board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
-board_build.offset   = 0x7000
 board_build.encrypt  = Robin.bin
-build_flags          = ${common_stm32.build_flags}
-  -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
-build_unflags        = ${common_stm32.build_unflags}
- -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${stm32f1_variant.extra_scripts}
-lib_deps             =
+board_build.offset   = 0x7000
+build_flags          = ${stm32_variant.build_flags}
+                       -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
+build_unflags        = ${stm32_variant.build_unflags}
+                       -DUSBCON -DUSBD_USE_CDC
 
 #
 # MKS Robin E3/E3D (STM32F103RCT6) with TMC2209
 #
 [env:mks_robin_e3]
 platform                    = ${common_stm32.platform}
-extends                     = common_STM32F103RC
-build_flags                 = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5 -DDEFAULT_SPI=3
-build_unflags               = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-monitor_speed               = 115200
-board_build.offset          = 0x5000
+extends                     = common_STM32F103RC_variant
 board_build.encrypt         = Robin_e3.bin
+board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
+build_flags                 = ${common_STM32F103RC_variant.build_flags}
+                              -DTIMER_SERVO=TIM5 -DDEFAULT_SPI=3
+build_unflags               = ${common_STM32F103RC_variant.build_unflags}
+                              -DUSBCON -DUSBD_USE_CDC
+monitor_speed               = 115200
 debug_tool                  = stlink
-extra_scripts               = ${common_STM32F103RC.extra_scripts}
 
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
-platform             = ${common_stm32.platform}
-extends              = common_stm32
-build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
-board                = genericSTM32F103RE
-monitor_speed        = 115200
-board_build.core     = stm32
-board_build.variant  = MARLIN_F103Rx
-board_build.offset   = 0x7000
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103RE
+board_build.variant         = MARLIN_F103Rx
+board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
-build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${stm32f1_variant.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/random-bin.py
-debug_tool           = jlink
-upload_protocol      = jlink
+build_flags                 = ${stm32_variant.build_flags}
+                              -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED
+                              -DSS_TIMER=4 -DTIMER_SERVO=TIM5
+                              -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
+build_unflags               = ${stm32_variant.build_unflags}
+                              -DUSBCON -DUSBD_USE_CDC
+extra_scripts               = ${stm32_variant.extra_scripts}
+                              pre:buildroot/share/PlatformIO/scripts/random-bin.py
+monitor_speed               = 115200
+debug_tool                  = jlink
+upload_protocol             = jlink
 
 #
 # BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
-platform             = ${common_stm32.platform}
-extends              = common_stm32
-build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
-board                = genericSTM32F103RE
-monitor_speed        = 115200
-board_build.core     = stm32
-board_build.variant  = MARLIN_F103Rx
-board_build.offset   = 0x7000
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103RE
+board_build.variant         = MARLIN_F103Rx
+board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
-build_unflags        = ${common_stm32.build_unflags}
-extra_scripts        = ${stm32f1_variant.extra_scripts}
-debug_tool           = jlink
-upload_protocol      = jlink
+build_flags                 = ${stm32_variant.build_flags}
+                              -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED
+                              -DSS_TIMER=4 -DTIMER_SERVO=TIM5
+                              -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
+monitor_speed               = 115200
+debug_tool                  = jlink
+upload_protocol             = jlink
 
 [env:STM32F103RE_btt_USB]
-extends           = env:STM32F103RE_btt
 platform          = ${common_stm32.platform}
-platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-3.zip
-build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
-build_flags       = ${env:STM32F103RE_btt.build_flags} ${env:stm32_flash_drive.build_flags}
-  -DUSBCON
-  -DUSE_USB_FS
-  -DUSBD_IRQ_PRIO=5
-  -DUSBD_IRQ_SUBPRIO=6
-  -DUSBD_USE_CDC_MSC
+extends           = env:STM32F103RE_btt
+platform_packages = ${stm_flash_drive.platform_packages}
+build_flags       = ${env:STM32F103RE_btt.build_flags}
+                    -DUSE_USB_FS -DUSBD_IRQ_PRIO=5
+                    -DUSBD_IRQ_SUBPRIO=6 -DUSBD_USE_CDC_MSC
+build_unflags     = ${stm32_variant.build_unflags} -DUSBD_USE_CDC
 
 #
 # FLSUN QQS Pro (STM32F103VET6)
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
-platform             = ${common_stm32.platform}
-extends              = common_stm32
-build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3 -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
-board                = genericSTM32F103VE
-board_build.core     = stm32
-board_build.variant  = MARLIN_F103Vx
-board_build.offset   = 0x7000
-board_build.encrypt  = Robin_mini.bin
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103VE
+board_build.variant         = MARLIN_F103Vx
+board_build.encrypt         = Robin_mini.bin
+board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
-build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${stm32f1_variant.extra_scripts}
+build_flags                 = ${stm32_variant.build_flags}
+                              -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
+                              -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
+build_unflags               = ${stm32_variant.build_unflags}
+                              -DUSBCON -DUSBD_USE_CDC
 
 #
 # MKS Robin Nano V1.2 and V2
 #
 [env:mks_robin_nano35]
-platform             = ${common_stm32.platform}
-extends              = common_stm32
-build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3 -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
-board                = genericSTM32F103VE
-board_build.core     = stm32
-board_build.variant  = MARLIN_F103Vx
-board_build.offset   = 0x7000
-board_build.encrypt  = Robin_nano35.bin
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103VE
+board_build.variant         = MARLIN_F103Vx
+board_build.encrypt         = Robin_nano35.bin
+board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
-build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-debug_tool           = jlink
-upload_protocol      = jlink
-extra_scripts        = ${stm32f1_variant.extra_scripts}
+build_flags                 = ${stm32_variant.build_flags}
+                              -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
+                              -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
+build_unflags               = ${stm32_variant.build_unflags}
+                              -DUSBCON -DUSBD_USE_CDC
+debug_tool                  = jlink
+upload_protocol             = jlink
 
 #
 # Mingda MPX_ARM_MINI
 #
 [env:mingda_mpx_arm_mini]
 platform             = ${common_stm32.platform}
-extends              = common_stm32
+extends              = stm32_variant
 board                = genericSTM32F103ZE
-board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x10000
-build_flags          = ${common_stm32.build_flags} -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
-build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${stm32f1_variant.extra_scripts}
+build_flags          = ${stm32_variant.build_flags}
+                       -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
+build_unflags        = ${stm32_variant.build_unflags}
+                       -DUSBCON -DUSBD_USE_CDC
 
 #
 # Malyan M200 (STM32F103CB)
 #
 [env:STM32F103CB_malyan]
 platform    = ${common_stm32.platform}
 extends     = common_stm32
 board       = malyanm200_f103cb
 build_flags = ${common_stm32.build_flags}
-  -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB -DHAL_UART_MODULE_ENABLED
+              -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB
+              -DHAL_UART_MODULE_ENABLED
 src_filter  = ${common.default_src_filter} +<src/HAL/STM32>
 
 #
 # FLYmaker FLY Mini (STM32F103RCT6)
 #
 [env:FLY_MINI]
-platform             = ${common_stm32.platform}
-extends              = common_stm32
-build_flags          = ${common_stm32.build_flags} -DSS_TIMER=4
-board                = genericSTM32F103RC
-board_build.core     = stm32
-board_build.variant  = MARLIN_F103Rx
-board_build.offset   = 0x5000
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103RC
+board_build.variant         = MARLIN_F103Rx
+board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
-extra_scripts        = ${stm32f1_variant.extra_scripts}
+build_flags                 = ${stm32_variant.build_flags} -DSS_TIMER=4
 
 #
 # MKS Robin Mini (STM32F103VET6)
 #
 [env:mks_robin_mini]
-platform            = ${common_stm32.platform}
-extends             = common_stm32
-board               = genericSTM32F103VE
-board_build.core    = stm32
-board_build.variant = MARLIN_F103Vx
-board_build.offset  = 0x7000
-board_build.encrypt = Robin_mini.bin
-build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103VE
+board_build.variant         = MARLIN_F103Vx
+board_build.encrypt         = Robin_mini.bin
+board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
-extra_scripts       = ${stm32f1_variant.extra_scripts}
+build_flags                 = ${stm32_variant.build_flags}
+                              -DMCU_STM32F103VE -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 
 #
 # MKS Robin Lite/Lite2 (STM32F103RCT6)
 #
 [env:mks_robin_lite]
-platform            = ${common_stm32.platform}
-extends             = common_stm32
-board               = genericSTM32F103RC
-board_build.core    = stm32
-board_build.variant = MARLIN_F103Rx
-board_build.offset  = 0x5000
-board_build.encrypt = mksLite.bin
-build_flags         = ${common_stm32.build_flags}
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103RC
+board_build.variant         = MARLIN_F103Rx
+board_build.encrypt         = mksLite.bin
+board_build.offset          = 0x5000
 board_upload.offset_address = 0x08005000
-extra_scripts       = ${stm32f1_variant.extra_scripts}
 
 #
 # MKS ROBIN LITE3 (STM32F103RCT6)
 #
 [env:mks_robin_lite3]
-platform            = ${common_stm32.platform}
-extends             = common_stm32
-board               = genericSTM32F103RC
-board_build.core    = stm32
-board_build.variant = MARLIN_F103Rx
-board_build.offset  = 0x5000
-board_build.encrypt = mksLite3.bin
-build_flags         = ${common_stm32.build_flags}
-board_upload.offset_address = 0x08005000
-extra_scripts       = ${stm32f1_variant.extra_scripts}
+platform                    = ${common_stm32.platform}
+extends                     = env:mks_robin_lite
+board_build.encrypt         = mksLite3.bin
 
 #
 # MKS Robin Pro (STM32F103ZET6)
 #
 [env:mks_robin_pro]
 platform            = ${common_stm32.platform}
 extends             = env:mks_robin
 board_build.encrypt = Robin_pro.bin
 
 #
 # MKS Robin E3p (STM32F103VET6)
 #  - LVGL UI
 #
 [env:mks_robin_e3p]
-platform            = ${common_stm32.platform}
-extends             = common_stm32
-board               = genericSTM32F103VE
-board_build.core    = stm32
-board_build.variant = MARLIN_F103Vx
-board_build.offset  = 0x7000
-board_build.encrypt = Robin_e3p.bin
-build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103VE
+board_build.variant         = MARLIN_F103Vx
+board_build.encrypt         = Robin_e3p.bin
+board_build.offset          = 0x7000
 board_upload.offset_address = 0x08007000
-extra_scripts       = ${stm32f1_variant.extra_scripts}
-debug_tool          = jlink
-upload_protocol     = jlink
+build_flags                 = ${stm32_variant.build_flags}
+                              -DMCU_STM32F103VE -DSS_TIMER=4
+                              -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
+debug_tool                  = jlink
+upload_protocol             = jlink
 
 #
 # JGAurora A5S A1 (STM32F103ZET6)
 #
 [env:jgaurora_a5s_a1]
-platform            = ${common_stm32.platform}
-extends             = common_stm32
-board               = genericSTM32F103ZE
-board_build.core    = stm32
-board_build.variant = MARLIN_F103Zx
-board_build.offset  = 0xA000
-board_build.rename  = firmware_for_sd_upload.bin
-build_flags         = ${common_stm32.build_flags} -DSTM32F1xx -DSTM32_XL_DENSITY
-board_build.address = 0x0800A000
-extra_scripts       = ${stm32f1_variant.extra_scripts}
-  buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103ZE
+board_build.variant         = MARLIN_F103Zx
+board_build.offset          = 0xA000
+board_build.rename          = firmware_for_sd_upload.bin
+board_upload.offset_address = 0x0800A000
+build_flags                 = ${stm32_variant.build_flags}
+                              -DSTM32F1xx -DSTM32_XL_DENSITY
+extra_scripts               = ${stm32_variant.extra_scripts}
+                              buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
 
 #
 # FYSETC STM32F103RC
 #
 [env:STM32F103RC_fysetc]
 platform        = ${common_stm32.platform}
-extends         = common_STM32F103RC
-extra_scripts   = ${stm32f1_variant.extra_scripts}
-  buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
-build_flags     = ${common_stm32.build_flags} -DDEBUG_LEVEL=0
+extends         = common_STM32F103RC_variant
+extra_scripts   = ${common_STM32F103RC_variant.extra_scripts}
+                  buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
 lib_ldf_mode    = chain
 debug_tool      = stlink
 upload_protocol = serial
 
 #
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
-platform            = ${common_stm32.platform}
-extends             = common_stm32
-board               = genericSTM32F103VE
-board_build.core    = stm32
-board_build.variant = MARLIN_F103Vx
-board_build.offset  = 0x10000
-board_build.address = 0x08010000
-build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DU20 -DTS_V12
-  -DLED_BUILTIN=PC2 -UPIN_WIRE_SDA -UPIN_WIRE_SCL -DPIN_WIRE_SDA=PB11 -DPIN_WIRE_SCL=PB10
-  -DHAL_DAC_MODULE_DISABLED -DHAL_I2S_MODULE_DISABLED
-build_unflags       = ${common_stm32.build_unflags}
-  -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
-extra_scripts       = ${stm32f1_variant.extra_scripts}
-  buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
+platform                    = ${common_stm32.platform}
+extends                     = stm32_variant
+board                       = genericSTM32F103VE
+board_build.variant         = MARLIN_F103Vx
+board_build.offset          = 0x10000
+board_upload.offset_address = 0x08010000
+build_flags                 = ${stm32_variant.build_flags}
+                              -DMCU_STM32F103VE -DU20 -DTS_V12 -DLED_BUILTIN=PC2 -UPIN_WIRE_SDA 
+                              -UPIN_WIRE_SCL -DPIN_WIRE_SDA=PB11 -DPIN_WIRE_SCL=PB10
+                              -DHAL_DAC_MODULE_DISABLED -DHAL_I2S_MODULE_DISABLED
+build_unflags               = ${stm32_variant.build_unflags}
+                              -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
+extra_scripts               = ${stm32_variant.extra_scripts}
+                              buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
 platform      = ${common_stm32.platform}
 extends       = env:mks_robin
 extra_scripts = ${common_stm32.extra_scripts}
 
 #
 # Chitu boards like Tronxy X5s (STM32F103ZET6)
 #
 [env:chitu_f103]
 platform             = ${common_stm32.platform}
-extends              = common_stm32
+extends              = stm32_variant
 board                = genericSTM32F103ZE
-board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
-extra_scripts        = ${stm32f1_variant.extra_scripts}
-  buildroot/share/PlatformIO/scripts/chitu_crypt.py
-build_flags          = ${common_stm32.build_flags} -DSTM32_XL_DENSITY
-build_unflags        = ${common_stm32.build_unflags}
-  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG= -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
+build_flags          = ${stm32_variant.build_flags}
+                       -DSTM32F1xx -DSTM32_XL_DENSITY
+build_unflags        = ${stm32_variant.build_unflags}
+                       -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=
+                       -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
+extra_scripts        = ${stm32_variant.extra_scripts}
+                       buildroot/share/PlatformIO/scripts/chitu_crypt.py
 
 #
 # Some Chitu V5 boards have a problem with GPIO init.
 # Use this target if G28 or G29 are always failing.
 #
 [env:chitu_v5_gpio_init]
 platform      = ${common_stm32.platform}
 extends       = env:chitu_f103
 build_flags   = ${env:chitu_f103.build_flags} -DCHITU_V5_Z_MIN_BUGFIX

commit cb461b5daffebfe86d1d2f96093be09e445cbd05
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Sun Jul 18 00:16:57 2021 +0200

    üêõ Fix Longer3D build environment (#22378)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 6350afb40b..f487dc62fc 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -362,24 +362,27 @@ upload_protocol = serial
 
 #
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
 platform            = ${common_stm32.platform}
 extends             = common_stm32
 board               = genericSTM32F103VE
 board_build.core    = stm32
 board_build.variant = MARLIN_F103Vx
-board_build.offset  = 0x1000
+board_build.offset  = 0x10000
 board_build.address = 0x08010000
 build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DU20 -DTS_V12
-build_unflags       = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
+  -DLED_BUILTIN=PC2 -UPIN_WIRE_SDA -UPIN_WIRE_SCL -DPIN_WIRE_SDA=PB11 -DPIN_WIRE_SCL=PB10
+  -DHAL_DAC_MODULE_DISABLED -DHAL_I2S_MODULE_DISABLED
+build_unflags       = ${common_stm32.build_unflags}
+  -DUSBCON -DUSBD_USE_CDC -DHAL_PCD_MODULE_ENABLED
 extra_scripts       = ${stm32f1_variant.extra_scripts}
   buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
 platform      = ${common_stm32.platform}
 extends       = env:mks_robin
 extra_scripts = ${common_stm32.extra_scripts}

commit 5d6317329786f5d01eb6734b4c5e664a2fe9e6ba
Author: mks-viva <1224833100@qq.com>
Date:   Thu Jul 15 20:57:34 2021 -0500

    ‚ú® MKS Mini12864 v3 for Robin E3/E3D (#22368)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index bc4236b8f0..6350afb40b 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -118,22 +118,21 @@ build_unflags        = ${common_stm32.build_unflags}
  -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${stm32f1_variant.extra_scripts}
 lib_deps             =
 
 #
 # MKS Robin E3/E3D (STM32F103RCT6) with TMC2209
 #
 [env:mks_robin_e3]
 platform                    = ${common_stm32.platform}
 extends                     = common_STM32F103RC
-build_flags                 = ${common_stm32.build_flags}
-  -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
+build_flags                 = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5 -DDEFAULT_SPI=3
 build_unflags               = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 monitor_speed               = 115200
 board_build.offset          = 0x5000
 board_build.encrypt         = Robin_e3.bin
 board_upload.offset_address = 0x08005000
 debug_tool                  = stlink
 extra_scripts               = ${common_STM32F103RC.extra_scripts}
 
 #
 # Creality (STM32F103RET6)

commit 5b43795f54f18bc956f1c4884640f18c9a7bdbce
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Fri Jul 16 03:40:05 2021 +0200

    üêõ Followup to HAL/STM32 targets (Longer3D timers) (#22369)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index f1446f3267..bc4236b8f0 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -187,37 +187,37 @@ build_flags       = ${env:STM32F103RE_btt.build_flags} ${env:stm32_flash_drive.b
   -DUSBD_IRQ_SUBPRIO=6
   -DUSBD_USE_CDC_MSC
 
 #
 # FLSUN QQS Pro (STM32F103VET6)
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
-build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
+build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3 -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.offset   = 0x7000
 board_build.encrypt  = Robin_mini.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${stm32f1_variant.extra_scripts}
 
 #
 # MKS Robin Nano V1.2 and V2
 #
 [env:mks_robin_nano35]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
-build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
+build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3 -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.offset   = 0x7000
 board_build.encrypt  = Robin_nano35.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 debug_tool           = jlink
 upload_protocol      = jlink
 extra_scripts        = ${stm32f1_variant.extra_scripts}
@@ -265,21 +265,21 @@ extra_scripts        = ${stm32f1_variant.extra_scripts}
 # MKS Robin Mini (STM32F103VET6)
 #
 [env:mks_robin_mini]
 platform            = ${common_stm32.platform}
 extends             = common_stm32
 board               = genericSTM32F103VE
 board_build.core    = stm32
 board_build.variant = MARLIN_F103Vx
 board_build.offset  = 0x7000
 board_build.encrypt = Robin_mini.bin
-build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE
+build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 board_upload.offset_address = 0x08007000
 extra_scripts       = ${stm32f1_variant.extra_scripts}
 
 #
 # MKS Robin Lite/Lite2 (STM32F103RCT6)
 #
 [env:mks_robin_lite]
 platform            = ${common_stm32.platform}
 extends             = common_stm32
 board               = genericSTM32F103RC
@@ -319,21 +319,21 @@ board_build.encrypt = Robin_pro.bin
 #  - LVGL UI
 #
 [env:mks_robin_e3p]
 platform            = ${common_stm32.platform}
 extends             = common_stm32
 board               = genericSTM32F103VE
 board_build.core    = stm32
 board_build.variant = MARLIN_F103Vx
 board_build.offset  = 0x7000
 board_build.encrypt = Robin_e3p.bin
-build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4
+build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DTIMER_TONE=TIM3 -DTIMER_SERVO=TIM2
 board_upload.offset_address = 0x08007000
 extra_scripts       = ${stm32f1_variant.extra_scripts}
 debug_tool          = jlink
 upload_protocol     = jlink
 
 #
 # JGAurora A5S A1 (STM32F103ZET6)
 #
 [env:jgaurora_a5s_a1]
 platform            = ${common_stm32.platform}
@@ -362,27 +362,25 @@ debug_tool      = stlink
 upload_protocol = serial
 
 #
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
 platform            = ${common_stm32.platform}
 extends             = common_stm32
 board               = genericSTM32F103VE
 board_build.core    = stm32
-board_build.variant = MARLIN_F103Zx
+board_build.variant = MARLIN_F103Vx
 board_build.offset  = 0x1000
 board_build.address = 0x08010000
-build_flags         = ${common_stm32.build_flags}
-  -DMCU_STM32F103VE -DSTM32F1xx -USERIAL_USB -DU20 -DTS_V12
-build_unflags       = ${common_stm32.build_unflags}
-  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
+build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DU20 -DTS_V12
+build_unflags       = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts       = ${stm32f1_variant.extra_scripts}
   buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
 
 #
 # TRIGORILLA PRO (STM32F103ZET6)
 #
 [env:trigorilla_pro]
 platform      = ${common_stm32.platform}
 extends       = env:mks_robin
 extra_scripts = ${common_stm32.extra_scripts}

commit 7e50d8761d66cfa7c6e8a4e864f0754ddd645ada
Author: ellensp <ellensp@hotmail.com>
Date:   Thu Jul 15 14:07:46 2021 +1200

    üî® More HAL/STM32 targets (#22358)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index d5f0741d41..f1446f3267 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -253,10 +253,160 @@ src_filter  = ${common.default_src_filter} +<src/HAL/STM32>
 [env:FLY_MINI]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DSS_TIMER=4
 board                = genericSTM32F103RC
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x5000
 board_upload.offset_address = 0x08005000
 extra_scripts        = ${stm32f1_variant.extra_scripts}
+
+#
+# MKS Robin Mini (STM32F103VET6)
+#
+[env:mks_robin_mini]
+platform            = ${common_stm32.platform}
+extends             = common_stm32
+board               = genericSTM32F103VE
+board_build.core    = stm32
+board_build.variant = MARLIN_F103Vx
+board_build.offset  = 0x7000
+board_build.encrypt = Robin_mini.bin
+build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE
+board_upload.offset_address = 0x08007000
+extra_scripts       = ${stm32f1_variant.extra_scripts}
+
+#
+# MKS Robin Lite/Lite2 (STM32F103RCT6)
+#
+[env:mks_robin_lite]
+platform            = ${common_stm32.platform}
+extends             = common_stm32
+board               = genericSTM32F103RC
+board_build.core    = stm32
+board_build.variant = MARLIN_F103Rx
+board_build.offset  = 0x5000
+board_build.encrypt = mksLite.bin
+build_flags         = ${common_stm32.build_flags}
+board_upload.offset_address = 0x08005000
+extra_scripts       = ${stm32f1_variant.extra_scripts}
+
+#
+# MKS ROBIN LITE3 (STM32F103RCT6)
+#
+[env:mks_robin_lite3]
+platform            = ${common_stm32.platform}
+extends             = common_stm32
+board               = genericSTM32F103RC
+board_build.core    = stm32
+board_build.variant = MARLIN_F103Rx
+board_build.offset  = 0x5000
+board_build.encrypt = mksLite3.bin
+build_flags         = ${common_stm32.build_flags}
+board_upload.offset_address = 0x08005000
+extra_scripts       = ${stm32f1_variant.extra_scripts}
+
+#
+# MKS Robin Pro (STM32F103ZET6)
+#
+[env:mks_robin_pro]
+platform            = ${common_stm32.platform}
+extends             = env:mks_robin
+board_build.encrypt = Robin_pro.bin
+
+#
+# MKS Robin E3p (STM32F103VET6)
+#  - LVGL UI
+#
+[env:mks_robin_e3p]
+platform            = ${common_stm32.platform}
+extends             = common_stm32
+board               = genericSTM32F103VE
+board_build.core    = stm32
+board_build.variant = MARLIN_F103Vx
+board_build.offset  = 0x7000
+board_build.encrypt = Robin_e3p.bin
+build_flags         = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4
+board_upload.offset_address = 0x08007000
+extra_scripts       = ${stm32f1_variant.extra_scripts}
+debug_tool          = jlink
+upload_protocol     = jlink
+
+#
+# JGAurora A5S A1 (STM32F103ZET6)
+#
+[env:jgaurora_a5s_a1]
+platform            = ${common_stm32.platform}
+extends             = common_stm32
+board               = genericSTM32F103ZE
+board_build.core    = stm32
+board_build.variant = MARLIN_F103Zx
+board_build.offset  = 0xA000
+board_build.rename  = firmware_for_sd_upload.bin
+build_flags         = ${common_stm32.build_flags} -DSTM32F1xx -DSTM32_XL_DENSITY
+board_build.address = 0x0800A000
+extra_scripts       = ${stm32f1_variant.extra_scripts}
+  buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
+
+#
+# FYSETC STM32F103RC
+#
+[env:STM32F103RC_fysetc]
+platform        = ${common_stm32.platform}
+extends         = common_STM32F103RC
+extra_scripts   = ${stm32f1_variant.extra_scripts}
+  buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
+build_flags     = ${common_stm32.build_flags} -DDEBUG_LEVEL=0
+lib_ldf_mode    = chain
+debug_tool      = stlink
+upload_protocol = serial
+
+#
+# Longer 3D board in Alfawise U20 (STM32F103VET6)
+#
+[env:STM32F103VE_longer]
+platform            = ${common_stm32.platform}
+extends             = common_stm32
+board               = genericSTM32F103VE
+board_build.core    = stm32
+board_build.variant = MARLIN_F103Zx
+board_build.offset  = 0x1000
+board_build.address = 0x08010000
+build_flags         = ${common_stm32.build_flags}
+  -DMCU_STM32F103VE -DSTM32F1xx -USERIAL_USB -DU20 -DTS_V12
+build_unflags       = ${common_stm32.build_unflags}
+  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
+extra_scripts       = ${stm32f1_variant.extra_scripts}
+  buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
+
+#
+# TRIGORILLA PRO (STM32F103ZET6)
+#
+[env:trigorilla_pro]
+platform      = ${common_stm32.platform}
+extends       = env:mks_robin
+extra_scripts = ${common_stm32.extra_scripts}
+
+#
+# Chitu boards like Tronxy X5s (STM32F103ZET6)
+#
+[env:chitu_f103]
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+board                = genericSTM32F103ZE
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Zx
+extra_scripts        = ${stm32f1_variant.extra_scripts}
+  buildroot/share/PlatformIO/scripts/chitu_crypt.py
+build_flags          = ${common_stm32.build_flags} -DSTM32_XL_DENSITY
+build_unflags        = ${common_stm32.build_unflags}
+  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG= -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
+
+#
+# Some Chitu V5 boards have a problem with GPIO init.
+# Use this target if G28 or G29 are always failing.
+#
+[env:chitu_v5_gpio_init]
+platform      = ${common_stm32.platform}
+extends       = env:chitu_f103
+build_flags   = ${env:chitu_f103.build_flags} -DCHITU_V5_Z_MIN_BUGFIX

commit 5ca9ebfa6b0ff814c3a122c3e613574533027803
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 14 19:44:51 2021 -0500

    üî® Consolidate STM32 extra_scripts (#22365)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 58f1fc1058..d5f0741d41 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -27,30 +27,33 @@ platform      = ststm32@~12.1
 build_flags   = ${common.build_flags}
   -std=gnu++14
   -DUSBCON -DUSBD_USE_CDC
   -DTIM_IRQ_PRIO=13
   -DADC_RESOLUTION=12
 build_unflags = -std=gnu++11
 src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/backtrace>
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/stm32_serialbuffer.py
 
+[stm32f1_variant]
+extra_scripts        = ${common_stm32.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+  buildroot/share/PlatformIO/scripts/offset_and_rename.py
+
 [common_STM32F103RC]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103RC
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
-  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+extra_scripts        = ${stm32f1_variant.extra_scripts}
 
 #
 # STM32F103RE
 #
 [env:STM32F103RE]
 platform          = ${common_stm32.platform}
 extends           = common_stm32
 board             = genericSTM32F103RE
 monitor_speed     = 115200
 
@@ -106,84 +109,76 @@ platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x7000
 board_build.encrypt  = Robin.bin
 build_flags          = ${common_stm32.build_flags}
   -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags}
  -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
-  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
-  buildroot/share/PlatformIO/scripts/mks_encrypt.py
+extra_scripts        = ${stm32f1_variant.extra_scripts}
 lib_deps             =
 
 #
 # MKS Robin E3/E3D (STM32F103RCT6) with TMC2209
 #
 [env:mks_robin_e3]
 platform                    = ${common_stm32.platform}
 extends                     = common_STM32F103RC
 build_flags                 = ${common_stm32.build_flags}
   -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 build_unflags               = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 monitor_speed               = 115200
 board_build.offset          = 0x5000
 board_build.encrypt         = Robin_e3.bin
 board_upload.offset_address = 0x08005000
 debug_tool                  = stlink
 extra_scripts               = ${common_STM32F103RC.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x7000
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+extra_scripts        = ${stm32f1_variant.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/random-bin.py
-  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 debug_tool           = jlink
 upload_protocol      = jlink
 
 #
 # BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x7000
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags}
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
-  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+extra_scripts        = ${stm32f1_variant.extra_scripts}
 debug_tool           = jlink
 upload_protocol      = jlink
 
 [env:STM32F103RE_btt_USB]
 extends           = env:STM32F103RE_btt
 platform          = ${common_stm32.platform}
 platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-3.zip
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 build_flags       = ${env:STM32F103RE_btt.build_flags} ${env:stm32_flash_drive.build_flags}
   -DUSBCON
@@ -200,61 +195,53 @@ build_flags       = ${env:STM32F103RE_btt.build_flags} ${env:stm32_flash_drive.b
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.offset   = 0x7000
 board_build.encrypt  = Robin_mini.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
-  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
-  buildroot/share/PlatformIO/scripts/mks_encrypt.py
+extra_scripts        = ${stm32f1_variant.extra_scripts}
 
 #
 # MKS Robin Nano V1.2 and V2
 #
 [env:mks_robin_nano35]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.offset   = 0x7000
 board_build.encrypt  = Robin_nano35.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 debug_tool           = jlink
 upload_protocol      = jlink
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
-  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
-  buildroot/share/PlatformIO/scripts/mks_encrypt.py
+extra_scripts        = ${stm32f1_variant.extra_scripts}
 
 #
 # Mingda MPX_ARM_MINI
 #
 [env:mingda_mpx_arm_mini]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
 board_build.offset   = 0x10000
 build_flags          = ${common_stm32.build_flags} -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
-  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+extra_scripts        = ${stm32f1_variant.extra_scripts}
 
 #
 # Malyan M200 (STM32F103CB)
 #
 [env:STM32F103CB_malyan]
 platform    = ${common_stm32.platform}
 extends     = common_stm32
 board       = malyanm200_f103cb
 build_flags = ${common_stm32.build_flags}
   -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB -DHAL_UART_MODULE_ENABLED
@@ -265,13 +252,11 @@ src_filter  = ${common.default_src_filter} +<src/HAL/STM32>
 #
 [env:FLY_MINI]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DSS_TIMER=4
 board                = genericSTM32F103RC
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x5000
 board_upload.offset_address = 0x08005000
-extra_scripts        = ${common_stm32.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
-  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+extra_scripts        = ${stm32f1_variant.extra_scripts}

commit a13d90093d8e647fa9ecab7a7752009dcc9c55ae
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed Jul 14 15:55:24 2021 -0700

    ü©π FLYmaker FLY Mini followup (#22364)
    
    Followup to #22355, #22356.

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index f1afb0e4d7..58f1fc1058 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -254,21 +254,21 @@ extra_scripts        = ${common_stm32.extra_scripts}
 #
 [env:STM32F103CB_malyan]
 platform    = ${common_stm32.platform}
 extends     = common_stm32
 board       = malyanm200_f103cb
 build_flags = ${common_stm32.build_flags}
   -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB -DHAL_UART_MODULE_ENABLED
 src_filter  = ${common.default_src_filter} +<src/HAL/STM32>
 
 #
-# FLY Mini (STM32F103RCT6)
+# FLYmaker FLY Mini (STM32F103RCT6)
 #
 [env:FLY_MINI]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DSS_TIMER=4
 board                = genericSTM32F103RC
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x5000
 board_upload.offset_address = 0x08005000

commit 7f5c9d273e7564dd18109772fe6cb45b4716eeb7
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed Jul 14 00:03:24 2021 -0700

    üí° Update FLYmaker comments, URL (#22355)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 93e97654a4..f1afb0e4d7 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -264,14 +264,14 @@ src_filter  = ${common.default_src_filter} +<src/HAL/STM32>
 # FLY Mini (STM32F103RCT6)
 #
 [env:FLY_MINI]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DSS_TIMER=4
 board                = genericSTM32F103RC
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x5000
-board_upload.offset_address  = 0x08005000
+board_upload.offset_address = 0x08005000
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py

commit f479a2ef6f8335e7952ac099cb1b8336aa0a3c34
Author: ellensp <ellensp@hotmail.com>
Date:   Wed Jul 14 18:57:26 2021 +1200

    ‚ú® FLY Mini for stm32duino (#22356)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 6c39d0b6fa..93e97654a4 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -252,10 +252,26 @@ extra_scripts        = ${common_stm32.extra_scripts}
 #
 # Malyan M200 (STM32F103CB)
 #
 [env:STM32F103CB_malyan]
 platform    = ${common_stm32.platform}
 extends     = common_stm32
 board       = malyanm200_f103cb
 build_flags = ${common_stm32.build_flags}
   -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB -DHAL_UART_MODULE_ENABLED
 src_filter  = ${common.default_src_filter} +<src/HAL/STM32>
+
+#
+# FLY Mini (STM32F103RCT6)
+#
+[env:FLY_MINI]
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+build_flags          = ${common_stm32.build_flags} -DSS_TIMER=4
+board                = genericSTM32F103RC
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Rx
+board_build.offset   = 0x5000
+board_upload.offset_address  = 0x08005000
+extra_scripts        = ${common_stm32.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+  buildroot/share/PlatformIO/scripts/stm32_bootloader.py

commit 0595b87d9a86a8ef6bdd4189701cdbd9229ce164
Author: ldursw <37294448+ldursw@users.noreply.github.com>
Date:   Tue Jul 6 21:50:01 2021 -0300

    üêõ Fix Maple / STM32 serial buffer (#22292)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 0b394d1730..6c39d0b6fa 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -143,21 +143,21 @@ extra_scripts               = ${common_STM32F103RC.extra_scripts}
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x7000
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${common.extra_scripts}
+extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   pre:buildroot/share/PlatformIO/scripts/random-bin.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 debug_tool           = jlink
 upload_protocol      = jlink
 
 #
 # BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
@@ -167,21 +167,21 @@ upload_protocol      = jlink
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x7000
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags}
-extra_scripts        = ${common.extra_scripts}
+extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 debug_tool           = jlink
 upload_protocol      = jlink
 
 [env:STM32F103RE_btt_USB]
 extends           = env:STM32F103RE_btt
 platform          = ${common_stm32.platform}
 platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-3.zip
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC

commit b90de621971656df4c0030cd04a3b4c782e4511d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 29 16:25:37 2021 -0500

    üî® Clean up build scripts (#22264)
    
    * Add 10K to marlin_blackSTM32F407VET6 (typo?)
    * Document custom build scripts.
    * Add a Robin common build script.
    * Extraneous .ldscript specifiers

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 3f09a45c7b..0b394d1730 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -34,21 +34,20 @@ src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/b
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/stm32_serialbuffer.py
 
 [common_STM32F103RC]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103RC
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
-board_build.ldscript = ldscript.ld
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 
 #
 # STM32F103RE
 #
 [env:STM32F103RE]
 platform          = ${common_stm32.platform}
 extends           = common_stm32
@@ -101,21 +100,20 @@ build_flags       = ${env:STM32F103RC_btt.build_flags} ${env:stm32_flash_drive.b
 #
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
-board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
 board_build.encrypt  = Robin.bin
 build_flags          = ${common_stm32.build_flags}
   -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags}
  -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
@@ -143,21 +141,20 @@ extra_scripts               = ${common_STM32F103RC.extra_scripts}
 #
 [env:STM32F103RET6_creality]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x7000
-board_build.ldscript = ldscript.ld
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   pre:buildroot/share/PlatformIO/scripts/random-bin.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 debug_tool           = jlink
 upload_protocol      = jlink
 
 #
@@ -168,21 +165,20 @@ upload_protocol      = jlink
 #
 [env:STM32F103RE_btt]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x7000
-board_build.ldscript = ldscript.ld
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags}
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 debug_tool           = jlink
 upload_protocol      = jlink
 
 [env:STM32F103RE_btt_USB]
 extends           = env:STM32F103RE_btt
@@ -200,62 +196,59 @@ build_flags       = ${env:STM32F103RE_btt.build_flags} ${env:stm32_flash_drive.b
 # FLSUN QQS Pro (STM32F103VET6)
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
-board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
 board_build.encrypt  = Robin_mini.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
 # MKS Robin Nano V1.2 and V2
 #
 [env:mks_robin_nano35]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
-board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
 board_build.encrypt  = Robin_nano35.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 debug_tool           = jlink
 upload_protocol      = jlink
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
 # Mingda MPX_ARM_MINI
 #
 [env:mingda_mpx_arm_mini]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
-board_build.ldscript = ldscript.ld
 board_build.offset   = 0x10000
 build_flags          = ${common_stm32.build_flags} -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 
 #
 # Malyan M200 (STM32F103CB)
 #

commit d4943a607e24e5c379c5fcb3f763171f95cb30ee
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Thu Jun 17 02:49:42 2021 -0300

    üêõ Fix MKS Robin E3 build (#22149)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index dca640cd50..3f09a45c7b 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -128,21 +128,21 @@ lib_deps             =
 platform                    = ${common_stm32.platform}
 extends                     = common_STM32F103RC
 build_flags                 = ${common_stm32.build_flags}
   -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 build_unflags               = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 monitor_speed               = 115200
 board_build.offset          = 0x5000
 board_build.encrypt         = Robin_e3.bin
 board_upload.offset_address = 0x08005000
 debug_tool                  = stlink
-extra_scripts               = ${env:STM32F103RC.extra_scripts}
+extra_scripts               = ${common_STM32F103RC.extra_scripts}
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE

commit 0669053b78a81e871909fb6a7dafa16cebcb1f95
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sun Jun 13 21:01:53 2021 -0300

    üî® Fix Serial+MSC for _USB envs (#22116)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index de5c4b6c85..dca640cd50 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -82,28 +82,27 @@ monitor_speed     = 115200
 [env:STM32F103RC_btt]
 platform             = ${common_stm32.platform}
 extends              = common_STM32F103RC
 build_flags          = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 board_build.offset   = 0x7000
 board_upload.offset_address = 0x08007000
 
 [env:STM32F103RC_btt_USB]
 extends           = env:STM32F103RC_btt
 platform          = ${common_stm32.platform}
-platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-2.zip
+platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-3.zip
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 build_flags       = ${env:STM32F103RC_btt.build_flags} ${env:stm32_flash_drive.build_flags}
   -DUSBCON
-  -DUSE_USBHOST_HS
+  -DUSE_USB_FS
   -DUSBD_IRQ_PRIO=5
   -DUSBD_IRQ_SUBPRIO=6
-  -DUSE_USB_HS_IN_FS
   -DUSBD_USE_CDC_MSC
 
 #
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
@@ -181,28 +180,27 @@ board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags}
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 debug_tool           = jlink
 upload_protocol      = jlink
 
 [env:STM32F103RE_btt_USB]
 extends           = env:STM32F103RE_btt
 platform          = ${common_stm32.platform}
-platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-2.zip
+platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-3.zip
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 build_flags       = ${env:STM32F103RE_btt.build_flags} ${env:stm32_flash_drive.build_flags}
   -DUSBCON
-  -DUSE_USBHOST_HS
+  -DUSE_USB_FS
   -DUSBD_IRQ_PRIO=5
   -DUSBD_IRQ_SUBPRIO=6
-  -DUSE_USB_HS_IN_FS
   -DUSBD_USE_CDC_MSC
 
 #
 # FLSUN QQS Pro (STM32F103VET6)
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3

commit 90dc41139fb0bd55bdd3cab16b978842ed525e7b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jun 13 15:43:33 2021 -0500

    üèóÔ∏è Refactor build encrypt / rename (#22124)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 9954411c14..de5c4b6c85 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -77,22 +77,20 @@ monitor_speed     = 115200
 # BigTree SKR Mini V1.1 / SKR Mini E3 & MZ (STM32F103RCT6 ARM Cortex-M3)
 #
 #   STM32F103RC_btt ............. RCT6 with 256K
 #   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
 #
 [env:STM32F103RC_btt]
 platform             = ${common_stm32.platform}
 extends              = common_STM32F103RC
 build_flags          = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 board_build.offset   = 0x7000
-board_build.encrypt  = No
-board_build.firmware = firmware.bin
 board_upload.offset_address = 0x08007000
 
 [env:STM32F103RC_btt_USB]
 extends           = env:STM32F103RC_btt
 platform          = ${common_stm32.platform}
 platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-2.zip
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 build_flags       = ${env:STM32F103RC_btt.build_flags} ${env:stm32_flash_drive.build_flags}
   -DUSBCON
   -DUSE_USBHOST_HS
@@ -106,22 +104,21 @@ build_flags       = ${env:STM32F103RC_btt.build_flags} ${env:stm32_flash_drive.b
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
-board_build.encrypt  = Yes
-board_build.firmware = Robin.bin
+board_build.encrypt  = Robin.bin
 build_flags          = ${common_stm32.build_flags}
   -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags}
  -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 lib_deps             =
 
@@ -129,22 +126,21 @@ lib_deps             =
 # MKS Robin E3/E3D (STM32F103RCT6) with TMC2209
 #
 [env:mks_robin_e3]
 platform                    = ${common_stm32.platform}
 extends                     = common_STM32F103RC
 build_flags                 = ${common_stm32.build_flags}
   -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 build_unflags               = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 monitor_speed               = 115200
 board_build.offset          = 0x5000
-board_build.encrypt         = Yes
-board_build.firmware        = Robin_e3.bin
+board_build.encrypt         = Robin_e3.bin
 board_upload.offset_address = 0x08005000
 debug_tool                  = stlink
 extra_scripts               = ${env:STM32F103RC.extra_scripts}
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
 platform             = ${common_stm32.platform}
@@ -208,43 +204,41 @@ build_flags       = ${env:STM32F103RE_btt.build_flags} ${env:stm32_flash_drive.b
 #
 [env:flsun_hispeedv1]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
-board_build.firmware = Robin_mini.bin
-board_build.encrypt  = Yes
+board_build.encrypt  = Robin_mini.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
 # MKS Robin Nano V1.2 and V2
 #
 [env:mks_robin_nano35]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
-board_build.encrypt  = Yes
-board_build.firmware = Robin_nano35.bin
+board_build.encrypt  = Robin_nano35.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 debug_tool           = jlink
 upload_protocol      = jlink
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #

commit 673bccef3e77d33e9bc399171fb8e45be74600c7
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Thu Jun 10 14:09:29 2021 -0700

    üî® Envs for BTT SKR Mini with RET6 (512K) (#22050)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 150ddba01e..9954411c14 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -27,33 +27,20 @@ platform      = ststm32@~12.1
 build_flags   = ${common.build_flags}
   -std=gnu++14
   -DUSBCON -DUSBD_USE_CDC
   -DTIM_IRQ_PRIO=13
   -DADC_RESOLUTION=12
 build_unflags = -std=gnu++11
 src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/backtrace>
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/stm32_serialbuffer.py
 
-#
-# BigTree SKR Mini V1.1 / SKR mini E3 / SKR E3 DIP (STM32F103RCT6 ARM Cortex-M3)
-#
-#   STM32F103RC_btt ............. RCT6 with 256K
-#   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
-#   STM32F103RC_btt_512K ........ RCT6 with 512K
-#   STM32F103RC_btt_512K_USB .... RCT6 with 512K (USB mass storage)
-#
-# WARNING! If you have an SKR Mini v1.1 or an SKR Mini E3 1.0 / 1.2 / 2.0 / DIP
-# and experience a printer freeze, re-flash Marlin using the regular (non-512K)
-# build option. 256K chips may be re-branded 512K chips, but this means the
-# upper 256K is sketchy, and failure is very likely.
-#
 [common_STM32F103RC]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103RC
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.ldscript = ldscript.ld
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
@@ -79,20 +66,26 @@ monitor_speed     = 115200
 
 #
 # STM32F103ZE
 #
 [env:STM32F103ZE]
 platform          = ${common_stm32.platform}
 extends           = common_stm32
 board             = genericSTM32F103ZE
 monitor_speed     = 115200
 
+#
+# BigTree SKR Mini V1.1 / SKR Mini E3 & MZ (STM32F103RCT6 ARM Cortex-M3)
+#
+#   STM32F103RC_btt ............. RCT6 with 256K
+#   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
+#
 [env:STM32F103RC_btt]
 platform             = ${common_stm32.platform}
 extends              = common_STM32F103RC
 build_flags          = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 board_build.offset   = 0x7000
 board_build.encrypt  = No
 board_build.firmware = firmware.bin
 board_upload.offset_address = 0x08007000
 
 [env:STM32F103RC_btt_USB]
@@ -101,32 +94,20 @@ platform          = ${common_stm32.platform}
 platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-2.zip
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 build_flags       = ${env:STM32F103RC_btt.build_flags} ${env:stm32_flash_drive.build_flags}
   -DUSBCON
   -DUSE_USBHOST_HS
   -DUSBD_IRQ_PRIO=5
   -DUSBD_IRQ_SUBPRIO=6
   -DUSE_USB_HS_IN_FS
   -DUSBD_USE_CDC_MSC
 
-[env:STM32F103RC_btt_512K]
-platform          = ${common_stm32.platform}
-extends           = env:STM32F103RC_btt
-board_upload.maximum_size = 524288
-build_flags       = ${env:STM32F103RC_btt.build_flags} -DLD_MAX_DATA_SIZE=524288 -DSTM32_FLASH_SIZE=512
-
-[env:STM32F103RC_btt_512K_USB]
-platform          = ${common_stm32.platform}
-extends           = env:STM32F103RC_btt_USB
-board_upload.maximum_size = 524288
-build_flags       = ${env:STM32F103RC_btt_USB.build_flags} -DLD_MAX_DATA_SIZE=524288 -DSTM32_FLASH_SIZE=512
-
 #
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
 [env:mks_robin]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
@@ -178,21 +159,21 @@ board_build.ldscript = ldscript.ld
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   pre:buildroot/share/PlatformIO/scripts/random-bin.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 debug_tool           = jlink
 upload_protocol      = jlink
 
 #
-# BigTree SKR Mini E3 DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
+# BigTree SKR Mini E3 V2.0 & DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200

commit bc6d8f99b23bbf613b81d7a4d562f113fc32c2e2
Author: ellensp <ellensp@hotmail.com>
Date:   Sun Jun 6 19:50:14 2021 +1200

    üì¶Ô∏è Malyan M200 with HAL/STM32 (#22052)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 2e197ccb4d..150ddba01e 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -275,10 +275,21 @@ extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x10000
 build_flags          = ${common_stm32.build_flags} -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+
+#
+# Malyan M200 (STM32F103CB)
+#
+[env:STM32F103CB_malyan]
+platform    = ${common_stm32.platform}
+extends     = common_stm32
+board       = malyanm200_f103cb
+build_flags = ${common_stm32.build_flags}
+  -DHAL_PCD_MODULE_ENABLED -DDISABLE_GENERIC_SERIALUSB -DHAL_UART_MODULE_ENABLED
+src_filter  = ${common.default_src_filter} +<src/HAL/STM32>

commit c73d47327b80968181450fa222b73f0e7f45fd2a
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Jun 5 01:49:00 2021 -0300

    üì¶Ô∏è STM32F103RE_btt(_USB) with HAL/STM32 (#22040)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index bbd2038479..2e197ccb4d 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -177,20 +177,57 @@ board_build.offset   = 0x7000
 board_build.ldscript = ldscript.ld
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   pre:buildroot/share/PlatformIO/scripts/random-bin.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 debug_tool           = jlink
 upload_protocol      = jlink
 
+#
+# BigTree SKR Mini E3 DIP / SKR CR6 (STM32F103RET6 ARM Cortex-M3)
+#
+#   STM32F103RE_btt ............. RET6
+#   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
+#
+[env:STM32F103RE_btt]
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
+board                = genericSTM32F103RE
+monitor_speed        = 115200
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Rx
+board_build.offset   = 0x7000
+board_build.ldscript = ldscript.ld
+board_upload.offset_address = 0x08007000
+build_unflags        = ${common_stm32.build_unflags}
+extra_scripts        = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+debug_tool           = jlink
+upload_protocol      = jlink
+
+[env:STM32F103RE_btt_USB]
+extends           = env:STM32F103RE_btt
+platform          = ${common_stm32.platform}
+platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-2.zip
+build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
+build_flags       = ${env:STM32F103RE_btt.build_flags} ${env:stm32_flash_drive.build_flags}
+  -DUSBCON
+  -DUSE_USBHOST_HS
+  -DUSBD_IRQ_PRIO=5
+  -DUSBD_IRQ_SUBPRIO=6
+  -DUSE_USB_HS_IN_FS
+  -DUSBD_USE_CDC_MSC
+
 #
 # FLSUN QQS Pro (STM32F103VET6)
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32

commit 6131d2c5a6285da849fbb8d3e592f89518b02b24
Author: ldursw <37294448+ldursw@users.noreply.github.com>
Date:   Fri Jun 4 00:38:10 2021 -0300

    üî® MKS Robin E3 for HAL/STM32 (#21927)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index a0dd38fcd4..bbd2038479 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -24,20 +24,22 @@
 #
 [common_stm32]
 platform      = ststm32@~12.1
 build_flags   = ${common.build_flags}
   -std=gnu++14
   -DUSBCON -DUSBD_USE_CDC
   -DTIM_IRQ_PRIO=13
   -DADC_RESOLUTION=12
 build_unflags = -std=gnu++11
 src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/backtrace>
+extra_scripts = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/stm32_serialbuffer.py
 
 #
 # BigTree SKR Mini V1.1 / SKR mini E3 / SKR E3 DIP (STM32F103RCT6 ARM Cortex-M3)
 #
 #   STM32F103RC_btt ............. RCT6 with 256K
 #   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
 #   STM32F103RC_btt_512K ........ RCT6 with 512K
 #   STM32F103RC_btt_512K_USB .... RCT6 with 512K (USB mass storage)
 #
 # WARNING! If you have an SKR Mini v1.1 or an SKR Mini E3 1.0 / 1.2 / 2.0 / DIP
@@ -46,21 +48,21 @@ src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/b
 # upper 256K is sketchy, and failure is very likely.
 #
 [common_STM32F103RC]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103RC
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.ldscript = ldscript.ld
-extra_scripts        = ${common.extra_scripts}
+extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 
 #
 # STM32F103RE
 #
 [env:STM32F103RE]
 platform          = ${common_stm32.platform}
 extends           = common_stm32
 board             = genericSTM32F103RE
@@ -129,26 +131,44 @@ board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
 board_build.encrypt  = Yes
 board_build.firmware = Robin.bin
 build_flags          = ${common_stm32.build_flags}
   -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags}
  -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${common.extra_scripts}
+extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 lib_deps             =
 
+#
+# MKS Robin E3/E3D (STM32F103RCT6) with TMC2209
+#
+[env:mks_robin_e3]
+platform                    = ${common_stm32.platform}
+extends                     = common_STM32F103RC
+build_flags                 = ${common_stm32.build_flags}
+  -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
+build_unflags               = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
+monitor_speed               = 115200
+board_build.offset          = 0x5000
+board_build.encrypt         = Yes
+board_build.firmware        = Robin_e3.bin
+board_upload.offset_address = 0x08005000
+debug_tool                  = stlink
+extra_scripts               = ${env:STM32F103RC.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_encrypt.py
+
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200
 board_build.core     = stm32
@@ -174,21 +194,21 @@ extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
 board_build.firmware = Robin_mini.bin
 board_build.encrypt  = Yes
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${common.extra_scripts}
+extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
 # MKS Robin Nano V1.2 and V2
 #
 [env:mks_robin_nano35]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
@@ -197,31 +217,31 @@ board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
 board_build.encrypt  = Yes
 board_build.firmware = Robin_nano35.bin
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 debug_tool           = jlink
 upload_protocol      = jlink
-extra_scripts        = ${common.extra_scripts}
+extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
 # Mingda MPX_ARM_MINI
 #
 [env:mingda_mpx_arm_mini]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x10000
 build_flags          = ${common_stm32.build_flags} -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
-extra_scripts        = ${common.extra_scripts}
+extra_scripts        = ${common_stm32.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py

commit 0398a0b780afe73115374900814f4c87b43a3889
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Thu Jun 3 18:52:25 2021 -0300

    üëΩÔ∏è Fix usb-host-msc-cdc-msc issue (#22025)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 7bf8ea3617..a0dd38fcd4 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -89,21 +89,21 @@ platform             = ${common_stm32.platform}
 extends              = common_STM32F103RC
 build_flags          = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 board_build.offset   = 0x7000
 board_build.encrypt  = No
 board_build.firmware = firmware.bin
 board_upload.offset_address = 0x08007000
 
 [env:STM32F103RC_btt_USB]
 extends           = env:STM32F103RC_btt
 platform          = ${common_stm32.platform}
-platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc.zip
+platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc-2.zip
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
 build_flags       = ${env:STM32F103RC_btt.build_flags} ${env:stm32_flash_drive.build_flags}
   -DUSBCON
   -DUSE_USBHOST_HS
   -DUSBD_IRQ_PRIO=5
   -DUSBD_IRQ_SUBPRIO=6
   -DUSE_USB_HS_IN_FS
   -DUSBD_USE_CDC_MSC
 
 [env:STM32F103RC_btt_512K]

commit 4e9ccffc10fb4e7e1be22331deb2307e6d8fbf36
Author: ellensp <ellensp@hotmail.com>
Date:   Thu Jun 3 20:10:04 2021 +1200

    üêõ Fix Creality v4 servo timer (#22021)
    
    Followup to #21999

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 161e59b2e3..7bf8ea3617 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -141,21 +141,21 @@ extra_scripts        = ${common.extra_scripts}
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 lib_deps             =
 
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
-build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
+build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DTIMER_SERVO=TIM5 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
 board                = genericSTM32F103RE
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.offset   = 0x7000
 board_build.ldscript = ldscript.ld
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py

commit 67c1075e47fa9b68bf7a89164b8e5b385c5e0be5
Author: ellensp <ellensp@hotmail.com>
Date:   Thu Jun 3 19:40:16 2021 +1200

    üêõ Fix env:STM32F103RE maple/unified split-up (#22019)
    
    Followup to #21999

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 4c42922452..161e59b2e3 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -50,20 +50,47 @@ platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103RC
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.ldscript = ldscript.ld
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 
+#
+# STM32F103RE
+#
+[env:STM32F103RE]
+platform          = ${common_stm32.platform}
+extends           = common_stm32
+board             = genericSTM32F103RE
+monitor_speed     = 115200
+
+#
+# STM32F103VE
+#
+[env:STM32F103VE]
+platform          = ${common_stm32.platform}
+extends           = common_stm32
+board             = genericSTM32F103VE
+monitor_speed     = 115200
+
+#
+# STM32F103ZE
+#
+[env:STM32F103ZE]
+platform          = ${common_stm32.platform}
+extends           = common_stm32
+board             = genericSTM32F103ZE
+monitor_speed     = 115200
+
 [env:STM32F103RC_btt]
 platform             = ${common_stm32.platform}
 extends              = common_STM32F103RC
 build_flags          = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 board_build.offset   = 0x7000
 board_build.encrypt  = No
 board_build.firmware = firmware.bin
 board_upload.offset_address = 0x08007000
 
 [env:STM32F103RC_btt_USB]

commit 08155b4875fdb08f1888cacae6e1b68b48b9e51f
Author: ellensp <ellensp@hotmail.com>
Date:   Wed Jun 2 18:42:15 2021 +1200

    üî® Creality v4 with STM32 HAL (#21999)
    
    - New STM32 env for Creality V4 boards.
    - Separate Libmaple targets into their own `ini` file.
    - Temporarily remove unusable targets from `pins.h`.
    
    Co-authored-by: ellensp <ellensp@hotmsil.com>
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 722f80c462..4c42922452 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -1,18 +1,18 @@
 #
 # Marlin Firmware
 # PlatformIO Configuration File
 #
 
 #################################
 #
-# STM32F1 Architecture
+# STM32F1 Architecture with unified STM32 HAL
 #
 # Naming Example: STM32F103RCT6
 #
 #   F : Foundation (sometimes High Performance F2/F4)
 #   1 : Cortex M1 core
 #  03 : Line/Features
 #   R : 64 or 66 pins  (V:100, Z:144, I:176)
 #   C : 256KB Flash-memory  (D:384KB, E:512KB, G:1024KB)
 #   T : LQFP package
 #   6 : -40...85¬∞C   (7: ...105¬∞C)
@@ -25,452 +25,127 @@
 [common_stm32]
 platform      = ststm32@~12.1
 build_flags   = ${common.build_flags}
   -std=gnu++14
   -DUSBCON -DUSBD_USE_CDC
   -DTIM_IRQ_PRIO=13
   -DADC_RESOLUTION=12
 build_unflags = -std=gnu++11
 src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/backtrace>
 
-#
-# HAL/STM32F1 Common Environment values
-#
-[common_stm32f1]
-platform          = ststm32@~12.1
-board_build.core  = maple
-build_flags       = !python Marlin/src/HAL/STM32F1/build_flags.py
-  ${common.build_flags}
-  -DARDUINO_ARCH_STM32
-build_unflags     = -std=gnu11 -std=gnu++11
-src_filter        = ${common.default_src_filter} +<src/HAL/STM32F1>
-lib_ignore        = SPI, FreeRTOS701, FreeRTOS821
-lib_deps          = ${common.lib_deps}
-  SoftwareSerialM
-platform_packages = tool-stm32duino
-extra_scripts     = ${common.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/fix_framework_weakness.py
-
-#
-# STM32F103RC
-#
-[env:STM32F103RC]
-platform          = ${common_stm32f1.platform}
-extends           = common_stm32f1
-board             = genericSTM32F103RC
-monitor_speed     = 115200
-
-#
-# MEEB_3DP (STM32F103RCT6 with 512K)
-#
-[env:STM32F103RC_meeb]
-platform          = ${common_stm32f1.platform}
-extends           = common_stm32f1
-board             = marlin_MEEB_3DP
-build_flags       = ${common_stm32f1.build_flags}
-                    -DDEBUG_LEVEL=0
-                    -DSS_TIMER=4
-                    -DSTM32_FLASH_SIZE=512
-                    -DHSE_VALUE=12000000U
-                    -DUSE_USB_COMPOSITE
-                    -DVECT_TAB_OFFSET=0x2000
-                    -DGENERIC_BOOTLOADER
-extra_scripts     = ${common_stm32f1.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/STM32F1_create_variant.py
-  buildroot/share/PlatformIO/scripts/STM32F103RC_MEEB_3DP.py
-lib_deps          = ${common.lib_deps}
-  SoftwareSerialM
-  USBComposite for STM32F1@0.91
-custom_marlin.NEOPIXEL_LED = Adafruit NeoPixel=https://github.com/ccccmagicboy/Adafruit_NeoPixel#meeb_3dp_use
-debug_tool        = stlink
-upload_protocol   = dfu
-
-#
-# STM32F103RC_fysetc
-#
-[env:STM32F103RC_fysetc]
-platform          = ${common_stm32f1.platform}
-extends           = env:STM32F103RC
-extra_scripts     = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
-build_flags       = ${common_stm32f1.build_flags} -DDEBUG_LEVEL=0
-lib_ldf_mode      = chain
-debug_tool        = stlink
-upload_protocol   = serial
-
 #
 # BigTree SKR Mini V1.1 / SKR mini E3 / SKR E3 DIP (STM32F103RCT6 ARM Cortex-M3)
 #
 #   STM32F103RC_btt ............. RCT6 with 256K
 #   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
 #   STM32F103RC_btt_512K ........ RCT6 with 512K
 #   STM32F103RC_btt_512K_USB .... RCT6 with 512K (USB mass storage)
 #
 # WARNING! If you have an SKR Mini v1.1 or an SKR Mini E3 1.0 / 1.2 / 2.0 / DIP
 # and experience a printer freeze, re-flash Marlin using the regular (non-512K)
 # build option. 256K chips may be re-branded 512K chips, but this means the
 # upper 256K is sketchy, and failure is very likely.
 #
-
-[env:STM32F103RC_btt]
-platform          = ${common_stm32f1.platform}
-extends           = env:STM32F103RC
-board_build.address  = 0x08007000
-board_build.ldscript = STM32F103RC_SKR_MINI_256K.ld
-extra_scripts     = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/custom_board.py
-build_flags       = ${common_stm32f1.build_flags}
-  -DDEBUG_LEVEL=0 -DSS_TIMER=4
-monitor_speed     = 115200
-
-[env:STM32F103RC_btt_USB]
-platform          = ${common_stm32f1.platform}
-extends           = env:STM32F103RC_btt
-build_flags       = ${env:STM32F103RC_btt.build_flags} -DUSE_USB_COMPOSITE
-lib_deps          = ${env:STM32F103RC_btt.lib_deps}
-  USBComposite for STM32F1@0.91
-
-[env:STM32F103RC_btt_512K]
-platform          = ${common_stm32f1.platform}
-extends           = env:STM32F103RC_btt
-board_build.ldscript = STM32F103RC_SKR_MINI_512K.ld
-board_upload.maximum_size=524288
-build_flags       = ${env:STM32F103RC_btt.build_flags} -DSTM32_FLASH_SIZE=512
-
-[env:STM32F103RC_btt_512K_USB]
-platform          = ${common_stm32f1.platform}
-extends           = env:STM32F103RC_btt_512K
-build_flags       = ${env:STM32F103RC_btt_512K.build_flags} -DUSE_USB_COMPOSITE
-lib_deps          = ${env:STM32F103RC_btt_512K.lib_deps}
-  USBComposite for STM32F1@0.91
-
-#
-# STM32 HAL version of STM32F103RC_btt envs
-#
-
-[env:STM32F103RC_stm32]
+[common_STM32F103RC]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103RC
 monitor_speed        = 115200
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Rx
 board_build.ldscript = ldscript.ld
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
 
-[env:STM32F103RC_btt_stm32]
+[env:STM32F103RC_btt]
 platform             = ${common_stm32.platform}
-extends              = env:STM32F103RC_stm32
+extends              = common_STM32F103RC
 build_flags          = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
 board_build.offset   = 0x7000
 board_build.encrypt  = No
 board_build.firmware = firmware.bin
 board_upload.offset_address = 0x08007000
 
-[env:STM32F103RC_btt_USB_stm32]
-extends           = env:STM32F103RC_btt_stm32
+[env:STM32F103RC_btt_USB]
+extends           = env:STM32F103RC_btt
 platform          = ${common_stm32.platform}
 platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc.zip
 build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
-build_flags       = ${env:STM32F103RC_btt_stm32.build_flags} ${env:stm32_flash_drive.build_flags}
+build_flags       = ${env:STM32F103RC_btt.build_flags} ${env:stm32_flash_drive.build_flags}
   -DUSBCON
   -DUSE_USBHOST_HS
   -DUSBD_IRQ_PRIO=5
   -DUSBD_IRQ_SUBPRIO=6
   -DUSE_USB_HS_IN_FS
   -DUSBD_USE_CDC_MSC
 
-[env:STM32F103RC_btt_512K_stm32]
+[env:STM32F103RC_btt_512K]
 platform          = ${common_stm32.platform}
-extends           = env:STM32F103RC_btt_stm32
+extends           = env:STM32F103RC_btt
 board_upload.maximum_size = 524288
-build_flags       = ${env:STM32F103RC_btt_stm32.build_flags} -DLD_MAX_DATA_SIZE=524288 -DSTM32_FLASH_SIZE=512
+build_flags       = ${env:STM32F103RC_btt.build_flags} -DLD_MAX_DATA_SIZE=524288 -DSTM32_FLASH_SIZE=512
 
-[env:STM32F103RC_btt_512K_USB_stm32]
+[env:STM32F103RC_btt_512K_USB]
 platform          = ${common_stm32.platform}
-extends           = env:STM32F103RC_btt_USB_stm32
+extends           = env:STM32F103RC_btt_USB
 board_upload.maximum_size = 524288
-build_flags       = ${env:STM32F103RC_btt_USB_stm32.build_flags} -DLD_MAX_DATA_SIZE=524288 -DSTM32_FLASH_SIZE=512
-
-#
-# STM32F103RE
-#
-[env:STM32F103RE]
-platform          = ${common_stm32f1.platform}
-extends           = common_stm32f1
-board             = genericSTM32F103RE
-monitor_speed     = 115200
-
-#
-#   STM32F103RE_btt ............. RET6
-#   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
-#
-[env:STM32F103RE_btt]
-platform          = ${common_stm32f1.platform}
-extends           = env:STM32F103RE
-board_build.address  = 0x08007000
-board_build.ldscript = STM32F103RE_SKR_E3_DIP.ld
-extra_scripts     = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/custom_board.py
-build_flags       = ${common_stm32f1.build_flags} -DDEBUG_LEVEL=0 -DSS_TIMER=4
-debug_tool        = stlink
-upload_protocol   = stlink
-
-[env:STM32F103RE_btt_USB]
-platform          = ${common_stm32f1.platform}
-extends           = env:STM32F103RE_btt
-build_flags       = ${env:STM32F103RE_btt.build_flags} -DUSE_USB_COMPOSITE
-lib_deps          = ${common_stm32f1.lib_deps}
-  USBComposite for STM32F1@0.91
-
-#
-# Geeetech GTM32 (STM32F103VET6)
-#
-[env:STM32F103VE_GTM32]
-platform        = ${common_stm32f1.platform}
-extends         = common_stm32f1
-board           = genericSTM32F103VE
-build_flags     = ${common_stm32f1.build_flags}
-  -ffunction-sections -fdata-sections -nostdlib -MMD
-  -DMCU_STM32F103VE -DARDUINO_GENERIC_STM32F103V -DARDUINO_ARCH_STM32F1 -DBOARD_generic_stm32f103v
-  -DDEBUG_LEVEL=DEBUG_NONE -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DVECT_TAB_ADDR=0x8000000
-  -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
-upload_protocol = serial
-
-#
-# Longer 3D board in Alfawise U20 (STM32F103VET6)
-#
-[env:STM32F103VE_longer]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = genericSTM32F103VE
-board_build.address  = 0x08010000
-board_build.ldscript = STM32F103VE_longer.ld
-extra_scripts = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/custom_board.py
-  buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
-build_flags   = ${common_stm32f1.build_flags}
-  -DMCU_STM32F103VE -DSTM32F1xx -USERIAL_USB -DU20 -DTS_V12
-build_unflags = ${common_stm32f1.build_unflags}
-  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
-
-#
-# MKS Robin Mini (STM32F103VET6)
-#
-[env:mks_robin_mini]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = genericSTM32F103VE
-extra_scripts = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_robin_mini.py
-build_flags   = ${common_stm32f1.build_flags}
-  -DMCU_STM32F103VE
-
-#
-# MKS Robin Nano (STM32F103VET6)
-#
-[env:mks_robin_nano35]
-platform        = ${common_stm32f1.platform}
-extends         = common_stm32f1
-board           = genericSTM32F103VE
-extra_scripts   = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_robin_nano35.py
-build_flags     = ${common_stm32f1.build_flags}
-  -DMCU_STM32F103VE -DSS_TIMER=4
-debug_tool      = jlink
-upload_protocol = jlink
+build_flags       = ${env:STM32F103RC_btt_USB.build_flags} -DLD_MAX_DATA_SIZE=524288 -DSTM32_FLASH_SIZE=512
 
 #
-# MKS Robin (STM32F103ZET6)
-#
-[env:mks_robin]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = genericSTM32F103ZE
-extra_scripts = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_robin.py
-build_flags   = ${common_stm32f1.build_flags}
-  -DSS_TIMER=4 -DSTM32_XL_DENSITY
-
 # MKS Robin (STM32F103ZET6)
 # Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
 #
-[env:mks_robin_stm32]
+[env:mks_robin]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 board                = genericSTM32F103ZE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Zx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
 board_build.encrypt  = Yes
 board_build.firmware = Robin.bin
 build_flags          = ${common_stm32.build_flags}
   -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
 build_unflags        = ${common_stm32.build_unflags}
  -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 lib_deps             =
 
-#
-# MKS Robin Pro (STM32F103ZET6)
-#
-[env:mks_robin_pro]
-platform      = ${common_stm32f1.platform}
-extends       = env:mks_robin
-extra_scripts = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_robin_pro.py
-
-#
-# TRIGORILLA PRO (STM32F103ZET6)
-#
-[env:trigorilla_pro]
-platform      = ${common_stm32f1.platform}
-extends       = env:mks_robin
-extra_scripts = ${common_stm32f1.extra_scripts}
-
-#
-# MKS Robin E3D (STM32F103RCT6) and
-# MKS Robin E3 with TMC2209
-#
-[env:mks_robin_e3]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = genericSTM32F103RC
-extra_scripts = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_robin_e3.py
-build_flags   = ${common_stm32f1.build_flags}
-  -DDEBUG_LEVEL=0 -DSS_TIMER=4
-
-#
-# MKS Robin E3p (STM32F103VET6)
-#  - LVGL UI
-#
-[env:mks_robin_e3p]
-platform        = ${common_stm32f1.platform}
-extends         = common_stm32f1
-board           = genericSTM32F103VE
-extra_scripts   = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_robin_e3p.py
-build_flags     = ${common_stm32f1.build_flags}
-  -DMCU_STM32F103VE -DSS_TIMER=4
-debug_tool      = jlink
-upload_protocol = jlink
-
-#
-# MKS Robin Lite/Lite2 (STM32F103RCT6)
-#
-[env:mks_robin_lite]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = genericSTM32F103RC
-extra_scripts = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_robin_lite.py
-
-#
-# MKS ROBIN LITE3 (STM32F103RCT6)
-#
-[env:mks_robin_lite3]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = genericSTM32F103RC
-extra_scripts = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/mks_robin_lite3.py
-
-#
-# FLY MINI (STM32F103RCT6)
-#
-[env:FLY_MINI]
-platform          = ${common_stm32f1.platform}
-extends           = common_stm32f1
-board             = genericSTM32F103RC
-board_build.address  = 0x08005000
-board_build.ldscript = fly_mini.ld
-extra_scripts     = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/custom_board.py
-build_flags       = ${common_stm32f1.build_flags}
-  -DDEBUG_LEVEL=0 -DSS_TIMER=4
-
-#
-# JGAurora A5S A1 (STM32F103ZET6)
-#
-[env:jgaurora_a5s_a1]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = genericSTM32F103ZE
-board_build.address  = 0x0800A000
-board_build.ldscript = jgaurora_a5s_a1.ld
-extra_scripts = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/custom_board.py
-  buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
-build_flags   = ${common_stm32f1.build_flags}
-  -DSTM32F1xx -DSTM32_XL_DENSITY
-
-#
-# Malyan M200 (STM32F103CB)
-#
-[env:STM32F103CB_malyan]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = marlin_malyanM200
-build_flags   = ${common_stm32f1.build_flags}
-  -DMCU_STM32F103CB -D__STM32F1__=1 -std=c++1y -DSERIAL_USB -ffunction-sections -fdata-sections
-  -Wl,--gc-sections -DDEBUG_LEVEL=0 -D__MARLIN_FIRMWARE__
-lib_ignore    = ${common_stm32f1.lib_ignore}
-  SoftwareSerialM
-
-#
-# Chitu boards like Tronxy X5s (STM32F103ZET6)
-#
-[env:chitu_f103]
-platform      = ${common_stm32f1.platform}
-extends       = common_stm32f1
-board         = marlin_CHITU_F103
-extra_scripts = pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
-  pre:buildroot/share/PlatformIO/scripts/STM32F1_create_variant.py
-  buildroot/share/PlatformIO/scripts/chitu_crypt.py
-build_flags   = ${common_stm32f1.build_flags}
-  -DSTM32F1xx -DSTM32_XL_DENSITY
-build_unflags = ${common_stm32f1.build_unflags}
-  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG= -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
-
-#
-# Some Chitu V5 boards have a problem with GPIO init.
-# Use this target if G28 or G29 are always failing.
-#
-[env:chitu_v5_gpio_init]
-platform      = ${common_stm32f1.platform}
-extends       = env:chitu_f103
-build_flags   = ${env:chitu_f103.build_flags} -DCHITU_V5_Z_MIN_BUGFIX
-
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
-platform        = ${env:STM32F103RE.platform}
-extends         = env:STM32F103RE
-build_flags     = ${env:STM32F103RE.build_flags} -DTEMP_TIMER_CHAN=4
-board_build.address  = 0x08007000
-board_build.ldscript = creality.ld
-extra_scripts   = ${env:STM32F103RE.extra_scripts}
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103RE -DHAL_SD_MODULE_ENABLED -DSS_TIMER=4 -DENABLE_HWSERIAL3 -DTRANSFER_CLOCK_DIV=8
+board                = genericSTM32F103RE
+monitor_speed        = 115200
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Rx
+board_build.offset   = 0x7000
+board_build.ldscript = ldscript.ld
+board_upload.offset_address = 0x08007000
+build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
+extra_scripts        = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   pre:buildroot/share/PlatformIO/scripts/random-bin.py
-  buildroot/share/PlatformIO/scripts/custom_board.py
-debug_tool      = jlink
-upload_protocol = jlink
+  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+debug_tool           = jlink
+upload_protocol      = jlink
 
 #
-# FLSUN QQS Pro (STM32F103VET6) using hal STM32
+# FLSUN QQS Pro (STM32F103VET6)
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.ldscript = ldscript.ld
@@ -478,23 +153,23 @@ board_build.offset   = 0x7000
 board_build.firmware = Robin_mini.bin
 board_build.encrypt  = Yes
 board_upload.offset_address = 0x08007000
 build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
 extra_scripts        = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
   buildroot/share/PlatformIO/scripts/stm32_bootloader.py
   buildroot/share/PlatformIO/scripts/mks_encrypt.py
 
 #
-# MKS Robin Nano V1.2 and V2 using hal STM32
+# MKS Robin Nano V1.2 and V2
 #
-[env:mks_robin_nano35_stm32]
+[env:mks_robin_nano35]
 platform             = ${common_stm32.platform}
 extends              = common_stm32
 build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
 board                = genericSTM32F103VE
 board_build.core     = stm32
 board_build.variant  = MARLIN_F103Vx
 board_build.ldscript = ldscript.ld
 board_build.offset   = 0x7000
 board_build.encrypt  = Yes
 board_build.firmware = Robin_nano35.bin

commit c207111cc6aababfb1e617b7790d10af48233a25
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 1 23:24:20 2021 -0500

    üî® Move FLY_MINI env to stm32f1.ini

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 6a234bdc97..722f80c462 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -374,20 +374,34 @@ extra_scripts = ${common_stm32f1.extra_scripts}
 #
 # MKS ROBIN LITE3 (STM32F103RCT6)
 #
 [env:mks_robin_lite3]
 platform      = ${common_stm32f1.platform}
 extends       = common_stm32f1
 board         = genericSTM32F103RC
 extra_scripts = ${common_stm32f1.extra_scripts}
   buildroot/share/PlatformIO/scripts/mks_robin_lite3.py
 
+#
+# FLY MINI (STM32F103RCT6)
+#
+[env:FLY_MINI]
+platform          = ${common_stm32f1.platform}
+extends           = common_stm32f1
+board             = genericSTM32F103RC
+board_build.address  = 0x08005000
+board_build.ldscript = fly_mini.ld
+extra_scripts     = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/custom_board.py
+build_flags       = ${common_stm32f1.build_flags}
+  -DDEBUG_LEVEL=0 -DSS_TIMER=4
+
 #
 # JGAurora A5S A1 (STM32F103ZET6)
 #
 [env:jgaurora_a5s_a1]
 platform      = ${common_stm32f1.platform}
 extends       = common_stm32f1
 board         = genericSTM32F103ZE
 board_build.address  = 0x0800A000
 board_build.ldscript = jgaurora_a5s_a1.ld
 extra_scripts = ${common_stm32f1.extra_scripts}

commit a42760d38a65c58178af7840ba57298cd0b7d31a
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Tue May 11 12:44:54 2021 -0300

    BTT SKR Mini E3 for HAL/STM32 (#21488)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 7283adda4b..6a234bdc97 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -136,20 +136,70 @@ board_build.ldscript = STM32F103RC_SKR_MINI_512K.ld
 board_upload.maximum_size=524288
 build_flags       = ${env:STM32F103RC_btt.build_flags} -DSTM32_FLASH_SIZE=512
 
 [env:STM32F103RC_btt_512K_USB]
 platform          = ${common_stm32f1.platform}
 extends           = env:STM32F103RC_btt_512K
 build_flags       = ${env:STM32F103RC_btt_512K.build_flags} -DUSE_USB_COMPOSITE
 lib_deps          = ${env:STM32F103RC_btt_512K.lib_deps}
   USBComposite for STM32F1@0.91
 
+#
+# STM32 HAL version of STM32F103RC_btt envs
+#
+
+[env:STM32F103RC_stm32]
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+board                = genericSTM32F103RC
+monitor_speed        = 115200
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Rx
+board_build.ldscript = ldscript.ld
+extra_scripts        = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+
+[env:STM32F103RC_btt_stm32]
+platform             = ${common_stm32.platform}
+extends              = env:STM32F103RC_stm32
+build_flags          = ${common_stm32.build_flags} -DDEBUG_LEVEL=0 -DTIMER_SERVO=TIM5
+board_build.offset   = 0x7000
+board_build.encrypt  = No
+board_build.firmware = firmware.bin
+board_upload.offset_address = 0x08007000
+
+[env:STM32F103RC_btt_USB_stm32]
+extends           = env:STM32F103RC_btt_stm32
+platform          = ${common_stm32.platform}
+platform_packages = framework-arduinoststm32@https://github.com/rhapsodyv/Arduino_Core_STM32/archive/usb-host-msc-cdc-msc.zip
+build_unflags     = ${common_stm32.build_unflags} -DUSBD_USE_CDC
+build_flags       = ${env:STM32F103RC_btt_stm32.build_flags} ${env:stm32_flash_drive.build_flags}
+  -DUSBCON
+  -DUSE_USBHOST_HS
+  -DUSBD_IRQ_PRIO=5
+  -DUSBD_IRQ_SUBPRIO=6
+  -DUSE_USB_HS_IN_FS
+  -DUSBD_USE_CDC_MSC
+
+[env:STM32F103RC_btt_512K_stm32]
+platform          = ${common_stm32.platform}
+extends           = env:STM32F103RC_btt_stm32
+board_upload.maximum_size = 524288
+build_flags       = ${env:STM32F103RC_btt_stm32.build_flags} -DLD_MAX_DATA_SIZE=524288 -DSTM32_FLASH_SIZE=512
+
+[env:STM32F103RC_btt_512K_USB_stm32]
+platform          = ${common_stm32.platform}
+extends           = env:STM32F103RC_btt_USB_stm32
+board_upload.maximum_size = 524288
+build_flags       = ${env:STM32F103RC_btt_USB_stm32.build_flags} -DLD_MAX_DATA_SIZE=524288 -DSTM32_FLASH_SIZE=512
+
 #
 # STM32F103RE
 #
 [env:STM32F103RE]
 platform          = ${common_stm32f1.platform}
 extends           = common_stm32f1
 board             = genericSTM32F103RE
 monitor_speed     = 115200
 
 #

commit 257ae51275f7112fce716cf1e8ebf7f108f32d97
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat May 1 21:14:58 2021 -0500

    Use ststm32@~12.1

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 94693d65a4..7283adda4b 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -16,34 +16,34 @@
 #   C : 256KB Flash-memory  (D:384KB, E:512KB, G:1024KB)
 #   T : LQFP package
 #   6 : -40...85¬∞C   (7: ...105¬∞C)
 #
 #################################
 
 #
 # HAL/STM32 Base Environment values
 #
 [common_stm32]
-platform      = ststm32@~12.0
+platform      = ststm32@~12.1
 build_flags   = ${common.build_flags}
   -std=gnu++14
   -DUSBCON -DUSBD_USE_CDC
   -DTIM_IRQ_PRIO=13
   -DADC_RESOLUTION=12
 build_unflags = -std=gnu++11
 src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/backtrace>
 
 #
 # HAL/STM32F1 Common Environment values
 #
 [common_stm32f1]
-platform          = ststm32@~12.0
+platform          = ststm32@~12.1
 board_build.core  = maple
 build_flags       = !python Marlin/src/HAL/STM32F1/build_flags.py
   ${common.build_flags}
   -DARDUINO_ARCH_STM32
 build_unflags     = -std=gnu11 -std=gnu++11
 src_filter        = ${common.default_src_filter} +<src/HAL/STM32F1>
 lib_ignore        = SPI, FreeRTOS701, FreeRTOS821
 lib_deps          = ${common.lib_deps}
   SoftwareSerialM
 platform_packages = tool-stm32duino

commit ee016e605cda97f3934b78994b390ce99ea35f04
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Apr 27 04:49:21 2021 -0500

    Rename, clean up boards/variants (#21655)
    
    * Consolidate variant scripts
    * Rename Marlin-local boards
    * Simplify variants where possible
    * Rename variants
    * CHITU_F103 and MEEB_3DP: Maple platform `platformio-build-stm32f1.py` uses the 'board' name, not 'board_build.variant' so folder names match 'board' and not `board_build.variant`.

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index a2954e64cf..94693d65a4 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -58,21 +58,21 @@ platform          = ${common_stm32f1.platform}
 extends           = common_stm32f1
 board             = genericSTM32F103RC
 monitor_speed     = 115200
 
 #
 # MEEB_3DP (STM32F103RCT6 with 512K)
 #
 [env:STM32F103RC_meeb]
 platform          = ${common_stm32f1.platform}
 extends           = common_stm32f1
-board             = MEEB_3DP
+board             = marlin_MEEB_3DP
 build_flags       = ${common_stm32f1.build_flags}
                     -DDEBUG_LEVEL=0
                     -DSS_TIMER=4
                     -DSTM32_FLASH_SIZE=512
                     -DHSE_VALUE=12000000U
                     -DUSE_USB_COMPOSITE
                     -DVECT_TAB_OFFSET=0x2000
                     -DGENERIC_BOOTLOADER
 extra_scripts     = ${common_stm32f1.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/STM32F1_create_variant.py
@@ -107,36 +107,39 @@ upload_protocol   = serial
 #
 # WARNING! If you have an SKR Mini v1.1 or an SKR Mini E3 1.0 / 1.2 / 2.0 / DIP
 # and experience a printer freeze, re-flash Marlin using the regular (non-512K)
 # build option. 256K chips may be re-branded 512K chips, but this means the
 # upper 256K is sketchy, and failure is very likely.
 #
 
 [env:STM32F103RC_btt]
 platform          = ${common_stm32f1.platform}
 extends           = env:STM32F103RC
+board_build.address  = 0x08007000
+board_build.ldscript = STM32F103RC_SKR_MINI_256K.ld
 extra_scripts     = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/STM32F103RC_SKR_MINI.py
+  buildroot/share/PlatformIO/scripts/custom_board.py
 build_flags       = ${common_stm32f1.build_flags}
   -DDEBUG_LEVEL=0 -DSS_TIMER=4
 monitor_speed     = 115200
 
 [env:STM32F103RC_btt_USB]
 platform          = ${common_stm32f1.platform}
 extends           = env:STM32F103RC_btt
 build_flags       = ${env:STM32F103RC_btt.build_flags} -DUSE_USB_COMPOSITE
 lib_deps          = ${env:STM32F103RC_btt.lib_deps}
   USBComposite for STM32F1@0.91
 
 [env:STM32F103RC_btt_512K]
 platform          = ${common_stm32f1.platform}
 extends           = env:STM32F103RC_btt
+board_build.ldscript = STM32F103RC_SKR_MINI_512K.ld
 board_upload.maximum_size=524288
 build_flags       = ${env:STM32F103RC_btt.build_flags} -DSTM32_FLASH_SIZE=512
 
 [env:STM32F103RC_btt_512K_USB]
 platform          = ${common_stm32f1.platform}
 extends           = env:STM32F103RC_btt_512K
 build_flags       = ${env:STM32F103RC_btt_512K.build_flags} -DUSE_USB_COMPOSITE
 lib_deps          = ${env:STM32F103RC_btt_512K.lib_deps}
   USBComposite for STM32F1@0.91
 
@@ -149,22 +152,24 @@ extends           = common_stm32f1
 board             = genericSTM32F103RE
 monitor_speed     = 115200
 
 #
 #   STM32F103RE_btt ............. RET6
 #   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
 #
 [env:STM32F103RE_btt]
 platform          = ${common_stm32f1.platform}
 extends           = env:STM32F103RE
+board_build.address  = 0x08007000
+board_build.ldscript = STM32F103RE_SKR_E3_DIP.ld
 extra_scripts     = ${common_stm32f1.extra_scripts}
-  buildroot/share/PlatformIO/scripts/STM32F103RE_SKR_E3_DIP.py
+  buildroot/share/PlatformIO/scripts/custom_board.py
 build_flags       = ${common_stm32f1.build_flags} -DDEBUG_LEVEL=0 -DSS_TIMER=4
 debug_tool        = stlink
 upload_protocol   = stlink
 
 [env:STM32F103RE_btt_USB]
 platform          = ${common_stm32f1.platform}
 extends           = env:STM32F103RE_btt
 build_flags       = ${env:STM32F103RE_btt.build_flags} -DUSE_USB_COMPOSITE
 lib_deps          = ${common_stm32f1.lib_deps}
   USBComposite for STM32F1@0.91
@@ -183,21 +188,24 @@ build_flags     = ${common_stm32f1.build_flags}
   -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
 upload_protocol = serial
 
 #
 # Longer 3D board in Alfawise U20 (STM32F103VET6)
 #
 [env:STM32F103VE_longer]
 platform      = ${common_stm32f1.platform}
 extends       = common_stm32f1
 board         = genericSTM32F103VE
+board_build.address  = 0x08010000
+board_build.ldscript = STM32F103VE_longer.ld
 extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/custom_board.py
   buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
 build_flags   = ${common_stm32f1.build_flags}
   -DMCU_STM32F103VE -DSTM32F1xx -USERIAL_USB -DU20 -DTS_V12
 build_unflags = ${common_stm32f1.build_unflags}
   -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
 
 #
 # MKS Robin Mini (STM32F103VET6)
 #
 [env:mks_robin_mini]
@@ -323,45 +331,48 @@ board         = genericSTM32F103RC
 extra_scripts = ${common_stm32f1.extra_scripts}
   buildroot/share/PlatformIO/scripts/mks_robin_lite3.py
 
 #
 # JGAurora A5S A1 (STM32F103ZET6)
 #
 [env:jgaurora_a5s_a1]
 platform      = ${common_stm32f1.platform}
 extends       = common_stm32f1
 board         = genericSTM32F103ZE
+board_build.address  = 0x0800A000
+board_build.ldscript = jgaurora_a5s_a1.ld
 extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/custom_board.py
   buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
 build_flags   = ${common_stm32f1.build_flags}
   -DSTM32F1xx -DSTM32_XL_DENSITY
 
 #
 # Malyan M200 (STM32F103CB)
 #
 [env:STM32F103CB_malyan]
 platform      = ${common_stm32f1.platform}
 extends       = common_stm32f1
-board         = malyanM200
+board         = marlin_malyanM200
 build_flags   = ${common_stm32f1.build_flags}
   -DMCU_STM32F103CB -D__STM32F1__=1 -std=c++1y -DSERIAL_USB -ffunction-sections -fdata-sections
   -Wl,--gc-sections -DDEBUG_LEVEL=0 -D__MARLIN_FIRMWARE__
 lib_ignore    = ${common_stm32f1.lib_ignore}
   SoftwareSerialM
 
 #
 # Chitu boards like Tronxy X5s (STM32F103ZET6)
 #
 [env:chitu_f103]
 platform      = ${common_stm32f1.platform}
 extends       = common_stm32f1
-board         = CHITU_F103
+board         = marlin_CHITU_F103
 extra_scripts = pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
   pre:buildroot/share/PlatformIO/scripts/STM32F1_create_variant.py
   buildroot/share/PlatformIO/scripts/chitu_crypt.py
 build_flags   = ${common_stm32f1.build_flags}
   -DSTM32F1xx -DSTM32_XL_DENSITY
 build_unflags = ${common_stm32f1.build_unflags}
   -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG= -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
 
 #
 # Some Chitu V5 boards have a problem with GPIO init.
@@ -372,23 +383,25 @@ platform      = ${common_stm32f1.platform}
 extends       = env:chitu_f103
 build_flags   = ${env:chitu_f103.build_flags} -DCHITU_V5_Z_MIN_BUGFIX
 
 #
 # Creality (STM32F103RET6)
 #
 [env:STM32F103RET6_creality]
 platform        = ${env:STM32F103RE.platform}
 extends         = env:STM32F103RE
 build_flags     = ${env:STM32F103RE.build_flags} -DTEMP_TIMER_CHAN=4
+board_build.address  = 0x08007000
+board_build.ldscript = creality.ld
 extra_scripts   = ${env:STM32F103RE.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/random-bin.py
-  buildroot/share/PlatformIO/scripts/STM32F103RET6_creality.py
+  buildroot/share/PlatformIO/scripts/custom_board.py
 debug_tool      = jlink
 upload_protocol = jlink
 
 #
 # FLSUN QQS Pro (STM32F103VET6) using hal STM32
 # board Hispeedv1
 #
 [env:flsun_hispeedv1]
 platform             = ${common_stm32.platform}
 extends              = common_stm32

commit 993f9f3efd4e4d4feeeb676f110de2ca72a20622
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 24 02:29:20 2021 -0500

    Remove extra platform_packages line

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 81e9f1dcb8..a2954e64cf 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -276,21 +276,20 @@ extends       = env:mks_robin
 extra_scripts = ${common_stm32f1.extra_scripts}
 
 #
 # MKS Robin E3D (STM32F103RCT6) and
 # MKS Robin E3 with TMC2209
 #
 [env:mks_robin_e3]
 platform      = ${common_stm32f1.platform}
 extends       = common_stm32f1
 board         = genericSTM32F103RC
-platform_packages = tool-stm32duino
 extra_scripts = ${common_stm32f1.extra_scripts}
   buildroot/share/PlatformIO/scripts/mks_robin_e3.py
 build_flags   = ${common_stm32f1.build_flags}
   -DDEBUG_LEVEL=0 -DSS_TIMER=4
 
 #
 # MKS Robin E3p (STM32F103VET6)
 #  - LVGL UI
 #
 [env:mks_robin_e3p]

commit c508c2213ee5b0ed130238c058b7cc91beaea654
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 18 14:07:30 2021 -0500

    Misc. pio cleanup

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
index 2ba3d84862..81e9f1dcb8 100644
--- a/ini/stm32f1.ini
+++ b/ini/stm32f1.ini
@@ -1,19 +1,29 @@
 #
 # Marlin Firmware
 # PlatformIO Configuration File
 #
 
 #################################
-#                               #
-#     STM32F1 Architecture      #
-#                               #
+#
+# STM32F1 Architecture
+#
+# Naming Example: STM32F103RCT6
+#
+#   F : Foundation (sometimes High Performance F2/F4)
+#   1 : Cortex M1 core
+#  03 : Line/Features
+#   R : 64 or 66 pins  (V:100, Z:144, I:176)
+#   C : 256KB Flash-memory  (D:384KB, E:512KB, G:1024KB)
+#   T : LQFP package
+#   6 : -40...85¬∞C   (7: ...105¬∞C)
+#
 #################################
 
 #
 # HAL/STM32 Base Environment values
 #
 [common_stm32]
 platform      = ststm32@~12.0
 build_flags   = ${common.build_flags}
   -std=gnu++14
   -DUSBCON -DUSBD_USE_CDC

commit 3229100025dc428d5038eca753c70f3c831d6336
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Apr 1 21:53:19 2021 -0500

    Split up platformio.ini (#21507)

diff --git a/ini/stm32f1.ini b/ini/stm32f1.ini
new file mode 100644
index 0000000000..2ba3d84862
--- /dev/null
+++ b/ini/stm32f1.ini
@@ -0,0 +1,439 @@
+#
+# Marlin Firmware
+# PlatformIO Configuration File
+#
+
+#################################
+#                               #
+#     STM32F1 Architecture      #
+#                               #
+#################################
+
+#
+# HAL/STM32 Base Environment values
+#
+[common_stm32]
+platform      = ststm32@~12.0
+build_flags   = ${common.build_flags}
+  -std=gnu++14
+  -DUSBCON -DUSBD_USE_CDC
+  -DTIM_IRQ_PRIO=13
+  -DADC_RESOLUTION=12
+build_unflags = -std=gnu++11
+src_filter    = ${common.default_src_filter} +<src/HAL/STM32> +<src/HAL/shared/backtrace>
+
+#
+# HAL/STM32F1 Common Environment values
+#
+[common_stm32f1]
+platform          = ststm32@~12.0
+board_build.core  = maple
+build_flags       = !python Marlin/src/HAL/STM32F1/build_flags.py
+  ${common.build_flags}
+  -DARDUINO_ARCH_STM32
+build_unflags     = -std=gnu11 -std=gnu++11
+src_filter        = ${common.default_src_filter} +<src/HAL/STM32F1>
+lib_ignore        = SPI, FreeRTOS701, FreeRTOS821
+lib_deps          = ${common.lib_deps}
+  SoftwareSerialM
+platform_packages = tool-stm32duino
+extra_scripts     = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/fix_framework_weakness.py
+
+#
+# STM32F103RC
+#
+[env:STM32F103RC]
+platform          = ${common_stm32f1.platform}
+extends           = common_stm32f1
+board             = genericSTM32F103RC
+monitor_speed     = 115200
+
+#
+# MEEB_3DP (STM32F103RCT6 with 512K)
+#
+[env:STM32F103RC_meeb]
+platform          = ${common_stm32f1.platform}
+extends           = common_stm32f1
+board             = MEEB_3DP
+build_flags       = ${common_stm32f1.build_flags}
+                    -DDEBUG_LEVEL=0
+                    -DSS_TIMER=4
+                    -DSTM32_FLASH_SIZE=512
+                    -DHSE_VALUE=12000000U
+                    -DUSE_USB_COMPOSITE
+                    -DVECT_TAB_OFFSET=0x2000
+                    -DGENERIC_BOOTLOADER
+extra_scripts     = ${common_stm32f1.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/STM32F1_create_variant.py
+  buildroot/share/PlatformIO/scripts/STM32F103RC_MEEB_3DP.py
+lib_deps          = ${common.lib_deps}
+  SoftwareSerialM
+  USBComposite for STM32F1@0.91
+custom_marlin.NEOPIXEL_LED = Adafruit NeoPixel=https://github.com/ccccmagicboy/Adafruit_NeoPixel#meeb_3dp_use
+debug_tool        = stlink
+upload_protocol   = dfu
+
+#
+# STM32F103RC_fysetc
+#
+[env:STM32F103RC_fysetc]
+platform          = ${common_stm32f1.platform}
+extends           = env:STM32F103RC
+extra_scripts     = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
+build_flags       = ${common_stm32f1.build_flags} -DDEBUG_LEVEL=0
+lib_ldf_mode      = chain
+debug_tool        = stlink
+upload_protocol   = serial
+
+#
+# BigTree SKR Mini V1.1 / SKR mini E3 / SKR E3 DIP (STM32F103RCT6 ARM Cortex-M3)
+#
+#   STM32F103RC_btt ............. RCT6 with 256K
+#   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
+#   STM32F103RC_btt_512K ........ RCT6 with 512K
+#   STM32F103RC_btt_512K_USB .... RCT6 with 512K (USB mass storage)
+#
+# WARNING! If you have an SKR Mini v1.1 or an SKR Mini E3 1.0 / 1.2 / 2.0 / DIP
+# and experience a printer freeze, re-flash Marlin using the regular (non-512K)
+# build option. 256K chips may be re-branded 512K chips, but this means the
+# upper 256K is sketchy, and failure is very likely.
+#
+
+[env:STM32F103RC_btt]
+platform          = ${common_stm32f1.platform}
+extends           = env:STM32F103RC
+extra_scripts     = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/STM32F103RC_SKR_MINI.py
+build_flags       = ${common_stm32f1.build_flags}
+  -DDEBUG_LEVEL=0 -DSS_TIMER=4
+monitor_speed     = 115200
+
+[env:STM32F103RC_btt_USB]
+platform          = ${common_stm32f1.platform}
+extends           = env:STM32F103RC_btt
+build_flags       = ${env:STM32F103RC_btt.build_flags} -DUSE_USB_COMPOSITE
+lib_deps          = ${env:STM32F103RC_btt.lib_deps}
+  USBComposite for STM32F1@0.91
+
+[env:STM32F103RC_btt_512K]
+platform          = ${common_stm32f1.platform}
+extends           = env:STM32F103RC_btt
+board_upload.maximum_size=524288
+build_flags       = ${env:STM32F103RC_btt.build_flags} -DSTM32_FLASH_SIZE=512
+
+[env:STM32F103RC_btt_512K_USB]
+platform          = ${common_stm32f1.platform}
+extends           = env:STM32F103RC_btt_512K
+build_flags       = ${env:STM32F103RC_btt_512K.build_flags} -DUSE_USB_COMPOSITE
+lib_deps          = ${env:STM32F103RC_btt_512K.lib_deps}
+  USBComposite for STM32F1@0.91
+
+#
+# STM32F103RE
+#
+[env:STM32F103RE]
+platform          = ${common_stm32f1.platform}
+extends           = common_stm32f1
+board             = genericSTM32F103RE
+monitor_speed     = 115200
+
+#
+#   STM32F103RE_btt ............. RET6
+#   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
+#
+[env:STM32F103RE_btt]
+platform          = ${common_stm32f1.platform}
+extends           = env:STM32F103RE
+extra_scripts     = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/STM32F103RE_SKR_E3_DIP.py
+build_flags       = ${common_stm32f1.build_flags} -DDEBUG_LEVEL=0 -DSS_TIMER=4
+debug_tool        = stlink
+upload_protocol   = stlink
+
+[env:STM32F103RE_btt_USB]
+platform          = ${common_stm32f1.platform}
+extends           = env:STM32F103RE_btt
+build_flags       = ${env:STM32F103RE_btt.build_flags} -DUSE_USB_COMPOSITE
+lib_deps          = ${common_stm32f1.lib_deps}
+  USBComposite for STM32F1@0.91
+
+#
+# Geeetech GTM32 (STM32F103VET6)
+#
+[env:STM32F103VE_GTM32]
+platform        = ${common_stm32f1.platform}
+extends         = common_stm32f1
+board           = genericSTM32F103VE
+build_flags     = ${common_stm32f1.build_flags}
+  -ffunction-sections -fdata-sections -nostdlib -MMD
+  -DMCU_STM32F103VE -DARDUINO_GENERIC_STM32F103V -DARDUINO_ARCH_STM32F1 -DBOARD_generic_stm32f103v
+  -DDEBUG_LEVEL=DEBUG_NONE -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DVECT_TAB_ADDR=0x8000000
+  -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
+upload_protocol = serial
+
+#
+# Longer 3D board in Alfawise U20 (STM32F103VET6)
+#
+[env:STM32F103VE_longer]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = genericSTM32F103VE
+extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
+build_flags   = ${common_stm32f1.build_flags}
+  -DMCU_STM32F103VE -DSTM32F1xx -USERIAL_USB -DU20 -DTS_V12
+build_unflags = ${common_stm32f1.build_unflags}
+  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
+
+#
+# MKS Robin Mini (STM32F103VET6)
+#
+[env:mks_robin_mini]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = genericSTM32F103VE
+extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_robin_mini.py
+build_flags   = ${common_stm32f1.build_flags}
+  -DMCU_STM32F103VE
+
+#
+# MKS Robin Nano (STM32F103VET6)
+#
+[env:mks_robin_nano35]
+platform        = ${common_stm32f1.platform}
+extends         = common_stm32f1
+board           = genericSTM32F103VE
+extra_scripts   = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_robin_nano35.py
+build_flags     = ${common_stm32f1.build_flags}
+  -DMCU_STM32F103VE -DSS_TIMER=4
+debug_tool      = jlink
+upload_protocol = jlink
+
+#
+# MKS Robin (STM32F103ZET6)
+#
+[env:mks_robin]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = genericSTM32F103ZE
+extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_robin.py
+build_flags   = ${common_stm32f1.build_flags}
+  -DSS_TIMER=4 -DSTM32_XL_DENSITY
+
+# MKS Robin (STM32F103ZET6)
+# Uses HAL STM32 to support Marlin UI for TFT screen with optional touch panel
+#
+[env:mks_robin_stm32]
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+board                = genericSTM32F103ZE
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Zx
+board_build.ldscript = ldscript.ld
+board_build.offset   = 0x7000
+board_build.encrypt  = Yes
+board_build.firmware = Robin.bin
+build_flags          = ${common_stm32.build_flags}
+  -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
+build_unflags        = ${common_stm32.build_unflags}
+ -DUSBCON -DUSBD_USE_CDC
+extra_scripts        = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+  buildroot/share/PlatformIO/scripts/mks_encrypt.py
+lib_deps             =
+
+#
+# MKS Robin Pro (STM32F103ZET6)
+#
+[env:mks_robin_pro]
+platform      = ${common_stm32f1.platform}
+extends       = env:mks_robin
+extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_robin_pro.py
+
+#
+# TRIGORILLA PRO (STM32F103ZET6)
+#
+[env:trigorilla_pro]
+platform      = ${common_stm32f1.platform}
+extends       = env:mks_robin
+extra_scripts = ${common_stm32f1.extra_scripts}
+
+#
+# MKS Robin E3D (STM32F103RCT6) and
+# MKS Robin E3 with TMC2209
+#
+[env:mks_robin_e3]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = genericSTM32F103RC
+platform_packages = tool-stm32duino
+extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_robin_e3.py
+build_flags   = ${common_stm32f1.build_flags}
+  -DDEBUG_LEVEL=0 -DSS_TIMER=4
+
+#
+# MKS Robin E3p (STM32F103VET6)
+#  - LVGL UI
+#
+[env:mks_robin_e3p]
+platform        = ${common_stm32f1.platform}
+extends         = common_stm32f1
+board           = genericSTM32F103VE
+extra_scripts   = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_robin_e3p.py
+build_flags     = ${common_stm32f1.build_flags}
+  -DMCU_STM32F103VE -DSS_TIMER=4
+debug_tool      = jlink
+upload_protocol = jlink
+
+#
+# MKS Robin Lite/Lite2 (STM32F103RCT6)
+#
+[env:mks_robin_lite]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = genericSTM32F103RC
+extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_robin_lite.py
+
+#
+# MKS ROBIN LITE3 (STM32F103RCT6)
+#
+[env:mks_robin_lite3]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = genericSTM32F103RC
+extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/mks_robin_lite3.py
+
+#
+# JGAurora A5S A1 (STM32F103ZET6)
+#
+[env:jgaurora_a5s_a1]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = genericSTM32F103ZE
+extra_scripts = ${common_stm32f1.extra_scripts}
+  buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
+build_flags   = ${common_stm32f1.build_flags}
+  -DSTM32F1xx -DSTM32_XL_DENSITY
+
+#
+# Malyan M200 (STM32F103CB)
+#
+[env:STM32F103CB_malyan]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = malyanM200
+build_flags   = ${common_stm32f1.build_flags}
+  -DMCU_STM32F103CB -D__STM32F1__=1 -std=c++1y -DSERIAL_USB -ffunction-sections -fdata-sections
+  -Wl,--gc-sections -DDEBUG_LEVEL=0 -D__MARLIN_FIRMWARE__
+lib_ignore    = ${common_stm32f1.lib_ignore}
+  SoftwareSerialM
+
+#
+# Chitu boards like Tronxy X5s (STM32F103ZET6)
+#
+[env:chitu_f103]
+platform      = ${common_stm32f1.platform}
+extends       = common_stm32f1
+board         = CHITU_F103
+extra_scripts = pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
+  pre:buildroot/share/PlatformIO/scripts/STM32F1_create_variant.py
+  buildroot/share/PlatformIO/scripts/chitu_crypt.py
+build_flags   = ${common_stm32f1.build_flags}
+  -DSTM32F1xx -DSTM32_XL_DENSITY
+build_unflags = ${common_stm32f1.build_unflags}
+  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG= -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
+
+#
+# Some Chitu V5 boards have a problem with GPIO init.
+# Use this target if G28 or G29 are always failing.
+#
+[env:chitu_v5_gpio_init]
+platform      = ${common_stm32f1.platform}
+extends       = env:chitu_f103
+build_flags   = ${env:chitu_f103.build_flags} -DCHITU_V5_Z_MIN_BUGFIX
+
+#
+# Creality (STM32F103RET6)
+#
+[env:STM32F103RET6_creality]
+platform        = ${env:STM32F103RE.platform}
+extends         = env:STM32F103RE
+build_flags     = ${env:STM32F103RE.build_flags} -DTEMP_TIMER_CHAN=4
+extra_scripts   = ${env:STM32F103RE.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/random-bin.py
+  buildroot/share/PlatformIO/scripts/STM32F103RET6_creality.py
+debug_tool      = jlink
+upload_protocol = jlink
+
+#
+# FLSUN QQS Pro (STM32F103VET6) using hal STM32
+# board Hispeedv1
+#
+[env:flsun_hispeedv1]
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
+board                = genericSTM32F103VE
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Vx
+board_build.ldscript = ldscript.ld
+board_build.offset   = 0x7000
+board_build.firmware = Robin_mini.bin
+board_build.encrypt  = Yes
+board_upload.offset_address = 0x08007000
+build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
+extra_scripts        = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+  buildroot/share/PlatformIO/scripts/mks_encrypt.py
+
+#
+# MKS Robin Nano V1.2 and V2 using hal STM32
+#
+[env:mks_robin_nano35_stm32]
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+build_flags          = ${common_stm32.build_flags} -DMCU_STM32F103VE -DSS_TIMER=4 -DENABLE_HWSERIAL3
+board                = genericSTM32F103VE
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Vx
+board_build.ldscript = ldscript.ld
+board_build.offset   = 0x7000
+board_build.encrypt  = Yes
+board_build.firmware = Robin_nano35.bin
+board_upload.offset_address = 0x08007000
+build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
+debug_tool           = jlink
+upload_protocol      = jlink
+extra_scripts        = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
+  buildroot/share/PlatformIO/scripts/mks_encrypt.py
+
+#
+# Mingda MPX_ARM_MINI
+#
+[env:mingda_mpx_arm_mini]
+platform             = ${common_stm32.platform}
+extends              = common_stm32
+board                = genericSTM32F103ZE
+board_build.core     = stm32
+board_build.variant  = MARLIN_F103Zx
+board_build.ldscript = ldscript.ld
+board_build.offset   = 0x10000
+build_flags          = ${common_stm32.build_flags} -DENABLE_HWSERIAL3 -DTIMER_SERIAL=TIM5
+build_unflags        = ${common_stm32.build_unflags} -DUSBCON -DUSBD_USE_CDC
+extra_scripts        = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
+  buildroot/share/PlatformIO/scripts/stm32_bootloader.py
