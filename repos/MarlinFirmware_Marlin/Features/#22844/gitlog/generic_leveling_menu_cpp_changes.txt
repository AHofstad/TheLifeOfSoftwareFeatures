commit f2665e597f944d7a054a72302349a6edf9c4c082
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jul 25 18:36:50 2023 -0500

    üé® FTDI cleanup

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 47540b0f55..ee9eecf742 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -74,21 +74,21 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
   if (what & FOREGROUND) {
     CommandProcessor cmd;
     cmd.font(font_large)
        .cmd(COLOR_RGB(bg_text_enabled))
        .text(LEVELING_TITLE_POS, GET_TEXT_F(MSG_AXIS_LEVELING))
        .text(BED_MESH_TITLE_POS, GET_TEXT_F(MSG_BED_LEVELING))
     #if ENABLED(BLTOUCH)
        .text(BLTOUCH_TITLE_POS, GET_TEXT_F(MSG_BLTOUCH))
     #endif
        .font(font_medium).colors(normal_btn)
-       .enabled(ANY(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION))
+       .enabled(ANY(Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION))
        .tag(2).button(LEVEL_AXIS_POS, GET_TEXT_F(MSG_LEVEL_X_AXIS))
        .enabled(ENABLED(HAS_BED_PROBE))
        .tag(3).button(PROBE_BED_POS, GET_TEXT_F(MSG_PROBE_BED))
        .enabled(ENABLED(HAS_MESH))
        .tag(4).button(SHOW_MESH_POS, GET_TEXT_F(MSG_MESH_VIEW))
        .enabled(ENABLED(HAS_MESH))
        .tag(5).button(EDIT_MESH_POS, GET_TEXT_F(MSG_EDIT_MESH))
        .enabled(ENABLED(G26_MESH_VALIDATION))
        .tag(6).button(TEST_MESH_POS, GET_TEXT_F(MSG_PRINT_TEST))
     #if ENABLED(BLTOUCH)
@@ -96,21 +96,21 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
        .tag(8).button(BLTOUCH_TEST_POS,  GET_TEXT_F(MSG_BLTOUCH_SELFTEST))
     #endif
        .colors(action_btn)
        .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BUTTON_DONE));
   }
 }
 
 bool LevelingMenu::onTouchEnd(uint8_t tag) {
   switch (tag) {
     case 1: GOTO_PREVIOUS(); break;
-    #if ANY(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
+    #if ANY(Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
       case 2: SpinnerDialogBox::enqueueAndWait(F("G34")); break;
     #endif
     #if HAS_BED_PROBE
       case 3:
         #ifndef BED_LEVELING_COMMANDS
           #define BED_LEVELING_COMMANDS "G29"
         #endif
         #if ENABLED(AUTO_BED_LEVELING_UBL)
           BedMeshViewScreen::doProbe();
         #else

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 2fb9d18498..47540b0f55 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -18,21 +18,21 @@
  *                                                                          *
  *   To view a copy of the GNU General Public License, go to the following  *
  *   location: <https://www.gnu.org/licenses/>.                             *
  ****************************************************************************/
 
 #include "../config.h"
 #include "../screens.h"
 
 #ifdef FTDI_LEVELING_MENU
 
-#if BOTH(HAS_BED_PROBE,BLTOUCH)
+#if ALL(HAS_BED_PROBE,BLTOUCH)
   #include "../../../../feature/bltouch.h"
 #endif
 
 using namespace FTDI;
 using namespace ExtUI;
 using namespace Theme;
 
 #if ENABLED(TOUCH_UI_PORTRAIT)
   #define GRID_COLS 2
   #define GRID_ROWS 8
@@ -74,21 +74,21 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
   if (what & FOREGROUND) {
     CommandProcessor cmd;
     cmd.font(font_large)
        .cmd(COLOR_RGB(bg_text_enabled))
        .text(LEVELING_TITLE_POS, GET_TEXT_F(MSG_AXIS_LEVELING))
        .text(BED_MESH_TITLE_POS, GET_TEXT_F(MSG_BED_LEVELING))
     #if ENABLED(BLTOUCH)
        .text(BLTOUCH_TITLE_POS, GET_TEXT_F(MSG_BLTOUCH))
     #endif
        .font(font_medium).colors(normal_btn)
-       .enabled(EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION))
+       .enabled(ANY(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION))
        .tag(2).button(LEVEL_AXIS_POS, GET_TEXT_F(MSG_LEVEL_X_AXIS))
        .enabled(ENABLED(HAS_BED_PROBE))
        .tag(3).button(PROBE_BED_POS, GET_TEXT_F(MSG_PROBE_BED))
        .enabled(ENABLED(HAS_MESH))
        .tag(4).button(SHOW_MESH_POS, GET_TEXT_F(MSG_MESH_VIEW))
        .enabled(ENABLED(HAS_MESH))
        .tag(5).button(EDIT_MESH_POS, GET_TEXT_F(MSG_EDIT_MESH))
        .enabled(ENABLED(G26_MESH_VALIDATION))
        .tag(6).button(TEST_MESH_POS, GET_TEXT_F(MSG_PRINT_TEST))
     #if ENABLED(BLTOUCH)
@@ -96,21 +96,21 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
        .tag(8).button(BLTOUCH_TEST_POS,  GET_TEXT_F(MSG_BLTOUCH_SELFTEST))
     #endif
        .colors(action_btn)
        .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BUTTON_DONE));
   }
 }
 
 bool LevelingMenu::onTouchEnd(uint8_t tag) {
   switch (tag) {
     case 1: GOTO_PREVIOUS(); break;
-    #if EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
+    #if ANY(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
       case 2: SpinnerDialogBox::enqueueAndWait(F("G34")); break;
     #endif
     #if HAS_BED_PROBE
       case 3:
         #ifndef BED_LEVELING_COMMANDS
           #define BED_LEVELING_COMMANDS "G29"
         #endif
         #if ENABLED(AUTO_BED_LEVELING_UBL)
           BedMeshViewScreen::doProbe();
         #else

commit 3d3898145ab501792a731cfeec7b859aa7a2dda7
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Mon Apr 18 11:43:34 2022 +0200

    üåê Update German language, FTDI cleanup (#24047)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 11db21aca9..2fb9d18498 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -27,36 +27,36 @@
 
 #if BOTH(HAS_BED_PROBE,BLTOUCH)
   #include "../../../../feature/bltouch.h"
 #endif
 
 using namespace FTDI;
 using namespace ExtUI;
 using namespace Theme;
 
 #if ENABLED(TOUCH_UI_PORTRAIT)
-  #define GRID_ROWS 8
   #define GRID_COLS 2
+  #define GRID_ROWS 8
   #define LEVELING_TITLE_POS BTN_POS(1,1), BTN_SIZE(2,1)
   #define LEVEL_AXIS_POS     BTN_POS(1,2), BTN_SIZE(2,1)
   #define BED_MESH_TITLE_POS BTN_POS(1,3), BTN_SIZE(2,1)
   #define PROBE_BED_POS      BTN_POS(1,4), BTN_SIZE(1,1)
   #define TEST_MESH_POS      BTN_POS(2,4), BTN_SIZE(1,1)
   #define SHOW_MESH_POS      BTN_POS(1,5), BTN_SIZE(1,1)
   #define EDIT_MESH_POS      BTN_POS(2,5), BTN_SIZE(1,1)
   #define BLTOUCH_TITLE_POS  BTN_POS(1,6), BTN_SIZE(2,1)
   #define BLTOUCH_RESET_POS  BTN_POS(1,7), BTN_SIZE(1,1)
   #define BLTOUCH_TEST_POS   BTN_POS(2,7), BTN_SIZE(1,1)
   #define BACK_POS           BTN_POS(1,8), BTN_SIZE(2,1)
 #else
-  #define GRID_ROWS 6
   #define GRID_COLS 3
+  #define GRID_ROWS 6
   #define LEVELING_TITLE_POS BTN_POS(1,1), BTN_SIZE(3,1)
   #define LEVEL_AXIS_POS     BTN_POS(1,2), BTN_SIZE(3,1)
   #define BED_MESH_TITLE_POS BTN_POS(1,3), BTN_SIZE(2,1)
   #define PROBE_BED_POS      BTN_POS(1,4), BTN_SIZE(1,1)
   #define TEST_MESH_POS      BTN_POS(2,4), BTN_SIZE(1,1)
   #define SHOW_MESH_POS      BTN_POS(1,5), BTN_SIZE(1,1)
   #define EDIT_MESH_POS      BTN_POS(2,5), BTN_SIZE(1,1)
   #define BLTOUCH_TITLE_POS  BTN_POS(3,3), BTN_SIZE(1,1)
   #define BLTOUCH_RESET_POS  BTN_POS(3,4), BTN_SIZE(1,1)
   #define BLTOUCH_TEST_POS   BTN_POS(3,5), BTN_SIZE(1,1)

commit 12b5d997a2cee538e5026a68f8e0cfdd53248986
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Sep 25 22:11:48 2021 -0500

    üé® Apply F() to some ExtUI functions

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 05845a9755..11db21aca9 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -118,23 +118,23 @@ bool LevelingMenu::onTouchEnd(uint8_t tag) {
         #endif
         break;
     #endif
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       case 4: BedMeshViewScreen::show(); break;
       case 5: BedMeshEditScreen::show(); break;
     #endif
     #if ENABLED(G26_MESH_VALIDATION)
       case 6:
         GOTO_SCREEN(StatusScreen);
-        injectCommands_P(PSTR("G28\nM117 Heating...\nG26 R X0 Y0\nG27"));
+        injectCommands(F("G28\nM117 Heating...\nG26 R X0 Y0\nG27"));
         break;
     #endif
     #if ENABLED(BLTOUCH)
-      case 7: injectCommands_P(PSTR("M280 P0 S60")); break;
+      case 7: injectCommands(F("M280 P0 S60")); break;
       case 8: SpinnerDialogBox::enqueueAndWait(F("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
     #endif
     default: return false;
   }
   return true;
 }
 
 #endif // FTDI_LEVELING_MENU

commit 8ab02df63a2360b2dac86048b38311bbdfa42b3c
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Mon Sep 27 14:47:47 2021 -0500

    ‚ú® E3V2 (Enhanced) Mesh Viewer (#22844)

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 9bc2f56ab9..05845a9755 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -79,21 +79,21 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
        .text(BED_MESH_TITLE_POS, GET_TEXT_F(MSG_BED_LEVELING))
     #if ENABLED(BLTOUCH)
        .text(BLTOUCH_TITLE_POS, GET_TEXT_F(MSG_BLTOUCH))
     #endif
        .font(font_medium).colors(normal_btn)
        .enabled(EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION))
        .tag(2).button(LEVEL_AXIS_POS, GET_TEXT_F(MSG_LEVEL_X_AXIS))
        .enabled(ENABLED(HAS_BED_PROBE))
        .tag(3).button(PROBE_BED_POS, GET_TEXT_F(MSG_PROBE_BED))
        .enabled(ENABLED(HAS_MESH))
-       .tag(4).button(SHOW_MESH_POS, GET_TEXT_F(MSG_SHOW_MESH))
+       .tag(4).button(SHOW_MESH_POS, GET_TEXT_F(MSG_MESH_VIEW))
        .enabled(ENABLED(HAS_MESH))
        .tag(5).button(EDIT_MESH_POS, GET_TEXT_F(MSG_EDIT_MESH))
        .enabled(ENABLED(G26_MESH_VALIDATION))
        .tag(6).button(TEST_MESH_POS, GET_TEXT_F(MSG_PRINT_TEST))
     #if ENABLED(BLTOUCH)
        .tag(7).button(BLTOUCH_RESET_POS, GET_TEXT_F(MSG_BLTOUCH_RESET))
        .tag(8).button(BLTOUCH_TEST_POS,  GET_TEXT_F(MSG_BLTOUCH_SELFTEST))
     #endif
        .colors(action_btn)
        .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BUTTON_DONE));

commit ab03c9a56063c4ae0e27f46a5622ffe1564b0c1b
Author: Marcio T <mlt4356-github@yahoo.com>
Date:   Sun Aug 29 16:03:10 2021 -0600

    ‚ö°Ô∏è Enhance and fix FTDI Eve Touch UI file select (#22651)

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index fe5324ae62..9bc2f56ab9 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -116,21 +116,24 @@ bool LevelingMenu::onTouchEnd(uint8_t tag) {
         #else
           SpinnerDialogBox::enqueueAndWait(F(BED_LEVELING_COMMANDS));
         #endif
         break;
     #endif
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       case 4: BedMeshViewScreen::show(); break;
       case 5: BedMeshEditScreen::show(); break;
     #endif
     #if ENABLED(G26_MESH_VALIDATION)
-      case 6: BedMeshViewScreen::doMeshValidation(); break;
+      case 6:
+        GOTO_SCREEN(StatusScreen);
+        injectCommands_P(PSTR("G28\nM117 Heating...\nG26 R X0 Y0\nG27"));
+        break;
     #endif
     #if ENABLED(BLTOUCH)
       case 7: injectCommands_P(PSTR("M280 P0 S60")); break;
       case 8: SpinnerDialogBox::enqueueAndWait(F("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
     #endif
     default: return false;
   }
   return true;
 }
 

commit 4111d1d5add6290ff02da668b0a024b06f189694
Author: Marcio T <mlt4356-github@yahoo.com>
Date:   Wed Jul 28 17:15:01 2021 -0600

    üêõ Fix FTDI Eve Touch UI progmem strings (#22439)

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 29b9f47ddd..fe5324ae62 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -97,41 +97,41 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
     #endif
        .colors(action_btn)
        .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BUTTON_DONE));
   }
 }
 
 bool LevelingMenu::onTouchEnd(uint8_t tag) {
   switch (tag) {
     case 1: GOTO_PREVIOUS(); break;
     #if EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
-      case 2: SpinnerDialogBox::enqueueAndWait_P(PSTR("G34")); break;
+      case 2: SpinnerDialogBox::enqueueAndWait(F("G34")); break;
     #endif
     #if HAS_BED_PROBE
       case 3:
         #ifndef BED_LEVELING_COMMANDS
           #define BED_LEVELING_COMMANDS "G29"
         #endif
         #if ENABLED(AUTO_BED_LEVELING_UBL)
           BedMeshViewScreen::doProbe();
         #else
-          SpinnerDialogBox::enqueueAndWait_P(PSTR(BED_LEVELING_COMMANDS));
+          SpinnerDialogBox::enqueueAndWait(F(BED_LEVELING_COMMANDS));
         #endif
         break;
     #endif
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       case 4: BedMeshViewScreen::show(); break;
       case 5: BedMeshEditScreen::show(); break;
     #endif
     #if ENABLED(G26_MESH_VALIDATION)
       case 6: BedMeshViewScreen::doMeshValidation(); break;
     #endif
     #if ENABLED(BLTOUCH)
       case 7: injectCommands_P(PSTR("M280 P0 S60")); break;
-      case 8: SpinnerDialogBox::enqueueAndWait_P(PSTR("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
+      case 8: SpinnerDialogBox::enqueueAndWait(F("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
     #endif
     default: return false;
   }
   return true;
 }
 
 #endif // FTDI_LEVELING_MENU

commit e1907a99e2404ae9a0d1c1115978bc9640aa96f1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Jul 24 21:41:09 2021 -0500

    üé® Fix some formatting, F() versus PSTR()

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index e693bfb05c..29b9f47ddd 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -97,41 +97,41 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
     #endif
        .colors(action_btn)
        .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BUTTON_DONE));
   }
 }
 
 bool LevelingMenu::onTouchEnd(uint8_t tag) {
   switch (tag) {
     case 1: GOTO_PREVIOUS(); break;
     #if EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
-      case 2: SpinnerDialogBox::enqueueAndWait_P(F("G34")); break;
+      case 2: SpinnerDialogBox::enqueueAndWait_P(PSTR("G34")); break;
     #endif
     #if HAS_BED_PROBE
       case 3:
         #ifndef BED_LEVELING_COMMANDS
           #define BED_LEVELING_COMMANDS "G29"
         #endif
         #if ENABLED(AUTO_BED_LEVELING_UBL)
           BedMeshViewScreen::doProbe();
         #else
-          SpinnerDialogBox::enqueueAndWait_P(F(BED_LEVELING_COMMANDS));
+          SpinnerDialogBox::enqueueAndWait_P(PSTR(BED_LEVELING_COMMANDS));
         #endif
         break;
     #endif
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       case 4: BedMeshViewScreen::show(); break;
       case 5: BedMeshEditScreen::show(); break;
     #endif
     #if ENABLED(G26_MESH_VALIDATION)
       case 6: BedMeshViewScreen::doMeshValidation(); break;
     #endif
     #if ENABLED(BLTOUCH)
       case 7: injectCommands_P(PSTR("M280 P0 S60")); break;
-      case 8: SpinnerDialogBox::enqueueAndWait_P(F("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
+      case 8: SpinnerDialogBox::enqueueAndWait_P(PSTR("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
     #endif
     default: return false;
   }
   return true;
 }
 
 #endif // FTDI_LEVELING_MENU

commit 3be35a6bd6845a160c416629ea98392129cd6eb3
Author: Marcio T <mlt4356-github@yahoo.com>
Date:   Wed Jul 14 21:13:08 2021 -0600

    üì∫ Fix Makefile build, improve Touch UI button titles (#22361)

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index acbc179891..e693bfb05c 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -89,21 +89,21 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
        .tag(4).button(SHOW_MESH_POS, GET_TEXT_F(MSG_SHOW_MESH))
        .enabled(ENABLED(HAS_MESH))
        .tag(5).button(EDIT_MESH_POS, GET_TEXT_F(MSG_EDIT_MESH))
        .enabled(ENABLED(G26_MESH_VALIDATION))
        .tag(6).button(TEST_MESH_POS, GET_TEXT_F(MSG_PRINT_TEST))
     #if ENABLED(BLTOUCH)
        .tag(7).button(BLTOUCH_RESET_POS, GET_TEXT_F(MSG_BLTOUCH_RESET))
        .tag(8).button(BLTOUCH_TEST_POS,  GET_TEXT_F(MSG_BLTOUCH_SELFTEST))
     #endif
        .colors(action_btn)
-       .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BACK));
+       .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BUTTON_DONE));
   }
 }
 
 bool LevelingMenu::onTouchEnd(uint8_t tag) {
   switch (tag) {
     case 1: GOTO_PREVIOUS(); break;
     #if EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
       case 2: SpinnerDialogBox::enqueueAndWait_P(F("G34")); break;
     #endif
     #if HAS_BED_PROBE

commit 26bfc267977ddc444513c793c18f76847e23310e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 9 17:09:58 2021 -0500

    üé® Check flags without ENABLED

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 797bb37996..acbc179891 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -99,21 +99,21 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
        .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BACK));
   }
 }
 
 bool LevelingMenu::onTouchEnd(uint8_t tag) {
   switch (tag) {
     case 1: GOTO_PREVIOUS(); break;
     #if EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
       case 2: SpinnerDialogBox::enqueueAndWait_P(F("G34")); break;
     #endif
-    #if ENABLED(HAS_BED_PROBE)
+    #if HAS_BED_PROBE
       case 3:
         #ifndef BED_LEVELING_COMMANDS
           #define BED_LEVELING_COMMANDS "G29"
         #endif
         #if ENABLED(AUTO_BED_LEVELING_UBL)
           BedMeshViewScreen::doProbe();
         #else
           SpinnerDialogBox::enqueueAndWait_P(F(BED_LEVELING_COMMANDS));
         #endif
         break;

commit e5e939bb4c02212ac8a3a7006737b0b8895c7525
Author: Marcio T <mlt4356-github@yahoo.com>
Date:   Tue Jul 6 19:32:08 2021 -0600

    üì∫ Assorted small FTDI Eve Touch UI fixes (#22273)

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 826e01a9cf..797bb37996 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -76,59 +76,62 @@ void LevelingMenu::onRedraw(draw_mode_t what) {
     cmd.font(font_large)
        .cmd(COLOR_RGB(bg_text_enabled))
        .text(LEVELING_TITLE_POS, GET_TEXT_F(MSG_AXIS_LEVELING))
        .text(BED_MESH_TITLE_POS, GET_TEXT_F(MSG_BED_LEVELING))
     #if ENABLED(BLTOUCH)
        .text(BLTOUCH_TITLE_POS, GET_TEXT_F(MSG_BLTOUCH))
     #endif
        .font(font_medium).colors(normal_btn)
        .enabled(EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION))
        .tag(2).button(LEVEL_AXIS_POS, GET_TEXT_F(MSG_LEVEL_X_AXIS))
+       .enabled(ENABLED(HAS_BED_PROBE))
        .tag(3).button(PROBE_BED_POS, GET_TEXT_F(MSG_PROBE_BED))
        .enabled(ENABLED(HAS_MESH))
        .tag(4).button(SHOW_MESH_POS, GET_TEXT_F(MSG_SHOW_MESH))
        .enabled(ENABLED(HAS_MESH))
        .tag(5).button(EDIT_MESH_POS, GET_TEXT_F(MSG_EDIT_MESH))
        .enabled(ENABLED(G26_MESH_VALIDATION))
        .tag(6).button(TEST_MESH_POS, GET_TEXT_F(MSG_PRINT_TEST))
     #if ENABLED(BLTOUCH)
        .tag(7).button(BLTOUCH_RESET_POS, GET_TEXT_F(MSG_BLTOUCH_RESET))
        .tag(8).button(BLTOUCH_TEST_POS,  GET_TEXT_F(MSG_BLTOUCH_SELFTEST))
     #endif
        .colors(action_btn)
        .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BACK));
   }
 }
 
 bool LevelingMenu::onTouchEnd(uint8_t tag) {
   switch (tag) {
-    case 1: GOTO_PREVIOUS();                   break;
+    case 1: GOTO_PREVIOUS(); break;
     #if EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
-    case 2: SpinnerDialogBox::enqueueAndWait_P(F("G34")); break;
+      case 2: SpinnerDialogBox::enqueueAndWait_P(F("G34")); break;
     #endif
-    case 3:
-    #ifndef BED_LEVELING_COMMANDS
-      #define BED_LEVELING_COMMANDS "G29"
+    #if ENABLED(HAS_BED_PROBE)
+      case 3:
+        #ifndef BED_LEVELING_COMMANDS
+          #define BED_LEVELING_COMMANDS "G29"
+        #endif
+        #if ENABLED(AUTO_BED_LEVELING_UBL)
+          BedMeshViewScreen::doProbe();
+        #else
+          SpinnerDialogBox::enqueueAndWait_P(F(BED_LEVELING_COMMANDS));
+        #endif
+        break;
     #endif
     #if ENABLED(AUTO_BED_LEVELING_UBL)
-      BedMeshViewScreen::doProbe();
-    #else
-      SpinnerDialogBox::enqueueAndWait_P(F(BED_LEVELING_COMMANDS));
-    #endif
-    break;
-    #if ENABLED(AUTO_BED_LEVELING_UBL)
-    case 4: BedMeshViewScreen::show(); break;
-    case 5: BedMeshEditScreen::show(); break;
+      case 4: BedMeshViewScreen::show(); break;
+      case 5: BedMeshEditScreen::show(); break;
     #endif
     #if ENABLED(G26_MESH_VALIDATION)
-    case 6: BedMeshViewScreen::doMeshValidation(); break;
+      case 6: BedMeshViewScreen::doMeshValidation(); break;
     #endif
     #if ENABLED(BLTOUCH)
-    case 7: injectCommands_P(PSTR("M280 P0 S60")); break;
-    case 8: SpinnerDialogBox::enqueueAndWait_P(F("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
+      case 7: injectCommands_P(PSTR("M280 P0 S60")); break;
+      case 8: SpinnerDialogBox::enqueueAndWait_P(F("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
     #endif
     default: return false;
   }
   return true;
 }
 
 #endif // FTDI_LEVELING_MENU

commit 0f5126acb23a9a363c97a3c6a387c6842f2c55cd
Author: Marcio T <mlt4356-github@yahoo.com>
Date:   Mon Jun 21 15:38:28 2021 -0600

    üé® Fix and enhance FTDI Eve Touch UI (#22189)

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
index 93f9c4c228..826e01a9cf 100644
--- a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -125,11 +125,10 @@ bool LevelingMenu::onTouchEnd(uint8_t tag) {
     #if ENABLED(BLTOUCH)
     case 7: injectCommands_P(PSTR("M280 P0 S60")); break;
     case 8: SpinnerDialogBox::enqueueAndWait_P(F("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
     #endif
     default: return false;
   }
   return true;
 }
 
 #endif // FTDI_LEVELING_MENU
-

commit 209c44b8031c1d22bc4616b1ecd8243ddcc0a4ad
Author: Marcio T <mlt4356-github@yahoo.com>
Date:   Sun Jun 6 22:26:42 2021 -0600

    üé® Reorganize FTDI Touch UI variants (#22066)

diff --git a/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
new file mode 100644
index 0000000000..93f9c4c228
--- /dev/null
+++ b/Marlin/src/lcd/extui/ftdi_eve_touch_ui/generic/leveling_menu.cpp
@@ -0,0 +1,135 @@
+/*********************
+ * leveling_menu.cpp *
+ *********************/
+
+/****************************************************************************
+ *   Written By Mark Pelletier  2017 - Aleph Objects, Inc.                  *
+ *   Written By Marcio Teixeira 2018 - Aleph Objects, Inc.                  *
+ *                                                                          *
+ *   This program is free software: you can redistribute it and/or modify   *
+ *   it under the terms of the GNU General Public License as published by   *
+ *   the Free Software Foundation, either version 3 of the License, or      *
+ *   (at your option) any later version.                                    *
+ *                                                                          *
+ *   This program is distributed in the hope that it will be useful,        *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
+ *   GNU General Public License for more details.                           *
+ *                                                                          *
+ *   To view a copy of the GNU General Public License, go to the following  *
+ *   location: <https://www.gnu.org/licenses/>.                             *
+ ****************************************************************************/
+
+#include "../config.h"
+#include "../screens.h"
+
+#ifdef FTDI_LEVELING_MENU
+
+#if BOTH(HAS_BED_PROBE,BLTOUCH)
+  #include "../../../../feature/bltouch.h"
+#endif
+
+using namespace FTDI;
+using namespace ExtUI;
+using namespace Theme;
+
+#if ENABLED(TOUCH_UI_PORTRAIT)
+  #define GRID_ROWS 8
+  #define GRID_COLS 2
+  #define LEVELING_TITLE_POS BTN_POS(1,1), BTN_SIZE(2,1)
+  #define LEVEL_AXIS_POS     BTN_POS(1,2), BTN_SIZE(2,1)
+  #define BED_MESH_TITLE_POS BTN_POS(1,3), BTN_SIZE(2,1)
+  #define PROBE_BED_POS      BTN_POS(1,4), BTN_SIZE(1,1)
+  #define TEST_MESH_POS      BTN_POS(2,4), BTN_SIZE(1,1)
+  #define SHOW_MESH_POS      BTN_POS(1,5), BTN_SIZE(1,1)
+  #define EDIT_MESH_POS      BTN_POS(2,5), BTN_SIZE(1,1)
+  #define BLTOUCH_TITLE_POS  BTN_POS(1,6), BTN_SIZE(2,1)
+  #define BLTOUCH_RESET_POS  BTN_POS(1,7), BTN_SIZE(1,1)
+  #define BLTOUCH_TEST_POS   BTN_POS(2,7), BTN_SIZE(1,1)
+  #define BACK_POS           BTN_POS(1,8), BTN_SIZE(2,1)
+#else
+  #define GRID_ROWS 6
+  #define GRID_COLS 3
+  #define LEVELING_TITLE_POS BTN_POS(1,1), BTN_SIZE(3,1)
+  #define LEVEL_AXIS_POS     BTN_POS(1,2), BTN_SIZE(3,1)
+  #define BED_MESH_TITLE_POS BTN_POS(1,3), BTN_SIZE(2,1)
+  #define PROBE_BED_POS      BTN_POS(1,4), BTN_SIZE(1,1)
+  #define TEST_MESH_POS      BTN_POS(2,4), BTN_SIZE(1,1)
+  #define SHOW_MESH_POS      BTN_POS(1,5), BTN_SIZE(1,1)
+  #define EDIT_MESH_POS      BTN_POS(2,5), BTN_SIZE(1,1)
+  #define BLTOUCH_TITLE_POS  BTN_POS(3,3), BTN_SIZE(1,1)
+  #define BLTOUCH_RESET_POS  BTN_POS(3,4), BTN_SIZE(1,1)
+  #define BLTOUCH_TEST_POS   BTN_POS(3,5), BTN_SIZE(1,1)
+  #define BACK_POS           BTN_POS(1,6), BTN_SIZE(3,1)
+#endif
+
+void LevelingMenu::onRedraw(draw_mode_t what) {
+  if (what & BACKGROUND) {
+    CommandProcessor cmd;
+    cmd.cmd(CLEAR_COLOR_RGB(Theme::bg_color))
+       .cmd(CLEAR(true,true,true))
+       .tag(0);
+  }
+
+  if (what & FOREGROUND) {
+    CommandProcessor cmd;
+    cmd.font(font_large)
+       .cmd(COLOR_RGB(bg_text_enabled))
+       .text(LEVELING_TITLE_POS, GET_TEXT_F(MSG_AXIS_LEVELING))
+       .text(BED_MESH_TITLE_POS, GET_TEXT_F(MSG_BED_LEVELING))
+    #if ENABLED(BLTOUCH)
+       .text(BLTOUCH_TITLE_POS, GET_TEXT_F(MSG_BLTOUCH))
+    #endif
+       .font(font_medium).colors(normal_btn)
+       .enabled(EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION))
+       .tag(2).button(LEVEL_AXIS_POS, GET_TEXT_F(MSG_LEVEL_X_AXIS))
+       .tag(3).button(PROBE_BED_POS, GET_TEXT_F(MSG_PROBE_BED))
+       .enabled(ENABLED(HAS_MESH))
+       .tag(4).button(SHOW_MESH_POS, GET_TEXT_F(MSG_SHOW_MESH))
+       .enabled(ENABLED(HAS_MESH))
+       .tag(5).button(EDIT_MESH_POS, GET_TEXT_F(MSG_EDIT_MESH))
+       .enabled(ENABLED(G26_MESH_VALIDATION))
+       .tag(6).button(TEST_MESH_POS, GET_TEXT_F(MSG_PRINT_TEST))
+    #if ENABLED(BLTOUCH)
+       .tag(7).button(BLTOUCH_RESET_POS, GET_TEXT_F(MSG_BLTOUCH_RESET))
+       .tag(8).button(BLTOUCH_TEST_POS,  GET_TEXT_F(MSG_BLTOUCH_SELFTEST))
+    #endif
+       .colors(action_btn)
+       .tag(1).button(BACK_POS, GET_TEXT_F(MSG_BACK));
+  }
+}
+
+bool LevelingMenu::onTouchEnd(uint8_t tag) {
+  switch (tag) {
+    case 1: GOTO_PREVIOUS();                   break;
+    #if EITHER(Z_STEPPER_AUTO_ALIGN,MECHANICAL_GANTRY_CALIBRATION)
+    case 2: SpinnerDialogBox::enqueueAndWait_P(F("G34")); break;
+    #endif
+    case 3:
+    #ifndef BED_LEVELING_COMMANDS
+      #define BED_LEVELING_COMMANDS "G29"
+    #endif
+    #if ENABLED(AUTO_BED_LEVELING_UBL)
+      BedMeshViewScreen::doProbe();
+    #else
+      SpinnerDialogBox::enqueueAndWait_P(F(BED_LEVELING_COMMANDS));
+    #endif
+    break;
+    #if ENABLED(AUTO_BED_LEVELING_UBL)
+    case 4: BedMeshViewScreen::show(); break;
+    case 5: BedMeshEditScreen::show(); break;
+    #endif
+    #if ENABLED(G26_MESH_VALIDATION)
+    case 6: BedMeshViewScreen::doMeshValidation(); break;
+    #endif
+    #if ENABLED(BLTOUCH)
+    case 7: injectCommands_P(PSTR("M280 P0 S60")); break;
+    case 8: SpinnerDialogBox::enqueueAndWait_P(F("M280 P0 S90\nG4 P100\nM280 P0 S120")); break;
+    #endif
+    default: return false;
+  }
+  return true;
+}
+
+#endif // FTDI_LEVELING_MENU
+
