commit 24d1d3eb5cc4e7415e77393d35e40fb4124bc672
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jan 12 09:47:22 2022 -0600

    ðŸ’¡ Misc. cleanup, comments

diff --git a/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h b/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h
index cf32bad396..a7281fed4a 100644
--- a/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h
+++ b/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h
@@ -32,31 +32,31 @@ class WifiSerial {
     serial_t _serial;
   public:
     uint8_t wifiRxBuf[WIFI_RX_BUF_SIZE];
     uint8_t wifiTxBuf[WIFI_TX_BUF_SIZE];
     WifiSerial(void *peripheral);
 
     // Set up / tear down
     void begin(uint32_t baud);
     void begin(uint32_t baud, uint8_t config);
     void end();
-    int available(void);
-    int read(void);
+    int available();
+    int read();
     int write(uint8_t);
 
     // Interrupt handlers
     static int _tx_complete_irq(serial_t *obj);
     static void _rx_complete_irq(serial_t *obj);
 
-    void flush(void);
-    bool isHalfDuplex(void) const;
-    void enableHalfDuplexRx(void);
+    void flush();
+    bool isHalfDuplex() const;
+    void enableHalfDuplexRx();
 
   private:
     void setRx(uint32_t _rx);
     void setTx(uint32_t _tx);
     void setRx(PinName _rx);
     void setTx(PinName _tx);
     void init(PinName _rx, PinName _tx);
     bool _rx_enabled;
     uint8_t _config;
     unsigned long _baud;

commit 8df3e62c89f94f68465ac30e276333940e069ff7
Author: Sola <42537573+solawc@users.noreply.github.com>
Date:   Thu Sep 16 19:48:24 2021 +0800

    ðŸš¸ Fix and improve MKS LVGL UI (#22783)
    
    Co-authored-by: makerbase <4164049@qq.com>
    Co-authored-by: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h b/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h
index 87de27c044..cf32bad396 100644
--- a/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h
+++ b/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h
@@ -30,34 +30,34 @@ class WifiSerial {
     // Has any byte been written to the UART since begin()
     bool _written;
     serial_t _serial;
   public:
     uint8_t wifiRxBuf[WIFI_RX_BUF_SIZE];
     uint8_t wifiTxBuf[WIFI_TX_BUF_SIZE];
     WifiSerial(void *peripheral);
 
     // Set up / tear down
     void begin(uint32_t baud);
-    void begin(uint32_t baud,uint8_t config);
+    void begin(uint32_t baud, uint8_t config);
     void end();
     int available(void);
     int read(void);
     int write(uint8_t);
 
     // Interrupt handlers
     static int _tx_complete_irq(serial_t *obj);
     static void _rx_complete_irq(serial_t *obj);
 
     void flush(void);
     bool isHalfDuplex(void) const;
     void enableHalfDuplexRx(void);
 
-    private:
-      void setRx(uint32_t _rx);
-      void setTx(uint32_t _tx);
-      void setRx(PinName _rx);
-      void setTx(PinName _tx);
-      void init(PinName _rx, PinName _tx);
-      bool _rx_enabled;
-      uint8_t _config;
-      unsigned long _baud;
+  private:
+    void setRx(uint32_t _rx);
+    void setTx(uint32_t _tx);
+    void setRx(PinName _rx);
+    void setTx(PinName _tx);
+    void init(PinName _rx, PinName _tx);
+    bool _rx_enabled;
+    uint8_t _config;
+    unsigned long _baud;
 };

commit 4febb2352179f3de58db2161572de4050197bd5d
Author: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
Date:   Tue Jul 13 08:17:28 2021 +0800

    âœ¨ MKS Robin Nano v3 + TFT_LVGL_UI + WiFi module (#22109)

diff --git a/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h b/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h
new file mode 100644
index 0000000000..87de27c044
--- /dev/null
+++ b/Marlin/src/lcd/extui/mks_ui/wifiSerial_STM32.h
@@ -0,0 +1,63 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#include <inttypes.h>
+#include "Stream.h"
+#include "uart.h"
+
+class WifiSerial {
+  protected:
+    // Has any byte been written to the UART since begin()
+    bool _written;
+    serial_t _serial;
+  public:
+    uint8_t wifiRxBuf[WIFI_RX_BUF_SIZE];
+    uint8_t wifiTxBuf[WIFI_TX_BUF_SIZE];
+    WifiSerial(void *peripheral);
+
+    // Set up / tear down
+    void begin(uint32_t baud);
+    void begin(uint32_t baud,uint8_t config);
+    void end();
+    int available(void);
+    int read(void);
+    int write(uint8_t);
+
+    // Interrupt handlers
+    static int _tx_complete_irq(serial_t *obj);
+    static void _rx_complete_irq(serial_t *obj);
+
+    void flush(void);
+    bool isHalfDuplex(void) const;
+    void enableHalfDuplexRx(void);
+
+    private:
+      void setRx(uint32_t _rx);
+      void setTx(uint32_t _tx);
+      void setRx(PinName _rx);
+      void setTx(PinName _tx);
+      void init(PinName _rx, PinName _tx);
+      bool _rx_enabled;
+      uint8_t _config;
+      unsigned long _baud;
+};
