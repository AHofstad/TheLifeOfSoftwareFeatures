commit 49ead19d008dd54403b37818b21e79b8ccfa4b89
Author: Vovodroid <vovodroid@users.noreply.github.com>
Date:   Fri Aug 18 02:13:10 2023 +0300

    üîß Reversible file alpha sorting (#26130)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 80e317ebcf..7dc140b317 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -31,7 +31,10 @@ extern const char M23_STR[], M24_STR[];
   #if ENABLED(SDSORT_DYNAMIC_RAM)
     #define SD_RESORT 1
   #endif
-  #if FOLDER_SORTING || ENABLED(SDSORT_GCODE)
+  #ifndef SDSORT_FOLDERS
+    #define SDSORT_FOLDERS 0
+  #endif
+  #if SDSORT_FOLDERS || ENABLED(SDSORT_GCODE)
     #define HAS_FOLDER_SORTING 1
   #endif
 #endif
@@ -84,6 +87,7 @@ typedef struct {
 } card_flags_t;
 
 enum ListingFlags : uint8_t { LS_LONG_FILENAME, LS_ONLY_BIN, LS_TIMESTAMP };
+enum SortFlag : int8_t { AS_REV = -1, AS_OFF, AS_FWD, AS_ALSO_REV };
 
 #if ENABLED(AUTO_REPORT_SD_STATUS)
   #include "../libs/autoreport.h"
@@ -199,8 +203,8 @@ public:
     static void presort();
     static void selectFileByIndexSorted(const int16_t nr);
     #if ENABLED(SDSORT_GCODE)
-      FORCE_INLINE static void setSortOn(bool b)        { sort_alpha   = b; presort(); }
-      FORCE_INLINE static void setSortFolders(int i)    { sort_folders = i; presort(); }
+      FORCE_INLINE static void setSortOn(const SortFlag f) { sort_alpha = (f == AS_ALSO_REV) ? AS_REV : f; presort(); }
+      FORCE_INLINE static void setSortFolders(const int8_t i) { sort_folders = i; presort(); }
       //FORCE_INLINE static void setSortReverse(bool b) { sort_reverse = b; }
     #endif
   #else
@@ -272,12 +276,12 @@ private:
   #if ENABLED(SDCARD_SORT_ALPHA)
     static int16_t sort_count;    // Count of sorted items in the current directory
     #if ENABLED(SDSORT_GCODE)
-      static bool sort_alpha;     // Flag to enable / disable the feature
-      static int sort_folders;    // Folder sorting before/none/after
+      static SortFlag sort_alpha; // Sorting: REV, OFF, FWD
+      static int8_t sort_folders; // Folder sorting before/none/after
       //static bool sort_reverse; // Flag to enable / disable reverse sorting
     #endif
 
-    // By default the sort index is static
+    // By default the sort index is statically allocated
     #if ENABLED(SDSORT_DYNAMIC_RAM)
       static uint8_t *sort_order;
     #else

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 832d79efe4..80e317ebcf 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -284,7 +284,7 @@ private:
       static uint8_t sort_order[SDSORT_LIMIT];
     #endif
 
-    #if BOTH(SDSORT_USES_RAM, SDSORT_CACHE_NAMES) && DISABLED(SDSORT_DYNAMIC_RAM)
+    #if ALL(SDSORT_USES_RAM, SDSORT_CACHE_NAMES) && DISABLED(SDSORT_DYNAMIC_RAM)
       #define SORTED_LONGNAME_MAXLEN (SDSORT_CACHE_VFATS) * (FILENAME_LENGTH)
       #define SORTED_LONGNAME_STORAGE (SORTED_LONGNAME_MAXLEN + 1)
     #else

commit 1a4e208c6901cf3727940e98f12748aa14a52f5d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 21:22:54 2023 -0500

    ü©π Fix card.ls call (in easythreed_ui)
    
    Fix regression in #24679

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 4baaa73e1a..832d79efe4 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -209,7 +209,7 @@ public:
     }
   #endif
 
-  static void ls(const uint8_t lsflags);
+  static void ls(const uint8_t lsflags=0);
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static bool jobRecoverFileExists();

commit 2e24637bd66d725dc07a560cda81b40f67fd1d4a
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon May 15 13:48:55 2023 +1200

    "One Click" Print newest file (#25781)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 3b7b7debcf..4baaa73e1a 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -128,6 +128,12 @@ public:
     static void autofile_cancel() { autofile_index = 0; }
   #endif
 
+  #if ENABLED(ONE_CLICK_PRINT)
+    static bool one_click_check();  // Check for the newest file and prompt to run it.
+    static void diveToNewestFile(MediaFile parent, uint32_t &compareDateTime, MediaFile &outdir, char * const outname);
+    static bool selectNewestFile();
+  #endif
+
   // Basic file ops
   static void openFileRead(const char * const path, const uint8_t subcall=0);
   static void openFileWrite(const char * const path);

commit 5664c02d077e028f84a24efd96c2eebe97ce8763
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 22:43:09 2023 -0500

    üßë‚Äçüíª Generalize SDSUPPORT as HAS_MEDIA
    
    In preparation for single- and multi-volume refactoring.

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index d5eca9c915..3b7b7debcf 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -23,7 +23,7 @@
 
 #include "../inc/MarlinConfig.h"
 
-#if ENABLED(SDSUPPORT)
+#if HAS_MEDIA
 
 extern const char M23_STR[], M24_STR[];
 
@@ -364,7 +364,7 @@ private:
 
 extern CardReader card;
 
-#else // !SDSUPPORT
+#else // !HAS_MEDIA
 
 #define IS_SD_PRINTING()  false
 #define IS_SD_FETCHING()  false
@@ -373,4 +373,4 @@ extern CardReader card;
 
 #define LONG_FILENAME_LENGTH 0
 
-#endif // !SDSUPPORT
+#endif // !HAS_MEDIA

commit 06e5273d24776219253a9229621c034ab263cba7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 31 18:18:25 2023 -0500

    üßë‚Äçüíª CardReader adjustments (#25611)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 47e3c66e47..d5eca9c915 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -36,12 +36,6 @@ extern const char M23_STR[], M24_STR[];
   #endif
 #endif
 
-#if ENABLED(SDCARD_RATHERRECENTFIRST) && DISABLED(SDCARD_SORT_ALPHA)
-  #define SD_ORDER(N,C) ((C) - 1 - (N))
-#else
-  #define SD_ORDER(N,C) N
-#endif
-
 #define MAX_DIR_DEPTH     10       // Maximum folder depth
 #define MAXDIRNAMELENGTH   8       // DOS folder name size
 #define MAXPATHNAMELENGTH  (1 + (MAXDIRNAMELENGTH + 1) * (MAX_DIR_DEPTH) + 1 + FILENAME_LENGTH) // "/" + N * ("ADIRNAME/") + "filename.ext"
@@ -110,8 +104,6 @@ public:
     #endif
   #endif
 
-  // // // Methods // // //
-
   CardReader();
 
   static void changeMedia(DiskIODriver *_driver) { driver = _driver; }
@@ -153,11 +145,10 @@ public:
   static void cdroot();
   static void cd(const char *relpath);
   static int8_t cdup();
-  static uint16_t countFilesInWorkDir();
-  static uint16_t get_num_Files();
+  static int16_t get_num_items();
 
   // Select a file
-  static void selectFileByIndex(const uint16_t nr);
+  static void selectFileByIndex(const int16_t nr);
   static void selectFileByName(const char * const match);  // (working directory only)
 
   // Print job
@@ -200,14 +191,16 @@ public:
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void presort();
-    static void getfilename_sorted(const uint16_t nr);
+    static void selectFileByIndexSorted(const int16_t nr);
     #if ENABLED(SDSORT_GCODE)
       FORCE_INLINE static void setSortOn(bool b)        { sort_alpha   = b; presort(); }
       FORCE_INLINE static void setSortFolders(int i)    { sort_folders = i; presort(); }
       //FORCE_INLINE static void setSortReverse(bool b) { sort_reverse = b; }
     #endif
   #else
-    FORCE_INLINE static void getfilename_sorted(const uint16_t nr) { selectFileByIndex(nr); }
+    FORCE_INLINE static void selectFileByIndexSorted(const int16_t nr) {
+      selectFileByIndex(TERN(SDCARD_RATHERRECENTFIRST, get_num_items() - 1 - nr, (nr)));
+    }
   #endif
 
   static void ls(const uint8_t lsflags);
@@ -265,12 +258,13 @@ private:
   //
   static MediaFile root, workDir, workDirParents[MAX_DIR_DEPTH];
   static uint8_t workDirDepth;
+  static int16_t nrItems; // Cache the total count
 
   //
   // Alphabetical file and folder sorting
   //
   #if ENABLED(SDCARD_SORT_ALPHA)
-    static uint16_t sort_count;   // Count of sorted items in the current directory
+    static int16_t sort_count;    // Count of sorted items in the current directory
     #if ENABLED(SDSORT_GCODE)
       static bool sort_alpha;     // Flag to enable / disable the feature
       static int sort_folders;    // Folder sorting before/none/after
@@ -297,7 +291,6 @@ private:
 
       // If using dynamic ram for names, allocate on the heap.
       #if ENABLED(SDSORT_CACHE_NAMES)
-        static uint16_t nrFiles; // Cache the total count
         #if ENABLED(SDSORT_DYNAMIC_RAM)
           static char **sortshort, **sortnames;
         #else
@@ -342,8 +335,8 @@ private:
   // Directory items
   //
   static bool is_visible_entity(const dir_t &p OPTARG(CUSTOM_FIRMWARE_UPLOAD, const bool onlyBin=false));
-  static int countItems(MediaFile dir);
-  static void selectByIndex(MediaFile dir, const uint8_t index);
+  static int16_t countVisibleItems(MediaFile dir);
+  static void selectByIndex(MediaFile dir, const int16_t index);
   static void selectByName(MediaFile dir, const char * const match);
   static void printListing(
     MediaFile parent, const char * const prepend, const uint8_t lsflags

commit 0021a58943721a81b1ef23fa5e7366cfd80a3d28
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Sun Mar 26 04:07:25 2023 -0500

    ‚ú® AnyCubic Vyper / Vyper LCD (#25405)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 86acb1b862..47e3c66e47 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -146,6 +146,7 @@ public:
   static char* longest_filename() { return longFilename[0] ? longFilename : filename; }
   #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
     static void printLongPath(char * const path);   // Used by M33
+    static void getLongPath(char * const pathLong, char * const pathShort); // Used by anycubic_vyper
   #endif
 
   // Working Directory for SD card menu

commit 218ca0530432d6b1194ccac5fc32a72bbc9a7c96
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Feb 4 05:10:26 2023 -0300

    üßë‚Äçüíª General 'MediaFile' type alias (#24424)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 6fe75f760e..86acb1b862 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -116,7 +116,7 @@ public:
 
   static void changeMedia(DiskIODriver *_driver) { driver = _driver; }
 
-  static SdFile getroot() { return root; }
+  static MediaFile getroot() { return root; }
 
   static void mount();
   static void release();
@@ -190,12 +190,12 @@ public:
    * Relative paths apply to the workDir.
    *
    * update_cwd: Pass 'true' to update the workDir on success.
-   *   inDirPtr: On exit your pointer points to the target SdFile.
+   *   inDirPtr: On exit your pointer points to the target MediaFile.
    *             A nullptr indicates failure.
    *       path: Start with '/' for abs path. End with '/' to get a folder ref.
    *       echo: Set 'true' to print the path throughout the loop.
    */
-  static const char* diveToFile(const bool update_cwd, SdFile* &inDirPtr, const char * const path, const bool echo=false);
+  static const char* diveToFile(const bool update_cwd, MediaFile* &inDirPtr, const char * const path, const bool echo=false);
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void presort();
@@ -223,7 +223,7 @@ public:
 
   // Current Working Dir - Set by cd, cdup, cdroot, and diveToFile(true, ...)
   static char* getWorkDirName()  { workDir.getDosName(filename); return filename; }
-  static SdFile& getWorkDir()    { return workDir.isOpen() ? workDir : root; }
+  static MediaFile& getWorkDir()    { return workDir.isOpen() ? workDir : root; }
 
   // Print File stats
   static uint32_t getFileSize()  { return filesize; }
@@ -262,7 +262,7 @@ private:
   //
   // Working directory and parents
   //
-  static SdFile root, workDir, workDirParents[MAX_DIR_DEPTH];
+  static MediaFile root, workDir, workDirParents[MAX_DIR_DEPTH];
   static uint8_t workDirDepth;
 
   //
@@ -322,8 +322,8 @@ private:
   #endif // SDCARD_SORT_ALPHA
 
   static DiskIODriver *driver;
-  static SdVolume volume;
-  static SdFile file;
+  static MarlinVolume volume;
+  static MediaFile file;
 
   static uint32_t filesize, // Total size of the current file, in bytes
                   sdpos;    // Index most recently read (one behind file.getPos)
@@ -341,10 +341,11 @@ private:
   // Directory items
   //
   static bool is_visible_entity(const dir_t &p OPTARG(CUSTOM_FIRMWARE_UPLOAD, const bool onlyBin=false));
-  static int countItems(SdFile dir);
-  static void selectByIndex(SdFile dir, const uint8_t index);
-  static void selectByName(SdFile dir, const char * const match);
-  static void printListing(SdFile parent, const char * const prepend, const uint8_t lsflags
+  static int countItems(MediaFile dir);
+  static void selectByIndex(MediaFile dir, const uint8_t index);
+  static void selectByName(MediaFile dir, const char * const match);
+  static void printListing(
+    MediaFile parent, const char * const prepend, const uint8_t lsflags
     OPTARG(LONG_FILENAME_HOST_SUPPORT, const char * const prependLong=nullptr)
   );
 

commit 82d18517436c46b44826710d03654b48158b9a6b
Author: Arkadiusz Mi≈õkiewicz <arekm@maven.pl>
Date:   Fri Aug 26 00:14:54 2022 +0200

    ‚ú® M20_TIMESTAMP_SUPPORT (#24679)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index d2f462c2a7..6fe75f760e 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -89,6 +89,8 @@ typedef struct {
     ;
 } card_flags_t;
 
+enum ListingFlags : uint8_t { LS_LONG_FILENAME, LS_ONLY_BIN, LS_TIMESTAMP };
+
 #if ENABLED(AUTO_REPORT_SD_STATUS)
   #include "../libs/autoreport.h"
 #endif
@@ -207,13 +209,7 @@ public:
     FORCE_INLINE static void getfilename_sorted(const uint16_t nr) { selectFileByIndex(nr); }
   #endif
 
-  static void ls(
-    TERN_(CUSTOM_FIRMWARE_UPLOAD, const bool onlyBin=false)
-    #if BOTH(CUSTOM_FIRMWARE_UPLOAD, LONG_FILENAME_HOST_SUPPORT)
-      ,
-    #endif
-    TERN_(LONG_FILENAME_HOST_SUPPORT, const bool includeLongNames=false)
-  );
+  static void ls(const uint8_t lsflags);
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static bool jobRecoverFileExists();
@@ -348,10 +344,7 @@ private:
   static int countItems(SdFile dir);
   static void selectByIndex(SdFile dir, const uint8_t index);
   static void selectByName(SdFile dir, const char * const match);
-  static void printListing(
-    SdFile parent, const char * const prepend
-    OPTARG(CUSTOM_FIRMWARE_UPLOAD, const bool onlyBin=false)
-    OPTARG(LONG_FILENAME_HOST_SUPPORT, const bool includeLongNames=false)
+  static void printListing(SdFile parent, const char * const prepend, const uint8_t lsflags
     OPTARG(LONG_FILENAME_HOST_SUPPORT, const char * const prependLong=nullptr)
   );
 

commit 3e9fb34892e85bc4069acf5baddbf12d6cd47789
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Tue Jun 7 18:59:21 2022 +1200

    ü©π Media Change followup (#24302)
    
    Followup to #24015

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 483ab81395..d2f462c2a7 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -362,7 +362,7 @@ private:
 
 #if ENABLED(USB_FLASH_DRIVE_SUPPORT)
   #define IS_SD_INSERTED() DiskIODriver_USBFlash::isInserted()
-#elif PIN_EXISTS(SD_DETECT)
+#elif HAS_SD_DETECT
   #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) == SD_DETECT_STATE)
 #else
   // No card detect line? Assume the card is inserted.

commit 79b38e0e14074b52e0aeb98b08a686a99a9b1aad
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Fri Mar 11 15:06:49 2022 -0500

    üö∏ Update Ender3 V2/S1 Pro UI (#23878)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 2b3dcd00fb..483ab81395 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -80,6 +80,9 @@ typedef struct {
        filenameIsDir:1,
        workDirIsRoot:1,
        abort_sd_printing:1
+       #if DO_LIST_BIN_FILES
+         , filenameIsBin:1
+       #endif
        #if ENABLED(BINARY_FILE_TRANSFER)
          , binary_mode:1
        #endif
@@ -218,6 +221,10 @@ public:
     static void removeJobRecoveryFile();
   #endif
 
+  // Binary flag for the current file
+  static bool fileIsBinary() { return TERN0(DO_LIST_BIN_FILES, flag.filenameIsBin); }
+  static void setBinFlag(const bool bin) { TERN(DO_LIST_BIN_FILES, flag.filenameIsBin = bin, UNUSED(bin)); }
+
   // Current Working Dir - Set by cd, cdup, cdroot, and diveToFile(true, ...)
   static char* getWorkDirName()  { workDir.getDosName(filename); return filename; }
   static SdFile& getWorkDir()    { return workDir.isOpen() ? workDir : root; }

commit 1363b439462af4fac2e9e3a8801abde5981575cf
Author: GHGiampy <83699429+GHGiampy@users.noreply.github.com>
Date:   Sun Jan 9 08:14:03 2022 +0100

    ‚ú® Firmware Upload via Binary Transfer (#23462)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 8761f57de5..2b3dcd00fb 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -204,7 +204,13 @@ public:
     FORCE_INLINE static void getfilename_sorted(const uint16_t nr) { selectFileByIndex(nr); }
   #endif
 
-  static void ls(TERN_(LONG_FILENAME_HOST_SUPPORT, bool includeLongNames=false));
+  static void ls(
+    TERN_(CUSTOM_FIRMWARE_UPLOAD, const bool onlyBin=false)
+    #if BOTH(CUSTOM_FIRMWARE_UPLOAD, LONG_FILENAME_HOST_SUPPORT)
+      ,
+    #endif
+    TERN_(LONG_FILENAME_HOST_SUPPORT, const bool includeLongNames=false)
+  );
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static bool jobRecoverFileExists();
@@ -331,12 +337,13 @@ private:
   //
   // Directory items
   //
-  static bool is_dir_or_gcode(const dir_t &p);
+  static bool is_visible_entity(const dir_t &p OPTARG(CUSTOM_FIRMWARE_UPLOAD, const bool onlyBin=false));
   static int countItems(SdFile dir);
   static void selectByIndex(SdFile dir, const uint8_t index);
   static void selectByName(SdFile dir, const char * const match);
   static void printListing(
     SdFile parent, const char * const prepend
+    OPTARG(CUSTOM_FIRMWARE_UPLOAD, const bool onlyBin=false)
     OPTARG(LONG_FILENAME_HOST_SUPPORT, const bool includeLongNames=false)
     OPTARG(LONG_FILENAME_HOST_SUPPORT, const char * const prependLong=nullptr)
   );

commit 1bd921d6a69412686fa4b31c4c1e5710de9840cf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jan 6 05:07:47 2022 -0600

    üé® Misc. cleanup, comments

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 97e9bba867..8761f57de5 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -336,9 +336,8 @@ private:
   static void selectByIndex(SdFile dir, const uint8_t index);
   static void selectByName(SdFile dir, const char * const match);
   static void printListing(
-    SdFile parent
+    SdFile parent, const char * const prepend
     OPTARG(LONG_FILENAME_HOST_SUPPORT, const bool includeLongNames=false)
-    , const char * const prepend=nullptr
     OPTARG(LONG_FILENAME_HOST_SUPPORT, const char * const prependLong=nullptr)
   );
 

commit 6fb2d8a25f096d084348a6f6930f515d947474d4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 02:57:24 2021 -0600

    üßë‚Äçüíª Remove extraneous 'inline' hints

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 53e1a7ffc3..97e9bba867 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -115,7 +115,7 @@ public:
 
   static void mount();
   static void release();
-  static inline bool isMounted() { return flag.mounted; }
+  static bool isMounted() { return flag.mounted; }
 
   // Handle media insert/remove
   static void manage_media();
@@ -128,7 +128,7 @@ public:
     static uint8_t autofile_index;  // Next auto#.g index to run, plus one. Ignored by autofile_check when zero.
     static void autofile_begin();   // Begin check. Called automatically after boot-up.
     static bool autofile_check();   // Check for the next auto-start file and run it.
-    static inline void autofile_cancel() { autofile_index = 0; }
+    static void autofile_cancel() { autofile_index = 0; }
   #endif
 
   // Basic file ops
@@ -138,7 +138,7 @@ public:
   static bool fileExists(const char * const name);
   static void removeFile(const char * const name);
 
-  static inline char* longest_filename() { return longFilename[0] ? longFilename : filename; }
+  static char* longest_filename() { return longFilename[0] ? longFilename : filename; }
   #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
     static void printLongPath(char * const path);   // Used by M33
   #endif
@@ -163,18 +163,18 @@ public:
   static void endFilePrintNow(TERN_(SD_RESORT, const bool re_sort=false));
   static void abortFilePrintNow(TERN_(SD_RESORT, const bool re_sort=false));
   static void fileHasFinished();
-  static inline void abortFilePrintSoon() { flag.abort_sd_printing = isFileOpen(); }
-  static inline void pauseSDPrint()       { flag.sdprinting = false; }
-  static inline bool isPrinting()         { return flag.sdprinting; }
-  static inline bool isPaused()           { return isFileOpen() && !isPrinting(); }
+  static void abortFilePrintSoon() { flag.abort_sd_printing = isFileOpen(); }
+  static void pauseSDPrint()       { flag.sdprinting = false; }
+  static bool isPrinting()         { return flag.sdprinting; }
+  static bool isPaused()           { return isFileOpen() && !isPrinting(); }
   #if HAS_PRINT_PROGRESS_PERMYRIAD
-    static inline uint16_t permyriadDone() {
+    static uint16_t permyriadDone() {
       if (flag.sdprintdone) return 10000;
       if (isFileOpen() && filesize) return sdpos / ((filesize + 9999) / 10000);
       return 0;
     }
   #endif
-  static inline uint8_t percentDone() {
+  static uint8_t percentDone() {
     if (flag.sdprintdone) return 100;
     if (isFileOpen() && filesize) return sdpos / ((filesize + 99) / 100);
     return 0;
@@ -213,20 +213,20 @@ public:
   #endif
 
   // Current Working Dir - Set by cd, cdup, cdroot, and diveToFile(true, ...)
-  static inline char* getWorkDirName()  { workDir.getDosName(filename); return filename; }
-  static inline SdFile& getWorkDir()    { return workDir.isOpen() ? workDir : root; }
+  static char* getWorkDirName()  { workDir.getDosName(filename); return filename; }
+  static SdFile& getWorkDir()    { return workDir.isOpen() ? workDir : root; }
 
   // Print File stats
-  static inline uint32_t getFileSize()  { return filesize; }
-  static inline uint32_t getIndex()     { return sdpos; }
-  static inline bool isFileOpen()       { return isMounted() && file.isOpen(); }
-  static inline bool eof()              { return getIndex() >= getFileSize(); }
+  static uint32_t getFileSize()  { return filesize; }
+  static uint32_t getIndex()     { return sdpos; }
+  static bool isFileOpen()       { return isMounted() && file.isOpen(); }
+  static bool eof()              { return getIndex() >= getFileSize(); }
 
   // File data operations
-  static inline int16_t get()                            { int16_t out = (int16_t)file.read(); sdpos = file.curPosition(); return out; }
-  static inline int16_t read(void *buf, uint16_t nbyte)  { return file.isOpen() ? file.read(buf, nbyte) : -1; }
-  static inline int16_t write(void *buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
-  static inline void setIndex(const uint32_t index)      { file.seekSet((sdpos = index)); }
+  static int16_t get()                            { int16_t out = (int16_t)file.read(); sdpos = file.curPosition(); return out; }
+  static int16_t read(void *buf, uint16_t nbyte)  { return file.isOpen() ? file.read(buf, nbyte) : -1; }
+  static int16_t write(void *buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
+  static void setIndex(const uint32_t index)      { file.seekSet((sdpos = index)); }
 
   // TODO: rename to diskIODriver()
   static DiskIODriver* diskIODriver() { return driver; }

commit 1cff4fdb3670e0d04d865fe699763073149d4acd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Dec 12 16:16:40 2021 -0600

    ü©π SD abort requires open file
    
    See #22566

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 97003e1d13..53e1a7ffc3 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -163,7 +163,7 @@ public:
   static void endFilePrintNow(TERN_(SD_RESORT, const bool re_sort=false));
   static void abortFilePrintNow(TERN_(SD_RESORT, const bool re_sort=false));
   static void fileHasFinished();
-  static inline void abortFilePrintSoon() { flag.abort_sd_printing = true; }
+  static inline void abortFilePrintSoon() { flag.abort_sd_printing = isFileOpen(); }
   static inline void pauseSDPrint()       { flag.sdprinting = false; }
   static inline bool isPrinting()         { return flag.sdprinting; }
   static inline bool isPaused()           { return isFileOpen() && !isPrinting(); }

commit b88117d6364b8919a8a7df6c80d8132af98a6afc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 21 06:25:13 2021 -0500

    üé® Fix L64xx enable, clean up conditionals

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 66cb97baeb..97003e1d13 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -27,8 +27,13 @@
 
 extern const char M23_STR[], M24_STR[];
 
-#if BOTH(SDCARD_SORT_ALPHA, SDSORT_DYNAMIC_RAM)
-  #define SD_RESORT 1
+#if ENABLED(SDCARD_SORT_ALPHA)
+  #if ENABLED(SDSORT_DYNAMIC_RAM)
+    #define SD_RESORT 1
+  #endif
+  #if FOLDER_SORTING || ENABLED(SDSORT_GCODE)
+    #define HAS_FOLDER_SORTING 1
+  #endif
 #endif
 
 #if ENABLED(SDCARD_RATHERRECENTFIRST) && DISABLED(SDCARD_SORT_ALPHA)

commit 094caadf9471a51a877bcc61f40081266fdc19d3
Author: Mihai <mihai-dumitresq@users.noreply.github.com>
Date:   Wed Jul 7 07:10:35 2021 +0300

    ‚ú® Enable 'M20 L' with LONG_FILENAME_HOST_SUPPORT (#22271)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 943cdae741..66cb97baeb 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -199,7 +199,7 @@ public:
     FORCE_INLINE static void getfilename_sorted(const uint16_t nr) { selectFileByIndex(nr); }
   #endif
 
-  static void ls();
+  static void ls(TERN_(LONG_FILENAME_HOST_SUPPORT, bool includeLongNames=false));
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static bool jobRecoverFileExists();
@@ -330,7 +330,12 @@ private:
   static int countItems(SdFile dir);
   static void selectByIndex(SdFile dir, const uint8_t index);
   static void selectByName(SdFile dir, const char * const match);
-  static void printListing(SdFile parent, const char * const prepend=nullptr);
+  static void printListing(
+    SdFile parent
+    OPTARG(LONG_FILENAME_HOST_SUPPORT, const bool includeLongNames=false)
+    , const char * const prepend=nullptr
+    OPTARG(LONG_FILENAME_HOST_SUPPORT, const char * const prependLong=nullptr)
+  );
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void flush_presort();

commit d6a7ebce6caf01751551712684e138ca7df93a00
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Mon Jun 14 02:39:16 2021 -0300

    ‚ú® MULTI_VOLUME for Color UI and MarlinUI (#22004)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 35d7627421..943cdae741 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -235,12 +235,13 @@ public:
   #endif
 
   #if SHARED_VOLUME_IS(USB_FLASH_DRIVE) || ENABLED(USB_FLASH_DRIVE_SUPPORT)
-    static DiskIODriver_USBFlash media_usbFlashDrive;
+    #define HAS_USB_FLASH_DRIVE 1
+    static DiskIODriver_USBFlash media_driver_usbFlash;
   #endif
-  #if NEED_SD2CARD_SDIO
-    static DiskIODriver_SDIO media_sdio;
-  #elif NEED_SD2CARD_SPI
-    static DiskIODriver_SPI_SD media_sd_spi;
+
+  #if NEED_SD2CARD_SDIO || NEED_SD2CARD_SPI
+    typedef TERN(NEED_SD2CARD_SDIO, DiskIODriver_SDIO, DiskIODriver_SPI_SD) sdcard_driver_t;
+    static sdcard_driver_t media_driver_sdcard;
   #endif
 
 private:

commit 4ea4fa78aa6fcafc6f270bb543c2f8dc8ae695cd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 21 22:45:54 2021 -0500

    üìù Document diveToFile, printListing

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 6f1633d30e..35d7627421 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -111,7 +111,6 @@ public:
   static void mount();
   static void release();
   static inline bool isMounted() { return flag.mounted; }
-  static void ls();
 
   // Handle media insert/remove
   static void manage_media();
@@ -176,21 +175,32 @@ public:
     return 0;
   }
 
-  // Helper for open and remove
-  static const char* diveToFile(const bool update_cwd, SdFile* &curDir, const char * const path, const bool echo=false);
+  /**
+   * Dive down to a relative or absolute path.
+   * Relative paths apply to the workDir.
+   *
+   * update_cwd: Pass 'true' to update the workDir on success.
+   *   inDirPtr: On exit your pointer points to the target SdFile.
+   *             A nullptr indicates failure.
+   *       path: Start with '/' for abs path. End with '/' to get a folder ref.
+   *       echo: Set 'true' to print the path throughout the loop.
+   */
+  static const char* diveToFile(const bool update_cwd, SdFile* &inDirPtr, const char * const path, const bool echo=false);
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void presort();
     static void getfilename_sorted(const uint16_t nr);
     #if ENABLED(SDSORT_GCODE)
-      FORCE_INLINE static void setSortOn(bool b) { sort_alpha = b; presort(); }
-      FORCE_INLINE static void setSortFolders(int i) { sort_folders = i; presort(); }
+      FORCE_INLINE static void setSortOn(bool b)        { sort_alpha   = b; presort(); }
+      FORCE_INLINE static void setSortFolders(int i)    { sort_folders = i; presort(); }
       //FORCE_INLINE static void setSortReverse(bool b) { sort_reverse = b; }
     #endif
   #else
     FORCE_INLINE static void getfilename_sorted(const uint16_t nr) { selectFileByIndex(nr); }
   #endif
 
+  static void ls();
+
   #if ENABLED(POWER_LOSS_RECOVERY)
     static bool jobRecoverFileExists();
     static void openJobRecoveryFile(const bool read);
@@ -199,6 +209,7 @@ public:
 
   // Current Working Dir - Set by cd, cdup, cdroot, and diveToFile(true, ...)
   static inline char* getWorkDirName()  { workDir.getDosName(filename); return filename; }
+  static inline SdFile& getWorkDir()    { return workDir.isOpen() ? workDir : root; }
 
   // Print File stats
   static inline uint32_t getFileSize()  { return filesize; }

commit b65cdbed91782c83188706a9c340de9c503cf430
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 8 04:35:35 2021 -0500

    Signal SD completion later (#21840)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 5fdd1222ae..6f1633d30e 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -70,6 +70,7 @@ typedef struct {
   bool saving:1,
        logging:1,
        sdprinting:1,
+       sdprintdone:1,
        mounted:1,
        filenameIsDir:1,
        workDirIsRoot:1,
@@ -147,23 +148,33 @@ public:
 
   // Select a file
   static void selectFileByIndex(const uint16_t nr);
-  static void selectFileByName(const char * const match);
+  static void selectFileByName(const char * const match);  // (working directory only)
 
   // Print job
-  static void openAndPrintFile(const char *name);   // (working directory)
-  static void fileHasFinished();
-  static void getAbsFilename(char *dst);
-  static void printFilename();
-  static void startFileprint();
-  static void endFilePrint(TERN_(SD_RESORT, const bool re_sort=false));
   static void report_status();
-  static inline void pauseSDPrint() { flag.sdprinting = false; }
-  static inline bool isPaused() { return isFileOpen() && !flag.sdprinting; }
-  static inline bool isPrinting() { return flag.sdprinting; }
+  static void getAbsFilenameInCWD(char *dst);
+  static void printSelectedFilename();
+  static void openAndPrintFile(const char *name);   // (working directory or full path)
+  static void startOrResumeFilePrinting();
+  static void endFilePrintNow(TERN_(SD_RESORT, const bool re_sort=false));
+  static void abortFilePrintNow(TERN_(SD_RESORT, const bool re_sort=false));
+  static void fileHasFinished();
+  static inline void abortFilePrintSoon() { flag.abort_sd_printing = true; }
+  static inline void pauseSDPrint()       { flag.sdprinting = false; }
+  static inline bool isPrinting()         { return flag.sdprinting; }
+  static inline bool isPaused()           { return isFileOpen() && !isPrinting(); }
   #if HAS_PRINT_PROGRESS_PERMYRIAD
-    static inline uint16_t permyriadDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 9999) / 10000) : 0; }
+    static inline uint16_t permyriadDone() {
+      if (flag.sdprintdone) return 10000;
+      if (isFileOpen() && filesize) return sdpos / ((filesize + 9999) / 10000);
+      return 0;
+    }
   #endif
-  static inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
+  static inline uint8_t percentDone() {
+    if (flag.sdprintdone) return 100;
+    if (isFileOpen() && filesize) return sdpos / ((filesize + 99) / 100);
+    return 0;
+  }
 
   // Helper for open and remove
   static const char* diveToFile(const bool update_cwd, SdFile* &curDir, const char * const path, const bool echo=false);
@@ -186,15 +197,20 @@ public:
     static void removeJobRecoveryFile();
   #endif
 
-  static inline bool isFileOpen() { return isMounted() && file.isOpen(); }
-  static inline uint32_t getIndex() { return sdpos; }
-  static inline uint32_t getFileSize() { return filesize; }
-  static inline bool eof() { return sdpos >= filesize; }
-  static inline void setIndex(const uint32_t index) { file.seekSet((sdpos = index)); }
-  static inline char* getWorkDirName() { workDir.getDosName(filename); return filename; }
-  static inline int16_t get() { int16_t out = (int16_t)file.read(); sdpos = file.curPosition(); return out; }
-  static inline int16_t read(void *buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
+  // Current Working Dir - Set by cd, cdup, cdroot, and diveToFile(true, ...)
+  static inline char* getWorkDirName()  { workDir.getDosName(filename); return filename; }
+
+  // Print File stats
+  static inline uint32_t getFileSize()  { return filesize; }
+  static inline uint32_t getIndex()     { return sdpos; }
+  static inline bool isFileOpen()       { return isMounted() && file.isOpen(); }
+  static inline bool eof()              { return getIndex() >= getFileSize(); }
+
+  // File data operations
+  static inline int16_t get()                            { int16_t out = (int16_t)file.read(); sdpos = file.curPosition(); return out; }
+  static inline int16_t read(void *buf, uint16_t nbyte)  { return file.isOpen() ? file.read(buf, nbyte) : -1; }
   static inline int16_t write(void *buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
+  static inline void setIndex(const uint32_t index)      { file.seekSet((sdpos = index)); }
 
   // TODO: rename to diskIODriver()
   static DiskIODriver* diskIODriver() { return driver; }
@@ -318,7 +334,8 @@ private:
   #define IS_SD_INSERTED() true
 #endif
 
-#define IS_SD_PRINTING()  card.flag.sdprinting
+#define IS_SD_PRINTING()  (card.flag.sdprinting && !card.flag.abort_sd_printing)
+#define IS_SD_FETCHING()  (!card.flag.sdprintdone && IS_SD_PRINTING())
 #define IS_SD_PAUSED()    card.isPaused()
 #define IS_SD_FILE_OPEN() card.isFileOpen()
 
@@ -327,6 +344,7 @@ extern CardReader card;
 #else // !SDSUPPORT
 
 #define IS_SD_PRINTING()  false
+#define IS_SD_FETCHING()  false
 #define IS_SD_PAUSED()    false
 #define IS_SD_FILE_OPEN() false
 

commit 138340ee99a852bc116e2a436932bed074624fde
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Tue Apr 13 19:34:19 2021 -0300

    Multi-Volume. Select Media for LVGL (#21344)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index f1002e1dab..5fdd1222ae 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -42,6 +42,29 @@ extern const char M23_STR[], M24_STR[];
 #define MAXPATHNAMELENGTH  (1 + (MAXDIRNAMELENGTH + 1) * (MAX_DIR_DEPTH) + 1 + FILENAME_LENGTH) // "/" + N * ("ADIRNAME/") + "filename.ext"
 
 #include "SdFile.h"
+#include "disk_io_driver.h"
+
+#if ENABLED(USB_FLASH_DRIVE_SUPPORT)
+  #include "usb_flashdrive/Sd2Card_FlashDrive.h"
+#endif
+
+#if NEED_SD2CARD_SDIO
+  #include "Sd2Card_sdio.h"
+#elif NEED_SD2CARD_SPI
+  #include "Sd2Card.h"
+#endif
+
+#if ENABLED(MULTI_VOLUME)
+  #define SV_SD_ONBOARD      1
+  #define SV_USB_FLASH_DRIVE 2
+  #define _VOLUME_ID(N) _CAT(SV_, N)
+  #define SHARED_VOLUME_IS(N) (DEFAULT_SHARED_VOLUME == _VOLUME_ID(N))
+  #if !SHARED_VOLUME_IS(SD_ONBOARD) && !SHARED_VOLUME_IS(USB_FLASH_DRIVE)
+    #error "DEFAULT_SHARED_VOLUME must be either SD_ONBOARD or USB_FLASH_DRIVE."
+  #endif
+#else
+  #define SHARED_VOLUME_IS(...) 0
+#endif
 
 typedef struct {
   bool saving:1,
@@ -80,6 +103,8 @@ public:
 
   CardReader();
 
+  static void changeMedia(DiskIODriver *_driver) { driver = _driver; }
+
   static SdFile getroot() { return root; }
 
   static void mount();
@@ -171,7 +196,8 @@ public:
   static inline int16_t read(void *buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
   static inline int16_t write(void *buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
 
-  static Sd2Card& getSd2Card() { return sd2card; }
+  // TODO: rename to diskIODriver()
+  static DiskIODriver* diskIODriver() { return driver; }
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     //
@@ -181,6 +207,15 @@ public:
     static AutoReporter<AutoReportSD> auto_reporter;
   #endif
 
+  #if SHARED_VOLUME_IS(USB_FLASH_DRIVE) || ENABLED(USB_FLASH_DRIVE_SUPPORT)
+    static DiskIODriver_USBFlash media_usbFlashDrive;
+  #endif
+  #if NEED_SD2CARD_SDIO
+    static DiskIODriver_SDIO media_sdio;
+  #elif NEED_SD2CARD_SPI
+    static DiskIODriver_SPI_SD media_sd_spi;
+  #endif
+
 private:
   //
   // Working directory and parents
@@ -236,7 +271,7 @@ private:
         #if ENABLED(SDSORT_DYNAMIC_RAM)
           static uint8_t *isDir;
         #elif ENABLED(SDSORT_CACHE_NAMES) || DISABLED(SDSORT_USES_STACK)
-          static uint8_t isDir[(SDSORT_LIMIT+7)>>3];
+          static uint8_t isDir[(SDSORT_LIMIT + 7) >> 3];
         #endif
       #endif
 
@@ -244,7 +279,7 @@ private:
 
   #endif // SDCARD_SORT_ALPHA
 
-  static Sd2Card sd2card;
+  static DiskIODriver *driver;
   static SdVolume volume;
   static SdFile file;
 
@@ -275,7 +310,7 @@ private:
 };
 
 #if ENABLED(USB_FLASH_DRIVE_SUPPORT)
-  #define IS_SD_INSERTED() Sd2Card::isInserted()
+  #define IS_SD_INSERTED() DiskIODriver_USBFlash::isInserted()
 #elif PIN_EXISTS(SD_DETECT)
   #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) == SD_DETECT_STATE)
 #else

commit 24a095c5c14b60bcbffc2807d2c8cc8e9af46e90
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 12 16:49:53 2021 -0500

    Reduce math library code size by 3.4KB (#21575)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 482fb1c5cc..f1002e1dab 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -102,7 +102,7 @@ public:
   #endif
 
   // Basic file ops
-  static void openFileRead(char * const path, const uint8_t subcall=0);
+  static void openFileRead(const char * const path, const uint8_t subcall=0);
   static void openFileWrite(const char * const path);
   static void closefile(const bool store_location=false);
   static bool fileExists(const char * const name);

commit e3116eed2e488543766cd61e4658363a0d2bd34f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 5 15:34:51 2021 -0500

    write_command changes input

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index cf876ce9c7..482fb1c5cc 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -92,7 +92,7 @@ public:
 
   // SD Card Logging
   static void openLogFile(const char * const path);
-  static void write_command(const char * const buf);
+  static void write_command(char * const buf);
 
   #if DISABLED(NO_SD_AUTOSTART)     // Auto-Start auto#.g file handling
     static uint8_t autofile_index;  // Next auto#.g index to run, plus one. Ignored by autofile_check when zero.

commit 98d6c751d3484b1a3d30cefaa692b4f993d81abd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 2 14:30:13 2021 -0500

    Fix CardReader string args

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 9528c4ac28..cf876ce9c7 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -91,8 +91,8 @@ public:
   static void manage_media();
 
   // SD Card Logging
-  static void openLogFile(char * const path);
-  static void write_command(char * const buf);
+  static void openLogFile(const char * const path);
+  static void write_command(const char * const buf);
 
   #if DISABLED(NO_SD_AUTOSTART)     // Auto-Start auto#.g file handling
     static uint8_t autofile_index;  // Next auto#.g index to run, plus one. Ignored by autofile_check when zero.
@@ -103,7 +103,7 @@ public:
 
   // Basic file ops
   static void openFileRead(char * const path, const uint8_t subcall=0);
-  static void openFileWrite(char * const path);
+  static void openFileWrite(const char * const path);
   static void closefile(const bool store_location=false);
   static bool fileExists(const char * const name);
   static void removeFile(const char * const name);

commit 8b6718c6320c32abe0fa1de56a033aca54ff0b76
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 4 18:07:16 2021 -0500

    misc. pointer formatting

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 1f917f8576..9528c4ac28 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -141,7 +141,7 @@ public:
   static inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
 
   // Helper for open and remove
-  static const char* diveToFile(const bool update_cwd, SdFile*& curDir, const char * const path, const bool echo=false);
+  static const char* diveToFile(const bool update_cwd, SdFile* &curDir, const char * const path, const bool echo=false);
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void presort();
@@ -168,8 +168,8 @@ public:
   static inline void setIndex(const uint32_t index) { file.seekSet((sdpos = index)); }
   static inline char* getWorkDirName() { workDir.getDosName(filename); return filename; }
   static inline int16_t get() { int16_t out = (int16_t)file.read(); sdpos = file.curPosition(); return out; }
-  static inline int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
-  static inline int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
+  static inline int16_t read(void *buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
+  static inline int16_t write(void *buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
 
   static Sd2Card& getSd2Card() { return sd2card; }
 

commit 3b73b115ca9366f0155986b717d4c85c31ed2f80
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 29 20:36:37 2021 -0500

    Apply pointer formatting

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 4399d9a4b6..1f917f8576 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -122,7 +122,7 @@ public:
 
   // Select a file
   static void selectFileByIndex(const uint16_t nr);
-  static void selectFileByName(const char* const match);
+  static void selectFileByName(const char * const match);
 
   // Print job
   static void openAndPrintFile(const char *name);   // (working directory)

commit 1affbe2100c32f79d469b059be3eddd364a80431
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 12 06:54:42 2021 -0600

    Clean up, optimize ExtUI/TFT code (#21333)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index f823b79e7a..4399d9a4b6 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -23,8 +23,6 @@
 
 #include "../inc/MarlinConfig.h"
 
-#define IFSD(A,B) TERN(SDSUPPORT,A,B)
-
 #if ENABLED(SDSUPPORT)
 
 extern const char M23_STR[], M24_STR[];

commit fe0b7700335470f03f5b5b8404b126efca8afbb6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 10 11:33:29 2021 -0600

    Fix serial index types

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 0a89bbba78..f823b79e7a 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -72,9 +72,9 @@ public:
   // Fast! binary file transfer
   #if ENABLED(BINARY_FILE_TRANSFER)
     #if HAS_MULTI_SERIAL
-      static int8_t transfer_port_index;
+      static serial_index_t transfer_port_index;
     #else
-      static constexpr int8_t transfer_port_index = 0;
+      static constexpr serial_index_t transfer_port_index = 0;
     #endif
   #endif
 

commit 07b4cc145bf6d84245b93f9f72fb0ac0f9d8d380
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Mon Feb 1 01:11:50 2021 +0100

    Fix AutoReporter implementation (#20959)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index b10a5acd0d..0a89bbba78 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -179,13 +179,8 @@ public:
     //
     // SD Auto Reporting
     //
-    #if HAS_MULTI_SERIAL
-      static serial_index_t auto_report_port;
-    #else
-      static constexpr serial_index_t auto_report_port = 0;
-    #endif
-    class AutoReportSD : public AutoReporter<auto_report_port> { void auto_report(); };
-    static AutoReportSD auto_reporter;
+    struct AutoReportSD { static void report() { report_status(); } };
+    static AutoReporter<AutoReportSD> auto_reporter;
   #endif
 
 private:

commit 9d0e64a725290233d6002017147c578ffd32c504
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jan 28 20:40:20 2021 -0600

    AutoReport class (Temperature, Cardreader) (#20913)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 14529fbff1..b10a5acd0d 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -59,6 +59,10 @@ typedef struct {
     ;
 } card_flags_t;
 
+#if ENABLED(AUTO_REPORT_SD_STATUS)
+  #include "../libs/autoreport.h"
+#endif
+
 class CardReader {
 public:
   static card_flags_t flag;                         // Flags (above)
@@ -172,13 +176,16 @@ public:
   static Sd2Card& getSd2Card() { return sd2card; }
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
-    static void auto_report_sd_status();
-    static inline void set_auto_report_interval(uint8_t v) {
-      TERN_(HAS_MULTI_SERIAL, auto_report_port = multiSerial.portMask);
-      NOMORE(v, 60);
-      auto_report_sd_interval = v;
-      next_sd_report_ms = millis() + 1000UL * v;
-    }
+    //
+    // SD Auto Reporting
+    //
+    #if HAS_MULTI_SERIAL
+      static serial_index_t auto_report_port;
+    #else
+      static constexpr serial_index_t auto_report_port = 0;
+    #endif
+    class AutoReportSD : public AutoReporter<auto_report_port> { void auto_report(); };
+    static AutoReportSD auto_reporter;
   #endif
 
 private:
@@ -260,17 +267,6 @@ private:
     static char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
   #endif
 
-  //
-  // SD Auto Reporting
-  //
-  #if ENABLED(AUTO_REPORT_SD_STATUS)
-    static uint8_t auto_report_sd_interval;
-    static millis_t next_sd_report_ms;
-    #if HAS_MULTI_SERIAL
-      static serial_index_t auto_report_port;
-    #endif
-  #endif
-
   //
   // Directory items
   //

commit 7bbdbcfb6db4c6d35e4aaffca06073dd2bfc6719
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 28 02:19:12 2021 -0600

    Serial refactor followup

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 10beea5ec4..14529fbff1 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -174,7 +174,7 @@ public:
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     static void auto_report_sd_status();
     static inline void set_auto_report_interval(uint8_t v) {
-      TERN_(HAS_MULTI_SERIAL, auto_report_port = serialHook.portMask);
+      TERN_(HAS_MULTI_SERIAL, auto_report_port = multiSerial.portMask);
       NOMORE(v, 60);
       auto_report_sd_interval = v;
       next_sd_report_ms = millis() + 1000UL * v;

commit 3f01b222b2b4f77cff66096dd5a18a64828e1fa4
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Thu Jan 28 09:02:06 2021 +0100

    Refactor serial class with templates (#20783)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 272e213800..10beea5ec4 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -174,7 +174,7 @@ public:
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     static void auto_report_sd_status();
     static inline void set_auto_report_interval(uint8_t v) {
-      TERN_(HAS_MULTI_SERIAL, auto_report_port = serial_port_index);
+      TERN_(HAS_MULTI_SERIAL, auto_report_port = serialHook.portMask);
       NOMORE(v, 60);
       auto_report_sd_interval = v;
       next_sd_report_ms = millis() + 1000UL * v;

commit c929fb52dd5ed9b265f93e3df4b69ac8ea581735
Author: ellensp <ellensp@hotmail.com>
Date:   Thu Jan 28 20:47:12 2021 +1300

    Meatpack::report_state on serial port init (#20903)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 7a312b1b57..272e213800 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -267,7 +267,7 @@ private:
     static uint8_t auto_report_sd_interval;
     static millis_t next_sd_report_ms;
     #if HAS_MULTI_SERIAL
-      static int8_t auto_report_port;
+      static serial_index_t auto_report_port;
     #endif
   #endif
 

commit d33fe2378c25d258b02440aef6cc31e36753f98f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 22 15:01:19 2021 -0600

    Move common strings (#20846)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index b775d8a873..7a312b1b57 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -27,6 +27,8 @@
 
 #if ENABLED(SDSUPPORT)
 
+extern const char M23_STR[], M24_STR[];
+
 #if BOTH(SDCARD_SORT_ALPHA, SDSORT_DYNAMIC_RAM)
   #define SD_RESORT 1
 #endif

commit 7f20184ebcac95e7e8542a1a24d801af6f594596
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Dec 7 05:53:15 2020 -0600

    Fix auto#.g file handling, add NO_SD_AUTOSTART (#20071)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index dabbf719f9..b775d8a873 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -90,10 +90,12 @@ public:
   static void openLogFile(char * const path);
   static void write_command(char * const buf);
 
-  // Auto-Start files
-  static int8_t autostart_index;                    // Index of autoX.g files
-  static void beginautostart();
-  static void checkautostart();
+  #if DISABLED(NO_SD_AUTOSTART)     // Auto-Start auto#.g file handling
+    static uint8_t autofile_index;  // Next auto#.g index to run, plus one. Ignored by autofile_check when zero.
+    static void autofile_begin();   // Begin check. Called automatically after boot-up.
+    static bool autofile_check();   // Check for the next auto-start file and run it.
+    static inline void autofile_cancel() { autofile_index = 0; }
+  #endif
 
   // Basic file ops
   static void openFileRead(char * const path, const uint8_t subcall=0);

commit b6a32500c401877e3ee1300fa613e81086bb31d3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 26 21:18:40 2020 -0600

    M808 Repeat Markers (#20084)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index c6fe37400c..dabbf719f9 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -159,9 +159,9 @@ public:
   static inline uint32_t getIndex() { return sdpos; }
   static inline uint32_t getFileSize() { return filesize; }
   static inline bool eof() { return sdpos >= filesize; }
-  static inline void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
+  static inline void setIndex(const uint32_t index) { file.seekSet((sdpos = index)); }
   static inline char* getWorkDirName() { workDir.getDosName(filename); return filename; }
-  static inline int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
+  static inline int16_t get() { int16_t out = (int16_t)file.read(); sdpos = file.curPosition(); return out; }
   static inline int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
   static inline int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
 
@@ -244,7 +244,8 @@ private:
   static SdVolume volume;
   static SdFile file;
 
-  static uint32_t filesize, sdpos;
+  static uint32_t filesize, // Total size of the current file, in bytes
+                  sdpos;    // Index most recently read (one behind file.getPos)
 
   //
   // Procedure calls to other files

commit f17394d67740e1f5591b3e0e23cc7313b218776d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Nov 9 18:53:19 2020 -0600

    Ability to disable M32

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 33645b6531..c6fe37400c 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -249,12 +249,11 @@ private:
   //
   // Procedure calls to other files
   //
-  #ifndef SD_PROCEDURE_DEPTH
-    #define SD_PROCEDURE_DEPTH 1
+  #if HAS_MEDIA_SUBCALLS
+    static uint8_t file_subcall_ctr;
+    static uint32_t filespos[SD_PROCEDURE_DEPTH];
+    static char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
   #endif
-  static uint8_t file_subcall_ctr;
-  static uint32_t filespos[SD_PROCEDURE_DEPTH];
-  static char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
 
   //
   // SD Auto Reporting

commit 6d4c82f4d87fdc69579f50faac6146244e648027
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 28 15:46:12 2020 -0500

    Fix diveToFile with open Dir object (#19539)
    
    * Fix CardReader diveToFile
    * Add CardReader::fileExists

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 62a6d87acf..33645b6531 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -99,6 +99,7 @@ public:
   static void openFileRead(char * const path, const uint8_t subcall=0);
   static void openFileWrite(char * const path);
   static void closefile(const bool store_location=false);
+  static bool fileExists(const char * const name);
   static void removeFile(const char * const name);
 
   static inline char* longest_filename() { return longFilename[0] ? longFilename : filename; }

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 8efa6c720e..62a6d87acf 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit e90bbb37d4f956ee4050ff02a4f9b1e0275a87cd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jul 16 22:20:55 2020 -0500

    Tweak and use SD_ORDER

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 36b81910a8..8efa6c720e 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -31,7 +31,11 @@
   #define SD_RESORT 1
 #endif
 
-#define SD_ORDER(N,C) (TERN(SDCARD_RATHERRECENTFIRST, C - 1 - (N), N))
+#if ENABLED(SDCARD_RATHERRECENTFIRST) && DISABLED(SDCARD_SORT_ALPHA)
+  #define SD_ORDER(N,C) ((C) - 1 - (N))
+#else
+  #define SD_ORDER(N,C) N
+#endif
 
 #define MAX_DIR_DEPTH     10       // Maximum folder depth
 #define MAXDIRNAMELENGTH   8       // DOS folder name size

commit f4c258dc2355fee871bec6e11095c7c4777b160d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 16 01:45:27 2020 -0500

    Creality Ender 3 v2 (#17719)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 4f488e3148..36b81910a8 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -152,6 +152,7 @@ public:
 
   static inline bool isFileOpen() { return isMounted() && file.isOpen(); }
   static inline uint32_t getIndex() { return sdpos; }
+  static inline uint32_t getFileSize() { return filesize; }
   static inline bool eof() { return sdpos >= filesize; }
   static inline void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
   static inline char* getWorkDirName() { workDir.getDosName(filename); return filename; }

commit 63717822637064b347d046f8f39be824eff51785
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 12 05:50:28 2020 -0500

    Add HAS_MULTI_SERIAL conditional

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index f783f96ca7..4f488e3148 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -61,7 +61,7 @@ public:
 
   // Fast! binary file transfer
   #if ENABLED(BINARY_FILE_TRANSFER)
-    #if NUM_SERIAL > 1
+    #if HAS_MULTI_SERIAL
       static int8_t transfer_port_index;
     #else
       static constexpr int8_t transfer_port_index = 0;
@@ -164,9 +164,7 @@ public:
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     static void auto_report_sd_status();
     static inline void set_auto_report_interval(uint8_t v) {
-      #if NUM_SERIAL > 1
-        auto_report_port = serial_port_index;
-      #endif
+      TERN_(HAS_MULTI_SERIAL, auto_report_port = serial_port_index);
       NOMORE(v, 60);
       auto_report_sd_interval = v;
       next_sd_report_ms = millis() + 1000UL * v;
@@ -258,7 +256,7 @@ private:
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     static uint8_t auto_report_sd_interval;
     static millis_t next_sd_report_ms;
-    #if NUM_SERIAL > 1
+    #if HAS_MULTI_SERIAL
       static int8_t auto_report_port;
     #endif
   #endif

commit 2a959cde6fdd5edea5c9ff20d613db024eb96749
Author: Marcio T <mlt4356-github@yahoo.com>
Date:   Mon May 4 12:57:12 2020 -0600

    Fix undefined/unused, Touch UI (#17874)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index acaabf2deb..f783f96ca7 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -23,6 +23,8 @@
 
 #include "../inc/MarlinConfig.h"
 
+#define IFSD(A,B) TERN(SDSUPPORT,A,B)
+
 #if ENABLED(SDSUPPORT)
 
 #if BOTH(SDCARD_SORT_ALPHA, SDSORT_DYNAMIC_RAM)
@@ -30,7 +32,6 @@
 #endif
 
 #define SD_ORDER(N,C) (TERN(SDCARD_RATHERRECENTFIRST, C - 1 - (N), N))
-#define IFSD(A,B) TERN(SDSUPPORT,A,B)
 
 #define MAX_DIR_DEPTH     10       // Maximum folder depth
 #define MAXDIRNAMELENGTH   8       // DOS folder name size

commit 3d3d2a923b733be0b9ad4aa2c5c596a6bb5f93f0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Apr 28 19:14:43 2020 -0500

    Cleanup with updated macros

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index b5723694a9..acaabf2deb 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -30,6 +30,7 @@
 #endif
 
 #define SD_ORDER(N,C) (TERN(SDCARD_RATHERRECENTFIRST, C - 1 - (N), N))
+#define IFSD(A,B) TERN(SDSUPPORT,A,B)
 
 #define MAX_DIR_DEPTH     10       // Maximum folder depth
 #define MAXDIRNAMELENGTH   8       // DOS folder name size

commit 967c1d853489619e09381dddfecdac44a8fc1805
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 25 18:39:47 2020 -0500

    Do SD sort order in CardReader

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index ef1912c8bd..b5723694a9 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -29,6 +29,8 @@
   #define SD_RESORT 1
 #endif
 
+#define SD_ORDER(N,C) (TERN(SDCARD_RATHERRECENTFIRST, C - 1 - (N), N))
+
 #define MAX_DIR_DEPTH     10       // Maximum folder depth
 #define MAXDIRNAMELENGTH   8       // DOS folder name size
 #define MAXPATHNAMELENGTH  (1 + (MAXDIRNAMELENGTH + 1) * (MAX_DIR_DEPTH) + 1 + FILENAME_LENGTH) // "/" + N * ("ADIRNAME/") + "filename.ext"

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 1fee807495..ef1912c8bd 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -25,7 +25,9 @@
 
 #if ENABLED(SDSUPPORT)
 
-#define SD_RESORT BOTH(SDCARD_SORT_ALPHA, SDSORT_DYNAMIC_RAM)
+#if BOTH(SDCARD_SORT_ALPHA, SDSORT_DYNAMIC_RAM)
+  #define SD_RESORT 1
+#endif
 
 #define MAX_DIR_DEPTH     10       // Maximum folder depth
 #define MAXDIRNAMELENGTH   8       // DOS folder name size
@@ -113,11 +115,7 @@ public:
   static void getAbsFilename(char *dst);
   static void printFilename();
   static void startFileprint();
-  static void endFilePrint(
-    #if SD_RESORT
-      const bool re_sort=false
-    #endif
-  );
+  static void endFilePrint(TERN_(SD_RESORT, const bool re_sort=false));
   static void report_status();
   static inline void pauseSDPrint() { flag.sdprinting = false; }
   static inline bool isPaused() { return isFileOpen() && !flag.sdprinting; }

commit 65f6a373b0a77da23f0758d5d1520e404436cec0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 4 00:08:25 2020 -0500

    Refactor SD detect handler (#17380)
    
    Co-Authored-By: Eric Ptak <trouch@users.noreply.github.com>

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 955a8b69b3..1fee807495 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -73,6 +73,9 @@ public:
   static inline bool isMounted() { return flag.mounted; }
   static void ls();
 
+  // Handle media insert/remove
+  static void manage_media();
+
   // SD Card Logging
   static void openLogFile(char * const path);
   static void write_command(char * const buf);

commit 747b964295118d425ad41cd7593dae48ccf9f14f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 28 03:18:53 2020 -0500

    Clean up user-wait, SD completion (#17315)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 749ece01d3..955a8b69b3 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -49,7 +49,6 @@ typedef struct {
 
 class CardReader {
 public:
-  static uint8_t sdprinting_done_state;
   static card_flags_t flag;                         // Flags (above)
   static char filename[FILENAME_LENGTH],            // DOS 8.3 filename of the selected item
               longFilename[LONG_FILENAME_LENGTH];   // Long name of the selected item

commit 8f66dbfcd51aeae4f6168cfce971964bb46c9454
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 10 15:43:06 2020 -0500

    SD_DETECT_INVERTED => SD_DETECT_STATE (#17112)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index aee9ae5804..749ece01d3 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -276,7 +276,7 @@ private:
 #if ENABLED(USB_FLASH_DRIVE_SUPPORT)
   #define IS_SD_INSERTED() Sd2Card::isInserted()
 #elif PIN_EXISTS(SD_DETECT)
-  #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) != ENABLED(SD_DETECT_INVERTED))
+  #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) == SD_DETECT_STATE)
 #else
   // No card detect line? Assume the card is inserted.
   #define IS_SD_INSERTED() true

commit 64d092935b27ff89955f0430eef5815b15e5a92d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 7 22:20:41 2020 -0600

    More useful ENABLED / DISABLED macros (#17054)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index be700401ee..aee9ae5804 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -276,11 +276,7 @@ private:
 #if ENABLED(USB_FLASH_DRIVE_SUPPORT)
   #define IS_SD_INSERTED() Sd2Card::isInserted()
 #elif PIN_EXISTS(SD_DETECT)
-  #if ENABLED(SD_DETECT_INVERTED)
-    #define IS_SD_INSERTED()  READ(SD_DETECT_PIN)
-  #else
-    #define IS_SD_INSERTED() !READ(SD_DETECT_PIN)
-  #endif
+  #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) != ENABLED(SD_DETECT_INVERTED))
 #else
   // No card detect line? Assume the card is inserted.
   #define IS_SD_INSERTED() true

commit 5071fe82ab221627ef10cf4125896e3d2585993a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Feb 25 22:18:14 2020 -0600

    Ensure proper SD print completion (#16967)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 8e09f44479..be700401ee 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -49,6 +49,7 @@ typedef struct {
 
 class CardReader {
 public:
+  static uint8_t sdprinting_done_state;
   static card_flags_t flag;                         // Flags (above)
   static char filename[FILENAME_LENGTH],            // DOS 8.3 filename of the selected item
               longFilename[LONG_FILENAME_LENGTH];   // Long name of the selected item
@@ -108,9 +109,9 @@ public:
   static void openAndPrintFile(const char *name);   // (working directory)
   static void fileHasFinished();
   static void getAbsFilename(char *dst);
-  static void startFileprint();
   static void printFilename();
-  static void stopSDPrint(
+  static void startFileprint();
+  static void endFilePrint(
     #if SD_RESORT
       const bool re_sort=false
     #endif

commit 29ec868c4bc19058f02039c2a90e21fed816c257
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Feb 22 20:45:59 2020 -0600

    Commit last SD line before fileHasFinished

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 54d541c38a..8e09f44479 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -106,7 +106,7 @@ public:
 
   // Print job
   static void openAndPrintFile(const char *name);   // (working directory)
-  static void printingHasFinished();
+  static void fileHasFinished();
   static void getAbsFilename(char *dst);
   static void startFileprint();
   static void printFilename();

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 5d3a2e71b3..54d541c38a 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 48098b1675a7e2ac0412b66328e3ad6a6eaeb9c8
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Mon Jan 27 07:34:17 2020 +0700

    Preserve CWD for write/remove file (#16667)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index f7081b95b3..5d3a2e71b3 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -125,7 +125,7 @@ public:
   static inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
 
   // Helper for open and remove
-  static const char* diveToFile(SdFile*& curDir, const char * const path, const bool echo=false);
+  static const char* diveToFile(const bool update_cwd, SdFile*& curDir, const char * const path, const bool echo=false);
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void presort();

commit f3d64b7115d0dc697c9a0032bf3d4d40475ac9ea
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Dec 12 18:46:49 2019 -0600

    Cardreader read/write open methods

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 8ef8dbeae3..f7081b95b3 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -83,7 +83,8 @@ public:
   static void checkautostart();
 
   // Basic file ops
-  static void openFile(char * const path, const bool read, const bool subcall=false);
+  static void openFileRead(char * const path, const uint8_t subcall=0);
+  static void openFileWrite(char * const path);
   static void closefile(const bool store_location=false);
   static void removeFile(const char * const name);
 

commit dd0c5de4c70746340d2a237dc0b820e77bfef469
Author: Francois Rainville <francois.rainville.1@gmail.com>
Date:   Wed Oct 16 14:51:18 2019 -0400

    Provide LONG_FILENAME_LENGTH for headers (#15582)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index a1d0074fda..8ef8dbeae3 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -296,4 +296,6 @@ extern CardReader card;
 #define IS_SD_PAUSED()    false
 #define IS_SD_FILE_OPEN() false
 
+#define LONG_FILENAME_LENGTH 0
+
 #endif // !SDSUPPORT

commit b20d5a7cc627164877c95859baaa614f8afc7b99
Author: LinFor <linfor@gmail.com>
Date:   Fri Oct 11 05:03:33 2019 +0300

    Estimate Remaining Time (graphical display) (#15497)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 6cc856b6cb..a1d0074fda 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -118,6 +118,9 @@ public:
   static inline void pauseSDPrint() { flag.sdprinting = false; }
   static inline bool isPaused() { return isFileOpen() && !flag.sdprinting; }
   static inline bool isPrinting() { return flag.sdprinting; }
+  #if HAS_PRINT_PROGRESS_PERMYRIAD
+    static inline uint16_t permyriadDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 9999) / 10000) : 0; }
+  #endif
   static inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
 
   // Helper for open and remove

commit 72d791a73682fa676959189c89dbf34e85bbfe61
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 2 18:54:20 2019 -0500

    Standardize active/paused functions

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index e089f86f9e..6cc856b6cb 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -282,6 +282,7 @@ private:
 #endif
 
 #define IS_SD_PRINTING()  card.flag.sdprinting
+#define IS_SD_PAUSED()    card.isPaused()
 #define IS_SD_FILE_OPEN() card.isFileOpen()
 
 extern CardReader card;
@@ -289,6 +290,7 @@ extern CardReader card;
 #else // !SDSUPPORT
 
 #define IS_SD_PRINTING()  false
+#define IS_SD_PAUSED()    false
 #define IS_SD_FILE_OPEN() false
 
 #endif // !SDSUPPORT

commit 2277c6dffcdb9acbd33e9d020417b71b2b766f25
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Sep 28 15:28:05 2019 -0500

    Optimize SD card reader, sorting (#15395)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 629efb2966..e089f86f9e 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -33,8 +33,6 @@
 
 #include "SdFile.h"
 
-enum LsAction : uint8_t { LS_SerialPrint, LS_Count, LS_GetFilename };
-
 typedef struct {
   bool saving:1,
        logging:1,
@@ -51,48 +49,80 @@ typedef struct {
 
 class CardReader {
 public:
+  static card_flags_t flag;                         // Flags (above)
+  static char filename[FILENAME_LENGTH],            // DOS 8.3 filename of the selected item
+              longFilename[LONG_FILENAME_LENGTH];   // Long name of the selected item
+
+  // Fast! binary file transfer
+  #if ENABLED(BINARY_FILE_TRANSFER)
+    #if NUM_SERIAL > 1
+      static int8_t transfer_port_index;
+    #else
+      static constexpr int8_t transfer_port_index = 0;
+    #endif
+  #endif
+
+  // // // Methods // // //
+
   CardReader();
 
+  static SdFile getroot() { return root; }
+
   static void mount();
-  static void write_command(char *buf);
+  static void release();
+  static inline bool isMounted() { return flag.mounted; }
+  static void ls();
 
+  // SD Card Logging
+  static void openLogFile(char * const path);
+  static void write_command(char * const buf);
+
+  // Auto-Start files
+  static int8_t autostart_index;                    // Index of autoX.g files
   static void beginautostart();
   static void checkautostart();
 
+  // Basic file ops
   static void openFile(char * const path, const bool read, const bool subcall=false);
-  static void openLogFile(char * const path);
-  static void removeFile(const char * const name);
   static void closefile(const bool store_location=false);
-  static void release();
-  static void openAndPrintFile(const char *name);
-  static void startFileprint();
-  static void stopSDPrint(
-    #if SD_RESORT
-      const bool re_sort=false
-    #endif
-  );
-  static void report_status();
-  static void printingHasFinished();
-  static void printFilename();
+  static void removeFile(const char * const name);
 
+  static inline char* longest_filename() { return longFilename[0] ? longFilename : filename; }
   #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
-    static void printLongPath(char *path);
+    static void printLongPath(char * const path);   // Used by M33
   #endif
 
-  static void getfilename(uint16_t nr, const char* const match=nullptr);
+  // Working Directory for SD card menu
+  static void cdroot();
+  static void cd(const char *relpath);
+  static int8_t cdup();
   static uint16_t countFilesInWorkDir();
+  static uint16_t get_num_Files();
 
-  static void getAbsFilename(char *t);
+  // Select a file
+  static void selectFileByIndex(const uint16_t nr);
+  static void selectFileByName(const char* const match);
 
-  static void ls();
-  static void chdir(const char *relpath);
-  static int8_t updir();
-  static void setroot();
+  // Print job
+  static void openAndPrintFile(const char *name);   // (working directory)
+  static void printingHasFinished();
+  static void getAbsFilename(char *dst);
+  static void startFileprint();
+  static void printFilename();
+  static void stopSDPrint(
+    #if SD_RESORT
+      const bool re_sort=false
+    #endif
+  );
+  static void report_status();
+  static inline void pauseSDPrint() { flag.sdprinting = false; }
+  static inline bool isPaused() { return isFileOpen() && !flag.sdprinting; }
+  static inline bool isPrinting() { return flag.sdprinting; }
+  static inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
 
+  // Helper for open and remove
   static const char* diveToFile(SdFile*& curDir, const char * const path, const bool echo=false);
 
-  static uint16_t get_num_Files();
-
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void presort();
     static void getfilename_sorted(const uint16_t nr);
@@ -102,7 +132,7 @@ public:
       //FORCE_INLINE static void setSortReverse(bool b) { sort_reverse = b; }
     #endif
   #else
-    FORCE_INLINE static void getfilename_sorted(const uint16_t nr) { getfilename(nr); }
+    FORCE_INLINE static void getfilename_sorted(const uint16_t nr) { selectFileByIndex(nr); }
   #endif
 
   #if ENABLED(POWER_LOSS_RECOVERY)
@@ -111,17 +141,12 @@ public:
     static void removeJobRecoveryFile();
   #endif
 
-  static inline void pauseSDPrint() { flag.sdprinting = false; }
-  static inline bool isMounted() { return flag.mounted; }
   static inline bool isFileOpen() { return isMounted() && file.isOpen(); }
-  static inline bool isPaused() { return isFileOpen() && !flag.sdprinting; }
-  static inline bool isPrinting() { return flag.sdprinting; }
+  static inline uint32_t getIndex() { return sdpos; }
   static inline bool eof() { return sdpos >= filesize; }
-  static inline int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
   static inline void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
-  static inline uint32_t getIndex() { return sdpos; }
-  static inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
   static inline char* getWorkDirName() { workDir.getDosName(filename); return filename; }
+  static inline int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
   static inline int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
   static inline int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
 
@@ -139,27 +164,16 @@ public:
     }
   #endif
 
-  static inline char* longest_filename() { return longFilename[0] ? longFilename : filename; }
-
-public:
-  static card_flags_t flag;
-  static char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
-  static int8_t autostart_index;
-  static SdFile getroot() { return root; }
-
-  #if ENABLED(BINARY_FILE_TRANSFER)
-    #if NUM_SERIAL > 1
-      static int8_t transfer_port_index;
-    #else
-      static constexpr int8_t transfer_port_index = 0;
-    #endif
-  #endif
-
 private:
+  //
+  // Working directory and parents
+  //
   static SdFile root, workDir, workDirParents[MAX_DIR_DEPTH];
   static uint8_t workDirDepth;
 
-  // Sort files and folders alphabetically.
+  //
+  // Alphabetical file and folder sorting
+  //
   #if ENABLED(SDCARD_SORT_ALPHA)
     static uint16_t sort_count;   // Count of sorted items in the current directory
     #if ENABLED(SDSORT_GCODE)
@@ -188,6 +202,7 @@ private:
 
       // If using dynamic ram for names, allocate on the heap.
       #if ENABLED(SDSORT_CACHE_NAMES)
+        static uint16_t nrFiles; // Cache the total count
         #if ENABLED(SDSORT_DYNAMIC_RAM)
           static char **sortshort, **sortnames;
         #else
@@ -216,25 +231,21 @@ private:
   static SdVolume volume;
   static SdFile file;
 
+  static uint32_t filesize, sdpos;
+
+  //
+  // Procedure calls to other files
+  //
   #ifndef SD_PROCEDURE_DEPTH
     #define SD_PROCEDURE_DEPTH 1
   #endif
-
   static uint8_t file_subcall_ctr;
   static uint32_t filespos[SD_PROCEDURE_DEPTH];
   static char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
 
-  static uint32_t filesize, sdpos;
-
-  static LsAction lsAction; //stored for recursion.
-  static uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
-  static char *diveDirName;
-  static void lsDive(const char *prepend, SdFile parent, const char * const match=nullptr);
-
-  #if ENABLED(SDCARD_SORT_ALPHA)
-    static void flush_presort();
-  #endif
-
+  //
+  // SD Auto Reporting
+  //
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     static uint8_t auto_report_sd_interval;
     static millis_t next_sd_report_ms;
@@ -242,6 +253,19 @@ private:
       static int8_t auto_report_port;
     #endif
   #endif
+
+  //
+  // Directory items
+  //
+  static bool is_dir_or_gcode(const dir_t &p);
+  static int countItems(SdFile dir);
+  static void selectByIndex(SdFile dir, const uint8_t index);
+  static void selectByName(SdFile dir, const char * const match);
+  static void printListing(SdFile parent, const char * const prepend=nullptr);
+
+  #if ENABLED(SDCARD_SORT_ALPHA)
+    static void flush_presort();
+  #endif
 };
 
 #if ENABLED(USB_FLASH_DRIVE_SUPPORT)

commit f01f0d1956bb5cf0a9efb538b334ed6165a3e20f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 16 20:31:08 2019 -0500

    Drop C-style 'void' argument

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 38b6004e83..629efb2966 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -128,7 +128,7 @@ public:
   static Sd2Card& getSd2Card() { return sd2card; }
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
-    static void auto_report_sd_status(void);
+    static void auto_report_sd_status();
     static inline void set_auto_report_interval(uint8_t v) {
       #if NUM_SERIAL > 1
         auto_report_port = serial_port_index;

commit 98233b1de0c5871869f9f74c6e4a79247f7fb4f3
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Tue Sep 17 05:49:55 2019 +0700

    Add root flag to CardReader (#15275)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 94e2a9821c..38b6004e83 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -41,6 +41,7 @@ typedef struct {
        sdprinting:1,
        mounted:1,
        filenameIsDir:1,
+       workDirIsRoot:1,
        abort_sd_printing:1
        #if ENABLED(BINARY_FILE_TRANSFER)
          , binary_mode:1
@@ -79,7 +80,7 @@ public:
   #endif
 
   static void getfilename(uint16_t nr, const char* const match=nullptr);
-  static uint16_t getnrfilenames();
+  static uint16_t countFilesInWorkDir();
 
   static void getAbsFilename(char *t);
 

commit d5f520388077e697209b02f64e5ade61599df970
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 15 03:10:59 2019 -0500

    Use "mount" as card verb

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index c78df1949c..94e2a9821c 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -39,7 +39,7 @@ typedef struct {
   bool saving:1,
        logging:1,
        sdprinting:1,
-       detected:1,
+       mounted:1,
        filenameIsDir:1,
        abort_sd_printing:1
        #if ENABLED(BINARY_FILE_TRANSFER)
@@ -52,7 +52,7 @@ class CardReader {
 public:
   CardReader();
 
-  static void initsd();
+  static void mount();
   static void write_command(char *buf);
 
   static void beginautostart();
@@ -111,8 +111,8 @@ public:
   #endif
 
   static inline void pauseSDPrint() { flag.sdprinting = false; }
-  static inline bool isDetected() { return flag.detected; }
-  static inline bool isFileOpen() { return isDetected() && file.isOpen(); }
+  static inline bool isMounted() { return flag.mounted; }
+  static inline bool isFileOpen() { return isMounted() && file.isOpen(); }
   static inline bool isPaused() { return isFileOpen() && !flag.sdprinting; }
   static inline bool isPrinting() { return flag.sdprinting; }
   static inline bool eof() { return sdpos >= filesize; }

commit 15bea5043c13c5958aac691e6e86e2489ca8aba4
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Sat Sep 14 13:42:28 2019 +0200

    Followup to SD menu optimization (#15252)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 8eedfc384e..c78df1949c 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -120,7 +120,7 @@ public:
   static inline void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
   static inline uint32_t getIndex() { return sdpos; }
   static inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
-  static inline char* getWorkDirName() { workDir.getFilename(filename); return filename; }
+  static inline char* getWorkDirName() { workDir.getDosName(filename); return filename; }
   static inline int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
   static inline int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
 

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 623ca4dc7f..8eedfc384e 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 5515f884526b688bb2726244c76f8d2fa0a7ea24
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Tue May 28 07:50:48 2019 +0700

    Clarify SD longname string size (#14148)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 5bdbffaf20..623ca4dc7f 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -175,9 +175,11 @@ private:
     #endif
 
     #if BOTH(SDSORT_USES_RAM, SDSORT_CACHE_NAMES) && DISABLED(SDSORT_DYNAMIC_RAM)
-      #define SORTED_LONGNAME_MAXLEN ((SDSORT_CACHE_VFATS) * (FILENAME_LENGTH) + 1)
+      #define SORTED_LONGNAME_MAXLEN (SDSORT_CACHE_VFATS) * (FILENAME_LENGTH)
+      #define SORTED_LONGNAME_STORAGE (SORTED_LONGNAME_MAXLEN + 1)
     #else
       #define SORTED_LONGNAME_MAXLEN LONG_FILENAME_LENGTH
+      #define SORTED_LONGNAME_STORAGE SORTED_LONGNAME_MAXLEN
     #endif
 
     // Cache filenames to speed up SD menus.
@@ -189,10 +191,11 @@ private:
           static char **sortshort, **sortnames;
         #else
           static char sortshort[SDSORT_LIMIT][FILENAME_LENGTH];
-          static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN];
         #endif
-      #elif DISABLED(SDSORT_USES_STACK)
-        static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN];
+      #endif
+
+      #if (ENABLED(SDSORT_CACHE_NAMES) && DISABLED(SDSORT_DYNAMIC_RAM)) || NONE(SDSORT_CACHE_NAMES, SDSORT_USES_STACK)
+        static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_STORAGE];
       #endif
 
       // Folder sorting uses an isDir array when caching items.

commit d7b0369e393c57f42820011b372b93ae67430d1b
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Wed May 15 09:42:10 2019 +0200

    STM32: Fix SD EEPROM emulation conflict (#14012)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 2d5bc5eca1..5bdbffaf20 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -144,6 +144,7 @@ public:
   static card_flags_t flag;
   static char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
   static int8_t autostart_index;
+  static SdFile getroot() { return root; }
 
   #if ENABLED(BINARY_FILE_TRANSFER)
     #if NUM_SERIAL > 1

commit ad4ffa1d2fbd17ac09c816ba2052cdf714261042
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 9 11:45:55 2019 -0500

    Use C++ language supported 'nullptr' (#13944)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 700c44b087..2d5bc5eca1 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -78,7 +78,7 @@ public:
     static void printLongPath(char *path);
   #endif
 
-  static void getfilename(uint16_t nr, const char* const match=NULL);
+  static void getfilename(uint16_t nr, const char* const match=nullptr);
   static uint16_t getnrfilenames();
 
   static void getAbsFilename(char *t);
@@ -224,7 +224,7 @@ private:
   static LsAction lsAction; //stored for recursion.
   static uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
   static char *diveDirName;
-  static void lsDive(const char *prepend, SdFile parent, const char * const match=NULL);
+  static void lsDive(const char *prepend, SdFile parent, const char * const match=nullptr);
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void flush_presort();

commit c369477cb0267af9c15ef6045448d7fb3340ecbc
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Fri May 3 03:54:24 2019 +0700

    Fix bug: diveToFile breaks M23 (#13865)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 9faf050574..700c44b087 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -88,7 +88,7 @@ public:
   static int8_t updir();
   static void setroot();
 
-  static const char* diveToFile(SdFile*& curDir, const char * const path, const bool echo);
+  static const char* diveToFile(SdFile*& curDir, const char * const path, const bool echo=false);
 
   static uint16_t get_num_Files();
 

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 44a698bd5c..9faf050574 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -25,7 +25,7 @@
 
 #if ENABLED(SDSUPPORT)
 
-#define SD_RESORT ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_DYNAMIC_RAM)
+#define SD_RESORT BOTH(SDCARD_SORT_ALPHA, SDSORT_DYNAMIC_RAM)
 
 #define MAX_DIR_DEPTH     10       // Maximum folder depth
 #define MAXDIRNAMELENGTH   8       // DOS folder name size
@@ -173,7 +173,7 @@ private:
       static uint8_t sort_order[SDSORT_LIMIT];
     #endif
 
-    #if ENABLED(SDSORT_USES_RAM) && ENABLED(SDSORT_CACHE_NAMES) && DISABLED(SDSORT_DYNAMIC_RAM)
+    #if BOTH(SDSORT_USES_RAM, SDSORT_CACHE_NAMES) && DISABLED(SDSORT_DYNAMIC_RAM)
       #define SORTED_LONGNAME_MAXLEN ((SDSORT_CACHE_VFATS) * (FILENAME_LENGTH) + 1)
     #else
       #define SORTED_LONGNAME_MAXLEN LONG_FILENAME_LENGTH

commit fa236e9718cd2feb85a1986b8f56ad97cd2f4871
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Mar 1 19:29:48 2019 -0600

    General cleanup ahead of L64XX

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index a13633eafe..44a698bd5c 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -128,7 +128,7 @@ public:
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     static void auto_report_sd_status(void);
-    static inline void set_auto_report_interval(const uint8_t v) {
+    static inline void set_auto_report_interval(uint8_t v) {
       #if NUM_SERIAL > 1
         auto_report_port = serial_port_index;
       #endif

commit 2c10222e87925afa0c4adfbd15321866fbea23fc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 27 20:14:17 2019 -0600

    card.transfer_port => transfer_port_index

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 4e86be70f1..a13633eafe 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -147,9 +147,9 @@ public:
 
   #if ENABLED(BINARY_FILE_TRANSFER)
     #if NUM_SERIAL > 1
-      static int8_t transfer_port;
+      static int8_t transfer_port_index;
     #else
-      static constexpr int8_t transfer_port = 0;
+      static constexpr int8_t transfer_port_index = 0;
     #endif
   #endif
 

commit 4ab433d39136ed8c94a188a6cdec70c24432944a
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Thu Feb 28 01:57:48 2019 +0000

    Fix binary protocol with one serial port (#13270)
    
    - The `sdcard.transfer_port` variable is Marlin's internal serial port index, not the physical serial port number.
    - Added packet number to "ok" response so hosts don't need to wait for the ACK.
    - Renamed feature to `BINARY_FILE_TRANSFER`, as the speed up is only consequential to the ability to transfer binaries over serial.

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 958c1ce306..4e86be70f1 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -42,7 +42,7 @@ typedef struct {
        detected:1,
        filenameIsDir:1,
        abort_sd_printing:1
-       #if ENABLED(FAST_FILE_TRANSFER)
+       #if ENABLED(BINARY_FILE_TRANSFER)
          , binary_mode:1
        #endif
     ;
@@ -145,11 +145,11 @@ public:
   static char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
   static int8_t autostart_index;
 
-  #if ENABLED(FAST_FILE_TRANSFER)
+  #if ENABLED(BINARY_FILE_TRANSFER)
     #if NUM_SERIAL > 1
       static int8_t transfer_port;
     #else
-      static constexpr int8_t transfer_port = SERIAL_PORT;
+      static constexpr int8_t transfer_port = 0;
     #endif
   #endif
 

commit e15354e387cc825390fc4eaaf3ae4b784a8fd588
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 23 22:53:01 2019 -0600

    Simplify serial port redirect (#13234)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index bfd3eb7343..958c1ce306 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -70,24 +70,12 @@ public:
       const bool re_sort=false
     #endif
   );
-  static void report_status(
-    #if NUM_SERIAL > 1
-      const int8_t port = -1
-    #endif
-  );
+  static void report_status();
   static void printingHasFinished();
-  static void printFilename(
-    #if NUM_SERIAL > 1
-      const int8_t port = -1
-    #endif
-  );
+  static void printFilename();
 
   #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
-    static void printLongPath(char *path
-      #if NUM_SERIAL > 1
-        , const int8_t port = -1
-      #endif
-    );
+    static void printLongPath(char *path);
   #endif
 
   static void getfilename(uint16_t nr, const char* const match=NULL);
@@ -95,11 +83,7 @@ public:
 
   static void getAbsFilename(char *t);
 
-  static void ls(
-    #if NUM_SERIAL > 1
-      const int8_t port = -1
-    #endif
-  );
+  static void ls();
   static void chdir(const char *relpath);
   static int8_t updir();
   static void setroot();
@@ -144,13 +128,9 @@ public:
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     static void auto_report_sd_status(void);
-    static inline void set_auto_report_interval(uint8_t v
-      #if NUM_SERIAL > 1
-        , int8_t port
-      #endif
-    ) {
+    static inline void set_auto_report_interval(const uint8_t v) {
       #if NUM_SERIAL > 1
-        serialport = port;
+        auto_report_port = serial_port_index;
       #endif
       NOMORE(v, 60);
       auto_report_sd_interval = v;
@@ -167,9 +147,9 @@ public:
 
   #if ENABLED(FAST_FILE_TRANSFER)
     #if NUM_SERIAL > 1
-      static uint8_t transfer_port;
+      static int8_t transfer_port;
     #else
-      static constexpr uint8_t transfer_port = 0;
+      static constexpr int8_t transfer_port = SERIAL_PORT;
     #endif
   #endif
 
@@ -244,11 +224,7 @@ private:
   static LsAction lsAction; //stored for recursion.
   static uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
   static char *diveDirName;
-  static void lsDive(const char *prepend, SdFile parent, const char * const match=NULL
-    #if NUM_SERIAL > 1
-      , const int8_t port = -1
-    #endif
-  );
+  static void lsDive(const char *prepend, SdFile parent, const char * const match=NULL);
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     static void flush_presort();
@@ -258,7 +234,7 @@ private:
     static uint8_t auto_report_sd_interval;
     static millis_t next_sd_report_ms;
     #if NUM_SERIAL > 1
-      static int8_t serialport;
+      static int8_t auto_report_port;
     #endif
   #endif
 };

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index e4a18973b2..bfd3eb7343 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit a403d9a50c43f0c6b8aa16156ef7f5adcce99260
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Fri Jan 11 21:42:11 2019 -0500

    Improve menu pause / resume (#12876)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 9031ae9364..e4a18973b2 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -39,7 +39,7 @@ typedef struct {
   bool saving:1,
        logging:1,
        sdprinting:1,
-       cardOK:1,
+       detected:1,
        filenameIsDir:1,
        abort_sd_printing:1
        #if ENABLED(FAST_FILE_TRANSFER)
@@ -127,7 +127,10 @@ public:
   #endif
 
   static inline void pauseSDPrint() { flag.sdprinting = false; }
-  static inline bool isFileOpen() { return file.isOpen(); }
+  static inline bool isDetected() { return flag.detected; }
+  static inline bool isFileOpen() { return isDetected() && file.isOpen(); }
+  static inline bool isPaused() { return isFileOpen() && !flag.sdprinting; }
+  static inline bool isPrinting() { return flag.sdprinting; }
   static inline bool eof() { return sdpos >= filesize; }
   static inline int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
   static inline void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }

commit fb8111553e1e2622aa739be933ed6273c83d4c56
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jan 11 19:50:52 2019 -0600

    getStatus => report_status

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index b9c71875c8..9031ae9364 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -70,7 +70,7 @@ public:
       const bool re_sort=false
     #endif
   );
-  static void getStatus(
+  static void report_status(
     #if NUM_SERIAL > 1
       const int8_t port = -1
     #endif

commit 643e0066a05d555ce9c49e6f3f6b4964484cca76
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 20 05:36:19 2018 -0600

    Followup to #12451

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 57e4376300..b9c71875c8 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -159,7 +159,7 @@ public:
 
 public:
   static card_flags_t flag;
-  static char filename[FILENAME_LENGTH + 1], longFilename[LONG_FILENAME_LENGTH + 1];
+  static char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
   static int8_t autostart_index;
 
   #if ENABLED(FAST_FILE_TRANSFER)
@@ -204,11 +204,11 @@ private:
         #if ENABLED(SDSORT_DYNAMIC_RAM)
           static char **sortshort, **sortnames;
         #else
-          static char sortshort[SDSORT_LIMIT][FILENAME_LENGTH + 1];
-          static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN + 1];
+          static char sortshort[SDSORT_LIMIT][FILENAME_LENGTH];
+          static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN];
         #endif
       #elif DISABLED(SDSORT_USES_STACK)
-        static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN + 1];
+        static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN];
       #endif
 
       // Folder sorting uses an isDir array when caching items.
@@ -234,7 +234,7 @@ private:
 
   static uint8_t file_subcall_ctr;
   static uint32_t filespos[SD_PROCEDURE_DEPTH];
-  static char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH + 1];
+  static char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
 
   static uint32_t filesize, sdpos;
 

commit 66580f32c2f4d39a82b77e4b6982e7ea6dde0766
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 16 22:39:16 2018 -0600

    Make CardReader class static (#12451)
    
    * Make CardReader a static class
    * Make CardReader flags into bitfields

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index c8f114822e..57e4376300 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -27,106 +27,121 @@
 
 #define SD_RESORT ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_DYNAMIC_RAM)
 
-#define MAX_DIR_DEPTH 10          // Maximum folder depth
+#define MAX_DIR_DEPTH     10       // Maximum folder depth
+#define MAXDIRNAMELENGTH   8       // DOS folder name size
+#define MAXPATHNAMELENGTH  (1 + (MAXDIRNAMELENGTH + 1) * (MAX_DIR_DEPTH) + 1 + FILENAME_LENGTH) // "/" + N * ("ADIRNAME/") + "filename.ext"
 
 #include "SdFile.h"
 
 enum LsAction : uint8_t { LS_SerialPrint, LS_Count, LS_GetFilename };
 
+typedef struct {
+  bool saving:1,
+       logging:1,
+       sdprinting:1,
+       cardOK:1,
+       filenameIsDir:1,
+       abort_sd_printing:1
+       #if ENABLED(FAST_FILE_TRANSFER)
+         , binary_mode:1
+       #endif
+    ;
+} card_flags_t;
+
 class CardReader {
 public:
   CardReader();
 
-  void initsd();
-  void write_command(char *buf);
+  static void initsd();
+  static void write_command(char *buf);
 
-  void beginautostart();
-  void checkautostart();
+  static void beginautostart();
+  static void checkautostart();
 
-  void openFile(char * const path, const bool read, const bool subcall=false);
-  void openLogFile(char * const path);
-  void removeFile(const char * const name);
-  void closefile(const bool store_location=false);
-  void release();
-  void openAndPrintFile(const char *name);
-  void startFileprint();
-  void stopSDPrint(
+  static void openFile(char * const path, const bool read, const bool subcall=false);
+  static void openLogFile(char * const path);
+  static void removeFile(const char * const name);
+  static void closefile(const bool store_location=false);
+  static void release();
+  static void openAndPrintFile(const char *name);
+  static void startFileprint();
+  static void stopSDPrint(
     #if SD_RESORT
       const bool re_sort=false
     #endif
   );
-  void getStatus(
+  static void getStatus(
     #if NUM_SERIAL > 1
       const int8_t port = -1
     #endif
   );
-  void printingHasFinished();
-  void printFilename(
+  static void printingHasFinished();
+  static void printFilename(
     #if NUM_SERIAL > 1
       const int8_t port = -1
     #endif
   );
 
   #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
-    void printLongPath(char *path
+    static void printLongPath(char *path
       #if NUM_SERIAL > 1
         , const int8_t port = -1
       #endif
     );
   #endif
 
-  void getfilename(uint16_t nr, const char* const match=NULL);
-  uint16_t getnrfilenames();
+  static void getfilename(uint16_t nr, const char* const match=NULL);
+  static uint16_t getnrfilenames();
 
-  void getAbsFilename(char *t);
+  static void getAbsFilename(char *t);
 
-  void ls(
+  static void ls(
     #if NUM_SERIAL > 1
       const int8_t port = -1
     #endif
   );
-  void chdir(const char *relpath);
-  int8_t updir();
-  void setroot();
+  static void chdir(const char *relpath);
+  static int8_t updir();
+  static void setroot();
 
-  const char* diveToFile(SdFile*& curDir, const char * const path, const bool echo);
+  static const char* diveToFile(SdFile*& curDir, const char * const path, const bool echo);
 
-  uint16_t get_num_Files();
+  static uint16_t get_num_Files();
 
   #if ENABLED(SDCARD_SORT_ALPHA)
-    void presort();
-    void getfilename_sorted(const uint16_t nr);
+    static void presort();
+    static void getfilename_sorted(const uint16_t nr);
     #if ENABLED(SDSORT_GCODE)
-      FORCE_INLINE void setSortOn(bool b) { sort_alpha = b; presort(); }
-      FORCE_INLINE void setSortFolders(int i) { sort_folders = i; presort(); }
-      //FORCE_INLINE void setSortReverse(bool b) { sort_reverse = b; }
+      FORCE_INLINE static void setSortOn(bool b) { sort_alpha = b; presort(); }
+      FORCE_INLINE static void setSortFolders(int i) { sort_folders = i; presort(); }
+      //FORCE_INLINE static void setSortReverse(bool b) { sort_reverse = b; }
     #endif
   #else
-    FORCE_INLINE void getfilename_sorted(const uint16_t nr) { getfilename(nr); }
+    FORCE_INLINE static void getfilename_sorted(const uint16_t nr) { getfilename(nr); }
   #endif
 
   #if ENABLED(POWER_LOSS_RECOVERY)
-    bool jobRecoverFileExists();
-    void openJobRecoveryFile(const bool read);
-    void removeJobRecoveryFile();
+    static bool jobRecoverFileExists();
+    static void openJobRecoveryFile(const bool read);
+    static void removeJobRecoveryFile();
   #endif
 
-  inline void pauseSDPrint() { sdprinting = false; }
-  inline bool isFileOpen() { return file.isOpen(); }
-  inline bool eof() { return sdpos >= filesize; }
-  inline int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
-  inline void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
-  inline uint32_t getIndex() { return sdpos; }
-  inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
-  inline char* getWorkDirName() { workDir.getFilename(filename); return filename; }
-  inline int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
-  inline int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
+  static inline void pauseSDPrint() { flag.sdprinting = false; }
+  static inline bool isFileOpen() { return file.isOpen(); }
+  static inline bool eof() { return sdpos >= filesize; }
+  static inline int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
+  static inline void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
+  static inline uint32_t getIndex() { return sdpos; }
+  static inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
+  static inline char* getWorkDirName() { workDir.getFilename(filename); return filename; }
+  static inline int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
+  static inline int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
 
-  Sd2Card& getSd2Card() { return sd2card; }
+  static Sd2Card& getSd2Card() { return sd2card; }
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
-    void auto_report_sd_status(void);
-    inline void set_auto_report_interval(uint8_t v
+    static void auto_report_sd_status(void);
+    static inline void set_auto_report_interval(uint8_t v
       #if NUM_SERIAL > 1
         , int8_t port
       #endif
@@ -140,40 +155,39 @@ public:
     }
   #endif
 
-  inline char* longest_filename() { return longFilename[0] ? longFilename : filename; }
+  static inline char* longest_filename() { return longFilename[0] ? longFilename : filename; }
 
 public:
-  bool saving, logging, sdprinting, cardOK, filenameIsDir, abort_sd_printing;
-  char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
-  int8_t autostart_index;
+  static card_flags_t flag;
+  static char filename[FILENAME_LENGTH + 1], longFilename[LONG_FILENAME_LENGTH + 1];
+  static int8_t autostart_index;
 
   #if ENABLED(FAST_FILE_TRANSFER)
-    bool binary_mode;
     #if NUM_SERIAL > 1
-      uint8_t transfer_port;
+      static uint8_t transfer_port;
     #else
       static constexpr uint8_t transfer_port = 0;
     #endif
   #endif
 
 private:
-  SdFile root, workDir, workDirParents[MAX_DIR_DEPTH];
-  uint8_t workDirDepth;
+  static SdFile root, workDir, workDirParents[MAX_DIR_DEPTH];
+  static uint8_t workDirDepth;
 
   // Sort files and folders alphabetically.
   #if ENABLED(SDCARD_SORT_ALPHA)
-    uint16_t sort_count;        // Count of sorted items in the current directory
+    static uint16_t sort_count;   // Count of sorted items in the current directory
     #if ENABLED(SDSORT_GCODE)
-      bool sort_alpha;          // Flag to enable / disable the feature
-      int sort_folders;         // Flag to enable / disable folder sorting
-      //bool sort_reverse;      // Flag to enable / disable reverse sorting
+      static bool sort_alpha;     // Flag to enable / disable the feature
+      static int sort_folders;    // Folder sorting before/none/after
+      //static bool sort_reverse; // Flag to enable / disable reverse sorting
     #endif
 
     // By default the sort index is static
     #if ENABLED(SDSORT_DYNAMIC_RAM)
-      uint8_t *sort_order;
+      static uint8_t *sort_order;
     #else
-      uint8_t sort_order[SDSORT_LIMIT];
+      static uint8_t sort_order[SDSORT_LIMIT];
     #endif
 
     #if ENABLED(SDSORT_USES_RAM) && ENABLED(SDSORT_CACHE_NAMES) && DISABLED(SDSORT_DYNAMIC_RAM)
@@ -188,21 +202,21 @@ private:
       // If using dynamic ram for names, allocate on the heap.
       #if ENABLED(SDSORT_CACHE_NAMES)
         #if ENABLED(SDSORT_DYNAMIC_RAM)
-          char **sortshort, **sortnames;
+          static char **sortshort, **sortnames;
         #else
-          char sortshort[SDSORT_LIMIT][FILENAME_LENGTH];
-          char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN];
+          static char sortshort[SDSORT_LIMIT][FILENAME_LENGTH + 1];
+          static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN + 1];
         #endif
       #elif DISABLED(SDSORT_USES_STACK)
-        char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN];
+        static char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN + 1];
       #endif
 
       // Folder sorting uses an isDir array when caching items.
       #if HAS_FOLDER_SORTING
         #if ENABLED(SDSORT_DYNAMIC_RAM)
-          uint8_t *isDir;
+          static uint8_t *isDir;
         #elif ENABLED(SDSORT_CACHE_NAMES) || DISABLED(SDSORT_USES_STACK)
-          uint8_t isDir[(SDSORT_LIMIT+7)>>3];
+          static uint8_t isDir[(SDSORT_LIMIT+7)>>3];
         #endif
       #endif
 
@@ -210,28 +224,31 @@ private:
 
   #endif // SDCARD_SORT_ALPHA
 
-  Sd2Card sd2card;
-  SdVolume volume;
-  SdFile file;
-
-  #define SD_PROCEDURE_DEPTH 1
-  #define MAXPATHNAMELENGTH (FILENAME_LENGTH*MAX_DIR_DEPTH + MAX_DIR_DEPTH + 1)
-  uint8_t file_subcall_ctr;
-  uint32_t filespos[SD_PROCEDURE_DEPTH];
-  char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
-  uint32_t filesize, sdpos;
-
-  LsAction lsAction; //stored for recursion.
-  uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
-  char* diveDirName;
-  void lsDive(const char *prepend, SdFile parent, const char * const match=NULL
+  static Sd2Card sd2card;
+  static SdVolume volume;
+  static SdFile file;
+
+  #ifndef SD_PROCEDURE_DEPTH
+    #define SD_PROCEDURE_DEPTH 1
+  #endif
+
+  static uint8_t file_subcall_ctr;
+  static uint32_t filespos[SD_PROCEDURE_DEPTH];
+  static char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH + 1];
+
+  static uint32_t filesize, sdpos;
+
+  static LsAction lsAction; //stored for recursion.
+  static uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
+  static char *diveDirName;
+  static void lsDive(const char *prepend, SdFile parent, const char * const match=NULL
     #if NUM_SERIAL > 1
       , const int8_t port = -1
     #endif
   );
 
   #if ENABLED(SDCARD_SORT_ALPHA)
-    void flush_presort();
+    static void flush_presort();
   #endif
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
@@ -256,7 +273,7 @@ private:
   #define IS_SD_INSERTED() true
 #endif
 
-#define IS_SD_PRINTING()  card.sdprinting
+#define IS_SD_PRINTING()  card.flag.sdprinting
 #define IS_SD_FILE_OPEN() card.isFileOpen()
 
 extern CardReader card;

commit d97e31db4c2b8b27ab1c6fbbe05f11aa9d5e94e2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 16 20:47:07 2018 -0600

    Optimize Power-Loss Recovery (#12440)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 82244261dd..c8f114822e 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -106,11 +106,8 @@ public:
   #endif
 
   #if ENABLED(POWER_LOSS_RECOVERY)
-    void openJobRecoveryFile(const bool read);
-    void closeJobRecoveryFile();
     bool jobRecoverFileExists();
-    int16_t saveJobRecoveryInfo();
-    int16_t loadJobRecoveryInfo();
+    void openJobRecoveryFile(const bool read);
     void removeJobRecoveryFile();
   #endif
 
@@ -217,10 +214,6 @@ private:
   SdVolume volume;
   SdFile file;
 
-  #if ENABLED(POWER_LOSS_RECOVERY)
-    SdFile jobRecoveryFile;
-  #endif
-
   #define SD_PROCEDURE_DEPTH 1
   #define MAXPATHNAMELENGTH (FILENAME_LENGTH*MAX_DIR_DEPTH + MAX_DIR_DEPTH + 1)
   uint8_t file_subcall_ctr;

commit 471f403a671e7d095477be9a0cf2ed18d6dcbbd8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 11 07:51:39 2018 -0600

    Reduce code size with plain inlines

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index a1653753f1..82244261dd 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -114,22 +114,22 @@ public:
     void removeJobRecoveryFile();
   #endif
 
-  FORCE_INLINE void pauseSDPrint() { sdprinting = false; }
-  FORCE_INLINE bool isFileOpen() { return file.isOpen(); }
-  FORCE_INLINE bool eof() { return sdpos >= filesize; }
-  FORCE_INLINE int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
-  FORCE_INLINE void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
-  FORCE_INLINE uint32_t getIndex() { return sdpos; }
-  FORCE_INLINE uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
-  FORCE_INLINE char* getWorkDirName() { workDir.getFilename(filename); return filename; }
-  FORCE_INLINE int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
-  FORCE_INLINE int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
+  inline void pauseSDPrint() { sdprinting = false; }
+  inline bool isFileOpen() { return file.isOpen(); }
+  inline bool eof() { return sdpos >= filesize; }
+  inline int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
+  inline void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
+  inline uint32_t getIndex() { return sdpos; }
+  inline uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
+  inline char* getWorkDirName() { workDir.getFilename(filename); return filename; }
+  inline int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
+  inline int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
 
   Sd2Card& getSd2Card() { return sd2card; }
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     void auto_report_sd_status(void);
-    FORCE_INLINE void set_auto_report_interval(uint8_t v
+    inline void set_auto_report_interval(uint8_t v
       #if NUM_SERIAL > 1
         , int8_t port
       #endif
@@ -143,7 +143,7 @@ public:
     }
   #endif
 
-  FORCE_INLINE char* longest_filename() { return longFilename[0] ? longFilename : filename; }
+  inline char* longest_filename() { return longFilename[0] ? longFilename : filename; }
 
 public:
   bool saving, logging, sdprinting, cardOK, filenameIsDir, abort_sd_printing;

commit 42f8b6c53011ea64be935f730250f7537940d4e1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 1 15:03:45 2018 -0500

    Make M125 work with SDSUPPORT (#12289)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index b4e04fe7f2..a1653753f1 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -19,9 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
-
-#ifndef _CARDREADER_H_
-#define _CARDREADER_H_
+#pragma once
 
 #include "../inc/MarlinConfig.h"
 
@@ -265,16 +263,14 @@ private:
   #define IS_SD_INSERTED() true
 #endif
 
+#define IS_SD_PRINTING()  card.sdprinting
+#define IS_SD_FILE_OPEN() card.isFileOpen()
+
 extern CardReader card;
 
-#endif // SDSUPPORT
+#else // !SDSUPPORT
 
-#if ENABLED(SDSUPPORT)
-  #define IS_SD_PRINTING()  card.sdprinting
-  #define IS_SD_FILE_OPEN() card.isFileOpen()
-#else
-  #define IS_SD_PRINTING()  false
-  #define IS_SD_FILE_OPEN() false
-#endif
+#define IS_SD_PRINTING()  false
+#define IS_SD_FILE_OPEN() false
 
-#endif // _CARDREADER_H_
+#endif // !SDSUPPORT

commit b5d7f69b51daf218f61defa22c870ab6e1ca5a7a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 30 22:49:49 2018 -0500

    Followup to #12249

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index feb64216ee..b4e04fe7f2 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -157,7 +157,7 @@ public:
     #if NUM_SERIAL > 1
       uint8_t transfer_port;
     #else
-      constexpr uint8_t transfer_port = 0;
+      static constexpr uint8_t transfer_port = 0;
     #endif
   #endif
 

commit 66d44c72c30991965ac7f1daea1c22c17cf12a6f
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Wed Oct 31 00:44:12 2018 +0000

    Add fast binary file transfer to SD card option (#12249)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index b3c754cc9a..feb64216ee 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -124,11 +124,8 @@ public:
   FORCE_INLINE uint32_t getIndex() { return sdpos; }
   FORCE_INLINE uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
   FORCE_INLINE char* getWorkDirName() { workDir.getFilename(filename); return filename; }
-
-  #if defined(__STM32F1__) && ENABLED(EEPROM_SETTINGS) && DISABLED(FLASH_EEPROM_EMULATION)
-    FORCE_INLINE int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
-    FORCE_INLINE int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
-  #endif
+  FORCE_INLINE int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
+  FORCE_INLINE int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
 
   Sd2Card& getSd2Card() { return sd2card; }
 
@@ -154,6 +151,16 @@ public:
   bool saving, logging, sdprinting, cardOK, filenameIsDir, abort_sd_printing;
   char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
   int8_t autostart_index;
+
+  #if ENABLED(FAST_FILE_TRANSFER)
+    bool binary_mode;
+    #if NUM_SERIAL > 1
+      uint8_t transfer_port;
+    #else
+      constexpr uint8_t transfer_port = 0;
+    #endif
+  #endif
+
 private:
   SdFile root, workDir, workDirParents[MAX_DIR_DEPTH];
   uint8_t workDirDepth;

commit f9b80e7217d70c3d36edaf2601bc380ba02fce23
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 29 13:54:04 2018 -0500

    Make getfilename_sorted standard for listings

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index a92196f986..b3c754cc9a 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -103,6 +103,8 @@ public:
       FORCE_INLINE void setSortFolders(int i) { sort_folders = i; presort(); }
       //FORCE_INLINE void setSortReverse(bool b) { sort_reverse = b; }
     #endif
+  #else
+    FORCE_INLINE void getfilename_sorted(const uint16_t nr) { getfilename(nr); }
   #endif
 
   #if ENABLED(POWER_LOSS_RECOVERY)

commit 1fb9b299d4d96276ff1fb6cd2ee5e73e753e2b23
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Fri Oct 19 21:25:07 2018 +0200

    Add M524 to abort SD printing (#12155)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 42e35656fb..a92196f986 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -149,7 +149,7 @@ public:
   FORCE_INLINE char* longest_filename() { return longFilename[0] ? longFilename : filename; }
 
 public:
-  bool saving, logging, sdprinting, cardOK, filenameIsDir;
+  bool saving, logging, sdprinting, cardOK, filenameIsDir, abort_sd_printing;
   char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
   int8_t autostart_index;
 private:

commit d26d9d5b81fcbbb2e5f8eb8c92fbb6e679de9349
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 19 13:59:50 2018 -0500

    Tweak IS_SD_INSERTED

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 675c3adf49..42e35656fb 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -247,9 +247,9 @@ private:
   #define IS_SD_INSERTED() Sd2Card::isInserted()
 #elif PIN_EXISTS(SD_DETECT)
   #if ENABLED(SD_DETECT_INVERTED)
-    #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) == HIGH)
+    #define IS_SD_INSERTED()  READ(SD_DETECT_PIN)
   #else
-    #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) == LOW)
+    #define IS_SD_INSERTED() !READ(SD_DETECT_PIN)
   #endif
 #else
   // No card detect line? Assume the card is inserted.

commit c6a5c7420895bbb32ac3c70f0382ed5622c3746e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 19 13:52:44 2018 -0500

    Add parentheses to SD macros

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index b975d053f4..675c3adf49 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -244,16 +244,16 @@ private:
 };
 
 #if ENABLED(USB_FLASH_DRIVE_SUPPORT)
-  #define IS_SD_INSERTED Sd2Card::isInserted()
+  #define IS_SD_INSERTED() Sd2Card::isInserted()
 #elif PIN_EXISTS(SD_DETECT)
   #if ENABLED(SD_DETECT_INVERTED)
-    #define IS_SD_INSERTED (READ(SD_DETECT_PIN) == HIGH)
+    #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) == HIGH)
   #else
-    #define IS_SD_INSERTED (READ(SD_DETECT_PIN) == LOW)
+    #define IS_SD_INSERTED() (READ(SD_DETECT_PIN) == LOW)
   #endif
 #else
   // No card detect line? Assume the card is inserted.
-  #define IS_SD_INSERTED true
+  #define IS_SD_INSERTED() true
 #endif
 
 extern CardReader card;
@@ -261,11 +261,11 @@ extern CardReader card;
 #endif // SDSUPPORT
 
 #if ENABLED(SDSUPPORT)
-  #define IS_SD_PRINTING (card.sdprinting)
-  #define IS_SD_FILE_OPEN (card.isFileOpen())
+  #define IS_SD_PRINTING()  card.sdprinting
+  #define IS_SD_FILE_OPEN() card.isFileOpen()
 #else
-  #define IS_SD_PRINTING (false)
-  #define IS_SD_FILE_OPEN (false)
+  #define IS_SD_PRINTING()  false
+  #define IS_SD_FILE_OPEN() false
 #endif
 
 #endif // _CARDREADER_H_

commit 2067619a269f2b4a6e52fdcb1f968e48b952a7d1
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Mon Jul 2 09:06:17 2018 -0600

    Add USB_FLASH_DRIVE_SUPPORT

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 1e2f685fcf..b975d053f4 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -243,7 +243,9 @@ private:
   #endif
 };
 
-#if PIN_EXISTS(SD_DETECT)
+#if ENABLED(USB_FLASH_DRIVE_SUPPORT)
+  #define IS_SD_INSERTED Sd2Card::isInserted()
+#elif PIN_EXISTS(SD_DETECT)
   #if ENABLED(SD_DETECT_INVERTED)
     #define IS_SD_INSERTED (READ(SD_DETECT_PIN) == HIGH)
   #else

commit 30197134027d0b831fe370c9d0a047b8e8a333f8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 1 05:19:35 2018 -0500

    Reorganize some enums

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 8e29bd9a6f..1e2f685fcf 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -33,6 +33,8 @@
 
 #include "SdFile.h"
 
+enum LsAction : uint8_t { LS_SerialPrint, LS_Count, LS_GetFilename };
+
 class CardReader {
 public:
   CardReader();

commit 065e9c3d66bd533694664120398e7419de3bd853
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 13 01:44:27 2018 -0500

    Add card.longest_filename method

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 73352e920f..8e29bd9a6f 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -144,6 +144,8 @@ public:
     }
   #endif
 
+  FORCE_INLINE char* longest_filename() { return longFilename[0] ? longFilename : filename; }
+
 public:
   bool saving, logging, sdprinting, cardOK, filenameIsDir;
   char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];

commit d05e832f29b940f1afaa332b1f4c096c47324a32
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 6 22:32:15 2018 -0500

    Add STM32F1 support for SD-based EEPROM

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 59b238e8d2..73352e920f 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -121,6 +121,11 @@ public:
   FORCE_INLINE uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
   FORCE_INLINE char* getWorkDirName() { workDir.getFilename(filename); return filename; }
 
+  #if defined(__STM32F1__) && ENABLED(EEPROM_SETTINGS) && DISABLED(FLASH_EEPROM_EMULATION)
+    FORCE_INLINE int16_t read(void* buf, uint16_t nbyte) { return file.isOpen() ? file.read(buf, nbyte) : -1; }
+    FORCE_INLINE int16_t write(void* buf, uint16_t nbyte) { return file.isOpen() ? file.write(buf, nbyte) : -1; }
+  #endif
+
   Sd2Card& getSd2Card() { return sd2card; }
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)

commit 1a0f4dedad5a564800520418ec01448982b9b023
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jul 2 23:21:28 2018 -0500

    Fix and improve POWER_LOSS_RECOVERY (#11187)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 276b7b7b3d..59b238e8d2 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -142,7 +142,7 @@ public:
 public:
   bool saving, logging, sdprinting, cardOK, filenameIsDir;
   char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
-  int autostart_index;
+  int8_t autostart_index;
 private:
   SdFile root, workDir, workDirParents[MAX_DIR_DEPTH];
   uint8_t workDirDepth;

commit 8b44745bc75918fec1aae8c57666a50e773499f5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 24 01:18:56 2018 -0500

    Clean up and consolidate SD-related code (#10831)

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 624bef4a2d..276b7b7b3d 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -43,8 +43,8 @@ public:
   void beginautostart();
   void checkautostart();
 
-  void openFile(char* name, const bool read, const bool subcall=false);
-  void openLogFile(char* name);
+  void openFile(char * const path, const bool read, const bool subcall=false);
+  void openLogFile(char * const path);
   void removeFile(const char * const name);
   void closefile(const bool store_location=false);
   void release();
@@ -89,6 +89,8 @@ public:
   int8_t updir();
   void setroot();
 
+  const char* diveToFile(SdFile*& curDir, const char * const path, const bool echo);
+
   uint16_t get_num_Files();
 
   #if ENABLED(SDCARD_SORT_ALPHA)
@@ -119,7 +121,7 @@ public:
   FORCE_INLINE uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
   FORCE_INLINE char* getWorkDirName() { workDir.getFilename(filename); return filename; }
 
-  Sd2Card& getSd2Card() { return card; }
+  Sd2Card& getSd2Card() { return sd2card; }
 
   #if ENABLED(AUTO_REPORT_SD_STATUS)
     void auto_report_sd_status(void);
@@ -142,7 +144,7 @@ public:
   char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
   int autostart_index;
 private:
-  SdFile root, *curDir, workDir, workDirParents[MAX_DIR_DEPTH];
+  SdFile root, workDir, workDirParents[MAX_DIR_DEPTH];
   uint8_t workDirDepth;
 
   // Sort files and folders alphabetically.
@@ -195,7 +197,7 @@ private:
 
   #endif // SDCARD_SORT_ALPHA
 
-  Sd2Card card;
+  Sd2Card sd2card;
   SdVolume volume;
   SdFile file;
 

commit 05fca752d6d7b88b7697dd5273b6f0428655f3d5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 1 01:01:02 2018 -0500

    Clean up autostart handling

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index a66c698872..624bef4a2d 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -39,16 +39,14 @@ public:
 
   void initsd();
   void write_command(char *buf);
-  // Files auto[0-9].g on the sd card are performed in sequence.
-  // This is to delay autostart and hence the initialisation of
-  // the sd card to some seconds after the normal init, so the
-  // device is available soon after a reset.
 
-  void checkautostart(bool x);
+  void beginautostart();
+  void checkautostart();
+
   void openFile(char* name, const bool read, const bool subcall=false);
   void openLogFile(char* name);
   void removeFile(const char * const name);
-  void closefile(bool store_location=false);
+  void closefile(const bool store_location=false);
   void release();
   void openAndPrintFile(const char *name);
   void startFileprint();
@@ -212,9 +210,6 @@ private:
   char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
   uint32_t filesize, sdpos;
 
-  millis_t next_autostart_ms;
-  bool autostart_stilltocheck; //the sd start is delayed, because otherwise the serial cannot answer fast enought to make contact with the hostsoftware.
-
   LsAction lsAction; //stored for recursion.
   uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
   char* diveDirName;

commit 11ab017dd06bb9d06435dc03469a799d53893493
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 21 19:41:26 2018 -0500

    Creality3D Power-Loss Recovery

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 66a23d47c5..a66c698872 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -103,11 +103,21 @@ public:
     #endif
   #endif
 
+  #if ENABLED(POWER_LOSS_RECOVERY)
+    void openJobRecoveryFile(const bool read);
+    void closeJobRecoveryFile();
+    bool jobRecoverFileExists();
+    int16_t saveJobRecoveryInfo();
+    int16_t loadJobRecoveryInfo();
+    void removeJobRecoveryFile();
+  #endif
+
   FORCE_INLINE void pauseSDPrint() { sdprinting = false; }
   FORCE_INLINE bool isFileOpen() { return file.isOpen(); }
   FORCE_INLINE bool eof() { return sdpos >= filesize; }
   FORCE_INLINE int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
-  FORCE_INLINE void setIndex(long index) { sdpos = index; file.seekSet(index); }
+  FORCE_INLINE void setIndex(const uint32_t index) { sdpos = index; file.seekSet(index); }
+  FORCE_INLINE uint32_t getIndex() { return sdpos; }
   FORCE_INLINE uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
   FORCE_INLINE char* getWorkDirName() { workDir.getFilename(filename); return filename; }
 
@@ -191,6 +201,10 @@ private:
   SdVolume volume;
   SdFile file;
 
+  #if ENABLED(POWER_LOSS_RECOVERY)
+    SdFile jobRecoveryFile;
+  #endif
+
   #define SD_PROCEDURE_DEPTH 1
   #define MAXPATHNAMELENGTH (FILENAME_LENGTH*MAX_DIR_DEPTH + MAX_DIR_DEPTH + 1)
   uint8_t file_subcall_ctr;

commit 2e43438e0c3f2c5e0ec7b701c6f33a71136a601a
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Sun Mar 11 11:57:31 2018 +0100

    Add C parameter to M27 to include the long filename
    
    In answer to #10001
    
    Add an option to retrieve the currently open file name (long filename if possible).

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index db4e7f216a..66a23d47c5 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -63,6 +63,11 @@ public:
     #endif
   );
   void printingHasFinished();
+  void printFilename(
+    #if NUM_SERIAL > 1
+      const int8_t port = -1
+    #endif
+  );
 
   #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
     void printLongPath(char *path

commit 22a017a856df6cea7ab387656a57ac03e6b6ef64
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 7 01:42:11 2018 -0600

    Rebuild SD file sort array on Stop SD Print (#9976)
    
    Thanks Chuck Hellebuyck.

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 9d089fda9f..db4e7f216a 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -23,12 +23,16 @@
 #ifndef _CARDREADER_H_
 #define _CARDREADER_H_
 
+#include "../inc/MarlinConfig.h"
+
+#if ENABLED(SDSUPPORT)
+
+#define SD_RESORT ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_DYNAMIC_RAM)
+
 #define MAX_DIR_DEPTH 10          // Maximum folder depth
 
 #include "SdFile.h"
 
-#include "../inc/MarlinConfig.h"
-
 class CardReader {
 public:
   CardReader();
@@ -48,7 +52,11 @@ public:
   void release();
   void openAndPrintFile(const char *name);
   void startFileprint();
-  void stopSDPrint();
+  void stopSDPrint(
+    #if SD_RESORT
+      const bool re_sort=false
+    #endif
+  );
   void getStatus(
     #if NUM_SERIAL > 1
       const int8_t port = -1
@@ -217,10 +225,14 @@ private:
     #define IS_SD_INSERTED (READ(SD_DETECT_PIN) == LOW)
   #endif
 #else
-  //No card detect line? Assume the card is inserted.
+  // No card detect line? Assume the card is inserted.
   #define IS_SD_INSERTED true
 #endif
 
+extern CardReader card;
+
+#endif // SDSUPPORT
+
 #if ENABLED(SDSUPPORT)
   #define IS_SD_PRINTING (card.sdprinting)
   #define IS_SD_FILE_OPEN (card.isFileOpen())
@@ -229,6 +241,4 @@ private:
   #define IS_SD_FILE_OPEN (false)
 #endif
 
-extern CardReader card;
-
 #endif // _CARDREADER_H_

commit eb079959fb320f99cfa885e576fed23e7aa3354f
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Mon Feb 26 22:38:27 2018 +0100

    Report sd card progress [FR]  #9751 (#9832)
    
    * SD Status auto-report feature
    Feature Request #9751

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 8d342fe42d..9d089fda9f 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -99,6 +99,23 @@ public:
   FORCE_INLINE char* getWorkDirName() { workDir.getFilename(filename); return filename; }
 
   Sd2Card& getSd2Card() { return card; }
+
+  #if ENABLED(AUTO_REPORT_SD_STATUS)
+    void auto_report_sd_status(void);
+    FORCE_INLINE void set_auto_report_interval(uint8_t v
+      #if NUM_SERIAL > 1
+        , int8_t port
+      #endif
+    ) {
+      #if NUM_SERIAL > 1
+        serialport = port;
+      #endif
+      NOMORE(v, 60);
+      auto_report_sd_interval = v;
+      next_sd_report_ms = millis() + 1000UL * v;
+    }
+  #endif
+
 public:
   bool saving, logging, sdprinting, cardOK, filenameIsDir;
   char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
@@ -183,6 +200,14 @@ private:
   #if ENABLED(SDCARD_SORT_ALPHA)
     void flush_presort();
   #endif
+
+  #if ENABLED(AUTO_REPORT_SD_STATUS)
+    static uint8_t auto_report_sd_interval;
+    static millis_t next_sd_report_ms;
+    #if NUM_SERIAL > 1
+      static int8_t serialport;
+    #endif
+  #endif
 };
 
 #if PIN_EXISTS(SD_DETECT)

commit 382a5e3318406d8081551cf11eb91fa1f41c8088
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jan 21 17:13:56 2018 -0600

    Clean up trailing whitespace

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 915a639ed8..8d342fe42d 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -174,7 +174,7 @@ private:
   LsAction lsAction; //stored for recursion.
   uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
   char* diveDirName;
-  void lsDive(const char *prepend, SdFile parent, const char * const match=NULL  
+  void lsDive(const char *prepend, SdFile parent, const char * const match=NULL
     #if NUM_SERIAL > 1
       , const int8_t port = -1
     #endif

commit f7efac57b7ac607405529a71b4e36a6545525c89
Author: Thomas Moore <tcm0116@gmail.com>
Date:   Sun Nov 5 08:49:38 2017 -0600

    Multi-host support

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 4d8b5b4b36..915a639ed8 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -49,11 +49,19 @@ public:
   void openAndPrintFile(const char *name);
   void startFileprint();
   void stopSDPrint();
-  void getStatus();
+  void getStatus(
+    #if NUM_SERIAL > 1
+      const int8_t port = -1
+    #endif
+  );
   void printingHasFinished();
 
   #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
-    void printLongPath(char *path);
+    void printLongPath(char *path
+      #if NUM_SERIAL > 1
+        , const int8_t port = -1
+      #endif
+    );
   #endif
 
   void getfilename(uint16_t nr, const char* const match=NULL);
@@ -61,7 +69,11 @@ public:
 
   void getAbsFilename(char *t);
 
-  void ls();
+  void ls(
+    #if NUM_SERIAL > 1
+      const int8_t port = -1
+    #endif
+  );
   void chdir(const char *relpath);
   int8_t updir();
   void setroot();
@@ -162,7 +174,11 @@ private:
   LsAction lsAction; //stored for recursion.
   uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
   char* diveDirName;
-  void lsDive(const char *prepend, SdFile parent, const char * const match=NULL);
+  void lsDive(const char *prepend, SdFile parent, const char * const match=NULL  
+    #if NUM_SERIAL > 1
+      , const int8_t port = -1
+    #endif
+  );
 
   #if ENABLED(SDCARD_SORT_ALPHA)
     void flush_presort();

commit 498ea7512a5f6d2f2b56f9ff27ca6212f4aa058c
Author: etagle <ejtagle@hotmail.com>
Date:   Thu Dec 21 02:30:18 2017 -0300

    Exposed SDCard interface to the public, to USB MSD is able to read/write sectors on the SD card

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index c8e542b75d..4d8b5b4b36 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -86,6 +86,7 @@ public:
   FORCE_INLINE uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
   FORCE_INLINE char* getWorkDirName() { workDir.getFilename(filename); return filename; }
 
+  Sd2Card& getSd2Card() { return card; }
 public:
   bool saving, logging, sdprinting, cardOK, filenameIsDir;
   char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];

commit f90c075d1f06b4e336c9a20cd28f9aec7b5a0972
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 26 01:14:18 2017 -0600

    SD Menu patches

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 5d10e34a68..c8e542b75d 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -63,7 +63,7 @@ public:
 
   void ls();
   void chdir(const char *relpath);
-  void updir();
+  int8_t updir();
   void setroot();
 
   uint16_t get_num_Files();

commit e0d367f1fb12c57eca03df7994eeee629c0fea50
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 15 00:15:57 2017 -0600

    Fix M32 P subroutine handling

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 1a9a6c1115..5d10e34a68 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -41,7 +41,7 @@ public:
   // device is available soon after a reset.
 
   void checkautostart(bool x);
-  void openFile(char* name, bool read, bool push_current=false);
+  void openFile(char* name, const bool read, const bool subcall=false);
   void openLogFile(char* name);
   void removeFile(const char * const name);
   void closefile(bool store_location=false);

commit 9f8b4c5ee858e80a48c35fcf6112f92dee58df79
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 15 00:06:20 2017 -0600

    Patch SD lib files for readability

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 25a1daff12..1a9a6c1115 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -20,8 +20,8 @@
  *
  */
 
-#ifndef CARDREADER_H
-#define CARDREADER_H
+#ifndef _CARDREADER_H_
+#define _CARDREADER_H_
 
 #define MAX_DIR_DEPTH 10          // Maximum folder depth
 
@@ -35,13 +35,15 @@ public:
 
   void initsd();
   void write_command(char *buf);
-  //files auto[0-9].g on the sd card are performed in a row
-  //this is to delay autostart and hence the initialisaiton of the sd card to some seconds after the normal init, so the device is available quick after a reset
+  // Files auto[0-9].g on the sd card are performed in sequence.
+  // This is to delay autostart and hence the initialisation of
+  // the sd card to some seconds after the normal init, so the
+  // device is available soon after a reset.
 
   void checkautostart(bool x);
   void openFile(char* name, bool read, bool push_current=false);
   void openLogFile(char* name);
-  void removeFile(char* name);
+  void removeFile(const char * const name);
   void closefile(bool store_location=false);
   void release();
   void openAndPrintFile(const char *name);
@@ -151,8 +153,7 @@ private:
   uint8_t file_subcall_ctr;
   uint32_t filespos[SD_PROCEDURE_DEPTH];
   char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
-  uint32_t filesize;
-  uint32_t sdpos;
+  uint32_t filesize, sdpos;
 
   millis_t next_autostart_ms;
   bool autostart_stilltocheck; //the sd start is delayed, because otherwise the serial cannot answer fast enought to make contact with the hostsoftware.
@@ -188,4 +189,4 @@ private:
 
 extern CardReader card;
 
-#endif // CARDREADER_H
+#endif // _CARDREADER_H_

commit 3d2b2eb1ca16b576b8138668b74f022654a0664a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 18 22:18:51 2017 -0500

    Prevent SDCARD_SORT_ALPHA from exploding

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index f663ca8b47..25a1daff12 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -108,6 +108,12 @@ private:
       uint8_t sort_order[SDSORT_LIMIT];
     #endif
 
+    #if ENABLED(SDSORT_USES_RAM) && ENABLED(SDSORT_CACHE_NAMES) && DISABLED(SDSORT_DYNAMIC_RAM)
+      #define SORTED_LONGNAME_MAXLEN ((SDSORT_CACHE_VFATS) * (FILENAME_LENGTH) + 1)
+    #else
+      #define SORTED_LONGNAME_MAXLEN LONG_FILENAME_LENGTH
+    #endif
+
     // Cache filenames to speed up SD menus.
     #if ENABLED(SDSORT_USES_RAM)
 
@@ -117,10 +123,10 @@ private:
           char **sortshort, **sortnames;
         #else
           char sortshort[SDSORT_LIMIT][FILENAME_LENGTH];
-          char sortnames[SDSORT_LIMIT][LONG_FILENAME_LENGTH];
+          char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN];
         #endif
       #elif DISABLED(SDSORT_USES_STACK)
-        char sortnames[SDSORT_LIMIT][LONG_FILENAME_LENGTH];
+        char sortnames[SDSORT_LIMIT][SORTED_LONGNAME_MAXLEN];
       #endif
 
       // Folder sorting uses an isDir array when caching items.

commit 12aa1b999aa320ba85f8d8e55b2b1becc462e768
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Oct 7 15:08:08 2017 -0500

    Fix display issue with SD_SORT_ALPHA cached names

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 2cba5a140e..f663ca8b47 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -117,10 +117,10 @@ private:
           char **sortshort, **sortnames;
         #else
           char sortshort[SDSORT_LIMIT][FILENAME_LENGTH];
-          char sortnames[SDSORT_LIMIT][FILENAME_LENGTH];
+          char sortnames[SDSORT_LIMIT][LONG_FILENAME_LENGTH];
         #endif
       #elif DISABLED(SDSORT_USES_STACK)
-        char sortnames[SDSORT_LIMIT][FILENAME_LENGTH];
+        char sortnames[SDSORT_LIMIT][LONG_FILENAME_LENGTH];
       #endif
 
       // Folder sorting uses an isDir array when caching items.

commit 614a86a380cb23a5e22661f71de5bc2e3168bb11
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:32 2017 -0500

    SD file updates

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
index 657e9f379c..2cba5a140e 100644
--- a/Marlin/src/sd/cardreader.h
+++ b/Marlin/src/sd/cardreader.h
@@ -23,16 +23,11 @@
 #ifndef CARDREADER_H
 #define CARDREADER_H
 
-#include "MarlinConfig.h"
-
-#if ENABLED(SDSUPPORT)
-
 #define MAX_DIR_DEPTH 10          // Maximum folder depth
 
 #include "SdFile.h"
 
-#include "types.h"
-#include "enum.h"
+#include "../inc/MarlinConfig.h"
 
 class CardReader {
 public:
@@ -70,7 +65,7 @@ public:
   void setroot();
 
   uint16_t get_num_Files();
-  
+
   #if ENABLED(SDCARD_SORT_ALPHA)
     void presort();
     void getfilename_sorted(const uint16_t nr);
@@ -166,27 +161,25 @@ private:
   #endif
 };
 
-extern CardReader card;
-
-#define IS_SD_PRINTING (card.sdprinting)
-#define IS_SD_FILE_OPEN (card.isFileOpen())
-
 #if PIN_EXISTS(SD_DETECT)
   #if ENABLED(SD_DETECT_INVERTED)
-    #define IS_SD_INSERTED (READ(SD_DETECT_PIN) != 0)
+    #define IS_SD_INSERTED (READ(SD_DETECT_PIN) == HIGH)
   #else
-    #define IS_SD_INSERTED (READ(SD_DETECT_PIN) == 0)
+    #define IS_SD_INSERTED (READ(SD_DETECT_PIN) == LOW)
   #endif
 #else
   //No card detect line? Assume the card is inserted.
   #define IS_SD_INSERTED true
 #endif
 
+#if ENABLED(SDSUPPORT)
+  #define IS_SD_PRINTING (card.sdprinting)
+  #define IS_SD_FILE_OPEN (card.isFileOpen())
 #else
+  #define IS_SD_PRINTING (false)
+  #define IS_SD_FILE_OPEN (false)
+#endif
 
-#define IS_SD_PRINTING (false)
-#define IS_SD_FILE_OPEN (false)
-
-#endif // SDSUPPORT
+extern CardReader card;
 
-#endif // __CARDREADER_H
+#endif // CARDREADER_H

commit b66d65f8657efe2ddecfe4a4c255b2d260671ce1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:31 2017 -0500

    Move 'sd' files

diff --git a/Marlin/src/sd/cardreader.h b/Marlin/src/sd/cardreader.h
new file mode 100644
index 0000000000..657e9f379c
--- /dev/null
+++ b/Marlin/src/sd/cardreader.h
@@ -0,0 +1,192 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#ifndef CARDREADER_H
+#define CARDREADER_H
+
+#include "MarlinConfig.h"
+
+#if ENABLED(SDSUPPORT)
+
+#define MAX_DIR_DEPTH 10          // Maximum folder depth
+
+#include "SdFile.h"
+
+#include "types.h"
+#include "enum.h"
+
+class CardReader {
+public:
+  CardReader();
+
+  void initsd();
+  void write_command(char *buf);
+  //files auto[0-9].g on the sd card are performed in a row
+  //this is to delay autostart and hence the initialisaiton of the sd card to some seconds after the normal init, so the device is available quick after a reset
+
+  void checkautostart(bool x);
+  void openFile(char* name, bool read, bool push_current=false);
+  void openLogFile(char* name);
+  void removeFile(char* name);
+  void closefile(bool store_location=false);
+  void release();
+  void openAndPrintFile(const char *name);
+  void startFileprint();
+  void stopSDPrint();
+  void getStatus();
+  void printingHasFinished();
+
+  #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
+    void printLongPath(char *path);
+  #endif
+
+  void getfilename(uint16_t nr, const char* const match=NULL);
+  uint16_t getnrfilenames();
+
+  void getAbsFilename(char *t);
+
+  void ls();
+  void chdir(const char *relpath);
+  void updir();
+  void setroot();
+
+  uint16_t get_num_Files();
+  
+  #if ENABLED(SDCARD_SORT_ALPHA)
+    void presort();
+    void getfilename_sorted(const uint16_t nr);
+    #if ENABLED(SDSORT_GCODE)
+      FORCE_INLINE void setSortOn(bool b) { sort_alpha = b; presort(); }
+      FORCE_INLINE void setSortFolders(int i) { sort_folders = i; presort(); }
+      //FORCE_INLINE void setSortReverse(bool b) { sort_reverse = b; }
+    #endif
+  #endif
+
+  FORCE_INLINE void pauseSDPrint() { sdprinting = false; }
+  FORCE_INLINE bool isFileOpen() { return file.isOpen(); }
+  FORCE_INLINE bool eof() { return sdpos >= filesize; }
+  FORCE_INLINE int16_t get() { sdpos = file.curPosition(); return (int16_t)file.read(); }
+  FORCE_INLINE void setIndex(long index) { sdpos = index; file.seekSet(index); }
+  FORCE_INLINE uint8_t percentDone() { return (isFileOpen() && filesize) ? sdpos / ((filesize + 99) / 100) : 0; }
+  FORCE_INLINE char* getWorkDirName() { workDir.getFilename(filename); return filename; }
+
+public:
+  bool saving, logging, sdprinting, cardOK, filenameIsDir;
+  char filename[FILENAME_LENGTH], longFilename[LONG_FILENAME_LENGTH];
+  int autostart_index;
+private:
+  SdFile root, *curDir, workDir, workDirParents[MAX_DIR_DEPTH];
+  uint8_t workDirDepth;
+
+  // Sort files and folders alphabetically.
+  #if ENABLED(SDCARD_SORT_ALPHA)
+    uint16_t sort_count;        // Count of sorted items in the current directory
+    #if ENABLED(SDSORT_GCODE)
+      bool sort_alpha;          // Flag to enable / disable the feature
+      int sort_folders;         // Flag to enable / disable folder sorting
+      //bool sort_reverse;      // Flag to enable / disable reverse sorting
+    #endif
+
+    // By default the sort index is static
+    #if ENABLED(SDSORT_DYNAMIC_RAM)
+      uint8_t *sort_order;
+    #else
+      uint8_t sort_order[SDSORT_LIMIT];
+    #endif
+
+    // Cache filenames to speed up SD menus.
+    #if ENABLED(SDSORT_USES_RAM)
+
+      // If using dynamic ram for names, allocate on the heap.
+      #if ENABLED(SDSORT_CACHE_NAMES)
+        #if ENABLED(SDSORT_DYNAMIC_RAM)
+          char **sortshort, **sortnames;
+        #else
+          char sortshort[SDSORT_LIMIT][FILENAME_LENGTH];
+          char sortnames[SDSORT_LIMIT][FILENAME_LENGTH];
+        #endif
+      #elif DISABLED(SDSORT_USES_STACK)
+        char sortnames[SDSORT_LIMIT][FILENAME_LENGTH];
+      #endif
+
+      // Folder sorting uses an isDir array when caching items.
+      #if HAS_FOLDER_SORTING
+        #if ENABLED(SDSORT_DYNAMIC_RAM)
+          uint8_t *isDir;
+        #elif ENABLED(SDSORT_CACHE_NAMES) || DISABLED(SDSORT_USES_STACK)
+          uint8_t isDir[(SDSORT_LIMIT+7)>>3];
+        #endif
+      #endif
+
+    #endif // SDSORT_USES_RAM
+
+  #endif // SDCARD_SORT_ALPHA
+
+  Sd2Card card;
+  SdVolume volume;
+  SdFile file;
+
+  #define SD_PROCEDURE_DEPTH 1
+  #define MAXPATHNAMELENGTH (FILENAME_LENGTH*MAX_DIR_DEPTH + MAX_DIR_DEPTH + 1)
+  uint8_t file_subcall_ctr;
+  uint32_t filespos[SD_PROCEDURE_DEPTH];
+  char proc_filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
+  uint32_t filesize;
+  uint32_t sdpos;
+
+  millis_t next_autostart_ms;
+  bool autostart_stilltocheck; //the sd start is delayed, because otherwise the serial cannot answer fast enought to make contact with the hostsoftware.
+
+  LsAction lsAction; //stored for recursion.
+  uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
+  char* diveDirName;
+  void lsDive(const char *prepend, SdFile parent, const char * const match=NULL);
+
+  #if ENABLED(SDCARD_SORT_ALPHA)
+    void flush_presort();
+  #endif
+};
+
+extern CardReader card;
+
+#define IS_SD_PRINTING (card.sdprinting)
+#define IS_SD_FILE_OPEN (card.isFileOpen())
+
+#if PIN_EXISTS(SD_DETECT)
+  #if ENABLED(SD_DETECT_INVERTED)
+    #define IS_SD_INSERTED (READ(SD_DETECT_PIN) != 0)
+  #else
+    #define IS_SD_INSERTED (READ(SD_DETECT_PIN) == 0)
+  #endif
+#else
+  //No card detect line? Assume the card is inserted.
+  #define IS_SD_INSERTED true
+#endif
+
+#else
+
+#define IS_SD_PRINTING (false)
+#define IS_SD_FILE_OPEN (false)
+
+#endif // SDSUPPORT
+
+#endif // __CARDREADER_H
