commit 44eff9a23348dcc117fd1ea9b4b1ef0b54061808
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 17 18:50:31 2022 -0600

    ‚ôªÔ∏è Refactor HAL as singleton (#23357)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 57b2d0f83c..eb580a6d62 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -79,7 +79,7 @@ void CaseLight::update(const bool sflag) {
 
     #if CASELIGHT_USES_BRIGHTNESS
       if (pin_is_pwm())
-        set_pwm_duty(pin_t(CASE_LIGHT_PIN), (
+        hal.set_pwm_duty(pin_t(CASE_LIGHT_PIN), (
           #if CASE_LIGHT_MAX_PWM == 255
             n10ct
           #else

commit f07fc7e96f512f4900619049761f75d28f9e0403
Author: GHGiampy <83699429+GHGiampy@users.noreply.github.com>
Date:   Wed Feb 2 00:35:38 2022 +0100

    üö∏ Case Light, LED menus for E3V2 DWIN Enhanced UI (#23590)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 59832fd6ed..57b2d0f83c 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -64,7 +64,17 @@ void CaseLight::update(const bool sflag) {
   #endif
 
   #if CASE_LIGHT_IS_COLOR_LED
-    leds.set_color(LEDColor(color.r, color.g, color.b OPTARG(HAS_WHITE_LED, color.w) OPTARG(NEOPIXEL_LED, n10ct)));
+    #if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
+      if (on)
+        // Use current color of (NeoPixel) leds and new brightness level
+        leds.set_color(LEDColor(leds.color.r, leds.color.g, leds.color.b OPTARG(HAS_WHITE_LED, leds.color.w) OPTARG(NEOPIXEL_LED, n10ct)));
+      else
+        // Switch off leds
+        leds.set_off();
+    #else
+      // Use CaseLight color (CASE_LIGHT_DEFAULT_COLOR) and new brightness level
+      leds.set_color(LEDColor(color.r, color.g, color.b OPTARG(HAS_WHITE_LED, color.w) OPTARG(NEOPIXEL_LED, n10ct)));
+    #endif
   #else // !CASE_LIGHT_IS_COLOR_LED
 
     #if CASELIGHT_USES_BRIGHTNESS

commit 6a8b9274a31d11c396ce1bc44b3a0b872a4606dc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Dec 25 23:15:17 2021 -0600

    ‚è™Ô∏è Refactor still needs work
    
    Reverting #23295

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index a58cb66aff..59832fd6ed 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -69,7 +69,7 @@ void CaseLight::update(const bool sflag) {
 
     #if CASELIGHT_USES_BRIGHTNESS
       if (pin_is_pwm())
-        hal.set_pwm_duty(pin_t(CASE_LIGHT_PIN), (
+        set_pwm_duty(pin_t(CASE_LIGHT_PIN), (
           #if CASE_LIGHT_MAX_PWM == 255
             n10ct
           #else

commit e211ff148c39bf5dace72de7cffbb83f19d3f1bf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Dec 24 21:33:59 2021 -0600

    ‚ôªÔ∏è Refactor HAL as singleton (#23295)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 59832fd6ed..a58cb66aff 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -69,7 +69,7 @@ void CaseLight::update(const bool sflag) {
 
     #if CASELIGHT_USES_BRIGHTNESS
       if (pin_is_pwm())
-        set_pwm_duty(pin_t(CASE_LIGHT_PIN), (
+        hal.set_pwm_duty(pin_t(CASE_LIGHT_PIN), (
           #if CASE_LIGHT_MAX_PWM == 255
             n10ct
           #else

commit 4a840e15e160038b139131ec559b220e0ac4318e
Author: Skruppy <skruppy@onmars.eu>
Date:   Fri Nov 12 15:57:24 2021 +0100

    ü©π Fix RGB case light compile (#23108)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 7c4755d0b5..59832fd6ed 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -39,7 +39,6 @@ CaseLight caselight;
 bool CaseLight::on = CASE_LIGHT_DEFAULT_ON;
 
 #if CASE_LIGHT_IS_COLOR_LED
-  #include "leds/leds.h"
   constexpr uint8_t init_case_light[] = CASE_LIGHT_DEFAULT_COLOR;
   LEDColor CaseLight::color = { init_case_light[0], init_case_light[1], init_case_light[2] OPTARG(HAS_WHITE_LED, init_case_light[3]) };
 #endif
@@ -65,7 +64,7 @@ void CaseLight::update(const bool sflag) {
   #endif
 
   #if CASE_LIGHT_IS_COLOR_LED
-    leds.set_color(LEDColor(color.r, color.g, color.b OPTARG(HAS_WHITE_LED, color.w), n10ct));
+    leds.set_color(LEDColor(color.r, color.g, color.b OPTARG(HAS_WHITE_LED, color.w) OPTARG(NEOPIXEL_LED, n10ct)));
   #else // !CASE_LIGHT_IS_COLOR_LED
 
     #if CASELIGHT_USES_BRIGHTNESS

commit da830e6ced7f7c7e509e748104245064d1c1b265
Author: Andrei M <22990561+andrei-moraru@users.noreply.github.com>
Date:   Tue Nov 2 01:47:16 2021 -0400

    ‚öóÔ∏è Use pwm_set_duty over analogWrite to set PWM (#23048)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 1baef6d468..7c4755d0b5 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -70,7 +70,7 @@ void CaseLight::update(const bool sflag) {
 
     #if CASELIGHT_USES_BRIGHTNESS
       if (pin_is_pwm())
-        analogWrite(pin_t(CASE_LIGHT_PIN), (
+        set_pwm_duty(pin_t(CASE_LIGHT_PIN), (
           #if CASE_LIGHT_MAX_PWM == 255
             n10ct
           #else

commit e60c38b6220678b3b9f3a3b31516852f8d25b3b0
Author: ellensp <ellensp@hotmail.com>
Date:   Wed May 26 11:38:23 2021 +1200

    ‚ôªÔ∏è LEDs refactor and extend (#21962)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index ec4ad99c75..1baef6d468 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -65,9 +65,7 @@ void CaseLight::update(const bool sflag) {
   #endif
 
   #if CASE_LIGHT_IS_COLOR_LED
-
-    leds.set_color(MakeLEDColor(color.r, color.g, color.b, color.w, n10ct));
-
+    leds.set_color(LEDColor(color.r, color.g, color.b OPTARG(HAS_WHITE_LED, color.w), n10ct));
   #else // !CASE_LIGHT_IS_COLOR_LED
 
     #if CASELIGHT_USES_BRIGHTNESS

commit 84fd0eff17d089e3f75f6585d4bba47f15c00ba7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 23 21:33:22 2021 -0500

    üé® Macros for optional arguments (#21969)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 5a4e2b2579..ec4ad99c75 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -41,7 +41,7 @@ bool CaseLight::on = CASE_LIGHT_DEFAULT_ON;
 #if CASE_LIGHT_IS_COLOR_LED
   #include "leds/leds.h"
   constexpr uint8_t init_case_light[] = CASE_LIGHT_DEFAULT_COLOR;
-  LEDColor CaseLight::color = { init_case_light[0], init_case_light[1], init_case_light[2], TERN_(HAS_WHITE_LED, init_case_light[3]) };
+  LEDColor CaseLight::color = { init_case_light[0], init_case_light[1], init_case_light[2] OPTARG(HAS_WHITE_LED, init_case_light[3]) };
 #endif
 
 void CaseLight::update(const bool sflag) {

commit d71b35c24f5e8d4c40d5e721f3548abfe899592d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 22 21:12:53 2021 -0500

    üé® Apply shorthand and cleanups

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index fb0f6e3bee..5a4e2b2579 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -44,10 +44,6 @@ bool CaseLight::on = CASE_LIGHT_DEFAULT_ON;
   LEDColor CaseLight::color = { init_case_light[0], init_case_light[1], init_case_light[2], TERN_(HAS_WHITE_LED, init_case_light[3]) };
 #endif
 
-#ifndef INVERT_CASE_LIGHT
-  #define INVERT_CASE_LIGHT false
-#endif
-
 void CaseLight::update(const bool sflag) {
   #if CASELIGHT_USES_BRIGHTNESS
     /**
@@ -64,7 +60,7 @@ void CaseLight::update(const bool sflag) {
     if (sflag && on)
       brightness = brightness_sav;  // Restore last brightness for M355 S1
 
-    const uint8_t i = on ? brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
+    const uint8_t i = on ? brightness : 0, n10ct = ENABLED(INVERT_CASE_LIGHT) ? 255 - i : i;
     UNUSED(n10ct);
   #endif
 
@@ -86,7 +82,7 @@ void CaseLight::update(const bool sflag) {
       else
     #endif
       {
-        const bool s = on ? !INVERT_CASE_LIGHT : INVERT_CASE_LIGHT;
+        const bool s = on ? TERN(INVERT_CASE_LIGHT, LOW, HIGH) : TERN(INVERT_CASE_LIGHT, HIGH, LOW);
         WRITE(CASE_LIGHT_PIN, s ? HIGH : LOW);
       }
 

commit 9485d44903579f90a3831d8f71a2d1bc97052cb3
Author: sanek88lbl <42996016+sanek88lbl@users.noreply.github.com>
Date:   Thu May 6 14:10:18 2021 +0300

    Patches for CASE_LIGHT_USE_RGB_LED (#21811)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index d4cc6b1504..fb0f6e3bee 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -28,10 +28,6 @@
 
 CaseLight caselight;
 
-#if CASE_LIGHT_IS_COLOR_LED
-  #include "leds/leds.h"
-#endif
-
 #if CASELIGHT_USES_BRIGHTNESS && !defined(CASE_LIGHT_DEFAULT_BRIGHTNESS)
   #define CASE_LIGHT_DEFAULT_BRIGHTNESS 0 // For use on PWM pin as non-PWM just sets a default
 #endif
@@ -43,13 +39,9 @@ CaseLight caselight;
 bool CaseLight::on = CASE_LIGHT_DEFAULT_ON;
 
 #if CASE_LIGHT_IS_COLOR_LED
-  LEDColor CaseLight::color =
-    #ifdef CASE_LIGHT_DEFAULT_COLOR
-      CASE_LIGHT_DEFAULT_COLOR
-    #else
-      { 255, 255, 255, 255 }
-    #endif
-  ;
+  #include "leds/leds.h"
+  constexpr uint8_t init_case_light[] = CASE_LIGHT_DEFAULT_COLOR;
+  LEDColor CaseLight::color = { init_case_light[0], init_case_light[1], init_case_light[2], TERN_(HAS_WHITE_LED, init_case_light[3]) };
 #endif
 
 #ifndef INVERT_CASE_LIGHT
@@ -73,14 +65,12 @@ void CaseLight::update(const bool sflag) {
       brightness = brightness_sav;  // Restore last brightness for M355 S1
 
     const uint8_t i = on ? brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
+    UNUSED(n10ct);
   #endif
 
   #if CASE_LIGHT_IS_COLOR_LED
 
-    leds.set_color(
-      MakeLEDColor(color.r, color.g, color.b, color.w, n10ct),
-      false
-    );
+    leds.set_color(MakeLEDColor(color.r, color.g, color.b, color.w, n10ct));
 
   #else // !CASE_LIGHT_IS_COLOR_LED
 

commit e0aa9ce372710d2bd1147ab0779072e6a02b61c9
Author: LinFor <linfor@gmail.com>
Date:   Sun Feb 28 01:06:48 2021 +0300

    RGB Caselight (#20341)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 0eba102a04..d4cc6b1504 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -28,6 +28,10 @@
 
 CaseLight caselight;
 
+#if CASE_LIGHT_IS_COLOR_LED
+  #include "leds/leds.h"
+#endif
+
 #if CASELIGHT_USES_BRIGHTNESS && !defined(CASE_LIGHT_DEFAULT_BRIGHTNESS)
   #define CASE_LIGHT_DEFAULT_BRIGHTNESS 0 // For use on PWM pin as non-PWM just sets a default
 #endif
@@ -38,10 +42,10 @@ CaseLight caselight;
 
 bool CaseLight::on = CASE_LIGHT_DEFAULT_ON;
 
-#if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
+#if CASE_LIGHT_IS_COLOR_LED
   LEDColor CaseLight::color =
-    #ifdef CASE_LIGHT_NEOPIXEL_COLOR
-      CASE_LIGHT_NEOPIXEL_COLOR
+    #ifdef CASE_LIGHT_DEFAULT_COLOR
+      CASE_LIGHT_DEFAULT_COLOR
     #else
       { 255, 255, 255, 255 }
     #endif
@@ -71,17 +75,17 @@ void CaseLight::update(const bool sflag) {
     const uint8_t i = on ? brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
   #endif
 
-  #if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
+  #if CASE_LIGHT_IS_COLOR_LED
 
     leds.set_color(
       MakeLEDColor(color.r, color.g, color.b, color.w, n10ct),
       false
     );
 
-  #else // !CASE_LIGHT_USE_NEOPIXEL
+  #else // !CASE_LIGHT_IS_COLOR_LED
 
     #if CASELIGHT_USES_BRIGHTNESS
-      if (PWM_PIN(CASE_LIGHT_PIN))
+      if (pin_is_pwm())
         analogWrite(pin_t(CASE_LIGHT_PIN), (
           #if CASE_LIGHT_MAX_PWM == 255
             n10ct
@@ -96,7 +100,11 @@ void CaseLight::update(const bool sflag) {
         WRITE(CASE_LIGHT_PIN, s ? HIGH : LOW);
       }
 
-  #endif // !CASE_LIGHT_USE_NEOPIXEL
+  #endif // !CASE_LIGHT_IS_COLOR_LED
+
+  #if ENABLED(CASE_LIGHT_USE_RGB_LED)
+    if (leds.lights_on) leds.update(); else leds.set_off();
+  #endif
 }
 
 #endif // CASE_LIGHT_ENABLE

commit 0ffee29a11eeaa488bc3f64c773e86c5944ec286
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 22 22:31:48 2020 -0500

    Case light brightness cleanup (#19856)
    
    Co-authored-by: Chris <chris@chrisnovoa.com>

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 8a128bb12d..0eba102a04 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -28,7 +28,14 @@
 
 CaseLight caselight;
 
-uint8_t CaseLight::brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
+#if CASELIGHT_USES_BRIGHTNESS && !defined(CASE_LIGHT_DEFAULT_BRIGHTNESS)
+  #define CASE_LIGHT_DEFAULT_BRIGHTNESS 0 // For use on PWM pin as non-PWM just sets a default
+#endif
+
+#if CASELIGHT_USES_BRIGHTNESS
+  uint8_t CaseLight::brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
+#endif
+
 bool CaseLight::on = CASE_LIGHT_DEFAULT_ON;
 
 #if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
@@ -46,21 +53,21 @@ bool CaseLight::on = CASE_LIGHT_DEFAULT_ON;
 #endif
 
 void CaseLight::update(const bool sflag) {
-  /**
-   * The brightness_sav (and sflag) is needed because ARM chips ignore
-   * a "WRITE(CASE_LIGHT_PIN,x)" command to the pins that are directly
-   * controlled by the PWM module. In order to turn them off the brightness
-   * level needs to be set to OFF. Since we can't use the PWM register to
-   * save the last brightness level we need a variable to save it.
-   */
-  static uint8_t brightness_sav;  // Save brightness info for restore on "M355 S1"
-
-  if (on || !sflag)
-    brightness_sav = brightness;  // Save brightness except for M355 S0
-  if (sflag && on)
-    brightness = brightness_sav;  // Restore last brightness for M355 S1
-
-  #if ENABLED(CASE_LIGHT_USE_NEOPIXEL) || DISABLED(CASE_LIGHT_NO_BRIGHTNESS)
+  #if CASELIGHT_USES_BRIGHTNESS
+    /**
+     * The brightness_sav (and sflag) is needed because ARM chips ignore
+     * a "WRITE(CASE_LIGHT_PIN,x)" command to the pins that are directly
+     * controlled by the PWM module. In order to turn them off the brightness
+     * level needs to be set to OFF. Since we can't use the PWM register to
+     * save the last brightness level we need a variable to save it.
+     */
+    static uint8_t brightness_sav;  // Save brightness info for restore on "M355 S1"
+
+    if (on || !sflag)
+      brightness_sav = brightness;  // Save brightness except for M355 S0
+    if (sflag && on)
+      brightness = brightness_sav;  // Restore last brightness for M355 S1
+
     const uint8_t i = on ? brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
   #endif
 
@@ -73,7 +80,7 @@ void CaseLight::update(const bool sflag) {
 
   #else // !CASE_LIGHT_USE_NEOPIXEL
 
-    #if DISABLED(CASE_LIGHT_NO_BRIGHTNESS)
+    #if CASELIGHT_USES_BRIGHTNESS
       if (PWM_PIN(CASE_LIGHT_PIN))
         analogWrite(pin_t(CASE_LIGHT_PIN), (
           #if CASE_LIGHT_MAX_PWM == 255

commit 99ba866d8d3c9abc16558ca12ba34efb9a7922e5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Aug 6 08:14:00 2020 -0500

    Optimize G-code / feature dependencies (#18919)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 4287a0f262..8a128bb12d 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -22,14 +22,17 @@
 
 #include "../inc/MarlinConfig.h"
 
-#if HAS_CASE_LIGHT
+#if ENABLED(CASE_LIGHT_ENABLE)
 
-uint8_t case_light_brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
-bool case_light_on = CASE_LIGHT_DEFAULT_ON;
+#include "caselight.h"
+
+CaseLight caselight;
+
+uint8_t CaseLight::brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
+bool CaseLight::on = CASE_LIGHT_DEFAULT_ON;
 
 #if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
-  #include "leds/leds.h"
-  LEDColor case_light_color =
+  LEDColor CaseLight::color =
     #ifdef CASE_LIGHT_NEOPIXEL_COLOR
       CASE_LIGHT_NEOPIXEL_COLOR
     #else
@@ -38,34 +41,33 @@ bool case_light_on = CASE_LIGHT_DEFAULT_ON;
   ;
 #endif
 
-/**
- * The following are needed because ARM chips ignore a "WRITE(CASE_LIGHT_PIN,x)" command to the pins that
- * are directly controlled by the PWM module. In order to turn them off the brightness level needs to be
- * set to off.  Since we can't use the pwm register to save the last brightness level we need a variable
- * to save it.
- */
-uint8_t case_light_brightness_sav;   // saves brighness info so can restore when "M355 S1" received
-bool case_light_arg_flag;  // flag to notify if S or P argument type
-
 #ifndef INVERT_CASE_LIGHT
   #define INVERT_CASE_LIGHT false
 #endif
 
-void update_case_light() {
+void CaseLight::update(const bool sflag) {
+  /**
+   * The brightness_sav (and sflag) is needed because ARM chips ignore
+   * a "WRITE(CASE_LIGHT_PIN,x)" command to the pins that are directly
+   * controlled by the PWM module. In order to turn them off the brightness
+   * level needs to be set to OFF. Since we can't use the PWM register to
+   * save the last brightness level we need a variable to save it.
+   */
+  static uint8_t brightness_sav;  // Save brightness info for restore on "M355 S1"
 
-  if (!(case_light_arg_flag && !case_light_on))
-    case_light_brightness_sav = case_light_brightness;  // save brightness except if this is an S0 argument
-  if (case_light_arg_flag && case_light_on)
-    case_light_brightness = case_light_brightness_sav;  // restore last brightens if this is an S1 argument
+  if (on || !sflag)
+    brightness_sav = brightness;  // Save brightness except for M355 S0
+  if (sflag && on)
+    brightness = brightness_sav;  // Restore last brightness for M355 S1
 
   #if ENABLED(CASE_LIGHT_USE_NEOPIXEL) || DISABLED(CASE_LIGHT_NO_BRIGHTNESS)
-    const uint8_t i = case_light_on ? case_light_brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
+    const uint8_t i = on ? brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
   #endif
 
   #if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
 
     leds.set_color(
-      MakeLEDColor(case_light_color.r, case_light_color.g, case_light_color.b, case_light_color.w, n10ct),
+      MakeLEDColor(color.r, color.g, color.b, color.w, n10ct),
       false
     );
 
@@ -83,11 +85,11 @@ void update_case_light() {
       else
     #endif
       {
-        const bool s = case_light_on ? !INVERT_CASE_LIGHT : INVERT_CASE_LIGHT;
+        const bool s = on ? !INVERT_CASE_LIGHT : INVERT_CASE_LIGHT;
         WRITE(CASE_LIGHT_PIN, s ? HIGH : LOW);
       }
 
   #endif // !CASE_LIGHT_USE_NEOPIXEL
 }
 
-#endif // HAS_CASE_LIGHT
+#endif // CASE_LIGHT_ENABLE

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index a135cac418..4287a0f262 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 740dd7183a..a135cac418 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 7a4758a6a29eb56c3e56c0eaed7809022459c6ae
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Feb 1 07:55:53 2020 -0600

    Fix RGB / Neopixel white color bug
    
    See #16752

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index bdc2898baf..740dd7183a 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -58,7 +58,7 @@ void update_case_light() {
   if (case_light_arg_flag && case_light_on)
     case_light_brightness = case_light_brightness_sav;  // restore last brightens if this is an S1 argument
 
-  #if ENABLED(CASE_LIGHT_USE_NEOPIXEL) || NONE(CASE_LIGHT_USE_NEOPIXEL, CASE_LIGHT_NO_BRIGHTNESS)
+  #if ENABLED(CASE_LIGHT_USE_NEOPIXEL) || DISABLED(CASE_LIGHT_NO_BRIGHTNESS)
     const uint8_t i = case_light_on ? case_light_brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
   #endif
 

commit 675295692b88440facb988ea910455486ea7fa17
Author: ManuelMcLure <manuel@mclure.org>
Date:   Sun Jan 5 00:52:38 2020 -0800

    Fix unused var warning (#16467)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 8c58d8452a..bdc2898baf 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -58,7 +58,9 @@ void update_case_light() {
   if (case_light_arg_flag && case_light_on)
     case_light_brightness = case_light_brightness_sav;  // restore last brightens if this is an S1 argument
 
-  const uint8_t i = case_light_on ? case_light_brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
+  #if ENABLED(CASE_LIGHT_USE_NEOPIXEL) || NONE(CASE_LIGHT_USE_NEOPIXEL, CASE_LIGHT_NO_BRIGHTNESS)
+    const uint8_t i = case_light_on ? case_light_brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
+  #endif
 
   #if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
 
@@ -71,13 +73,13 @@ void update_case_light() {
 
     #if DISABLED(CASE_LIGHT_NO_BRIGHTNESS)
       if (PWM_PIN(CASE_LIGHT_PIN))
-        analogWrite(pin_t(CASE_LIGHT_PIN),
+        analogWrite(pin_t(CASE_LIGHT_PIN), (
           #if CASE_LIGHT_MAX_PWM == 255
             n10ct
           #else
             map(n10ct, 0, 255, 0, CASE_LIGHT_MAX_PWM)
           #endif
-        );
+        ));
       else
     #endif
       {

commit a1ad01e4abb096167e66d05b473c7e4c4fe9475e
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sun Oct 6 05:32:50 2019 +0200

    Limit Case Light PWM (#15459)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 81eb4aaac4..8c58d8452a 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -71,7 +71,13 @@ void update_case_light() {
 
     #if DISABLED(CASE_LIGHT_NO_BRIGHTNESS)
       if (PWM_PIN(CASE_LIGHT_PIN))
-        analogWrite(pin_t(CASE_LIGHT_PIN), n10ct);
+        analogWrite(pin_t(CASE_LIGHT_PIN),
+          #if CASE_LIGHT_MAX_PWM == 255
+            n10ct
+          #else
+            map(n10ct, 0, 255, 0, CASE_LIGHT_MAX_PWM)
+          #endif
+        );
       else
     #endif
       {

commit d4415dcf592bbb1db869316a3020d92fa5a23edb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jul 2 04:04:49 2019 -0500

    Fix analogWrite ambiguity

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index f677b558d5..81eb4aaac4 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -71,7 +71,7 @@ void update_case_light() {
 
     #if DISABLED(CASE_LIGHT_NO_BRIGHTNESS)
       if (PWM_PIN(CASE_LIGHT_PIN))
-        analogWrite(CASE_LIGHT_PIN, n10ct);
+        analogWrite(pin_t(CASE_LIGHT_PIN), n10ct);
       else
     #endif
       {

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 4a4b8034f4..f677b558d5 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 4138b1f9ae4646aa835be6eedcd5a014f9ebc7ba
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Fri Jun 7 08:23:42 2019 -0400

    Option to disable Case Light brightness control (#14165)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 1256acb6d7..4a4b8034f4 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -69,12 +69,15 @@ void update_case_light() {
 
   #else // !CASE_LIGHT_USE_NEOPIXEL
 
-    if (PWM_PIN(CASE_LIGHT_PIN))
-      analogWrite(CASE_LIGHT_PIN, n10ct);
-    else {
-      const bool s = case_light_on ? !INVERT_CASE_LIGHT : INVERT_CASE_LIGHT;
-      WRITE(CASE_LIGHT_PIN, s ? HIGH : LOW);
-    }
+    #if DISABLED(CASE_LIGHT_NO_BRIGHTNESS)
+      if (PWM_PIN(CASE_LIGHT_PIN))
+        analogWrite(CASE_LIGHT_PIN, n10ct);
+      else
+    #endif
+      {
+        const bool s = case_light_on ? !INVERT_CASE_LIGHT : INVERT_CASE_LIGHT;
+        WRITE(CASE_LIGHT_PIN, s ? HIGH : LOW);
+      }
 
   #endif // !CASE_LIGHT_USE_NEOPIXEL
 }

commit 67bee06e4371fca6511aae99125337b6e63560d8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 13 07:21:10 2019 -0500

    No patch needed for non-libmaple analogWrite
    
    See https://github.com/pinchies/Marlin/pull/1#issuecomment-471388743

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index dc32d67814..1256acb6d7 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -70,7 +70,7 @@ void update_case_light() {
   #else // !CASE_LIGHT_USE_NEOPIXEL
 
     if (PWM_PIN(CASE_LIGHT_PIN))
-      ANALOG_WRITE(CASE_LIGHT_PIN, n10ct);
+      analogWrite(CASE_LIGHT_PIN, n10ct);
     else {
       const bool s = case_light_on ? !INVERT_CASE_LIGHT : INVERT_CASE_LIGHT;
       WRITE(CASE_LIGHT_PIN, s ? HIGH : LOW);

commit f89b375fb9ca9730a4165ac3bf9f0f9dc100a338
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 13 06:51:15 2019 -0500

    Fixes and improvements for PWM pins (#13383)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index ba662360b2..dc32d67814 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -69,8 +69,8 @@ void update_case_light() {
 
   #else // !CASE_LIGHT_USE_NEOPIXEL
 
-    if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN))
-      analogWrite(CASE_LIGHT_PIN, n10ct);
+    if (PWM_PIN(CASE_LIGHT_PIN))
+      ANALOG_WRITE(CASE_LIGHT_PIN, n10ct);
     else {
       const bool s = case_light_on ? !INVERT_CASE_LIGHT : INVERT_CASE_LIGHT;
       WRITE(CASE_LIGHT_PIN, s ? HIGH : LOW);

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index ad06688d1f..ba662360b2 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 7bb5d4bfe85ce05563d6620714949fe6821e0b76
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Jan 17 20:20:26 2019 +0100

    Small LED code reorganization (#12929)

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index e2cc23368a..ad06688d1f 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -69,7 +69,6 @@ void update_case_light() {
 
   #else // !CASE_LIGHT_USE_NEOPIXEL
 
-    SET_OUTPUT(CASE_LIGHT_PIN);
     if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN))
       analogWrite(CASE_LIGHT_PIN, n10ct);
     else {

commit 8190fdb26077d43a0ebb7f7b45417bfd367355e9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 20 16:58:41 2018 -0600

    [2.0.x] Option to use Neopixel as case light (#9270)
    
    * Add option to use Neopixel as case light
    
    * Apply CASE_LIGHT_USE_NEOPIXEL to example configs

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 5cb00a5285..e2cc23368a 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -27,6 +27,17 @@
 uint8_t case_light_brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
 bool case_light_on = CASE_LIGHT_DEFAULT_ON;
 
+#if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
+  #include "leds/leds.h"
+  LEDColor case_light_color =
+    #ifdef CASE_LIGHT_NEOPIXEL_COLOR
+      CASE_LIGHT_NEOPIXEL_COLOR
+    #else
+      { 255, 255, 255, 255 }
+    #endif
+  ;
+#endif
+
 /**
  * The following are needed because ARM chips ignore a "WRITE(CASE_LIGHT_PIN,x)" command to the pins that
  * are directly controlled by the PWM module. In order to turn them off the brightness level needs to be
@@ -34,32 +45,39 @@ bool case_light_on = CASE_LIGHT_DEFAULT_ON;
  * to save it.
  */
 uint8_t case_light_brightness_sav;   // saves brighness info so can restore when "M355 S1" received
-bool case_light_arg_flag;  // flag to notify if S or P arguement type
+bool case_light_arg_flag;  // flag to notify if S or P argument type
 
 #ifndef INVERT_CASE_LIGHT
   #define INVERT_CASE_LIGHT false
 #endif
 
 void update_case_light() {
-  SET_OUTPUT(CASE_LIGHT_PIN);
 
   if (!(case_light_arg_flag && !case_light_on))
-    case_light_brightness_sav = case_light_brightness;  // save brightness except if this is an S0 arguement
+    case_light_brightness_sav = case_light_brightness;  // save brightness except if this is an S0 argument
   if (case_light_arg_flag && case_light_on)
-    case_light_brightness = case_light_brightness_sav;  // restore last brightens if this is an S1 arguement
+    case_light_brightness = case_light_brightness_sav;  // restore last brightens if this is an S1 argument
 
-  if (case_light_on) {
-    if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN))
-      analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 - case_light_brightness : case_light_brightness);
-    else
-      WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? LOW : HIGH);
-  }
-  else {
+  const uint8_t i = case_light_on ? case_light_brightness : 0, n10ct = INVERT_CASE_LIGHT ? 255 - i : i;
+
+  #if ENABLED(CASE_LIGHT_USE_NEOPIXEL)
+
+    leds.set_color(
+      MakeLEDColor(case_light_color.r, case_light_color.g, case_light_color.b, case_light_color.w, n10ct),
+      false
+    );
+
+  #else // !CASE_LIGHT_USE_NEOPIXEL
+
+    SET_OUTPUT(CASE_LIGHT_PIN);
     if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN))
-      analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 : 0);
-    else
-      WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? HIGH : LOW);
-  }
+      analogWrite(CASE_LIGHT_PIN, n10ct);
+    else {
+      const bool s = case_light_on ? !INVERT_CASE_LIGHT : INVERT_CASE_LIGHT;
+      WRITE(CASE_LIGHT_PIN, s ? HIGH : LOW);
+    }
+
+  #endif // !CASE_LIGHT_USE_NEOPIXEL
 }
 
 #endif // HAS_CASE_LIGHT

commit f7133e53fd8ebd8e74214972c0cc1fdd414a35dc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 1 21:22:15 2017 -0500

    Fix case light off
    
    Addressing #8205

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 839fc946fd..5cb00a5285 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -49,15 +49,16 @@ void update_case_light() {
     case_light_brightness = case_light_brightness_sav;  // restore last brightens if this is an S1 arguement
 
   if (case_light_on) {
-    if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN)) {
-      analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 - case_light_brightness : case_light_brightness );
-    }
-    else WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? LOW : HIGH);
+    if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN))
+      analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 - case_light_brightness : case_light_brightness);
+    else
+      WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? LOW : HIGH);
   }
   else {
     if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN))
-      analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 : 0 );  // turn the light off
-    WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? HIGH : LOW);
+      analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 : 0);
+    else
+      WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? HIGH : LOW);
   }
 }
 

commit bea3ec2724e365693589d9e09616863f4974b218
Author: Christopher Pepper <p3p@p3psoft.co.uk>
Date:   Sun Jun 18 00:36:10 2017 +0100

    M355 S0, S1 fixes & faster LCD, SD card
    
    fix Travis error

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 74a6efdd89..839fc946fd 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -27,19 +27,38 @@
 uint8_t case_light_brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
 bool case_light_on = CASE_LIGHT_DEFAULT_ON;
 
+/**
+ * The following are needed because ARM chips ignore a "WRITE(CASE_LIGHT_PIN,x)" command to the pins that
+ * are directly controlled by the PWM module. In order to turn them off the brightness level needs to be
+ * set to off.  Since we can't use the pwm register to save the last brightness level we need a variable
+ * to save it.
+ */
+uint8_t case_light_brightness_sav;   // saves brighness info so can restore when "M355 S1" received
+bool case_light_arg_flag;  // flag to notify if S or P arguement type
+
 #ifndef INVERT_CASE_LIGHT
   #define INVERT_CASE_LIGHT false
 #endif
 
 void update_case_light() {
   SET_OUTPUT(CASE_LIGHT_PIN);
+
+  if (!(case_light_arg_flag && !case_light_on))
+    case_light_brightness_sav = case_light_brightness;  // save brightness except if this is an S0 arguement
+  if (case_light_arg_flag && case_light_on)
+    case_light_brightness = case_light_brightness_sav;  // restore last brightens if this is an S1 arguement
+
   if (case_light_on) {
     if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN)) {
       analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 - case_light_brightness : case_light_brightness );
     }
     else WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? LOW : HIGH);
   }
-  else WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? HIGH : LOW);
+  else {
+    if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN))
+      analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 : 0 );  // turn the light off
+    WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? HIGH : LOW);
+  }
 }
 
 #endif // HAS_CASE_LIGHT

commit dff2904c0f125b806ee63b21a4b27215b389152f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 27 04:57:14 2017 -0500

    Marlin code whitespace cleanup

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 22ace5871b..74a6efdd89 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -26,7 +26,7 @@
 
 uint8_t case_light_brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
 bool case_light_on = CASE_LIGHT_DEFAULT_ON;
-    
+
 #ifndef INVERT_CASE_LIGHT
   #define INVERT_CASE_LIGHT false
 #endif

commit bfd1e75c040d0c6a0b2c4900649c3094770503a9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 23 17:25:18 2017 -0500

    Patch for caselight + lcd compile issues

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
index 6d755ff9d5..22ace5871b 100644
--- a/Marlin/src/feature/caselight.cpp
+++ b/Marlin/src/feature/caselight.cpp
@@ -24,7 +24,7 @@
 
 #if HAS_CASE_LIGHT
 
-int case_light_brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
+uint8_t case_light_brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
 bool case_light_on = CASE_LIGHT_DEFAULT_ON;
     
 #ifndef INVERT_CASE_LIGHT
@@ -33,7 +33,6 @@ bool case_light_on = CASE_LIGHT_DEFAULT_ON;
 
 void update_case_light() {
   SET_OUTPUT(CASE_LIGHT_PIN);
-  uint8_t case_light_bright = (uint8_t)case_light_brightness;
   if (case_light_on) {
     if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN)) {
       analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 - case_light_brightness : case_light_brightness );

commit 8ca0b2fd683e62192821fbe2022f897483294804
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 18:56:29 2017 -0500

    Move M355 caselight to cpp

diff --git a/Marlin/src/feature/caselight.cpp b/Marlin/src/feature/caselight.cpp
new file mode 100644
index 0000000000..6d755ff9d5
--- /dev/null
+++ b/Marlin/src/feature/caselight.cpp
@@ -0,0 +1,46 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../inc/MarlinConfig.h"
+
+#if HAS_CASE_LIGHT
+
+int case_light_brightness = CASE_LIGHT_DEFAULT_BRIGHTNESS;
+bool case_light_on = CASE_LIGHT_DEFAULT_ON;
+    
+#ifndef INVERT_CASE_LIGHT
+  #define INVERT_CASE_LIGHT false
+#endif
+
+void update_case_light() {
+  SET_OUTPUT(CASE_LIGHT_PIN);
+  uint8_t case_light_bright = (uint8_t)case_light_brightness;
+  if (case_light_on) {
+    if (USEABLE_HARDWARE_PWM(CASE_LIGHT_PIN)) {
+      analogWrite(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? 255 - case_light_brightness : case_light_brightness );
+    }
+    else WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? LOW : HIGH);
+  }
+  else WRITE(CASE_LIGHT_PIN, INVERT_CASE_LIGHT ? HIGH : LOW);
+}
+
+#endif // HAS_CASE_LIGHT
