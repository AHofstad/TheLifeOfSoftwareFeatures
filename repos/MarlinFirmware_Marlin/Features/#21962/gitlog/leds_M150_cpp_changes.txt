commit 6c1fd1f69c349b24ded49d7c5a1118fe7a5e37dd
Author: qwertymodo <qwertymodo@qwertymodo.com>
Date:   Thu Jan 25 16:16:32 2024 -0800

    ü©π Fix single Neo strip M150 K (#26709)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 43062c3f75..dd5752ee4c 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -60,6 +60,7 @@ void GcodeSuite::M150() {
 
   #if ENABLED(NEOPIXEL_LED)
     const pixel_index_t index = parser.intval('I', -1);
+    const bool seenK = parser.seen_test('K');
     #if ENABLED(NEOPIXEL2_SEPARATE)
       #ifndef NEOPIXEL_M150_DEFAULT
         #define NEOPIXEL_M150_DEFAULT -1
@@ -69,12 +70,13 @@ void GcodeSuite::M150() {
       int8_t brightness = neo.brightness(), unit = parser.intval('S', NEOPIXEL_M150_DEFAULT);
       switch (unit) {
         case -1: neo2.neoindex = index; // fall-thru
-        case  0:  neo.neoindex = index; old_color = parser.seen('K') ? neo.pixel_color(index >= 0 ? index : 0) : 0; break;
-        case  1: neo2.neoindex = index; brightness = neo2.brightness(); old_color = parser.seen('K') ? neo2.pixel_color(index >= 0 ? index : 0) : 0; break;
+        case  0:  neo.neoindex = index; old_color = seenK ? neo.pixel_color(_MAX(index, 0)) : 0; break;
+        case  1: neo2.neoindex = index; brightness = neo2.brightness(); old_color = seenK ? neo2.pixel_color(_MAX(index, 0)) : 0; break;
       }
     #else
       const uint8_t brightness = neo.brightness();
       neo.neoindex = index;
+      old_color = seenK ? neo.pixel_color(_MAX(index, 0)) : 0;
     #endif
   #endif
 

commit 44b68319f1ff7808ca95b558e075b62a163d38de
Author: Sebastien BLAISOT <sebastien@blaisot.org>
Date:   Wed Dec 7 22:49:38 2022 +0100

    ‚ú® M150 S default index (#23066)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 77c58411a3..43062c3f75 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -61,7 +61,12 @@ void GcodeSuite::M150() {
   #if ENABLED(NEOPIXEL_LED)
     const pixel_index_t index = parser.intval('I', -1);
     #if ENABLED(NEOPIXEL2_SEPARATE)
-      int8_t brightness = neo.brightness(), unit = parser.intval('S', -1);
+      #ifndef NEOPIXEL_M150_DEFAULT
+        #define NEOPIXEL_M150_DEFAULT -1
+      #elif NEOPIXEL_M150_DEFAULT > 1
+        #error "NEOPIXEL_M150_DEFAULT must be -1, 0, or 1."
+      #endif
+      int8_t brightness = neo.brightness(), unit = parser.intval('S', NEOPIXEL_M150_DEFAULT);
       switch (unit) {
         case -1: neo2.neoindex = index; // fall-thru
         case  0:  neo.neoindex = index; old_color = parser.seen('K') ? neo.pixel_color(index >= 0 ? index : 0) : 0; break;

commit 5a2cc41f9c967f8183b4a8eb5547c4a6034c244f
Author: qwertymodo <qwertymodo@gmail.com>
Date:   Fri Aug 5 22:07:30 2022 -0700

    ‚ú® M150 K ‚Äì Keep unspecified components (#24315)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 95e7367b6e..77c58411a3 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -31,11 +31,13 @@
  * M150: Set Status LED Color - Use R-U-B-W for R-G-B-W
  *       and Brightness       - Use P (for NEOPIXEL only)
  *
- * Always sets all 3 or 4 components. If a component is left out, set to 0.
- *                                    If brightness is left out, no value changed
+ * Always sets all 3 or 4 components unless the K flag is specified.
+ *                              If a component is left out, set to 0.
+ *                              If brightness is left out, no value changed.
  *
  * With NEOPIXEL_LED:
  *  I<index>  Set the NeoPixel index to affect. Default: All
+ *  K         Keep all unspecified values unchanged instead of setting to 0.
  *
  * With NEOPIXEL2_SEPARATE:
  *  S<index>  The NeoPixel strip to set. Default: All.
@@ -51,16 +53,19 @@
  *   M150 P          ; Set LED full brightness
  *   M150 I1 R       ; Set NEOPIXEL index 1 to red
  *   M150 S1 I1 R    ; Set SEPARATE index 1 to red
+ *   M150 K R127     ; Set LED red to 50% without changing blue or green
  */
 void GcodeSuite::M150() {
+  int32_t old_color = 0;
+
   #if ENABLED(NEOPIXEL_LED)
     const pixel_index_t index = parser.intval('I', -1);
     #if ENABLED(NEOPIXEL2_SEPARATE)
       int8_t brightness = neo.brightness(), unit = parser.intval('S', -1);
       switch (unit) {
         case -1: neo2.neoindex = index; // fall-thru
-        case  0:  neo.neoindex = index; break;
-        case  1: neo2.neoindex = index; brightness = neo2.brightness(); break;
+        case  0:  neo.neoindex = index; old_color = parser.seen('K') ? neo.pixel_color(index >= 0 ? index : 0) : 0; break;
+        case  1: neo2.neoindex = index; brightness = neo2.brightness(); old_color = parser.seen('K') ? neo2.pixel_color(index >= 0 ? index : 0) : 0; break;
       }
     #else
       const uint8_t brightness = neo.brightness();
@@ -69,10 +74,10 @@ void GcodeSuite::M150() {
   #endif
 
   const LEDColor color = LEDColor(
-    parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0
-    OPTARG(HAS_WHITE_LED, parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0)
+    parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : (old_color >> 16) & 0xFF,
+    parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : (old_color >>  8) & 0xFF,
+    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : old_color & 0xFF
+    OPTARG(HAS_WHITE_LED, parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : (old_color >> 24) & 0xFF)
     OPTARG(NEOPIXEL_LED, parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : brightness)
   );
 

commit d9ccf0a1445bcfa5c9eca40f2809f98fbf29e871
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 23 06:11:03 2022 -0500

    üìù Fix 'M150 S' comment

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index f01c220d01..95e7367b6e 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -38,7 +38,7 @@
  *  I<index>  Set the NeoPixel index to affect. Default: All
  *
  * With NEOPIXEL2_SEPARATE:
- *  S<index>  The NeoPixel strip to set. Default is index 0.
+ *  S<index>  The NeoPixel strip to set. Default: All.
  *
  * Examples:
  *

commit ba3239145429e15901bb642a7225204f95b8e308
Author: GHGiampy <83699429+GHGiampy@users.noreply.github.com>
Date:   Mon Dec 20 09:44:43 2021 +0100

    üßë‚Äçüíª Option allowing > 127 Neopixels (#23322)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 45278fe1f5..f01c220d01 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -54,7 +54,7 @@
  */
 void GcodeSuite::M150() {
   #if ENABLED(NEOPIXEL_LED)
-    const int8_t index = parser.intval('I', -1);
+    const pixel_index_t index = parser.intval('I', -1);
     #if ENABLED(NEOPIXEL2_SEPARATE)
       int8_t brightness = neo.brightness(), unit = parser.intval('S', -1);
       switch (unit) {

commit b88117d6364b8919a8a7df6c80d8132af98a6afc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 21 06:25:13 2021 -0500

    üé® Fix L64xx enable, clean up conditionals

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 4d271007e5..45278fe1f5 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -56,10 +56,10 @@ void GcodeSuite::M150() {
   #if ENABLED(NEOPIXEL_LED)
     const int8_t index = parser.intval('I', -1);
     #if ENABLED(NEOPIXEL2_SEPARATE)
-      int8_t brightness, unit = parser.intval('S', -1);
+      int8_t brightness = neo.brightness(), unit = parser.intval('S', -1);
       switch (unit) {
         case -1: neo2.neoindex = index; // fall-thru
-        case  0:  neo.neoindex = index; brightness =  neo.brightness(); break;
+        case  0:  neo.neoindex = index; break;
         case  1: neo2.neoindex = index; brightness = neo2.brightness(); break;
       }
     #else

commit 59f01b417ad4b2a6a2f56758cf1ac797edaa4a6f
Author: Grumpy <dfouche8@gmail.com>
Date:   Tue Jun 22 08:12:39 2021 +1200

    üêõ Fix dual Neopixels (#22174)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 5d175ea8f7..4d271007e5 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -52,14 +52,16 @@
  *   M150 I1 R       ; Set NEOPIXEL index 1 to red
  *   M150 S1 I1 R    ; Set SEPARATE index 1 to red
  */
-
 void GcodeSuite::M150() {
   #if ENABLED(NEOPIXEL_LED)
-    const uint8_t index = parser.intval('I', -1);
+    const int8_t index = parser.intval('I', -1);
     #if ENABLED(NEOPIXEL2_SEPARATE)
-      const uint8_t unit = parser.intval('S'),
-                    brightness = unit ? neo2.brightness() : neo.brightness();
-      *(unit ? &neo2.neoindex : &neo.neoindex) = index;
+      int8_t brightness, unit = parser.intval('S', -1);
+      switch (unit) {
+        case -1: neo2.neoindex = index; // fall-thru
+        case  0:  neo.neoindex = index; brightness =  neo.brightness(); break;
+        case  1: neo2.neoindex = index; brightness = neo2.brightness(); break;
+      }
     #else
       const uint8_t brightness = neo.brightness();
       neo.neoindex = index;
@@ -75,10 +77,15 @@ void GcodeSuite::M150() {
   );
 
   #if ENABLED(NEOPIXEL2_SEPARATE)
-    if (unit == 1) { leds2.set_color(color); return; }
+    switch (unit) {
+      case 0: leds.set_color(color); return;
+      case 1: leds2.set_color(color); return;
+    }
   #endif
 
+  // If 'S' is not specified use both
   leds.set_color(color);
+  TERN_(NEOPIXEL2_SEPARATE, leds2.set_color(color));
 }
 
 #endif // HAS_COLOR_LEDS

commit e60c38b6220678b3b9f3a3b31516852f8d25b3b0
Author: ellensp <ellensp@hotmail.com>
Date:   Wed May 26 11:38:23 2021 +1200

    ‚ôªÔ∏è LEDs refactor and extend (#21962)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index cf09bf14ea..5d175ea8f7 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -66,12 +66,12 @@ void GcodeSuite::M150() {
     #endif
   #endif
 
-  const LEDColor color = MakeLEDColor(
+  const LEDColor color = LEDColor(
     parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : brightness
+    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0
+    OPTARG(HAS_WHITE_LED, parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0)
+    OPTARG(NEOPIXEL_LED, parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : brightness)
   );
 
   #if ENABLED(NEOPIXEL2_SEPARATE)

commit 97ec6c1be6f7b3b2e185be9f1637639815acbb1a
Author: Zachary Annand <baconfixation@gmail.com>
Date:   Thu Aug 27 14:18:16 2020 -0500

    Independent Neopixel option (#19115)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 83bd24c41c..cf09bf14ea 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -37,6 +37,9 @@
  * With NEOPIXEL_LED:
  *  I<index>  Set the NeoPixel index to affect. Default: All
  *
+ * With NEOPIXEL2_SEPARATE:
+ *  S<index>  The NeoPixel strip to set. Default is index 0.
+ *
  * Examples:
  *
  *   M150 R255       ; Turn LED red
@@ -47,18 +50,35 @@
  *   M150 P127       ; Set LED 50% brightness
  *   M150 P          ; Set LED full brightness
  *   M150 I1 R       ; Set NEOPIXEL index 1 to red
+ *   M150 S1 I1 R    ; Set SEPARATE index 1 to red
  */
+
 void GcodeSuite::M150() {
   #if ENABLED(NEOPIXEL_LED)
-    neo.neoindex = parser.intval('I', -1);
+    const uint8_t index = parser.intval('I', -1);
+    #if ENABLED(NEOPIXEL2_SEPARATE)
+      const uint8_t unit = parser.intval('S'),
+                    brightness = unit ? neo2.brightness() : neo.brightness();
+      *(unit ? &neo2.neoindex : &neo.neoindex) = index;
+    #else
+      const uint8_t brightness = neo.brightness();
+      neo.neoindex = index;
+    #endif
   #endif
-  leds.set_color(MakeLEDColor(
+
+  const LEDColor color = MakeLEDColor(
     parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : neo.brightness()
-  ));
+    parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : brightness
+  );
+
+  #if ENABLED(NEOPIXEL2_SEPARATE)
+    if (unit == 1) { leds2.set_color(color); return; }
+  #endif
+
+  leds.set_color(color);
 }
 
 #endif // HAS_COLOR_LEDS

commit 66694a213fb4ca15b924c25c49248e54d4278a7e
Author: ellensp <ellensp@hotmail.com>
Date:   Wed Aug 26 01:16:43 2020 +1200

    LEDs followup (#19133)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 1c81c6d6be..83bd24c41c 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -50,7 +50,7 @@
  */
 void GcodeSuite::M150() {
   #if ENABLED(NEOPIXEL_LED)
-    neo.set_neo_index(parser.intval('I', -1));
+    neo.neoindex = parser.intval('I', -1);
   #endif
   leds.set_color(MakeLEDColor(
     parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,

commit 638f6f0f0607399bce82123663f5463380f83ce4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 03:14:11 2020 -0500

    Neopixel => NeoPixel

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 88f02951ad..1c81c6d6be 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -35,7 +35,7 @@
  *                                    If brightness is left out, no value changed
  *
  * With NEOPIXEL_LED:
- *  I<index>  Set the Neopixel index to affect. Default: All
+ *  I<index>  Set the NeoPixel index to affect. Default: All
  *
  * Examples:
  *

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 88e4ec1e27..88f02951ad 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit d6682c860924ca96ee51c15906beffc8e4b4f37b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jul 7 01:57:05 2020 -0500

    Whitespace cleanup

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index a2497961ac..88e4ec1e27 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -47,7 +47,7 @@
  *   M150 P127       ; Set LED 50% brightness
  *   M150 P          ; Set LED full brightness
  *   M150 I1 R       ; Set NEOPIXEL index 1 to red
- */  
+ */
 void GcodeSuite::M150() {
   #if ENABLED(NEOPIXEL_LED)
     neo.set_neo_index(parser.intval('I', -1));

commit 91dc74ff16d5edb0d8ab5c809614acad25426553
Author: ellensp <ellensp@hotmail.com>
Date:   Sat Jul 4 09:33:09 2020 +1200

    M150 I to set Neopixel by index (#18490)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 656b7e5f90..a2497961ac 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -34,6 +34,9 @@
  * Always sets all 3 or 4 components. If a component is left out, set to 0.
  *                                    If brightness is left out, no value changed
  *
+ * With NEOPIXEL_LED:
+ *  I<index>  Set the Neopixel index to affect. Default: All
+ *
  * Examples:
  *
  *   M150 R255       ; Turn LED red
@@ -43,8 +46,12 @@
  *   M150 W          ; Turn LED white using a white LED
  *   M150 P127       ; Set LED 50% brightness
  *   M150 P          ; Set LED full brightness
- */
+ *   M150 I1 R       ; Set NEOPIXEL index 1 to red
+ */  
 void GcodeSuite::M150() {
+  #if ENABLED(NEOPIXEL_LED)
+    neo.set_neo_index(parser.intval('I', -1));
+  #endif
   leds.set_color(MakeLEDColor(
     parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 405be898ae..656b7e5f90 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit e5aa45329305be8ac5e277305d52a449a41bfc98
Author: Tim Moore <tim@youngmoores.com>
Date:   Sat Jul 20 21:14:09 2019 -0700

    Add support for 2 Neopixel strips (#14667)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 1e98ffca2a..405be898ae 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -50,7 +50,7 @@ void GcodeSuite::M150() {
     parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : pixels.getBrightness()
+    parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : neo.brightness()
   ));
 }
 

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 28488cc633..1e98ffca2a 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 7eb8eb70de..28488cc633 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit e37dd645488ffc4377b6ec818c1e38e55b5903b7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 28 01:07:10 2017 -0600

    Apply LEDColor, language fixes

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index f5ea2113f7..7eb8eb70de 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -45,17 +45,13 @@
  *   M150 P          ; Set LED full brightness
  */
 void GcodeSuite::M150() {
-  set_led_color(
+  leds.set_color(MakeLEDColor(
     parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0
-    #if ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_LED)
-      , parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0
-      #if ENABLED(NEOPIXEL_LED)
-        , parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : pixels.getBrightness()
-      #endif
-    #endif
-  );
+    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
+    parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
+    parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : pixels.getBrightness()
+  ));
 }
 
 #endif // HAS_COLOR_LEDS

commit 32512332df436514a5d00fca28b68cb08860fab1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 18 02:08:03 2017 -0600

    Apply some formatting

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 47c6e82ee1..f5ea2113f7 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -28,23 +28,22 @@
 #include "../../../feature/leds/leds.h"
 
 /**
-* M150: Set Status LED Color - Use R-U-B-W for R-G-B-W
-*       and Brightness       - Use P (for NEOPIXEL only)
-*
-* Always sets all 3 or 4 components. If a component is left out, set to 0.
-*                                    If brightness is left out, no value changed
-*
-* Examples:
-*
-*   M150 R255       ; Turn LED red
-*   M150 R255 U127  ; Turn LED orange (PWM only)
-*   M150            ; Turn LED off
-*   M150 R U B      ; Turn LED white
-*   M150 W          ; Turn LED white using a white LED
-*   M150 P127       ; Set LED 50% brightness
-*   M150 P          ; Set LED full brightness
-*/
-
+ * M150: Set Status LED Color - Use R-U-B-W for R-G-B-W
+ *       and Brightness       - Use P (for NEOPIXEL only)
+ *
+ * Always sets all 3 or 4 components. If a component is left out, set to 0.
+ *                                    If brightness is left out, no value changed
+ *
+ * Examples:
+ *
+ *   M150 R255       ; Turn LED red
+ *   M150 R255 U127  ; Turn LED orange (PWM only)
+ *   M150            ; Turn LED off
+ *   M150 R U B      ; Turn LED white
+ *   M150 W          ; Turn LED white using a white LED
+ *   M150 P127       ; Set LED 50% brightness
+ *   M150 P          ; Set LED full brightness
+ */
 void GcodeSuite::M150() {
   set_led_color(
     parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,

commit 3ac581eac92d31287580ea6da5357f3d6cd82db5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 25 15:50:36 2017 -0500

    Neopixel changes for parity with 1.1.x

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 91cdd65995..47c6e82ee1 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -49,9 +49,13 @@ void GcodeSuite::M150() {
   set_led_color(
     parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : LED_BRIGHTNESS
+    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0
+    #if ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_LED)
+      , parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0
+      #if ENABLED(NEOPIXEL_LED)
+        , parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : pixels.getBrightness()
+      #endif
+    #endif
   );
 }
 

commit a11e6a1022b8f70be237fad82a9b6ba22b2db7b1
Author: Slawomir Ciunczyk <s.ciunczyk@moye.eu>
Date:   Thu Oct 5 13:45:36 2017 +0200

    Different NEOPIXEL types
    
    Same as #7728 but for 2.0.x,
    Lot of cleanup and remove references in whole code to other "LED files" than leds.h. Now will be much easier to add next drivers/libraries. e.g. FastLED. But bad news, currently FastLED is suporting only RGB devices (no RGBW)

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
index 9608e90ee9..91cdd65995 100644
--- a/Marlin/src/gcode/feature/leds/M150.cpp
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -28,27 +28,30 @@
 #include "../../../feature/leds/leds.h"
 
 /**
- * M150: Set Status LED Color - Use R-U-B-W for R-G-B-W
- *
- * Always sets all 3 or 4 components. If a component is left out, set to 0.
- *
- * Examples:
- *
- *   M150 R255       ; Turn LED red
- *   M150 R255 U127  ; Turn LED orange (PWM only)
- *   M150            ; Turn LED off
- *   M150 R U B      ; Turn LED white
- *   M150 W          ; Turn LED white using a white LED
- *
- */
+* M150: Set Status LED Color - Use R-U-B-W for R-G-B-W
+*       and Brightness       - Use P (for NEOPIXEL only)
+*
+* Always sets all 3 or 4 components. If a component is left out, set to 0.
+*                                    If brightness is left out, no value changed
+*
+* Examples:
+*
+*   M150 R255       ; Turn LED red
+*   M150 R255 U127  ; Turn LED orange (PWM only)
+*   M150            ; Turn LED off
+*   M150 R U B      ; Turn LED white
+*   M150 W          ; Turn LED white using a white LED
+*   M150 P127       ; Set LED 50% brightness
+*   M150 P          ; Set LED full brightness
+*/
+
 void GcodeSuite::M150() {
   set_led_color(
     parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
     parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
-    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0
-    #if ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_RGBW_LED)
-      , parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0
-    #endif
+    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
+    parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
+    parser.seen('P') ? (parser.has_value() ? parser.value_byte() : 255) : LED_BRIGHTNESS
   );
 }
 

commit 92c15f5578aa5c6baa4609399bce7f756310ea97
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 00:50:24 2017 -0500

    Move M150 to cpp

diff --git a/Marlin/src/gcode/feature/leds/M150.cpp b/Marlin/src/gcode/feature/leds/M150.cpp
new file mode 100644
index 0000000000..9608e90ee9
--- /dev/null
+++ b/Marlin/src/gcode/feature/leds/M150.cpp
@@ -0,0 +1,55 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../../inc/MarlinConfig.h"
+
+#if HAS_COLOR_LEDS
+
+#include "../../gcode.h"
+#include "../../../feature/leds/leds.h"
+
+/**
+ * M150: Set Status LED Color - Use R-U-B-W for R-G-B-W
+ *
+ * Always sets all 3 or 4 components. If a component is left out, set to 0.
+ *
+ * Examples:
+ *
+ *   M150 R255       ; Turn LED red
+ *   M150 R255 U127  ; Turn LED orange (PWM only)
+ *   M150            ; Turn LED off
+ *   M150 R U B      ; Turn LED white
+ *   M150 W          ; Turn LED white using a white LED
+ *
+ */
+void GcodeSuite::M150() {
+  set_led_color(
+    parser.seen('R') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
+    parser.seen('U') ? (parser.has_value() ? parser.value_byte() : 255) : 0,
+    parser.seen('B') ? (parser.has_value() ? parser.value_byte() : 255) : 0
+    #if ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_RGBW_LED)
+      , parser.seen('W') ? (parser.has_value() ? parser.value_byte() : 255) : 0
+    #endif
+  );
+}
+
+#endif // HAS_COLOR_LEDS
