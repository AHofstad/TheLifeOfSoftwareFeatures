commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 2193217df0..1b0772c2f9 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -30,7 +30,7 @@
 
 #include "leds.h"
 
-#if EITHER(NEOPIXEL_STARTUP_TEST, NEOPIXEL2_STARTUP_TEST)
+#if ANY(NEOPIXEL_STARTUP_TEST, NEOPIXEL2_STARTUP_TEST)
   #include "../../core/utility.h"
 #endif
 

commit 866e7d3128a7c526a76b8826df70b3769177385d
Author: Daranbalt4 <119883952+Daranbalt4@users.noreply.github.com>
Date:   Mon Feb 27 04:23:52 2023 +0100

    ‚ú® LCD_BACKLIGHT_TIMEOUT for Neopixel LCD (#25438)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index ab7ffe2177..2193217df0 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -54,7 +54,15 @@ Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIX
     set_background_color(background_color);
   }
 
-#endif
+  void Marlin_NeoPixel::set_background_off() {
+    #ifndef NEOPIXEL_BKGD_TIMEOUT_COLOR
+      #define NEOPIXEL_BKGD_TIMEOUT_COLOR { 0, 0, 0, 0 }
+    #endif
+    constexpr uint8_t background_color_off[4] = NEOPIXEL_BKGD_TIMEOUT_COLOR;
+    set_background_color(background_color_off);
+  }
+
+#endif // NEOPIXEL_BKGD_INDEX_FIRST
 
 void Marlin_NeoPixel::set_color(const uint32_t color) {
   if (neoindex >= 0) {

commit e96e726b4ed2e693a27eec90323ec8ab521f1fb9
Author: Sebastien BLAISOT <sebastien@blaisot.org>
Date:   Sun Jan 8 06:07:14 2023 +0100

    üêõ Fix Neopixel 1 startup (#25203)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 4f104234f1..ab7ffe2177 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -108,7 +108,7 @@ void Marlin_NeoPixel::init() {
   set_color(adaneo1.Color
     TERN(LED_USER_PRESET_STARTUP,
       (LED_USER_PRESET_RED, LED_USER_PRESET_GREEN, LED_USER_PRESET_BLUE, LED_USER_PRESET_WHITE),
-      (255, 255, 255, 255))
+      (0, 0, 0, 0))
   );
 }
 

commit de8e4361104c31cab943cc321e2055c18272edd6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 22 19:08:00 2022 -0500

    üßë‚Äçüíª Add neo.set_background_color(rgbw)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 3569cb180d..4f104234f1 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -44,14 +44,14 @@ Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIX
 
 #ifdef NEOPIXEL_BKGD_INDEX_FIRST
 
-  void Marlin_NeoPixel::set_background_color(uint8_t r, uint8_t g, uint8_t b, uint8_t w) {
-    for  (int background_led = NEOPIXEL_BKGD_INDEX_FIRST; background_led <= NEOPIXEL_BKGD_INDEX_LAST; background_led++)
+  void Marlin_NeoPixel::set_background_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w) {
+    for (int background_led = NEOPIXEL_BKGD_INDEX_FIRST; background_led <= NEOPIXEL_BKGD_INDEX_LAST; background_led++)
       set_pixel_color(background_led, adaneo1.Color(r, g, b, w));
   }
 
   void Marlin_NeoPixel::reset_background_color() {
     constexpr uint8_t background_color[4] = NEOPIXEL_BKGD_COLOR;
-    set_background_color(background_color[0], background_color[1], background_color[2], background_color[3]);
+    set_background_color(background_color);
   }
 
 #endif
@@ -108,7 +108,7 @@ void Marlin_NeoPixel::init() {
   set_color(adaneo1.Color
     TERN(LED_USER_PRESET_STARTUP,
       (LED_USER_PRESET_RED, LED_USER_PRESET_GREEN, LED_USER_PRESET_BLUE, LED_USER_PRESET_WHITE),
-      (0, 0, 0, 0))
+      (255, 255, 255, 255))
   );
 }
 

commit ba3239145429e15901bb642a7225204f95b8e308
Author: GHGiampy <83699429+GHGiampy@users.noreply.github.com>
Date:   Mon Dec 20 09:44:43 2021 +0100

    üßë‚Äçüíª Option allowing > 127 Neopixels (#23322)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 2654e9a1df..3569cb180d 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -35,7 +35,7 @@
 #endif
 
 Marlin_NeoPixel neo;
-int8_t Marlin_NeoPixel::neoindex;
+pixel_index_t Marlin_NeoPixel::neoindex;
 
 Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800);
 #if CONJOINED_NEOPIXEL
@@ -116,7 +116,7 @@ void Marlin_NeoPixel::init() {
 
   Marlin_NeoPixel2 neo2;
 
-  int8_t Marlin_NeoPixel2::neoindex;
+  pixel_index_t Marlin_NeoPixel2::neoindex;
   Adafruit_NeoPixel Marlin_NeoPixel2::adaneo(NEOPIXEL2_PIXELS, NEOPIXEL2_PIN, NEOPIXEL2_TYPE);
 
   void Marlin_NeoPixel2::set_color(const uint32_t color) {

commit e60c38b6220678b3b9f3a3b31516852f8d25b3b0
Author: ellensp <ellensp@hotmail.com>
Date:   Wed May 26 11:38:23 2021 +1200

    ‚ôªÔ∏è LEDs refactor and extend (#21962)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index bdd22837ad..2654e9a1df 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -28,7 +28,7 @@
 
 #if ENABLED(NEOPIXEL_LED)
 
-#include "neopixel.h"
+#include "leds.h"
 
 #if EITHER(NEOPIXEL_STARTUP_TEST, NEOPIXEL2_STARTUP_TEST)
   #include "../../core/utility.h"
@@ -37,17 +37,21 @@
 Marlin_NeoPixel neo;
 int8_t Marlin_NeoPixel::neoindex;
 
-Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800)
-  #if CONJOINED_NEOPIXEL
-    , Marlin_NeoPixel::adaneo2(NEOPIXEL_PIXELS, NEOPIXEL2_PIN, NEOPIXEL2_TYPE + NEO_KHZ800)
-  #endif
-;
+Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800);
+#if CONJOINED_NEOPIXEL
+  Adafruit_NeoPixel Marlin_NeoPixel::adaneo2(NEOPIXEL_PIXELS, NEOPIXEL2_PIN, NEOPIXEL2_TYPE + NEO_KHZ800);
+#endif
 
-#ifdef NEOPIXEL_BKGD_LED_INDEX
+#ifdef NEOPIXEL_BKGD_INDEX_FIRST
+
+  void Marlin_NeoPixel::set_background_color(uint8_t r, uint8_t g, uint8_t b, uint8_t w) {
+    for  (int background_led = NEOPIXEL_BKGD_INDEX_FIRST; background_led <= NEOPIXEL_BKGD_INDEX_LAST; background_led++)
+      set_pixel_color(background_led, adaneo1.Color(r, g, b, w));
+  }
 
-  void Marlin_NeoPixel::set_color_background() {
-    uint8_t background_color[4] = NEOPIXEL_BKGD_COLOR;
-    set_pixel_color(NEOPIXEL_BKGD_LED_INDEX, adaneo1.Color(background_color[0], background_color[1], background_color[2], background_color[3]));
+  void Marlin_NeoPixel::reset_background_color() {
+    constexpr uint8_t background_color[4] = NEOPIXEL_BKGD_COLOR;
+    set_background_color(background_color[0], background_color[1], background_color[2], background_color[3]);
   }
 
 #endif
@@ -59,9 +63,10 @@ void Marlin_NeoPixel::set_color(const uint32_t color) {
   }
   else {
     for (uint16_t i = 0; i < pixels(); ++i) {
-      #ifdef NEOPIXEL_BKGD_LED_INDEX
-        if (i == NEOPIXEL_BKGD_LED_INDEX && TERN(NEOPIXEL_BKGD_ALWAYS_ON, true, color != 0x000000)) {
-          set_color_background();
+      #ifdef NEOPIXEL_BKGD_INDEX_FIRST
+        if (i == NEOPIXEL_BKGD_INDEX_FIRST && TERN(NEOPIXEL_BKGD_ALWAYS_ON, true, color != 0x000000)) {
+          reset_background_color();
+          i += NEOPIXEL_BKGD_INDEX_LAST - (NEOPIXEL_BKGD_INDEX_FIRST);
           continue;
         }
       #endif
@@ -90,35 +95,22 @@ void Marlin_NeoPixel::init() {
     safe_delay(500);
     set_color_startup(adaneo1.Color(0, 0, 255, 0));  // blue
     safe_delay(500);
+    #if HAS_WHITE_LED
+      set_color_startup(adaneo1.Color(0, 0, 0, 255));  // white
+      safe_delay(500);
+    #endif
   #endif
 
-  #ifdef NEOPIXEL_BKGD_LED_INDEX
-    set_color_background();
-  #endif
-
-  #if ENABLED(LED_USER_PRESET_STARTUP)
-    set_color(adaneo1.Color(LED_USER_PRESET_RED, LED_USER_PRESET_GREEN, LED_USER_PRESET_BLUE, LED_USER_PRESET_WHITE));
-  #else
-    set_color(adaneo1.Color(0, 0, 0, 0));
+  #ifdef NEOPIXEL_BKGD_INDEX_FIRST
+    reset_background_color();
   #endif
-}
 
-#if 0
-bool Marlin_NeoPixel::set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p) {
-  const uint32_t color = adaneo1.Color(r, g, b, w);
-  set_brightness(p);
-  #if DISABLED(NEOPIXEL_IS_SEQUENTIAL)
-    set_color(color);
-    return false;
-  #else
-    static uint16_t nextLed = 0;
-    set_pixel_color(nextLed, color);
-    show();
-    if (++nextLed >= pixels()) nextLed = 0;
-    return true;
-  #endif
+  set_color(adaneo1.Color
+    TERN(LED_USER_PRESET_STARTUP,
+      (LED_USER_PRESET_RED, LED_USER_PRESET_GREEN, LED_USER_PRESET_BLUE, LED_USER_PRESET_WHITE),
+      (0, 0, 0, 0))
+  );
 }
-#endif
 
 #if ENABLED(NEOPIXEL2_SEPARATE)
 
@@ -158,13 +150,17 @@ bool Marlin_NeoPixel::set_led_color(const uint8_t r, const uint8_t g, const uint
       safe_delay(500);
       set_color_startup(adaneo.Color(0, 0, 255, 0));  // blue
       safe_delay(500);
+      #if HAS_WHITE_LED2
+        set_color_startup(adaneo.Color(0, 0, 0, 255));  // white
+        safe_delay(500);
+      #endif
     #endif
 
-    #if ENABLED(NEO2_USER_PRESET_STARTUP)
-      set_color(adaneo.Color(NEO2_USER_PRESET_RED, NEO2_USER_PRESET_GREEN, NEO2_USER_PRESET_BLUE, NEO2_USER_PRESET_WHITE));
-    #else
-      set_color(adaneo.Color(0, 0, 0, 0));
-    #endif
+    set_color(adaneo.Color
+      TERN(NEO2_USER_PRESET_STARTUP,
+        (NEO2_USER_PRESET_RED, NEO2_USER_PRESET_GREEN, NEO2_USER_PRESET_BLUE, NEO2_USER_PRESET_WHITE),
+        (0, 0, 0, 0))
+    );
   }
 
 #endif // NEOPIXEL2_SEPARATE

commit 2328f8b9b888844a7e12812155743c8098e5c339
Author: Fabio Viappiani <viappidu@gmail.com>
Date:   Sun Feb 28 23:09:15 2021 +0100

    Fix TERN typo (#21229)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 6f5ea0540a..bdd22837ad 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -60,7 +60,7 @@ void Marlin_NeoPixel::set_color(const uint32_t color) {
   else {
     for (uint16_t i = 0; i < pixels(); ++i) {
       #ifdef NEOPIXEL_BKGD_LED_INDEX
-        if (i == NEOPIXEL_BKGD_LED_INDEX && TERN(ENABLED(NEOPIXEL_BKGD_ALWAYS_ON), true, color != 0x000000)) {
+        if (i == NEOPIXEL_BKGD_LED_INDEX && TERN(NEOPIXEL_BKGD_ALWAYS_ON, true, color != 0x000000)) {
           set_color_background();
           continue;
         }

commit e0aa9ce372710d2bd1147ab0779072e6a02b61c9
Author: LinFor <linfor@gmail.com>
Date:   Sun Feb 28 01:06:48 2021 +0300

    RGB Caselight (#20341)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 27bbeb348c..6f5ea0540a 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -60,7 +60,7 @@ void Marlin_NeoPixel::set_color(const uint32_t color) {
   else {
     for (uint16_t i = 0; i < pixels(); ++i) {
       #ifdef NEOPIXEL_BKGD_LED_INDEX
-        if (i == NEOPIXEL_BKGD_LED_INDEX && color != 0x000000) {
+        if (i == NEOPIXEL_BKGD_LED_INDEX && TERN(ENABLED(NEOPIXEL_BKGD_ALWAYS_ON), true, color != 0x000000)) {
           set_color_background();
           continue;
         }

commit 97ec6c1be6f7b3b2e185be9f1637639815acbb1a
Author: Zachary Annand <baconfixation@gmail.com>
Date:   Thu Aug 27 14:18:16 2020 -0500

    Independent Neopixel option (#19115)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 12759302e6..27bbeb348c 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -30,7 +30,7 @@
 
 #include "neopixel.h"
 
-#if ENABLED(NEOPIXEL_STARTUP_TEST)
+#if EITHER(NEOPIXEL_STARTUP_TEST, NEOPIXEL2_STARTUP_TEST)
   #include "../../core/utility.h"
 #endif
 
@@ -38,7 +38,7 @@ Marlin_NeoPixel neo;
 int8_t Marlin_NeoPixel::neoindex;
 
 Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800)
-  #if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
+  #if CONJOINED_NEOPIXEL
     , Marlin_NeoPixel::adaneo2(NEOPIXEL_PIXELS, NEOPIXEL2_PIN, NEOPIXEL2_TYPE + NEO_KHZ800)
   #endif
 ;
@@ -120,4 +120,53 @@ bool Marlin_NeoPixel::set_led_color(const uint8_t r, const uint8_t g, const uint
 }
 #endif
 
+#if ENABLED(NEOPIXEL2_SEPARATE)
+
+  Marlin_NeoPixel2 neo2;
+
+  int8_t Marlin_NeoPixel2::neoindex;
+  Adafruit_NeoPixel Marlin_NeoPixel2::adaneo(NEOPIXEL2_PIXELS, NEOPIXEL2_PIN, NEOPIXEL2_TYPE);
+
+  void Marlin_NeoPixel2::set_color(const uint32_t color) {
+    if (neoindex >= 0) {
+      set_pixel_color(neoindex, color);
+      neoindex = -1;
+    }
+    else {
+      for (uint16_t i = 0; i < pixels(); ++i)
+        set_pixel_color(i, color);
+    }
+    show();
+  }
+
+  void Marlin_NeoPixel2::set_color_startup(const uint32_t color) {
+    for (uint16_t i = 0; i < pixels(); ++i)
+      set_pixel_color(i, color);
+    show();
+  }
+
+  void Marlin_NeoPixel2::init() {
+    neoindex = -1;                        // -1 .. NEOPIXEL2_PIXELS-1 range
+    set_brightness(NEOPIXEL2_BRIGHTNESS); //  0 .. 255 range
+    begin();
+    show();  // initialize to all off
+
+    #if ENABLED(NEOPIXEL2_STARTUP_TEST)
+      set_color_startup(adaneo.Color(255, 0, 0, 0));  // red
+      safe_delay(500);
+      set_color_startup(adaneo.Color(0, 255, 0, 0));  // green
+      safe_delay(500);
+      set_color_startup(adaneo.Color(0, 0, 255, 0));  // blue
+      safe_delay(500);
+    #endif
+
+    #if ENABLED(NEO2_USER_PRESET_STARTUP)
+      set_color(adaneo.Color(NEO2_USER_PRESET_RED, NEO2_USER_PRESET_GREEN, NEO2_USER_PRESET_BLUE, NEO2_USER_PRESET_WHITE));
+    #else
+      set_color(adaneo.Color(0, 0, 0, 0));
+    #endif
+  }
+
+#endif // NEOPIXEL2_SEPARATE
+
 #endif // NEOPIXEL_LED

commit 91c8c6d96eb4046171c36d79b44906d2948132be
Author: ellensp <ellensp@hotmail.com>
Date:   Wed Aug 26 22:14:54 2020 +1200

    Fix NEOPIXEL_STARTUP_TEST last delay (#19156)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index ce2e4ee77b..12759302e6 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -89,6 +89,7 @@ void Marlin_NeoPixel::init() {
     set_color_startup(adaneo1.Color(0, 255, 0, 0));  // green
     safe_delay(500);
     set_color_startup(adaneo1.Color(0, 0, 255, 0));  // blue
+    safe_delay(500);
   #endif
 
   #ifdef NEOPIXEL_BKGD_LED_INDEX

commit c488070859c1995fe957938b1b6302c4eeef1ea3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 23:57:51 2020 -0500

    Minor cleanup w/r/t LEDs

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 520d4d63b2..ce2e4ee77b 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -53,9 +53,9 @@ Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIX
 #endif
 
 void Marlin_NeoPixel::set_color(const uint32_t color) {
-  if (get_neo_index() >= 0) {
-    set_pixel_color(get_neo_index(), color);
-    set_neo_index(-1);
+  if (neoindex >= 0) {
+    set_pixel_color(neoindex, color);
+    neoindex = -1;
   }
   else {
     for (uint16_t i = 0; i < pixels(); ++i) {
@@ -78,18 +78,17 @@ void Marlin_NeoPixel::set_color_startup(const uint32_t color) {
 }
 
 void Marlin_NeoPixel::init() {
-  set_neo_index(-1);                   // -1 .. NEOPIXEL_PIXELS-1 range
+  neoindex = -1;                       // -1 .. NEOPIXEL_PIXELS-1 range
   set_brightness(NEOPIXEL_BRIGHTNESS); //  0 .. 255 range
   begin();
   show();  // initialize to all off
 
   #if ENABLED(NEOPIXEL_STARTUP_TEST)
     set_color_startup(adaneo1.Color(255, 0, 0, 0));  // red
-    safe_delay(1000);
+    safe_delay(500);
     set_color_startup(adaneo1.Color(0, 255, 0, 0));  // green
-    safe_delay(1000);
+    safe_delay(500);
     set_color_startup(adaneo1.Color(0, 0, 255, 0));  // blue
-    safe_delay(1000);
   #endif
 
   #ifdef NEOPIXEL_BKGD_LED_INDEX

commit 5038cddfd54cf4b8484d10e7378fb2acd2b5f2ad
Author: ellensp <ellensp@hotmail.com>
Date:   Sat Aug 15 01:25:45 2020 +1200

    Add option to arrange Neopixel sets in series  (#18992)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 5d80cfe5d2..520d4d63b2 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -38,7 +38,7 @@ Marlin_NeoPixel neo;
 int8_t Marlin_NeoPixel::neoindex;
 
 Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800)
-  #if MULTIPLE_NEOPIXEL_TYPES
+  #if EITHER(MULTIPLE_NEOPIXEL_TYPES, NEOPIXEL2_INSERIES)
     , Marlin_NeoPixel::adaneo2(NEOPIXEL_PIXELS, NEOPIXEL2_PIN, NEOPIXEL2_TYPE + NEO_KHZ800)
   #endif
 ;

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 93e8348cfd..5d80cfe5d2 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit d6682c860924ca96ee51c15906beffc8e4b4f37b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jul 7 01:57:05 2020 -0500

    Whitespace cleanup

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index d2aa2e9fd9..93e8348cfd 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -53,11 +53,11 @@ Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIX
 #endif
 
 void Marlin_NeoPixel::set_color(const uint32_t color) {
-  if (get_neo_index() >= 0) { 
+  if (get_neo_index() >= 0) {
     set_pixel_color(get_neo_index(), color);
     set_neo_index(-1);
   }
-  else { 
+  else {
     for (uint16_t i = 0; i < pixels(); ++i) {
       #ifdef NEOPIXEL_BKGD_LED_INDEX
         if (i == NEOPIXEL_BKGD_LED_INDEX && color != 0x000000) {

commit db0436cc617a73e248ea151c29086147a7695bb0
Author: ManuelMcLure <manuel@mclure.org>
Date:   Sun Jul 5 13:47:02 2020 -0700

    Fix Neopixel set_color (#18544)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 3d11c5b64e..d2aa2e9fd9 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -53,7 +53,7 @@ Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIX
 #endif
 
 void Marlin_NeoPixel::set_color(const uint32_t color) {
-  if (get_neo_index() < 0) { 
+  if (get_neo_index() >= 0) { 
     set_pixel_color(get_neo_index(), color);
     set_neo_index(-1);
   }

commit 91dc74ff16d5edb0d8ab5c809614acad25426553
Author: ellensp <ellensp@hotmail.com>
Date:   Sat Jul 4 09:33:09 2020 +1200

    M150 I to set Neopixel by index (#18490)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 3c2c0b44fc..3d11c5b64e 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -35,6 +35,7 @@
 #endif
 
 Marlin_NeoPixel neo;
+int8_t Marlin_NeoPixel::neoindex;
 
 Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800)
   #if MULTIPLE_NEOPIXEL_TYPES
@@ -52,14 +53,20 @@ Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIX
 #endif
 
 void Marlin_NeoPixel::set_color(const uint32_t color) {
-  for (uint16_t i = 0; i < pixels(); ++i) {
-    #ifdef NEOPIXEL_BKGD_LED_INDEX
-      if (i == NEOPIXEL_BKGD_LED_INDEX && color != 0x000000) {
-        set_color_background();
-        continue;
-      }
-    #endif
-    set_pixel_color(i, color);
+  if (get_neo_index() < 0) { 
+    set_pixel_color(get_neo_index(), color);
+    set_neo_index(-1);
+  }
+  else { 
+    for (uint16_t i = 0; i < pixels(); ++i) {
+      #ifdef NEOPIXEL_BKGD_LED_INDEX
+        if (i == NEOPIXEL_BKGD_LED_INDEX && color != 0x000000) {
+          set_color_background();
+          continue;
+        }
+      #endif
+      set_pixel_color(i, color);
+    }
   }
   show();
 }
@@ -71,7 +78,8 @@ void Marlin_NeoPixel::set_color_startup(const uint32_t color) {
 }
 
 void Marlin_NeoPixel::init() {
-  set_brightness(NEOPIXEL_BRIGHTNESS); // 0 - 255 range
+  set_neo_index(-1);                   // -1 .. NEOPIXEL_PIXELS-1 range
+  set_brightness(NEOPIXEL_BRIGHTNESS); //  0 .. 255 range
   begin();
   show();  // initialize to all off
 

commit 07966ea82b6bde36c13aa2265165a9d4883d8445
Author: ellensp <ellensp@hotmail.com>
Date:   Tue Jun 23 08:38:51 2020 +1200

    Fix LPC176x RGB NEOPIXEL startup (#18380)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 892ebe15cb..3c2c0b44fc 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -71,13 +71,11 @@ void Marlin_NeoPixel::set_color_startup(const uint32_t color) {
 }
 
 void Marlin_NeoPixel::init() {
-  SET_OUTPUT(NEOPIXEL_PIN);
   set_brightness(NEOPIXEL_BRIGHTNESS); // 0 - 255 range
   begin();
   show();  // initialize to all off
 
   #if ENABLED(NEOPIXEL_STARTUP_TEST)
-    safe_delay(1000);
     set_color_startup(adaneo1.Color(255, 0, 0, 0));  // red
     safe_delay(1000);
     set_color_startup(adaneo1.Color(0, 255, 0, 0));  // green

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index a3ceacb42c..892ebe15cb 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit e5aa45329305be8ac5e277305d52a449a41bfc98
Author: Tim Moore <tim@youngmoores.com>
Date:   Sat Jul 20 21:14:09 2019 -0700

    Add support for 2 Neopixel strips (#14667)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index d29226c362..a3ceacb42c 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -34,73 +34,81 @@
   #include "../../core/utility.h"
 #endif
 
-Adafruit_NeoPixel pixels(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800);
+Marlin_NeoPixel neo;
+
+Adafruit_NeoPixel Marlin_NeoPixel::adaneo1(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800)
+  #if MULTIPLE_NEOPIXEL_TYPES
+    , Marlin_NeoPixel::adaneo2(NEOPIXEL_PIXELS, NEOPIXEL2_PIN, NEOPIXEL2_TYPE + NEO_KHZ800)
+  #endif
+;
 
 #ifdef NEOPIXEL_BKGD_LED_INDEX
-  void set_neopixel_color_background() {
+
+  void Marlin_NeoPixel::set_color_background() {
     uint8_t background_color[4] = NEOPIXEL_BKGD_COLOR;
-    pixels.setPixelColor(NEOPIXEL_BKGD_LED_INDEX, pixels.Color(background_color[0], background_color[1], background_color[2], background_color[3]));
+    set_pixel_color(NEOPIXEL_BKGD_LED_INDEX, adaneo1.Color(background_color[0], background_color[1], background_color[2], background_color[3]));
   }
+
 #endif
 
-void set_neopixel_color(const uint32_t color) {
-  for (uint16_t i = 0; i < pixels.numPixels(); ++i) {
+void Marlin_NeoPixel::set_color(const uint32_t color) {
+  for (uint16_t i = 0; i < pixels(); ++i) {
     #ifdef NEOPIXEL_BKGD_LED_INDEX
       if (i == NEOPIXEL_BKGD_LED_INDEX && color != 0x000000) {
-        set_neopixel_color_background();
+        set_color_background();
         continue;
       }
     #endif
-    pixels.setPixelColor(i, color);
+    set_pixel_color(i, color);
   }
-  pixels.show();
+  show();
 }
 
-void set_neopixel_color_startup(const uint32_t color) {
-  for (uint16_t i = 0; i < pixels.numPixels(); ++i)
-    pixels.setPixelColor(i, color);
-  pixels.show();
+void Marlin_NeoPixel::set_color_startup(const uint32_t color) {
+  for (uint16_t i = 0; i < pixels(); ++i)
+    set_pixel_color(i, color);
+  show();
 }
 
-void setup_neopixel() {
+void Marlin_NeoPixel::init() {
   SET_OUTPUT(NEOPIXEL_PIN);
-  pixels.setBrightness(NEOPIXEL_BRIGHTNESS); // 0 - 255 range
-  pixels.begin();
-  pixels.show(); // initialize to all off
+  set_brightness(NEOPIXEL_BRIGHTNESS); // 0 - 255 range
+  begin();
+  show();  // initialize to all off
 
   #if ENABLED(NEOPIXEL_STARTUP_TEST)
     safe_delay(1000);
-    set_neopixel_color_startup(pixels.Color(255, 0, 0, 0));  // red
+    set_color_startup(adaneo1.Color(255, 0, 0, 0));  // red
     safe_delay(1000);
-    set_neopixel_color_startup(pixels.Color(0, 255, 0, 0));  // green
+    set_color_startup(adaneo1.Color(0, 255, 0, 0));  // green
     safe_delay(1000);
-    set_neopixel_color_startup(pixels.Color(0, 0, 255, 0));  // blue
+    set_color_startup(adaneo1.Color(0, 0, 255, 0));  // blue
     safe_delay(1000);
   #endif
 
   #ifdef NEOPIXEL_BKGD_LED_INDEX
-    set_neopixel_color_background();
+    set_color_background();
   #endif
 
   #if ENABLED(LED_USER_PRESET_STARTUP)
-    set_neopixel_color(pixels.Color(LED_USER_PRESET_RED, LED_USER_PRESET_GREEN, LED_USER_PRESET_BLUE, LED_USER_PRESET_WHITE));
+    set_color(adaneo1.Color(LED_USER_PRESET_RED, LED_USER_PRESET_GREEN, LED_USER_PRESET_BLUE, LED_USER_PRESET_WHITE));
   #else
-    set_neopixel_color(pixels.Color(0, 0, 0, 0));
+    set_color(adaneo1.Color(0, 0, 0, 0));
   #endif
 }
 
 #if 0
-bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p) {
-  const uint32_t color = pixels.Color(r, g, b, w);
-  pixels.setBrightness(p);
+bool Marlin_NeoPixel::set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p) {
+  const uint32_t color = adaneo1.Color(r, g, b, w);
+  set_brightness(p);
   #if DISABLED(NEOPIXEL_IS_SEQUENTIAL)
-    set_neopixel_color(color);
+    set_color(color);
     return false;
   #else
     static uint16_t nextLed = 0;
-    pixels.setPixelColor(nextLed, color);
-    pixels.show();
-    if (++nextLed >= pixels.numPixels()) nextLed = 0;
+    set_pixel_color(nextLed, color);
+    show();
+    if (++nextLed >= pixels()) nextLed = 0;
     return true;
   #endif
 }

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 1c1afcc5fc..d29226c362 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 18904c42f6081391c5ffc096c8acf2ce54dc4a34
Author: MastS <51464853+MastS@users.noreply.github.com>
Date:   Thu Jun 13 04:59:39 2019 +0200

    Fysetc LCD backlight timeout (#14265)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index ee2854c27a..1c1afcc5fc 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -36,10 +36,20 @@
 
 Adafruit_NeoPixel pixels(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800);
 
+#ifdef NEOPIXEL_BKGD_LED_INDEX
+  void set_neopixel_color_background() {
+    uint8_t background_color[4] = NEOPIXEL_BKGD_COLOR;
+    pixels.setPixelColor(NEOPIXEL_BKGD_LED_INDEX, pixels.Color(background_color[0], background_color[1], background_color[2], background_color[3]));
+  }
+#endif
+
 void set_neopixel_color(const uint32_t color) {
   for (uint16_t i = 0; i < pixels.numPixels(); ++i) {
     #ifdef NEOPIXEL_BKGD_LED_INDEX
-      if (NEOPIXEL_BKGD_LED_INDEX == i) i++;
+      if (i == NEOPIXEL_BKGD_LED_INDEX && color != 0x000000) {
+        set_neopixel_color_background();
+        continue;
+      }
     #endif
     pixels.setPixelColor(i, color);
   }
@@ -52,14 +62,6 @@ void set_neopixel_color_startup(const uint32_t color) {
   pixels.show();
 }
 
-#ifdef NEOPIXEL_BKGD_LED_INDEX
-  void set_neopixel_color_background() {
-    uint8_t background_color[4] = NEOPIXEL_BKGD_COLOR;
-    pixels.setPixelColor(NEOPIXEL_BKGD_LED_INDEX, pixels.Color(background_color[0], background_color[1], background_color[2], background_color[3]));
-    pixels.show();
-  }
-#endif
-
 void setup_neopixel() {
   SET_OUTPUT(NEOPIXEL_PIN);
   pixels.setBrightness(NEOPIXEL_BRIGHTNESS); // 0 - 255 range

commit 1dad6e754b1fc09e9018e663c7afc5da1794d0ae
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Sat May 18 02:36:37 2019 -0500

    Neopixel background LED option (#14025)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 816398c6fb..ee2854c27a 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -37,11 +37,29 @@
 Adafruit_NeoPixel pixels(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800);
 
 void set_neopixel_color(const uint32_t color) {
+  for (uint16_t i = 0; i < pixels.numPixels(); ++i) {
+    #ifdef NEOPIXEL_BKGD_LED_INDEX
+      if (NEOPIXEL_BKGD_LED_INDEX == i) i++;
+    #endif
+    pixels.setPixelColor(i, color);
+  }
+  pixels.show();
+}
+
+void set_neopixel_color_startup(const uint32_t color) {
   for (uint16_t i = 0; i < pixels.numPixels(); ++i)
     pixels.setPixelColor(i, color);
   pixels.show();
 }
 
+#ifdef NEOPIXEL_BKGD_LED_INDEX
+  void set_neopixel_color_background() {
+    uint8_t background_color[4] = NEOPIXEL_BKGD_COLOR;
+    pixels.setPixelColor(NEOPIXEL_BKGD_LED_INDEX, pixels.Color(background_color[0], background_color[1], background_color[2], background_color[3]));
+    pixels.show();
+  }
+#endif
+
 void setup_neopixel() {
   SET_OUTPUT(NEOPIXEL_PIN);
   pixels.setBrightness(NEOPIXEL_BRIGHTNESS); // 0 - 255 range
@@ -50,14 +68,18 @@ void setup_neopixel() {
 
   #if ENABLED(NEOPIXEL_STARTUP_TEST)
     safe_delay(1000);
-    set_neopixel_color(pixels.Color(255, 0, 0, 0));  // red
+    set_neopixel_color_startup(pixels.Color(255, 0, 0, 0));  // red
     safe_delay(1000);
-    set_neopixel_color(pixels.Color(0, 255, 0, 0));  // green
+    set_neopixel_color_startup(pixels.Color(0, 255, 0, 0));  // green
     safe_delay(1000);
-    set_neopixel_color(pixels.Color(0, 0, 255, 0));  // blue
+    set_neopixel_color_startup(pixels.Color(0, 0, 255, 0));  // blue
     safe_delay(1000);
   #endif
 
+  #ifdef NEOPIXEL_BKGD_LED_INDEX
+    set_neopixel_color_background();
+  #endif
+
   #if ENABLED(LED_USER_PRESET_STARTUP)
     set_neopixel_color(pixels.Color(LED_USER_PRESET_RED, LED_USER_PRESET_GREEN, LED_USER_PRESET_BLUE, LED_USER_PRESET_WHITE));
   #else

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 729b4b190a..816398c6fb 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit bd54ce830a8f9b717f144a95616d29bfbd31f567
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Feb 16 22:19:34 2018 -0600

    Include utility.h in neopixel.cpp

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index c56b862ed2..729b4b190a 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -30,6 +30,10 @@
 
 #include "neopixel.h"
 
+#if ENABLED(NEOPIXEL_STARTUP_TEST)
+  #include "../../core/utility.h"
+#endif
+
 Adafruit_NeoPixel pixels(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800);
 
 void set_neopixel_color(const uint32_t color) {

commit c49844df66213dfab5dbcc12d772f0a4279f2141
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Feb 16 01:43:35 2018 -0600

    !ENABLED => DISABLED

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index d3e292d705..c56b862ed2 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -65,7 +65,7 @@ void setup_neopixel() {
 bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p) {
   const uint32_t color = pixels.Color(r, g, b, w);
   pixels.setBrightness(p);
-  #if !ENABLED(NEOPIXEL_IS_SEQUENTIAL)
+  #if DISABLED(NEOPIXEL_IS_SEQUENTIAL)
     set_neopixel_color(color);
     return false;
   #else

commit e37dd645488ffc4377b6ec818c1e38e55b5903b7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 28 01:07:10 2017 -0600

    Apply LEDColor, language fixes

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 5e32f5277a..d3e292d705 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -61,6 +61,7 @@ void setup_neopixel() {
   #endif
 }
 
+#if 0
 bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p) {
   const uint32_t color = pixels.Color(r, g, b, w);
   pixels.setBrightness(p);
@@ -75,5 +76,6 @@ bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, c
     return true;
   #endif
 }
+#endif
 
 #endif // NEOPIXEL_LED

commit cf0f78336b7557f7aca81e841c1e6b74c3f1be07
Author: Tannoo <tannoo@msn.com>
Date:   Thu Nov 9 16:39:01 2017 -0700

    New Feature: LED_CONTROL_MENU

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index ae06e9b009..5e32f5277a 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -53,7 +53,27 @@ void setup_neopixel() {
     set_neopixel_color(pixels.Color(0, 0, 255, 0));  // blue
     safe_delay(1000);
   #endif
-  set_neopixel_color(pixels.Color(NEO_WHITE));       // white
+
+  #if ENABLED(LED_USER_PRESET_STARTUP)
+    set_neopixel_color(pixels.Color(LED_USER_PRESET_RED, LED_USER_PRESET_GREEN, LED_USER_PRESET_BLUE, LED_USER_PRESET_WHITE));
+  #else
+    set_neopixel_color(pixels.Color(0, 0, 0, 0));
+  #endif
+}
+
+bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p) {
+  const uint32_t color = pixels.Color(r, g, b, w);
+  pixels.setBrightness(p);
+  #if !ENABLED(NEOPIXEL_IS_SEQUENTIAL)
+    set_neopixel_color(color);
+    return false;
+  #else
+    static uint16_t nextLed = 0;
+    pixels.setPixelColor(nextLed, color);
+    pixels.show();
+    if (++nextLed >= pixels.numPixels()) nextLed = 0;
+    return true;
+  #endif
 }
 
 #endif // NEOPIXEL_LED

commit daeff5a11a25a58adb3e61a8cb75deb9a06ff011
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 26 22:47:07 2017 -0500

    Tweak neopixel self-test

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index 778170ba65..ae06e9b009 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -45,13 +45,13 @@ void setup_neopixel() {
   pixels.show(); // initialize to all off
 
   #if ENABLED(NEOPIXEL_STARTUP_TEST)
-    delay(2000);
+    safe_delay(1000);
     set_neopixel_color(pixels.Color(255, 0, 0, 0));  // red
-    delay(2000);
+    safe_delay(1000);
     set_neopixel_color(pixels.Color(0, 255, 0, 0));  // green
-    delay(2000);
+    safe_delay(1000);
     set_neopixel_color(pixels.Color(0, 0, 255, 0));  // blue
-    delay(2000);
+    safe_delay(1000);
   #endif
   set_neopixel_color(pixels.Color(NEO_WHITE));       // white
 }

commit 3ac581eac92d31287580ea6da5357f3d6cd82db5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 25 15:50:36 2017 -0500

    Neopixel changes for parity with 1.1.x

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index d96e431c32..778170ba65 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -39,6 +39,7 @@ void set_neopixel_color(const uint32_t color) {
 }
 
 void setup_neopixel() {
+  SET_OUTPUT(NEOPIXEL_PIN);
   pixels.setBrightness(NEOPIXEL_BRIGHTNESS); // 0 - 255 range
   pixels.begin();
   pixels.show(); // initialize to all off
@@ -52,22 +53,7 @@ void setup_neopixel() {
     set_neopixel_color(pixels.Color(0, 0, 255, 0));  // blue
     delay(2000);
   #endif
-  set_neopixel_color(pixels.Color(0, 0, 0, 255));    // white
-}
-
-bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p) {
-  const uint32_t color = pixels.Color(r, g, b, w);
-  pixels.setBrightness(p);
-  #if !ENABLED(NEOPIXEL_IS_SEQUENTIAL)
-    set_neopixel_color(color);
-    return false;
-  #else
-    static uint16_t nextLed = 0;
-    pixels.setPixelColor(nextLed, color);
-    pixels.show();
-    if (++nextLed >= pixels.numPixels()) nextLed = 0;
-    return true;
-  #endif
+  set_neopixel_color(pixels.Color(NEO_WHITE));       // white
 }
 
 #endif // NEOPIXEL_LED

commit a11e6a1022b8f70be237fad82a9b6ba22b2db7b1
Author: Slawomir Ciunczyk <s.ciunczyk@moye.eu>
Date:   Thu Oct 5 13:45:36 2017 +0200

    Different NEOPIXEL types
    
    Same as #7728 but for 2.0.x,
    Lot of cleanup and remove references in whole code to other "LED files" than leds.h. Now will be much easier to add next drivers/libraries. e.g. FastLED. But bad news, currently FastLED is suporting only RGB devices (no RGBW)

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
index d854098c25..d96e431c32 100644
--- a/Marlin/src/feature/leds/neopixel.cpp
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -26,11 +26,11 @@
 
 #include "../../inc/MarlinConfig.h"
 
-#if ENABLED(NEOPIXEL_RGBW_LED)
+#if ENABLED(NEOPIXEL_LED)
 
 #include "neopixel.h"
 
-Adafruit_NeoPixel pixels(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEO_GRBW + NEO_KHZ800);
+Adafruit_NeoPixel pixels(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEOPIXEL_TYPE + NEO_KHZ800);
 
 void set_neopixel_color(const uint32_t color) {
   for (uint16_t i = 0; i < pixels.numPixels(); ++i)
@@ -39,7 +39,7 @@ void set_neopixel_color(const uint32_t color) {
 }
 
 void setup_neopixel() {
-  pixels.setBrightness(255); // 0 - 255 range
+  pixels.setBrightness(NEOPIXEL_BRIGHTNESS); // 0 - 255 range
   pixels.begin();
   pixels.show(); // initialize to all off
 
@@ -55,18 +55,19 @@ void setup_neopixel() {
   set_neopixel_color(pixels.Color(0, 0, 0, 255));    // white
 }
 
-bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const bool isSequence) {
+bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const uint8_t p) {
   const uint32_t color = pixels.Color(r, g, b, w);
-  static uint16_t nextLed = 0;
-  if (!isSequence)
+  pixels.setBrightness(p);
+  #if !ENABLED(NEOPIXEL_IS_SEQUENTIAL)
     set_neopixel_color(color);
-  else {
+    return false;
+  #else
+    static uint16_t nextLed = 0;
     pixels.setPixelColor(nextLed, color);
     pixels.show();
     if (++nextLed >= pixels.numPixels()) nextLed = 0;
     return true;
-  }
-  return false;
+  #endif
 }
 
-#endif // NEOPIXEL_RGBW_LED
+#endif // NEOPIXEL_LED

commit 8fbb833de9309c53abb73dba7d33b76f0068c61a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 8 14:47:47 2017 -0500

    Encapsulate RGB(W) LEDs

diff --git a/Marlin/src/feature/leds/neopixel.cpp b/Marlin/src/feature/leds/neopixel.cpp
new file mode 100644
index 0000000000..d854098c25
--- /dev/null
+++ b/Marlin/src/feature/leds/neopixel.cpp
@@ -0,0 +1,72 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Marlin RGB LED general support
+ */
+
+#include "../../inc/MarlinConfig.h"
+
+#if ENABLED(NEOPIXEL_RGBW_LED)
+
+#include "neopixel.h"
+
+Adafruit_NeoPixel pixels(NEOPIXEL_PIXELS, NEOPIXEL_PIN, NEO_GRBW + NEO_KHZ800);
+
+void set_neopixel_color(const uint32_t color) {
+  for (uint16_t i = 0; i < pixels.numPixels(); ++i)
+    pixels.setPixelColor(i, color);
+  pixels.show();
+}
+
+void setup_neopixel() {
+  pixels.setBrightness(255); // 0 - 255 range
+  pixels.begin();
+  pixels.show(); // initialize to all off
+
+  #if ENABLED(NEOPIXEL_STARTUP_TEST)
+    delay(2000);
+    set_neopixel_color(pixels.Color(255, 0, 0, 0));  // red
+    delay(2000);
+    set_neopixel_color(pixels.Color(0, 255, 0, 0));  // green
+    delay(2000);
+    set_neopixel_color(pixels.Color(0, 0, 255, 0));  // blue
+    delay(2000);
+  #endif
+  set_neopixel_color(pixels.Color(0, 0, 0, 255));    // white
+}
+
+bool neopixel_set_led_color(const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w, const bool isSequence) {
+  const uint32_t color = pixels.Color(r, g, b, w);
+  static uint16_t nextLed = 0;
+  if (!isSequence)
+    set_neopixel_color(color);
+  else {
+    pixels.setPixelColor(nextLed, color);
+    pixels.show();
+    if (++nextLed >= pixels.numPixels()) nextLed = 0;
+    return true;
+  }
+  return false;
+}
+
+#endif // NEOPIXEL_RGBW_LED
