commit df1ef496d1a88996cb1156fe933df59c6aaecbac
Author: borland1 <barryorlando@hotmail.com>
Date:   Tue Mar 23 06:21:11 2021 -0700

    Main / Config Custom Submenus (#)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
deleted file mode 100644
index cc1a8a6e80..0000000000
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ /dev/null
@@ -1,141 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- */
-
-//
-// Custom User Menu
-//
-
-#include "../../inc/MarlinConfigPre.h"
-
-#if BOTH(HAS_LCD_MENU, CUSTOM_USER_MENUS)
-
-#include "menu_item.h"
-#include "../../gcode/queue.h"
-
-#ifdef USER_SCRIPT_DONE
-  #define _DONE_SCRIPT "\n" USER_SCRIPT_DONE
-#else
-  #define _DONE_SCRIPT ""
-#endif
-
-void _lcd_user_gcode(PGM_P const cmd) {
-  queue.inject_P(cmd);
-  TERN_(USER_SCRIPT_AUDIBLE_FEEDBACK, ui.completion_feedback());
-  TERN_(USER_SCRIPT_RETURN, ui.return_to_status());
-}
-
-void menu_user() {
-  START_MENU();
-  BACK_ITEM(MSG_MAIN);
-
-  #define GCODE_LAMBDA(N) []{ _lcd_user_gcode(PSTR(USER_GCODE_##N _DONE_SCRIPT)); }
-  #define _USER_ITEM(N) ACTION_ITEM_P(PSTR(USER_DESC_##N), GCODE_LAMBDA(N));
-  #define _USER_ITEM_CONFIRM(N)           \
-    SUBMENU_P(PSTR(USER_DESC_##N), []{    \
-        MenuItem_confirm::confirm_screen( \
-          GCODE_LAMBDA(N),                \
-          ui.goto_previous_screen,        \
-          PSTR(USER_DESC_##N "?")         \
-        );                                \
-      })
-
-  #define USER_ITEM(N) do{ if (ENABLED(USER_CONFIRM_##N)) _USER_ITEM_CONFIRM(N); else _USER_ITEM(N); }while(0)
-
-  #if HAS_USER_ITEM(1)
-    USER_ITEM(1);
-  #endif
-  #if HAS_USER_ITEM(2)
-    USER_ITEM(2);
-  #endif
-  #if HAS_USER_ITEM(3)
-    USER_ITEM(3);
-  #endif
-  #if HAS_USER_ITEM(4)
-    USER_ITEM(4);
-  #endif
-  #if HAS_USER_ITEM(5)
-    USER_ITEM(5);
-  #endif
-  #if HAS_USER_ITEM(6)
-    USER_ITEM(6);
-  #endif
-  #if HAS_USER_ITEM(7)
-    USER_ITEM(7);
-  #endif
-  #if HAS_USER_ITEM(8)
-    USER_ITEM(8);
-  #endif
-  #if HAS_USER_ITEM(9)
-    USER_ITEM(9);
-  #endif
-  #if HAS_USER_ITEM(10)
-    USER_ITEM(10);
-  #endif
-  #if HAS_USER_ITEM(11)
-    USER_ITEM(11);
-  #endif
-  #if HAS_USER_ITEM(12)
-    USER_ITEM(12);
-  #endif
-  #if HAS_USER_ITEM(13)
-    USER_ITEM(13);
-  #endif
-  #if HAS_USER_ITEM(14)
-    USER_ITEM(14);
-  #endif
-  #if HAS_USER_ITEM(15)
-    USER_ITEM(15);
-  #endif
-  #if HAS_USER_ITEM(16)
-    USER_ITEM(16);
-  #endif
-  #if HAS_USER_ITEM(17)
-    USER_ITEM(17);
-  #endif
-  #if HAS_USER_ITEM(18)
-    USER_ITEM(18);
-  #endif
-  #if HAS_USER_ITEM(19)
-    USER_ITEM(19);
-  #endif
-  #if HAS_USER_ITEM(20)
-    USER_ITEM(20);
-  #endif
-  #if HAS_USER_ITEM(21)
-    USER_ITEM(21);
-  #endif
-  #if HAS_USER_ITEM(22)
-    USER_ITEM(22);
-  #endif
-  #if HAS_USER_ITEM(23)
-    USER_ITEM(23);
-  #endif
-  #if HAS_USER_ITEM(24)
-    USER_ITEM(24);
-  #endif
-  #if HAS_USER_ITEM(25)
-    USER_ITEM(25);
-  #endif
-  END_MENU();
-}
-
-#endif // HAS_LCD_MENU && CUSTOM_USER_MENUS

commit 911cd1a6d3883716986e7f3cf92fa4266de20d57
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sat Mar 13 08:37:49 2021 -0500

    Custom menu items confirm option (#21338)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index f3f946883f..cc1a8a6e80 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -46,7 +46,20 @@ void _lcd_user_gcode(PGM_P const cmd) {
 void menu_user() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
-  #define USER_ITEM(N) ACTION_ITEM_P(PSTR(USER_DESC_##N), []{ _lcd_user_gcode(PSTR(USER_GCODE_##N _DONE_SCRIPT)); });
+
+  #define GCODE_LAMBDA(N) []{ _lcd_user_gcode(PSTR(USER_GCODE_##N _DONE_SCRIPT)); }
+  #define _USER_ITEM(N) ACTION_ITEM_P(PSTR(USER_DESC_##N), GCODE_LAMBDA(N));
+  #define _USER_ITEM_CONFIRM(N)           \
+    SUBMENU_P(PSTR(USER_DESC_##N), []{    \
+        MenuItem_confirm::confirm_screen( \
+          GCODE_LAMBDA(N),                \
+          ui.goto_previous_screen,        \
+          PSTR(USER_DESC_##N "?")         \
+        );                                \
+      })
+
+  #define USER_ITEM(N) do{ if (ENABLED(USER_CONFIRM_##N)) _USER_ITEM_CONFIRM(N); else _USER_ITEM(N); }while(0)
+
   #if HAS_USER_ITEM(1)
     USER_ITEM(1);
   #endif

commit 01756b6b021118e82d109f9c5996846b10caed62
Author: Malderin <52313714+Malderin@users.noreply.github.com>
Date:   Sun Feb 7 20:45:14 2021 -0300

    Fix LVGL "more" menu user items (#21004)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 7c54ec6e26..f3f946883f 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -46,7 +46,6 @@ void _lcd_user_gcode(PGM_P const cmd) {
 void menu_user() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
-  #define HAS_USER_ITEM(N) (defined(USER_DESC_##N) && defined(USER_GCODE_##N))
   #define USER_ITEM(N) ACTION_ITEM_P(PSTR(USER_DESC_##N), []{ _lcd_user_gcode(PSTR(USER_GCODE_##N _DONE_SCRIPT)); });
   #if HAS_USER_ITEM(1)
     USER_ITEM(1);

commit 4f67642122059a9270f9e3690978248355f88e72
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 21 05:21:34 2020 -0500

    Header for individual menus

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 729254cda4..7c54ec6e26 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -28,7 +28,7 @@
 
 #if BOTH(HAS_LCD_MENU, CUSTOM_USER_MENUS)
 
-#include "menu.h"
+#include "menu_item.h"
 #include "../../gcode/queue.h"
 
 #ifdef USER_SCRIPT_DONE

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 1ba781197f..729254cda4 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 6f27c907a6..1ba781197f 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -26,7 +26,7 @@
 
 #include "../../inc/MarlinConfigPre.h"
 
-#if HAS_LCD_MENU && ENABLED(CUSTOM_USER_MENUS)
+#if BOTH(HAS_LCD_MENU, CUSTOM_USER_MENUS)
 
 #include "menu.h"
 #include "../../gcode/queue.h"
@@ -39,9 +39,7 @@
 
 void _lcd_user_gcode(PGM_P const cmd) {
   queue.inject_P(cmd);
-  #if ENABLED(USER_SCRIPT_AUDIBLE_FEEDBACK) && HAS_BUZZER
-    ui.completion_feedback();
-  #endif
+  TERN_(USER_SCRIPT_AUDIBLE_FEEDBACK, ui.completion_feedback());
   TERN_(USER_SCRIPT_RETURN, ui.return_to_status());
 }
 

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 55297a8b92..6f27c907a6 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -42,9 +42,7 @@ void _lcd_user_gcode(PGM_P const cmd) {
   #if ENABLED(USER_SCRIPT_AUDIBLE_FEEDBACK) && HAS_BUZZER
     ui.completion_feedback();
   #endif
-  #if ENABLED(USER_SCRIPT_RETURN)
-    ui.return_to_status();
-  #endif
+  TERN_(USER_SCRIPT_RETURN, ui.return_to_status());
 }
 
 void menu_user() {

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 8d50a1b25d..55297a8b92 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit b841b9bd0158123f2c4b1554ef73c317ce062f93
Author: Vertabreaker <opyrus@hotmail.com>
Date:   Fri Dec 20 07:29:48 2019 -0500

    Add example configs. Expand custom menu. (#16286)
    
    - Anet E10
    - Geeetech D200
    - Geeetech M201
    - JGAurora Magic
    - MakerFarm Pegasus 12

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index f6178133be..8d50a1b25d 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -50,20 +50,82 @@ void _lcd_user_gcode(PGM_P const cmd) {
 void menu_user() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
-  #if defined(USER_DESC_1) && defined(USER_GCODE_1)
-    ACTION_ITEM_P(PSTR(USER_DESC_1), []{ _lcd_user_gcode(PSTR(USER_GCODE_1 _DONE_SCRIPT)); });
+  #define HAS_USER_ITEM(N) (defined(USER_DESC_##N) && defined(USER_GCODE_##N))
+  #define USER_ITEM(N) ACTION_ITEM_P(PSTR(USER_DESC_##N), []{ _lcd_user_gcode(PSTR(USER_GCODE_##N _DONE_SCRIPT)); });
+  #if HAS_USER_ITEM(1)
+    USER_ITEM(1);
   #endif
-  #if defined(USER_DESC_2) && defined(USER_GCODE_2)
-    ACTION_ITEM_P(PSTR(USER_DESC_2), []{ _lcd_user_gcode(PSTR(USER_GCODE_2 _DONE_SCRIPT)); });
+  #if HAS_USER_ITEM(2)
+    USER_ITEM(2);
   #endif
-  #if defined(USER_DESC_3) && defined(USER_GCODE_3)
-    ACTION_ITEM_P(PSTR(USER_DESC_3), []{ _lcd_user_gcode(PSTR(USER_GCODE_3 _DONE_SCRIPT)); });
+  #if HAS_USER_ITEM(3)
+    USER_ITEM(3);
   #endif
-  #if defined(USER_DESC_4) && defined(USER_GCODE_4)
-    ACTION_ITEM_P(PSTR(USER_DESC_4), []{ _lcd_user_gcode(PSTR(USER_GCODE_4 _DONE_SCRIPT)); });
+  #if HAS_USER_ITEM(4)
+    USER_ITEM(4);
   #endif
-  #if defined(USER_DESC_5) && defined(USER_GCODE_5)
-    ACTION_ITEM_P(PSTR(USER_DESC_5), []{ _lcd_user_gcode(PSTR(USER_GCODE_5 _DONE_SCRIPT)); });
+  #if HAS_USER_ITEM(5)
+    USER_ITEM(5);
+  #endif
+  #if HAS_USER_ITEM(6)
+    USER_ITEM(6);
+  #endif
+  #if HAS_USER_ITEM(7)
+    USER_ITEM(7);
+  #endif
+  #if HAS_USER_ITEM(8)
+    USER_ITEM(8);
+  #endif
+  #if HAS_USER_ITEM(9)
+    USER_ITEM(9);
+  #endif
+  #if HAS_USER_ITEM(10)
+    USER_ITEM(10);
+  #endif
+  #if HAS_USER_ITEM(11)
+    USER_ITEM(11);
+  #endif
+  #if HAS_USER_ITEM(12)
+    USER_ITEM(12);
+  #endif
+  #if HAS_USER_ITEM(13)
+    USER_ITEM(13);
+  #endif
+  #if HAS_USER_ITEM(14)
+    USER_ITEM(14);
+  #endif
+  #if HAS_USER_ITEM(15)
+    USER_ITEM(15);
+  #endif
+  #if HAS_USER_ITEM(16)
+    USER_ITEM(16);
+  #endif
+  #if HAS_USER_ITEM(17)
+    USER_ITEM(17);
+  #endif
+  #if HAS_USER_ITEM(18)
+    USER_ITEM(18);
+  #endif
+  #if HAS_USER_ITEM(19)
+    USER_ITEM(19);
+  #endif
+  #if HAS_USER_ITEM(20)
+    USER_ITEM(20);
+  #endif
+  #if HAS_USER_ITEM(21)
+    USER_ITEM(21);
+  #endif
+  #if HAS_USER_ITEM(22)
+    USER_ITEM(22);
+  #endif
+  #if HAS_USER_ITEM(23)
+    USER_ITEM(23);
+  #endif
+  #if HAS_USER_ITEM(24)
+    USER_ITEM(24);
+  #endif
+  #if HAS_USER_ITEM(25)
+    USER_ITEM(25);
   #endif
   END_MENU();
 }

commit 23d21dd81c0c634046108e40f50fa09e3503a5dd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 2 00:05:05 2019 -0500

    Tweak lambdas

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 81b324114a..f6178133be 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -51,19 +51,19 @@ void menu_user() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
   #if defined(USER_DESC_1) && defined(USER_GCODE_1)
-    ACTION_ITEM_P(PSTR(USER_DESC_1), [](){ _lcd_user_gcode(PSTR(USER_GCODE_1 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_1), []{ _lcd_user_gcode(PSTR(USER_GCODE_1 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_2) && defined(USER_GCODE_2)
-    ACTION_ITEM_P(PSTR(USER_DESC_2), [](){ _lcd_user_gcode(PSTR(USER_GCODE_2 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_2), []{ _lcd_user_gcode(PSTR(USER_GCODE_2 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_3) && defined(USER_GCODE_3)
-    ACTION_ITEM_P(PSTR(USER_DESC_3), [](){ _lcd_user_gcode(PSTR(USER_GCODE_3 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_3), []{ _lcd_user_gcode(PSTR(USER_GCODE_3 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_4) && defined(USER_GCODE_4)
-    ACTION_ITEM_P(PSTR(USER_DESC_4), [](){ _lcd_user_gcode(PSTR(USER_GCODE_4 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_4), []{ _lcd_user_gcode(PSTR(USER_GCODE_4 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_5) && defined(USER_GCODE_5)
-    ACTION_ITEM_P(PSTR(USER_DESC_5), [](){ _lcd_user_gcode(PSTR(USER_GCODE_5 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_5), []{ _lcd_user_gcode(PSTR(USER_GCODE_5 _DONE_SCRIPT)); });
   #endif
   END_MENU();
 }

commit 6a865a614620d71521bd3dc032adffe0bf82378c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Oct 9 18:46:10 2019 -0600

    Multi-language support (#15453)

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 24c213544c..81b324114a 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -51,19 +51,19 @@ void menu_user() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
   #if defined(USER_DESC_1) && defined(USER_GCODE_1)
-    ACTION_ITEM(USER_DESC_1, [](){ _lcd_user_gcode(PSTR(USER_GCODE_1 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_1), [](){ _lcd_user_gcode(PSTR(USER_GCODE_1 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_2) && defined(USER_GCODE_2)
-    ACTION_ITEM(USER_DESC_2, [](){ _lcd_user_gcode(PSTR(USER_GCODE_2 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_2), [](){ _lcd_user_gcode(PSTR(USER_GCODE_2 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_3) && defined(USER_GCODE_3)
-    ACTION_ITEM(USER_DESC_3, [](){ _lcd_user_gcode(PSTR(USER_GCODE_3 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_3), [](){ _lcd_user_gcode(PSTR(USER_GCODE_3 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_4) && defined(USER_GCODE_4)
-    ACTION_ITEM(USER_DESC_4, [](){ _lcd_user_gcode(PSTR(USER_GCODE_4 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_4), [](){ _lcd_user_gcode(PSTR(USER_GCODE_4 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_5) && defined(USER_GCODE_5)
-    ACTION_ITEM(USER_DESC_5, [](){ _lcd_user_gcode(PSTR(USER_GCODE_5 _DONE_SCRIPT)); });
+    ACTION_ITEM_P(PSTR(USER_DESC_5), [](){ _lcd_user_gcode(PSTR(USER_GCODE_5 _DONE_SCRIPT)); });
   #endif
   END_MENU();
 }

commit cc822c1a0513362e28f1b3aff76d4c4c06446f01
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 7 19:44:33 2019 -0500

    Use lambdas in menus, where possible (#15452)

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index aa869419c9..24c213544c 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -47,39 +47,23 @@ void _lcd_user_gcode(PGM_P const cmd) {
   #endif
 }
 
-#if defined(USER_DESC_1) && defined(USER_GCODE_1)
-  void lcd_user_gcode_1() { _lcd_user_gcode(PSTR(USER_GCODE_1 _DONE_SCRIPT)); }
-#endif
-#if defined(USER_DESC_2) && defined(USER_GCODE_2)
-  void lcd_user_gcode_2() { _lcd_user_gcode(PSTR(USER_GCODE_2 _DONE_SCRIPT)); }
-#endif
-#if defined(USER_DESC_3) && defined(USER_GCODE_3)
-  void lcd_user_gcode_3() { _lcd_user_gcode(PSTR(USER_GCODE_3 _DONE_SCRIPT)); }
-#endif
-#if defined(USER_DESC_4) && defined(USER_GCODE_4)
-  void lcd_user_gcode_4() { _lcd_user_gcode(PSTR(USER_GCODE_4 _DONE_SCRIPT)); }
-#endif
-#if defined(USER_DESC_5) && defined(USER_GCODE_5)
-  void lcd_user_gcode_5() { _lcd_user_gcode(PSTR(USER_GCODE_5 _DONE_SCRIPT)); }
-#endif
-
 void menu_user() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
   #if defined(USER_DESC_1) && defined(USER_GCODE_1)
-    ACTION_ITEM(USER_DESC_1, lcd_user_gcode_1);
+    ACTION_ITEM(USER_DESC_1, [](){ _lcd_user_gcode(PSTR(USER_GCODE_1 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_2) && defined(USER_GCODE_2)
-    ACTION_ITEM(USER_DESC_2, lcd_user_gcode_2);
+    ACTION_ITEM(USER_DESC_2, [](){ _lcd_user_gcode(PSTR(USER_GCODE_2 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_3) && defined(USER_GCODE_3)
-    ACTION_ITEM(USER_DESC_3, lcd_user_gcode_3);
+    ACTION_ITEM(USER_DESC_3, [](){ _lcd_user_gcode(PSTR(USER_GCODE_3 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_4) && defined(USER_GCODE_4)
-    ACTION_ITEM(USER_DESC_4, lcd_user_gcode_4);
+    ACTION_ITEM(USER_DESC_4, [](){ _lcd_user_gcode(PSTR(USER_GCODE_4 _DONE_SCRIPT)); });
   #endif
   #if defined(USER_DESC_5) && defined(USER_GCODE_5)
-    ACTION_ITEM(USER_DESC_5, lcd_user_gcode_5);
+    ACTION_ITEM(USER_DESC_5, [](){ _lcd_user_gcode(PSTR(USER_GCODE_5 _DONE_SCRIPT)); });
   #endif
   END_MENU();
 }

commit 273cbe931e868554bf6782881443ccbf5fdd4208
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 3 05:38:30 2019 -0500

    Aliases for common menu item types

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index ad346e71df..aa869419c9 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -65,21 +65,21 @@ void _lcd_user_gcode(PGM_P const cmd) {
 
 void menu_user() {
   START_MENU();
-  MENU_BACK(MSG_MAIN);
+  BACK_ITEM(MSG_MAIN);
   #if defined(USER_DESC_1) && defined(USER_GCODE_1)
-    MENU_ITEM(function, USER_DESC_1, lcd_user_gcode_1);
+    ACTION_ITEM(USER_DESC_1, lcd_user_gcode_1);
   #endif
   #if defined(USER_DESC_2) && defined(USER_GCODE_2)
-    MENU_ITEM(function, USER_DESC_2, lcd_user_gcode_2);
+    ACTION_ITEM(USER_DESC_2, lcd_user_gcode_2);
   #endif
   #if defined(USER_DESC_3) && defined(USER_GCODE_3)
-    MENU_ITEM(function, USER_DESC_3, lcd_user_gcode_3);
+    ACTION_ITEM(USER_DESC_3, lcd_user_gcode_3);
   #endif
   #if defined(USER_DESC_4) && defined(USER_GCODE_4)
-    MENU_ITEM(function, USER_DESC_4, lcd_user_gcode_4);
+    ACTION_ITEM(USER_DESC_4, lcd_user_gcode_4);
   #endif
   #if defined(USER_DESC_5) && defined(USER_GCODE_5)
-    MENU_ITEM(function, USER_DESC_5, lcd_user_gcode_5);
+    ACTION_ITEM(USER_DESC_5, lcd_user_gcode_5);
   #endif
   END_MENU();
 }

commit c4bb458763c810f29025fc6b2c5829022ed509c7
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Mon Jul 29 02:14:50 2019 +0200

    BUZZ cleanup (#14760)

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 33ec5352e0..ad346e71df 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -39,7 +39,7 @@
 
 void _lcd_user_gcode(PGM_P const cmd) {
   queue.inject_P(cmd);
-  #if ENABLED(USER_SCRIPT_AUDIBLE_FEEDBACK)
+  #if ENABLED(USER_SCRIPT_AUDIBLE_FEEDBACK) && HAS_BUZZER
     ui.completion_feedback();
   #endif
   #if ENABLED(USER_SCRIPT_RETURN)

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index bc9a23adfb..33ec5352e0 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 4c872a01f284cbf181f52c84e2ba6b4618e62556
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 19 00:00:19 2019 -0500

    G-code queue singleton, front injection (#14236)

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 9d6cd9e8a1..bc9a23adfb 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -38,7 +38,7 @@
 #endif
 
 void _lcd_user_gcode(PGM_P const cmd) {
-  enqueue_and_echo_commands_P(cmd);
+  queue.inject_P(cmd);
   #if ENABLED(USER_SCRIPT_AUDIBLE_FEEDBACK)
     ui.completion_feedback();
   #endif

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index 6b16bbc792..9d6cd9e8a1 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit a0c795b097a30eff006c8dff178abf5f1f1907fa
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 11 12:16:24 2018 -0600

    Encapsulate common display code in a singleton (#12395)
    
    * Encapsulate common LCD code in a singleton
    * Depend more UBL code on UBL_DEVEL_DEBUGGING
      - Since most users don't need the debugging on at all times, this helps reduce the default build size for UBL by over 2K, a little closer to fitting on 128K boards.

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
index f823a1049f..6b16bbc792 100644
--- a/Marlin/src/lcd/menu/menu_custom.cpp
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -40,10 +40,10 @@
 void _lcd_user_gcode(PGM_P const cmd) {
   enqueue_and_echo_commands_P(cmd);
   #if ENABLED(USER_SCRIPT_AUDIBLE_FEEDBACK)
-    lcd_completion_feedback();
+    ui.completion_feedback();
   #endif
   #if ENABLED(USER_SCRIPT_RETURN)
-    lcd_return_to_status();
+    ui.return_to_status();
   #endif
 }
 

commit 0161d3f733a8b67d6aedd63aba6fc7beae229890
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 28 03:05:17 2018 -0500

    Move Custom User Menu to its own file

diff --git a/Marlin/src/lcd/menu/menu_custom.cpp b/Marlin/src/lcd/menu/menu_custom.cpp
new file mode 100644
index 0000000000..f823a1049f
--- /dev/null
+++ b/Marlin/src/lcd/menu/menu_custom.cpp
@@ -0,0 +1,87 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+//
+// Custom User Menu
+//
+
+#include "../../inc/MarlinConfigPre.h"
+
+#if HAS_LCD_MENU && ENABLED(CUSTOM_USER_MENUS)
+
+#include "menu.h"
+#include "../../gcode/queue.h"
+
+#ifdef USER_SCRIPT_DONE
+  #define _DONE_SCRIPT "\n" USER_SCRIPT_DONE
+#else
+  #define _DONE_SCRIPT ""
+#endif
+
+void _lcd_user_gcode(PGM_P const cmd) {
+  enqueue_and_echo_commands_P(cmd);
+  #if ENABLED(USER_SCRIPT_AUDIBLE_FEEDBACK)
+    lcd_completion_feedback();
+  #endif
+  #if ENABLED(USER_SCRIPT_RETURN)
+    lcd_return_to_status();
+  #endif
+}
+
+#if defined(USER_DESC_1) && defined(USER_GCODE_1)
+  void lcd_user_gcode_1() { _lcd_user_gcode(PSTR(USER_GCODE_1 _DONE_SCRIPT)); }
+#endif
+#if defined(USER_DESC_2) && defined(USER_GCODE_2)
+  void lcd_user_gcode_2() { _lcd_user_gcode(PSTR(USER_GCODE_2 _DONE_SCRIPT)); }
+#endif
+#if defined(USER_DESC_3) && defined(USER_GCODE_3)
+  void lcd_user_gcode_3() { _lcd_user_gcode(PSTR(USER_GCODE_3 _DONE_SCRIPT)); }
+#endif
+#if defined(USER_DESC_4) && defined(USER_GCODE_4)
+  void lcd_user_gcode_4() { _lcd_user_gcode(PSTR(USER_GCODE_4 _DONE_SCRIPT)); }
+#endif
+#if defined(USER_DESC_5) && defined(USER_GCODE_5)
+  void lcd_user_gcode_5() { _lcd_user_gcode(PSTR(USER_GCODE_5 _DONE_SCRIPT)); }
+#endif
+
+void menu_user() {
+  START_MENU();
+  MENU_BACK(MSG_MAIN);
+  #if defined(USER_DESC_1) && defined(USER_GCODE_1)
+    MENU_ITEM(function, USER_DESC_1, lcd_user_gcode_1);
+  #endif
+  #if defined(USER_DESC_2) && defined(USER_GCODE_2)
+    MENU_ITEM(function, USER_DESC_2, lcd_user_gcode_2);
+  #endif
+  #if defined(USER_DESC_3) && defined(USER_GCODE_3)
+    MENU_ITEM(function, USER_DESC_3, lcd_user_gcode_3);
+  #endif
+  #if defined(USER_DESC_4) && defined(USER_GCODE_4)
+    MENU_ITEM(function, USER_DESC_4, lcd_user_gcode_4);
+  #endif
+  #if defined(USER_DESC_5) && defined(USER_GCODE_5)
+    MENU_ITEM(function, USER_DESC_5, lcd_user_gcode_5);
+  #endif
+  END_MENU();
+}
+
+#endif // HAS_LCD_MENU && CUSTOM_USER_MENUS
