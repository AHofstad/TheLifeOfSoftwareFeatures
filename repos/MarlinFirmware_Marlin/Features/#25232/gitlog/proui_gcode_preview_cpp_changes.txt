commit cc8f7c83dabdff51a0980d8fa066833aeaa3d97d
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Tue Nov 21 04:57:31 2023 -0500

    üö∏ Fix, clean up ProUI (#26434)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index e6e8384d90..045615f3c2 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -29,11 +29,14 @@
 
 #include "../../../inc/MarlinConfigPre.h"
 
-#if ALL(DWIN_LCD_PROUI, HAS_GCODE_PREVIEW)
+#if ENABLED(DWIN_LCD_PROUI)
+
+#include "dwin_defines.h"
+
+#if HAS_GCODE_PREVIEW
 
 #include "gcode_preview.h"
 
-#include "../../../core/types.h"
 #include "../../marlinui.h"
 #include "../../../sd/cardreader.h"
 #include "../../../MarlinCore.h" // for wait_for_user
@@ -226,4 +229,5 @@ void Preview::show() {
   dwinIconShow(xpos, ypos, 0x00);
 }
 
-#endif // DWIN_LCD_PROUI && HAS_GCODE_PREVIEW
+#endif // HAS_GCODE_PREVIEW
+#endif // DWIN_LCD_PROUI

commit cacbe005b53dd833a5300c1e6636d917583d7fd3
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Thu Oct 19 19:01:43 2023 -0400

    ü©π Fix ProUI G-code preview (#26213)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 30c6f9f1f6..e6e8384d90 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -63,14 +63,14 @@ typedef struct {
   }
 
   void clear() {
-    fileprop.name[0] = '\0';
-    fileprop.thumbstart = 0;
-    fileprop.thumbsize = 0;
-    fileprop.thumbheight = fileprop.thumbwidth = 0;
-    fileprop.time = 0;
-    fileprop.filament = 0;
-    fileprop.layer = 0;
-    fileprop.height = fileprop.width = fileprop.length = 0;
+    name[0] = '\0';
+    thumbstart = 0;
+    thumbsize = 0;
+    thumbheight = thumbwidth = 0;
+    time = 0;
+    filament = 0;
+    layer = 0;
+    height = width = length = 0;
   }
 
 } fileprop_t;

commit 8fa6a4da2eebc1dbe120dcac87b159e389e17dc3
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Fri Aug 25 19:33:49 2023 -0400

    üö∏ Fixes for ProUI, JyersUI, backlight, etc. (#26086)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 53b38b641e..30c6f9f1f6 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -39,7 +39,7 @@
 #include "../../../MarlinCore.h" // for wait_for_user
 #include "dwin.h"
 #include "dwin_popup.h"
-#include "base64.hpp"
+#include "base64.h"
 
 #define THUMBWIDTH 230
 #define THUMBHEIGHT 180
@@ -160,7 +160,7 @@ bool Preview::hasPreview() {
     return false;
   }
 
-  uint8_t buf64[fileprop.thumbsize];
+  uint8_t buf64[fileprop.thumbsize + 1];
   uint16_t nread = 0;
   while (nread < fileprop.thumbsize) {
     const uint8_t c = card.get();

commit 4613f85bb754991b1ea4fa5218ae94e758be0e8a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Aug 24 15:09:03 2023 -0500

    üßë‚Äçüíª Encapsulate ProUI G-code preview

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 8017847538..53b38b641e 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -31,6 +31,8 @@
 
 #if ALL(DWIN_LCD_PROUI, HAS_GCODE_PREVIEW)
 
+#include "gcode_preview.h"
+
 #include "../../../core/types.h"
 #include "../../marlinui.h"
 #include "../../../sd/cardreader.h"
@@ -38,78 +40,66 @@
 #include "dwin.h"
 #include "dwin_popup.h"
 #include "base64.hpp"
-#include "gcode_preview.h"
 
 #define THUMBWIDTH 230
 #define THUMBHEIGHT 180
 
+Preview preview;
+
 typedef struct {
-  char name[13] = "";   //8.3 + null
+  char name[13] = "";   // 8.3 + null
   uint32_t thumbstart = 0;
   int thumbsize = 0;
-  int thumbheight = 0;
-  int thumbwidth = 0;
-  uint8_t *thumbdata = nullptr;
+  int thumbheight = 0, thumbwidth = 0;
   float time = 0;
   float filament = 0;
   float layer = 0;
-  float width = 0;
-  float height = 0;
-  float length = 0;
-  void setname(const char * const fn);
-  void clear();
+  float width = 0, height = 0, length = 0;
+
+  void setname(const char * const fn) {
+    const uint8_t len = _MIN(sizeof(name) - 1, strlen(fn));
+    memcpy(name, fn, len);
+    name[len] = '\0';
+  }
+
+  void clear() {
+    fileprop.name[0] = '\0';
+    fileprop.thumbstart = 0;
+    fileprop.thumbsize = 0;
+    fileprop.thumbheight = fileprop.thumbwidth = 0;
+    fileprop.time = 0;
+    fileprop.filament = 0;
+    fileprop.layer = 0;
+    fileprop.height = fileprop.width = fileprop.length = 0;
+  }
+
 } fileprop_t;
+
 fileprop_t fileprop;
 
-void fileprop_t::setname(const char * const fn) {
-  const uint8_t len = _MIN(sizeof(name) - 1, strlen(fn));
-  memcpy(&name[0], fn, len);
-  name[len] = '\0';
-}
+void getValue(const char * const buf, PGM_P const key, float &value) {
+  if (value != 0.0f) return;
 
-void fileprop_t::clear() {
-  fileprop.name[0] = '\0';
-  fileprop.thumbstart = 0;
-  fileprop.thumbsize = 0;
-  fileprop.thumbheight = 0;
-  fileprop.thumbwidth = 0;
-  fileprop.thumbdata = nullptr;
-  fileprop.time = 0;
-  fileprop.filament = 0;
-  fileprop.layer = 0;
-  fileprop.height = 0;
-  fileprop.width = 0;
-  fileprop.length = 0;
-}
+  char *posptr = strstr_P(buf, key);
+  if (posptr == nullptr) return;
 
-void Get_Value(char *buf, const char * const key, float &value) {
   char num[10] = "";
-  char * posptr = 0;
-  uint8_t i = 0;
-  if (!!value) return;
-  posptr = strstr(buf, key);
-  if (posptr != nullptr) {
-    while (i < sizeof(num)) {
-      char c = posptr[0];
-      if (!ISEOL(c) && (c != 0)) {
-        if ((c > 47 && c < 58) || (c == '.')) num[i++] = c;
-        posptr++;
-      }
-      else {
-        num[i] = '\0';
-        value = atof(num);
-        return;
-      }
+  for (uint8_t i = 0; i < sizeof(num);) {
+    const char c = *posptr;
+    if (ISEOL(c) || c == '\0') {
+      num[i] = '\0';
+      value = atof(num);
+      break;
     }
+    if (WITHIN(c, '0', '9') || c == '.') num[i++] = c;
+    posptr++;
   }
 }
 
-bool Has_Preview() {
-  const char * tbstart = "; thumbnail begin " STRINGIFY(THUMBWIDTH) "x" STRINGIFY(THUMBHEIGHT);
-  char * posptr = 0;
-  uint8_t nbyte = 1;
+bool Preview::hasPreview() {
+  const char * const tbstart = PSTR("; thumbnail begin " STRINGIFY(THUMBWIDTH) "x" STRINGIFY(THUMBHEIGHT));
+  char *posptr = nullptr;
   uint32_t indx = 0;
-  char buf[256];
   float tmp = 0;
 
   fileprop.clear();
@@ -117,30 +107,32 @@ bool Has_Preview() {
 
   card.openFileRead(fileprop.name);
 
-  while ((nbyte > 0) && (indx < 4 * sizeof(buf)) && !fileprop.thumbstart) {
+  char buf[256];
+  uint8_t nbyte = 1;
+  while (!fileprop.thumbstart && nbyte > 0 && indx < 4 * sizeof(buf)) {
     nbyte = card.read(buf, sizeof(buf) - 1);
     if (nbyte > 0) {
       buf[nbyte] = '\0';
-      Get_Value(buf, ";TIME:", fileprop.time);
-      Get_Value(buf, ";Filament used:", fileprop.filament);
-      Get_Value(buf, ";Layer height:", fileprop.layer);
-      Get_Value(buf, ";MINX:", tmp);
-      Get_Value(buf, ";MAXX:", fileprop.width);
+      getValue(buf, PSTR(";TIME:"), fileprop.time);
+      getValue(buf, PSTR(";Filament used:"), fileprop.filament);
+      getValue(buf, PSTR(";Layer height:"), fileprop.layer);
+      getValue(buf, PSTR(";MINX:"), tmp);
+      getValue(buf, PSTR(";MAXX:"), fileprop.width);
       fileprop.width -= tmp;
       tmp = 0;
-      Get_Value(buf, ";MINY:", tmp);
-      Get_Value(buf, ";MAXY:", fileprop.length);
+      getValue(buf, PSTR(";MINY:"), tmp);
+      getValue(buf, PSTR(";MAXY:"), fileprop.length);
       fileprop.length -= tmp;
       tmp = 0;
-      Get_Value(buf, ";MINZ:", tmp);
-      Get_Value(buf, ";MAXZ:", fileprop.height);
+      getValue(buf, PSTR(";MINZ:"), tmp);
+      getValue(buf, PSTR(";MAXZ:"), fileprop.height);
       fileprop.height -= tmp;
-      posptr = strstr(buf, tbstart);
+      posptr = strstr_P(buf, tbstart);
       if (posptr != nullptr) {
         fileprop.thumbstart = indx + (posptr - &buf[0]);
       }
       else {
-        indx += _MAX(10, nbyte - (signed)strlen(tbstart));
+        indx += _MAX(10, nbyte - (signed)strlen_P(tbstart));
         card.setIndex(indx);
       }
     }
@@ -149,20 +141,15 @@ bool Has_Preview() {
   if (!fileprop.thumbstart) {
     card.closefile();
     LCD_MESSAGE_F("Thumbnail not found");
-    return 0;
+    return false;
   }
 
   // Get the size of the thumbnail
-  card.setIndex(fileprop.thumbstart + strlen(tbstart));
+  card.setIndex(fileprop.thumbstart + strlen_P(tbstart));
   for (uint8_t i = 0; i < 16; i++) {
-    char c = card.get();
-    if (!ISEOL(c)) {
-      buf[i] = c;
-    }
-    else {
-      buf[i] = 0;
-      break;
-    }
+    const char c = card.get();
+    if (ISEOL(c)) { buf[i] = '\0'; break; }
+    buf[i] = c;
   }
   fileprop.thumbsize = atoi(buf);
 
@@ -170,77 +157,73 @@ bool Has_Preview() {
   if (!fileprop.thumbsize) {
     card.closefile();
     LCD_MESSAGE_F("Invalid Thumbnail Size");
-    return 0;
+    return false;
   }
 
-  uint16_t readed = 0;
   uint8_t buf64[fileprop.thumbsize];
-
-  fileprop.thumbdata = new uint8_t[3 + 3 * (fileprop.thumbsize / 4)];  // Reserve space for the JPEG thumbnail
-
-  while (readed < fileprop.thumbsize) {
-    uint8_t c = card.get();
-    if (!ISEOL(c) && (c != ';') && (c != ' ')) {
-      buf64[readed] = c;
-      readed++;
-    }
+  uint16_t nread = 0;
+  while (nread < fileprop.thumbsize) {
+    const uint8_t c = card.get();
+    if (!ISEOL(c) && c != ';' && c != ' ')
+      buf64[nread++] = c;
   }
   card.closefile();
-  buf64[readed] = 0;
+  buf64[nread] = '\0';
+
+  uint8_t thumbdata[3 + 3 * (fileprop.thumbsize / 4)];  // Reserve space for the JPEG thumbnail
+  fileprop.thumbsize = decode_base64(buf64, thumbdata);
+  DWINUI::writeToSRAM(0x00, fileprop.thumbsize, thumbdata);
 
   fileprop.thumbwidth = THUMBWIDTH;
   fileprop.thumbheight = THUMBHEIGHT;
-  fileprop.thumbsize = decode_base64(buf64, fileprop.thumbdata);  card.closefile();
-  DWINUI::WriteToSRAM(0x00, fileprop.thumbsize, fileprop.thumbdata);
-  delete[] fileprop.thumbdata;
+
   return true;
 }
 
-void Preview_DrawFromSD() {
-  if (Has_Preview()) {
-    MString<45> buf;
-    char str_1[6] = "", str_2[6] = "", str_3[6] = "";
-    dwinDrawRectangle(1, hmiData.colorBackground, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
-    if (fileprop.time) {
-      buf.setf(F("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);
-      DWINUI::drawString(20, 10, &buf);
-    }
-    if (fileprop.filament) {
-      buf.setf(F("Filament used: %s m"), dtostrf(fileprop.filament, 1, 2, str_1));
-      DWINUI::drawString(20, 30, &buf);
-    }
-    if (fileprop.layer) {
-      buf.setf(F("Layer height: %s mm"), dtostrf(fileprop.layer, 1, 2, str_1));
-      DWINUI::drawString(20, 50, &buf);
-    }
-    if (fileprop.width) {
-      buf.setf(F("Volume: %sx%sx%s mm"), dtostrf(fileprop.width, 1, 1, str_1), dtostrf(fileprop.length, 1, 1, str_2), dtostrf(fileprop.height, 1, 1, str_3));
-      DWINUI::drawString(20, 70, &buf);
-    }
-    DWINUI::drawButton(BTN_Print, 26, 290);
-    DWINUI::drawButton(BTN_Cancel, 146, 290);
-    Preview_Show();
-    drawSelectHighlight(true, 290);
-    dwinUpdateLCD();
-  }
-  else {
+void Preview::drawFromSD() {
+  if (!hasPreview()) {
     hmiFlag.select_flag = 1;
     wait_for_user = false;
+    return;
+  }
+
+  MString<45> buf;
+  dwinDrawRectangle(1, hmiData.colorBackground, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
+  if (fileprop.time) {
+    buf.setf(F("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);
+    DWINUI::drawString(20, 10, &buf);
+  }
+  if (fileprop.filament) {
+    buf.set(F("Filament used: "), p_float_t(fileprop.filament, 2), F(" m"));
+    DWINUI::drawString(20, 30, &buf);
+  }
+  if (fileprop.layer) {
+    buf.set(F("Layer height: "), p_float_t(fileprop.layer, 2), F(" mm"));
+    DWINUI::drawString(20, 50, &buf);
+  }
+  if (fileprop.width) {
+    buf.set(F("Volume: "), p_float_t(fileprop.width, 1), 'x', p_float_t(fileprop.length, 1), 'x', p_float_t(fileprop.height, 1), F(" mm"));
+    DWINUI::drawString(20, 70, &buf);
   }
+  DWINUI::drawButton(BTN_Print, 26, 290);
+  DWINUI::drawButton(BTN_Cancel, 146, 290);
+  show();
+  drawSelectHighlight(true, 290);
+  dwinUpdateLCD();
 }
 
-void Preview_Invalidate() {
+void Preview::invalidate() {
   fileprop.thumbsize = 0;
 }
 
-bool Preview_Valid() {
+bool Preview::valid() {
   return !!fileprop.thumbsize;
 }
 
-void Preview_Show() {
-  const uint8_t xpos = (DWIN_WIDTH - fileprop.thumbwidth) / 2;
-  const uint8_t ypos = (205 - fileprop.thumbheight) / 2 + 87;
+void Preview::show() {
+  const uint8_t xpos = ((DWIN_WIDTH) - fileprop.thumbwidth) / 2,
+                ypos = (205 - fileprop.thumbheight) / 2 + 87;
   dwinIconShow(xpos, ypos, 0x00);
 }
 
-#endif // HAS_GCODE_PREVIEW && DWIN_LCD_PROUI
+#endif // DWIN_LCD_PROUI && HAS_GCODE_PREVIEW

commit f14f1be168ebf252dd458c935271aed1a57cfa0b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 30 19:16:00 2023 -0500

    üé® Standardize naming (ProUI) (#25982)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index c0b12c5946..8017847538 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -200,27 +200,27 @@ void Preview_DrawFromSD() {
   if (Has_Preview()) {
     MString<45> buf;
     char str_1[6] = "", str_2[6] = "", str_3[6] = "";
-    dwinDrawRectangle(1, HMI_data.Background_Color, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
+    dwinDrawRectangle(1, hmiData.colorBackground, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
     if (fileprop.time) {
       buf.setf(F("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);
-      DWINUI::Draw_String(20, 10, &buf);
+      DWINUI::drawString(20, 10, &buf);
     }
     if (fileprop.filament) {
       buf.setf(F("Filament used: %s m"), dtostrf(fileprop.filament, 1, 2, str_1));
-      DWINUI::Draw_String(20, 30, &buf);
+      DWINUI::drawString(20, 30, &buf);
     }
     if (fileprop.layer) {
       buf.setf(F("Layer height: %s mm"), dtostrf(fileprop.layer, 1, 2, str_1));
-      DWINUI::Draw_String(20, 50, &buf);
+      DWINUI::drawString(20, 50, &buf);
     }
     if (fileprop.width) {
       buf.setf(F("Volume: %sx%sx%s mm"), dtostrf(fileprop.width, 1, 1, str_1), dtostrf(fileprop.length, 1, 1, str_2), dtostrf(fileprop.height, 1, 1, str_3));
-      DWINUI::Draw_String(20, 70, &buf);
+      DWINUI::drawString(20, 70, &buf);
     }
-    DWINUI::Draw_Button(BTN_Print, 26, 290);
-    DWINUI::Draw_Button(BTN_Cancel, 146, 290);
+    DWINUI::drawButton(BTN_Print, 26, 290);
+    DWINUI::drawButton(BTN_Cancel, 146, 290);
     Preview_Show();
-    Draw_Select_Highlight(true, 290);
+    drawSelectHighlight(true, 290);
     dwinUpdateLCD();
   }
   else {

commit 574dd34c49fde76e1e736b8a7e1ea579d724ff22
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 27 13:19:36 2023 -0500

    ‚ôªÔ∏è String helper class (#24390)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 3dddbe6f61..c0b12c5946 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -198,26 +198,24 @@ bool Has_Preview() {
 
 void Preview_DrawFromSD() {
   if (Has_Preview()) {
-    char buf[46];
-    char str_1[6] = "";
-    char str_2[6] = "";
-    char str_3[6] = "";
+    MString<45> buf;
+    char str_1[6] = "", str_2[6] = "", str_3[6] = "";
     dwinDrawRectangle(1, HMI_data.Background_Color, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
     if (fileprop.time) {
-      sprintf_P(buf, PSTR("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);
-      DWINUI::Draw_String(20, 10, buf);
+      buf.setf(F("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);
+      DWINUI::Draw_String(20, 10, &buf);
     }
     if (fileprop.filament) {
-      sprintf_P(buf, PSTR("Filament used: %s m"), dtostrf(fileprop.filament, 1, 2, str_1));
-      DWINUI::Draw_String(20, 30, buf);
+      buf.setf(F("Filament used: %s m"), dtostrf(fileprop.filament, 1, 2, str_1));
+      DWINUI::Draw_String(20, 30, &buf);
     }
     if (fileprop.layer) {
-      sprintf_P(buf, PSTR("Layer height: %s mm"), dtostrf(fileprop.layer, 1, 2, str_1));
-      DWINUI::Draw_String(20, 50, buf);
+      buf.setf(F("Layer height: %s mm"), dtostrf(fileprop.layer, 1, 2, str_1));
+      DWINUI::Draw_String(20, 50, &buf);
     }
     if (fileprop.width) {
-      sprintf_P(buf, PSTR("Volume: %sx%sx%s mm"), dtostrf(fileprop.width, 1, 1, str_1), dtostrf(fileprop.length, 1, 1, str_2), dtostrf(fileprop.height, 1, 1, str_3));
-      DWINUI::Draw_String(20, 70, buf);
+      buf.setf(F("Volume: %sx%sx%s mm"), dtostrf(fileprop.width, 1, 1, str_1), dtostrf(fileprop.length, 1, 1, str_2), dtostrf(fileprop.height, 1, 1, str_3));
+      DWINUI::Draw_String(20, 70, &buf);
     }
     DWINUI::Draw_Button(BTN_Print, 26, 290);
     DWINUI::Draw_Button(BTN_Cancel, 146, 290);

commit 858916d628526b5d56c34c5c9663e3535bfc7788
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Fri Jun 23 04:57:22 2023 -0500

    üö∏ Update DWIN ProUI (#26003)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index b87ed2101f..3dddbe6f61 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -23,8 +23,8 @@
 /**
  * DWIN G-code thumbnail preview
  * Author: Miguel A. Risco-Castillo
- * version: 3.1.2
- * Date: 2022/09/03
+ * version: 3.3.2
+ * Date: 2023/06/18
  */
 
 #include "../../../inc/MarlinConfigPre.h"
@@ -35,13 +35,14 @@
 #include "../../marlinui.h"
 #include "../../../sd/cardreader.h"
 #include "../../../MarlinCore.h" // for wait_for_user
-#include "dwin_lcd.h"
-#include "dwinui.h"
 #include "dwin.h"
 #include "dwin_popup.h"
 #include "base64.hpp"
 #include "gcode_preview.h"
 
+#define THUMBWIDTH 230
+#define THUMBHEIGHT 180
+
 typedef struct {
   char name[13] = "";   //8.3 + null
   uint32_t thumbstart = 0;
@@ -104,7 +105,7 @@ void Get_Value(char *buf, const char * const key, float &value) {
 }
 
 bool Has_Preview() {
-  const char * tbstart = "; thumbnail begin 230x180";
+  const char * tbstart = "; thumbnail begin " STRINGIFY(THUMBWIDTH) "x" STRINGIFY(THUMBHEIGHT);
   char * posptr = 0;
   uint8_t nbyte = 1;
   uint32_t indx = 0;
@@ -187,6 +188,8 @@ bool Has_Preview() {
   card.closefile();
   buf64[readed] = 0;
 
+  fileprop.thumbwidth = THUMBWIDTH;
+  fileprop.thumbheight = THUMBHEIGHT;
   fileprop.thumbsize = decode_base64(buf64, fileprop.thumbdata);  card.closefile();
   DWINUI::WriteToSRAM(0x00, fileprop.thumbsize, fileprop.thumbdata);
   delete[] fileprop.thumbdata;
@@ -218,7 +221,7 @@ void Preview_DrawFromSD() {
     }
     DWINUI::Draw_Button(BTN_Print, 26, 290);
     DWINUI::Draw_Button(BTN_Cancel, 146, 290);
-    dwinIconShow(0, 0, 1, 21, 90, 0x00);
+    Preview_Show();
     Draw_Select_Highlight(true, 290);
     dwinUpdateLCD();
   }
@@ -229,15 +232,17 @@ void Preview_DrawFromSD() {
 }
 
 void Preview_Invalidate() {
-  fileprop.thumbstart = 0;
+  fileprop.thumbsize = 0;
 }
 
 bool Preview_Valid() {
-  return !!fileprop.thumbstart;
+  return !!fileprop.thumbsize;
 }
 
-void Preview_Reset() {
-  fileprop.thumbsize = 0;
+void Preview_Show() {
+  const uint8_t xpos = (DWIN_WIDTH - fileprop.thumbwidth) / 2;
+  const uint8_t ypos = (205 - fileprop.thumbheight) / 2 + 87;
+  dwinIconShow(xpos, ypos, 0x00);
 }
 
 #endif // HAS_GCODE_PREVIEW && DWIN_LCD_PROUI

commit 238951a966204ce9bc109e06fdb4027125b28feb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 16 18:08:59 2023 -0500

    üé® More more lowercase (partial ProUI)
    
    Followup to #25939

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 6cf3e9e135..b87ed2101f 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -199,7 +199,7 @@ void Preview_DrawFromSD() {
     char str_1[6] = "";
     char str_2[6] = "";
     char str_3[6] = "";
-    DWIN_Draw_Rectangle(1, HMI_data.Background_Color, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
+    dwinDrawRectangle(1, HMI_data.Background_Color, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
     if (fileprop.time) {
       sprintf_P(buf, PSTR("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);
       DWINUI::Draw_String(20, 10, buf);
@@ -218,12 +218,12 @@ void Preview_DrawFromSD() {
     }
     DWINUI::Draw_Button(BTN_Print, 26, 290);
     DWINUI::Draw_Button(BTN_Cancel, 146, 290);
-    DWIN_ICON_Show(0, 0, 1, 21, 90, 0x00);
+    dwinIconShow(0, 0, 1, 21, 90, 0x00);
     Draw_Select_Highlight(true, 290);
-    DWIN_UpdateLCD();
+    dwinUpdateLCD();
   }
   else {
-    HMI_flag.select_flag = 1;
+    hmiFlag.select_flag = 1;
     wait_for_user = false;
   }
 }

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index f8bcda8353..6cf3e9e135 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -29,7 +29,7 @@
 
 #include "../../../inc/MarlinConfigPre.h"
 
-#if BOTH(DWIN_LCD_PROUI, HAS_GCODE_PREVIEW)
+#if ALL(DWIN_LCD_PROUI, HAS_GCODE_PREVIEW)
 
 #include "../../../core/types.h"
 #include "../../marlinui.h"

commit 96bc084f3d791bc93265f217181986863e8e5fc7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 18 02:15:16 2023 -0600

    üé® Misc. LCD cleanup (#25400)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index bc489dd1fa..f8bcda8353 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -135,7 +135,7 @@ bool Has_Preview() {
       Get_Value(buf, ";MAXZ:", fileprop.height);
       fileprop.height -= tmp;
       posptr = strstr(buf, tbstart);
-      if (posptr != NULL) {
+      if (posptr != nullptr) {
         fileprop.thumbstart = indx + (posptr - &buf[0]);
       }
       else {

commit b3f65b674f23db5c32e4d7e96ad2dff97c77c717
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Tue Jan 17 18:41:36 2023 -0500

    üö∏ ProUI MPC menu (#25232)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 6411b669bb..bc489dd1fa 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -21,25 +21,10 @@
  */
 
 /**
- * DWIN g-code thumbnail preview
+ * DWIN G-code thumbnail preview
  * Author: Miguel A. Risco-Castillo
  * version: 3.1.2
  * Date: 2022/09/03
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License as
- * published by the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- * For commercial applications additional licenses can be requested
  */
 
 #include "../../../inc/MarlinConfigPre.h"

commit c66b3cf8a429c427c014f33171407c634da735f1
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Sun Jan 8 04:22:21 2023 -0500

    üö∏ ProUI updates (#25176)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index adb23a9664..6411b669bb 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -23,8 +23,8 @@
 /**
  * DWIN g-code thumbnail preview
  * Author: Miguel A. Risco-Castillo
- * version: 2.1
- * Date: 2021/06/19
+ * version: 3.1.2
+ * Date: 2022/09/03
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as
@@ -43,11 +43,8 @@
  */
 
 #include "../../../inc/MarlinConfigPre.h"
-#if ENABLED(DWIN_LCD_PROUI)
 
-#include "dwin_defines.h"
-
-#if HAS_GCODE_PREVIEW
+#if BOTH(DWIN_LCD_PROUI, HAS_GCODE_PREVIEW)
 
 #include "../../../core/types.h"
 #include "../../marlinui.h"
@@ -246,6 +243,10 @@ void Preview_DrawFromSD() {
   }
 }
 
+void Preview_Invalidate() {
+  fileprop.thumbstart = 0;
+}
+
 bool Preview_Valid() {
   return !!fileprop.thumbstart;
 }
@@ -254,5 +255,4 @@ void Preview_Reset() {
   fileprop.thumbsize = 0;
 }
 
-#endif // HAS_GCODE_PREVIEW
-#endif // DWIN_LCD_PROUI
+#endif // HAS_GCODE_PREVIEW && DWIN_LCD_PROUI

commit f73fad1b2fa6e70b3d632969ecf2773bee826643
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 6 19:34:45 2022 -0500

    üî• Remove JyersUI (#24459)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 4257728f73..adb23a9664 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -21,7 +21,7 @@
  */
 
 /**
- * DWIN G-code thumbnail preview
+ * DWIN g-code thumbnail preview
  * Author: Miguel A. Risco-Castillo
  * version: 2.1
  * Date: 2021/06/19
@@ -214,7 +214,9 @@ bool Has_Preview() {
 void Preview_DrawFromSD() {
   if (Has_Preview()) {
     char buf[46];
-    char str_1[6] = "", str_2[6] = "", str_3[6] = "";
+    char str_1[6] = "";
+    char str_2[6] = "";
+    char str_3[6] = "";
     DWIN_Draw_Rectangle(1, HMI_data.Background_Color, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
     if (fileprop.time) {
       sprintf_P(buf, PSTR("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);

commit 509dfe92d0c2227ddece025fb97875582ca47aed
Author: Meilleur Gars <98503100+LCh-77@users.noreply.github.com>
Date:   Wed Jul 6 13:46:11 2022 -0700

    üö∏ JyersUI updates (#24451)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index adb23a9664..4257728f73 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -21,7 +21,7 @@
  */
 
 /**
- * DWIN g-code thumbnail preview
+ * DWIN G-code thumbnail preview
  * Author: Miguel A. Risco-Castillo
  * version: 2.1
  * Date: 2021/06/19
@@ -214,9 +214,7 @@ bool Has_Preview() {
 void Preview_DrawFromSD() {
   if (Has_Preview()) {
     char buf[46];
-    char str_1[6] = "";
-    char str_2[6] = "";
-    char str_3[6] = "";
+    char str_1[6] = "", str_2[6] = "", str_3[6] = "";
     DWIN_Draw_Rectangle(1, HMI_data.Background_Color, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
     if (fileprop.time) {
       sprintf_P(buf, PSTR("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);

commit 0ff3018fd2caa957c0a90d6f58e7f3c760a78fc0
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Tue Jun 14 13:38:19 2022 +1200

    ü©π Fix missing ProUI cpp wrapper (#24313)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 1a3a3abfab..adb23a9664 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -42,6 +42,9 @@
  * For commercial applications additional licenses can be requested
  */
 
+#include "../../../inc/MarlinConfigPre.h"
+#if ENABLED(DWIN_LCD_PROUI)
+
 #include "dwin_defines.h"
 
 #if HAS_GCODE_PREVIEW
@@ -252,3 +255,4 @@ void Preview_Reset() {
 }
 
 #endif // HAS_GCODE_PREVIEW
+#endif // DWIN_LCD_PROUI

commit ee90ae2c872c29950a79ea1f181f2c8f6f4d2006
Author: Steven Haigh <netwiz@crc.id.au>
Date:   Sat Jun 11 12:08:55 2022 +1000

    ü©π Fix ProUI compile (#24310)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
index 951f469e1c..1a3a3abfab 100644
--- a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -49,6 +49,7 @@
 #include "../../../core/types.h"
 #include "../../marlinui.h"
 #include "../../../sd/cardreader.h"
+#include "../../../MarlinCore.h" // for wait_for_user
 #include "dwin_lcd.h"
 #include "dwinui.h"
 #include "dwin.h"

commit c9a9b25d41e7eb805c166e8a27cfa938b36bd2ba
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Mon Jun 6 00:01:06 2022 -0500

    üö∏ ProUI G-code preview, PID plot (#24282)

diff --git a/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
new file mode 100644
index 0000000000..951f469e1c
--- /dev/null
+++ b/Marlin/src/lcd/e3v2/proui/gcode_preview.cpp
@@ -0,0 +1,253 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2022 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * DWIN g-code thumbnail preview
+ * Author: Miguel A. Risco-Castillo
+ * version: 2.1
+ * Date: 2021/06/19
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ * For commercial applications additional licenses can be requested
+ */
+
+#include "dwin_defines.h"
+
+#if HAS_GCODE_PREVIEW
+
+#include "../../../core/types.h"
+#include "../../marlinui.h"
+#include "../../../sd/cardreader.h"
+#include "dwin_lcd.h"
+#include "dwinui.h"
+#include "dwin.h"
+#include "dwin_popup.h"
+#include "base64.hpp"
+#include "gcode_preview.h"
+
+typedef struct {
+  char name[13] = "";   //8.3 + null
+  uint32_t thumbstart = 0;
+  int thumbsize = 0;
+  int thumbheight = 0;
+  int thumbwidth = 0;
+  uint8_t *thumbdata = nullptr;
+  float time = 0;
+  float filament = 0;
+  float layer = 0;
+  float width = 0;
+  float height = 0;
+  float length = 0;
+  void setname(const char * const fn);
+  void clear();
+} fileprop_t;
+fileprop_t fileprop;
+
+void fileprop_t::setname(const char * const fn) {
+  const uint8_t len = _MIN(sizeof(name) - 1, strlen(fn));
+  memcpy(&name[0], fn, len);
+  name[len] = '\0';
+}
+
+void fileprop_t::clear() {
+  fileprop.name[0] = '\0';
+  fileprop.thumbstart = 0;
+  fileprop.thumbsize = 0;
+  fileprop.thumbheight = 0;
+  fileprop.thumbwidth = 0;
+  fileprop.thumbdata = nullptr;
+  fileprop.time = 0;
+  fileprop.filament = 0;
+  fileprop.layer = 0;
+  fileprop.height = 0;
+  fileprop.width = 0;
+  fileprop.length = 0;
+}
+
+void Get_Value(char *buf, const char * const key, float &value) {
+  char num[10] = "";
+  char * posptr = 0;
+  uint8_t i = 0;
+  if (!!value) return;
+  posptr = strstr(buf, key);
+  if (posptr != nullptr) {
+    while (i < sizeof(num)) {
+      char c = posptr[0];
+      if (!ISEOL(c) && (c != 0)) {
+        if ((c > 47 && c < 58) || (c == '.')) num[i++] = c;
+        posptr++;
+      }
+      else {
+        num[i] = '\0';
+        value = atof(num);
+        return;
+      }
+    }
+  }
+}
+
+bool Has_Preview() {
+  const char * tbstart = "; thumbnail begin 230x180";
+  char * posptr = 0;
+  uint8_t nbyte = 1;
+  uint32_t indx = 0;
+  char buf[256];
+  float tmp = 0;
+
+  fileprop.clear();
+  fileprop.setname(card.filename);
+
+  card.openFileRead(fileprop.name);
+
+  while ((nbyte > 0) && (indx < 4 * sizeof(buf)) && !fileprop.thumbstart) {
+    nbyte = card.read(buf, sizeof(buf) - 1);
+    if (nbyte > 0) {
+      buf[nbyte] = '\0';
+      Get_Value(buf, ";TIME:", fileprop.time);
+      Get_Value(buf, ";Filament used:", fileprop.filament);
+      Get_Value(buf, ";Layer height:", fileprop.layer);
+      Get_Value(buf, ";MINX:", tmp);
+      Get_Value(buf, ";MAXX:", fileprop.width);
+      fileprop.width -= tmp;
+      tmp = 0;
+      Get_Value(buf, ";MINY:", tmp);
+      Get_Value(buf, ";MAXY:", fileprop.length);
+      fileprop.length -= tmp;
+      tmp = 0;
+      Get_Value(buf, ";MINZ:", tmp);
+      Get_Value(buf, ";MAXZ:", fileprop.height);
+      fileprop.height -= tmp;
+      posptr = strstr(buf, tbstart);
+      if (posptr != NULL) {
+        fileprop.thumbstart = indx + (posptr - &buf[0]);
+      }
+      else {
+        indx += _MAX(10, nbyte - (signed)strlen(tbstart));
+        card.setIndex(indx);
+      }
+    }
+  }
+
+  if (!fileprop.thumbstart) {
+    card.closefile();
+    LCD_MESSAGE_F("Thumbnail not found");
+    return 0;
+  }
+
+  // Get the size of the thumbnail
+  card.setIndex(fileprop.thumbstart + strlen(tbstart));
+  for (uint8_t i = 0; i < 16; i++) {
+    char c = card.get();
+    if (!ISEOL(c)) {
+      buf[i] = c;
+    }
+    else {
+      buf[i] = 0;
+      break;
+    }
+  }
+  fileprop.thumbsize = atoi(buf);
+
+  // Exit if there isn't a thumbnail
+  if (!fileprop.thumbsize) {
+    card.closefile();
+    LCD_MESSAGE_F("Invalid Thumbnail Size");
+    return 0;
+  }
+
+  uint16_t readed = 0;
+  uint8_t buf64[fileprop.thumbsize];
+
+  fileprop.thumbdata = new uint8_t[3 + 3 * (fileprop.thumbsize / 4)];  // Reserve space for the JPEG thumbnail
+
+  while (readed < fileprop.thumbsize) {
+    uint8_t c = card.get();
+    if (!ISEOL(c) && (c != ';') && (c != ' ')) {
+      buf64[readed] = c;
+      readed++;
+    }
+  }
+  card.closefile();
+  buf64[readed] = 0;
+
+  fileprop.thumbsize = decode_base64(buf64, fileprop.thumbdata);  card.closefile();
+  DWINUI::WriteToSRAM(0x00, fileprop.thumbsize, fileprop.thumbdata);
+  delete[] fileprop.thumbdata;
+  return true;
+}
+
+void Preview_DrawFromSD() {
+  if (Has_Preview()) {
+    char buf[46];
+    char str_1[6] = "";
+    char str_2[6] = "";
+    char str_3[6] = "";
+    DWIN_Draw_Rectangle(1, HMI_data.Background_Color, 0, 0, DWIN_WIDTH, STATUS_Y - 1);
+    if (fileprop.time) {
+      sprintf_P(buf, PSTR("Estimated time: %i:%02i"), (uint16_t)fileprop.time / 3600, ((uint16_t)fileprop.time % 3600) / 60);
+      DWINUI::Draw_String(20, 10, buf);
+    }
+    if (fileprop.filament) {
+      sprintf_P(buf, PSTR("Filament used: %s m"), dtostrf(fileprop.filament, 1, 2, str_1));
+      DWINUI::Draw_String(20, 30, buf);
+    }
+    if (fileprop.layer) {
+      sprintf_P(buf, PSTR("Layer height: %s mm"), dtostrf(fileprop.layer, 1, 2, str_1));
+      DWINUI::Draw_String(20, 50, buf);
+    }
+    if (fileprop.width) {
+      sprintf_P(buf, PSTR("Volume: %sx%sx%s mm"), dtostrf(fileprop.width, 1, 1, str_1), dtostrf(fileprop.length, 1, 1, str_2), dtostrf(fileprop.height, 1, 1, str_3));
+      DWINUI::Draw_String(20, 70, buf);
+    }
+    DWINUI::Draw_Button(BTN_Print, 26, 290);
+    DWINUI::Draw_Button(BTN_Cancel, 146, 290);
+    DWIN_ICON_Show(0, 0, 1, 21, 90, 0x00);
+    Draw_Select_Highlight(true, 290);
+    DWIN_UpdateLCD();
+  }
+  else {
+    HMI_flag.select_flag = 1;
+    wait_for_user = false;
+  }
+}
+
+bool Preview_Valid() {
+  return !!fileprop.thumbstart;
+}
+
+void Preview_Reset() {
+  fileprop.thumbsize = 0;
+}
+
+#endif // HAS_GCODE_PREVIEW
