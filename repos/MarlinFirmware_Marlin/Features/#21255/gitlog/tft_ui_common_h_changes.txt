commit 1dee4d92c61b14458cd394d1f609f0dc80282092
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 4 12:09:08 2024 -0600

    üîß TOUCH_IDLE_SLEEP_MINS => DISPLAY_SLEEP_MINUTES
    
    Follow up to #26517

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index 8229ab36ab..3a67768f35 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -104,9 +104,9 @@ void disable_steppers();
   #if HAS_EXTRUDERS
     void e_select();
   #endif
-#endif
-#if HAS_TOUCH_SLEEP
-  bool lcd_sleep_task();
+  #if HAS_DISPLAY_SLEEP
+    bool lcd_sleep_task();
+  #endif
 #endif
 
 void draw_heater_status(uint16_t x, uint16_t y, const int8_t heater);

commit a0e3dea8b879aba8e0d2d7e4dc6a6447b3fe76ad
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 20 20:25:39 2023 -0500

    üö∏ ColorUI Touch Calibrate in CW order

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index 592bf3184e..8229ab36ab 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -109,7 +109,7 @@ void disable_steppers();
   bool lcd_sleep_task();
 #endif
 
-void draw_heater_status(uint16_t x, uint16_t y, const int8_t Heater);
+void draw_heater_status(uint16_t x, uint16_t y, const int8_t heater);
 void draw_fan_status(uint16_t x, uint16_t y, const bool blink);
 
 void text_line(const uint16_t y, uint16_t color=COLOR_BACKGROUND);

commit 244de2458ac6fd48f3031d0179ca1bcad6808583
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Mon Jul 17 10:53:36 2023 +0300

    üßë‚Äçüíª Improve TFT Color UI layout / theme (#26077)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index 2a81ee2114..592bf3184e 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -33,39 +33,143 @@
 #if ENABLED(TOUCH_SCREEN)
   #include "touch.h"
   extern bool draw_menu_navigation;
+#else
+  // add_control() function is used to display encoder-controlled elements
+  enum TouchControlType : uint16_t {
+    NONE = 0x0000,
+  };
 #endif
 
-#if HAS_UI_320x240
-  #include "ui_320x240.h"
-#elif HAS_UI_480x320 || HAS_UI_480x272
-  #include "ui_480x320.h"
-#elif HAS_UI_1024x600
-  #include "ui_1024x600.h"
-#else
-  #error "Unsupported display resolution!"
+#define UI_INCL_(W, H) STRINGIFY_(ui_##W##x##H.h)
+#define UI_INCL(W, H) UI_INCL_(W, H)
+
+#include "ui_theme.h"
+#include UI_INCL(TFT_WIDTH, TFT_HEIGHT)
+#include "tft_font.h"
+#include "tft_color.h"
+
+// Common Implementation
+#define Z_SELECTION_Z 1
+#define Z_SELECTION_Z_PROBE -1
+
+typedef struct {
+  #if HAS_X_AXIS
+    xy_int_t xValuePos;
+  #endif
+  #if HAS_Y_AXIS
+    xy_int_t yValuePos;
+  #endif
+  #if HAS_Z_AXIS
+    xy_int_t zValuePos, zTypePos;
+    int z_selection = Z_SELECTION_Z;
+  #endif
+  #if HAS_EXTRUDERS
+    xy_int_t eValuePos, eNamePos;
+    uint8_t e_selection = 0;
+  #endif
+  xy_int_t stepValuePos;
+  float currentStepSize = 10.0;
+  bool blocked = false;
+  char message[32];
+} motionAxisState_t;
+
+extern motionAxisState_t motionAxisState;
+
+void moveAxis(const AxisEnum axis, const int8_t direction);
+
+#if HAS_EXTRUDERS
+  inline void e_plus()  { moveAxis(E_AXIS, +1); }
+  inline void e_minus() { moveAxis(E_AXIS, -1); }
+#endif
+#if HAS_X_AXIS
+  inline void x_minus() { moveAxis(X_AXIS, -1); }
+  inline void x_plus()  { moveAxis(X_AXIS, +1); }
+#endif
+#if HAS_Y_AXIS
+  inline void y_plus()  { moveAxis(Y_AXIS, +1); }
+  inline void y_minus() { moveAxis(Y_AXIS, -1); }
+#endif
+#if HAS_Z_AXIS
+  inline void z_plus()  { moveAxis(Z_AXIS, +1); }
+  inline void z_minus() { moveAxis(Z_AXIS, -1); }
+#endif
+void quick_feedback();
+void disable_steppers();
+#if ENABLED(TOUCH_SCREEN)
+  void do_home();
+  void step_size();
+  #if HAS_BED_PROBE
+    void z_select();
+  #endif
+  #if HAS_EXTRUDERS
+    void e_select();
+  #endif
+#endif
+#if HAS_TOUCH_SLEEP
+  bool lcd_sleep_task();
 #endif
 
 void draw_heater_status(uint16_t x, uint16_t y, const int8_t Heater);
 void draw_fan_status(uint16_t x, uint16_t y, const bool blink);
 
+void text_line(const uint16_t y, uint16_t color=COLOR_BACKGROUND);
 void menu_line(const uint8_t row, uint16_t color=COLOR_BACKGROUND);
 void menu_item(const uint8_t row, bool sel = false);
 
-#if HAS_TOUCH_SLEEP
-  bool lcd_sleep_task();
+typedef void (*screenFunc_t)();
+void add_control(
+  uint16_t x, uint16_t y, TouchControlType control_type, intptr_t data, MarlinImage image, bool is_enabled=true,
+  uint16_t color_enabled=COLOR_CONTROL_ENABLED, uint16_t color_disabled=COLOR_CONTROL_DISABLED
+);
+inline void add_control(
+  uint16_t x, uint16_t y, TouchControlType control_type, MarlinImage image,
+  bool is_enabled=true, uint16_t color_enabled=COLOR_CONTROL_ENABLED, uint16_t color_disabled=COLOR_CONTROL_DISABLED
+) {
+  add_control(x, y, control_type, 0, image, is_enabled, color_enabled, color_disabled);
+}
+#if ENABLED(TOUCH_SCREEN)
+  inline void add_control(
+    uint16_t x, uint16_t y, TouchControlType control_type, screenFunc_t action, MarlinImage image, bool is_enabled=true,
+    uint16_t color_enabled=COLOR_CONTROL_ENABLED, uint16_t color_disabled=COLOR_CONTROL_DISABLED
+  ) {
+    add_control(x, y, control_type, (intptr_t)action, image, is_enabled, color_enabled, color_disabled);
+  }
+  inline void add_control(
+    uint16_t x, uint16_t y, screenFunc_t screen, MarlinImage image, bool is_enabled=true,
+    uint16_t color_enabled=COLOR_CONTROL_ENABLED, uint16_t color_disabled=COLOR_CONTROL_DISABLED
+  ) {
+    add_control(x, y, MENU_SCREEN, (intptr_t)screen, image, is_enabled, color_enabled, color_disabled);
+  }
 #endif
 
+void drawBtn(const int x, const int y, const char *label, intptr_t data, const MarlinImage btnimg, const MarlinImage img, uint16_t bgColor, const bool enabled=true);
+void drawBtn(const int x, const int y, const char *label, intptr_t data, const MarlinImage img, uint16_t bgColor, const bool enabled=true);
+inline void drawBtn(const int x, const int y, const char *label, void (*handler)(), const MarlinImage img, uint16_t bgColor, const bool enabled=true) {
+  drawBtn(x, y, label, intptr_t(handler), img, bgColor, enabled);
+}
+
+// Custom Implementation
+void drawMessage_P(PGM_P const msg);
+inline void drawMessage(FSTR_P const fmsg) { drawMessage_P(FTOP(fmsg)); }
+
+void drawAxisValue(const AxisEnum axis);
+void drawCurZSelection();
+void drawCurESelection();
+void drawCurStepValue();
+
 #define ABSOLUTE_ZERO     -273.15
 
-enum {
-  OPTITEM(HAS_EXTRUDERS, ITEM_E0)
-  OPTITEM(HAS_MULTI_HOTEND, ITEM_E1)
-  #if HOTENDS > 2
-    ITEM_E2,
-  #endif
-  OPTITEM(HAS_HEATED_BED, ITEM_BED)
-  OPTITEM(HAS_TEMP_CHAMBER, ITEM_CHAMBER)
-  OPTITEM(HAS_TEMP_COOLER, ITEM_COOLER)
-  OPTITEM(HAS_FAN, ITEM_FAN)
-  ITEMS_COUNT
-};
+#if DISABLED(CUSTOM_STATUS_SCREEN_ITEMS_ORDER)
+  enum {
+    OPTITEM(HAS_EXTRUDERS, ITEM_E0)
+    OPTITEM(HAS_MULTI_HOTEND, ITEM_E1)
+    #if HOTENDS > 2
+      ITEM_E2,
+    #endif
+    OPTITEM(HAS_HEATED_BED, ITEM_BED)
+    OPTITEM(HAS_TEMP_CHAMBER, ITEM_CHAMBER)
+    OPTITEM(HAS_TEMP_COOLER, ITEM_COOLER)
+    OPTITEM(HAS_FAN, ITEM_FAN)
+    ITEMS_COUNT
+  };
+#endif

commit 89ccede139963091768985eeb4ca5a6e3111647c
Author: Alexey D. Filimonov <alexey@filimonic.net>
Date:   Sat Apr 22 12:06:19 2023 +0300

    üé® Clean up TFT Color UI display items (#25712)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index 7329c31a52..2a81ee2114 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -57,32 +57,15 @@ void menu_item(const uint8_t row, bool sel = false);
 
 #define ABSOLUTE_ZERO     -273.15
 
-#if HAS_TEMP_CHAMBER && HAS_MULTI_HOTEND
-  #define ITEM_E0         0
-  #define ITEM_E1         1
-  #define ITEM_BED        2
-  #define ITEM_CHAMBER    3
-  #define ITEM_FAN        4
-  #define ITEMS_COUNT     5
-#elif HAS_TEMP_CHAMBER
-  #define ITEM_E0         0
-  #define ITEM_BED        1
-  #define ITEM_CHAMBER    2
-  #define ITEM_FAN        3
-  #define ITEMS_COUNT     4
-#elif HAS_TEMP_COOLER
-  #define ITEM_COOLER     0
-  #define ITEM_FAN        1
-  #define ITEMS_COUNT     2
-#elif HAS_MULTI_HOTEND
-  #define ITEM_E0         0
-  #define ITEM_E1         1
-  #define ITEM_BED        2
-  #define ITEM_FAN        3
-  #define ITEMS_COUNT     4
-#else
-  #define ITEM_E0         0
-  #define ITEM_BED        1
-  #define ITEM_FAN        2
-  #define ITEMS_COUNT     3
-#endif
+enum {
+  OPTITEM(HAS_EXTRUDERS, ITEM_E0)
+  OPTITEM(HAS_MULTI_HOTEND, ITEM_E1)
+  #if HOTENDS > 2
+    ITEM_E2,
+  #endif
+  OPTITEM(HAS_HEATED_BED, ITEM_BED)
+  OPTITEM(HAS_TEMP_CHAMBER, ITEM_CHAMBER)
+  OPTITEM(HAS_TEMP_COOLER, ITEM_COOLER)
+  OPTITEM(HAS_FAN, ITEM_FAN)
+  ITEMS_COUNT
+};

commit aa2c6387e95bdab955499627e3890561842f0a6a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 26 21:54:43 2021 -0500

    üé® Apply HAS_MULTI_HOTEND conditional

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index d3ffd4bc31..7329c31a52 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -57,7 +57,7 @@ void menu_item(const uint8_t row, bool sel = false);
 
 #define ABSOLUTE_ZERO     -273.15
 
-#if HAS_TEMP_CHAMBER && HOTENDS > 1
+#if HAS_TEMP_CHAMBER && HAS_MULTI_HOTEND
   #define ITEM_E0         0
   #define ITEM_E1         1
   #define ITEM_BED        2
@@ -74,7 +74,7 @@ void menu_item(const uint8_t row, bool sel = false);
   #define ITEM_COOLER     0
   #define ITEM_FAN        1
   #define ITEMS_COUNT     2
-#elif HOTENDS > 1
+#elif HAS_MULTI_HOTEND
   #define ITEM_E0         0
   #define ITEM_E1         1
   #define ITEM_BED        2

commit c2e4b1626f0cce82a55e8de9dc98ed9381e1d9ad
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Tue Sep 14 04:07:08 2021 +0200

    ‚ú® TFT Screen/Backlight Sleep (#22617)

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index 759712b64c..d3ffd4bc31 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -51,6 +51,10 @@ void draw_fan_status(uint16_t x, uint16_t y, const bool blink);
 void menu_line(const uint8_t row, uint16_t color=COLOR_BACKGROUND);
 void menu_item(const uint8_t row, bool sel = false);
 
+#if HAS_TOUCH_SLEEP
+  bool lcd_sleep_task();
+#endif
+
 #define ABSOLUTE_ZERO     -273.15
 
 #if HAS_TEMP_CHAMBER && HOTENDS > 1

commit 0f61d9e4dd4d4e4f27e5c688ab2c5dbd0f03af84
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Tue Sep 7 02:15:24 2021 -0500

    ‚ú® Ender-3 V2 CrealityUI Enhanced (#21942)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index 617447a181..759712b64c 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -23,7 +23,7 @@
 
 #include "../../inc/MarlinConfigPre.h"
 
-#if !HAS_LCD_MENU
+#if ENABLED(NO_LCD_MENUS)
   #error "Seriously? High resolution TFT screen without menu?"
 #endif
 

commit b483a8d652c18626d57b5a38c78fdd2caa6e91c3
Author: BigTreeTech <38851044+bigtreetech@users.noreply.github.com>
Date:   Tue Apr 6 10:40:50 2021 +0800

    BTT SKR-SE-BX (STM32H743IIT6 ARM Cortex M7) and BIQU_BX_TFT70 (#21536)

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index d43de1d43b..617447a181 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -39,6 +39,10 @@
   #include "ui_320x240.h"
 #elif HAS_UI_480x320 || HAS_UI_480x272
   #include "ui_480x320.h"
+#elif HAS_UI_1024x600
+  #include "ui_1024x600.h"
+#else
+  #error "Unsupported display resolution!"
 #endif
 
 void draw_heater_status(uint16_t x, uint16_t y, const int8_t Heater);

commit b95e548ddbcbc1c088eabc17992d0a06f82ac167
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sat Mar 6 14:13:28 2021 -0600

    Cooler (for Laser) - M143, M193 (#21255)

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
index d40e471171..d43de1d43b 100644
--- a/Marlin/src/lcd/tft/ui_common.h
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -62,6 +62,10 @@ void menu_item(const uint8_t row, bool sel = false);
   #define ITEM_CHAMBER    2
   #define ITEM_FAN        3
   #define ITEMS_COUNT     4
+#elif HAS_TEMP_COOLER
+  #define ITEM_COOLER     0
+  #define ITEM_FAN        1
+  #define ITEMS_COUNT     2
 #elif HOTENDS > 1
   #define ITEM_E0         0
   #define ITEM_E1         1

commit c12be1f98cf1efdc6fc1e66c528d5975adc6626c
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Mon Jan 25 08:44:39 2021 +0100

    Graphical TFT fixes, cleanup (#20861)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/tft/ui_common.h b/Marlin/src/lcd/tft/ui_common.h
new file mode 100644
index 0000000000..d40e471171
--- /dev/null
+++ b/Marlin/src/lcd/tft/ui_common.h
@@ -0,0 +1,76 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#include "../../inc/MarlinConfigPre.h"
+
+#if !HAS_LCD_MENU
+  #error "Seriously? High resolution TFT screen without menu?"
+#endif
+
+#include "tft.h"
+#include "tft_image.h"
+
+#if ENABLED(TOUCH_SCREEN)
+  #include "touch.h"
+  extern bool draw_menu_navigation;
+#endif
+
+#if HAS_UI_320x240
+  #include "ui_320x240.h"
+#elif HAS_UI_480x320 || HAS_UI_480x272
+  #include "ui_480x320.h"
+#endif
+
+void draw_heater_status(uint16_t x, uint16_t y, const int8_t Heater);
+void draw_fan_status(uint16_t x, uint16_t y, const bool blink);
+
+void menu_line(const uint8_t row, uint16_t color=COLOR_BACKGROUND);
+void menu_item(const uint8_t row, bool sel = false);
+
+#define ABSOLUTE_ZERO     -273.15
+
+#if HAS_TEMP_CHAMBER && HOTENDS > 1
+  #define ITEM_E0         0
+  #define ITEM_E1         1
+  #define ITEM_BED        2
+  #define ITEM_CHAMBER    3
+  #define ITEM_FAN        4
+  #define ITEMS_COUNT     5
+#elif HAS_TEMP_CHAMBER
+  #define ITEM_E0         0
+  #define ITEM_BED        1
+  #define ITEM_CHAMBER    2
+  #define ITEM_FAN        3
+  #define ITEMS_COUNT     4
+#elif HOTENDS > 1
+  #define ITEM_E0         0
+  #define ITEM_E1         1
+  #define ITEM_BED        2
+  #define ITEM_FAN        3
+  #define ITEMS_COUNT     4
+#else
+  #define ITEM_E0         0
+  #define ITEM_BED        1
+  #define ITEM_FAN        2
+  #define ITEMS_COUNT     3
+#endif
