commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index e655663a73..7264a26539 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -650,7 +650,7 @@
     #endif
   #endif
 
-#elif EITHER(HAS_MULTI_EXTRUDER, MIXING_EXTRUDER)
+#elif ANY(HAS_MULTI_EXTRUDER, MIXING_EXTRUDER)
 
   #undef _E1_PINS
   #define _E1_PINS E1_STEP_PIN, E1_DIR_PIN, E1_ENABLE_PIN, _E1_CS _E1_MS1 _E1_MS2 _E1_MS3

commit d52d26b4ef55ebb7ebc56ce5c712e4914f3aeb2a
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed May 10 08:37:34 2023 +1200

    üîß Update multi-stepper axis conditionals (#25798)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index b7b5195a89..e655663a73 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -785,7 +785,7 @@
   #define _X2_PINS
 #endif
 
-#if HAS_DUAL_Y_STEPPERS
+#if HAS_Y2_STEPPER
   #if PIN_EXISTS(Y2_CS) && AXIS_HAS_SPI(Y2)
     #define _Y2_CS Y2_CS_PIN,
   #else

commit 1f9bfc5c7491d802d242623f8253b1f52c0917a3
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed May 10 06:59:25 2023 +1200

    üö∏ Optional X-Axis (#25418)
    
    Co-authored-by: alextrical <35117191+alextrical@users.noreply.github.com>
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index abccac9dad..b7b5195a89 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -24,44 +24,51 @@
 //
 // Prepare a list of protected pins for M42/M43
 //
+#if HAS_X_AXIS
+
+  #if PIN_EXISTS(X_MIN)
+    #define _X_MIN X_MIN_PIN,
+  #else
+    #define _X_MIN
+  #endif
+  #if PIN_EXISTS(X_MAX)
+    #define _X_MAX X_MAX_PIN,
+  #else
+    #define _X_MAX
+  #endif
+  #if PIN_EXISTS(X_CS) && AXIS_HAS_SPI(X)
+    #define _X_CS X_CS_PIN,
+  #else
+    #define _X_CS
+  #endif
+  #if PIN_EXISTS(X_MS1)
+    #define _X_MS1 X_MS1_PIN,
+  #else
+    #define _X_MS1
+  #endif
+  #if PIN_EXISTS(X_MS2)
+    #define _X_MS2 X_MS2_PIN,
+  #else
+    #define _X_MS2
+  #endif
+  #if PIN_EXISTS(X_MS3)
+    #define _X_MS3 X_MS3_PIN,
+  #else
+    #define _X_MS3
+  #endif
+  #if PIN_EXISTS(X_ENABLE)
+    #define _X_ENABLE_PIN X_ENABLE_PIN,
+  #else
+    #define _X_ENABLE_PIN
+  #endif
+
+  #define _X_PINS X_STEP_PIN, X_DIR_PIN, _X_ENABLE_PIN _X_MIN _X_MAX _X_MS1 _X_MS2 _X_MS3 _X_CS
 
-#if PIN_EXISTS(X_MIN)
-  #define _X_MIN X_MIN_PIN,
-#else
-  #define _X_MIN
-#endif
-#if PIN_EXISTS(X_MAX)
-  #define _X_MAX X_MAX_PIN,
-#else
-  #define _X_MAX
-#endif
-#if PIN_EXISTS(X_CS) && AXIS_HAS_SPI(X)
-  #define _X_CS X_CS_PIN,
-#else
-  #define _X_CS
-#endif
-#if PIN_EXISTS(X_MS1)
-  #define _X_MS1 X_MS1_PIN,
-#else
-  #define _X_MS1
-#endif
-#if PIN_EXISTS(X_MS2)
-  #define _X_MS2 X_MS2_PIN,
-#else
-  #define _X_MS2
-#endif
-#if PIN_EXISTS(X_MS3)
-  #define _X_MS3 X_MS3_PIN,
-#else
-  #define _X_MS3
-#endif
-#if PIN_EXISTS(X_ENABLE)
-  #define _X_ENABLE_PIN X_ENABLE_PIN,
 #else
-  #define _X_ENABLE_PIN
-#endif
 
-#define _X_PINS X_STEP_PIN, X_DIR_PIN, _X_ENABLE_PIN _X_MIN _X_MAX _X_MS1 _X_MS2 _X_MS3 _X_CS
+  #define _X_PINS
+
+#endif
 
 #if HAS_Y_AXIS
 

commit 2e4bf0ab9b2b4db545665bf976d2e0738c237b80
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 25 18:20:14 2023 -0500

    üé® Rename FAN_PIN to FAN0_PIN (#25568)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 288bcc904e..abccac9dad 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -899,8 +899,8 @@
   #define _Z_PROBE
 #endif
 
-#if PIN_EXISTS(FAN)
-  #define _FAN0 FAN_PIN,
+#if PIN_EXISTS(FAN0)
+  #define _FAN0 FAN0_PIN,
 #else
   #define _FAN0
 #endif

commit e977232735abd759678e8665759dbc214df88202
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Sat Mar 4 05:43:20 2023 +0300

    ‚ú® Switching extruder/nozzle without servo (e.g., Dondolo) (#24553)
    
    Co-authored-by: Anson Liu <ansonl@users.noreply.github.com>

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 061e27faf4..288bcc904e 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -419,7 +419,7 @@
 
 // Mixing stepper, Switching stepper, or regular stepper
 #define E_NEEDED(N) (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > N) \
-                 || (ENABLED(SWITCHING_EXTRUDER) && E_STEPPERS > N) \
+                 || (HAS_SWITCHING_EXTRUDER && E_STEPPERS > N) \
                  || (NONE(SWITCHING_EXTRUDER, MIXING_EXTRUDER) && EXTRUDERS > N)
 
 #define _E0_CS
@@ -632,7 +632,7 @@
   #define _E0_PINS E0_STEP_PIN, E0_DIR_PIN, E0_ENABLE_PIN, _E0_CS _E0_MS1 _E0_MS2 _E0_MS3
 #endif
 
-#if ENABLED(SWITCHING_EXTRUDER)
+#if HAS_SWITCHING_EXTRUDER
                       // Tools 0 and 1 use E0
   #if EXTRUDERS > 2   // Tools 2 and 3 use E1
     #undef _E1_PINS

commit df40181357b08761766067ef5012b2b3d0e34d3e
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed May 4 17:25:02 2022 -0700

    üí• Num Axes and Multi-Stepper based on Driver Types (#24120)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index db6cb2353b..061e27faf4 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -778,7 +778,7 @@
   #define _X2_PINS
 #endif
 
-#if ENABLED(Y_DUAL_STEPPER_DRIVERS)
+#if HAS_DUAL_Y_STEPPERS
   #if PIN_EXISTS(Y2_CS) && AXIS_HAS_SPI(Y2)
     #define _Y2_CS Y2_CS_PIN,
   #else
@@ -804,7 +804,7 @@
   #define _Y2_PINS
 #endif
 
-#if NUM_Z_STEPPER_DRIVERS >= 2
+#if NUM_Z_STEPPERS >= 2
   #if PIN_EXISTS(Z2_CS) && AXIS_HAS_SPI(Z2)
     #define _Z2_CS Z2_CS_PIN,
   #else
@@ -830,7 +830,7 @@
   #define _Z2_PINS
 #endif
 
-#if NUM_Z_STEPPER_DRIVERS >= 3
+#if NUM_Z_STEPPERS >= 3
   #if PIN_EXISTS(Z3_CS) && AXIS_HAS_SPI(Z3)
     #define _Z3_CS Z3_CS_PIN,
   #else
@@ -856,7 +856,7 @@
   #define _Z3_PINS
 #endif
 
-#if NUM_Z_STEPPER_DRIVERS >= 4
+#if NUM_Z_STEPPERS >= 4
   #if PIN_EXISTS(Z4_CS) && AXIS_HAS_SPI(Z4)
     #define _Z4_CS Z4_CS_PIN,
   #else

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index f9911cc863..db6cb2353b 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -293,6 +293,126 @@
 
 #endif
 
+#if HAS_U_AXIS
+  #if PIN_EXISTS(U_MIN)
+    #define _U_MIN U_MIN_PIN,
+  #else
+    #define _U_MIN
+  #endif
+  #if PIN_EXISTS(U_MAX)
+    #define _U_MAX U_MAX_PIN,
+  #else
+    #define _U_MAX
+  #endif
+  #if PIN_EXISTS(U_CS) && AXIS_HAS_SPI(U)
+    #define _U_CS U_CS_PIN,
+  #else
+    #define _U_CS
+  #endif
+  #if PIN_EXISTS(U_MS1)
+    #define _U_MS1 U_MS1_PIN,
+  #else
+    #define _U_MS1
+  #endif
+  #if PIN_EXISTS(U_MS2)
+    #define _U_MS2 U_MS2_PIN,
+  #else
+    #define _U_MS2
+  #endif
+  #if PIN_EXISTS(U_MS3)
+    #define _U_MS3 U_MS3_PIN,
+  #else
+    #define _U_MS3
+  #endif
+
+  #define _U_PINS U_STEP_PIN, U_DIR_PIN, U_ENABLE_PIN, _U_MIN _U_MAX _U_MS1 _U_MS2 _U_MS3 _U_CS
+
+#else
+
+  #define _U_PINS
+
+#endif
+
+#if HAS_V_AXIS
+  #if PIN_EXISTS(V_MIN)
+    #define _V_MIN V_MIN_PIN,
+  #else
+    #define _V_MIN
+  #endif
+  #if PIN_EXISTS(V_MAX)
+    #define _V_MAX V_MAX_PIN,
+  #else
+    #define _V_MAX
+  #endif
+  #if PIN_EXISTS(V_CS) && AXIS_HAS_SPI(V)
+    #define _V_CS V_CS_PIN,
+  #else
+    #define _V_CS
+  #endif
+  #if PIN_EXISTS(V_MS1)
+    #define _V_MS1 V_MS1_PIN,
+  #else
+    #define _V_MS1
+  #endif
+  #if PIN_EXISTS(V_MS2)
+    #define _V_MS2 V_MS2_PIN,
+  #else
+    #define _V_MS2
+  #endif
+  #if PIN_EXISTS(V_MS3)
+    #define _V_MS3 V_MS3_PIN,
+  #else
+    #define _V_MS3
+  #endif
+
+  #define _V_PINS V_STEP_PIN, V_DIR_PIN, V_ENABLE_PIN, _V_MIN _V_MAX _V_MS1 _V_MS2 _V_MS3 _V_CS
+
+#else
+
+  #define _V_PINS
+
+#endif
+
+#if HAS_W_AXIS
+  #if PIN_EXISTS(W_MIN)
+    #define _W_MIN W_MIN_PIN,
+  #else
+    #define _W_MIN
+  #endif
+  #if PIN_EXISTS(W_MAX)
+    #define _W_MAX W_MAX_PIN,
+  #else
+    #define _W_MAX
+  #endif
+  #if PIN_EXISTS(W_CS) && AXIS_HAS_SPI(W)
+    #define _W_CS W_CS_PIN,
+  #else
+    #define _W_CS
+  #endif
+  #if PIN_EXISTS(W_MS1)
+    #define _W_MS1 W_MS1_PIN,
+  #else
+    #define _W_MS1
+  #endif
+  #if PIN_EXISTS(W_MS2)
+    #define _W_MS2 W_MS2_PIN,
+  #else
+    #define _W_MS2
+  #endif
+  #if PIN_EXISTS(W_MS3)
+    #define _W_MS3 W_MS3_PIN,
+  #else
+    #define _W_MS3
+  #endif
+
+  #define _W_PINS W_STEP_PIN, W_DIR_PIN, W_ENABLE_PIN, _W_MIN _W_MAX _W_MS1 _W_MS2 _W_MS3 _W_CS
+
+#else
+
+  #define _W_PINS
+
+#endif
+
 //
 // Extruder Chip Select, Digital Micro-steps
 //
@@ -886,7 +1006,7 @@
 #endif
 
 #define SENSITIVE_PINS \
-  _X_PINS _Y_PINS _Z_PINS _I_PINS _J_PINS _K_PINS \
+  _X_PINS _Y_PINS _Z_PINS _I_PINS _J_PINS _K_PINS _U_PINS _V_PINS _W_PINS \
   _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS _Z_PROBE \
   _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _E6_PINS _E7_PINS \
   _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS _H6_PINS _H7_PINS \

commit e65c12cf96a226019a7456099078ee5cb03f9a49
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 2 09:22:36 2022 -0600

    üßë‚Äçüíª Apply axis conditionals

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 5f2bd0467e..f9911cc863 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -155,7 +155,7 @@
 
 #endif
 
-#if LINEAR_AXES >= 4
+#if HAS_I_AXIS
 
   #if PIN_EXISTS(I_MIN)
     #define _I_MIN I_MIN_PIN,
@@ -201,7 +201,7 @@
 
 #endif
 
-#if LINEAR_AXES >= 5
+#if HAS_J_AXIS
 
   #if PIN_EXISTS(J_MIN)
     #define _J_MIN J_MIN_PIN,
@@ -247,7 +247,7 @@
 
 #endif
 
-#if LINEAR_AXES >= 6
+#if HAS_K_AXIS
 
   #if PIN_EXISTS(K_MIN)
     #define _K_MIN K_MIN_PIN,

commit 8e4953514c893410c402ba6486f86580385effd9
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Oct 12 23:19:05 2021 -0400

    ‚ö°Ô∏è Formbot ST7920 delays, intentional X2 pins (#22915)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 7ccb0339b2..5f2bd0467e 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -632,7 +632,7 @@
 // Chip Select and Digital Micro-stepping
 //
 
-#if EITHER(DUAL_X_CARRIAGE, X_DUAL_STEPPER_DRIVERS)
+#if HAS_X2_STEPPER
   #if PIN_EXISTS(X2_CS) && AXIS_HAS_SPI(X2)
     #define _X2_CS X2_CS_PIN,
   #else

commit 44c41ce54f2c8f8c89464e570b91dd6bbddce125
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jun 20 22:49:57 2021 -0500

    üêõ Fix compact sensitive pins array (#22184)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 9102bbab7b..7ccb0339b2 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -882,7 +882,7 @@
 
   // Remove -2 from the front, emit the rest, cease propagation
   template<pin_t ...D>
-  struct OnlyPins<_SP_END, D...> { static constexpr pin_t table[sizeof...(D)] PROGMEM = { D... }; };
+  struct OnlyPins<_SP_END, D...> { static constexpr size_t size = sizeof...(D); static constexpr pin_t table[sizeof...(D)] PROGMEM = { D... }; };
 #endif
 
 #define SENSITIVE_PINS \

commit 77496c8235dab5182312652b4dc0b6d0f182cf30
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 8 19:55:27 2021 -0500

    ‚ö°Ô∏è Optimize Sensitive Pins array (except STM32) (#22080)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index e304901940..9102bbab7b 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -187,8 +187,13 @@
   #else
     #define _I_MS3
   #endif
+  #if PIN_EXISTS(I_ENABLE)
+    #define _I_ENABLE_PIN I_ENABLE_PIN,
+  #else
+    #define _I_ENABLE_PIN
+  #endif
 
-  #define _I_PINS I_STEP_PIN, I_DIR_PIN, I_ENABLE_PIN, _I_MIN _I_MAX _I_MS1 _I_MS2 _I_MS3 _I_CS
+  #define _I_PINS I_STEP_PIN, I_DIR_PIN, _I_ENABLE_PIN _I_MIN _I_MAX _I_MS1 _I_MS2 _I_MS3 _I_CS
 
 #else
 
@@ -228,8 +233,13 @@
   #else
     #define _J_MS3
   #endif
+  #if PIN_EXISTS(J_ENABLE)
+    #define _J_ENABLE_PIN J_ENABLE_PIN,
+  #else
+    #define _J_ENABLE_PIN
+  #endif
 
-  #define _J_PINS J_STEP_PIN, J_DIR_PIN, J_ENABLE_PIN, _J_MIN _J_MAX _J_MS1 _J_MS2 _J_MS3 _J_CS
+  #define _J_PINS J_STEP_PIN, J_DIR_PIN, _J_ENABLE_PIN _J_MIN _J_MAX _J_MS1 _J_MS2 _J_MS3 _J_CS
 
 #else
 
@@ -269,8 +279,13 @@
   #else
     #define _K_MS3
   #endif
+  #if PIN_EXISTS(K_ENABLE)
+    #define _K_ENABLE_PIN K_ENABLE_PIN,
+  #else
+    #define _K_ENABLE_PIN
+  #endif
 
-  #define _K_PINS K_STEP_PIN, K_DIR_PIN, K_ENABLE_PIN, _K_MIN _K_MAX _K_MS1 _K_MS2 _K_MS3 _K_CS
+  #define _K_PINS K_STEP_PIN, K_DIR_PIN, _K_ENABLE_PIN _K_MIN _K_MAX _K_MS1 _K_MS2 _K_MS3 _K_CS
 
 #else
 
@@ -577,30 +592,32 @@
 #define _H6_PINS
 #define _H7_PINS
 
+#define DIO_PIN(P) TERN(TARGET_LPC1768, P, analogInputToDigitalPin(P))
+
 #if HAS_HOTEND
   #undef _H0_PINS
-  #define _H0_PINS HEATER_0_PIN, E0_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_0_PIN),
+  #define _H0_PINS HEATER_0_PIN, E0_AUTO_FAN_PIN, DIO_PIN(TEMP_0_PIN),
   #if HAS_MULTI_HOTEND
     #undef _H1_PINS
-    #define _H1_PINS HEATER_1_PIN, E1_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_1_PIN),
+    #define _H1_PINS HEATER_1_PIN, E1_AUTO_FAN_PIN, DIO_PIN(TEMP_1_PIN),
     #if HOTENDS > 2
       #undef _H2_PINS
-      #define _H2_PINS HEATER_2_PIN, E2_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_2_PIN),
+      #define _H2_PINS HEATER_2_PIN, E2_AUTO_FAN_PIN, DIO_PIN(TEMP_2_PIN),
       #if HOTENDS > 3
         #undef _H3_PINS
-        #define _H3_PINS HEATER_3_PIN, E3_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_3_PIN),
+        #define _H3_PINS HEATER_3_PIN, E3_AUTO_FAN_PIN, DIO_PIN(TEMP_3_PIN),
         #if HOTENDS > 4
           #undef _H4_PINS
-          #define _H4_PINS HEATER_4_PIN, E4_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_4_PIN),
+          #define _H4_PINS HEATER_4_PIN, E4_AUTO_FAN_PIN, DIO_PIN(TEMP_4_PIN),
           #if HOTENDS > 5
             #undef _H5_PINS
-            #define _H5_PINS HEATER_5_PIN, E5_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_5_PIN),
+            #define _H5_PINS HEATER_5_PIN, E5_AUTO_FAN_PIN, DIO_PIN(TEMP_5_PIN),
             #if HOTENDS > 6
               #undef _H6_PINS
-              #define _H6_PINS HEATER_6_PIN, E6_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_6_PIN),
+              #define _H6_PINS HEATER_6_PIN, E6_AUTO_FAN_PIN, DIO_PIN(TEMP_6_PIN),
               #if HOTENDS > 7
                 #undef _H7_PINS
-                #define _H7_PINS HEATER_7_PIN, E7_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_7_PIN),
+                #define _H7_PINS HEATER_7_PIN, E7_AUTO_FAN_PIN, DIO_PIN(TEMP_7_PIN),
               #endif // HOTENDS > 7
             #endif // HOTENDS > 6
           #endif // HOTENDS > 5
@@ -809,13 +826,13 @@
 #endif
 
 #if TEMP_SENSOR_BED && PINS_EXIST(TEMP_BED, HEATER_BED)
-  #define _BED_PINS HEATER_BED_PIN, analogInputToDigitalPin(TEMP_BED_PIN),
+  #define _BED_PINS HEATER_BED_PIN, DIO_PIN(TEMP_BED_PIN),
 #else
   #define _BED_PINS
 #endif
 
 #if TEMP_SENSOR_CHAMBER && PIN_EXISTS(TEMP_CHAMBER)
-  #define _CHAMBER_TEMP analogInputToDigitalPin(TEMP_CHAMBER_PIN),
+  #define _CHAMBER_TEMP DIO_PIN(TEMP_CHAMBER_PIN),
 #else
   #define _CHAMBER_TEMP
 #endif
@@ -831,17 +848,15 @@
 #endif
 
 #if TEMP_SENSOR_COOLER && PIN_EXISTS(TEMP_COOLER)
-  #define _COOLER_TEMP analogInputToDigitalPin(TEMP_COOLER_PIN),
+  #define _COOLER_TEMP DIO_PIN(TEMP_COOLER_PIN),
 #else
   #define _COOLER_TEMP
 #endif
-
 #if TEMP_SENSOR_COOLER && PIN_EXISTS(COOLER)
   #define _COOLER COOLER_PIN,
 #else
   #define _COOLER
 #endif
-
 #if TEMP_SENSOR_COOLER && PINS_EXIST(TEMP_COOLER, COOLER_AUTO_FAN)
   #define _COOLER_FAN COOLER_AUTO_FAN_PIN,
 #else
@@ -852,11 +867,30 @@
   #define HAL_SENSITIVE_PINS
 #endif
 
-#define SENSITIVE_PINS { \
+#ifdef RUNTIME_ONLY_ANALOG_TO_DIGITAL
+  #define _SP_END
+#else
+  #define _SP_END -2
+
+  // Move a regular pin in front to the end
+  template<pin_t F, pin_t ...D>
+  struct OnlyPins : OnlyPins<D..., F> { };
+
+  // Remove a -1 from the front
+  template<pin_t ...D>
+  struct OnlyPins<-1, D...> : OnlyPins<D...> { };
+
+  // Remove -2 from the front, emit the rest, cease propagation
+  template<pin_t ...D>
+  struct OnlyPins<_SP_END, D...> { static constexpr pin_t table[sizeof...(D)] PROGMEM = { D... }; };
+#endif
+
+#define SENSITIVE_PINS \
   _X_PINS _Y_PINS _Z_PINS _I_PINS _J_PINS _K_PINS \
   _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS _Z_PROBE \
   _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _E6_PINS _E7_PINS \
   _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS _H6_PINS _H7_PINS \
   _PS_ON _FAN0 _FAN1 _FAN2 _FAN3 _FAN4 _FAN5 _FAN6 _FAN7 _FANC \
-  _BED_PINS _COOLER _CHAMBER_TEMP _CHAMBER_HEATER _CHAMBER_FAN HAL_SENSITIVE_PINS \
-}
+  _BED_PINS _CHAMBER_TEMP _CHAMBER_HEATER _CHAMBER_FAN \
+  _COOLER_TEMP _COOLER _COOLER_FAN HAL_SENSITIVE_PINS \
+  _SP_END

commit ba4fa4983411d03eae791b70d8ec3e26f0781785
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sun Jun 6 08:30:39 2021 +0200

    ‚úèÔ∏è Followup to Six Linear Axes (#22056)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index de0f65c596..e304901940 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -167,7 +167,7 @@
   #else
     #define _I_MAX
   #endif
-  #if PIN_EXISTS(I_CS)
+  #if PIN_EXISTS(I_CS) && AXIS_HAS_SPI(I)
     #define _I_CS I_CS_PIN,
   #else
     #define _I_CS
@@ -208,7 +208,7 @@
   #else
     #define _J_MAX
   #endif
-  #if PIN_EXISTS(J_CS)
+  #if PIN_EXISTS(J_CS) && AXIS_HAS_SPI(J)
     #define _J_CS J_CS_PIN,
   #else
     #define _J_CS
@@ -249,7 +249,7 @@
   #else
     #define _K_MAX
   #endif
-  #if PIN_EXISTS(K_CS)
+  #if PIN_EXISTS(K_CS) && AXIS_HAS_SPI(K)
     #define _K_CS K_CS_PIN,
   #else
     #define _K_CS

commit 7726af9c5348c1c7d0fd9a56eca87d00cd75fee6
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Jun 5 09:18:47 2021 +0200

    üèóÔ∏è Support for up to 6 linear axes (#19112)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 21ba87e8f6..de0f65c596 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -63,81 +63,220 @@
 
 #define _X_PINS X_STEP_PIN, X_DIR_PIN, _X_ENABLE_PIN _X_MIN _X_MAX _X_MS1 _X_MS2 _X_MS3 _X_CS
 
-#if PIN_EXISTS(Y_MIN)
-  #define _Y_MIN Y_MIN_PIN,
-#else
-  #define _Y_MIN
-#endif
-#if PIN_EXISTS(Y_MAX)
-  #define _Y_MAX Y_MAX_PIN,
-#else
-  #define _Y_MAX
-#endif
-#if PIN_EXISTS(Y_CS) && AXIS_HAS_SPI(Y)
-  #define _Y_CS Y_CS_PIN,
-#else
-  #define _Y_CS
-#endif
-#if PIN_EXISTS(Y_MS1)
-  #define _Y_MS1 Y_MS1_PIN,
-#else
-  #define _Y_MS1
-#endif
-#if PIN_EXISTS(Y_MS2)
-  #define _Y_MS2 Y_MS2_PIN,
-#else
-  #define _Y_MS2
-#endif
-#if PIN_EXISTS(Y_MS3)
-  #define _Y_MS3 Y_MS3_PIN,
-#else
-  #define _Y_MS3
-#endif
-#if PIN_EXISTS(Y_ENABLE)
-  #define _Y_ENABLE_PIN Y_ENABLE_PIN,
-#else
-  #define _Y_ENABLE_PIN
-#endif
+#if HAS_Y_AXIS
 
-#define _Y_PINS Y_STEP_PIN, Y_DIR_PIN, _Y_ENABLE_PIN _Y_MIN _Y_MAX _Y_MS1 _Y_MS2 _Y_MS3 _Y_CS
+  #if PIN_EXISTS(Y_MIN)
+    #define _Y_MIN Y_MIN_PIN,
+  #else
+    #define _Y_MIN
+  #endif
+  #if PIN_EXISTS(Y_MAX)
+    #define _Y_MAX Y_MAX_PIN,
+  #else
+    #define _Y_MAX
+  #endif
+  #if PIN_EXISTS(Y_CS) && AXIS_HAS_SPI(Y)
+    #define _Y_CS Y_CS_PIN,
+  #else
+    #define _Y_CS
+  #endif
+  #if PIN_EXISTS(Y_MS1)
+    #define _Y_MS1 Y_MS1_PIN,
+  #else
+    #define _Y_MS1
+  #endif
+  #if PIN_EXISTS(Y_MS2)
+    #define _Y_MS2 Y_MS2_PIN,
+  #else
+    #define _Y_MS2
+  #endif
+  #if PIN_EXISTS(Y_MS3)
+    #define _Y_MS3 Y_MS3_PIN,
+  #else
+    #define _Y_MS3
+  #endif
+  #if PIN_EXISTS(Y_ENABLE)
+    #define _Y_ENABLE_PIN Y_ENABLE_PIN,
+  #else
+    #define _Y_ENABLE_PIN
+  #endif
+
+  #define _Y_PINS Y_STEP_PIN, Y_DIR_PIN, _Y_ENABLE_PIN _Y_MIN _Y_MAX _Y_MS1 _Y_MS2 _Y_MS3 _Y_CS
 
-#if PIN_EXISTS(Z_MIN)
-  #define _Z_MIN Z_MIN_PIN,
-#else
-  #define _Z_MIN
-#endif
-#if PIN_EXISTS(Z_MAX)
-  #define _Z_MAX Z_MAX_PIN,
-#else
-  #define _Z_MAX
-#endif
-#if PIN_EXISTS(Z_CS) && AXIS_HAS_SPI(Z)
-  #define _Z_CS Z_CS_PIN,
 #else
-  #define _Z_CS
+
+  #define _Y_PINS
+
 #endif
-#if PIN_EXISTS(Z_MS1)
-  #define _Z_MS1 Z_MS1_PIN,
+
+#if HAS_Z_AXIS
+
+  #if PIN_EXISTS(Z_MIN)
+    #define _Z_MIN Z_MIN_PIN,
+  #else
+    #define _Z_MIN
+  #endif
+  #if PIN_EXISTS(Z_MAX)
+    #define _Z_MAX Z_MAX_PIN,
+  #else
+    #define _Z_MAX
+  #endif
+  #if PIN_EXISTS(Z_CS) && AXIS_HAS_SPI(Z)
+    #define _Z_CS Z_CS_PIN,
+  #else
+    #define _Z_CS
+  #endif
+  #if PIN_EXISTS(Z_MS1)
+    #define _Z_MS1 Z_MS1_PIN,
+  #else
+    #define _Z_MS1
+  #endif
+  #if PIN_EXISTS(Z_MS2)
+    #define _Z_MS2 Z_MS2_PIN,
+  #else
+    #define _Z_MS2
+  #endif
+  #if PIN_EXISTS(Z_MS3)
+    #define _Z_MS3 Z_MS3_PIN,
+  #else
+    #define _Z_MS3
+  #endif
+  #if PIN_EXISTS(Z_ENABLE)
+    #define _Z_ENABLE_PIN Z_ENABLE_PIN,
+  #else
+    #define _Z_ENABLE_PIN
+  #endif
+
+  #define _Z_PINS Z_STEP_PIN, Z_DIR_PIN, _Z_ENABLE_PIN _Z_MIN _Z_MAX _Z_MS1 _Z_MS2 _Z_MS3 _Z_CS
+
 #else
-  #define _Z_MS1
+
+  #define _Z_PINS
+
 #endif
-#if PIN_EXISTS(Z_MS2)
-  #define _Z_MS2 Z_MS2_PIN,
+
+#if LINEAR_AXES >= 4
+
+  #if PIN_EXISTS(I_MIN)
+    #define _I_MIN I_MIN_PIN,
+  #else
+    #define _I_MIN
+  #endif
+  #if PIN_EXISTS(I_MAX)
+    #define _I_MAX I_MAX_PIN,
+  #else
+    #define _I_MAX
+  #endif
+  #if PIN_EXISTS(I_CS)
+    #define _I_CS I_CS_PIN,
+  #else
+    #define _I_CS
+  #endif
+  #if PIN_EXISTS(I_MS1)
+    #define _I_MS1 I_MS1_PIN,
+  #else
+    #define _I_MS1
+  #endif
+  #if PIN_EXISTS(I_MS2)
+    #define _I_MS2 I_MS2_PIN,
+  #else
+    #define _I_MS2
+  #endif
+  #if PIN_EXISTS(I_MS3)
+    #define _I_MS3 I_MS3_PIN,
+  #else
+    #define _I_MS3
+  #endif
+
+  #define _I_PINS I_STEP_PIN, I_DIR_PIN, I_ENABLE_PIN, _I_MIN _I_MAX _I_MS1 _I_MS2 _I_MS3 _I_CS
+
 #else
-  #define _Z_MS2
+
+  #define _I_PINS
+
 #endif
-#if PIN_EXISTS(Z_MS3)
-  #define _Z_MS3 Z_MS3_PIN,
+
+#if LINEAR_AXES >= 5
+
+  #if PIN_EXISTS(J_MIN)
+    #define _J_MIN J_MIN_PIN,
+  #else
+    #define _J_MIN
+  #endif
+  #if PIN_EXISTS(J_MAX)
+    #define _J_MAX J_MAX_PIN,
+  #else
+    #define _J_MAX
+  #endif
+  #if PIN_EXISTS(J_CS)
+    #define _J_CS J_CS_PIN,
+  #else
+    #define _J_CS
+  #endif
+  #if PIN_EXISTS(J_MS1)
+    #define _J_MS1 J_MS1_PIN,
+  #else
+    #define _J_MS1
+  #endif
+  #if PIN_EXISTS(J_MS2)
+    #define _J_MS2 J_MS2_PIN,
+  #else
+    #define _J_MS2
+  #endif
+  #if PIN_EXISTS(J_MS3)
+    #define _J_MS3 J_MS3_PIN,
+  #else
+    #define _J_MS3
+  #endif
+
+  #define _J_PINS J_STEP_PIN, J_DIR_PIN, J_ENABLE_PIN, _J_MIN _J_MAX _J_MS1 _J_MS2 _J_MS3 _J_CS
+
 #else
-  #define _Z_MS3
+
+  #define _J_PINS
+
 #endif
-#if PIN_EXISTS(Z_ENABLE)
-  #define _Z_ENABLE_PIN Z_ENABLE_PIN,
+
+#if LINEAR_AXES >= 6
+
+  #if PIN_EXISTS(K_MIN)
+    #define _K_MIN K_MIN_PIN,
+  #else
+    #define _K_MIN
+  #endif
+  #if PIN_EXISTS(K_MAX)
+    #define _K_MAX K_MAX_PIN,
+  #else
+    #define _K_MAX
+  #endif
+  #if PIN_EXISTS(K_CS)
+    #define _K_CS K_CS_PIN,
+  #else
+    #define _K_CS
+  #endif
+  #if PIN_EXISTS(K_MS1)
+    #define _K_MS1 K_MS1_PIN,
+  #else
+    #define _K_MS1
+  #endif
+  #if PIN_EXISTS(K_MS2)
+    #define _K_MS2 K_MS2_PIN,
+  #else
+    #define _K_MS2
+  #endif
+  #if PIN_EXISTS(K_MS3)
+    #define _K_MS3 K_MS3_PIN,
+  #else
+    #define _K_MS3
+  #endif
+
+  #define _K_PINS K_STEP_PIN, K_DIR_PIN, K_ENABLE_PIN, _K_MIN _K_MAX _K_MS1 _K_MS2 _K_MS3 _K_CS
+
 #else
-  #define _Z_ENABLE_PIN
-#endif
 
-#define _Z_PINS Z_STEP_PIN, Z_DIR_PIN, _Z_ENABLE_PIN _Z_MIN _Z_MAX _Z_MS1 _Z_MS2 _Z_MS3 _Z_CS
+  #define _K_PINS
+
+#endif
 
 //
 // Extruder Chip Select, Digital Micro-steps
@@ -714,7 +853,8 @@
 #endif
 
 #define SENSITIVE_PINS { \
-  _X_PINS _Y_PINS _Z_PINS _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS _Z_PROBE \
+  _X_PINS _Y_PINS _Z_PINS _I_PINS _J_PINS _K_PINS \
+  _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS _Z_PROBE \
   _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _E6_PINS _E7_PINS \
   _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS _H6_PINS _H7_PINS \
   _PS_ON _FAN0 _FAN1 _FAN2 _FAN3 _FAN4 _FAN5 _FAN6 _FAN7 _FANC \

commit 2de54dab84d82ef69fb9ac3bd9025444f4f84813
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 21 08:23:09 2021 -0500

    üé® Move HAS_EXTRUDERS

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 1c811601ca..21ba87e8f6 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -353,7 +353,7 @@
 #define _E6_PINS
 #define _E7_PINS
 
-#if EXTRUDERS
+#if HAS_EXTRUDERS
   #undef _E0_PINS
   #define _E0_PINS E0_STEP_PIN, E0_DIR_PIN, E0_ENABLE_PIN, _E0_CS _E0_MS1 _E0_MS2 _E0_MS3
 #endif

commit 857976b29fbb327ee26d8fe335f457b92a54501a
Author: hannesweisbach <hannesweisbach@users.noreply.github.com>
Date:   Thu May 6 03:13:21 2021 +0200

    Allow undefined [XYZ]_ENABLE_PIN (for sensitive pins) (#21801)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index b8be00bddd..1c811601ca 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -55,8 +55,13 @@
 #else
   #define _X_MS3
 #endif
+#if PIN_EXISTS(X_ENABLE)
+  #define _X_ENABLE_PIN X_ENABLE_PIN,
+#else
+  #define _X_ENABLE_PIN
+#endif
 
-#define _X_PINS X_STEP_PIN, X_DIR_PIN, X_ENABLE_PIN, _X_MIN _X_MAX _X_MS1 _X_MS2 _X_MS3 _X_CS
+#define _X_PINS X_STEP_PIN, X_DIR_PIN, _X_ENABLE_PIN _X_MIN _X_MAX _X_MS1 _X_MS2 _X_MS3 _X_CS
 
 #if PIN_EXISTS(Y_MIN)
   #define _Y_MIN Y_MIN_PIN,
@@ -88,8 +93,13 @@
 #else
   #define _Y_MS3
 #endif
+#if PIN_EXISTS(Y_ENABLE)
+  #define _Y_ENABLE_PIN Y_ENABLE_PIN,
+#else
+  #define _Y_ENABLE_PIN
+#endif
 
-#define _Y_PINS Y_STEP_PIN, Y_DIR_PIN, Y_ENABLE_PIN, _Y_MIN _Y_MAX _Y_MS1 _Y_MS2 _Y_MS3 _Y_CS
+#define _Y_PINS Y_STEP_PIN, Y_DIR_PIN, _Y_ENABLE_PIN _Y_MIN _Y_MAX _Y_MS1 _Y_MS2 _Y_MS3 _Y_CS
 
 #if PIN_EXISTS(Z_MIN)
   #define _Z_MIN Z_MIN_PIN,
@@ -121,8 +131,13 @@
 #else
   #define _Z_MS3
 #endif
+#if PIN_EXISTS(Z_ENABLE)
+  #define _Z_ENABLE_PIN Z_ENABLE_PIN,
+#else
+  #define _Z_ENABLE_PIN
+#endif
 
-#define _Z_PINS Z_STEP_PIN, Z_DIR_PIN, Z_ENABLE_PIN, _Z_MIN _Z_MAX _Z_MS1 _Z_MS2 _Z_MS3 _Z_CS
+#define _Z_PINS Z_STEP_PIN, Z_DIR_PIN, _Z_ENABLE_PIN _Z_MIN _Z_MAX _Z_MS1 _Z_MS2 _Z_MS3 _Z_CS
 
 //
 // Extruder Chip Select, Digital Micro-steps

commit b95e548ddbcbc1c088eabc17992d0a06f82ac167
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sat Mar 6 14:13:28 2021 -0600

    Cooler (for Laser) - M143, M193 (#21255)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index d7eb187245..b8be00bddd 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -676,6 +676,24 @@
   #define _CHAMBER_FAN
 #endif
 
+#if TEMP_SENSOR_COOLER && PIN_EXISTS(TEMP_COOLER)
+  #define _COOLER_TEMP analogInputToDigitalPin(TEMP_COOLER_PIN),
+#else
+  #define _COOLER_TEMP
+#endif
+
+#if TEMP_SENSOR_COOLER && PIN_EXISTS(COOLER)
+  #define _COOLER COOLER_PIN,
+#else
+  #define _COOLER
+#endif
+
+#if TEMP_SENSOR_COOLER && PINS_EXIST(TEMP_COOLER, COOLER_AUTO_FAN)
+  #define _COOLER_FAN COOLER_AUTO_FAN_PIN,
+#else
+  #define _COOLER_FAN
+#endif
+
 #ifndef HAL_SENSITIVE_PINS
   #define HAL_SENSITIVE_PINS
 #endif
@@ -685,5 +703,5 @@
   _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _E6_PINS _E7_PINS \
   _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS _H6_PINS _H7_PINS \
   _PS_ON _FAN0 _FAN1 _FAN2 _FAN3 _FAN4 _FAN5 _FAN6 _FAN7 _FANC \
-  _BED_PINS _CHAMBER_TEMP _CHAMBER_HEATER _CHAMBER_FAN HAL_SENSITIVE_PINS \
+  _BED_PINS _COOLER _CHAMBER_TEMP _CHAMBER_HEATER _CHAMBER_FAN HAL_SENSITIVE_PINS \
 }

commit c762b7c91b03415d37bbb96c5b2b6b8308ee3ba8
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Oct 11 17:06:57 2020 -0700

    Fix various errors, warnings in example config builds (#19686)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 169f74b437..d7eb187245 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -608,12 +608,6 @@
   #define _Z_PROBE
 #endif
 
-#if TEMP_SENSOR_BED && PIN_EXISTS(HEATER_BED)
-  #define _HEATER_BED HEATER_BED_PIN,
-#else
-  #define _HEATER_BED
-#endif
-
 #if PIN_EXISTS(FAN)
   #define _FAN0 FAN_PIN,
 #else
@@ -660,21 +654,26 @@
   #define _FANC
 #endif
 
-#if PIN_EXISTS(HEATER_BED) && PIN_EXISTS(TEMP_BED)
+#if TEMP_SENSOR_BED && PINS_EXIST(TEMP_BED, HEATER_BED)
   #define _BED_PINS HEATER_BED_PIN, analogInputToDigitalPin(TEMP_BED_PIN),
 #else
   #define _BED_PINS
 #endif
 
-#if PIN_EXISTS(TEMP_CHAMBER)
-  #define __CHAMBER_PINS CHAMBER_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_CHAMBER_PIN),
+#if TEMP_SENSOR_CHAMBER && PIN_EXISTS(TEMP_CHAMBER)
+  #define _CHAMBER_TEMP analogInputToDigitalPin(TEMP_CHAMBER_PIN),
+#else
+  #define _CHAMBER_TEMP
+#endif
+#if TEMP_SENSOR_CHAMBER && PINS_EXIST(TEMP_CHAMBER, HEATER_CHAMBER)
+  #define _CHAMBER_HEATER HEATER_CHAMBER_PIN,
 #else
-  #define __CHAMBER_PINS
+  #define _CHAMBER_HEATER
 #endif
-#if PIN_EXISTS(HEATER_CHAMBER)
-  #define _CHAMBER_PINS __CHAMBER_PINS HEATER_CHAMBER_PIN,
+#if TEMP_SENSOR_CHAMBER && PINS_EXIST(TEMP_CHAMBER, CHAMBER_AUTO_FAN)
+  #define _CHAMBER_FAN CHAMBER_AUTO_FAN_PIN,
 #else
-  #define _CHAMBER_PINS
+  #define _CHAMBER_FAN
 #endif
 
 #ifndef HAL_SENSITIVE_PINS
@@ -685,6 +684,6 @@
   _X_PINS _Y_PINS _Z_PINS _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS _Z_PROBE \
   _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _E6_PINS _E7_PINS \
   _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS _H6_PINS _H7_PINS \
-  _PS_ON _HEATER_BED _FAN0 _FAN1 _FAN2 _FAN3 _FAN4 _FAN5 _FAN6 _FAN7 _FANC \
-  _BED_PINS _CHAMBER_PINS HAL_SENSITIVE_PINS \
+  _PS_ON _FAN0 _FAN1 _FAN2 _FAN3 _FAN4 _FAN5 _FAN6 _FAN7 _FANC \
+  _BED_PINS _CHAMBER_TEMP _CHAMBER_HEATER _CHAMBER_FAN HAL_SENSITIVE_PINS \
 }

commit 76d8d1742c1d4a1efe0fd6c0645d3fc656bfd0b2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 20 18:29:08 2020 -0500

    Add multi-extruder condition

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 5f61389cf9..169f74b437 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -354,7 +354,7 @@
     #endif
   #endif
 
-#elif EXTRUDERS > 1 || ENABLED(MIXING_EXTRUDER)
+#elif EITHER(HAS_MULTI_EXTRUDER, MIXING_EXTRUDER)
 
   #undef _E1_PINS
   #define _E1_PINS E1_STEP_PIN, E1_DIR_PIN, E1_ENABLE_PIN, _E1_CS _E1_MS1 _E1_MS2 _E1_MS3
@@ -383,7 +383,7 @@
     #endif // EXTRUDERS > 3 || MIXING_EXTRUDER > 3
   #endif // EXTRUDERS > 2 || MIXING_EXTRUDER > 2
 
-#endif // EXTRUDERS > 1 || MIXING_EXTRUDER
+#endif // HAS_MULTI_EXTRUDER || MIXING_EXTRUDER
 
 //
 // Heaters, Fans, Temp Sensors

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 9ca5aa1ee2..5f61389cf9 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit 15f6f53638a6778d22a17e1900fb3a9fdc92dade
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 19 23:56:55 2020 -0500

    Add HAS_HOTEND, etc.

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 12cadcbd9c..9ca5aa1ee2 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -423,10 +423,10 @@
 #define _H6_PINS
 #define _H7_PINS
 
-#if HOTENDS
+#if HAS_HOTEND
   #undef _H0_PINS
   #define _H0_PINS HEATER_0_PIN, E0_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_0_PIN),
-  #if HOTENDS > 1
+  #if HAS_MULTI_HOTEND
     #undef _H1_PINS
     #define _H1_PINS HEATER_1_PIN, E1_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_1_PIN),
     #if HOTENDS > 2
@@ -453,7 +453,7 @@
         #endif // HOTENDS > 4
       #endif // HOTENDS > 3
     #endif // HOTENDS > 2
-  #endif // HOTENDS > 1
+  #endif // HAS_MULTI_HOTEND
 #endif // HOTENDS
 
 //

commit 1c43870cecb76b67f8c7b0f260f0a685b4591bbf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 16 03:05:36 2020 -0500

    Add chamber to sensitive pins

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index f56a00b82f..12cadcbd9c 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -456,12 +456,6 @@
   #endif // HOTENDS > 1
 #endif // HOTENDS
 
-#define _BED_PINS
-#if PIN_EXISTS(HEATER_BED) && PIN_EXISTS(TEMP_BED)
-  #undef _BED_PINS
-  #define _BED_PINS HEATER_BED_PIN, analogInputToDigitalPin(TEMP_BED_PIN),
-#endif
-
 //
 // Dual X, Dual Y, Multi-Z
 // Chip Select and Digital Micro-stepping
@@ -666,14 +660,31 @@
   #define _FANC
 #endif
 
+#if PIN_EXISTS(HEATER_BED) && PIN_EXISTS(TEMP_BED)
+  #define _BED_PINS HEATER_BED_PIN, analogInputToDigitalPin(TEMP_BED_PIN),
+#else
+  #define _BED_PINS
+#endif
+
+#if PIN_EXISTS(TEMP_CHAMBER)
+  #define __CHAMBER_PINS CHAMBER_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_CHAMBER_PIN),
+#else
+  #define __CHAMBER_PINS
+#endif
+#if PIN_EXISTS(HEATER_CHAMBER)
+  #define _CHAMBER_PINS __CHAMBER_PINS HEATER_CHAMBER_PIN,
+#else
+  #define _CHAMBER_PINS
+#endif
+
 #ifndef HAL_SENSITIVE_PINS
   #define HAL_SENSITIVE_PINS
 #endif
 
 #define SENSITIVE_PINS { \
   _X_PINS _Y_PINS _Z_PINS _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS _Z_PROBE \
-  _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _E6_PINS _E7_PINS _BED_PINS \
+  _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _E6_PINS _E7_PINS \
   _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS _H6_PINS _H7_PINS \
   _PS_ON _HEATER_BED _FAN0 _FAN1 _FAN2 _FAN3 _FAN4 _FAN5 _FAN6 _FAN7 _FANC \
-  HAL_SENSITIVE_PINS \
+  _BED_PINS _CHAMBER_PINS HAL_SENSITIVE_PINS \
 }

commit 03020dd31ec3ae05135d074f4e9c07f8482f5ea0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 16 03:24:41 2020 -0500

    Use the common pattern for auto fan pins
    
    Now that pins.h is guaranteed included after configs.

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 180bc8d6f6..f56a00b82f 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -389,6 +389,31 @@
 // Heaters, Fans, Temp Sensors
 //
 
+#ifndef E0_AUTO_FAN_PIN
+  #define E0_AUTO_FAN_PIN -1
+#endif
+#ifndef E1_AUTO_FAN_PIN
+  #define E1_AUTO_FAN_PIN -1
+#endif
+#ifndef E2_AUTO_FAN_PIN
+  #define E2_AUTO_FAN_PIN -1
+#endif
+#ifndef E3_AUTO_FAN_PIN
+  #define E3_AUTO_FAN_PIN -1
+#endif
+#ifndef E4_AUTO_FAN_PIN
+  #define E4_AUTO_FAN_PIN -1
+#endif
+#ifndef E5_AUTO_FAN_PIN
+  #define E5_AUTO_FAN_PIN -1
+#endif
+#ifndef E6_AUTO_FAN_PIN
+  #define E6_AUTO_FAN_PIN -1
+#endif
+#ifndef E7_AUTO_FAN_PIN
+  #define E7_AUTO_FAN_PIN -1
+#endif
+
 #define _H0_PINS
 #define _H1_PINS
 #define _H2_PINS

commit cc822bf70fd4683a00fcf5c3ea5b5e6a62a0d10b
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Mar 1 19:19:02 2020 -0800

    Fix some 8 extruders issues, GTR build (#17043)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 807ee99e23..180bc8d6f6 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -278,9 +278,9 @@
 #endif
 
 #define _E6_CS
+#define _E6_MS1
 #define _E6_MS2
 #define _E6_MS3
-#define _E6_MS4
 
 #if E_NEEDED(6)
   #if PIN_EXISTS(E6_CS) && AXIS_HAS_SPI(E6)
@@ -302,9 +302,9 @@
 #endif
 
 #define _E7_CS
+#define _E7_MS1
+#define _E7_MS2
 #define _E7_MS3
-#define _E7_MS4
-#define _E7_MS5
 
 #if E_NEEDED(7)
   #if PIN_EXISTS(E7_CS) && AXIS_HAS_SPI(E7)

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 2492f31816..807ee99e23 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 248b7dfa591a34a8aa1c6960944e1a3a468ad1de
Author: yangwenxiong <46896566+yangwenxiong@users.noreply.github.com>
Date:   Sat Jan 25 16:13:39 2020 +0800

    BigTreeTech GTR V1.0 / Support 8 extruders, heaters, temp sensors, fans (#16595)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 24daf354bf..2492f31816 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -277,6 +277,54 @@
   #endif
 #endif
 
+#define _E6_CS
+#define _E6_MS2
+#define _E6_MS3
+#define _E6_MS4
+
+#if E_NEEDED(6)
+  #if PIN_EXISTS(E6_CS) && AXIS_HAS_SPI(E6)
+    #undef _E6_CS
+    #define _E6_CS E6_CS_PIN,
+  #endif
+  #if PIN_EXISTS(E6_MS2)
+    #undef _E6_MS2
+    #define _E6_MS2 E6_MS2_PIN,
+  #endif
+  #if PIN_EXISTS(E6_MS3)
+    #undef _E6_MS3
+    #define _E6_MS3 E6_MS3_PIN,
+  #endif
+  #if PIN_EXISTS(E6_MS4)
+    #undef _E6_MS4
+    #define _E6_MS4 E6_MS4_PIN,
+  #endif
+#endif
+
+#define _E7_CS
+#define _E7_MS3
+#define _E7_MS4
+#define _E7_MS5
+
+#if E_NEEDED(7)
+  #if PIN_EXISTS(E7_CS) && AXIS_HAS_SPI(E7)
+    #undef _E7_CS
+    #define _E7_CS E7_CS_PIN,
+  #endif
+  #if PIN_EXISTS(E7_MS3)
+    #undef _E7_MS3
+    #define _E7_MS3 E7_MS3_PIN,
+  #endif
+  #if PIN_EXISTS(E7_MS4)
+    #undef _E7_MS4
+    #define _E7_MS4 E7_MS4_PIN,
+  #endif
+  #if PIN_EXISTS(E7_MS5)
+    #undef _E7_MS5
+    #define _E7_MS5 E7_MS5_PIN,
+  #endif
+#endif
+
 //
 // E Steppers
 //
@@ -287,6 +335,8 @@
 #define _E3_PINS
 #define _E4_PINS
 #define _E5_PINS
+#define _E6_PINS
+#define _E7_PINS
 
 #if EXTRUDERS
   #undef _E0_PINS
@@ -303,7 +353,9 @@
       #define _E2_PINS E2_STEP_PIN, E2_DIR_PIN, E2_ENABLE_PIN, _E2_CS _E2_MS1 _E2_MS2 _E2_MS3
     #endif
   #endif
+
 #elif EXTRUDERS > 1 || ENABLED(MIXING_EXTRUDER)
+
   #undef _E1_PINS
   #define _E1_PINS E1_STEP_PIN, E1_DIR_PIN, E1_ENABLE_PIN, _E1_CS _E1_MS1 _E1_MS2 _E1_MS3
   #if EXTRUDERS > 2 || (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > 2)
@@ -318,10 +370,19 @@
         #if EXTRUDERS > 5 || (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > 5)
           #undef _E5_PINS
           #define _E5_PINS E5_STEP_PIN, E5_DIR_PIN, E5_ENABLE_PIN, _E5_CS _E5_MS1 _E5_MS2 _E5_MS3
+          #if EXTRUDERS > 6 || (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > 6)
+            #undef _E6_PINS
+            #define _E6_PINS E6_STEP_PIN, E6_DIR_PIN, E6_ENABLE_PIN, _E6_CS _E6_MS1 _E6_MS2 _E6_MS3
+            #if EXTRUDERS > 7 || (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > 7)
+              #undef _E7_PINS
+              #define _E7_PINS E7_STEP_PIN, E7_DIR_PIN, E7_ENABLE_PIN, _E7_CS _E7_MS1 _E7_MS2 _E7_MS3
+            #endif // EXTRUDERS > 7 || MIXING_EXTRUDER > 7
+          #endif // EXTRUDERS > 6 || MIXING_EXTRUDER > 6
         #endif // EXTRUDERS > 5 || MIXING_EXTRUDER > 5
       #endif // EXTRUDERS > 4 || MIXING_EXTRUDER > 4
     #endif // EXTRUDERS > 3 || MIXING_EXTRUDER > 3
   #endif // EXTRUDERS > 2 || MIXING_EXTRUDER > 2
+
 #endif // EXTRUDERS > 1 || MIXING_EXTRUDER
 
 //
@@ -334,6 +395,8 @@
 #define _H3_PINS
 #define _H4_PINS
 #define _H5_PINS
+#define _H6_PINS
+#define _H7_PINS
 
 #if HOTENDS
   #undef _H0_PINS
@@ -353,6 +416,14 @@
           #if HOTENDS > 5
             #undef _H5_PINS
             #define _H5_PINS HEATER_5_PIN, E5_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_5_PIN),
+            #if HOTENDS > 6
+              #undef _H6_PINS
+              #define _H6_PINS HEATER_6_PIN, E6_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_6_PIN),
+              #if HOTENDS > 7
+                #undef _H7_PINS
+                #define _H7_PINS HEATER_7_PIN, E7_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_7_PIN),
+              #endif // HOTENDS > 7
+            #endif // HOTENDS > 6
           #endif // HOTENDS > 5
         #endif // HOTENDS > 4
       #endif // HOTENDS > 3
@@ -539,6 +610,31 @@
 #else
   #define _FAN2
 #endif
+#if PIN_EXISTS(FAN3)
+  #define _FAN3 FAN3_PIN,
+#else
+  #define _FAN3
+#endif
+#if PIN_EXISTS(FAN4)
+  #define _FAN4 FAN4_PIN,
+#else
+  #define _FAN4
+#endif
+#if PIN_EXISTS(FAN5)
+  #define _FAN5 FAN5_PIN,
+#else
+  #define _FAN5
+#endif
+#if PIN_EXISTS(FAN6)
+  #define _FAN6 FAN6_PIN,
+#else
+  #define _FAN6
+#endif
+#if PIN_EXISTS(FAN7)
+  #define _FAN7 FAN7_PIN,
+#else
+  #define _FAN7
+#endif
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define _FANC CONTROLLER_FAN_PIN,
 #else
@@ -550,9 +646,9 @@
 #endif
 
 #define SENSITIVE_PINS { \
-  _X_PINS _Y_PINS _Z_PINS _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS \
-  _Z_PROBE _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS \
-  _BED_PINS _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS \
-  _PS_ON _HEATER_BED _FAN0 _FAN1 _FAN2 _FANC \
+  _X_PINS _Y_PINS _Z_PINS _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS _Z_PROBE \
+  _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _E6_PINS _E7_PINS _BED_PINS \
+  _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS _H6_PINS _H7_PINS \
+  _PS_ON _HEATER_BED _FAN0 _FAN1 _FAN2 _FAN3 _FAN4 _FAN5 _FAN6 _FAN7 _FANC \
   HAL_SENSITIVE_PINS \
 }

commit 0fcf2b1110d9f0d362e5aab9cc73d963710e9865
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Jan 20 00:35:07 2020 -0500

    Quad Z stepper support (#16277)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index b0ec52b45c..24daf354bf 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -423,7 +423,7 @@
   #define _Y2_PINS
 #endif
 
-#if Z_MULTI_STEPPER_DRIVERS
+#if NUM_Z_STEPPER_DRIVERS >= 2
   #if PIN_EXISTS(Z2_CS) && AXIS_HAS_SPI(Z2)
     #define _Z2_CS Z2_CS_PIN,
   #else
@@ -449,7 +449,7 @@
   #define _Z2_PINS
 #endif
 
-#if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
+#if NUM_Z_STEPPER_DRIVERS >= 3
   #if PIN_EXISTS(Z3_CS) && AXIS_HAS_SPI(Z3)
     #define _Z3_CS Z3_CS_PIN,
   #else
@@ -475,6 +475,32 @@
   #define _Z3_PINS
 #endif
 
+#if NUM_Z_STEPPER_DRIVERS >= 4
+  #if PIN_EXISTS(Z4_CS) && AXIS_HAS_SPI(Z4)
+    #define _Z4_CS Z4_CS_PIN,
+  #else
+    #define _Z4_CS
+  #endif
+  #if PIN_EXISTS(Z4_MS1)
+    #define _Z4_MS1 Z4_MS1_PIN,
+  #else
+    #define _Z4_MS1
+  #endif
+  #if PIN_EXISTS(Z4_MS2)
+    #define _Z4_MS2 Z4_MS2_PIN,
+  #else
+    #define _Z4_MS2
+  #endif
+  #if PIN_EXISTS(Z4_MS3)
+    #define _Z4_MS3 Z4_MS3_PIN,
+  #else
+    #define _Z4_MS3
+  #endif
+  #define _Z4_PINS Z4_STEP_PIN, Z4_DIR_PIN, Z4_ENABLE_PIN, _Z4_CS _Z4_MS1 _Z4_MS2 _Z4_MS3
+#else
+  #define _Z4_PINS
+#endif
+
 //
 // Generate the final Sensitive Pins array,
 // keeping the array as small as possible.
@@ -524,9 +550,9 @@
 #endif
 
 #define SENSITIVE_PINS { \
-  _X_PINS _Y_PINS _Z_PINS _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z_PROBE \
-  _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _BED_PINS \
-  _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS \
+  _X_PINS _Y_PINS _Z_PINS _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z4_PINS \
+  _Z_PROBE _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS \
+  _BED_PINS _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS \
   _PS_ON _HEATER_BED _FAN0 _FAN1 _FAN2 _FANC \
   HAL_SENSITIVE_PINS \
 }

commit b11551c7675e354d6dfec169f538136708aa9edd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 24 06:08:05 2019 -0600

    Touch UI updates for Cocoa Press (#15986)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index fc3a486c37..b0ec52b45c 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -360,7 +360,11 @@
   #endif // HOTENDS > 1
 #endif // HOTENDS
 
-#define _BED_PINS HEATER_BED_PIN, analogInputToDigitalPin(TEMP_BED_PIN),
+#define _BED_PINS
+#if PIN_EXISTS(HEATER_BED) && PIN_EXISTS(TEMP_BED)
+  #undef _BED_PINS
+  #define _BED_PINS HEATER_BED_PIN, analogInputToDigitalPin(TEMP_BED_PIN),
+#endif
 
 //
 // Dual X, Dual Y, Multi-Z

commit fe0224104498a42a3921b97ef3902581fba6c309
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 5 18:20:15 2019 -0500

    NONE on combined options

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 6fba6639fd..fc3a486c37 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -131,7 +131,7 @@
 // Mixing stepper, Switching stepper, or regular stepper
 #define E_NEEDED(N) (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > N) \
                  || (ENABLED(SWITCHING_EXTRUDER) && E_STEPPERS > N) \
-                 || (DISABLED(SWITCHING_EXTRUDER, MIXING_EXTRUDER) && EXTRUDERS > N)
+                 || (NONE(SWITCHING_EXTRUDER, MIXING_EXTRUDER) && EXTRUDERS > N)
 
 #define _E0_CS
 #define _E0_MS1

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index e23960c8ad..6fba6639fd 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 492883859e04f02d2c40bae131f9c83d0fac3557
Author: ManuelMcLure <manuel@mclure.org>
Date:   Wed Apr 10 19:57:57 2019 -0700

    Don't protect unused CS pins (#13647)

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 02d888cc43..e23960c8ad 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -35,7 +35,7 @@
 #else
   #define _X_MAX
 #endif
-#if PIN_EXISTS(X_CS)
+#if PIN_EXISTS(X_CS) && AXIS_HAS_SPI(X)
   #define _X_CS X_CS_PIN,
 #else
   #define _X_CS
@@ -68,7 +68,7 @@
 #else
   #define _Y_MAX
 #endif
-#if PIN_EXISTS(Y_CS)
+#if PIN_EXISTS(Y_CS) && AXIS_HAS_SPI(Y)
   #define _Y_CS Y_CS_PIN,
 #else
   #define _Y_CS
@@ -101,7 +101,7 @@
 #else
   #define _Z_MAX
 #endif
-#if PIN_EXISTS(Z_CS)
+#if PIN_EXISTS(Z_CS) && AXIS_HAS_SPI(Z)
   #define _Z_CS Z_CS_PIN,
 #else
   #define _Z_CS
@@ -139,7 +139,7 @@
 #define _E0_MS3
 
 #if E_NEEDED(0)
-  #if PIN_EXISTS(E0_CS)
+  #if PIN_EXISTS(E0_CS) && AXIS_HAS_SPI(E0)
     #undef _E0_CS
     #define _E0_CS E0_CS_PIN,
   #endif
@@ -163,7 +163,7 @@
 #define _E1_MS3
 
 #if E_NEEDED(1)
-  #if PIN_EXISTS(E1_CS)
+  #if PIN_EXISTS(E1_CS) && AXIS_HAS_SPI(E1)
     #undef _E1_CS
     #define _E1_CS E1_CS_PIN,
   #endif
@@ -187,7 +187,7 @@
 #define _E2_MS3
 
 #if E_NEEDED(2)
-  #if PIN_EXISTS(E2_CS)
+  #if PIN_EXISTS(E2_CS) && AXIS_HAS_SPI(E2)
     #undef _E2_CS
     #define _E2_CS E2_CS_PIN,
   #endif
@@ -211,7 +211,7 @@
 #define _E3_MS3
 
 #if E_NEEDED(3)
-  #if PIN_EXISTS(E3_CS)
+  #if PIN_EXISTS(E3_CS) && AXIS_HAS_SPI(E3)
     #undef _E3_CS
     #define _E3_CS E3_CS_PIN,
   #endif
@@ -235,7 +235,7 @@
 #define _E4_MS3
 
 #if E_NEEDED(4)
-  #if PIN_EXISTS(E4_CS)
+  #if PIN_EXISTS(E4_CS) && AXIS_HAS_SPI(E4)
     #undef _E4_CS
     #define _E4_CS E4_CS_PIN,
   #endif
@@ -259,7 +259,7 @@
 #define _E5_MS3
 
 #if E_NEEDED(5)
-  #if PIN_EXISTS(E5_CS)
+  #if PIN_EXISTS(E5_CS) && AXIS_HAS_SPI(E5)
     #undef _E5_CS
     #define _E5_CS E5_CS_PIN,
   #endif
@@ -368,7 +368,7 @@
 //
 
 #if EITHER(DUAL_X_CARRIAGE, X_DUAL_STEPPER_DRIVERS)
-  #if PIN_EXISTS(X2_CS)
+  #if PIN_EXISTS(X2_CS) && AXIS_HAS_SPI(X2)
     #define _X2_CS X2_CS_PIN,
   #else
     #define _X2_CS
@@ -394,7 +394,7 @@
 #endif
 
 #if ENABLED(Y_DUAL_STEPPER_DRIVERS)
-  #if PIN_EXISTS(Y2_CS)
+  #if PIN_EXISTS(Y2_CS) && AXIS_HAS_SPI(Y2)
     #define _Y2_CS Y2_CS_PIN,
   #else
     #define _Y2_CS
@@ -420,7 +420,7 @@
 #endif
 
 #if Z_MULTI_STEPPER_DRIVERS
-  #if PIN_EXISTS(Z2_CS)
+  #if PIN_EXISTS(Z2_CS) && AXIS_HAS_SPI(Z2)
     #define _Z2_CS Z2_CS_PIN,
   #else
     #define _Z2_CS
@@ -446,7 +446,7 @@
 #endif
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
-  #if PIN_EXISTS(Z3_CS)
+  #if PIN_EXISTS(Z3_CS) && AXIS_HAS_SPI(Z3)
     #define _Z3_CS Z3_CS_PIN,
   #else
     #define _Z3_CS

commit b376c7e374bbbc2cb69b6009c619f923f42f84b3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Mar 17 05:50:06 2019 -0500

    Group DISABLED items

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 1ffc6f6db1..02d888cc43 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -131,7 +131,7 @@
 // Mixing stepper, Switching stepper, or regular stepper
 #define E_NEEDED(N) (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > N) \
                  || (ENABLED(SWITCHING_EXTRUDER) && E_STEPPERS > N) \
-                 || (DISABLED(SWITCHING_EXTRUDER) && DISABLED(MIXING_EXTRUDER) && EXTRUDERS > N)
+                 || (DISABLED(SWITCHING_EXTRUDER, MIXING_EXTRUDER) && EXTRUDERS > N)
 
 #define _E0_CS
 #define _E0_MS1

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index e39f880c15..1ffc6f6db1 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -367,7 +367,7 @@
 // Chip Select and Digital Micro-stepping
 //
 
-#if ENABLED(DUAL_X_CARRIAGE) || ENABLED(X_DUAL_STEPPER_DRIVERS)
+#if EITHER(DUAL_X_CARRIAGE, X_DUAL_STEPPER_DRIVERS)
   #if PIN_EXISTS(X2_CS)
     #define _X2_CS X2_CS_PIN,
   #else

commit 2f1e1dcb42e01165e800a5d00c769efecc5a9933
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Mar 1 01:51:24 2019 -0600

    Gradual step towards EXTRUDERS 0 support

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index a912cf5f5c..e39f880c15 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -133,25 +133,28 @@
                  || (ENABLED(SWITCHING_EXTRUDER) && E_STEPPERS > N) \
                  || (DISABLED(SWITCHING_EXTRUDER) && DISABLED(MIXING_EXTRUDER) && EXTRUDERS > N)
 
-#if PIN_EXISTS(E0_CS)
-  #define _E0_CS E0_CS_PIN,
-#else
-  #define _E0_CS
-#endif
-#if PIN_EXISTS(E0_MS1)
-  #define _E0_MS1 E0_MS1_PIN,
-#else
-  #define _E0_MS1
-#endif
-#if PIN_EXISTS(E0_MS2)
-  #define _E0_MS2 E0_MS2_PIN,
-#else
-  #define _E0_MS2
-#endif
-#if PIN_EXISTS(E0_MS3)
-  #define _E0_MS3 E0_MS3_PIN,
-#else
-  #define _E0_MS3
+#define _E0_CS
+#define _E0_MS1
+#define _E0_MS2
+#define _E0_MS3
+
+#if E_NEEDED(0)
+  #if PIN_EXISTS(E0_CS)
+    #undef _E0_CS
+    #define _E0_CS E0_CS_PIN,
+  #endif
+  #if PIN_EXISTS(E0_MS1)
+    #undef _E0_MS1
+    #define _E0_MS1 E0_MS1_PIN,
+  #endif
+  #if PIN_EXISTS(E0_MS2)
+    #undef _E0_MS2
+    #define _E0_MS2 E0_MS2_PIN,
+  #endif
+  #if PIN_EXISTS(E0_MS3)
+    #undef _E0_MS3
+    #define _E0_MS3 E0_MS3_PIN,
+  #endif
 #endif
 
 #define _E1_CS
@@ -278,13 +281,18 @@
 // E Steppers
 //
 
-#define _E0_PINS E0_STEP_PIN, E0_DIR_PIN, E0_ENABLE_PIN, _E0_CS _E0_MS1 _E0_MS2 _E0_MS3
+#define _E0_PINS
 #define _E1_PINS
 #define _E2_PINS
 #define _E3_PINS
 #define _E4_PINS
 #define _E5_PINS
 
+#if EXTRUDERS
+  #undef _E0_PINS
+  #define _E0_PINS E0_STEP_PIN, E0_DIR_PIN, E0_ENABLE_PIN, _E0_CS _E0_MS1 _E0_MS2 _E0_MS3
+#endif
+
 #if ENABLED(SWITCHING_EXTRUDER)
                       // Tools 0 and 1 use E0
   #if EXTRUDERS > 2   // Tools 2 and 3 use E1
@@ -320,33 +328,37 @@
 // Heaters, Fans, Temp Sensors
 //
 
-#define _H0_PINS HEATER_0_PIN, E0_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_0_PIN),
+#define _H0_PINS
 #define _H1_PINS
 #define _H2_PINS
 #define _H3_PINS
 #define _H4_PINS
 #define _H5_PINS
 
-#if HOTENDS > 1
-  #undef _H1_PINS
-  #define _H1_PINS HEATER_1_PIN, E1_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_1_PIN),
-  #if HOTENDS > 2
-    #undef _H2_PINS
-    #define _H2_PINS HEATER_2_PIN, E2_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_2_PIN),
-    #if HOTENDS > 3
-      #undef _H3_PINS
-      #define _H3_PINS HEATER_3_PIN, E3_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_3_PIN),
-      #if HOTENDS > 4
-        #undef _H4_PINS
-        #define _H4_PINS HEATER_4_PIN, E4_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_4_PIN),
-        #if HOTENDS > 5
-          #undef _H5_PINS
-          #define _H5_PINS HEATER_5_PIN, E5_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_5_PIN),
-        #endif // HOTENDS > 5
-      #endif // HOTENDS > 4
-    #endif // HOTENDS > 3
-  #endif // HOTENDS > 2
-#endif // HOTENDS > 1
+#if HOTENDS
+  #undef _H0_PINS
+  #define _H0_PINS HEATER_0_PIN, E0_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_0_PIN),
+  #if HOTENDS > 1
+    #undef _H1_PINS
+    #define _H1_PINS HEATER_1_PIN, E1_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_1_PIN),
+    #if HOTENDS > 2
+      #undef _H2_PINS
+      #define _H2_PINS HEATER_2_PIN, E2_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_2_PIN),
+      #if HOTENDS > 3
+        #undef _H3_PINS
+        #define _H3_PINS HEATER_3_PIN, E3_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_3_PIN),
+        #if HOTENDS > 4
+          #undef _H4_PINS
+          #define _H4_PINS HEATER_4_PIN, E4_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_4_PIN),
+          #if HOTENDS > 5
+            #undef _H5_PINS
+            #define _H5_PINS HEATER_5_PIN, E5_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_5_PIN),
+          #endif // HOTENDS > 5
+        #endif // HOTENDS > 4
+      #endif // HOTENDS > 3
+    #endif // HOTENDS > 2
+  #endif // HOTENDS > 1
+#endif // HOTENDS
 
 #define _BED_PINS HEATER_BED_PIN, analogInputToDigitalPin(TEMP_BED_PIN),
 

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
index 8b885bb0b6..a912cf5f5c 100644
--- a/Marlin/src/pins/sensitive_pins.h
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 1407afad738ce64f4cc9f0c2ad9d02ba88f2a925
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 11 00:58:41 2018 -0500

    Move SENSITIVE_PINS to its own file

diff --git a/Marlin/src/pins/sensitive_pins.h b/Marlin/src/pins/sensitive_pins.h
new file mode 100644
index 0000000000..8b885bb0b6
--- /dev/null
+++ b/Marlin/src/pins/sensitive_pins.h
@@ -0,0 +1,516 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+//
+// Prepare a list of protected pins for M42/M43
+//
+
+#if PIN_EXISTS(X_MIN)
+  #define _X_MIN X_MIN_PIN,
+#else
+  #define _X_MIN
+#endif
+#if PIN_EXISTS(X_MAX)
+  #define _X_MAX X_MAX_PIN,
+#else
+  #define _X_MAX
+#endif
+#if PIN_EXISTS(X_CS)
+  #define _X_CS X_CS_PIN,
+#else
+  #define _X_CS
+#endif
+#if PIN_EXISTS(X_MS1)
+  #define _X_MS1 X_MS1_PIN,
+#else
+  #define _X_MS1
+#endif
+#if PIN_EXISTS(X_MS2)
+  #define _X_MS2 X_MS2_PIN,
+#else
+  #define _X_MS2
+#endif
+#if PIN_EXISTS(X_MS3)
+  #define _X_MS3 X_MS3_PIN,
+#else
+  #define _X_MS3
+#endif
+
+#define _X_PINS X_STEP_PIN, X_DIR_PIN, X_ENABLE_PIN, _X_MIN _X_MAX _X_MS1 _X_MS2 _X_MS3 _X_CS
+
+#if PIN_EXISTS(Y_MIN)
+  #define _Y_MIN Y_MIN_PIN,
+#else
+  #define _Y_MIN
+#endif
+#if PIN_EXISTS(Y_MAX)
+  #define _Y_MAX Y_MAX_PIN,
+#else
+  #define _Y_MAX
+#endif
+#if PIN_EXISTS(Y_CS)
+  #define _Y_CS Y_CS_PIN,
+#else
+  #define _Y_CS
+#endif
+#if PIN_EXISTS(Y_MS1)
+  #define _Y_MS1 Y_MS1_PIN,
+#else
+  #define _Y_MS1
+#endif
+#if PIN_EXISTS(Y_MS2)
+  #define _Y_MS2 Y_MS2_PIN,
+#else
+  #define _Y_MS2
+#endif
+#if PIN_EXISTS(Y_MS3)
+  #define _Y_MS3 Y_MS3_PIN,
+#else
+  #define _Y_MS3
+#endif
+
+#define _Y_PINS Y_STEP_PIN, Y_DIR_PIN, Y_ENABLE_PIN, _Y_MIN _Y_MAX _Y_MS1 _Y_MS2 _Y_MS3 _Y_CS
+
+#if PIN_EXISTS(Z_MIN)
+  #define _Z_MIN Z_MIN_PIN,
+#else
+  #define _Z_MIN
+#endif
+#if PIN_EXISTS(Z_MAX)
+  #define _Z_MAX Z_MAX_PIN,
+#else
+  #define _Z_MAX
+#endif
+#if PIN_EXISTS(Z_CS)
+  #define _Z_CS Z_CS_PIN,
+#else
+  #define _Z_CS
+#endif
+#if PIN_EXISTS(Z_MS1)
+  #define _Z_MS1 Z_MS1_PIN,
+#else
+  #define _Z_MS1
+#endif
+#if PIN_EXISTS(Z_MS2)
+  #define _Z_MS2 Z_MS2_PIN,
+#else
+  #define _Z_MS2
+#endif
+#if PIN_EXISTS(Z_MS3)
+  #define _Z_MS3 Z_MS3_PIN,
+#else
+  #define _Z_MS3
+#endif
+
+#define _Z_PINS Z_STEP_PIN, Z_DIR_PIN, Z_ENABLE_PIN, _Z_MIN _Z_MAX _Z_MS1 _Z_MS2 _Z_MS3 _Z_CS
+
+//
+// Extruder Chip Select, Digital Micro-steps
+//
+
+// Mixing stepper, Switching stepper, or regular stepper
+#define E_NEEDED(N) (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > N) \
+                 || (ENABLED(SWITCHING_EXTRUDER) && E_STEPPERS > N) \
+                 || (DISABLED(SWITCHING_EXTRUDER) && DISABLED(MIXING_EXTRUDER) && EXTRUDERS > N)
+
+#if PIN_EXISTS(E0_CS)
+  #define _E0_CS E0_CS_PIN,
+#else
+  #define _E0_CS
+#endif
+#if PIN_EXISTS(E0_MS1)
+  #define _E0_MS1 E0_MS1_PIN,
+#else
+  #define _E0_MS1
+#endif
+#if PIN_EXISTS(E0_MS2)
+  #define _E0_MS2 E0_MS2_PIN,
+#else
+  #define _E0_MS2
+#endif
+#if PIN_EXISTS(E0_MS3)
+  #define _E0_MS3 E0_MS3_PIN,
+#else
+  #define _E0_MS3
+#endif
+
+#define _E1_CS
+#define _E1_MS1
+#define _E1_MS2
+#define _E1_MS3
+
+#if E_NEEDED(1)
+  #if PIN_EXISTS(E1_CS)
+    #undef _E1_CS
+    #define _E1_CS E1_CS_PIN,
+  #endif
+  #if PIN_EXISTS(E1_MS1)
+    #undef _E1_MS1
+    #define _E1_MS1 E1_MS1_PIN,
+  #endif
+  #if PIN_EXISTS(E1_MS2)
+    #undef _E1_MS2
+    #define _E1_MS2 E1_MS2_PIN,
+  #endif
+  #if PIN_EXISTS(E1_MS3)
+    #undef _E1_MS3
+    #define _E1_MS3 E1_MS3_PIN,
+  #endif
+#endif
+
+#define _E2_CS
+#define _E2_MS1
+#define _E2_MS2
+#define _E2_MS3
+
+#if E_NEEDED(2)
+  #if PIN_EXISTS(E2_CS)
+    #undef _E2_CS
+    #define _E2_CS E2_CS_PIN,
+  #endif
+  #if PIN_EXISTS(E2_MS1)
+    #undef _E2_MS1
+    #define _E2_MS1 E2_MS1_PIN,
+  #endif
+  #if PIN_EXISTS(E2_MS2)
+    #undef _E2_MS2
+    #define _E2_MS2 E2_MS2_PIN,
+  #endif
+  #if PIN_EXISTS(E2_MS3)
+    #undef _E2_MS3
+    #define _E2_MS3 E2_MS3_PIN,
+  #endif
+#endif
+
+#define _E3_CS
+#define _E3_MS1
+#define _E3_MS2
+#define _E3_MS3
+
+#if E_NEEDED(3)
+  #if PIN_EXISTS(E3_CS)
+    #undef _E3_CS
+    #define _E3_CS E3_CS_PIN,
+  #endif
+  #if PIN_EXISTS(E3_MS1)
+    #undef _E3_MS1
+    #define _E3_MS1 E3_MS1_PIN,
+  #endif
+  #if PIN_EXISTS(E3_MS2)
+    #undef _E3_MS2
+    #define _E3_MS2 E3_MS2_PIN,
+  #endif
+  #if PIN_EXISTS(E3_MS3)
+    #undef _E3_MS3
+    #define _E3_MS3 E3_MS3_PIN,
+  #endif
+#endif
+
+#define _E4_CS
+#define _E4_MS1
+#define _E4_MS2
+#define _E4_MS3
+
+#if E_NEEDED(4)
+  #if PIN_EXISTS(E4_CS)
+    #undef _E4_CS
+    #define _E4_CS E4_CS_PIN,
+  #endif
+  #if PIN_EXISTS(E4_MS1)
+    #undef _E4_MS1
+    #define _E4_MS1 E4_MS1_PIN,
+  #endif
+  #if PIN_EXISTS(E4_MS2)
+    #undef _E4_MS2
+    #define _E4_MS2 E4_MS2_PIN,
+  #endif
+  #if PIN_EXISTS(E4_MS3)
+    #undef _E4_MS3
+    #define _E4_MS3 E4_MS3_PIN,
+  #endif
+#endif
+
+#define _E5_CS
+#define _E5_MS1
+#define _E5_MS2
+#define _E5_MS3
+
+#if E_NEEDED(5)
+  #if PIN_EXISTS(E5_CS)
+    #undef _E5_CS
+    #define _E5_CS E5_CS_PIN,
+  #endif
+  #if PIN_EXISTS(E5_MS1)
+    #undef _E5_MS1
+    #define _E5_MS1 E5_MS1_PIN,
+  #endif
+  #if PIN_EXISTS(E5_MS2)
+    #undef _E5_MS2
+    #define _E5_MS2 E5_MS2_PIN,
+  #endif
+  #if PIN_EXISTS(E5_MS3)
+    #undef _E5_MS3
+    #define _E5_MS3 E5_MS3_PIN,
+  #endif
+#endif
+
+//
+// E Steppers
+//
+
+#define _E0_PINS E0_STEP_PIN, E0_DIR_PIN, E0_ENABLE_PIN, _E0_CS _E0_MS1 _E0_MS2 _E0_MS3
+#define _E1_PINS
+#define _E2_PINS
+#define _E3_PINS
+#define _E4_PINS
+#define _E5_PINS
+
+#if ENABLED(SWITCHING_EXTRUDER)
+                      // Tools 0 and 1 use E0
+  #if EXTRUDERS > 2   // Tools 2 and 3 use E1
+    #undef _E1_PINS
+    #define _E1_PINS E1_STEP_PIN, E1_DIR_PIN, E1_ENABLE_PIN, _E1_CS _E1_MS1 _E1_MS2 _E1_MS3
+    #if EXTRUDERS > 4 // Tools 4 and 5 use E2
+      #undef _E2_PINS
+      #define _E2_PINS E2_STEP_PIN, E2_DIR_PIN, E2_ENABLE_PIN, _E2_CS _E2_MS1 _E2_MS2 _E2_MS3
+    #endif
+  #endif
+#elif EXTRUDERS > 1 || ENABLED(MIXING_EXTRUDER)
+  #undef _E1_PINS
+  #define _E1_PINS E1_STEP_PIN, E1_DIR_PIN, E1_ENABLE_PIN, _E1_CS _E1_MS1 _E1_MS2 _E1_MS3
+  #if EXTRUDERS > 2 || (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > 2)
+    #undef _E2_PINS
+    #define _E2_PINS E2_STEP_PIN, E2_DIR_PIN, E2_ENABLE_PIN, _E2_CS _E2_MS1 _E2_MS2 _E2_MS3
+    #if EXTRUDERS > 3 || (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > 3)
+      #undef _E3_PINS
+      #define _E3_PINS E3_STEP_PIN, E3_DIR_PIN, E3_ENABLE_PIN, _E3_CS _E3_MS1 _E3_MS2 _E3_MS3
+      #if EXTRUDERS > 4 || (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > 4)
+        #undef _E4_PINS
+        #define _E4_PINS E4_STEP_PIN, E4_DIR_PIN, E4_ENABLE_PIN, _E4_CS _E4_MS1 _E4_MS2 _E4_MS3
+        #if EXTRUDERS > 5 || (ENABLED(MIXING_EXTRUDER) && MIXING_STEPPERS > 5)
+          #undef _E5_PINS
+          #define _E5_PINS E5_STEP_PIN, E5_DIR_PIN, E5_ENABLE_PIN, _E5_CS _E5_MS1 _E5_MS2 _E5_MS3
+        #endif // EXTRUDERS > 5 || MIXING_EXTRUDER > 5
+      #endif // EXTRUDERS > 4 || MIXING_EXTRUDER > 4
+    #endif // EXTRUDERS > 3 || MIXING_EXTRUDER > 3
+  #endif // EXTRUDERS > 2 || MIXING_EXTRUDER > 2
+#endif // EXTRUDERS > 1 || MIXING_EXTRUDER
+
+//
+// Heaters, Fans, Temp Sensors
+//
+
+#define _H0_PINS HEATER_0_PIN, E0_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_0_PIN),
+#define _H1_PINS
+#define _H2_PINS
+#define _H3_PINS
+#define _H4_PINS
+#define _H5_PINS
+
+#if HOTENDS > 1
+  #undef _H1_PINS
+  #define _H1_PINS HEATER_1_PIN, E1_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_1_PIN),
+  #if HOTENDS > 2
+    #undef _H2_PINS
+    #define _H2_PINS HEATER_2_PIN, E2_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_2_PIN),
+    #if HOTENDS > 3
+      #undef _H3_PINS
+      #define _H3_PINS HEATER_3_PIN, E3_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_3_PIN),
+      #if HOTENDS > 4
+        #undef _H4_PINS
+        #define _H4_PINS HEATER_4_PIN, E4_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_4_PIN),
+        #if HOTENDS > 5
+          #undef _H5_PINS
+          #define _H5_PINS HEATER_5_PIN, E5_AUTO_FAN_PIN, analogInputToDigitalPin(TEMP_5_PIN),
+        #endif // HOTENDS > 5
+      #endif // HOTENDS > 4
+    #endif // HOTENDS > 3
+  #endif // HOTENDS > 2
+#endif // HOTENDS > 1
+
+#define _BED_PINS HEATER_BED_PIN, analogInputToDigitalPin(TEMP_BED_PIN),
+
+//
+// Dual X, Dual Y, Multi-Z
+// Chip Select and Digital Micro-stepping
+//
+
+#if ENABLED(DUAL_X_CARRIAGE) || ENABLED(X_DUAL_STEPPER_DRIVERS)
+  #if PIN_EXISTS(X2_CS)
+    #define _X2_CS X2_CS_PIN,
+  #else
+    #define _X2_CS
+  #endif
+  #if PIN_EXISTS(X2_MS1)
+    #define _X2_MS1 X2_MS1_PIN,
+  #else
+    #define _X2_MS1
+  #endif
+  #if PIN_EXISTS(X2_MS2)
+    #define _X2_MS2 X2_MS2_PIN,
+  #else
+    #define _X2_MS2
+  #endif
+  #if PIN_EXISTS(X2_MS3)
+    #define _X2_MS3 X2_MS3_PIN,
+  #else
+    #define _X2_MS3
+  #endif
+  #define _X2_PINS X2_STEP_PIN, X2_DIR_PIN, X2_ENABLE_PIN, _X2_CS _X2_MS1 _X2_MS2 _X2_MS3
+#else
+  #define _X2_PINS
+#endif
+
+#if ENABLED(Y_DUAL_STEPPER_DRIVERS)
+  #if PIN_EXISTS(Y2_CS)
+    #define _Y2_CS Y2_CS_PIN,
+  #else
+    #define _Y2_CS
+  #endif
+  #if PIN_EXISTS(Y2_MS1)
+    #define _Y2_MS1 Y2_MS1_PIN,
+  #else
+    #define _Y2_MS1
+  #endif
+  #if PIN_EXISTS(Y2_MS2)
+    #define _Y2_MS2 Y2_MS2_PIN,
+  #else
+    #define _Y2_MS2
+  #endif
+  #if PIN_EXISTS(Y2_MS3)
+    #define _Y2_MS3 Y2_MS3_PIN,
+  #else
+    #define _Y2_MS3
+  #endif
+  #define _Y2_PINS Y2_STEP_PIN, Y2_DIR_PIN, Y2_ENABLE_PIN, _Y2_CS _Y2_MS1 _Y2_MS2 _Y2_MS3
+#else
+  #define _Y2_PINS
+#endif
+
+#if Z_MULTI_STEPPER_DRIVERS
+  #if PIN_EXISTS(Z2_CS)
+    #define _Z2_CS Z2_CS_PIN,
+  #else
+    #define _Z2_CS
+  #endif
+  #if PIN_EXISTS(Z2_MS1)
+    #define _Z2_MS1 Z2_MS1_PIN,
+  #else
+    #define _Z2_MS1
+  #endif
+  #if PIN_EXISTS(Z2_MS2)
+    #define _Z2_MS2 Z2_MS2_PIN,
+  #else
+    #define _Z2_MS2
+  #endif
+  #if PIN_EXISTS(Z2_MS3)
+    #define _Z2_MS3 Z2_MS3_PIN,
+  #else
+    #define _Z2_MS3
+  #endif
+  #define _Z2_PINS Z2_STEP_PIN, Z2_DIR_PIN, Z2_ENABLE_PIN, _Z2_CS _Z2_MS1 _Z2_MS2 _Z2_MS3
+#else
+  #define _Z2_PINS
+#endif
+
+#if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
+  #if PIN_EXISTS(Z3_CS)
+    #define _Z3_CS Z3_CS_PIN,
+  #else
+    #define _Z3_CS
+  #endif
+  #if PIN_EXISTS(Z3_MS1)
+    #define _Z3_MS1 Z3_MS1_PIN,
+  #else
+    #define _Z3_MS1
+  #endif
+  #if PIN_EXISTS(Z3_MS2)
+    #define _Z3_MS2 Z3_MS2_PIN,
+  #else
+    #define _Z3_MS2
+  #endif
+  #if PIN_EXISTS(Z3_MS3)
+    #define _Z3_MS3 Z3_MS3_PIN,
+  #else
+    #define _Z3_MS3
+  #endif
+  #define _Z3_PINS Z3_STEP_PIN, Z3_DIR_PIN, Z3_ENABLE_PIN, _Z3_CS _Z3_MS1 _Z3_MS2 _Z3_MS3
+#else
+  #define _Z3_PINS
+#endif
+
+//
+// Generate the final Sensitive Pins array,
+// keeping the array as small as possible.
+//
+
+#if PIN_EXISTS(PS_ON)
+  #define _PS_ON PS_ON_PIN,
+#else
+  #define _PS_ON
+#endif
+
+#if HAS_BED_PROBE && PIN_EXISTS(Z_MIN_PROBE)
+  #define _Z_PROBE Z_MIN_PROBE_PIN,
+#else
+  #define _Z_PROBE
+#endif
+
+#if TEMP_SENSOR_BED && PIN_EXISTS(HEATER_BED)
+  #define _HEATER_BED HEATER_BED_PIN,
+#else
+  #define _HEATER_BED
+#endif
+
+#if PIN_EXISTS(FAN)
+  #define _FAN0 FAN_PIN,
+#else
+  #define _FAN0
+#endif
+#if PIN_EXISTS(FAN1)
+  #define _FAN1 FAN1_PIN,
+#else
+  #define _FAN1
+#endif
+#if PIN_EXISTS(FAN2)
+  #define _FAN2 FAN2_PIN,
+#else
+  #define _FAN2
+#endif
+#if PIN_EXISTS(CONTROLLER_FAN)
+  #define _FANC CONTROLLER_FAN_PIN,
+#else
+  #define _FANC
+#endif
+
+#ifndef HAL_SENSITIVE_PINS
+  #define HAL_SENSITIVE_PINS
+#endif
+
+#define SENSITIVE_PINS { \
+  _X_PINS _Y_PINS _Z_PINS _X2_PINS _Y2_PINS _Z2_PINS _Z3_PINS _Z_PROBE \
+  _E0_PINS _E1_PINS _E2_PINS _E3_PINS _E4_PINS _E5_PINS _BED_PINS \
+  _H0_PINS _H1_PINS _H2_PINS _H3_PINS _H4_PINS _H5_PINS \
+  _PS_ON _HEATER_BED _FAN0 _FAN1 _FAN2 _FANC \
+  HAL_SENSITIVE_PINS \
+}
