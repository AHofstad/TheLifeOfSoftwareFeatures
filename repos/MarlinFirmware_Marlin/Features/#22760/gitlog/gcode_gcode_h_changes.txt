commit 44c268216858393243e0773ffc35bb926fb816c5
Author: Justin Nesselrotte <admin@jnesselr.org>
Date:   Tue Jul 9 16:00:14 2024 -0600

    ‚ú® RS485 support with G-code M485 (#25680)
    
    Co-authored-by: Stephen Hawes <sphawes@gmail.com>
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 144d724cd9..bb2f009994 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -236,20 +236,21 @@
  * M410 - Quickstop. Abort all planned moves.
  * M412 - Enable / Disable Filament Runout Detection. (Requires FILAMENT_RUNOUT_SENSOR)
  * M413 - Enable / Disable Power-Loss Recovery. (Requires POWER_LOSS_RECOVERY)
  * M414 - Set language by index. (Requires LCD_LANGUAGE_2...)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M430 - Read the system current, voltage, and power (Requires POWER_MONITOR_CURRENT, POWER_MONITOR_VOLTAGE, or POWER_MONITOR_FIXED_VOLTAGE)
+ * M485 - Send RS485 packets (Requires RS485_SERIAL_PORT)
  * M486 - Identify and cancel objects. (Requires CANCEL_OBJECTS)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M510 - Lock Printer (Requires PASSWORD_FEATURE)
  * M511 - Unlock Printer (Requires PASSWORD_UNLOCK_GCODE)
  * M512 - Set/Change/Remove Password (Requires PASSWORD_CHANGE_GCODE)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
@@ -1056,20 +1057,24 @@ private:
   #endif
 
   #if HAS_HOME_OFFSET
     static void M428();
   #endif
 
   #if HAS_POWER_MONITOR
     static void M430();
   #endif
 
+  #if HAS_RS485_SERIAL
+    static void M485();
+  #endif
+
   #if ENABLED(CANCEL_OBJECTS)
     static void M486();
   #endif
 
   #if ENABLED(FT_MOTION)
     static void M493();
     static void M493_report(const bool forReplay=true);
   #endif
 
   static void M500();

commit 2064c83c6681afac7dec636ce361e91b8ecba76b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 26 11:57:42 2024 -0500

    üö∏ Fix SD nav after "one click print" (2)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 1e3ec7c7f1..144d724cd9 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1269,20 +1269,24 @@ private:
   #endif
 
   #if HAS_MEDIA
     static void M1001();
   #endif
 
   #if DGUS_LCD_UI_MKS
     static void M1002();
   #endif
 
+  #if ENABLED(ONE_CLICK_PRINT)
+    static void M1003();
+  #endif
+
   #if ENABLED(UBL_MESH_WIZARD)
     static void M1004();
   #endif
 
   #if ENABLED(HAS_MCP3426_ADC)
     static void M3426();
   #endif
 
   #if ENABLED(MAX7219_GCODE)
     static void M7219();

commit 5561bafbe6b0838a8b3e1a7369bf89a37d3788e2
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon May 20 16:11:30 2024 +1200

    ‚ú® M110 Get Command Line Number (#27090)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8004187903..1e3ec7c7f1 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -136,21 +136,21 @@
  *
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
  * M106 - Set print fan speed.
  * M107 - Print fan off.
  * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
  * M109 - S<temp> Wait for extruder current temp to reach target temp. ** Wait only when heating! **
  *        R<temp> Wait for extruder current temp to reach target temp. ** Wait for heating or cooling. **
  *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
  *
- * M110 - Set the current line number. (Used by host printing)
+ * M110 - Get or set the current line number. (Used by host printing)
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
  * M112 - Full Shutdown.
  *
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Requires CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  *
  * M119 - Report endstops status.

commit 669814d0d408a622f020a55971ba04030e4fa4bf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 7 23:40:54 2024 -0600

    ‚ú® MARLIN_SMALL_BUILD option (#26775)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7a72097141..8004187903 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -334,20 +334,26 @@
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
 #if ANY(IS_SCARA, POLAR) || defined(G0_FEEDRATE)
   #define HAS_FAST_MOVES 1
 #endif
 
+#if ENABLED(MARLIN_SMALL_BUILD)
+  #define GCODE_ERR_MSG(V...) "?"
+#else
+  #define GCODE_ERR_MSG(V...) "?" V
+#endif
+
 enum AxisRelative : uint8_t {
   LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z, REL_I, REL_J, REL_K, REL_U, REL_V, REL_W)
   #if HAS_EXTRUDERS
     , E_MODE_ABS, E_MODE_REL
   #endif
   , NUM_REL_MODES
 };
 typedef bits_t(NUM_REL_MODES) relative_t;
 
 extern const char G28_STR[];

commit 854f3315af645775e7b0aa39bd05db66187bcc38
Author: plampix <plampix@users.noreply.github.com>
Date:   Wed Jan 10 07:33:54 2024 +0100

    ‚ú® EDITABLE_STEPS_PER_UNIT (#26618)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6be5dc642c..7a72097141 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -121,21 +121,21 @@
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
  *
  * M80  - Turn on Power Supply. (Requires PSU_CONTROL)
  * M81  - Turn off Power Supply. (Requires PSU_CONTROL)
  *
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.
  * M85  - Set inactivity shutdown timer with parameter S<seconds>. To disable set zero (default)
- * M92  - Set planner.settings.axis_steps_per_mm for one or more axes.
+ * M92  - Set planner.settings.axis_steps_per_mm for one or more axes. (Requires EDITABLE_STEPS_PER_UNIT)
  *
  * M100 - Watch Free Memory (for debugging) (Requires M100_FREE_MEMORY_WATCHER)
  *
  * M102 - Configure Bed Distance Sensor. (Requires BD_SENSOR)
  *
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
  * M106 - Set print fan speed.
  * M107 - Print fan off.
  * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
@@ -712,22 +712,24 @@ private:
   #endif
 
   static void M85();
 
   #if ENABLED(HOTEND_IDLE_TIMEOUT)
     static void M86();
     static void M86_report(const bool forReplay=true);
     static void M87();
   #endif
 
-  static void M92();
-  static void M92_report(const bool forReplay=true, const int8_t e=-1);
+  #if ENABLED(EDITABLE_STEPS_PER_UNIT)
+    static void M92();
+    static void M92_report(const bool forReplay=true, const int8_t e=-1);
+  #endif
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
   #if ENABLED(BD_SENSOR)
     static void M102();
   #endif
 
   #if HAS_HOTEND

commit 994aa9f6923e2307d13badd26a15e6d57525955f
Author: plampix <plampix@users.noreply.github.com>
Date:   Fri Jan 5 00:09:53 2024 +0100

    ‚ö°Ô∏è Slimmer null T command (#26615)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index ae60ac7556..6be5dc642c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1278,15 +1278,15 @@ private:
 
   #if ENABLED(MAX7219_GCODE)
     static void M7219();
   #endif
 
   #if ENABLED(CONTROLLER_FAN_EDITABLE)
     static void M710();
     static void M710_report(const bool forReplay=true);
   #endif
 
-  static void T(const int8_t tool_index);
+  static void T(const int8_t tool_index) IF_DISABLED(HAS_TOOLCHANGE, { UNUSED(tool_index); });
 
 };
 
 extern GcodeSuite gcode;

commit 6e67ad51b70ce4f02be967bb14e5557a021e48eb
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Thu Jan 4 18:07:53 2024 -0500

    üé® Followup to optional M111/M115 (#26626)
    
    Followup to #26603

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index d5adf6c415..ae60ac7556 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -142,21 +142,21 @@
  * M109 - S<temp> Wait for extruder current temp to reach target temp. ** Wait only when heating! **
  *        R<temp> Wait for extruder current temp to reach target temp. ** Wait for heating or cooling. **
  *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
  *
  * M110 - Set the current line number. (Used by host printing)
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
  * M112 - Full Shutdown.
  *
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
- * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
+ * M115 - Report capabilities. (Requires CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  *
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
  *
  * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M123 - Report fan tachometers. (Requires En_FAN_TACHO_PIN) Optionally set auto-report interval. (Requires AUTO_REPORT_FANS)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
@@ -754,21 +754,21 @@ private:
 
   static void M110();
   static void M111();
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     static void M113();
   #endif
 
   static void M114();
 
-  #if ENABLED(REPORT_CAPABILITIES_GCODE)
+  #if ENABLED(CAPABILITIES_REPORT)
     static void M115();
   #endif
 
   #if HAS_STATUS_MESSAGE
     static void M117();
   #endif
 
   static void M118();
   static void M119();
   static void M120();

commit 1ac6428c82aa72cc41c0c9f758659b71e7fce1cf
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Jan 3 13:52:12 2024 +1300

    üî™ Options to slim M111, remove M115 (#26603)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index fffd0d714b..d5adf6c415 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -753,21 +753,24 @@ private:
   #endif
 
   static void M110();
   static void M111();
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     static void M113();
   #endif
 
   static void M114();
-  static void M115();
+
+  #if ENABLED(REPORT_CAPABILITIES_GCODE)
+    static void M115();
+  #endif
 
   #if HAS_STATUS_MESSAGE
     static void M117();
   #endif
 
   static void M118();
   static void M119();
   static void M120();
   static void M121();
 

commit 06710e54de8c83af77a4f57d458f6463fbfcad93
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Wed Dec 13 00:33:03 2023 -0500

    ‚ú® EDITABLE_DISPLAY_TIMEOUT (#26517)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 61ff0b047c..fffd0d714b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -902,21 +902,21 @@ private:
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif
 
   #if HAS_LCD_CONTRAST
     static void M250();
     static void M250_report(const bool forReplay=true);
   #endif
 
-  #if HAS_GCODE_M255
+  #if ENABLED(EDITABLE_DISPLAY_TIMEOUT)
     static void M255();
     static void M255_report(const bool forReplay=true);
   #endif
 
   #if HAS_LCD_BRIGHTNESS
     static void M256();
     static void M256_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)

commit 4744997c164931f8c1f8753ba4112e466b7c83a7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 12 12:14:57 2023 -0500

    üìù GCode => G-Code

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 5e6e400cf1..61ff0b047c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -455,21 +455,21 @@ public:
     static bool set_autoreport_paused(const bool) { return false; }
   #endif
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     /**
      * States for managing Marlin and host communication
      * Marlin sends messages if blocked or busy
      */
     enum MarlinBusyState : char {
       NOT_BUSY,           // Not in a handler
-      IN_HANDLER,         // Processing a GCode
+      IN_HANDLER,         // Processing a G-Code
       IN_PROCESS,         // Known to be blocking command input (as in G29)
       PAUSED_FOR_USER,    // Blocking pending any input
       PAUSED_FOR_INPUT    // Blocking pending text input (concept)
     };
 
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 
     static void host_keepalive();
     static bool host_keepalive_is_paused() { return busy_state >= PAUSED_FOR_USER; }

commit e9b9d634c4ef5d48791de84545ef86d46909fec0
Author: Andrew Bortz <andrew@abortz.net>
Date:   Tue Oct 10 20:24:48 2023 -0700

    ‚ú® Nonlinear Extrusion Control (M592) (#26127)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index f9ee81f2eb..5e6e400cf1 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -252,20 +252,21 @@
  * M510 - Lock Printer (Requires PASSWORD_FEATURE)
  * M511 - Unlock Printer (Requires PASSWORD_UNLOCK_GCODE)
  * M512 - Set/Change/Remove Password (Requires PASSWORD_CHANGE_GCODE)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M552 - Get or set IP address. Enable/disable network interface. (Requires enabled Ethernet port)
  * M553 - Get or set IP netmask. (Requires enabled Ethernet port)
  * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M575 - Change the serial baud rate. (Requires BAUD_RATE_GCODE)
+ * M592 - Get or set nonlinear extrusion parameters. (Requires NONLINEAR_EXTRUSION)
  * M593 - Get or set input shaping parameters. (Requires INPUT_SHAPING_[XY])
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  *        Set SCARA configurations: "M665 S<segments-per-second> P<theta-psi-offset> T<theta-offset> Z<z-offset> (Requires MORGAN_SCARA or MP_SCARA)
  *        Set Polargraph draw area and belt length: "M665 S<segments-per-second> L<draw-area-left> R<draw-area-right> T<draw-area-top> B<draw-area-bottom> H<max-belt-length>"
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
@@ -1099,20 +1100,25 @@ private:
 
   #if HAS_STEALTHCHOP
     static void M569();
     static void M569_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(BAUD_RATE_GCODE)
     static void M575();
   #endif
 
+  #if ENABLED(NONLINEAR_EXTRUSION)
+    static void M592();
+    static void M592_report(const bool forReplay=true);
+  #endif
+
   #if HAS_ZV_SHAPING
     static void M593();
     static void M593_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
     static void M603_report(const bool forReplay=true);
   #endif

commit 9135e3f7d3fd0d634656f1c54c70a0ba1f878bfd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 20 21:10:03 2023 -0500

    üö∏ Revert M206 Home Offset behavior (#25996)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 23f245faa1..f9ee81f2eb 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -853,21 +853,21 @@ private:
     static void M202(); // Not used for Sprinter/grbl gen6
   #endif
 
   static void M203();
   static void M203_report(const bool forReplay=true);
   static void M204();
   static void M204_report(const bool forReplay=true);
   static void M205();
   static void M205_report(const bool forReplay=true);
 
-  #if HAS_M206_COMMAND
+  #if HAS_HOME_OFFSET
     static void M206();
     static void M206_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(FWRETRACT)
     static void M207();
     static void M207_report(const bool forReplay=true);
     static void M208();
     static void M208_report(const bool forReplay=true);
     #if ENABLED(FWRETRACT_AUTORETRACT)
@@ -1036,21 +1036,21 @@ private:
     static void M420();
     static void M420_report(const bool forReplay=true);
     static void M421();
   #endif
 
   #if ENABLED(BACKLASH_GCODE)
     static void M425();
     static void M425_report(const bool forReplay=true);
   #endif
 
-  #if HAS_M206_COMMAND
+  #if HAS_HOME_OFFSET
     static void M428();
   #endif
 
   #if HAS_POWER_MONITOR
     static void M430();
   #endif
 
   #if ENABLED(CANCEL_OBJECTS)
     static void M486();
   #endif

commit 402c4ef5d3de2b22efd73111222ee7d1f1f6b25f
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Sun Jun 25 15:32:56 2023 -0700

    üö∏ M86-M87 Hotend Idle Timeout (#25015)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 4bd0ec2fec..23f245faa1 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -704,20 +704,27 @@ private:
     static void M80();
   #endif
   static void M81();
 
   #if HAS_EXTRUDERS
     static void M82();
     static void M83();
   #endif
 
   static void M85();
+
+  #if ENABLED(HOTEND_IDLE_TIMEOUT)
+    static void M86();
+    static void M86_report(const bool forReplay=true);
+    static void M87();
+  #endif
+
   static void M92();
   static void M92_report(const bool forReplay=true, const int8_t e=-1);
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
   #if ENABLED(BD_SENSOR)
     static void M102();
   #endif

commit 441416728cd7f0e9b6ebf94f895d1d27fe59d25a
Author: Mark <niujl123@sina.com>
Date:   Sun Jun 18 17:18:08 2023 +0800

    üö∏ Bed distance sensor improvements (#25847)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 73729491ad..4bd0ec2fec 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -713,21 +713,20 @@ private:
   static void M85();
   static void M92();
   static void M92_report(const bool forReplay=true, const int8_t e=-1);
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
   #if ENABLED(BD_SENSOR)
     static void M102();
-    static void M102_report(const bool forReplay=true);
   #endif
 
   #if HAS_HOTEND
     static void M104_M109(const bool isM109);
     FORCE_INLINE static void M104() { M104_M109(false); }
     FORCE_INLINE static void M109() { M104_M109(true); }
   #endif
 
   static void M105();
 

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 52e8fbf802..73729491ad 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -329,21 +329,21 @@
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
-#if EITHER(IS_SCARA, POLAR) || defined(G0_FEEDRATE)
+#if ANY(IS_SCARA, POLAR) || defined(G0_FEEDRATE)
   #define HAS_FAST_MOVES 1
 #endif
 
 enum AxisRelative : uint8_t {
   LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z, REL_I, REL_J, REL_K, REL_U, REL_V, REL_W)
   #if HAS_EXTRUDERS
     , E_MODE_ABS, E_MODE_REL
   #endif
   , NUM_REL_MODES
 };
@@ -435,21 +435,21 @@ public:
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now(FSTR_P fgcode);
   static void process_subcommands_now(char * gcode);
 
   static void home_all_axes(const bool keep_leveling=false) {
     process_subcommands_now(keep_leveling ? FPSTR(G28_STR) : TERN(CAN_SET_LEVELING_AFTER_G28, F("G28L0"), FPSTR(G28_STR)));
   }
 
-  #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
+  #if ANY(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
     static bool autoreport_paused;
     static bool set_autoreport_paused(const bool p) {
       const bool was = autoreport_paused;
       autoreport_paused = p;
       return was;
     }
   #else
     static constexpr bool autoreport_paused = false;
     static bool set_autoreport_paused(const bool) { return false; }
   #endif
@@ -585,21 +585,21 @@ private:
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();
     static void G58();
     static void G59();
   #endif
 
-  #if BOTH(PTC_PROBE, PTC_BED)
+  #if ALL(PTC_PROBE, PTC_BED)
     static void G76();
   #endif
 
   #if SAVED_POSITIONS
     static void G60();
     static void G61();
   #endif
 
   #if ENABLED(GCODE_MOTION_MODES)
     static void G80();
@@ -617,25 +617,25 @@ private:
 
   #if HAS_CUTTER
     static void M3_M4(const bool is_M4);
     static void M5();
   #endif
 
   #if ENABLED(COOLANT_MIST)
     static void M7();
   #endif
 
-  #if EITHER(AIR_ASSIST, COOLANT_FLOOD)
+  #if ANY(AIR_ASSIST, COOLANT_FLOOD)
     static void M8();
   #endif
 
-  #if EITHER(AIR_ASSIST, COOLANT_CONTROL)
+  #if ANY(AIR_ASSIST, COOLANT_CONTROL)
     static void M9();
   #endif
 
   #if ENABLED(AIR_EVACUATION)
     static void M10();
     static void M11();
   #endif
 
   #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
     static void M12();
@@ -665,21 +665,21 @@ private:
 
   static void M31();
 
   #if HAS_MEDIA
     #if HAS_MEDIA_SUBCALLS
       static void M32();
     #endif
     #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
       static void M33();
     #endif
-    #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
+    #if ALL(SDCARD_SORT_ALPHA, SDSORT_GCODE)
       static void M34();
     #endif
   #endif
 
   #if ENABLED(DIRECT_PIN_CONTROL)
     static void M42();
   #endif
   #if ENABLED(PINS_DEBUGGING)
     static void M43();
   #endif
@@ -814,21 +814,21 @@ private:
   #endif
 
   #if HAS_COLOR_LEDS
     static void M150();
   #endif
 
   #if ENABLED(AUTO_REPORT_POSITION)
     static void M154();
   #endif
 
-  #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
+  #if ALL(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
     static void M155();
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
     static void M164();
     #if ENABLED(DIRECT_MIXING_IN_G1)
       static void M165();
     #endif
     #if ENABLED(GRADIENT_MIX)
@@ -986,21 +986,21 @@ private:
   #endif
 
   #if ENABLED(MORGAN_SCARA)
     static bool M360();
     static bool M361();
     static bool M362();
     static bool M363();
     static bool M364();
   #endif
 
-  #if EITHER(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
+  #if ANY(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
     static void M380();
     static void M381();
   #endif
 
   static void M400();
 
   #if HAS_BED_PROBE
     static void M401();
     static void M402();
   #endif
@@ -1113,21 +1113,21 @@ private:
 
   #if HAS_DUPLICATION_MODE
     static void M605();
   #endif
 
   #if IS_KINEMATIC
     static void M665();
     static void M665_report(const bool forReplay=true);
   #endif
 
-  #if EITHER(DELTA, HAS_EXTRA_ENDSTOPS)
+  #if ANY(DELTA, HAS_EXTRA_ENDSTOPS)
     static void M666();
     static void M666_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(DUET_SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
     static void M672();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();

commit 772e19aab988b5d6466bdf2e8948c8c7eee3cafd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 22:10:40 2023 -0500

    ‚ú® EP_BABYSTEPPING (#25869)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9283a92e39..52e8fbf802 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -923,20 +923,24 @@ private:
       static void M281();
       static void M281_report(const bool forReplay=true);
     #endif
     #if ENABLED(SERVO_DETACH_GCODE)
       static void M282();
     #endif
   #endif
 
   #if ENABLED(BABYSTEPPING)
     static void M290();
+    #if ENABLED(EP_BABYSTEPPING)
+      static void M293();
+      static void M294();
+    #endif
   #endif
 
   #if HAS_SOUND
     static void M300();
   #endif
 
   #if ENABLED(PIDTEMP)
     static void M301();
     static void M301_report(const bool forReplay=true E_OPTARG(const int8_t eindex=-1));
   #endif

commit ed66f498eb713f59f14d000f8bfa550b34ce8528
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue May 16 02:38:24 2023 -0500

    üö∏ Fixed-Time Motion EEPROM and Menu (#25835)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index eb465ea7c3..9283a92e39 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1040,20 +1040,21 @@ private:
   #if HAS_POWER_MONITOR
     static void M430();
   #endif
 
   #if ENABLED(CANCEL_OBJECTS)
     static void M486();
   #endif
 
   #if ENABLED(FT_MOTION)
     static void M493();
+    static void M493_report(const bool forReplay=true);
   #endif
 
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
   #if ENABLED(EEPROM_SETTINGS)
     static void M504();

commit 1234e6af528710c7be4f0c9878a023d69fb7f3fe
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 30 18:05:56 2023 -0500

    üßë‚Äçüíª Axis relative flags type

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 75a60b4dd7..eb465ea7c3 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -338,28 +338,34 @@
 
 #if EITHER(IS_SCARA, POLAR) || defined(G0_FEEDRATE)
   #define HAS_FAST_MOVES 1
 #endif
 
 enum AxisRelative : uint8_t {
   LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z, REL_I, REL_J, REL_K, REL_U, REL_V, REL_W)
   #if HAS_EXTRUDERS
     , E_MODE_ABS, E_MODE_REL
   #endif
+  , NUM_REL_MODES
 };
+typedef bits_t(NUM_REL_MODES) relative_t;
 
 extern const char G28_STR[];
 
 class GcodeSuite {
 public:
 
-  static axis_bits_t axis_relative;
+  static relative_t axis_relative;
+
+  GcodeSuite() { // Relative motion mode for each logical axis
+    axis_relative = AxisBits(AXIS_RELATIVE_MODES).bits;
+  }
 
   static bool axis_is_relative(const AxisEnum a) {
     #if HAS_EXTRUDERS
       if (a == E_AXIS) {
         if (TEST(axis_relative, E_MODE_REL)) return true;
         if (TEST(axis_relative, E_MODE_ABS)) return false;
       }
     #endif
     return TEST(axis_relative, a);
   }

commit e1f6435d4410478930ef5fb7d99a311332f3cee8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue May 2 17:59:27 2023 -0500

    ‚ú® Creality STM32F401RE board (e.g., Ender-5 S1) (#25773)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 05175abd9d..75a60b4dd7 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -293,20 +293,21 @@
  * M906 - Set or get motor current in milliamps using axis codes XYZE, etc. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires HAS_MOTOR_CURRENT_DAC or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires HAS_MOTOR_CURRENT_DAC)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires HAS_MOTOR_CURRENT_DAC)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  * M919 - Get or Set motor Chopper Times (time_off, hysteresis_end, hysteresis_start) using axis codes XYZE, etc. If no parameters are given, report. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
+ * M936 - OTA update firmware. (Requires OTA_FIRMWARE_UPDATE)
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
  * M3426 - Read MCP3426 ADC over I2C. (Requires HAS_MCP3426_ADC)
  * M7219 - Control Max7219 Matrix LEDs. (Requires MAX7219_GCODE)
  *
  *** SCARA ***
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
@@ -1192,20 +1193,24 @@ private:
   #endif
   #if HAS_MOTOR_CURRENT_DAC
     static void M909();
     static void M910();
   #endif
 
   #if HAS_MEDIA
     static void M928();
   #endif
 
+  #if ENABLED(OTA_FIRMWARE_UPDATE)
+    static void M936();
+  #endif
+
   #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
     static void M951();
   #endif
 
   #if ENABLED(TOUCH_SCREEN_CALIBRATION)
     static void M995();
   #endif
 
   #if SPI_FLASH_BACKUP
     static void M993();

commit 9a7d9e6995f4f66c4b48147ec7876d49d4b3ae77
Author: Martin Turski <turningtides@outlook.de>
Date:   Thu Apr 27 14:05:24 2023 +0200

    üßë‚Äçüíª Optimize PlatformIO source filtering (#25332)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6a66fa911a..05175abd9d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1200,21 +1200,21 @@ private:
   #endif
 
   #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
     static void M951();
   #endif
 
   #if ENABLED(TOUCH_SCREEN_CALIBRATION)
     static void M995();
   #endif
 
-  #if BOTH(SPI_FLASH, HAS_MEDIA)
+  #if SPI_FLASH_BACKUP
     static void M993();
     static void M994();
   #endif
 
   #if ENABLED(PLATFORM_M997_SUPPORT)
     static void M997();
   #endif
 
   static void M999();
 

commit 5664c02d077e028f84a24efd96c2eebe97ce8763
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 22:43:09 2023 -0500

    üßë‚Äçüíª Generalize SDSUPPORT as HAS_MEDIA
    
    In preparation for single- and multi-volume refactoring.

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index d49c544623..6a66fa911a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -635,37 +635,37 @@ private:
   #endif
 
   #if ENABLED(EXPECTED_PRINTER_CHECK)
     static void M16();
   #endif
 
   static void M17();
 
   static void M18_M84();
 
-  #if ENABLED(SDSUPPORT)
+  #if HAS_MEDIA
     static void M20();
     static void M21();
     static void M22();
     static void M23();
     static void M24();
     static void M25();
     static void M26();
     static void M27();
     static void M28();
     static void M29();
     static void M30();
   #endif
 
   static void M31();
 
-  #if ENABLED(SDSUPPORT)
+  #if HAS_MEDIA
     #if HAS_MEDIA_SUBCALLS
       static void M32();
     #endif
     #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
       static void M33();
     #endif
     #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
       static void M34();
     #endif
   #endif
@@ -1055,21 +1055,21 @@ private:
   #if ENABLED(PASSWORD_FEATURE)
     static void M510();
     #if ENABLED(PASSWORD_UNLOCK_GCODE)
       static void M511();
     #endif
     #if ENABLED(PASSWORD_CHANGE_GCODE)
       static void M512();
     #endif
   #endif
 
-  #if ENABLED(SDSUPPORT)
+  #if HAS_MEDIA
     static void M524();
   #endif
 
   #if ENABLED(SD_ABORT_ON_ENDSTOP_HIT)
     static void M540();
   #endif
 
   #if HAS_ETHERNET
     static void M552();
     static void M552_report();
@@ -1188,33 +1188,33 @@ private:
     #endif
   #endif
   #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_DAC
     static void M908();
   #endif
   #if HAS_MOTOR_CURRENT_DAC
     static void M909();
     static void M910();
   #endif
 
-  #if ENABLED(SDSUPPORT)
+  #if HAS_MEDIA
     static void M928();
   #endif
 
   #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
     static void M951();
   #endif
 
   #if ENABLED(TOUCH_SCREEN_CALIBRATION)
     static void M995();
   #endif
 
-  #if BOTH(SPI_FLASH, SDSUPPORT)
+  #if BOTH(SPI_FLASH, HAS_MEDIA)
     static void M993();
     static void M994();
   #endif
 
   #if ENABLED(PLATFORM_M997_SUPPORT)
     static void M997();
   #endif
 
   static void M999();
 
@@ -1222,21 +1222,21 @@ private:
     static void M413();
     static void M413_report(const bool forReplay=true);
     static void M1000();
   #endif
 
   #if ENABLED(X_AXIS_TWIST_COMPENSATION)
     static void M423();
     static void M423_report(const bool forReplay=true);
   #endif
 
-  #if ENABLED(SDSUPPORT)
+  #if HAS_MEDIA
     static void M1001();
   #endif
 
   #if DGUS_LCD_UI_MKS
     static void M1002();
   #endif
 
   #if ENABLED(UBL_MESH_WIZARD)
     static void M1004();
   #endif

commit c8ed7950f40f9f454fc769b02d53f1086b17576c
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Apr 22 21:09:17 2023 +1200

    üîß Permit extrude without hotend (#25709)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8493d7f291..d49c544623 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -709,21 +709,21 @@ private:
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
   #if ENABLED(BD_SENSOR)
     static void M102();
     static void M102_report(const bool forReplay=true);
   #endif
 
-  #if HAS_EXTRUDERS
+  #if HAS_HOTEND
     static void M104_M109(const bool isM109);
     FORCE_INLINE static void M104() { M104_M109(false); }
     FORCE_INLINE static void M109() { M104_M109(true); }
   #endif
 
   static void M105();
 
   #if HAS_FAN
     static void M106();
     static void M107();

commit c37fa3cc9097a9aa7fad5f168e335caabf23278e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 31 21:18:37 2023 -0500

    ‚ú® Fixed-Time Motion with Input Shaping by Ulendo (#25394)
    
    Co-authored-by: Ulendo Alex <alex@ulendo.io>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index cc3f221a82..8493d7f291 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1031,20 +1031,24 @@ private:
   #endif
 
   #if HAS_POWER_MONITOR
     static void M430();
   #endif
 
   #if ENABLED(CANCEL_OBJECTS)
     static void M486();
   #endif
 
+  #if ENABLED(FT_MOTION)
+    static void M493();
+  #endif
+
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
   #if ENABLED(EEPROM_SETTINGS)
     static void M504();
   #endif
 

commit 8cdf43f8fdf8900ad903d094d1aeb5dc651b324b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 31 20:26:49 2023 -0500

    üé®  HAS_SHAPING => HAS_ZV_SHAPING

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 48e6fd2da8..cc3f221a82 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1077,21 +1077,21 @@ private:
 
   #if HAS_STEALTHCHOP
     static void M569();
     static void M569_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(BAUD_RATE_GCODE)
     static void M575();
   #endif
 
-  #if HAS_SHAPING
+  #if HAS_ZV_SHAPING
     static void M593();
     static void M593_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
     static void M603_report(const bool forReplay=true);
   #endif
 

commit 61f22f34d32ca33d99233eb5b242e52c23aabb23
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Mar 26 17:24:40 2023 -0500

    üîß Clarify axis disable / timeout (#25571)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9bb45d9a43..48e6fd2da8 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -396,21 +396,21 @@ public:
     static xyz_pos_t coordinate_system[MAX_COORDINATE_SYSTEMS];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
   static millis_t previous_move_ms, max_inactive_time;
   FORCE_INLINE static bool stepper_max_timed_out(const millis_t ms=millis()) {
     return max_inactive_time && ELAPSED(ms, previous_move_ms + max_inactive_time);
   }
   FORCE_INLINE static void reset_stepper_timeout(const millis_t ms=millis()) { previous_move_ms = ms; }
 
-  #if HAS_DISABLE_INACTIVE_AXIS
+  #if HAS_DISABLE_IDLE_AXES
     static millis_t stepper_inactive_time;
     FORCE_INLINE static bool stepper_inactive_timeout(const millis_t ms=millis()) {
       return ELAPSED(ms, previous_move_ms + stepper_inactive_time);
     }
   #else
     static bool stepper_inactive_timeout(const millis_t) { return false; }
   #endif
 
   static void report_echo_start(const bool forReplay);
   static void report_heading(const bool forReplay, FSTR_P const fstr, const bool eol=true);

commit 842489a5dc2d4e0c7f80c4bde031355383848360
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 8 19:36:22 2023 -0600

    üêõ Don't skip G2/G3 E-only moves

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9d5621f0c3..9bb45d9a43 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -469,20 +469,23 @@ public:
     #define KEEPALIVE_STATE(N) REMEMBER(_KA_, gcode.busy_state, gcode.N)
   #else
     #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
   friend class MarlinSettings;
+  #if ENABLED(ARC_SUPPORT)
+    friend void plan_arc(const xyze_pos_t&, const ab_float_t&, const bool, const uint8_t);
+  #endif
 
   #if ENABLED(MARLIN_DEV_MODE)
     static void D(const int16_t dcode);
   #endif
 
   static void G0_G1(TERN_(HAS_FAST_MOVES, const bool fast_move=false));
 
   #if ENABLED(ARC_SUPPORT)
     static void G2_G3(const bool clockwise);
   #endif

commit 7717beb79362522b8239d5af62b32ff3d0e2d748
Author: kadir ilkimen <kadirilkimen@gmail.com>
Date:   Wed Jan 11 06:29:38 2023 +0200

    ‚ú® Polar Kinematics (#25214)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index b50d8363a4..9d5621f0c3 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -328,21 +328,21 @@
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
-#if IS_SCARA || defined(G0_FEEDRATE)
+#if EITHER(IS_SCARA, POLAR) || defined(G0_FEEDRATE)
   #define HAS_FAST_MOVES 1
 #endif
 
 enum AxisRelative : uint8_t {
   LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z, REL_I, REL_J, REL_K, REL_U, REL_V, REL_W)
   #if HAS_EXTRUDERS
     , E_MODE_ABS, E_MODE_REL
   #endif
 };
 

commit c3fe4abd446336c50bdb892f08fa24a08f1bdda5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 7 22:59:25 2023 -0600

    üî® DGUS_LCD_UI version check

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 5d56e53dd5..b50d8363a4 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1219,21 +1219,21 @@ private:
 
   #if ENABLED(X_AXIS_TWIST_COMPENSATION)
     static void M423();
     static void M423_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M1001();
   #endif
 
-  #if ENABLED(DGUS_LCD_UI_MKS)
+  #if DGUS_LCD_UI_MKS
     static void M1002();
   #endif
 
   #if ENABLED(UBL_MESH_WIZARD)
     static void M1004();
   #endif
 
   #if ENABLED(HAS_MCP3426_ADC)
     static void M3426();
   #endif

commit 89334caa526f2d300eee834d34d06d8f837a57d5
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Mon Nov 28 03:38:15 2022 +0000

    ‚ö°Ô∏è Input Shaping improvements (#24951)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 0ce8ab3902..5d56e53dd5 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -252,21 +252,21 @@
  * M510 - Lock Printer (Requires PASSWORD_FEATURE)
  * M511 - Unlock Printer (Requires PASSWORD_UNLOCK_GCODE)
  * M512 - Set/Change/Remove Password (Requires PASSWORD_CHANGE_GCODE)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M552 - Get or set IP address. Enable/disable network interface. (Requires enabled Ethernet port)
  * M553 - Get or set IP netmask. (Requires enabled Ethernet port)
  * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M575 - Change the serial baud rate. (Requires BAUD_RATE_GCODE)
- * M593 - Get or set input shaping parameters. (Requires INPUT_SHAPING)
+ * M593 - Get or set input shaping parameters. (Requires INPUT_SHAPING_[XY])
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  *        Set SCARA configurations: "M665 S<segments-per-second> P<theta-psi-offset> T<theta-offset> Z<z-offset> (Requires MORGAN_SCARA or MP_SCARA)
  *        Set Polargraph draw area and belt length: "M665 S<segments-per-second> L<draw-area-left> R<draw-area-right> T<draw-area-top> B<draw-area-bottom> H<max-belt-length>"
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
@@ -1074,21 +1074,21 @@ private:
 
   #if HAS_STEALTHCHOP
     static void M569();
     static void M569_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(BAUD_RATE_GCODE)
     static void M575();
   #endif
 
-  #if ENABLED(INPUT_SHAPING)
+  #if HAS_SHAPING
     static void M593();
     static void M593_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
     static void M603_report(const bool forReplay=true);
   #endif
 

commit a460b01c876ff39901fe55a4b66b2c62737ef46c
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Fri Oct 21 22:34:22 2022 +0100

    üöÄ ZV Input Shaping (#24797)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e2506e4ed9..0ce8ab3902 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -252,20 +252,21 @@
  * M510 - Lock Printer (Requires PASSWORD_FEATURE)
  * M511 - Unlock Printer (Requires PASSWORD_UNLOCK_GCODE)
  * M512 - Set/Change/Remove Password (Requires PASSWORD_CHANGE_GCODE)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M552 - Get or set IP address. Enable/disable network interface. (Requires enabled Ethernet port)
  * M553 - Get or set IP netmask. (Requires enabled Ethernet port)
  * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M575 - Change the serial baud rate. (Requires BAUD_RATE_GCODE)
+ * M593 - Get or set input shaping parameters. (Requires INPUT_SHAPING)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  *        Set SCARA configurations: "M665 S<segments-per-second> P<theta-psi-offset> T<theta-offset> Z<z-offset> (Requires MORGAN_SCARA or MP_SCARA)
  *        Set Polargraph draw area and belt length: "M665 S<segments-per-second> L<draw-area-left> R<draw-area-right> T<draw-area-top> B<draw-area-bottom> H<max-belt-length>"
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
@@ -1073,20 +1074,25 @@ private:
 
   #if HAS_STEALTHCHOP
     static void M569();
     static void M569_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(BAUD_RATE_GCODE)
     static void M575();
   #endif
 
+  #if ENABLED(INPUT_SHAPING)
+    static void M593();
+    static void M593_report(const bool forReplay=true);
+  #endif
+
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
     static void M603_report(const bool forReplay=true);
   #endif
 
   #if HAS_DUPLICATION_MODE
     static void M605();
   #endif
 

commit dd3b65bb1ff41deda223562b24ed230bfa0e0c2a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 17 13:01:45 2022 -0500

    üé® HAS_SPI_FLASH => SPI_FLASH

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index d69298e28b..e2506e4ed9 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1187,21 +1187,21 @@ private:
   #endif
 
   #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
     static void M951();
   #endif
 
   #if ENABLED(TOUCH_SCREEN_CALIBRATION)
     static void M995();
   #endif
 
-  #if BOTH(HAS_SPI_FLASH, SDSUPPORT)
+  #if BOTH(SPI_FLASH, SDSUPPORT)
     static void M993();
     static void M994();
   #endif
 
   #if ENABLED(PLATFORM_M997_SUPPORT)
     static void M997();
   #endif
 
   static void M999();
 

commit f595e40ceb0c79d7f0d6438636658dfcfa2a75b8
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Sun Oct 9 18:30:47 2022 +0300

    ‚ôªÔ∏è Set Progress without LCD (#24767)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2b15706395..d69298e28b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -107,21 +107,21 @@
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  *
  * M42  - Change pin status via G-code: M42 P<pin> S<value>. LED pin assumed if P is omitted. (Requires DIRECT_PIN_CONTROL)
  * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins (Requires PINS_DEBUGGING)
  * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> S<chizoid>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
  *
- * M73  - Set the progress percentage. (Requires LCD_SET_PROGRESS_MANUALLY)
+ * M73  - Set the progress percentage. (Requires SET_PROGRESS_MANUALLY)
  * M75  - Start the print job timer.
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
  *
  * M80  - Turn on Power Supply. (Requires PSU_CONTROL)
  * M81  - Turn off Power Supply. (Requires PSU_CONTROL)
  *
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
@@ -670,21 +670,21 @@ private:
     static void M42();
   #endif
   #if ENABLED(PINS_DEBUGGING)
     static void M43();
   #endif
 
   #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
     static void M48();
   #endif
 
-  #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
+  #if ENABLED(SET_PROGRESS_MANUALLY)
     static void M73();
   #endif
 
   static void M75();
   static void M76();
   static void M77();
 
   #if ENABLED(PRINTCOUNTER)
     static void M78();
   #endif

commit 83320f1052dd09bff7aae789372e7bffccbced97
Author: Mark <niujl123@sina.com>
Date:   Sat Aug 6 14:14:58 2022 +0800

    ‚ú® Bed Distance Sensor (#24554)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 135cfc7f43..2b15706395 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -125,20 +125,22 @@
  *
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.
  * M85  - Set inactivity shutdown timer with parameter S<seconds>. To disable set zero (default)
  * M92  - Set planner.settings.axis_steps_per_mm for one or more axes.
  *
  * M100 - Watch Free Memory (for debugging) (Requires M100_FREE_MEMORY_WATCHER)
  *
+ * M102 - Configure Bed Distance Sensor. (Requires BD_SENSOR)
+ *
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
  * M106 - Set print fan speed.
  * M107 - Print fan off.
  * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
  * M109 - S<temp> Wait for extruder current temp to reach target temp. ** Wait only when heating! **
  *        R<temp> Wait for extruder current temp to reach target temp. ** Wait for heating or cooling. **
  *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
  *
  * M110 - Set the current line number. (Used by host printing)
@@ -698,20 +700,25 @@ private:
   #endif
 
   static void M85();
   static void M92();
   static void M92_report(const bool forReplay=true, const int8_t e=-1);
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
+  #if ENABLED(BD_SENSOR)
+    static void M102();
+    static void M102_report(const bool forReplay=true);
+  #endif
+
   #if HAS_EXTRUDERS
     static void M104_M109(const bool isM109);
     FORCE_INLINE static void M104() { M104_M109(false); }
     FORCE_INLINE static void M109() { M104_M109(true); }
   #endif
 
   static void M105();
 
   #if HAS_FAN
     static void M106();

commit 5f2908a117ab45cf9e5a03a39e499979a40bf0f3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jul 18 19:53:36 2022 -0500

    ‚ôªÔ∏è Small sound / buzz refactor (#24520)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3657ab2b12..135cfc7f43 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -907,21 +907,21 @@ private:
     #endif
     #if ENABLED(SERVO_DETACH_GCODE)
       static void M282();
     #endif
   #endif
 
   #if ENABLED(BABYSTEPPING)
     static void M290();
   #endif
 
-  #if HAS_BUZZER
+  #if HAS_SOUND
     static void M300();
   #endif
 
   #if ENABLED(PIDTEMP)
     static void M301();
     static void M301_report(const bool forReplay=true E_OPTARG(const int8_t eindex=-1));
   #endif
 
   #if ENABLED(PREVENT_COLD_EXTRUSION)
     static void M302();

commit 9706cd0d7dc9e09faec2ed2b5ec106dbd22e5c61
Author: Arthur Masson <arthur.sw@gmail.com>
Date:   Sat Jul 16 23:58:18 2022 +0200

    ‚ú® Polargraph M665 settings (#24401)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e754b6dc3d..3657ab2b12 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -255,20 +255,21 @@
  * M552 - Get or set IP address. Enable/disable network interface. (Requires enabled Ethernet port)
  * M553 - Get or set IP netmask. (Requires enabled Ethernet port)
  * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M575 - Change the serial baud rate. (Requires BAUD_RATE_GCODE)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  *        Set SCARA configurations: "M665 S<segments-per-second> P<theta-psi-offset> T<theta-offset> Z<z-offset> (Requires MORGAN_SCARA or MP_SCARA)
+ *        Set Polargraph draw area and belt length: "M665 S<segments-per-second> L<draw-area-left> R<draw-area-right> T<draw-area-top> B<draw-area-bottom> H<max-belt-length>"
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M808 - Set or Goto a Repeat Marker (Requires GCODE_REPEAT_MARKERS)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's XYZ offsets in current units. (Negative values: X=left, Y=front, Z=below)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, plus SKEW_CORRECTION_FOR_Z for IJ)
  *
  *** I2C_POSITION_ENCODERS ***

commit 3f4e4a4d891e3c4b73ab80aedec46e69c1b59f0d
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Jul 13 22:16:22 2022 -0500

    üî• Drop STM L64** drivers, STEVAL_3DP001V1 (#24427)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a6b530a268..e754b6dc3d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -148,21 +148,21 @@
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  *
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
  *
- * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
+ * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M123 - Report fan tachometers. (Requires En_FAN_TACHO_PIN) Optionally set auto-report interval. (Requires AUTO_REPORT_FANS)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  *
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  *
  * M140 - Set bed target temp. S<temp>
  * M141 - Set heated chamber target temp. S<temp> (Requires a chamber heater)
@@ -279,32 +279,29 @@
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  *
  * M871 - Print/reset/clear first layer temperature offset values. (Requires PTC_PROBE, PTC_BED, or PTC_HOTEND)
  * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
- * M906 - Set or get motor current in milliamps using axis codes XYZE, etc. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
+ * M906 - Set or get motor current in milliamps using axis codes XYZE, etc. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires HAS_MOTOR_CURRENT_DAC or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires HAS_MOTOR_CURRENT_DAC)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires HAS_MOTOR_CURRENT_DAC)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
- * M916 - L6470 tuning: Increase KVAL_HOLD until thermal warning. (Requires at least one _DRIVER_TYPE L6470)
- * M917 - L6470 tuning: Find minimum current thresholds. (Requires at least one _DRIVER_TYPE L6470)
- * M918 - L6470 tuning: Increase speed until max or error. (Requires at least one _DRIVER_TYPE L6470)
  * M919 - Get or Set motor Chopper Times (time_off, hysteresis_end, hysteresis_start) using axis codes XYZE, etc. If no parameters are given, report. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
  * M3426 - Read MCP3426 ADC over I2C. (Requires HAS_MCP3426_ADC)
  * M7219 - Control Max7219 Matrix LEDs. (Requires MAX7219_GCODE)
  *
  *** SCARA ***
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
@@ -1156,28 +1153,20 @@ private:
       static void M913();
       static void M913_report(const bool forReplay=true);
     #endif
     #if USE_SENSORLESS
       static void M914();
       static void M914_report(const bool forReplay=true);
     #endif
     static void M919();
   #endif
 
-  #if HAS_L64XX
-    static void M122();
-    static void M906();
-    static void M916();
-    static void M917();
-    static void M918();
-  #endif
-
   #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM || HAS_MOTOR_CURRENT_I2C || HAS_MOTOR_CURRENT_DAC
     static void M907();
     #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM
       static void M907_report(const bool forReplay=true);
     #endif
   #endif
   #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_DAC
     static void M908();
   #endif
   #if HAS_MOTOR_CURRENT_DAC

commit f65f7a685bea9f4eddaf2049e4435f2043b88ffe
Author: Jason Smith <jason.inet@gmail.com>
Date:   Thu Jul 7 21:43:56 2022 -0700

    ü©π Fix LCD_BACKLIGHT_TIMEOUT compile (#24463)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 1efcb1cf93..a6b530a268 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -879,21 +879,21 @@ private:
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif
 
   #if HAS_LCD_CONTRAST
     static void M250();
     static void M250_report(const bool forReplay=true);
   #endif
 
-  #if HAS_DISPLAY_SLEEP
+  #if HAS_GCODE_M255
     static void M255();
     static void M255_report(const bool forReplay=true);
   #endif
 
   #if HAS_LCD_BRIGHTNESS
     static void M256();
     static void M256_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)

commit 85c0875db28477d7ed6515c39376b93407353b27
Author: John Robertson <john@cirtech.co.uk>
Date:   Tue May 31 23:09:44 2022 +0100

    ‚ú® Laser Safety Timeout (#24189)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 150cbab4c2..1efcb1cf93 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -389,28 +389,34 @@ public:
     static WorkspacePlane workspace_plane;
   #endif
 
   #define MAX_COORDINATE_SYSTEMS 9
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static int8_t active_coordinate_system;
     static xyz_pos_t coordinate_system[MAX_COORDINATE_SYSTEMS];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
-  static millis_t previous_move_ms, max_inactive_time, stepper_inactive_time;
-  FORCE_INLINE static void reset_stepper_timeout(const millis_t ms=millis()) { previous_move_ms = ms; }
+  static millis_t previous_move_ms, max_inactive_time;
   FORCE_INLINE static bool stepper_max_timed_out(const millis_t ms=millis()) {
     return max_inactive_time && ELAPSED(ms, previous_move_ms + max_inactive_time);
   }
-  FORCE_INLINE static bool stepper_inactive_timeout(const millis_t ms=millis()) {
-    return ELAPSED(ms, previous_move_ms + stepper_inactive_time);
-  }
+  FORCE_INLINE static void reset_stepper_timeout(const millis_t ms=millis()) { previous_move_ms = ms; }
+
+  #if HAS_DISABLE_INACTIVE_AXIS
+    static millis_t stepper_inactive_time;
+    FORCE_INLINE static bool stepper_inactive_timeout(const millis_t ms=millis()) {
+      return ELAPSED(ms, previous_move_ms + stepper_inactive_time);
+    }
+  #else
+    static bool stepper_inactive_timeout(const millis_t) { return false; }
+  #endif
 
   static void report_echo_start(const bool forReplay);
   static void report_heading(const bool forReplay, FSTR_P const fstr, const bool eol=true);
   static void report_heading_etc(const bool forReplay, FSTR_P const fstr, const bool eol=true) {
     report_heading(forReplay, fstr, eol);
     report_echo_start(forReplay);
   }
   static void say_units();
 
   static int8_t get_target_extruder_from_command();

commit 58ce5182c2ea93e79ccaef4c912c68aa554e637e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 31 12:43:44 2022 -0500

    üé® Fix spelling, whitespace

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 215d0d4f9b..150cbab4c2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -103,21 +103,21 @@
  * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
  * M29  - Stop SD write. (Requires SDSUPPORT)
  * M30  - Delete file from SD: "M30 /path/file.gco" (Requires SDSUPPORT)
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  *
- * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted. (Requires DIRECT_PIN_CONTROL)
+ * M42  - Change pin status via G-code: M42 P<pin> S<value>. LED pin assumed if P is omitted. (Requires DIRECT_PIN_CONTROL)
  * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins (Requires PINS_DEBUGGING)
  * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> S<chizoid>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
  *
  * M73  - Set the progress percentage. (Requires LCD_SET_PROGRESS_MANUALLY)
  * M75  - Start the print job timer.
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
  *
  * M80  - Turn on Power Supply. (Requires PSU_CONTROL)

commit 32e6767b5acfc57ced0a58c269ff5ae1d6f5cfd2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 4 15:57:03 2022 -0500

    ‚ú® DOGM Display Sleep (#23992)
    
    Co-authored-by: borland1 <barryorlando@hotmail.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a4ce273e51..215d0d4f9b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -195,20 +195,21 @@
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  *        Use "M220 B" to back up the Feedrate Percentage and "M220 R" to restore it. (Requires an MMU_MODEL version 2 or 2S)
  * M221 - Set Flow Percentage: "M221 S<percent>" (Requires an extruder)
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>" (Requires DIRECT_PIN_CONTROL)
  * M240 - Trigger a camera to take a photograph. (Requires PHOTO_GCODE)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
+ * M255 - Set LCD sleep time: "M255 S<minutes>" (0-99). (Requires an LCD with brightness or sleep/wake)
  * M256 - Set LCD brightness: "M256 B<brightness>" (0-255). (Requires an LCD with brightness control)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M282 - Detach servo: "M282 P<index>". (Requires SERVO_DETACH_GCODE)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
@@ -872,20 +873,25 @@ private:
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif
 
   #if HAS_LCD_CONTRAST
     static void M250();
     static void M250_report(const bool forReplay=true);
   #endif
 
+  #if HAS_DISPLAY_SLEEP
+    static void M255();
+    static void M255_report(const bool forReplay=true);
+  #endif
+
   #if HAS_LCD_BRIGHTNESS
     static void M256();
     static void M256_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 

commit 72b2e2b2c7230245dea9fcb46b9b8a92bcb11bcc
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Fri Apr 1 08:14:14 2022 +0100

    ‚öóÔ∏è Temperature Model Predictive Control (#23751)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3ec27710b4..a4ce273e51 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -208,20 +208,21 @@
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M282 - Detach servo: "M282 P<index>". (Requires SERVO_DETACH_GCODE)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M305 - Set user thermistor parameters R T and P. (Requires TEMP_SENSOR_x 1000)
+ * M306 - MPC autotune. (Requires MPCTEMP)
  * M309 - Set chamber PID parameters P I and D. (Requires PIDTEMPCHAMBER)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
  * M380 - Activate solenoid on active tool (Requires EXT_SOLENOID) or the tool specified by 'S' (Requires MANUAL_SOLENOID_CONTROL).
  * M381 - Disable solenoids on all tools (Requires EXT_SOLENOID) or the tool specified by 'S' (Requires MANUAL_SOLENOID_CONTROL).
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M403 - Set filament type for PRUSA MMU2
@@ -922,20 +923,25 @@ private:
 
   #if ENABLED(PIDTEMPBED)
     static void M304();
     static void M304_report(const bool forReplay=true);
   #endif
 
   #if HAS_USER_THERMISTORS
     static void M305();
   #endif
 
+  #if ENABLED(MPCTEMP)
+    static void M306();
+    static void M306_report(const bool forReplay=true);
+  #endif
+
   #if ENABLED(PIDTEMPCHAMBER)
     static void M309();
     static void M309_report(const bool forReplay=true);
   #endif
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 61fe6cb9d9..3ec27710b4 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -330,21 +330,21 @@
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
 #if IS_SCARA || defined(G0_FEEDRATE)
   #define HAS_FAST_MOVES 1
 #endif
 
 enum AxisRelative : uint8_t {
-  LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z, REL_I, REL_J, REL_K)
+  LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z, REL_I, REL_J, REL_K, REL_U, REL_V, REL_W)
   #if HAS_EXTRUDERS
     , E_MODE_ABS, E_MODE_REL
   #endif
 };
 
 extern const char G28_STR[];
 
 class GcodeSuite {
 public:
 
@@ -356,21 +356,22 @@ public:
         if (TEST(axis_relative, E_MODE_REL)) return true;
         if (TEST(axis_relative, E_MODE_ABS)) return false;
       }
     #endif
     return TEST(axis_relative, a);
   }
   static void set_relative_mode(const bool rel) {
     axis_relative = rel ? (0 LOGICAL_AXIS_GANG(
       | _BV(REL_E),
       | _BV(REL_X), | _BV(REL_Y), | _BV(REL_Z),
-      | _BV(REL_I), | _BV(REL_J), | _BV(REL_K)
+      | _BV(REL_I), | _BV(REL_J), | _BV(REL_K),
+      | _BV(REL_U), | _BV(REL_V), | _BV(REL_W)
     )) : 0;
   }
   #if HAS_EXTRUDERS
     static void set_e_relative() {
       CBI(axis_relative, E_MODE_ABS);
       SBI(axis_relative, E_MODE_REL);
     }
     static void set_e_absolute() {
       CBI(axis_relative, E_MODE_REL);
       SBI(axis_relative, E_MODE_ABS);

commit d3e3e6a4917969eba85f88e5de0366cc9a2eb4f1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 22 18:14:17 2022 -0500

    ü©π No PE_MAGNET_ON_STATE without PARKING_EXTRUDER

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6e331c1273..61fe6cb9d9 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -212,22 +212,22 @@
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M305 - Set user thermistor parameters R T and P. (Requires TEMP_SENSOR_x 1000)
  * M309 - Set chamber PID parameters P I and D. (Requires PIDTEMPCHAMBER)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
- * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
- * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
+ * M380 - Activate solenoid on active tool (Requires EXT_SOLENOID) or the tool specified by 'S' (Requires MANUAL_SOLENOID_CONTROL).
+ * M381 - Disable solenoids on all tools (Requires EXT_SOLENOID) or the tool specified by 'S' (Requires MANUAL_SOLENOID_CONTROL).
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M403 - Set filament type for PRUSA MMU2
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M412 - Enable / Disable Filament Runout Detection. (Requires FILAMENT_RUNOUT_SENSOR)

commit df4e022a48667369fcc94dfda56505eb3ba2019f
Author: Giuseppe499 <giuseppe499@live.it>
Date:   Sat Mar 12 00:12:03 2022 +0100

    üö∏ Fix, extend X Axis Twist Compensation (#23745)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a150aca41d..6e331c1273 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1188,20 +1188,25 @@ private:
   #endif
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M413_report(const bool forReplay=true);
     static void M1000();
   #endif
 
+  #if ENABLED(X_AXIS_TWIST_COMPENSATION)
+    static void M423();
+    static void M423_report(const bool forReplay=true);
+  #endif
+
   #if ENABLED(SDSUPPORT)
     static void M1001();
   #endif
 
   #if ENABLED(DGUS_LCD_UI_MKS)
     static void M1002();
   #endif
 
   #if ENABLED(UBL_MESH_WIZARD)
     static void M1004();

commit 9ea6a588c36760b3d53d06748cfc58b4204580e7
Author: kisslorand <50251547+kisslorand@users.noreply.github.com>
Date:   Mon Feb 28 04:38:11 2022 +0200

    ‚ú® M21 P / S / U - Select Volume (#23780)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 78dd0bc680..a150aca41d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -84,21 +84,21 @@
  * M9   - Turn coolant OFF. (Requires COOLANT_CONTROL)
  * M10  - Turn Vacuum or Blower motor ON (Requires AIR_EVACUATION)
  * M11  - Turn Vacuum or Blower motor OFF (Requires AIR_EVACUATION)
  * M12  - Set up closed loop control system. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
  * M16  - Expected printer check. (Requires EXPECTED_PRINTER_CHECK)
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  *
  *** Print from Media (SDSUPPORT) ***
  * M20  - List SD card. (Requires SDSUPPORT)
- * M21  - Init SD card. (Requires SDSUPPORT)
+ * M21  - Init SD card. (Requires SDSUPPORT) With MULTI_VOLUME select a drive with `M21 Pn` / 'M21 S' / 'M21 U'.
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
  * M27  - Report SD print status. (Requires SDSUPPORT)
  *        OR, with 'S<seconds>' set the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
  *        OR, with 'C' get the current filename.
  * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
  * M29  - Stop SD write. (Requires SDSUPPORT)

commit 6fbfeb68010e63c76b545e2c27aeb48ee73be68b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 1 22:54:27 2022 -0600

    ‚ú® M919 : Chopper Timing (#23400)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 92c1459a32..78dd0bc680 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -289,20 +289,21 @@
  * M908 - Control digital trimpot directly. (Requires HAS_MOTOR_CURRENT_DAC or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires HAS_MOTOR_CURRENT_DAC)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires HAS_MOTOR_CURRENT_DAC)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  * M916 - L6470 tuning: Increase KVAL_HOLD until thermal warning. (Requires at least one _DRIVER_TYPE L6470)
  * M917 - L6470 tuning: Find minimum current thresholds. (Requires at least one _DRIVER_TYPE L6470)
  * M918 - L6470 tuning: Increase speed until max or error. (Requires at least one _DRIVER_TYPE L6470)
+ * M919 - Get or Set motor Chopper Times (time_off, hysteresis_end, hysteresis_start) using axis codes XYZE, etc. If no parameters are given, report. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
  * M3426 - Read MCP3426 ADC over I2C. (Requires HAS_MCP3426_ADC)
  * M7219 - Control Max7219 Matrix LEDs. (Requires MAX7219_GCODE)
  *
  *** SCARA ***
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
@@ -1133,20 +1134,21 @@ private:
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
       static void M913_report(const bool forReplay=true);
     #endif
     #if USE_SENSORLESS
       static void M914();
       static void M914_report(const bool forReplay=true);
     #endif
+    static void M919();
   #endif
 
   #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 

commit 6fb2d8a25f096d084348a6f6930f515d947474d4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 02:57:24 2021 -0600

    üßë‚Äçüíª Remove extraneous 'inline' hints

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 262237d14c..92c1459a32 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -342,42 +342,42 @@ enum AxisRelative : uint8_t {
   #endif
 };
 
 extern const char G28_STR[];
 
 class GcodeSuite {
 public:
 
   static axis_bits_t axis_relative;
 
-  static inline bool axis_is_relative(const AxisEnum a) {
+  static bool axis_is_relative(const AxisEnum a) {
     #if HAS_EXTRUDERS
       if (a == E_AXIS) {
         if (TEST(axis_relative, E_MODE_REL)) return true;
         if (TEST(axis_relative, E_MODE_ABS)) return false;
       }
     #endif
     return TEST(axis_relative, a);
   }
-  static inline void set_relative_mode(const bool rel) {
+  static void set_relative_mode(const bool rel) {
     axis_relative = rel ? (0 LOGICAL_AXIS_GANG(
       | _BV(REL_E),
       | _BV(REL_X), | _BV(REL_Y), | _BV(REL_Z),
       | _BV(REL_I), | _BV(REL_J), | _BV(REL_K)
     )) : 0;
   }
   #if HAS_EXTRUDERS
-    static inline void set_e_relative() {
+    static void set_e_relative() {
       CBI(axis_relative, E_MODE_ABS);
       SBI(axis_relative, E_MODE_REL);
     }
-    static inline void set_e_absolute() {
+    static void set_e_absolute() {
       CBI(axis_relative, E_MODE_REL);
       SBI(axis_relative, E_MODE_ABS);
     }
   #endif
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     /**
      * Workspace planes only apply to G2/G3 moves
      * (and "canned cycles" - not a current feature)
      */
@@ -396,71 +396,71 @@ public:
   FORCE_INLINE static void reset_stepper_timeout(const millis_t ms=millis()) { previous_move_ms = ms; }
   FORCE_INLINE static bool stepper_max_timed_out(const millis_t ms=millis()) {
     return max_inactive_time && ELAPSED(ms, previous_move_ms + max_inactive_time);
   }
   FORCE_INLINE static bool stepper_inactive_timeout(const millis_t ms=millis()) {
     return ELAPSED(ms, previous_move_ms + stepper_inactive_time);
   }
 
   static void report_echo_start(const bool forReplay);
   static void report_heading(const bool forReplay, FSTR_P const fstr, const bool eol=true);
-  static inline void report_heading_etc(const bool forReplay, FSTR_P const fstr, const bool eol=true) {
+  static void report_heading_etc(const bool forReplay, FSTR_P const fstr, const bool eol=true) {
     report_heading(forReplay, fstr, eol);
     report_echo_start(forReplay);
   }
   static void say_units();
 
   static int8_t get_target_extruder_from_command();
   static int8_t get_target_e_stepper_from_command(const int8_t dval=-1);
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now(FSTR_P fgcode);
   static void process_subcommands_now(char * gcode);
 
-  static inline void home_all_axes(const bool keep_leveling=false) {
+  static void home_all_axes(const bool keep_leveling=false) {
     process_subcommands_now(keep_leveling ? FPSTR(G28_STR) : TERN(CAN_SET_LEVELING_AFTER_G28, F("G28L0"), FPSTR(G28_STR)));
   }
 
   #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
     static bool autoreport_paused;
-    static inline bool set_autoreport_paused(const bool p) {
+    static bool set_autoreport_paused(const bool p) {
       const bool was = autoreport_paused;
       autoreport_paused = p;
       return was;
     }
   #else
     static constexpr bool autoreport_paused = false;
-    static inline bool set_autoreport_paused(const bool) { return false; }
+    static bool set_autoreport_paused(const bool) { return false; }
   #endif
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     /**
      * States for managing Marlin and host communication
      * Marlin sends messages if blocked or busy
      */
     enum MarlinBusyState : char {
       NOT_BUSY,           // Not in a handler
       IN_HANDLER,         // Processing a GCode
       IN_PROCESS,         // Known to be blocking command input (as in G29)
       PAUSED_FOR_USER,    // Blocking pending any input
       PAUSED_FOR_INPUT    // Blocking pending text input (concept)
     };
 
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 
     static void host_keepalive();
-    static inline bool host_keepalive_is_paused() { return busy_state >= PAUSED_FOR_USER; }
+    static bool host_keepalive_is_paused() { return busy_state >= PAUSED_FOR_USER; }
 
     #define KEEPALIVE_STATE(N) REMEMBER(_KA_, gcode.busy_state, gcode.N)
   #else
     #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 

commit 02b4e48c6df1604d3de09cbef072f685fe956e92
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 05:43:10 2021 -0600

    üö∏ Refine stepper-driver-related G-codes (#23372)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index bbfb31a3fe..262237d14c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -277,21 +277,21 @@
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  *
  * M871 - Print/reset/clear first layer temperature offset values. (Requires PTC_PROBE, PTC_BED, or PTC_HOTEND)
  * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
- * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
+ * M906 - Set or get motor current in milliamps using axis codes XYZE, etc. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires HAS_MOTOR_CURRENT_DAC or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires HAS_MOTOR_CURRENT_DAC)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires HAS_MOTOR_CURRENT_DAC)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  * M916 - L6470 tuning: Increase KVAL_HOLD until thermal warning. (Requires at least one _DRIVER_TYPE L6470)
  * M917 - L6470 tuning: Find minimum current thresholds. (Requires at least one _DRIVER_TYPE L6470)

commit 363a17ac464e72bb013150e742b0e95f9df707eb
Author: Stuart Pittaway <1201909+stuartpittaway@users.noreply.github.com>
Date:   Sat Dec 4 23:44:10 2021 +0000

    ‚ú® M3426 to read i2c MCP3426 ADC (#23184)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6bfaf00c13..bbfb31a3fe 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -290,20 +290,21 @@
  * M909 - Print digipot/DAC current value. (Requires HAS_MOTOR_CURRENT_DAC)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires HAS_MOTOR_CURRENT_DAC)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  * M916 - L6470 tuning: Increase KVAL_HOLD until thermal warning. (Requires at least one _DRIVER_TYPE L6470)
  * M917 - L6470 tuning: Find minimum current thresholds. (Requires at least one _DRIVER_TYPE L6470)
  * M918 - L6470 tuning: Increase speed until max or error. (Requires at least one _DRIVER_TYPE L6470)
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
+ * M3426 - Read MCP3426 ADC over I2C. (Requires HAS_MCP3426_ADC)
  * M7219 - Control Max7219 Matrix LEDs. (Requires MAX7219_GCODE)
  *
  *** SCARA ***
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  *** Custom codes (can be changed to suit future G-code standards) ***
@@ -1197,20 +1198,24 @@ private:
   #endif
 
   #if ENABLED(DGUS_LCD_UI_MKS)
     static void M1002();
   #endif
 
   #if ENABLED(UBL_MESH_WIZARD)
     static void M1004();
   #endif
 
+  #if ENABLED(HAS_MCP3426_ADC)
+    static void M3426();
+  #endif
+
   #if ENABLED(MAX7219_GCODE)
     static void M7219();
   #endif
 
   #if ENABLED(CONTROLLER_FAN_EDITABLE)
     static void M710();
     static void M710_report(const bool forReplay=true);
   #endif
 
   static void T(const int8_t tool_index);

commit 7110d11c9d8933c8c412c2fabd3b065a5ab97b6e
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Nov 23 21:01:53 2021 +0100

    ‚ú® Fan tachometer support (#23086)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index d7bacaef32..6bfaf00c13 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -149,20 +149,21 @@
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  *
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
  *
  * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
+ * M123 - Report fan tachometers. (Requires En_FAN_TACHO_PIN) Optionally set auto-report interval. (Requires AUTO_REPORT_FANS)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  *
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  *
  * M140 - Set bed target temp. S<temp>
  * M141 - Set heated chamber target temp. S<temp> (Requires a chamber heater)
  * M143 - Set cooler target temp. S<temp> (Requires a laser cooling device)
@@ -729,20 +730,24 @@ private:
 
   #if HAS_STATUS_MESSAGE
     static void M117();
   #endif
 
   static void M118();
   static void M119();
   static void M120();
   static void M121();
 
+  #if HAS_FANCHECK
+    static void M123();
+  #endif
+
   #if ENABLED(PARK_HEAD_ON_PAUSE)
     static void M125();
   #endif
 
   #if ENABLED(BARICUDA)
     #if HAS_HEATER_1
       static void M126();
       static void M127();
     #endif
     #if HAS_HEATER_2

commit 767a15d468ab6859eec19600541ad21dff757d1a
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Mon Nov 1 22:43:40 2021 -0700

    üîß Endstop / DIAG homing conflict warning (#23050)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 09dd53d6f6..d7bacaef32 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1123,21 +1123,21 @@ private:
     static void M906();
     static void M906_report(const bool forReplay=true);
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
       static void M913_report(const bool forReplay=true);
     #endif
-    #if ENABLED(USE_SENSORLESS)
+    #if USE_SENSORLESS
       static void M914();
       static void M914_report(const bool forReplay=true);
     #endif
   #endif
 
   #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();

commit 296a6137cd06ce06f062767ab1b59f99ee95a094
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Mon Nov 1 23:03:50 2021 +0000

    üö∏ More flexible Probe Temperature Compensation (#23033)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8de15fc9c7..09dd53d6f6 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -59,21 +59,21 @@
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
  * G34  - Z Stepper automatic alignment using probe: I<iterations> T<accuracy> A<amplification> (Requires Z_STEPPER_AUTO_ALIGN)
  * G35  - Read bed corners to help adjust bed screws: T<screw_thread> (Requires ASSISTED_TRAMMING)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
  * G60  - Save current position. (Requires SAVED_POSITIONS)
  * G61  - Apply/restore saved coordinates. (Requires SAVED_POSITIONS)
- * G76  - Calibrate first layer temperature offsets. (Requires PROBE_TEMP_COMPENSATION)
+ * G76  - Calibrate first layer temperature offsets. (Requires PTC_PROBE and PTC_BED)
  * G80  - Cancel current motion mode (Requires GCODE_MOTION_MODES)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn ON Laser | Spindle (clockwise), set Power | Speed. (Requires SPINDLE_FEATURE or LASER_FEATURE)
@@ -81,116 +81,130 @@
  * M5   - Turn OFF Laser | Spindle. (Requires SPINDLE_FEATURE or LASER_FEATURE)
  * M7   - Turn mist coolant ON. (Requires COOLANT_CONTROL)
  * M8   - Turn flood coolant ON. (Requires COOLANT_CONTROL)
  * M9   - Turn coolant OFF. (Requires COOLANT_CONTROL)
  * M10  - Turn Vacuum or Blower motor ON (Requires AIR_EVACUATION)
  * M11  - Turn Vacuum or Blower motor OFF (Requires AIR_EVACUATION)
  * M12  - Set up closed loop control system. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
  * M16  - Expected printer check. (Requires EXPECTED_PRINTER_CHECK)
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
+ *
+ *** Print from Media (SDSUPPORT) ***
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
  * M27  - Report SD print status. (Requires SDSUPPORT)
  *        OR, with 'S<seconds>' set the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
  *        OR, with 'C' get the current filename.
  * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
  * M29  - Stop SD write. (Requires SDSUPPORT)
- * M30  - Delete file from SD: "M30 /path/file.gco"
+ * M30  - Delete file from SD: "M30 /path/file.gco" (Requires SDSUPPORT)
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
+ *
  * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted. (Requires DIRECT_PIN_CONTROL)
- * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins
+ * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins (Requires PINS_DEBUGGING)
  * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> S<chizoid>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
+ *
  * M73  - Set the progress percentage. (Requires LCD_SET_PROGRESS_MANUALLY)
  * M75  - Start the print job timer.
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
+ *
  * M80  - Turn on Power Supply. (Requires PSU_CONTROL)
  * M81  - Turn off Power Supply. (Requires PSU_CONTROL)
+ *
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.
  * M85  - Set inactivity shutdown timer with parameter S<seconds>. To disable set zero (default)
  * M92  - Set planner.settings.axis_steps_per_mm for one or more axes.
+ *
  * M100 - Watch Free Memory (for debugging) (Requires M100_FREE_MEMORY_WATCHER)
+ *
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
  * M106 - Set print fan speed.
  * M107 - Print fan off.
  * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
  * M109 - S<temp> Wait for extruder current temp to reach target temp. ** Wait only when heating! **
  *        R<temp> Wait for extruder current temp to reach target temp. ** Wait for heating or cooling. **
  *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
+ *
  * M110 - Set the current line number. (Used by host printing)
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
  * M112 - Full Shutdown.
+ *
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
+ *
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
+ *
  * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
+ *
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
+ *
  * M140 - Set bed target temp. S<temp>
  * M141 - Set heated chamber target temp. S<temp> (Requires a chamber heater)
  * M143 - Set cooler target temp. S<temp> (Requires a laser cooling device)
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> W<white> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, PCA9533, or PCA9632).
  * M154 - Auto-report position with interval of S<seconds>. (Requires AUTO_REPORT_POSITION)
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
  * M164 - Commit the mix and save to a virtual tool (current, or as specified by 'S'). (Requires MIXING_EXTRUDER)
  * M165 - Set the mix for the mixing extruder (and current virtual tool) with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M166 - Set the Gradient Mix for the mixing extruder. (Requires GRADIENT_MIX)
- * M190 - S<temp> Wait for bed current temp to reach target temp. ** Wait only when heating! **
- *        R<temp> Wait for bed current temp to reach target temp. ** Wait for heating or cooling. **
- * M193 - R<temp> Wait for cooler temp to reach target temp. ** Wait for cooling. **
+ * M190 - Set bed target temperature and wait. R<temp> Set target temperature and wait. S<temp> Set, but only wait when heating. (Requires TEMP_SENSOR_BED)
+ * M192 - Wait for probe to reach target temperature. (Requires TEMP_SENSOR_PROBE)
+ * M193 - R<temp> Wait for cooler to reach target temp. ** Wait for cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
  * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>
             X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
  * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
  * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT_AUTORETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  *        Use "M220 B" to back up the Feedrate Percentage and "M220 R" to restore it. (Requires an MMU_MODEL version 2 or 2S)
- * M221 - Set Flow Percentage: "M221 S<percent>"
+ * M221 - Set Flow Percentage: "M221 S<percent>" (Requires an extruder)
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>" (Requires DIRECT_PIN_CONTROL)
  * M240 - Trigger a camera to take a photograph. (Requires PHOTO_GCODE)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M256 - Set LCD brightness: "M256 B<brightness>" (0-255). (Requires an LCD with brightness control)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M282 - Detach servo: "M282 P<index>". (Requires SERVO_DETACH_GCODE)
  * M290 - Babystepping (Requires BABYSTEPPING)
@@ -223,90 +237,94 @@
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M430 - Read the system current, voltage, and power (Requires POWER_MONITOR_CURRENT, POWER_MONITOR_VOLTAGE, or POWER_MONITOR_FIXED_VOLTAGE)
  * M486 - Identify and cancel objects. (Requires CANCEL_OBJECTS)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
- * M510 - Lock Printer
- * M511 - Unlock Printer
- * M512 - Set/Change/Remove Password
+ * M510 - Lock Printer (Requires PASSWORD_FEATURE)
+ * M511 - Unlock Printer (Requires PASSWORD_UNLOCK_GCODE)
+ * M512 - Set/Change/Remove Password (Requires PASSWORD_CHANGE_GCODE)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M552 - Get or set IP address. Enable/disable network interface. (Requires enabled Ethernet port)
  * M553 - Get or set IP netmask. (Requires enabled Ethernet port)
  * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M575 - Change the serial baud rate. (Requires BAUD_RATE_GCODE)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  *        Set SCARA configurations: "M665 S<segments-per-second> P<theta-psi-offset> T<theta-offset> Z<z-offset> (Requires MORGAN_SCARA or MP_SCARA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M808 - Set or Goto a Repeat Marker (Requires GCODE_REPEAT_MARKERS)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's XYZ offsets in current units. (Negative values: X=left, Y=front, Z=below)
- * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
+ * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, plus SKEW_CORRECTION_FOR_Z for IJ)
+ *
+ *** I2C_POSITION_ENCODERS ***
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
- * M871 - Print/reset/clear first layer temperature offset values. (Requires PROBE_TEMP_COMPENSATION)
- * M192 - Wait for probe temp (Requires PROBE_TEMP_COMPENSATION)
+ *
+ * M871 - Print/reset/clear first layer temperature offset values. (Requires PTC_PROBE, PTC_BED, or PTC_HOTEND)
  * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires HAS_MOTOR_CURRENT_DAC or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires HAS_MOTOR_CURRENT_DAC)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires HAS_MOTOR_CURRENT_DAC)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  * M916 - L6470 tuning: Increase KVAL_HOLD until thermal warning. (Requires at least one _DRIVER_TYPE L6470)
  * M917 - L6470 tuning: Find minimum current thresholds. (Requires at least one _DRIVER_TYPE L6470)
  * M918 - L6470 tuning: Increase speed until max or error. (Requires at least one _DRIVER_TYPE L6470)
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
  * M7219 - Control Max7219 Matrix LEDs. (Requires MAX7219_GCODE)
  *
+ *** SCARA ***
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
- * ************ Custom codes - This can change to suit future G-code regulations
+ *** Custom codes (can be changed to suit future G-code standards) ***
  * G425 - Calibrate using a conductive object. (Requires CALIBRATION_GCODE)
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M993 - Backup SPI Flash to SD
  * M994 - Load a Backup from SD to SPI Flash
  * M995 - Touch screen calibration for TFT display
  * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
+ *
  * D... - Custom Development G-code. Add hooks to 'gcode_D.cpp' for developers to test features. (Requires MARLIN_DEV_MODE)
  *        D576 - Set buffer monitoring options. (Requires BUFFER_MONITORING)
  *
- * "T" Codes
+ *** "T" Codes ***
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
@@ -544,21 +562,21 @@ private:
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();
     static void G58();
     static void G59();
   #endif
 
-  #if ENABLED(PROBE_TEMP_COMPENSATION)
+  #if BOTH(PTC_PROBE, PTC_BED)
     static void G76();
   #endif
 
   #if SAVED_POSITIONS
     static void G60();
     static void G61();
   #endif
 
   #if ENABLED(GCODE_MOTION_MODES)
     static void G80();
@@ -737,20 +755,24 @@ private:
     static void M140_M190(const bool isM190);
     FORCE_INLINE static void M140() { M140_M190(false); }
     FORCE_INLINE static void M190() { M140_M190(true); }
   #endif
 
   #if HAS_HEATED_CHAMBER
     static void M141();
     static void M191();
   #endif
 
+  #if HAS_TEMP_PROBE
+    static void M192();
+  #endif
+
   #if HAS_COOLER
     static void M143();
     static void M193();
   #endif
 
   #if HAS_PREHEAT
     static void M145();
     static void M145_report(const bool forReplay=true);
   #endif
 
@@ -1080,22 +1102,21 @@ private:
     FORCE_INLINE static void M862() { I2CPEM.M862(); }
     FORCE_INLINE static void M863() { I2CPEM.M863(); }
     FORCE_INLINE static void M864() { I2CPEM.M864(); }
     FORCE_INLINE static void M865() { I2CPEM.M865(); }
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
-  #if ENABLED(PROBE_TEMP_COMPENSATION)
-    static void M192();
+  #if HAS_PTC
     static void M871();
   #endif
 
   #if ENABLED(LIN_ADVANCE)
     static void M900();
     static void M900_report(const bool forReplay=true);
   #endif
 
   #if HAS_TRINAMIC_CONFIG
     static void M122();

commit 1d80464ba77bc576426f15af28a633bf48d769ad
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 27 21:15:58 2021 -0500

    üé® Define HAS_PREHEAT conditional

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 5ad4750fe4..8de15fc9c7 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -742,21 +742,21 @@ private:
   #if HAS_HEATED_CHAMBER
     static void M141();
     static void M191();
   #endif
 
   #if HAS_COOLER
     static void M143();
     static void M193();
   #endif
 
-  #if PREHEAT_COUNT
+  #if HAS_PREHEAT
     static void M145();
     static void M145_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
     static void M149_report(const bool forReplay=true);
   #endif
 
   #if HAS_COLOR_LEDS

commit 73875cf9ccd4b23bbe2a46bb57192109b7d1a7c6
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Mon Oct 25 22:29:40 2021 +0100

    üö∏ Default T0 for M569, M906, M913 (#23020)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 21f0d3942f..5ad4750fe4 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -383,21 +383,21 @@ public:
 
   static void report_echo_start(const bool forReplay);
   static void report_heading(const bool forReplay, FSTR_P const fstr, const bool eol=true);
   static inline void report_heading_etc(const bool forReplay, FSTR_P const fstr, const bool eol=true) {
     report_heading(forReplay, fstr, eol);
     report_echo_start(forReplay);
   }
   static void say_units();
 
   static int8_t get_target_extruder_from_command();
-  static int8_t get_target_e_stepper_from_command();
+  static int8_t get_target_e_stepper_from_command(const int8_t dval=-1);
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now(FSTR_P fgcode);
   static void process_subcommands_now(char * gcode);
 
   static inline void home_all_axes(const bool keep_leveling=false) {

commit d7fede3a6324cd6b1ec91a9c8e248fce8f0d7cf2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 13:40:01 2021 -0500

    üé® Apply F() to G-code report header

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e6e50e8a1c..21f0d3942f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -375,23 +375,23 @@ public:
   static millis_t previous_move_ms, max_inactive_time, stepper_inactive_time;
   FORCE_INLINE static void reset_stepper_timeout(const millis_t ms=millis()) { previous_move_ms = ms; }
   FORCE_INLINE static bool stepper_max_timed_out(const millis_t ms=millis()) {
     return max_inactive_time && ELAPSED(ms, previous_move_ms + max_inactive_time);
   }
   FORCE_INLINE static bool stepper_inactive_timeout(const millis_t ms=millis()) {
     return ELAPSED(ms, previous_move_ms + stepper_inactive_time);
   }
 
   static void report_echo_start(const bool forReplay);
-  static void report_heading(const bool forReplay, PGM_P const pstr, const bool eol=true);
-  static inline void report_heading_etc(const bool forReplay, PGM_P const pstr, const bool eol=true) {
-    report_heading(forReplay, pstr, eol);
+  static void report_heading(const bool forReplay, FSTR_P const fstr, const bool eol=true);
+  static inline void report_heading_etc(const bool forReplay, FSTR_P const fstr, const bool eol=true) {
+    report_heading(forReplay, fstr, eol);
     report_echo_start(forReplay);
   }
   static void say_units();
 
   static int8_t get_target_extruder_from_command();
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();

commit 59dac3a7e41ae7964686d9dff56baba821a278f7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 25 18:43:52 2021 -0500

    üé® Apply F() to G-code subcommands

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 4a3c865a4f..e6e50e8a1c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -390,25 +390,25 @@ public:
   static void say_units();
 
   static int8_t get_target_extruder_from_command();
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
-  static void process_subcommands_now_P(PGM_P pgcode);
+  static void process_subcommands_now(FSTR_P fgcode);
   static void process_subcommands_now(char * gcode);
 
   static inline void home_all_axes(const bool keep_leveling=false) {
-    process_subcommands_now_P(keep_leveling ? G28_STR : TERN(CAN_SET_LEVELING_AFTER_G28, PSTR("G28L0"), G28_STR));
+    process_subcommands_now(keep_leveling ? FPSTR(G28_STR) : TERN(CAN_SET_LEVELING_AFTER_G28, F("G28L0"), FPSTR(G28_STR)));
   }
 
   #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
     static bool autoreport_paused;
     static inline bool set_autoreport_paused(const bool p) {
       const bool was = autoreport_paused;
       autoreport_paused = p;
       return was;
     }
   #else

commit 33e0855e2c173680865aaa6c6aa93047d63fc469
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 28 01:07:51 2021 -0500

    ‚ö°Ô∏è Handle shared enable pins (#22824)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a7fc7ff990..4a3c865a4f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -872,21 +872,21 @@ private:
   #if ENABLED(BABYSTEPPING)
     static void M290();
   #endif
 
   #if HAS_BUZZER
     static void M300();
   #endif
 
   #if ENABLED(PIDTEMP)
     static void M301();
-    static void M301_report(const bool forReplay=true, const int8_t eindex=-1);
+    static void M301_report(const bool forReplay=true E_OPTARG(const int8_t eindex=-1));
   #endif
 
   #if ENABLED(PREVENT_COLD_EXTRUSION)
     static void M302();
   #endif
 
   #if HAS_PID_HEATING
     static void M303();
   #endif
 

commit dc5bef62ba185461ba969db6af996ebc93a33ba7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 23 10:01:37 2021 -0500

    üé® Various multi-axis patches (#22823)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index b10f0bf06a..a7fc7ff990 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -320,21 +320,21 @@ enum AxisRelative : uint8_t {
   #if HAS_EXTRUDERS
     , E_MODE_ABS, E_MODE_REL
   #endif
 };
 
 extern const char G28_STR[];
 
 class GcodeSuite {
 public:
 
-  static uint8_t axis_relative;
+  static axis_bits_t axis_relative;
 
   static inline bool axis_is_relative(const AxisEnum a) {
     #if HAS_EXTRUDERS
       if (a == E_AXIS) {
         if (TEST(axis_relative, E_MODE_REL)) return true;
         if (TEST(axis_relative, E_MODE_ABS)) return false;
       }
     #endif
     return TEST(axis_relative, a);
   }

commit 3344071f24b505d180dd1423b11510172c3f1c1c
Author: Dan Royer <dan@marginallyclever.com>
Date:   Mon Sep 20 13:42:33 2021 -0700

    Polargraph / Makelangelo kinematics (#22790)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index aa38b7de4a..b10f0bf06a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -237,20 +237,21 @@
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M552 - Get or set IP address. Enable/disable network interface. (Requires enabled Ethernet port)
  * M553 - Get or set IP netmask. (Requires enabled Ethernet port)
  * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M575 - Change the serial baud rate. (Requires BAUD_RATE_GCODE)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
+ *        Set SCARA configurations: "M665 S<segments-per-second> P<theta-psi-offset> T<theta-offset> Z<z-offset> (Requires MORGAN_SCARA or MP_SCARA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M808 - Set or Goto a Repeat Marker (Requires GCODE_REPEAT_MARKERS)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's XYZ offsets in current units. (Negative values: X=left, Y=front, Z=below)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.

commit 21e8f99500554d69cb91ac2be0b4ab1497bf9fac
Author: Dakkaron <dak1st@gmx.at>
Date:   Wed Sep 15 02:00:48 2021 +0200

    ‚ú® M282 - Detach Servo (#22760)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 16cee3481d..aa38b7de4a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -185,20 +185,21 @@
  *        Use "M220 B" to back up the Feedrate Percentage and "M220 R" to restore it. (Requires an MMU_MODEL version 2 or 2S)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>" (Requires DIRECT_PIN_CONTROL)
  * M240 - Trigger a camera to take a photograph. (Requires PHOTO_GCODE)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M256 - Set LCD brightness: "M256 B<brightness>" (0-255). (Requires an LCD with brightness control)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
+ * M282 - Detach servo: "M282 P<index>". (Requires SERVO_DETACH_GCODE)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M305 - Set user thermistor parameters R T and P. (Requires TEMP_SENSOR_x 1000)
  * M309 - Set chamber PID parameters P I and D. (Requires PIDTEMPCHAMBER)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
@@ -855,20 +856,23 @@ private:
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
     #if ENABLED(EDITABLE_SERVO_ANGLES)
       static void M281();
       static void M281_report(const bool forReplay=true);
     #endif
+    #if ENABLED(SERVO_DETACH_GCODE)
+      static void M282();
+    #endif
   #endif
 
   #if ENABLED(BABYSTEPPING)
     static void M290();
   #endif
 
   #if HAS_BUZZER
     static void M300();
   #endif
 

commit 67d82ff228789408f7f32e6c9af3108c989c0c90
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 10 18:49:57 2021 -0500

    üêõ Followup to JyersUI

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index cd190387b0..16cee3481d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -14,24 +14,20 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
-/**
- * gcode.h - Temporary container for all gcode handlers
- */
-
 /**
  * -----------------
  * G-Codes in Marlin
  * -----------------
  *
  * Helpful G-code references:
  *  - https://marlinfw.org/meta/gcode
  *  - https://reprap.org/wiki/G-code
  *  - https://linuxcnc.org/docs/html/gcode.html
  *

commit 79c72ed821564507b0ef46cbb26f9577585e2ccc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 7 18:06:10 2021 -0500

    üé® Standardize G-code reporting

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index ccbeda6474..cd190387b0 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -376,20 +376,28 @@ public:
 
   static millis_t previous_move_ms, max_inactive_time, stepper_inactive_time;
   FORCE_INLINE static void reset_stepper_timeout(const millis_t ms=millis()) { previous_move_ms = ms; }
   FORCE_INLINE static bool stepper_max_timed_out(const millis_t ms=millis()) {
     return max_inactive_time && ELAPSED(ms, previous_move_ms + max_inactive_time);
   }
   FORCE_INLINE static bool stepper_inactive_timeout(const millis_t ms=millis()) {
     return ELAPSED(ms, previous_move_ms + stepper_inactive_time);
   }
 
+  static void report_echo_start(const bool forReplay);
+  static void report_heading(const bool forReplay, PGM_P const pstr, const bool eol=true);
+  static inline void report_heading_etc(const bool forReplay, PGM_P const pstr, const bool eol=true) {
+    report_heading(forReplay, pstr, eol);
+    report_echo_start(forReplay);
+  }
+  static void say_units();
+
   static int8_t get_target_extruder_from_command();
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);
   static void process_subcommands_now(char * gcode);
@@ -431,20 +439,22 @@ public:
 
     #define KEEPALIVE_STATE(N) REMEMBER(_KA_, gcode.busy_state, gcode.N)
   #else
     #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
+  friend class MarlinSettings;
+
   #if ENABLED(MARLIN_DEV_MODE)
     static void D(const int16_t dcode);
   #endif
 
   static void G0_G1(TERN_(HAS_FAST_MOVES, const bool fast_move=false));
 
   #if ENABLED(ARC_SUPPORT)
     static void G2_G3(const bool clockwise);
   #endif
 
@@ -511,20 +521,21 @@ private:
   #if ENABLED(DELTA_AUTO_CALIBRATION)
     static void G33();
   #endif
 
   #if ANY(Z_MULTI_ENDSTOPS, Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
     static void G34();
   #endif
 
   #if ENABLED(Z_STEPPER_AUTO_ALIGN)
     static void M422();
+    static void M422_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(ASSISTED_TRAMMING)
     static void G35();
   #endif
 
   #if ENABLED(G38_PROBE_TARGET)
     static void G38(const int8_t subcode);
   #endif
 
@@ -655,20 +666,21 @@ private:
   #endif
   static void M81();
 
   #if HAS_EXTRUDERS
     static void M82();
     static void M83();
   #endif
 
   static void M85();
   static void M92();
+  static void M92_report(const bool forReplay=true, const int8_t e=-1);
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
   #if HAS_EXTRUDERS
     static void M104_M109(const bool isM109);
     FORCE_INLINE static void M104() { M104_M109(false); }
     FORCE_INLINE static void M109() { M104_M109(true); }
   #endif
@@ -734,24 +746,26 @@ private:
     static void M191();
   #endif
 
   #if HAS_COOLER
     static void M143();
     static void M193();
   #endif
 
   #if PREHEAT_COUNT
     static void M145();
+    static void M145_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
+    static void M149_report(const bool forReplay=true);
   #endif
 
   #if HAS_COLOR_LEDS
     static void M150();
   #endif
 
   #if ENABLED(AUTO_REPORT_POSITION)
     static void M154();
   #endif
 
@@ -763,117 +777,137 @@ private:
     static void M163();
     static void M164();
     #if ENABLED(DIRECT_MIXING_IN_G1)
       static void M165();
     #endif
     #if ENABLED(GRADIENT_MIX)
       static void M166();
     #endif
   #endif
 
-  static void M200();
+  #if DISABLED(NO_VOLUMETRICS)
+    static void M200();
+    static void M200_report(const bool forReplay=true);
+  #endif
   static void M201();
+  static void M201_report(const bool forReplay=true);
 
   #if 0
     static void M202(); // Not used for Sprinter/grbl gen6
   #endif
 
   static void M203();
+  static void M203_report(const bool forReplay=true);
   static void M204();
+  static void M204_report(const bool forReplay=true);
   static void M205();
+  static void M205_report(const bool forReplay=true);
 
   #if HAS_M206_COMMAND
     static void M206();
+    static void M206_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(FWRETRACT)
     static void M207();
+    static void M207_report(const bool forReplay=true);
     static void M208();
+    static void M208_report(const bool forReplay=true);
     #if ENABLED(FWRETRACT_AUTORETRACT)
       static void M209();
+      static void M209_report(const bool forReplay=true);
     #endif
   #endif
 
   static void M211();
+  static void M211_report(const bool forReplay=true);
 
   #if HAS_MULTI_EXTRUDER
     static void M217();
+    static void M217_report(const bool forReplay=true);
   #endif
 
   #if HAS_HOTEND_OFFSET
     static void M218();
+    static void M218_report(const bool forReplay=true);
   #endif
 
   static void M220();
 
   #if HAS_EXTRUDERS
     static void M221();
   #endif
 
   #if ENABLED(DIRECT_PIN_CONTROL)
     static void M226();
   #endif
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif
 
   #if HAS_LCD_CONTRAST
     static void M250();
+    static void M250_report(const bool forReplay=true);
   #endif
 
   #if HAS_LCD_BRIGHTNESS
     static void M256();
+    static void M256_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
     #if ENABLED(EDITABLE_SERVO_ANGLES)
       static void M281();
+      static void M281_report(const bool forReplay=true);
     #endif
   #endif
 
   #if ENABLED(BABYSTEPPING)
     static void M290();
   #endif
 
   #if HAS_BUZZER
     static void M300();
   #endif
 
   #if ENABLED(PIDTEMP)
     static void M301();
+    static void M301_report(const bool forReplay=true, const int8_t eindex=-1);
   #endif
 
   #if ENABLED(PREVENT_COLD_EXTRUSION)
     static void M302();
   #endif
 
   #if HAS_PID_HEATING
     static void M303();
   #endif
 
   #if ENABLED(PIDTEMPBED)
     static void M304();
+    static void M304_report(const bool forReplay=true);
   #endif
 
   #if HAS_USER_THERMISTORS
     static void M305();
   #endif
 
   #if ENABLED(PIDTEMPCHAMBER)
     static void M309();
+    static void M309_report(const bool forReplay=true);
   #endif
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
   #if ENABLED(CASE_LIGHT_ENABLE)
     static void M355();
   #endif
@@ -908,33 +942,37 @@ private:
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
   #if HAS_FILAMENT_SENSOR
     static void M412();
+    static void M412_report(const bool forReplay=true);
   #endif
 
   #if HAS_MULTI_LANGUAGE
     static void M414();
+    static void M414_report(const bool forReplay=true);
   #endif
 
   #if HAS_LEVELING
     static void M420();
+    static void M420_report(const bool forReplay=true);
     static void M421();
   #endif
 
   #if ENABLED(BACKLASH_GCODE)
     static void M425();
+    static void M425_report(const bool forReplay=true);
   #endif
 
   #if HAS_M206_COMMAND
     static void M428();
   #endif
 
   #if HAS_POWER_MONITOR
     static void M430();
   #endif
 
@@ -965,43 +1003,54 @@ private:
   #if ENABLED(SDSUPPORT)
     static void M524();
   #endif
 
   #if ENABLED(SD_ABORT_ON_ENDSTOP_HIT)
     static void M540();
   #endif
 
   #if HAS_ETHERNET
     static void M552();
+    static void M552_report();
     static void M553();
+    static void M553_report();
     static void M554();
+    static void M554_report();
+  #endif
+
+  #if HAS_STEALTHCHOP
+    static void M569();
+    static void M569_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(BAUD_RATE_GCODE)
     static void M575();
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
+    static void M603_report(const bool forReplay=true);
   #endif
 
   #if HAS_DUPLICATION_MODE
     static void M605();
   #endif
 
   #if IS_KINEMATIC
     static void M665();
+    static void M665_report(const bool forReplay=true);
   #endif
 
-  #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
+  #if EITHER(DELTA, HAS_EXTRA_ENDSTOPS)
     static void M666();
+    static void M666_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(DUET_SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
     static void M672();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
@@ -1009,24 +1058,26 @@ private:
   #if ENABLED(GCODE_REPEAT_MARKERS)
     static void M808();
   #endif
 
   #if ENABLED(GCODE_MACROS)
     static void M810_819();
   #endif
 
   #if HAS_BED_PROBE
     static void M851();
+    static void M851_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(SKEW_CORRECTION_GCODE)
     static void M852();
+    static void M852_report(const bool forReplay=true);
   #endif
 
   #if ENABLED(I2C_POSITION_ENCODERS)
     FORCE_INLINE static void M860() { I2CPEM.M860(); }
     FORCE_INLINE static void M861() { I2CPEM.M861(); }
     FORCE_INLINE static void M862() { I2CPEM.M862(); }
     FORCE_INLINE static void M863() { I2CPEM.M863(); }
     FORCE_INLINE static void M864() { I2CPEM.M864(); }
     FORCE_INLINE static void M865() { I2CPEM.M865(); }
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
@@ -1035,58 +1086,62 @@ private:
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
   #if ENABLED(PROBE_TEMP_COMPENSATION)
     static void M192();
     static void M871();
   #endif
 
   #if ENABLED(LIN_ADVANCE)
     static void M900();
+    static void M900_report(const bool forReplay=true);
   #endif
 
   #if HAS_TRINAMIC_CONFIG
     static void M122();
     static void M906();
-    #if HAS_STEALTHCHOP
-      static void M569();
-    #endif
+    static void M906_report(const bool forReplay=true);
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
+      static void M913_report(const bool forReplay=true);
     #endif
     #if ENABLED(USE_SENSORLESS)
       static void M914();
+      static void M914_report(const bool forReplay=true);
     #endif
   #endif
 
   #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
-  #if ANY(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_PWM, HAS_MOTOR_CURRENT_I2C, HAS_MOTOR_CURRENT_DAC)
+  #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM || HAS_MOTOR_CURRENT_I2C || HAS_MOTOR_CURRENT_DAC
     static void M907();
-    #if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
-      static void M908();
-      #if HAS_MOTOR_CURRENT_DAC
-        static void M909();
-        static void M910();
-      #endif
+    #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_PWM
+      static void M907_report(const bool forReplay=true);
     #endif
   #endif
+  #if HAS_MOTOR_CURRENT_SPI || HAS_MOTOR_CURRENT_DAC
+    static void M908();
+  #endif
+  #if HAS_MOTOR_CURRENT_DAC
+    static void M909();
+    static void M910();
+  #endif
 
   #if ENABLED(SDSUPPORT)
     static void M928();
   #endif
 
   #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
     static void M951();
   #endif
 
   #if ENABLED(TOUCH_SCREEN_CALIBRATION)
@@ -1099,20 +1154,21 @@ private:
   #endif
 
   #if ENABLED(PLATFORM_M997_SUPPORT)
     static void M997();
   #endif
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
+    static void M413_report(const bool forReplay=true);
     static void M1000();
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M1001();
   #endif
 
   #if ENABLED(DGUS_LCD_UI_MKS)
     static void M1002();
   #endif
@@ -1120,17 +1176,18 @@ private:
   #if ENABLED(UBL_MESH_WIZARD)
     static void M1004();
   #endif
 
   #if ENABLED(MAX7219_GCODE)
     static void M7219();
   #endif
 
   #if ENABLED(CONTROLLER_FAN_EDITABLE)
     static void M710();
+    static void M710_report(const bool forReplay=true);
   #endif
 
   static void T(const int8_t tool_index);
 
 };
 
 extern GcodeSuite gcode;

commit 1e33c1a2a78392e9182442db043384b0f96cca20
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 1 14:28:53 2021 -0500

    M256 LCD brightness (#22478)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 769b496f22..ccbeda6474 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -184,20 +184,21 @@
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  *        Use "M220 B" to back up the Feedrate Percentage and "M220 R" to restore it. (Requires an MMU_MODEL version 2 or 2S)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>" (Requires DIRECT_PIN_CONTROL)
  * M240 - Trigger a camera to take a photograph. (Requires PHOTO_GCODE)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
+ * M256 - Set LCD brightness: "M256 B<brightness>" (0-255). (Requires an LCD with brightness control)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
@@ -813,20 +814,24 @@ private:
   #endif
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif
 
   #if HAS_LCD_CONTRAST
     static void M250();
   #endif
 
+  #if HAS_LCD_BRIGHTNESS
+    static void M256();
+  #endif
+
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
     #if ENABLED(EDITABLE_SERVO_ANGLES)
       static void M281();
     #endif

commit 2c49283e97f4bb9cac9577af7c38bcf5e0e06826
Author: chendo <chendo@users.noreply.github.com>
Date:   Fri Jul 23 13:53:00 2021 +1000

    ‚ú® D576 Buffer Monitoring (#19674)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6b9d0eb47d..769b496f22 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -234,20 +234,21 @@
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M510 - Lock Printer
  * M511 - Unlock Printer
  * M512 - Set/Change/Remove Password
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M552 - Get or set IP address. Enable/disable network interface. (Requires enabled Ethernet port)
  * M553 - Get or set IP netmask. (Requires enabled Ethernet port)
  * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
+ * M575 - Change the serial baud rate. (Requires BAUD_RATE_GCODE)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M808 - Set or Goto a Repeat Marker (Requires GCODE_REPEAT_MARKERS)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
@@ -290,20 +291,21 @@
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * G425 - Calibrate using a conductive object. (Requires CALIBRATION_GCODE)
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M993 - Backup SPI Flash to SD
  * M994 - Load a Backup from SD to SPI Flash
  * M995 - Touch screen calibration for TFT display
  * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
  * D... - Custom Development G-code. Add hooks to 'gcode_D.cpp' for developers to test features. (Requires MARLIN_DEV_MODE)
+ *        D576 - Set buffer monitoring options. (Requires BUFFER_MONITORING)
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)

commit 3ba5eda0b28498a3e557669496e0d6ffec875876
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Fri Jul 9 19:24:14 2021 -0400

    üì∫ ExtUI pause state response (#22164)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6f889e8558..6b9d0eb47d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -417,20 +417,21 @@ public:
       IN_HANDLER,         // Processing a GCode
       IN_PROCESS,         // Known to be blocking command input (as in G29)
       PAUSED_FOR_USER,    // Blocking pending any input
       PAUSED_FOR_INPUT    // Blocking pending text input (concept)
     };
 
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 
     static void host_keepalive();
+    static inline bool host_keepalive_is_paused() { return busy_state >= PAUSED_FOR_USER; }
 
     #define KEEPALIVE_STATE(N) REMEMBER(_KA_, gcode.busy_state, gcode.N)
   #else
     #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 

commit 26bfc267977ddc444513c793c18f76847e23310e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 9 17:09:58 2021 -0500

    üé® Check flags without ENABLED

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 752a3da9dc..6f889e8558 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -517,21 +517,21 @@ private:
   #endif
 
   #if ENABLED(ASSISTED_TRAMMING)
     static void G35();
   #endif
 
   #if ENABLED(G38_PROBE_TARGET)
     static void G38(const int8_t subcode);
   #endif
 
-  #if ENABLED(HAS_MESH)
+  #if HAS_MESH
     static void G42();
   #endif
 
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();
     static void G58();
@@ -550,21 +550,21 @@ private:
   #if ENABLED(GCODE_MOTION_MODES)
     static void G80();
   #endif
 
   static void G92();
 
   #if ENABLED(CALIBRATION_GCODE)
     static void G425();
   #endif
 
-  #if ENABLED(HAS_RESUME_CONTINUE)
+  #if HAS_RESUME_CONTINUE
     static void M0_M1();
   #endif
 
   #if HAS_CUTTER
     static void M3_M4(const bool is_M4);
     static void M5();
   #endif
 
   #if ENABLED(COOLANT_MIST)
     static void M7();
@@ -605,21 +605,21 @@ private:
     static void M26();
     static void M27();
     static void M28();
     static void M29();
     static void M30();
   #endif
 
   static void M31();
 
   #if ENABLED(SDSUPPORT)
-    #if ENABLED(HAS_MEDIA_SUBCALLS)
+    #if HAS_MEDIA_SUBCALLS
       static void M32();
     #endif
     #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
       static void M33();
     #endif
     #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
       static void M34();
     #endif
   #endif
 
@@ -736,21 +736,21 @@ private:
   #endif
 
   #if PREHEAT_COUNT
     static void M145();
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
   #endif
 
-  #if ENABLED(HAS_COLOR_LEDS)
+  #if HAS_COLOR_LEDS
     static void M150();
   #endif
 
   #if ENABLED(AUTO_REPORT_POSITION)
     static void M154();
   #endif
 
   #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
     static void M155();
   #endif
@@ -770,97 +770,97 @@ private:
   static void M201();
 
   #if 0
     static void M202(); // Not used for Sprinter/grbl gen6
   #endif
 
   static void M203();
   static void M204();
   static void M205();
 
-  #if ENABLED(HAS_M206_COMMAND)
+  #if HAS_M206_COMMAND
     static void M206();
   #endif
 
   #if ENABLED(FWRETRACT)
     static void M207();
     static void M208();
     #if ENABLED(FWRETRACT_AUTORETRACT)
       static void M209();
     #endif
   #endif
 
   static void M211();
 
-  #if ENABLED(HAS_MULTI_EXTRUDER)
+  #if HAS_MULTI_EXTRUDER
     static void M217();
   #endif
 
-  #if ENABLED(HAS_HOTEND_OFFSET)
+  #if HAS_HOTEND_OFFSET
     static void M218();
   #endif
 
   static void M220();
 
   #if HAS_EXTRUDERS
     static void M221();
   #endif
 
   #if ENABLED(DIRECT_PIN_CONTROL)
     static void M226();
   #endif
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif
 
-  #if ENABLED(HAS_LCD_CONTRAST)
+  #if HAS_LCD_CONTRAST
     static void M250();
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
     #if ENABLED(EDITABLE_SERVO_ANGLES)
       static void M281();
     #endif
   #endif
 
   #if ENABLED(BABYSTEPPING)
     static void M290();
   #endif
 
-  #if ENABLED(HAS_BUZZER)
+  #if HAS_BUZZER
     static void M300();
   #endif
 
   #if ENABLED(PIDTEMP)
     static void M301();
   #endif
 
   #if ENABLED(PREVENT_COLD_EXTRUSION)
     static void M302();
   #endif
 
-  #if ENABLED(HAS_PID_HEATING)
+  #if HAS_PID_HEATING
     static void M303();
   #endif
 
   #if ENABLED(PIDTEMPBED)
     static void M304();
   #endif
 
-  #if ENABLED(HAS_USER_THERMISTORS)
+  #if HAS_USER_THERMISTORS
     static void M305();
   #endif
 
   #if ENABLED(PIDTEMPCHAMBER)
     static void M309();
   #endif
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
@@ -887,53 +887,53 @@ private:
     static void M381();
   #endif
 
   static void M400();
 
   #if HAS_BED_PROBE
     static void M401();
     static void M402();
   #endif
 
-  #if ENABLED(HAS_PRUSA_MMU2)
+  #if HAS_PRUSA_MMU2
     static void M403();
   #endif
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
-  #if ENABLED(HAS_FILAMENT_SENSOR)
+  #if HAS_FILAMENT_SENSOR
     static void M412();
   #endif
 
-  #if ENABLED(HAS_MULTI_LANGUAGE)
+  #if HAS_MULTI_LANGUAGE
     static void M414();
   #endif
 
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
   #if ENABLED(BACKLASH_GCODE)
     static void M425();
   #endif
 
-  #if ENABLED(HAS_M206_COMMAND)
+  #if HAS_M206_COMMAND
     static void M428();
   #endif
 
-  #if ENABLED(HAS_POWER_MONITOR)
+  #if HAS_POWER_MONITOR
     static void M430();
   #endif
 
   #if ENABLED(CANCEL_OBJECTS)
     static void M486();
   #endif
 
   static void M500();
   static void M501();
   static void M502();
@@ -970,25 +970,25 @@ private:
 
   #if ENABLED(BAUD_RATE_GCODE)
     static void M575();
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
-  #if ENABLED(HAS_DUPLICATION_MODE)
+  #if HAS_DUPLICATION_MODE
     static void M605();
   #endif
 
-  #if ENABLED(IS_KINEMATIC)
+  #if IS_KINEMATIC
     static void M665();
   #endif
 
   #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
     static void M666();
   #endif
 
   #if ENABLED(DUET_SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
     static void M672();
   #endif
@@ -999,21 +999,21 @@ private:
   #endif
 
   #if ENABLED(GCODE_REPEAT_MARKERS)
     static void M808();
   #endif
 
   #if ENABLED(GCODE_MACROS)
     static void M810_819();
   #endif
 
-  #if ENABLED(HAS_BED_PROBE)
+  #if HAS_BED_PROBE
     static void M851();
   #endif
 
   #if ENABLED(SKEW_CORRECTION_GCODE)
     static void M852();
   #endif
 
   #if ENABLED(I2C_POSITION_ENCODERS)
     FORCE_INLINE static void M860() { I2CPEM.M860(); }
     FORCE_INLINE static void M861() { I2CPEM.M861(); }
@@ -1032,21 +1032,21 @@ private:
     static void M871();
   #endif
 
   #if ENABLED(LIN_ADVANCE)
     static void M900();
   #endif
 
   #if HAS_TRINAMIC_CONFIG
     static void M122();
     static void M906();
-    #if ENABLED(HAS_STEALTHCHOP)
+    #if HAS_STEALTHCHOP
       static void M569();
     #endif
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if ENABLED(USE_SENSORLESS)
@@ -1059,21 +1059,21 @@ private:
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
   #if ANY(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_PWM, HAS_MOTOR_CURRENT_I2C, HAS_MOTOR_CURRENT_DAC)
     static void M907();
     #if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
       static void M908();
-      #if ENABLED(HAS_MOTOR_CURRENT_DAC)
+      #if HAS_MOTOR_CURRENT_DAC
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M928();
   #endif
 

commit 135801d9a614a2dd1ba7bea60bc8dcad523b9d59
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Thu Jun 17 22:46:59 2021 -0500

    üêõ Fix Air Assist (#22159)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 89605ee25b..752a3da9dc 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -557,36 +557,39 @@ private:
     static void G425();
   #endif
 
   #if ENABLED(HAS_RESUME_CONTINUE)
     static void M0_M1();
   #endif
 
   #if HAS_CUTTER
     static void M3_M4(const bool is_M4);
     static void M5();
-    #if ENABLED(AIR_EVACUATION)
-      static void M10();
-      static void M11();
-    #endif
   #endif
 
-  #if ENABLED(COOLANT_CONTROL)
-    #if ENABLED(COOLANT_MIST)
-      static void M7();
-    #endif
-    #if ENABLED(COOLANT_FLOOD)
-      static void M8();
-    #endif
+  #if ENABLED(COOLANT_MIST)
+    static void M7();
+  #endif
+
+  #if EITHER(AIR_ASSIST, COOLANT_FLOOD)
+    static void M8();
+  #endif
+
+  #if EITHER(AIR_ASSIST, COOLANT_CONTROL)
     static void M9();
   #endif
 
+  #if ENABLED(AIR_EVACUATION)
+    static void M10();
+    static void M11();
+  #endif
+
   #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
     static void M12();
   #endif
 
   #if ENABLED(EXPECTED_PRINTER_CHECK)
     static void M16();
   #endif
 
   static void M17();
 

commit 0e1e1591879077cdda868a28b095c427098fda07
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 10 02:05:04 2021 -0500

    üé® Adjust some conditionals

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index abd7f07916..89605ee25b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -385,21 +385,21 @@ public:
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);
   static void process_subcommands_now(char * gcode);
 
   static inline void home_all_axes(const bool keep_leveling=false) {
-    process_subcommands_now_P(keep_leveling ? G28_STR : TERN(G28_L0_ENSURES_LEVELING_OFF, PSTR("G28L0"), G28_STR));
+    process_subcommands_now_P(keep_leveling ? G28_STR : TERN(CAN_SET_LEVELING_AFTER_G28, PSTR("G28L0"), G28_STR));
   }
 
   #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
     static bool autoreport_paused;
     static inline bool set_autoreport_paused(const bool p) {
       const bool was = autoreport_paused;
       autoreport_paused = p;
       return was;
     }
   #else

commit 7726af9c5348c1c7d0fd9a56eca87d00cd75fee6
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Jun 5 09:18:47 2021 +0200

    üèóÔ∏è Support for up to 6 linear axes (#19112)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 05b6c0cdd5..abd7f07916 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -308,21 +308,21 @@
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
 #if IS_SCARA || defined(G0_FEEDRATE)
   #define HAS_FAST_MOVES 1
 #endif
 
 enum AxisRelative : uint8_t {
-  LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z)
+  LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z, REL_I, REL_J, REL_K)
   #if HAS_EXTRUDERS
     , E_MODE_ABS, E_MODE_REL
   #endif
 };
 
 extern const char G28_STR[];
 
 class GcodeSuite {
 public:
 
@@ -331,21 +331,25 @@ public:
   static inline bool axis_is_relative(const AxisEnum a) {
     #if HAS_EXTRUDERS
       if (a == E_AXIS) {
         if (TEST(axis_relative, E_MODE_REL)) return true;
         if (TEST(axis_relative, E_MODE_ABS)) return false;
       }
     #endif
     return TEST(axis_relative, a);
   }
   static inline void set_relative_mode(const bool rel) {
-    axis_relative = rel ? (0 LOGICAL_AXIS_GANG(| _BV(REL_E), | _BV(REL_X), | _BV(REL_Y), | _BV(REL_Z))) : 0;
+    axis_relative = rel ? (0 LOGICAL_AXIS_GANG(
+      | _BV(REL_E),
+      | _BV(REL_X), | _BV(REL_Y), | _BV(REL_Z),
+      | _BV(REL_I), | _BV(REL_J), | _BV(REL_K)
+    )) : 0;
   }
   #if HAS_EXTRUDERS
     static inline void set_e_relative() {
       CBI(axis_relative, E_MODE_ABS);
       SBI(axis_relative, E_MODE_REL);
     }
     static inline void set_e_absolute() {
       CBI(axis_relative, E_MODE_REL);
       SBI(axis_relative, E_MODE_ABS);
     }

commit dd4990252e891cdfe56cb7d6e3bbe1e6289be649
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon May 24 16:38:57 2021 -0500

    ‚ôªÔ∏è Refactor Linear / Logical / Distinct Axes (#21953)
    
    * More patches supporting EXTRUDERS 0
    * Extend types in prep for more axes

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index befc328bb9..05b6c0cdd5 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -307,47 +307,56 @@
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
 #if IS_SCARA || defined(G0_FEEDRATE)
   #define HAS_FAST_MOVES 1
 #endif
 
-enum AxisRelative : uint8_t { REL_X, REL_Y, REL_Z, REL_E, E_MODE_ABS, E_MODE_REL };
+enum AxisRelative : uint8_t {
+  LOGICAL_AXIS_LIST(REL_E, REL_X, REL_Y, REL_Z)
+  #if HAS_EXTRUDERS
+    , E_MODE_ABS, E_MODE_REL
+  #endif
+};
 
 extern const char G28_STR[];
 
 class GcodeSuite {
 public:
 
   static uint8_t axis_relative;
 
   static inline bool axis_is_relative(const AxisEnum a) {
-    if (a == E_AXIS) {
-      if (TEST(axis_relative, E_MODE_REL)) return true;
-      if (TEST(axis_relative, E_MODE_ABS)) return false;
-    }
+    #if HAS_EXTRUDERS
+      if (a == E_AXIS) {
+        if (TEST(axis_relative, E_MODE_REL)) return true;
+        if (TEST(axis_relative, E_MODE_ABS)) return false;
+      }
+    #endif
     return TEST(axis_relative, a);
   }
   static inline void set_relative_mode(const bool rel) {
-    axis_relative = rel ? _BV(REL_X) | _BV(REL_Y) | _BV(REL_Z) | _BV(REL_E) : 0;
-  }
-  static inline void set_e_relative() {
-    CBI(axis_relative, E_MODE_ABS);
-    SBI(axis_relative, E_MODE_REL);
-  }
-  static inline void set_e_absolute() {
-    CBI(axis_relative, E_MODE_REL);
-    SBI(axis_relative, E_MODE_ABS);
+    axis_relative = rel ? (0 LOGICAL_AXIS_GANG(| _BV(REL_E), | _BV(REL_X), | _BV(REL_Y), | _BV(REL_Z))) : 0;
   }
+  #if HAS_EXTRUDERS
+    static inline void set_e_relative() {
+      CBI(axis_relative, E_MODE_ABS);
+      SBI(axis_relative, E_MODE_REL);
+    }
+    static inline void set_e_absolute() {
+      CBI(axis_relative, E_MODE_REL);
+      SBI(axis_relative, E_MODE_ABS);
+    }
+  #endif
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     /**
      * Workspace planes only apply to G2/G3 moves
      * (and "canned cycles" - not a current feature)
      */
     enum WorkspacePlane : char { PLANE_XY, PLANE_ZX, PLANE_YZ };
     static WorkspacePlane workspace_plane;
   #endif
 

commit 731370051de73ad4c92d60ec01563def3da53ddb
Author: ellensp <ellensp@hotmail.com>
Date:   Mon May 24 13:29:19 2021 +1200

    ‚ö°Ô∏è PIO filters for M117, M300 and M414 (#21972)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6f8568730b..befc328bb9 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -671,21 +671,25 @@ private:
 
   static void M110();
   static void M111();
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     static void M113();
   #endif
 
   static void M114();
   static void M115();
-  static void M117();
+
+  #if HAS_STATUS_MESSAGE
+    static void M117();
+  #endif
+
   static void M118();
   static void M119();
   static void M120();
   static void M121();
 
   #if ENABLED(PARK_HEAD_ON_PAUSE)
     static void M125();
   #endif
 
   #if ENABLED(BARICUDA)

commit aee971bcaf2d8b7157985f36f6705015ef334238
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 22 17:02:21 2021 -0500

    üé® Combine M104/M109 and M140/M190 code

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c32575e81e..6f8568730b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -641,22 +641,23 @@ private:
   #endif
 
   static void M85();
   static void M92();
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
   #if HAS_EXTRUDERS
-    static void M104();
-    static void M109();
+    static void M104_M109(const bool isM109);
+    FORCE_INLINE static void M104() { M104_M109(false); }
+    FORCE_INLINE static void M109() { M104_M109(true); }
   #endif
 
   static void M105();
 
   #if HAS_FAN
     static void M106();
     static void M107();
   #endif
 
   #if DISABLED(EMERGENCY_PARSER)
@@ -692,22 +693,23 @@ private:
       static void M126();
       static void M127();
     #endif
     #if HAS_HEATER_2
       static void M128();
       static void M129();
     #endif
   #endif
 
   #if HAS_HEATED_BED
-    static void M140();
-    static void M190();
+    static void M140_M190(const bool isM190);
+    FORCE_INLINE static void M140() { M140_M190(false); }
+    FORCE_INLINE static void M190() { M140_M190(true); }
   #endif
 
   #if HAS_HEATED_CHAMBER
     static void M141();
     static void M191();
   #endif
 
   #if HAS_COOLER
     static void M143();
     static void M193();

commit 2de54dab84d82ef69fb9ac3bd9025444f4f84813
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 21 08:23:09 2021 -0500

    üé® Move HAS_EXTRUDERS

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index cdf04cd0f2..c32575e81e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -626,32 +626,35 @@ private:
   static void M76();
   static void M77();
 
   #if ENABLED(PRINTCOUNTER)
     static void M78();
   #endif
 
   #if ENABLED(PSU_CONTROL)
     static void M80();
   #endif
-
   static void M81();
-  static void M82();
-  static void M83();
+
+  #if HAS_EXTRUDERS
+    static void M82();
+    static void M83();
+  #endif
+
   static void M85();
   static void M92();
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
-  #if EXTRUDERS
+  #if HAS_EXTRUDERS
     static void M104();
     static void M109();
   #endif
 
   static void M105();
 
   #if HAS_FAN
     static void M106();
     static void M107();
   #endif
@@ -769,21 +772,21 @@ private:
   #if ENABLED(HAS_MULTI_EXTRUDER)
     static void M217();
   #endif
 
   #if ENABLED(HAS_HOTEND_OFFSET)
     static void M218();
   #endif
 
   static void M220();
 
-  #if EXTRUDERS
+  #if HAS_EXTRUDERS
     static void M221();
   #endif
 
   #if ENABLED(DIRECT_PIN_CONTROL)
     static void M226();
   #endif
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif

commit 7f774cab9005dd56667bf4db09c23370bd2c873f
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Sat May 15 15:02:20 2021 -0500

    M154 Position Auto-Report (#18427)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index dc0b89e098..cdf04cd0f2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -152,20 +152,21 @@
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M141 - Set heated chamber target temp. S<temp> (Requires a chamber heater)
  * M143 - Set cooler target temp. S<temp> (Requires a laser cooling device)
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> W<white> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, PCA9533, or PCA9632).
+ * M154 - Auto-report position with interval of S<seconds>. (Requires AUTO_REPORT_POSITION)
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
  * M164 - Commit the mix and save to a virtual tool (current, or as specified by 'S'). (Requires MIXING_EXTRUDER)
  * M165 - Set the mix for the mixing extruder (and current virtual tool) with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M166 - Set the Gradient Mix for the mixing extruder. (Requires GRADIENT_MIX)
  * M190 - S<temp> Wait for bed current temp to reach target temp. ** Wait only when heating! **
  *        R<temp> Wait for bed current temp to reach target temp. ** Wait for heating or cooling. **
  * M193 - R<temp> Wait for cooler temp to reach target temp. ** Wait for cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
@@ -714,20 +715,24 @@ private:
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
   #endif
 
   #if ENABLED(HAS_COLOR_LEDS)
     static void M150();
   #endif
 
+  #if ENABLED(AUTO_REPORT_POSITION)
+    static void M154();
+  #endif
+
   #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
     static void M155();
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
     static void M164();
     #if ENABLED(DIRECT_MIXING_IN_G1)
       static void M165();
     #endif

commit cb5e6bfef64ae4bc05db336a5e53a528bb3b7042
Author: Vert <45634861+Vertabreak@users.noreply.github.com>
Date:   Sun May 2 17:38:55 2021 -0400

    UBL Mesh Wizard (#21556)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2904d30366..dc0b89e098 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1072,20 +1072,24 @@ private:
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M1001();
   #endif
 
   #if ENABLED(DGUS_LCD_UI_MKS)
     static void M1002();
   #endif
 
+  #if ENABLED(UBL_MESH_WIZARD)
+    static void M1004();
+  #endif
+
   #if ENABLED(MAX7219_GCODE)
     static void M7219();
   #endif
 
   #if ENABLED(CONTROLLER_FAN_EDITABLE)
     static void M710();
   #endif
 
   static void T(const int8_t tool_index);
 

commit f075dd0db3496d99c84fcf77242f60731982184c
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Thu Apr 22 18:19:41 2021 -0500

    M10-M11 Air Evacuation for Spindle/Laser (#21668)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 977fc8bfd8..2904d30366 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -79,20 +79,22 @@
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn ON Laser | Spindle (clockwise), set Power | Speed. (Requires SPINDLE_FEATURE or LASER_FEATURE)
  * M4   - Turn ON Laser | Spindle (counter-clockwise), set Power | Speed. (Requires SPINDLE_FEATURE or LASER_FEATURE)
  * M5   - Turn OFF Laser | Spindle. (Requires SPINDLE_FEATURE or LASER_FEATURE)
  * M7   - Turn mist coolant ON. (Requires COOLANT_CONTROL)
  * M8   - Turn flood coolant ON. (Requires COOLANT_CONTROL)
  * M9   - Turn coolant OFF. (Requires COOLANT_CONTROL)
+ * M10  - Turn Vacuum or Blower motor ON (Requires AIR_EVACUATION)
+ * M11  - Turn Vacuum or Blower motor OFF (Requires AIR_EVACUATION)
  * M12  - Set up closed loop control system. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
  * M16  - Expected printer check. (Requires EXPECTED_PRINTER_CHECK)
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
@@ -541,20 +543,24 @@ private:
     static void G425();
   #endif
 
   #if ENABLED(HAS_RESUME_CONTINUE)
     static void M0_M1();
   #endif
 
   #if HAS_CUTTER
     static void M3_M4(const bool is_M4);
     static void M5();
+    #if ENABLED(AIR_EVACUATION)
+      static void M10();
+      static void M11();
+    #endif
   #endif
 
   #if ENABLED(COOLANT_CONTROL)
     #if ENABLED(COOLANT_MIST)
       static void M7();
     #endif
     #if ENABLED(COOLANT_FLOOD)
       static void M8();
     #endif
     static void M9();

commit 4cba40f9fd9ea7dae24dbf7aef89091e88f99126
Author: Sola <42537573+solawc@users.noreply.github.com>
Date:   Sat Apr 10 04:29:59 2021 +0800

    Fix manual move with MKS H43 (#21511)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7ea2489584..977fc8bfd8 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1062,20 +1062,24 @@ private:
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M1001();
   #endif
 
+  #if ENABLED(DGUS_LCD_UI_MKS)
+    static void M1002();
+  #endif
+
   #if ENABLED(MAX7219_GCODE)
     static void M7219();
   #endif
 
   #if ENABLED(CONTROLLER_FAN_EDITABLE)
     static void M710();
   #endif
 
   static void T(const int8_t tool_index);
 

commit 2d2291d00eab6159de24eb7ff74001b1d6dd29e4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 24 05:40:28 2021 -0500

    More IntelliSense-friendly declarations

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 52570ff83f..7ea2489584 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -411,53 +411,67 @@ public:
 
     #define KEEPALIVE_STATE(N) REMEMBER(_KA_, gcode.busy_state, gcode.N)
   #else
     #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
-  TERN_(MARLIN_DEV_MODE, static void D(const int16_t dcode));
+  #if ENABLED(MARLIN_DEV_MODE)
+    static void D(const int16_t dcode);
+  #endif
 
   static void G0_G1(TERN_(HAS_FAST_MOVES, const bool fast_move=false));
 
-  TERN_(ARC_SUPPORT, static void G2_G3(const bool clockwise));
+  #if ENABLED(ARC_SUPPORT)
+    static void G2_G3(const bool clockwise);
+  #endif
 
   static void G4();
 
-  TERN_(BEZIER_CURVE_SUPPORT, static void G5());
+  #if ENABLED(BEZIER_CURVE_SUPPORT)
+    static void G5();
+  #endif
 
-  TERN_(DIRECT_STEPPING, static void G6());
+  #if ENABLED(DIRECT_STEPPING)
+    static void G6();
+  #endif
 
   #if ENABLED(FWRETRACT)
     static void G10();
     static void G11();
   #endif
 
-  TERN_(NOZZLE_CLEAN_FEATURE, static void G12());
+  #if ENABLED(NOZZLE_CLEAN_FEATURE)
+    static void G12();
+  #endif
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     static void G17();
     static void G18();
     static void G19();
   #endif
 
   #if ENABLED(INCH_MODE_SUPPORT)
     static void G20();
     static void G21();
   #endif
 
-  TERN_(G26_MESH_VALIDATION, static void G26());
+  #if ENABLED(G26_MESH_VALIDATION)
+    static void G26();
+  #endif
 
-  TERN_(NOZZLE_PARK_FEATURE, static void G27());
+  #if ENABLED(NOZZLE_PARK_FEATURE)
+    static void G27();
+  #endif
 
   static void G28();
 
   #if HAS_LEVELING
     #if ENABLED(G29_RETRY_AND_RECOVER)
       static void event_probe_failure();
       static void event_probe_recover();
       static void G29_with_retry();
       #define G29_TYPE bool
     #else
@@ -467,73 +481,99 @@ private:
   #endif
 
   #if HAS_BED_PROBE
     static void G30();
     #if ENABLED(Z_PROBE_SLED)
       static void G31();
       static void G32();
     #endif
   #endif
 
-  TERN_(DELTA_AUTO_CALIBRATION, static void G33());
+  #if ENABLED(DELTA_AUTO_CALIBRATION)
+    static void G33();
+  #endif
 
   #if ANY(Z_MULTI_ENDSTOPS, Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
     static void G34();
   #endif
 
-  TERN_(Z_STEPPER_AUTO_ALIGN, static void M422());
+  #if ENABLED(Z_STEPPER_AUTO_ALIGN)
+    static void M422();
+  #endif
 
-  TERN_(ASSISTED_TRAMMING, static void G35());
+  #if ENABLED(ASSISTED_TRAMMING)
+    static void G35();
+  #endif
 
-  TERN_(G38_PROBE_TARGET, static void G38(const int8_t subcode));
+  #if ENABLED(G38_PROBE_TARGET)
+    static void G38(const int8_t subcode);
+  #endif
 
-  TERN_(HAS_MESH, static void G42());
+  #if ENABLED(HAS_MESH)
+    static void G42();
+  #endif
 
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();
     static void G58();
     static void G59();
   #endif
 
-  TERN_(PROBE_TEMP_COMPENSATION, static void G76());
+  #if ENABLED(PROBE_TEMP_COMPENSATION)
+    static void G76();
+  #endif
 
   #if SAVED_POSITIONS
     static void G60();
     static void G61();
   #endif
 
-  TERN_(GCODE_MOTION_MODES, static void G80());
+  #if ENABLED(GCODE_MOTION_MODES)
+    static void G80();
+  #endif
 
   static void G92();
 
-  TERN_(CALIBRATION_GCODE, static void G425());
+  #if ENABLED(CALIBRATION_GCODE)
+    static void G425();
+  #endif
 
-  TERN_(HAS_RESUME_CONTINUE, static void M0_M1());
+  #if ENABLED(HAS_RESUME_CONTINUE)
+    static void M0_M1();
+  #endif
 
   #if HAS_CUTTER
     static void M3_M4(const bool is_M4);
     static void M5();
   #endif
 
   #if ENABLED(COOLANT_CONTROL)
-    TERN_(COOLANT_MIST, static void M7());
-    TERN_(COOLANT_FLOOD, static void M8());
+    #if ENABLED(COOLANT_MIST)
+      static void M7();
+    #endif
+    #if ENABLED(COOLANT_FLOOD)
+      static void M8();
+    #endif
     static void M9();
   #endif
 
-  TERN_(EXTERNAL_CLOSED_LOOP_CONTROLLER, static void M12());
+  #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
+    static void M12();
+  #endif
 
-  TERN_(EXPECTED_PRINTER_CHECK, static void M16());
+  #if ENABLED(EXPECTED_PRINTER_CHECK)
+    static void M16();
+  #endif
 
   static void M17();
 
   static void M18_M84();
 
   #if ENABLED(SDSUPPORT)
     static void M20();
     static void M21();
     static void M22();
     static void M23();
@@ -542,83 +582,107 @@ private:
     static void M26();
     static void M27();
     static void M28();
     static void M29();
     static void M30();
   #endif
 
   static void M31();
 
   #if ENABLED(SDSUPPORT)
-    TERN_(HAS_MEDIA_SUBCALLS, static void M32());
-    TERN_(LONG_FILENAME_HOST_SUPPORT, static void M33());
+    #if ENABLED(HAS_MEDIA_SUBCALLS)
+      static void M32();
+    #endif
+    #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
+      static void M33();
+    #endif
     #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
       static void M34();
     #endif
   #endif
 
-  TERN_(DIRECT_PIN_CONTROL, static void M42());
-  TERN_(PINS_DEBUGGING, static void M43());
+  #if ENABLED(DIRECT_PIN_CONTROL)
+    static void M42();
+  #endif
+  #if ENABLED(PINS_DEBUGGING)
+    static void M43();
+  #endif
 
-  TERN_(Z_MIN_PROBE_REPEATABILITY_TEST, static void M48());
+  #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
+    static void M48();
+  #endif
 
-  TERN_(LCD_SET_PROGRESS_MANUALLY, static void M73());
+  #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
+    static void M73();
+  #endif
 
   static void M75();
   static void M76();
   static void M77();
 
-  TERN_(PRINTCOUNTER, static void M78());
+  #if ENABLED(PRINTCOUNTER)
+    static void M78();
+  #endif
 
-  TERN_(PSU_CONTROL, static void M80());
+  #if ENABLED(PSU_CONTROL)
+    static void M80();
+  #endif
 
   static void M81();
   static void M82();
   static void M83();
   static void M85();
   static void M92();
 
-  TERN_(M100_FREE_MEMORY_WATCHER, static void M100());
+  #if ENABLED(M100_FREE_MEMORY_WATCHER)
+    static void M100();
+  #endif
 
   #if EXTRUDERS
     static void M104();
     static void M109();
   #endif
 
   static void M105();
 
   #if HAS_FAN
     static void M106();
     static void M107();
   #endif
 
   #if DISABLED(EMERGENCY_PARSER)
     static void M108();
     static void M112();
     static void M410();
-    TERN_(HOST_PROMPT_SUPPORT, static void M876());
+    #if ENABLED(HOST_PROMPT_SUPPORT)
+      static void M876();
+    #endif
   #endif
 
   static void M110();
   static void M111();
 
-  TERN_(HOST_KEEPALIVE_FEATURE, static void M113());
+  #if ENABLED(HOST_KEEPALIVE_FEATURE)
+    static void M113();
+  #endif
 
   static void M114();
   static void M115();
   static void M117();
   static void M118();
   static void M119();
   static void M120();
   static void M121();
 
-  TERN_(PARK_HEAD_ON_PAUSE, static void M125());
+  #if ENABLED(PARK_HEAD_ON_PAUSE)
+    static void M125();
+  #endif
 
   #if ENABLED(BARICUDA)
     #if HAS_HEATER_1
       static void M126();
       static void M127();
     #endif
     #if HAS_HEATER_2
       static void M128();
       static void M129();
     #endif
@@ -636,106 +700,150 @@ private:
 
   #if HAS_COOLER
     static void M143();
     static void M193();
   #endif
 
   #if PREHEAT_COUNT
     static void M145();
   #endif
 
-  TERN_(TEMPERATURE_UNITS_SUPPORT, static void M149());
+  #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
+    static void M149();
+  #endif
 
-  TERN_(HAS_COLOR_LEDS, static void M150());
+  #if ENABLED(HAS_COLOR_LEDS)
+    static void M150();
+  #endif
 
   #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
     static void M155();
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
     static void M164();
-    TERN_(DIRECT_MIXING_IN_G1, static void M165());
-    TERN_(GRADIENT_MIX, static void M166());
+    #if ENABLED(DIRECT_MIXING_IN_G1)
+      static void M165();
+    #endif
+    #if ENABLED(GRADIENT_MIX)
+      static void M166();
+    #endif
   #endif
 
   static void M200();
   static void M201();
 
   #if 0
     static void M202(); // Not used for Sprinter/grbl gen6
   #endif
 
   static void M203();
   static void M204();
   static void M205();
 
-  TERN_(HAS_M206_COMMAND, static void M206());
+  #if ENABLED(HAS_M206_COMMAND)
+    static void M206();
+  #endif
 
   #if ENABLED(FWRETRACT)
     static void M207();
     static void M208();
-    TERN_(FWRETRACT_AUTORETRACT, static void M209());
+    #if ENABLED(FWRETRACT_AUTORETRACT)
+      static void M209();
+    #endif
   #endif
 
   static void M211();
 
-  TERN_(HAS_MULTI_EXTRUDER, static void M217());
+  #if ENABLED(HAS_MULTI_EXTRUDER)
+    static void M217();
+  #endif
 
-  TERN_(HAS_HOTEND_OFFSET, static void M218());
+  #if ENABLED(HAS_HOTEND_OFFSET)
+    static void M218();
+  #endif
 
   static void M220();
 
   #if EXTRUDERS
     static void M221();
   #endif
 
-  TERN_(DIRECT_PIN_CONTROL, static void M226());
+  #if ENABLED(DIRECT_PIN_CONTROL)
+    static void M226();
+  #endif
 
-  TERN_(PHOTO_GCODE, static void M240());
+  #if ENABLED(PHOTO_GCODE)
+    static void M240();
+  #endif
 
-  TERN_(HAS_LCD_CONTRAST, static void M250());
+  #if ENABLED(HAS_LCD_CONTRAST)
+    static void M250();
+  #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
-    TERN_(EDITABLE_SERVO_ANGLES, static void M281());
+    #if ENABLED(EDITABLE_SERVO_ANGLES)
+      static void M281();
+    #endif
   #endif
 
-  TERN_(BABYSTEPPING, static void M290());
+  #if ENABLED(BABYSTEPPING)
+    static void M290();
+  #endif
 
-  TERN_(HAS_BUZZER, static void M300());
+  #if ENABLED(HAS_BUZZER)
+    static void M300();
+  #endif
 
-  TERN_(PIDTEMP, static void M301());
+  #if ENABLED(PIDTEMP)
+    static void M301();
+  #endif
 
-  TERN_(PREVENT_COLD_EXTRUSION, static void M302());
+  #if ENABLED(PREVENT_COLD_EXTRUSION)
+    static void M302();
+  #endif
 
-  TERN_(HAS_PID_HEATING, static void M303());
+  #if ENABLED(HAS_PID_HEATING)
+    static void M303();
+  #endif
 
-  TERN_(PIDTEMPBED, static void M304());
+  #if ENABLED(PIDTEMPBED)
+    static void M304();
+  #endif
 
-  TERN_(HAS_USER_THERMISTORS, static void M305());
+  #if ENABLED(HAS_USER_THERMISTORS)
+    static void M305();
+  #endif
 
-  TERN_(PIDTEMPCHAMBER, static void M309());
+  #if ENABLED(PIDTEMPCHAMBER)
+    static void M309();
+  #endif
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
-  TERN_(CASE_LIGHT_ENABLE, static void M355());
+  #if ENABLED(CASE_LIGHT_ENABLE)
+    static void M355();
+  #endif
 
-  TERN_(REPETIER_GCODE_M360, static void M360());
+  #if ENABLED(REPETIER_GCODE_M360)
+    static void M360();
+  #endif
 
   #if ENABLED(MORGAN_SCARA)
     static bool M360();
     static bool M361();
     static bool M362();
     static bool M363();
     static bool M364();
   #endif
 
   #if EITHER(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
@@ -743,132 +851,178 @@ private:
     static void M381();
   #endif
 
   static void M400();
 
   #if HAS_BED_PROBE
     static void M401();
     static void M402();
   #endif
 
-  TERN_(HAS_PRUSA_MMU2, static void M403());
+  #if ENABLED(HAS_PRUSA_MMU2)
+    static void M403();
+  #endif
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
-  TERN_(HAS_FILAMENT_SENSOR, static void M412());
+  #if ENABLED(HAS_FILAMENT_SENSOR)
+    static void M412();
+  #endif
 
-  TERN_(HAS_MULTI_LANGUAGE, static void M414());
+  #if ENABLED(HAS_MULTI_LANGUAGE)
+    static void M414();
+  #endif
 
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
-  TERN_(BACKLASH_GCODE, static void M425());
+  #if ENABLED(BACKLASH_GCODE)
+    static void M425();
+  #endif
 
-  TERN_(HAS_M206_COMMAND, static void M428());
+  #if ENABLED(HAS_M206_COMMAND)
+    static void M428();
+  #endif
 
-  TERN_(HAS_POWER_MONITOR, static void M430());
+  #if ENABLED(HAS_POWER_MONITOR)
+    static void M430();
+  #endif
 
-  TERN_(CANCEL_OBJECTS, static void M486());
+  #if ENABLED(CANCEL_OBJECTS)
+    static void M486();
+  #endif
 
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
-  TERN_(EEPROM_SETTINGS, static void M504());
+  #if ENABLED(EEPROM_SETTINGS)
+    static void M504();
+  #endif
 
   #if ENABLED(PASSWORD_FEATURE)
     static void M510();
-    TERN_(PASSWORD_UNLOCK_GCODE, static void M511());
-    TERN_(PASSWORD_CHANGE_GCODE, static void M512());
+    #if ENABLED(PASSWORD_UNLOCK_GCODE)
+      static void M511();
+    #endif
+    #if ENABLED(PASSWORD_CHANGE_GCODE)
+      static void M512();
+    #endif
   #endif
 
-  TERN_(SDSUPPORT, static void M524());
+  #if ENABLED(SDSUPPORT)
+    static void M524();
+  #endif
 
-  TERN_(SD_ABORT_ON_ENDSTOP_HIT, static void M540());
+  #if ENABLED(SD_ABORT_ON_ENDSTOP_HIT)
+    static void M540();
+  #endif
 
   #if HAS_ETHERNET
     static void M552();
     static void M553();
     static void M554();
   #endif
 
-  TERN_(BAUD_RATE_GCODE, static void M575());
+  #if ENABLED(BAUD_RATE_GCODE)
+    static void M575();
+  #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
-  TERN_(HAS_DUPLICATION_MODE, static void M605());
+  #if ENABLED(HAS_DUPLICATION_MODE)
+    static void M605();
+  #endif
 
-  TERN_(IS_KINEMATIC, static void M665());
+  #if ENABLED(IS_KINEMATIC)
+    static void M665();
+  #endif
 
   #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
     static void M666();
   #endif
 
   #if ENABLED(DUET_SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
     static void M672();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
-  TERN_(GCODE_REPEAT_MARKERS, static void M808());
+  #if ENABLED(GCODE_REPEAT_MARKERS)
+    static void M808();
+  #endif
 
-  TERN_(GCODE_MACROS, static void M810_819());
+  #if ENABLED(GCODE_MACROS)
+    static void M810_819();
+  #endif
 
-  TERN_(HAS_BED_PROBE, static void M851());
+  #if ENABLED(HAS_BED_PROBE)
+    static void M851();
+  #endif
 
-  TERN_(SKEW_CORRECTION_GCODE, static void M852());
+  #if ENABLED(SKEW_CORRECTION_GCODE)
+    static void M852();
+  #endif
 
   #if ENABLED(I2C_POSITION_ENCODERS)
     FORCE_INLINE static void M860() { I2CPEM.M860(); }
     FORCE_INLINE static void M861() { I2CPEM.M861(); }
     FORCE_INLINE static void M862() { I2CPEM.M862(); }
     FORCE_INLINE static void M863() { I2CPEM.M863(); }
     FORCE_INLINE static void M864() { I2CPEM.M864(); }
     FORCE_INLINE static void M865() { I2CPEM.M865(); }
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
   #if ENABLED(PROBE_TEMP_COMPENSATION)
     static void M192();
     static void M871();
   #endif
 
-  TERN_(LIN_ADVANCE, static void M900());
+  #if ENABLED(LIN_ADVANCE)
+    static void M900();
+  #endif
 
   #if HAS_TRINAMIC_CONFIG
     static void M122();
     static void M906();
-    TERN_(HAS_STEALTHCHOP, static void M569());
+    #if ENABLED(HAS_STEALTHCHOP)
+      static void M569();
+    #endif
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
-    TERN_(HYBRID_THRESHOLD, static void M913());
-    TERN_(USE_SENSORLESS, static void M914());
+    #if ENABLED(HYBRID_THRESHOLD)
+      static void M913();
+    #endif
+    #if ENABLED(USE_SENSORLESS)
+      static void M914();
+    #endif
   #endif
 
   #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
@@ -876,41 +1030,55 @@ private:
     static void M907();
     #if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
       static void M908();
       #if ENABLED(HAS_MOTOR_CURRENT_DAC)
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 
-  TERN_(SDSUPPORT, static void M928());
+  #if ENABLED(SDSUPPORT)
+    static void M928();
+  #endif
 
-  TERN_(MAGNETIC_PARKING_EXTRUDER, static void M951());
+  #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
+    static void M951();
+  #endif
 
-  TERN_(TOUCH_SCREEN_CALIBRATION, static void M995());
+  #if ENABLED(TOUCH_SCREEN_CALIBRATION)
+    static void M995();
+  #endif
 
   #if BOTH(HAS_SPI_FLASH, SDSUPPORT)
     static void M993();
     static void M994();
   #endif
 
-  TERN_(PLATFORM_M997_SUPPORT, static void M997());
+  #if ENABLED(PLATFORM_M997_SUPPORT)
+    static void M997();
+  #endif
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
-  TERN_(SDSUPPORT, static void M1001());
+  #if ENABLED(SDSUPPORT)
+    static void M1001();
+  #endif
 
-  TERN_(MAX7219_GCODE, static void M7219());
+  #if ENABLED(MAX7219_GCODE)
+    static void M7219();
+  #endif
 
-  TERN_(CONTROLLER_FAN_EDITABLE, static void M710());
+  #if ENABLED(CONTROLLER_FAN_EDITABLE)
+    static void M710();
+  #endif
 
   static void T(const int8_t tool_index);
 
 };
 
 extern GcodeSuite gcode;

commit b95e548ddbcbc1c088eabc17992d0a06f82ac167
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sat Mar 6 14:13:28 2021 -0600

    Cooler (for Laser) - M143, M193 (#21255)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 123b648f90..52570ff83f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -146,30 +146,32 @@
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
  * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M141 - Set heated chamber target temp. S<temp> (Requires a chamber heater)
+ * M143 - Set cooler target temp. S<temp> (Requires a laser cooling device)
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> W<white> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, PCA9533, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
  * M164 - Commit the mix and save to a virtual tool (current, or as specified by 'S'). (Requires MIXING_EXTRUDER)
  * M165 - Set the mix for the mixing extruder (and current virtual tool) with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M166 - Set the Gradient Mix for the mixing extruder. (Requires GRADIENT_MIX)
  * M190 - S<temp> Wait for bed current temp to reach target temp. ** Wait only when heating! **
  *        R<temp> Wait for bed current temp to reach target temp. ** Wait for heating or cooling. **
+ * M193 - R<temp> Wait for cooler temp to reach target temp. ** Wait for cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
  * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>
             X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
  * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
@@ -625,20 +627,25 @@ private:
   #if HAS_HEATED_BED
     static void M140();
     static void M190();
   #endif
 
   #if HAS_HEATED_CHAMBER
     static void M141();
     static void M191();
   #endif
 
+  #if HAS_COOLER
+    static void M143();
+    static void M193();
+  #endif
+
   #if PREHEAT_COUNT
     static void M145();
   #endif
 
   TERN_(TEMPERATURE_UNITS_SUPPORT, static void M149());
 
   TERN_(HAS_COLOR_LEDS, static void M150());
 
   #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
     static void M155();

commit a3a10b62f21cfbedfd001746faa46ac55d248b36
Author: Ken Sanislo <ksanislo@users.noreply.github.com>
Date:   Wed Feb 24 16:26:51 2021 -0800

    Chamber Heater PID (#21156)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7fd8d6904a..123b648f90 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -190,20 +190,21 @@
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M305 - Set user thermistor parameters R T and P. (Requires TEMP_SENSOR_x 1000)
+ * M309 - Set chamber PID parameters P I and D. (Requires PIDTEMPCHAMBER)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
  * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M403 - Set filament type for PRUSA MMU2
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
@@ -704,20 +705,22 @@ private:
   TERN_(PIDTEMP, static void M301());
 
   TERN_(PREVENT_COLD_EXTRUSION, static void M302());
 
   TERN_(HAS_PID_HEATING, static void M303());
 
   TERN_(PIDTEMPBED, static void M304());
 
   TERN_(HAS_USER_THERMISTORS, static void M305());
 
+  TERN_(PIDTEMPCHAMBER, static void M309());
+
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
   TERN_(CASE_LIGHT_ENABLE, static void M355());
 
   TERN_(REPETIER_GCODE_M360, static void M360());
 
   #if ENABLED(MORGAN_SCARA)

commit d33fe2378c25d258b02440aef6cc31e36753f98f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 22 15:01:19 2021 -0600

    Move common strings (#20846)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2b7589662e..7fd8d6904a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -303,20 +303,22 @@
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
 #if IS_SCARA || defined(G0_FEEDRATE)
   #define HAS_FAST_MOVES 1
 #endif
 
 enum AxisRelative : uint8_t { REL_X, REL_Y, REL_Z, REL_E, E_MODE_ABS, E_MODE_REL };
 
+extern const char G28_STR[];
+
 class GcodeSuite {
 public:
 
   static uint8_t axis_relative;
 
   static inline bool axis_is_relative(const AxisEnum a) {
     if (a == E_AXIS) {
       if (TEST(axis_relative, E_MODE_REL)) return true;
       if (TEST(axis_relative, E_MODE_ABS)) return false;
     }
@@ -364,21 +366,20 @@ public:
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);
   static void process_subcommands_now(char * gcode);
 
   static inline void home_all_axes(const bool keep_leveling=false) {
-    extern const char G28_STR[];
     process_subcommands_now_P(keep_leveling ? G28_STR : TERN(G28_L0_ENSURES_LEVELING_OFF, PSTR("G28L0"), G28_STR));
   }
 
   #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
     static bool autoreport_paused;
     static inline bool set_autoreport_paused(const bool p) {
       const bool was = autoreport_paused;
       autoreport_paused = p;
       return was;
     }

commit c0870d417a68ff4303100f165282d41be9129a5c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jan 21 03:40:07 2021 -0600

    Move some MarlinCore and MarlinUI code (#20832)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9453eecd94..2b7589662e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -445,20 +445,22 @@ private:
   #endif
 
   TERN_(G26_MESH_VALIDATION, static void G26());
 
   TERN_(NOZZLE_PARK_FEATURE, static void G27());
 
   static void G28();
 
   #if HAS_LEVELING
     #if ENABLED(G29_RETRY_AND_RECOVER)
+      static void event_probe_failure();
+      static void event_probe_recover();
       static void G29_with_retry();
       #define G29_TYPE bool
     #else
       #define G29_TYPE void
     #endif
     static G29_TYPE G29();
   #endif
 
   #if HAS_BED_PROBE
     static void G30();

commit 68abaeab19b41824bc151bc0f65e76ce8a2e4916
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jan 20 18:52:06 2021 -0600

    MarlinUI multi-language support (#20725)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 765cd8e591..9453eecd94 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -206,20 +206,21 @@
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M403 - Set filament type for PRUSA MMU2
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M412 - Enable / Disable Filament Runout Detection. (Requires FILAMENT_RUNOUT_SENSOR)
  * M413 - Enable / Disable Power-Loss Recovery. (Requires POWER_LOSS_RECOVERY)
+ * M414 - Set language by index. (Requires LCD_LANGUAGE_2...)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M430 - Read the system current, voltage, and power (Requires POWER_MONITOR_CURRENT, POWER_MONITOR_VOLTAGE, or POWER_MONITOR_FIXED_VOLTAGE)
  * M486 - Identify and cancel objects. (Requires CANCEL_OBJECTS)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
@@ -740,20 +741,22 @@ private:
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
   TERN_(HAS_FILAMENT_SENSOR, static void M412());
 
+  TERN_(HAS_MULTI_LANGUAGE, static void M414());
+
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
   TERN_(BACKLASH_GCODE, static void M425());
 
   TERN_(HAS_M206_COMMAND, static void M428());
 
   TERN_(HAS_POWER_MONITOR, static void M430());

commit bb597dcf66ac0baa3f3528bb34c3b4aad78ad520
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 17 12:08:40 2021 -0600

    Internal G29N for G28+G29 (#20800)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 735456a533..765cd8e591 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -362,23 +362,23 @@ public:
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);
   static void process_subcommands_now(char * gcode);
 
-  static inline void home_all_axes() {
+  static inline void home_all_axes(const bool keep_leveling=false) {
     extern const char G28_STR[];
-    process_subcommands_now_P(G28_STR);
+    process_subcommands_now_P(keep_leveling ? G28_STR : TERN(G28_L0_ENSURES_LEVELING_OFF, PSTR("G28L0"), G28_STR));
   }
 
   #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
     static bool autoreport_paused;
     static inline bool set_autoreport_paused(const bool p) {
       const bool was = autoreport_paused;
       autoreport_paused = p;
       return was;
     }
   #else

commit b6a32500c401877e3ee1300fa613e81086bb31d3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 26 21:18:40 2020 -0600

    M808 Repeat Markers (#20084)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 1d74ac3719..735456a533 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -235,20 +235,21 @@
  * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
+ * M808 - Set or Goto a Repeat Marker (Requires GCODE_REPEAT_MARKERS)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's XYZ offsets in current units. (Negative values: X=left, Y=front, Z=below)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
@@ -800,20 +801,22 @@ private:
 
   #if ENABLED(DUET_SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
     static void M672();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
+  TERN_(GCODE_REPEAT_MARKERS, static void M808());
+
   TERN_(GCODE_MACROS, static void M810_819());
 
   TERN_(HAS_BED_PROBE, static void M851());
 
   TERN_(SKEW_CORRECTION_GCODE, static void M852());
 
   #if ENABLED(I2C_POSITION_ENCODERS)
     FORCE_INLINE static void M860() { I2CPEM.M860(); }
     FORCE_INLINE static void M861() { I2CPEM.M861(); }
     FORCE_INLINE static void M862() { I2CPEM.M862(); }

commit 41529b65988a58ba512977e0fe1692aaeeb6c811
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Wed Nov 18 08:27:21 2020 +0100

    SMUFF (MMU2 clone) support (#19912)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3fbb88829e..1d74ac3719 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -174,21 +174,21 @@
             X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
  * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
  * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT_AUTORETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
- *        Use "M220 B" to back up the Feedrate Percentage and "M220 R" to restore it. (Requires PRUSA_MMU2)
+ *        Use "M220 B" to back up the Feedrate Percentage and "M220 R" to restore it. (Requires an MMU_MODEL version 2 or 2S)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>" (Requires DIRECT_PIN_CONTROL)
  * M240 - Trigger a camera to take a photograph. (Requires PHOTO_GCODE)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
@@ -728,21 +728,21 @@ private:
     static void M381();
   #endif
 
   static void M400();
 
   #if HAS_BED_PROBE
     static void M401();
     static void M402();
   #endif
 
-  TERN_(PRUSA_MMU2, static void M403());
+  TERN_(HAS_PRUSA_MMU2, static void M403());
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
   TERN_(HAS_FILAMENT_SENSOR, static void M412());
 

commit ecd8227de0c17427f9f8d76cfc279acbc5a0a188
Author: Thomas Niccolo Reyes <niccoreyes@gmail.com>
Date:   Wed Nov 18 12:30:32 2020 +0800

    Open File Browser on Media Insert (option) (#20151)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index ddd48a389d..3fbb88829e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -762,26 +762,22 @@ private:
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
   TERN_(EEPROM_SETTINGS, static void M504());
 
   #if ENABLED(PASSWORD_FEATURE)
     static void M510();
-    #if ENABLED(PASSWORD_UNLOCK_GCODE)
-      static void M511();
-    #endif
-    #if ENABLED(PASSWORD_CHANGE_GCODE)
-      static void M512();
-    #endif
+    TERN_(PASSWORD_UNLOCK_GCODE, static void M511());
+    TERN_(PASSWORD_CHANGE_GCODE, static void M512());
   #endif
 
   TERN_(SDSUPPORT, static void M524());
 
   TERN_(SD_ABORT_ON_ENDSTOP_HIT, static void M540());
 
   #if HAS_ETHERNET
     static void M552();
     static void M553();
     static void M554();

commit 1b0a5abd73d162b68b2881486630f60a1e9e7825
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Thu Nov 12 23:54:18 2020 -0500

    G34 Z stepper locking (#20091)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 5db8b08e08..ddd48a389d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -461,21 +461,21 @@ private:
   #if HAS_BED_PROBE
     static void G30();
     #if ENABLED(Z_PROBE_SLED)
       static void G31();
       static void G32();
     #endif
   #endif
 
   TERN_(DELTA_AUTO_CALIBRATION, static void G33());
 
-  #if EITHER(Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
+  #if ANY(Z_MULTI_ENDSTOPS, Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
     static void G34();
   #endif
 
   TERN_(Z_STEPPER_AUTO_ALIGN, static void M422());
 
   TERN_(ASSISTED_TRAMMING, static void G35());
 
   TERN_(G38_PROBE_TARGET, static void G38(const int8_t subcode));
 
   TERN_(HAS_MESH, static void G42());

commit f17394d67740e1f5591b3e0e23cc7313b218776d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Nov 9 18:53:19 2020 -0600

    Ability to disable M32

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 34df51e517..5db8b08e08 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -534,21 +534,21 @@ private:
     static void M26();
     static void M27();
     static void M28();
     static void M29();
     static void M30();
   #endif
 
   static void M31();
 
   #if ENABLED(SDSUPPORT)
-    static void M32();
+    TERN_(HAS_MEDIA_SUBCALLS, static void M32());
     TERN_(LONG_FILENAME_HOST_SUPPORT, static void M33());
     #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
       static void M34();
     #endif
   #endif
 
   TERN_(DIRECT_PIN_CONTROL, static void M42());
   TERN_(PINS_DEBUGGING, static void M43());
 
   TERN_(Z_MIN_PROBE_REPEATABILITY_TEST, static void M48());

commit 9baa944460e0bf5f15e46a501b64ebd39a9d5f34
Author: bilsef <bilsef1@gmail.com>
Date:   Tue Oct 20 12:35:29 2020 -0700

    Teensy 4.1 Ethernet support (#19801)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3d745eff89..34df51e517 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -223,20 +223,23 @@
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M510 - Lock Printer
  * M511 - Unlock Printer
  * M512 - Set/Change/Remove Password
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
+ * M552 - Get or set IP address. Enable/disable network interface. (Requires enabled Ethernet port)
+ * M553 - Get or set IP netmask. (Requires enabled Ethernet port)
+ * M554 - Get or set IP gateway. (Requires enabled Ethernet port)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
@@ -771,20 +774,26 @@ private:
     #endif
     #if ENABLED(PASSWORD_CHANGE_GCODE)
       static void M512();
     #endif
   #endif
 
   TERN_(SDSUPPORT, static void M524());
 
   TERN_(SD_ABORT_ON_ENDSTOP_HIT, static void M540());
 
+  #if HAS_ETHERNET
+    static void M552();
+    static void M553();
+    static void M554();
+  #endif
+
   TERN_(BAUD_RATE_GCODE, static void M575());
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
   TERN_(HAS_DUPLICATION_MODE, static void M605());
 
   TERN_(IS_KINEMATIC, static void M665());

commit e7838c5f7904924eed7e996d2ff95fff0f64e30e
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Oct 11 22:34:27 2020 -0400

    G34 Mechanical Gantry Calibration (like Prusa M915) (#18972)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 683642bec6..3d745eff89 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -458,25 +458,26 @@ private:
   #if HAS_BED_PROBE
     static void G30();
     #if ENABLED(Z_PROBE_SLED)
       static void G31();
       static void G32();
     #endif
   #endif
 
   TERN_(DELTA_AUTO_CALIBRATION, static void G33());
 
-  #if ENABLED(Z_STEPPER_AUTO_ALIGN)
+  #if EITHER(Z_STEPPER_AUTO_ALIGN, MECHANICAL_GANTRY_CALIBRATION)
     static void G34();
-    static void M422();
   #endif
 
+  TERN_(Z_STEPPER_AUTO_ALIGN, static void M422());
+
   TERN_(ASSISTED_TRAMMING, static void G35());
 
   TERN_(G38_PROBE_TARGET, static void G38(const int8_t subcode));
 
   TERN_(HAS_MESH, static void G42());
 
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();

commit 492ba2a111ce541513d4515c4af3f57ceaa897ea
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Oct 11 14:58:35 2020 -0500

    Digipots refactor / cleanup (#19690)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 73a3727813..683642bec6 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -251,23 +251,23 @@
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  * M871 - Print/reset/clear first layer temperature offset values. (Requires PROBE_TEMP_COMPENSATION)
  * M192 - Wait for probe temp (Requires PROBE_TEMP_COMPENSATION)
  * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
- * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
- * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
- * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
+ * M908 - Control digital trimpot directly. (Requires HAS_MOTOR_CURRENT_DAC or DIGIPOTSS_PIN)
+ * M909 - Print digipot/DAC current value. (Requires HAS_MOTOR_CURRENT_DAC)
+ * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires HAS_MOTOR_CURRENT_DAC)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  * M916 - L6470 tuning: Increase KVAL_HOLD until thermal warning. (Requires at least one _DRIVER_TYPE L6470)
  * M917 - L6470 tuning: Find minimum current thresholds. (Requires at least one _DRIVER_TYPE L6470)
  * M918 - L6470 tuning: Increase speed until max or error. (Requires at least one _DRIVER_TYPE L6470)
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
  * M7219 - Control Max7219 Matrix LEDs. (Requires MAX7219_GCODE)
  *
@@ -840,25 +840,25 @@ private:
   #endif
 
   #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
-  #if ANY(HAS_DIGIPOTSS, HAS_MOTOR_CURRENT_PWM, HAS_I2C_DIGIPOT, DAC_STEPPER_CURRENT)
+  #if ANY(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_PWM, HAS_MOTOR_CURRENT_I2C, HAS_MOTOR_CURRENT_DAC)
     static void M907();
-    #if EITHER(HAS_DIGIPOTSS, DAC_STEPPER_CURRENT)
+    #if EITHER(HAS_MOTOR_CURRENT_SPI, HAS_MOTOR_CURRENT_DAC)
       static void M908();
-      #if ENABLED(DAC_STEPPER_CURRENT)
+      #if ENABLED(HAS_MOTOR_CURRENT_DAC)
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 
   TERN_(SDSUPPORT, static void M928());
 
   TERN_(MAGNETIC_PARKING_EXTRUDER, static void M951());
 

commit 0988af453c567fae1796cc821bbc41e930b45836
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 9 16:42:23 2020 -0500

    Optional `M42`/`M226`; Add more features filters (#19664)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index f21b7f89b1..73a3727813 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -102,21 +102,21 @@
  *        OR, with 'C' get the current filename.
  * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
  * M29  - Stop SD write. (Requires SDSUPPORT)
  * M30  - Delete file from SD: "M30 /path/file.gco"
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
- * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.
+ * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted. (Requires DIRECT_PIN_CONTROL)
  * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins
  * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> S<chizoid>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
  * M73  - Set the progress percentage. (Requires LCD_SET_PROGRESS_MANUALLY)
  * M75  - Start the print job timer.
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
  * M80  - Turn on Power Supply. (Requires PSU_CONTROL)
  * M81  - Turn off Power Supply. (Requires PSU_CONTROL)
  * M82  - Set E codes absolute (default).
@@ -176,21 +176,21 @@
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
  * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT_AUTORETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  *        Use "M220 B" to back up the Feedrate Percentage and "M220 R" to restore it. (Requires PRUSA_MMU2)
  * M221 - Set Flow Percentage: "M221 S<percent>"
- * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
+ * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>" (Requires DIRECT_PIN_CONTROL)
  * M240 - Trigger a camera to take a photograph. (Requires PHOTO_GCODE)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
@@ -537,22 +537,21 @@ private:
   static void M31();
 
   #if ENABLED(SDSUPPORT)
     static void M32();
     TERN_(LONG_FILENAME_HOST_SUPPORT, static void M33());
     #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
       static void M34();
     #endif
   #endif
 
-  static void M42();
-
+  TERN_(DIRECT_PIN_CONTROL, static void M42());
   TERN_(PINS_DEBUGGING, static void M43());
 
   TERN_(Z_MIN_PROBE_REPEATABILITY_TEST, static void M48());
 
   TERN_(LCD_SET_PROGRESS_MANUALLY, static void M73());
 
   static void M75();
   static void M76();
   static void M77();
 
@@ -666,21 +665,21 @@ private:
   TERN_(HAS_MULTI_EXTRUDER, static void M217());
 
   TERN_(HAS_HOTEND_OFFSET, static void M218());
 
   static void M220();
 
   #if EXTRUDERS
     static void M221();
   #endif
 
-  static void M226();
+  TERN_(DIRECT_PIN_CONTROL, static void M226());
 
   TERN_(PHOTO_GCODE, static void M240());
 
   TERN_(HAS_LCD_CONTRAST, static void M250());
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 

commit 631457ffea46debd43079137e09bc2d36b5d4fe4
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Fri Oct 9 08:25:23 2020 -0300

    Support for Debug Codes - Dnnn (#19225)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 026083bcfc..f21b7f89b1 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -278,20 +278,21 @@
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * G425 - Calibrate using a conductive object. (Requires CALIBRATION_GCODE)
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M993 - Backup SPI Flash to SD
  * M994 - Load a Backup from SD to SPI Flash
  * M995 - Touch screen calibration for TFT display
  * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
+ * D... - Custom Development G-code. Add hooks to 'gcode_D.cpp' for developers to test features. (Requires MARLIN_DEV_MODE)
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
@@ -401,20 +402,22 @@ public:
 
     #define KEEPALIVE_STATE(N) REMEMBER(_KA_, gcode.busy_state, gcode.N)
   #else
     #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
+  TERN_(MARLIN_DEV_MODE, static void D(const int16_t dcode));
+
   static void G0_G1(TERN_(HAS_FAST_MOVES, const bool fast_move=false));
 
   TERN_(ARC_SUPPORT, static void G2_G3(const bool clockwise));
 
   static void G4();
 
   TERN_(BEZIER_CURVE_SUPPORT, static void G5());
 
   TERN_(DIRECT_STEPPING, static void G6());
 
@@ -875,15 +878,15 @@ private:
     static void M413();
     static void M1000();
   #endif
 
   TERN_(SDSUPPORT, static void M1001());
 
   TERN_(MAX7219_GCODE, static void M7219());
 
   TERN_(CONTROLLER_FAN_EDITABLE, static void M710());
 
-  static void T(const uint8_t tool_index);
+  static void T(const int8_t tool_index);
 
 };
 
 extern GcodeSuite gcode;

commit 7e0524109ed7217cbfcb2a8c2383d2a3005e81d9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 4 17:29:12 2020 -0500

    Add HAS_FAST_MOVES

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 425a857369..026083bcfc 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -291,20 +291,24 @@
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
+#if IS_SCARA || defined(G0_FEEDRATE)
+  #define HAS_FAST_MOVES 1
+#endif
+
 enum AxisRelative : uint8_t { REL_X, REL_Y, REL_Z, REL_E, E_MODE_ABS, E_MODE_REL };
 
 class GcodeSuite {
 public:
 
   static uint8_t axis_relative;
 
   static inline bool axis_is_relative(const AxisEnum a) {
     if (a == E_AXIS) {
       if (TEST(axis_relative, E_MODE_REL)) return true;
@@ -397,25 +401,21 @@ public:
 
     #define KEEPALIVE_STATE(N) REMEMBER(_KA_, gcode.busy_state, gcode.N)
   #else
     #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
-  static void G0_G1(
-    #if IS_SCARA || defined(G0_FEEDRATE)
-      const bool fast_move=false
-    #endif
-  );
+  static void G0_G1(TERN_(HAS_FAST_MOVES, const bool fast_move=false));
 
   TERN_(ARC_SUPPORT, static void G2_G3(const bool clockwise));
 
   static void G4();
 
   TERN_(BEZIER_CURVE_SUPPORT, static void G5());
 
   TERN_(DIRECT_STEPPING, static void G6());
 
   #if ENABLED(FWRETRACT)

commit 4424645e04c9e75462d36de8f7a82e67cc9c262e
Author: qwewer0 <57561110+qwewer0@users.noreply.github.com>
Date:   Mon Sep 28 21:53:50 2020 +0200

    Multi-line comments cleanup (#19535)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 085f6b3618..425a857369 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -282,21 +282,20 @@
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M993 - Backup SPI Flash to SD
  * M994 - Load a Backup from SD to SPI Flash
  * M995 - Touch screen calibration for TFT display
  * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
- *
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/encoder_i2c.h"
 #endif
 
 enum AxisRelative : uint8_t { REL_X, REL_Y, REL_Z, REL_E, E_MODE_ABS, E_MODE_REL };

commit 76d8d1742c1d4a1efe0fd6c0645d3fc656bfd0b2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 20 18:29:08 2020 -0500

    Add multi-extruder condition

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2427301262..085f6b3618 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -654,23 +654,21 @@ private:
   TERN_(HAS_M206_COMMAND, static void M206());
 
   #if ENABLED(FWRETRACT)
     static void M207();
     static void M208();
     TERN_(FWRETRACT_AUTORETRACT, static void M209());
   #endif
 
   static void M211();
 
-  #if EXTRUDERS > 1
-    static void M217();
-  #endif
+  TERN_(HAS_MULTI_EXTRUDER, static void M217());
 
   TERN_(HAS_HOTEND_OFFSET, static void M218());
 
   static void M220();
 
   #if EXTRUDERS
     static void M221();
   #endif
 
   static void M226();

commit cd85fa3abecd1a24de0fdbdb21a0ed2a2074af91
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Sep 11 23:05:27 2020 -0500

    Better choice of code
    
    Followup to #19344

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 72a2d0966f..2427301262 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -246,21 +246,21 @@
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  * M871 - Print/reset/clear first layer temperature offset values. (Requires PROBE_TEMP_COMPENSATION)
- * M872 - Wait for probe temp (Requires PROBE_TEMP_COMPENSATION)
+ * M192 - Wait for probe temp (Requires PROBE_TEMP_COMPENSATION)
  * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
@@ -815,22 +815,22 @@ private:
     FORCE_INLINE static void M863() { I2CPEM.M863(); }
     FORCE_INLINE static void M864() { I2CPEM.M864(); }
     FORCE_INLINE static void M865() { I2CPEM.M865(); }
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
   #if ENABLED(PROBE_TEMP_COMPENSATION)
+    static void M192();
     static void M871();
-    static void M872();
   #endif
 
   TERN_(LIN_ADVANCE, static void M900());
 
   #if HAS_TRINAMIC_CONFIG
     static void M122();
     static void M906();
     TERN_(HAS_STEALTHCHOP, static void M569());
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();

commit 1917ed8741ed5c27c6a505c3936050e4f461d075
Author: Neskik <axel.gouverneur@gmail.com>
Date:   Sat Sep 12 05:51:19 2020 +0200

    M872 wait for probe temperature (#19344)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 23bf2c0ce5..72a2d0966f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -246,20 +246,21 @@
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  * M871 - Print/reset/clear first layer temperature offset values. (Requires PROBE_TEMP_COMPENSATION)
+ * M872 - Wait for probe temp (Requires PROBE_TEMP_COMPENSATION)
  * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
@@ -813,21 +814,24 @@ private:
     FORCE_INLINE static void M862() { I2CPEM.M862(); }
     FORCE_INLINE static void M863() { I2CPEM.M863(); }
     FORCE_INLINE static void M864() { I2CPEM.M864(); }
     FORCE_INLINE static void M865() { I2CPEM.M865(); }
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
-  TERN_(PROBE_TEMP_COMPENSATION, static void M871());
+  #if ENABLED(PROBE_TEMP_COMPENSATION)
+    static void M871();
+    static void M872();
+  #endif
 
   TERN_(LIN_ADVANCE, static void M900());
 
   #if HAS_TRINAMIC_CONFIG
     static void M122();
     static void M906();
     TERN_(HAS_STEALTHCHOP, static void M569());
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();

commit c488070859c1995fe957938b1b6302c4eeef1ea3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 23:57:51 2020 -0500

    Minor cleanup w/r/t LEDs

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8848450fc2..23bf2c0ce5 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -148,21 +148,21 @@
  * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M141 - Set heated chamber target temp. S<temp> (Requires a chamber heater)
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
- * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, PCA9533, or PCA9632).
+ * M150 - Set Status LED Color as R<red> U<green> B<blue> W<white> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, PCA9533, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
  * M164 - Commit the mix and save to a virtual tool (current, or as specified by 'S'). (Requires MIXING_EXTRUDER)
  * M165 - Set the mix for the mixing extruder (and current virtual tool) with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M166 - Set the Gradient Mix for the mixing extruder. (Requires GRADIENT_MIX)
  * M190 - S<temp> Wait for bed current temp to reach target temp. ** Wait only when heating! **
  *        R<temp> Wait for bed current temp to reach target temp. ** Wait for heating or cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **

commit 6036a0df6b8eeb5d7af97c82bbf0e6cb9636e424
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 02:07:42 2020 -0500

    Fix DUET_SMART_EFFECTOR

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e04cd637eb..8848450fc2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -229,21 +229,21 @@
  * M511 - Unlock Printer
  * M512 - Set/Change/Remove Password
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
- * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
+ * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires DUET_SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's XYZ offsets in current units. (Negative values: X=left, Y=front, Z=below)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
@@ -785,21 +785,21 @@ private:
   #endif
 
   TERN_(HAS_DUPLICATION_MODE, static void M605());
 
   TERN_(IS_KINEMATIC, static void M665());
 
   #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
     static void M666();
   #endif
 
-  #if ENABLED(SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
+  #if ENABLED(DUET_SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
     static void M672();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
   TERN_(GCODE_MACROS, static void M810_819());
 

commit 852e5ae0421810ecc6f44631237208030e70751f
Author: sherwin-dc <59867245+sherwin-dc@users.noreply.github.com>
Date:   Sun Aug 9 09:00:42 2020 +0800

    Password via G-code and MarlinUI (#18399)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 783781b9c3..e04cd637eb 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -218,20 +218,23 @@
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M430 - Read the system current, voltage, and power (Requires POWER_MONITOR_CURRENT, POWER_MONITOR_VOLTAGE, or POWER_MONITOR_FIXED_VOLTAGE)
  * M486 - Identify and cancel objects. (Requires CANCEL_OBJECTS)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
+ * M510 - Lock Printer
+ * M511 - Unlock Printer
+ * M512 - Set/Change/Remove Password
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
  * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
@@ -753,20 +756,30 @@ private:
   TERN_(CANCEL_OBJECTS, static void M486());
 
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
   TERN_(EEPROM_SETTINGS, static void M504());
 
+  #if ENABLED(PASSWORD_FEATURE)
+    static void M510();
+    #if ENABLED(PASSWORD_UNLOCK_GCODE)
+      static void M511();
+    #endif
+    #if ENABLED(PASSWORD_CHANGE_GCODE)
+      static void M512();
+    #endif
+  #endif
+
   TERN_(SDSUPPORT, static void M524());
 
   TERN_(SD_ABORT_ON_ENDSTOP_HIT, static void M540());
 
   TERN_(BAUD_RATE_GCODE, static void M575());
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif

commit 0a1b8659871f681464f24c40b16aa64cd2f7ca8e
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Aug 8 21:24:31 2020 -0300

    W25QXX SPI Flash support (#18897)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7e89e809d0..783781b9c3 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -269,20 +269,22 @@
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * G425 - Calibrate using a conductive object. (Requires CALIBRATION_GCODE)
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
+ * M993 - Backup SPI Flash to SD
+ * M994 - Load a Backup from SD to SPI Flash
  * M995 - Touch screen calibration for TFT display
  * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  *
  */
 
@@ -839,20 +841,25 @@ private:
       #endif
     #endif
   #endif
 
   TERN_(SDSUPPORT, static void M928());
 
   TERN_(MAGNETIC_PARKING_EXTRUDER, static void M951());
 
   TERN_(TOUCH_SCREEN_CALIBRATION, static void M995());
 
+  #if BOTH(HAS_SPI_FLASH, SDSUPPORT)
+    static void M993();
+    static void M994();
+  #endif
+
   TERN_(PLATFORM_M997_SUPPORT, static void M997());
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
   TERN_(SDSUPPORT, static void M1001());

commit 99ba866d8d3c9abc16558ca12ba34efb9a7922e5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Aug 6 08:14:00 2020 -0500

    Optimize G-code / feature dependencies (#18919)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7c469458cd..7e89e809d0 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -695,21 +695,21 @@ private:
 
   TERN_(PIDTEMPBED, static void M304());
 
   TERN_(HAS_USER_THERMISTORS, static void M305());
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
-  TERN_(HAS_CASE_LIGHT, static void M355());
+  TERN_(CASE_LIGHT_ENABLE, static void M355());
 
   TERN_(REPETIER_GCODE_M360, static void M360());
 
   #if ENABLED(MORGAN_SCARA)
     static bool M360();
     static bool M361();
     static bool M362();
     static bool M363();
     static bool M364();
   #endif
@@ -838,21 +838,21 @@ private:
         static void M910();
       #endif
     #endif
   #endif
 
   TERN_(SDSUPPORT, static void M928());
 
   TERN_(MAGNETIC_PARKING_EXTRUDER, static void M951());
 
   TERN_(TOUCH_SCREEN_CALIBRATION, static void M995());
-  
+
   TERN_(PLATFORM_M997_SUPPORT, static void M997());
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
   TERN_(SDSUPPORT, static void M1001());

commit 117df87d193994f6fbcd46c45573095adf921784
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Thu Jul 30 09:43:19 2020 +0300

    Support for TFT & Touch Screens (#18130)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index b3f339e295..7c469458cd 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -269,20 +269,21 @@
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * G425 - Calibrate using a conductive object. (Requires CALIBRATION_GCODE)
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
+ * M995 - Touch screen calibration for TFT display
  * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  *
  */
 
 #include "../inc/MarlinConfig.h"
@@ -836,20 +837,22 @@ private:
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 
   TERN_(SDSUPPORT, static void M928());
 
   TERN_(MAGNETIC_PARKING_EXTRUDER, static void M951());
 
+  TERN_(TOUCH_SCREEN_CALIBRATION, static void M995());
+  
   TERN_(PLATFORM_M997_SUPPORT, static void M997());
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
   TERN_(SDSUPPORT, static void M1001());

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 72ae1f92df..b3f339e295 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -9,38 +9,38 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
  * gcode.h - Temporary container for all gcode handlers
  */
 
 /**
  * -----------------
  * G-Codes in Marlin
  * -----------------
  *
  * Helpful G-code references:
  *  - https://marlinfw.org/meta/gcode
  *  - https://reprap.org/wiki/G-code
- *  - http://linuxcnc.org/docs/html/gcode.html
+ *  - https://linuxcnc.org/docs/html/gcode.html
  *
  * Help to document Marlin's G-codes online:
  *  - https://github.com/MarlinFirmware/MarlinDocumentation
  *
  * -----------------
  *
  * "G" Codes
  *
  * G0   -> G1
  * G1   - Coordinated Movement X Y Z E

commit c43bbcce152b4d3b4697e1e188d3bcada76a24a7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 1 16:27:28 2020 -0500

    Enforce sensor range for temperature target (#18465)
    
    * Mitigate stepper timeout
    
    * Add CHAMBER PWM code
    
    * Structured thermistor tables
    
    * Fix reversed sensor ranges
    
    * Prevent temps outside sensor range

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index ab17cc8d7d..72ae1f92df 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -327,22 +327,28 @@ public:
     static WorkspacePlane workspace_plane;
   #endif
 
   #define MAX_COORDINATE_SYSTEMS 9
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static int8_t active_coordinate_system;
     static xyz_pos_t coordinate_system[MAX_COORDINATE_SYSTEMS];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
-  static millis_t previous_move_ms;
-  FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
+  static millis_t previous_move_ms, max_inactive_time, stepper_inactive_time;
+  FORCE_INLINE static void reset_stepper_timeout(const millis_t ms=millis()) { previous_move_ms = ms; }
+  FORCE_INLINE static bool stepper_max_timed_out(const millis_t ms=millis()) {
+    return max_inactive_time && ELAPSED(ms, previous_move_ms + max_inactive_time);
+  }
+  FORCE_INLINE static bool stepper_inactive_timeout(const millis_t ms=millis()) {
+    return ELAPSED(ms, previous_move_ms + stepper_inactive_time);
+  }
 
   static int8_t get_target_extruder_from_command();
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);

commit 4275466f4930ce554419f5f03f07119b8a9aec04
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 24 19:44:50 2020 -0500

    Fix issues with no hotend / bed / fan (#18395)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8548f3a60c..ab17cc8d7d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -601,21 +601,21 @@ private:
   #if HAS_HEATED_BED
     static void M140();
     static void M190();
   #endif
 
   #if HAS_HEATED_CHAMBER
     static void M141();
     static void M191();
   #endif
 
-  #if HAS_HOTEND && HAS_LCD_MENU
+  #if PREHEAT_COUNT
     static void M145();
   #endif
 
   TERN_(TEMPERATURE_UNITS_SUPPORT, static void M149());
 
   TERN_(HAS_COLOR_LEDS, static void M150());
 
   #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
     static void M155();
   #endif

commit ac50a355a37673e521a052dc2d38d991144b4d05
Author: Rui Caridade <rmcbc@users.noreply.github.com>
Date:   Sun Jun 21 10:27:51 2020 +0100

    G35: Bed tramming assistant (#16897)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 06fcce0fa3..8548f3a60c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -58,20 +58,21 @@
  * G21  - Set input units to millimeters (Requires INCH_MODE_SUPPORT)
  * G26  - Mesh Validation Pattern (Requires G26_MESH_VALIDATION)
  * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
  * G28  - Home one or more axes
  * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
  * G34  - Z Stepper automatic alignment using probe: I<iterations> T<accuracy> A<amplification> (Requires Z_STEPPER_AUTO_ALIGN)
+ * G35  - Read bed corners to help adjust bed screws: T<screw_thread> (Requires ASSISTED_TRAMMING)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
  * G60  - Save current position. (Requires SAVED_POSITIONS)
  * G61  - Apply/restore saved coordinates. (Requires SAVED_POSITIONS)
  * G76  - Calibrate first layer temperature offsets. (Requires PROBE_TEMP_COMPENSATION)
  * G80  - Cancel current motion mode (Requires GCODE_MOTION_MODES)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
@@ -447,20 +448,22 @@ private:
     #endif
   #endif
 
   TERN_(DELTA_AUTO_CALIBRATION, static void G33());
 
   #if ENABLED(Z_STEPPER_AUTO_ALIGN)
     static void G34();
     static void M422();
   #endif
 
+  TERN_(ASSISTED_TRAMMING, static void G35());
+
   TERN_(G38_PROBE_TARGET, static void G38(const int8_t subcode));
 
   TERN_(HAS_MESH, static void G42());
 
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();

commit 424569b4c4bf112a3939724b30bad528a76a2b08
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 18 15:23:03 2020 -0500

    Power monitor and display (#17437)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 573ef0f625..06fcce0fa3 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -210,20 +210,21 @@
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M412 - Enable / Disable Filament Runout Detection. (Requires FILAMENT_RUNOUT_SENSOR)
  * M413 - Enable / Disable Power-Loss Recovery. (Requires POWER_LOSS_RECOVERY)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
+ * M430 - Read the system current, voltage, and power (Requires POWER_MONITOR_CURRENT, POWER_MONITOR_VOLTAGE, or POWER_MONITOR_FIXED_VOLTAGE)
  * M486 - Identify and cancel objects. (Requires CANCEL_OBJECTS)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
@@ -728,20 +729,22 @@ private:
 
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
   TERN_(BACKLASH_GCODE, static void M425());
 
   TERN_(HAS_M206_COMMAND, static void M428());
 
+  TERN_(HAS_POWER_MONITOR, static void M430());
+
   TERN_(CANCEL_OBJECTS, static void M486());
 
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
   TERN_(EEPROM_SETTINGS, static void M504());
 

commit 8a22ef0c83a94f742be39005f259226e005ded2d
Author: Colin Godsey <crgodsey@gmail.com>
Date:   Mon May 11 18:22:41 2020 -0600

    G6 Direct Stepping (#17853)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 92292f609b..573ef0f625 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -395,20 +395,22 @@ private:
       const bool fast_move=false
     #endif
   );
 
   TERN_(ARC_SUPPORT, static void G2_G3(const bool clockwise));
 
   static void G4();
 
   TERN_(BEZIER_CURVE_SUPPORT, static void G5());
 
+  TERN_(DIRECT_STEPPING, static void G6());
+
   #if ENABLED(FWRETRACT)
     static void G10();
     static void G11();
   #endif
 
   TERN_(NOZZLE_CLEAN_FEATURE, static void G12());
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     static void G17();
     static void G18();

commit a4c981469e317b30ff21fba109e1b126e5dcafcf
Author: Gurmeet Athwal <gurmeet.athwal@gmail.com>
Date:   Wed May 6 10:04:04 2020 +0530

    Extended reporting options (#16741)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 37521e8769..92292f609b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -684,20 +684,22 @@ private:
 
   TERN_(HAS_USER_THERMISTORS, static void M305());
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
   TERN_(HAS_CASE_LIGHT, static void M355());
 
+  TERN_(REPETIER_GCODE_M360, static void M360());
+
   #if ENABLED(MORGAN_SCARA)
     static bool M360();
     static bool M361();
     static bool M362();
     static bool M363();
     static bool M364();
   #endif
 
   #if EITHER(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
     static void M380();

commit 01c646a892c9cd36baf577ca9be344e3490a7727
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 22:35:25 2020 -0500

    Apply more HAS_HOTEND

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6a4a7af985..37521e8769 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -595,21 +595,21 @@ private:
   #if HAS_HEATED_BED
     static void M140();
     static void M190();
   #endif
 
   #if HAS_HEATED_CHAMBER
     static void M141();
     static void M191();
   #endif
 
-  #if HOTENDS && HAS_LCD_MENU
+  #if HAS_HOTEND && HAS_LCD_MENU
     static void M145();
   #endif
 
   TERN_(TEMPERATURE_UNITS_SUPPORT, static void M149());
 
   TERN_(HAS_COLOR_LEDS, static void M150());
 
   #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
     static void M155();
   #endif

commit 8b3c7dda755ebce5bd57a7ce52891a137ea12b35
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 04:41:18 2020 -0500

    Add HAS_FAN and others

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a3d37262f2..6a4a7af985 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -547,21 +547,21 @@ private:
 
   TERN_(M100_FREE_MEMORY_WATCHER, static void M100());
 
   #if EXTRUDERS
     static void M104();
     static void M109();
   #endif
 
   static void M105();
 
-  #if FAN_COUNT > 0
+  #if HAS_FAN
     static void M106();
     static void M107();
   #endif
 
   #if DISABLED(EMERGENCY_PARSER)
     static void M108();
     static void M112();
     static void M410();
     TERN_(HOST_PROMPT_SUPPORT, static void M876());
   #endif

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 98db10b08b..a3d37262f2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -344,21 +344,21 @@ public:
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);
   static void process_subcommands_now(char * gcode);
 
   static inline void home_all_axes() {
     extern const char G28_STR[];
     process_subcommands_now_P(G28_STR);
   }
 
-  #if HAS_AUTO_REPORTING || ENABLED(HOST_KEEPALIVE_FEATURE)
+  #if EITHER(HAS_AUTO_REPORTING, HOST_KEEPALIVE_FEATURE)
     static bool autoreport_paused;
     static inline bool set_autoreport_paused(const bool p) {
       const bool was = autoreport_paused;
       autoreport_paused = p;
       return was;
     }
   #else
     static constexpr bool autoreport_paused = false;
     static inline bool set_autoreport_paused(const bool) { return false; }
   #endif
@@ -603,21 +603,21 @@ private:
   #endif
 
   #if HOTENDS && HAS_LCD_MENU
     static void M145();
   #endif
 
   TERN_(TEMPERATURE_UNITS_SUPPORT, static void M149());
 
   TERN_(HAS_COLOR_LEDS, static void M150());
 
-  #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
+  #if BOTH(AUTO_REPORT_TEMPERATURES, HAS_TEMP_SENSOR)
     static void M155();
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
     static void M164();
     TERN_(DIRECT_MIXING_IN_G1, static void M165());
     TERN_(GRADIENT_MIX, static void M166());
   #endif
 
@@ -805,23 +805,23 @@ private:
   #endif
 
   #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
-  #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || HAS_I2C_DIGIPOT || ENABLED(DAC_STEPPER_CURRENT)
+  #if ANY(HAS_DIGIPOTSS, HAS_MOTOR_CURRENT_PWM, HAS_I2C_DIGIPOT, DAC_STEPPER_CURRENT)
     static void M907();
-    #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
+    #if EITHER(HAS_DIGIPOTSS, DAC_STEPPER_CURRENT)
       static void M908();
       #if ENABLED(DAC_STEPPER_CURRENT)
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 
   TERN_(SDSUPPORT, static void M928());
 

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9df5002e6e..98db10b08b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -389,57 +389,47 @@ public:
   static void dwell(millis_t time);
 
 private:
 
   static void G0_G1(
     #if IS_SCARA || defined(G0_FEEDRATE)
       const bool fast_move=false
     #endif
   );
 
-  #if ENABLED(ARC_SUPPORT)
-    static void G2_G3(const bool clockwise);
-  #endif
+  TERN_(ARC_SUPPORT, static void G2_G3(const bool clockwise));
 
   static void G4();
 
-  #if ENABLED(BEZIER_CURVE_SUPPORT)
-    static void G5();
-  #endif
+  TERN_(BEZIER_CURVE_SUPPORT, static void G5());
 
   #if ENABLED(FWRETRACT)
     static void G10();
     static void G11();
   #endif
 
-  #if ENABLED(NOZZLE_CLEAN_FEATURE)
-    static void G12();
-  #endif
+  TERN_(NOZZLE_CLEAN_FEATURE, static void G12());
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     static void G17();
     static void G18();
     static void G19();
   #endif
 
   #if ENABLED(INCH_MODE_SUPPORT)
     static void G20();
     static void G21();
   #endif
 
-  #if ENABLED(G26_MESH_VALIDATION)
-    static void G26();
-  #endif
+  TERN_(G26_MESH_VALIDATION, static void G26());
 
-  #if ENABLED(NOZZLE_PARK_FEATURE)
-    static void G27();
-  #endif
+  TERN_(NOZZLE_PARK_FEATURE, static void G27());
 
   static void G28();
 
   #if HAS_LEVELING
     #if ENABLED(G29_RETRY_AND_RECOVER)
       static void G29_with_retry();
       #define G29_TYPE bool
     #else
       #define G29_TYPE void
     #endif
@@ -447,92 +437,70 @@ private:
   #endif
 
   #if HAS_BED_PROBE
     static void G30();
     #if ENABLED(Z_PROBE_SLED)
       static void G31();
       static void G32();
     #endif
   #endif
 
-  #if ENABLED(DELTA_AUTO_CALIBRATION)
-    static void G33();
-  #endif
+  TERN_(DELTA_AUTO_CALIBRATION, static void G33());
 
   #if ENABLED(Z_STEPPER_AUTO_ALIGN)
     static void G34();
     static void M422();
   #endif
 
-  #if ENABLED(G38_PROBE_TARGET)
-    static void G38(const int8_t subcode);
-  #endif
+  TERN_(G38_PROBE_TARGET, static void G38(const int8_t subcode));
 
-  #if HAS_MESH
-    static void G42();
-  #endif
+  TERN_(HAS_MESH, static void G42());
 
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();
     static void G58();
     static void G59();
   #endif
 
-  #if ENABLED(PROBE_TEMP_COMPENSATION)
-    static void G76();
-  #endif
+  TERN_(PROBE_TEMP_COMPENSATION, static void G76());
 
   #if SAVED_POSITIONS
     static void G60();
     static void G61();
   #endif
 
-  #if ENABLED(GCODE_MOTION_MODES)
-    static void G80();
-  #endif
+  TERN_(GCODE_MOTION_MODES, static void G80());
 
   static void G92();
 
-  #if ENABLED(CALIBRATION_GCODE)
-    static void G425();
-  #endif
+  TERN_(CALIBRATION_GCODE, static void G425());
 
-  #if HAS_RESUME_CONTINUE
-    static void M0_M1();
-  #endif
+  TERN_(HAS_RESUME_CONTINUE, static void M0_M1());
 
   #if HAS_CUTTER
     static void M3_M4(const bool is_M4);
     static void M5();
   #endif
 
   #if ENABLED(COOLANT_CONTROL)
-    #if ENABLED(COOLANT_MIST)
-      static void M7();
-    #endif
-    #if ENABLED(COOLANT_FLOOD)
-      static void M8();
-    #endif
+    TERN_(COOLANT_MIST, static void M7());
+    TERN_(COOLANT_FLOOD, static void M8());
     static void M9();
   #endif
 
-  #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
-    static void M12();
-  #endif
+  TERN_(EXTERNAL_CLOSED_LOOP_CONTROLLER, static void M12());
 
-  #if ENABLED(EXPECTED_PRINTER_CHECK)
-    static void M16();
-  #endif
+  TERN_(EXPECTED_PRINTER_CHECK, static void M16());
 
   static void M17();
 
   static void M18_M84();
 
   #if ENABLED(SDSUPPORT)
     static void M20();
     static void M21();
     static void M22();
     static void M23();
@@ -542,103 +510,83 @@ private:
     static void M27();
     static void M28();
     static void M29();
     static void M30();
   #endif
 
   static void M31();
 
   #if ENABLED(SDSUPPORT)
     static void M32();
-    #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
-      static void M33();
-    #endif
+    TERN_(LONG_FILENAME_HOST_SUPPORT, static void M33());
     #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
       static void M34();
     #endif
   #endif
 
   static void M42();
 
-  #if ENABLED(PINS_DEBUGGING)
-    static void M43();
-  #endif
+  TERN_(PINS_DEBUGGING, static void M43());
 
-  #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
-    static void M48();
-  #endif
+  TERN_(Z_MIN_PROBE_REPEATABILITY_TEST, static void M48());
 
-  #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
-    static void M73();
-  #endif
+  TERN_(LCD_SET_PROGRESS_MANUALLY, static void M73());
 
   static void M75();
   static void M76();
   static void M77();
 
-  #if ENABLED(PRINTCOUNTER)
-    static void M78();
-  #endif
+  TERN_(PRINTCOUNTER, static void M78());
 
-  #if ENABLED(PSU_CONTROL)
-    static void M80();
-  #endif
+  TERN_(PSU_CONTROL, static void M80());
 
   static void M81();
   static void M82();
   static void M83();
   static void M85();
   static void M92();
 
-  #if ENABLED(M100_FREE_MEMORY_WATCHER)
-    static void M100();
-  #endif
+  TERN_(M100_FREE_MEMORY_WATCHER, static void M100());
 
   #if EXTRUDERS
     static void M104();
     static void M109();
   #endif
 
   static void M105();
 
   #if FAN_COUNT > 0
     static void M106();
     static void M107();
   #endif
 
   #if DISABLED(EMERGENCY_PARSER)
     static void M108();
     static void M112();
     static void M410();
-    #if ENABLED(HOST_PROMPT_SUPPORT)
-      static void M876();
-    #endif
+    TERN_(HOST_PROMPT_SUPPORT, static void M876());
   #endif
 
   static void M110();
   static void M111();
 
-  #if ENABLED(HOST_KEEPALIVE_FEATURE)
-    static void M113();
-  #endif
+  TERN_(HOST_KEEPALIVE_FEATURE, static void M113());
 
   static void M114();
   static void M115();
   static void M117();
   static void M118();
   static void M119();
   static void M120();
   static void M121();
 
-  #if ENABLED(PARK_HEAD_ON_PAUSE)
-    static void M125();
-  #endif
+  TERN_(PARK_HEAD_ON_PAUSE, static void M125());
 
   #if ENABLED(BARICUDA)
     #if HAS_HEATER_1
       static void M126();
       static void M127();
     #endif
     #if HAS_HEATER_2
       static void M128();
       static void M129();
     #endif
@@ -651,140 +599,104 @@ private:
 
   #if HAS_HEATED_CHAMBER
     static void M141();
     static void M191();
   #endif
 
   #if HOTENDS && HAS_LCD_MENU
     static void M145();
   #endif
 
-  #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
-    static void M149();
-  #endif
+  TERN_(TEMPERATURE_UNITS_SUPPORT, static void M149());
 
-  #if HAS_COLOR_LEDS
-    static void M150();
-  #endif
+  TERN_(HAS_COLOR_LEDS, static void M150());
 
   #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
     static void M155();
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
     static void M164();
-    #if ENABLED(DIRECT_MIXING_IN_G1)
-      static void M165();
-    #endif
-    #if ENABLED(GRADIENT_MIX)
-      static void M166();
-    #endif
+    TERN_(DIRECT_MIXING_IN_G1, static void M165());
+    TERN_(GRADIENT_MIX, static void M166());
   #endif
 
   static void M200();
   static void M201();
 
   #if 0
     static void M202(); // Not used for Sprinter/grbl gen6
   #endif
 
   static void M203();
   static void M204();
   static void M205();
 
-  #if HAS_M206_COMMAND
-    static void M206();
-  #endif
+  TERN_(HAS_M206_COMMAND, static void M206());
 
   #if ENABLED(FWRETRACT)
     static void M207();
     static void M208();
-    #if ENABLED(FWRETRACT_AUTORETRACT)
-      static void M209();
-    #endif
+    TERN_(FWRETRACT_AUTORETRACT, static void M209());
   #endif
 
   static void M211();
 
   #if EXTRUDERS > 1
     static void M217();
   #endif
 
-  #if HAS_HOTEND_OFFSET
-    static void M218();
-  #endif
+  TERN_(HAS_HOTEND_OFFSET, static void M218());
 
   static void M220();
 
   #if EXTRUDERS
     static void M221();
   #endif
 
   static void M226();
 
-  #if ENABLED(PHOTO_GCODE)
-    static void M240();
-  #endif
+  TERN_(PHOTO_GCODE, static void M240());
 
-  #if HAS_LCD_CONTRAST
-    static void M250();
-  #endif
+  TERN_(HAS_LCD_CONTRAST, static void M250());
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
-    #if ENABLED(EDITABLE_SERVO_ANGLES)
-      static void M281();
-    #endif
+    TERN_(EDITABLE_SERVO_ANGLES, static void M281());
   #endif
 
-  #if ENABLED(BABYSTEPPING)
-    static void M290();
-  #endif
+  TERN_(BABYSTEPPING, static void M290());
 
-  #if HAS_BUZZER
-    static void M300();
-  #endif
+  TERN_(HAS_BUZZER, static void M300());
 
-  #if ENABLED(PIDTEMP)
-    static void M301();
-  #endif
+  TERN_(PIDTEMP, static void M301());
 
-  #if ENABLED(PREVENT_COLD_EXTRUSION)
-    static void M302();
-  #endif
+  TERN_(PREVENT_COLD_EXTRUSION, static void M302());
 
-  #if HAS_PID_HEATING
-    static void M303();
-  #endif
+  TERN_(HAS_PID_HEATING, static void M303());
 
-  #if ENABLED(PIDTEMPBED)
-    static void M304();
-  #endif
+  TERN_(PIDTEMPBED, static void M304());
 
-  #if HAS_USER_THERMISTORS
-    static void M305();
-  #endif
+  TERN_(HAS_USER_THERMISTORS, static void M305());
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
-  #if HAS_CASE_LIGHT
-    static void M355();
-  #endif
+  TERN_(HAS_CASE_LIGHT, static void M355());
 
   #if ENABLED(MORGAN_SCARA)
     static bool M360();
     static bool M361();
     static bool M362();
     static bool M363();
     static bool M364();
   #endif
 
   #if EITHER(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
@@ -792,149 +704,111 @@ private:
     static void M381();
   #endif
 
   static void M400();
 
   #if HAS_BED_PROBE
     static void M401();
     static void M402();
   #endif
 
-  #if ENABLED(PRUSA_MMU2)
-    static void M403();
-  #endif
+  TERN_(PRUSA_MMU2, static void M403());
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
-  #if HAS_FILAMENT_SENSOR
-    static void M412();
-  #endif
+  TERN_(HAS_FILAMENT_SENSOR, static void M412());
 
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
-  #if ENABLED(BACKLASH_GCODE)
-    static void M425();
-  #endif
+  TERN_(BACKLASH_GCODE, static void M425());
 
-  #if HAS_M206_COMMAND
-    static void M428();
-  #endif
+  TERN_(HAS_M206_COMMAND, static void M428());
 
-  #if ENABLED(CANCEL_OBJECTS)
-    static void M486();
-  #endif
+  TERN_(CANCEL_OBJECTS, static void M486());
 
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
-  #if ENABLED(EEPROM_SETTINGS)
-    static void M504();
-  #endif
+  TERN_(EEPROM_SETTINGS, static void M504());
 
-  #if ENABLED(SDSUPPORT)
-    static void M524();
-  #endif
+  TERN_(SDSUPPORT, static void M524());
 
-  #if ENABLED(SD_ABORT_ON_ENDSTOP_HIT)
-    static void M540();
-  #endif
+  TERN_(SD_ABORT_ON_ENDSTOP_HIT, static void M540());
 
-  #if ENABLED(BAUD_RATE_GCODE)
-    static void M575();
-  #endif
+  TERN_(BAUD_RATE_GCODE, static void M575());
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
-  #if HAS_DUPLICATION_MODE
-    static void M605();
-  #endif
+  TERN_(HAS_DUPLICATION_MODE, static void M605());
 
-  #if IS_KINEMATIC
-    static void M665();
-  #endif
+  TERN_(IS_KINEMATIC, static void M665());
 
   #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
     static void M666();
   #endif
 
   #if ENABLED(SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
     static void M672();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
-  #if ENABLED(GCODE_MACROS)
-    static void M810_819();
-  #endif
+  TERN_(GCODE_MACROS, static void M810_819());
 
-  #if HAS_BED_PROBE
-    static void M851();
-  #endif
+  TERN_(HAS_BED_PROBE, static void M851());
 
-  #if ENABLED(SKEW_CORRECTION_GCODE)
-    static void M852();
-  #endif
+  TERN_(SKEW_CORRECTION_GCODE, static void M852());
 
   #if ENABLED(I2C_POSITION_ENCODERS)
     FORCE_INLINE static void M860() { I2CPEM.M860(); }
     FORCE_INLINE static void M861() { I2CPEM.M861(); }
     FORCE_INLINE static void M862() { I2CPEM.M862(); }
     FORCE_INLINE static void M863() { I2CPEM.M863(); }
     FORCE_INLINE static void M864() { I2CPEM.M864(); }
     FORCE_INLINE static void M865() { I2CPEM.M865(); }
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
-  #if ENABLED(PROBE_TEMP_COMPENSATION)
-    static void M871();
-  #endif
+  TERN_(PROBE_TEMP_COMPENSATION, static void M871());
 
-  #if ENABLED(LIN_ADVANCE)
-    static void M900();
-  #endif
+  TERN_(LIN_ADVANCE, static void M900());
 
   #if HAS_TRINAMIC_CONFIG
     static void M122();
     static void M906();
-    #if HAS_STEALTHCHOP
-      static void M569();
-    #endif
+    TERN_(HAS_STEALTHCHOP, static void M569());
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
-    #if ENABLED(HYBRID_THRESHOLD)
-      static void M913();
-    #endif
-    #if USE_SENSORLESS
-      static void M914();
-    #endif
+    TERN_(HYBRID_THRESHOLD, static void M913());
+    TERN_(USE_SENSORLESS, static void M914());
   #endif
 
   #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
@@ -942,46 +816,34 @@ private:
     static void M907();
     #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
       static void M908();
       #if ENABLED(DAC_STEPPER_CURRENT)
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 
-  #if ENABLED(SDSUPPORT)
-    static void M928();
-  #endif
+  TERN_(SDSUPPORT, static void M928());
 
-  #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
-    static void M951();
-  #endif
+  TERN_(MAGNETIC_PARKING_EXTRUDER, static void M951());
 
-  #if ENABLED(PLATFORM_M997_SUPPORT)
-    static void M997();
-  #endif
+  TERN_(PLATFORM_M997_SUPPORT, static void M997());
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
-  #if ENABLED(SDSUPPORT)
-    static void M1001();
-  #endif
+  TERN_(SDSUPPORT, static void M1001());
 
-  #if ENABLED(MAX7219_GCODE)
-    static void M7219();
-  #endif
+  TERN_(MAX7219_GCODE, static void M7219());
 
-  #if ENABLED(CONTROLLER_FAN_EDITABLE)
-    static void M710();
-  #endif
+  TERN_(CONTROLLER_FAN_EDITABLE, static void M710());
 
   static void T(const uint8_t tool_index);
 
 };
 
 extern GcodeSuite gcode;

commit 4a5a3d27ed29d7bab3de9b64b1a1728fd65c755f
Author: grauerfuchs <42082416+grauerfuchs@users.noreply.github.com>
Date:   Sat Apr 18 23:56:23 2020 -0400

    Option to use raw digipot values (#17536)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 315b080e33..9df5002e6e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -931,21 +931,21 @@ private:
   #endif
 
   #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
-  #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || EITHER(DIGIPOT_I2C, DAC_STEPPER_CURRENT)
+  #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || HAS_I2C_DIGIPOT || ENABLED(DAC_STEPPER_CURRENT)
     static void M907();
     #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
       static void M908();
       #if ENABLED(DAC_STEPPER_CURRENT)
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 

commit e3321920f3bab800812ed0d2395fb00fe80072fb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 12 17:21:02 2020 -0500

    Update Marlin website links to https

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8e5d054d99..315b080e33 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -24,21 +24,21 @@
 /**
  * gcode.h - Temporary container for all gcode handlers
  */
 
 /**
  * -----------------
  * G-Codes in Marlin
  * -----------------
  *
  * Helpful G-code references:
- *  - http://marlinfw.org/meta/gcode
+ *  - https://marlinfw.org/meta/gcode
  *  - https://reprap.org/wiki/G-code
  *  - http://linuxcnc.org/docs/html/gcode.html
  *
  * Help to document Marlin's G-codes online:
  *  - https://github.com/MarlinFirmware/MarlinDocumentation
  *
  * -----------------
  *
  * "G" Codes
  *

commit 747b964295118d425ad41cd7593dae48ccf9f14f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 28 03:18:53 2020 -0500

    Clean up user-wait, SD completion (#17315)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c1024ac440..8e5d054d99 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -961,20 +961,24 @@ private:
     static void M997();
   #endif
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
+  #if ENABLED(SDSUPPORT)
+    static void M1001();
+  #endif
+
   #if ENABLED(MAX7219_GCODE)
     static void M7219();
   #endif
 
   #if ENABLED(CONTROLLER_FAN_EDITABLE)
     static void M710();
   #endif
 
   static void T(const uint8_t tool_index);
 

commit 83eec683c969d793b473015476d03f868b470c04
Author: Erkan Colak <erkanc@gmx.de>
Date:   Wed Mar 18 19:41:12 2020 +0100

    New Controller Fan options and M710 gcode (#17149)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 27a038dde9..c1024ac440 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -965,15 +965,19 @@ private:
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
   #if ENABLED(MAX7219_GCODE)
     static void M7219();
   #endif
 
+  #if ENABLED(CONTROLLER_FAN_EDITABLE)
+    static void M710();
+  #endif
+
   static void T(const uint8_t tool_index);
 
 };
 
 extern GcodeSuite gcode;

commit 6bead0c1b04152f6a291d851f6cd4029fe0fc616
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 16:29:29 2020 -0500

    Shorter paths to HAL, ExtUI (#17156)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7360fcb9fb..27a038dde9 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -280,21 +280,21 @@
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  *
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
-  #include "../feature/I2CPositionEncoder.h"
+  #include "../feature/encoder_i2c.h"
 #endif
 
 enum AxisRelative : uint8_t { REL_X, REL_Y, REL_Z, REL_E, E_MODE_ABS, E_MODE_REL };
 
 class GcodeSuite {
 public:
 
   static uint8_t axis_relative;
 
   static inline bool axis_is_relative(const AxisEnum a) {

commit 5171e9da93d5913f7e4c75df9fdbe93c7c8fb32e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 2 20:50:06 2020 -0600

    No more direct G28 calls

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 0fb4a4e8ed..7360fcb9fb 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -427,21 +427,21 @@ private:
   #endif
 
   #if ENABLED(G26_MESH_VALIDATION)
     static void G26();
   #endif
 
   #if ENABLED(NOZZLE_PARK_FEATURE)
     static void G27();
   #endif
 
-  static void G28(const bool always_home_all);
+  static void G28();
 
   #if HAS_LEVELING
     #if ENABLED(G29_RETRY_AND_RECOVER)
       static void G29_with_retry();
       #define G29_TYPE bool
     #else
       #define G29_TYPE void
     #endif
     static G29_TYPE G29();
   #endif

commit b1a50d54e2a6f8e415a72e0e2d275304029d8ada
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 2 12:03:43 2020 -0600

    HAS_TRINAMIC => HAS_TRINAMIC_CONFIG

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c44c170811..0fb4a4e8ed 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -905,21 +905,21 @@ private:
   #endif
 
   #if ENABLED(PROBE_TEMP_COMPENSATION)
     static void M871();
   #endif
 
   #if ENABLED(LIN_ADVANCE)
     static void M900();
   #endif
 
-  #if HAS_TRINAMIC
+  #if HAS_TRINAMIC_CONFIG
     static void M122();
     static void M906();
     #if HAS_STEALTHCHOP
       static void M569();
     #endif
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)

commit a1f026f57ad7dbf4c50b135cf1dc0f9eacc06025
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Feb 20 20:09:37 2020 -0600

    Inline manage_inactivity, tweak autoreport_paused

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7670a81639..c44c170811 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -344,20 +344,32 @@ public:
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);
   static void process_subcommands_now(char * gcode);
 
   static inline void home_all_axes() {
     extern const char G28_STR[];
     process_subcommands_now_P(G28_STR);
   }
 
+  #if HAS_AUTO_REPORTING || ENABLED(HOST_KEEPALIVE_FEATURE)
+    static bool autoreport_paused;
+    static inline bool set_autoreport_paused(const bool p) {
+      const bool was = autoreport_paused;
+      autoreport_paused = p;
+      return was;
+    }
+  #else
+    static constexpr bool autoreport_paused = false;
+    static inline bool set_autoreport_paused(const bool) { return false; }
+  #endif
+
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     /**
      * States for managing Marlin and host communication
      * Marlin sends messages if blocked or busy
      */
     enum MarlinBusyState : char {
       NOT_BUSY,           // Not in a handler
       IN_HANDLER,         // Processing a GCode
       IN_PROCESS,         // Known to be blocking command input (as in G29)
       PAUSED_FOR_USER,    // Blocking pending any input

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 5bbc5e862c..7670a81639 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit e2eef1256a6feaceb8f4c7f02188e8d6d6d43519
Author: Hans007a <32525735+Hans007a@users.noreply.github.com>
Date:   Tue Jan 7 20:52:19 2020 +0100

    G60/G61 Position Save/Restore (#16557)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index f7111c6eec..5bbc5e862c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -60,20 +60,22 @@
  * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
  * G28  - Home one or more axes
  * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
  * G34  - Z Stepper automatic alignment using probe: I<iterations> T<accuracy> A<amplification> (Requires Z_STEPPER_AUTO_ALIGN)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
+ * G60  - Save current position. (Requires SAVED_POSITIONS)
+ * G61  - Apply/restore saved coordinates. (Requires SAVED_POSITIONS)
  * G76  - Calibrate first layer temperature offsets. (Requires PROBE_TEMP_COMPENSATION)
  * G80  - Cancel current motion mode (Requires GCODE_MOTION_MODES)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
@@ -464,20 +466,25 @@ private:
     static void G56();
     static void G57();
     static void G58();
     static void G59();
   #endif
 
   #if ENABLED(PROBE_TEMP_COMPENSATION)
     static void G76();
   #endif
 
+  #if SAVED_POSITIONS
+    static void G60();
+    static void G61();
+  #endif
+
   #if ENABLED(GCODE_MOTION_MODES)
     static void G80();
   #endif
 
   static void G92();
 
   #if ENABLED(CALIBRATION_GCODE)
     static void G425();
   #endif
 

commit 0d166f9c7dccbf5f1cc243f06e3882c82a4bd86a
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Sat Jan 25 02:00:51 2020 -0600

    Duet Smart Effector support (#16641)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 0fbfbfc404..f7111c6eec 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -221,21 +221,22 @@
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
- * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
+ * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops. (Requires [XYZ]_DUAL_ENDSTOPS)
+ * M672 - Set/Reset Duet Smart Effector's sensitivity. (Requires SMART_EFFECTOR and SMART_EFFECTOR_MOD_PIN)
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's XYZ offsets in current units. (Negative values: X=left, Y=front, Z=below)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
@@ -843,20 +844,24 @@ private:
   #endif
 
   #if IS_KINEMATIC
     static void M665();
   #endif
 
   #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
     static void M666();
   #endif
 
+  #if ENABLED(SMART_EFFECTOR) && PIN_EXISTS(SMART_EFFECTOR_MOD)
+    static void M672();
+  #endif
+
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
   #if ENABLED(GCODE_MACROS)
     static void M810_819();
   #endif
 
   #if HAS_BED_PROBE

commit a338dce83f6f3b3348a8422ad8acd7b81cc1cefe
Author: tompe-proj <59094873+tompe-proj@users.noreply.github.com>
Date:   Sat Jan 18 00:16:45 2020 +0100

    PINDA v2 temperature sensor / compensation (#16293)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 468f44cbea..0fbfbfc404 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -60,20 +60,21 @@
  * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
  * G28  - Home one or more axes
  * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
  * G34  - Z Stepper automatic alignment using probe: I<iterations> T<accuracy> A<amplification> (Requires Z_STEPPER_AUTO_ALIGN)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
+ * G76  - Calibrate first layer temperature offsets. (Requires PROBE_TEMP_COMPENSATION)
  * G80  - Cancel current motion mode (Requires GCODE_MOTION_MODES)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn ON Laser | Spindle (clockwise), set Power | Speed. (Requires SPINDLE_FEATURE or LASER_FEATURE)
@@ -236,20 +237,21 @@
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
+ * M871 - Print/reset/clear first layer temperature offset values. (Requires PROBE_TEMP_COMPENSATION)
  * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
@@ -457,20 +459,24 @@ private:
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();
     static void G58();
     static void G59();
   #endif
 
+  #if ENABLED(PROBE_TEMP_COMPENSATION)
+    static void G76();
+  #endif
+
   #if ENABLED(GCODE_MOTION_MODES)
     static void G80();
   #endif
 
   static void G92();
 
   #if ENABLED(CALIBRATION_GCODE)
     static void G425();
   #endif
 
@@ -867,20 +873,24 @@ private:
     FORCE_INLINE static void M862() { I2CPEM.M862(); }
     FORCE_INLINE static void M863() { I2CPEM.M863(); }
     FORCE_INLINE static void M864() { I2CPEM.M864(); }
     FORCE_INLINE static void M865() { I2CPEM.M865(); }
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
+  #if ENABLED(PROBE_TEMP_COMPENSATION)
+    static void M871();
+  #endif
+
   #if ENABLED(LIN_ADVANCE)
     static void M900();
   #endif
 
   #if HAS_TRINAMIC
     static void M122();
     static void M906();
     #if HAS_STEALTHCHOP
       static void M569();
     #endif

commit 1ad53cee1f4e2768310fca98de0381df9c39b617
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Mon Jan 13 18:47:30 2020 -0600

    Improved STMicro L64XX stepper driver support (#16452)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9f4675291f..468f44cbea 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -889,21 +889,21 @@ private:
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if USE_SENSORLESS
       static void M914();
     #endif
   #endif
 
-  #if HAS_DRIVER(L6470)
+  #if HAS_L64XX
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
   #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || EITHER(DIGIPOT_I2C, DAC_STEPPER_CURRENT)
     static void M907();
     #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)

commit 8ccfdaca028c89d0047175d0030153a487f93c12
Author: lukasmatena <33929324+lukasmatena@users.noreply.github.com>
Date:   Tue Nov 26 10:34:18 2019 +0100

    Add M220 B/R with PRUSA_MMU2 (#15739)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8ec414404b..9f4675291f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -170,20 +170,21 @@
             X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
  * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
  * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT_AUTORETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
+ *        Use "M220 B" to back up the Feedrate Percentage and "M220 R" to restore it. (Requires PRUSA_MMU2)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
  * M240 - Trigger a camera to take a photograph. (Requires PHOTO_GCODE)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>

commit ca6d00b862049773135a9ef8d04d042f0af7f9d3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Nov 1 23:51:25 2019 -0500

    Save some string flash

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 1b4bb8ced3..8ec414404b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -333,21 +333,24 @@ public:
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
   // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);
   static void process_subcommands_now(char * gcode);
 
-  static inline void home_all_axes() { process_subcommands_now_P(PSTR("G28")); }
+  static inline void home_all_axes() {
+    extern const char G28_STR[];
+    process_subcommands_now_P(G28_STR);
+  }
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     /**
      * States for managing Marlin and host communication
      * Marlin sends messages if blocked or busy
      */
     enum MarlinBusyState : char {
       NOT_BUSY,           // Not in a handler
       IN_HANDLER,         // Processing a GCode
       IN_PROCESS,         // Known to be blocking command input (as in G29)

commit 93f001295988a335552d8fea5463a112e3aa64e4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 24 15:35:40 2019 -0500

    Cancel Objects - As seen at ERRF2019 (#15590)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9fac07c906..1b4bb8ced3 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -206,20 +206,21 @@
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M412 - Enable / Disable Filament Runout Detection. (Requires FILAMENT_RUNOUT_SENSOR)
  * M413 - Enable / Disable Power-Loss Recovery. (Requires POWER_LOSS_RECOVERY)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
+ * M486 - Identify and cancel objects. (Requires CANCEL_OBJECTS)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
@@ -789,20 +790,24 @@ private:
   #endif
 
   #if ENABLED(BACKLASH_GCODE)
     static void M425();
   #endif
 
   #if HAS_M206_COMMAND
     static void M428();
   #endif
 
+  #if ENABLED(CANCEL_OBJECTS)
+    static void M486();
+  #endif
+
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
   #if ENABLED(EEPROM_SETTINGS)
     static void M504();
   #endif
 

commit af214ff121dd977b002c9a9065f84b7ae1a66247
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 22 15:43:37 2019 -0500

    Fix up PSU_CONTROL checks

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9d2b11a07b..9fac07c906 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -541,21 +541,21 @@ private:
   #endif
 
   static void M75();
   static void M76();
   static void M77();
 
   #if ENABLED(PRINTCOUNTER)
     static void M78();
   #endif
 
-  #if HAS_POWER_SWITCH
+  #if ENABLED(PSU_CONTROL)
     static void M80();
   #endif
 
   static void M81();
   static void M82();
   static void M83();
   static void M85();
   static void M92();
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)

commit 0d7736d6636760a4fd706aab3558e5ea67487e14
Author: Bo Herrmannsen <bo.herrmannsen@gmail.com>
Date:   Wed Oct 16 22:02:37 2019 +0200

    Enable M191 (#15531)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 619f50b61f..9d2b11a07b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -613,21 +613,21 @@ private:
     #endif
   #endif
 
   #if HAS_HEATED_BED
     static void M140();
     static void M190();
   #endif
 
   #if HAS_HEATED_CHAMBER
     static void M141();
-    //static void M191();
+    static void M191();
   #endif
 
   #if HOTENDS && HAS_LCD_MENU
     static void M145();
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
   #endif
 

commit 50e4545255605eb506c20eb107270038b0fe7bdb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 29 04:25:39 2019 -0500

    Add custom types for position (#15204)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index f871d6d216..619f50b61f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -314,21 +314,21 @@ public:
      * Workspace planes only apply to G2/G3 moves
      * (and "canned cycles" - not a current feature)
      */
     enum WorkspacePlane : char { PLANE_XY, PLANE_ZX, PLANE_YZ };
     static WorkspacePlane workspace_plane;
   #endif
 
   #define MAX_COORDINATE_SYSTEMS 9
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static int8_t active_coordinate_system;
-    static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
+    static xyz_pos_t coordinate_system[MAX_COORDINATE_SYSTEMS];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
   static millis_t previous_move_ms;
   FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
 
   static int8_t get_target_extruder_from_command();
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 

commit 455dabb18334c89878a75be62bccebd9f537574d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 26 01:28:09 2019 -0500

    Add a feedRate_t data type (#15349)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2282da57ae..f871d6d216 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -363,21 +363,21 @@ public:
   #else
     #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
   static void G0_G1(
     #if IS_SCARA || defined(G0_FEEDRATE)
-      bool fast_move=false
+      const bool fast_move=false
     #endif
   );
 
   #if ENABLED(ARC_SUPPORT)
     static void G2_G3(const bool clockwise);
   #endif
 
   static void G4();
 
   #if ENABLED(BEZIER_CURVE_SUPPORT)

commit df1e51258a8bcc432deed9f5bd60df41a75b2c32
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Sep 24 22:29:21 2019 -0400

    Add M851 X Y probe offsets (#15202)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2d8db7ebd1..2282da57ae 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -222,21 +222,21 @@
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
- * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
+ * M851 - Set Z probe's XYZ offsets in current units. (Negative values: X=left, Y=front, Z=below)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.

commit 6091e6300aa86a52fd855f4f6ab8d7f8a1ad57f9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Sep 11 01:29:33 2019 -0500

    Fix G90, G91, M82, M83 rel/abs modes (#15218)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8840d40d6a..2d8db7ebd1 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -276,26 +276,45 @@
  *
  */
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/I2CPositionEncoder.h"
 #endif
 
+enum AxisRelative : uint8_t { REL_X, REL_Y, REL_Z, REL_E, E_MODE_ABS, E_MODE_REL };
+
 class GcodeSuite {
 public:
 
-  GcodeSuite() {}
-
-  static bool axis_relative_modes[];
+  static uint8_t axis_relative;
+
+  static inline bool axis_is_relative(const AxisEnum a) {
+    if (a == E_AXIS) {
+      if (TEST(axis_relative, E_MODE_REL)) return true;
+      if (TEST(axis_relative, E_MODE_ABS)) return false;
+    }
+    return TEST(axis_relative, a);
+  }
+  static inline void set_relative_mode(const bool rel) {
+    axis_relative = rel ? _BV(REL_X) | _BV(REL_Y) | _BV(REL_Z) | _BV(REL_E) : 0;
+  }
+  static inline void set_e_relative() {
+    CBI(axis_relative, E_MODE_ABS);
+    SBI(axis_relative, E_MODE_REL);
+  }
+  static inline void set_e_absolute() {
+    CBI(axis_relative, E_MODE_REL);
+    SBI(axis_relative, E_MODE_ABS);
+  }
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     /**
      * Workspace planes only apply to G2/G3 moves
      * (and "canned cycles" - not a current feature)
      */
     enum WorkspacePlane : char { PLANE_XY, PLANE_ZX, PLANE_YZ };
     static WorkspacePlane workspace_plane;
   #endif
 

commit 584c86bed1d81548da03681bd3b3c6bd54ae0fe3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 10 02:20:49 2019 -0500

    More "zero extruders" changes (#15213)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c9b0cec2af..8840d40d6a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -536,36 +536,41 @@ private:
   static void M81();
   static void M82();
   static void M83();
   static void M85();
   static void M92();
 
   #if ENABLED(M100_FREE_MEMORY_WATCHER)
     static void M100();
   #endif
 
-  static void M104();
+  #if EXTRUDERS
+    static void M104();
+    static void M109();
+  #endif
+
   static void M105();
-  static void M106();
-  static void M107();
+
+  #if FAN_COUNT > 0
+    static void M106();
+    static void M107();
+  #endif
 
   #if DISABLED(EMERGENCY_PARSER)
     static void M108();
     static void M112();
     static void M410();
     #if ENABLED(HOST_PROMPT_SUPPORT)
       static void M876();
     #endif
   #endif
 
-  static void M109();
-
   static void M110();
   static void M111();
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     static void M113();
   #endif
 
   static void M114();
   static void M115();
   static void M117();
@@ -592,21 +597,21 @@ private:
   #if HAS_HEATED_BED
     static void M140();
     static void M190();
   #endif
 
   #if HAS_HEATED_CHAMBER
     static void M141();
     //static void M191();
   #endif
 
-  #if HAS_LCD_MENU
+  #if HOTENDS && HAS_LCD_MENU
     static void M145();
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
   #endif
 
   #if HAS_COLOR_LEDS
     static void M150();
   #endif
@@ -653,21 +658,25 @@ private:
 
   #if EXTRUDERS > 1
     static void M217();
   #endif
 
   #if HAS_HOTEND_OFFSET
     static void M218();
   #endif
 
   static void M220();
-  static void M221();
+
+  #if EXTRUDERS
+    static void M221();
+  #endif
+
   static void M226();
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif
 
   #if HAS_LCD_CONTRAST
     static void M250();
   #endif
 

commit b7796bcce6a1d375b57d72db5fd4dd03d66fcceb
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Aug 28 01:51:01 2019 -0400

    Disable steppers on M112 (#15065)
    
    And change verbiage to not refer to "Emergency Stop."

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c12d5bde84..c9b0cec2af 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -125,21 +125,21 @@
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
  * M106 - Set print fan speed.
  * M107 - Print fan off.
  * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
  * M109 - S<temp> Wait for extruder current temp to reach target temp. ** Wait only when heating! **
  *        R<temp> Wait for extruder current temp to reach target temp. ** Wait for heating or cooling. **
  *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
  * M110 - Set the current line number. (Used by host printing)
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
- * M112 - Emergency stop.
+ * M112 - Full Shutdown.
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
  * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)

commit 0fbb26c28fb714a6b34fe0b69b07fc14835c957b
Author: Joseph Bozarth <bozarjp@gmail.com>
Date:   Tue Aug 13 23:38:45 2019 -0500

    M16 - Expected Printer Check (#14924)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9a90c5df4d..c12d5bde84 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -76,20 +76,21 @@
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn ON Laser | Spindle (clockwise), set Power | Speed. (Requires SPINDLE_FEATURE or LASER_FEATURE)
  * M4   - Turn ON Laser | Spindle (counter-clockwise), set Power | Speed. (Requires SPINDLE_FEATURE or LASER_FEATURE)
  * M5   - Turn OFF Laser | Spindle. (Requires SPINDLE_FEATURE or LASER_FEATURE)
  * M7   - Turn mist coolant ON. (Requires COOLANT_CONTROL)
  * M8   - Turn flood coolant ON. (Requires COOLANT_CONTROL)
  * M9   - Turn coolant OFF. (Requires COOLANT_CONTROL)
  * M12  - Set up closed loop control system. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
+ * M16  - Expected printer check. (Requires EXPECTED_PRINTER_CHECK)
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
  * M27  - Report SD print status. (Requires SDSUPPORT)
@@ -465,20 +466,24 @@ private:
     #if ENABLED(COOLANT_FLOOD)
       static void M8();
     #endif
     static void M9();
   #endif
 
   #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
     static void M12();
   #endif
 
+  #if ENABLED(EXPECTED_PRINTER_CHECK)
+    static void M16();
+  #endif
+
   static void M17();
 
   static void M18_M84();
 
   #if ENABLED(SDSUPPORT)
     static void M20();
     static void M21();
     static void M22();
     static void M23();
     static void M24();

commit c2b319360db9ae41d07e59412028eb51fabe2383
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jul 30 20:19:34 2019 -0500

    Remove extra pragmas

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8de0f65a46..9a90c5df4d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -267,21 +267,20 @@
  * G425 - Calibrate using a conductive object. (Requires CALIBRATION_GCODE)
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  *
  */
-#pragma once
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/I2CPositionEncoder.h"
 #endif
 
 class GcodeSuite {
 public:

commit e44fccf3d25c6adae4347cf54b654b66a797f7b2
Author: rafaljot <rafal@jastrzebscy.org>
Date:   Tue Jul 30 08:30:00 2019 +0100

    Add support for M575 (#14757)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 93b91e3eec..8de0f65a46 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -775,20 +775,24 @@ private:
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M524();
   #endif
 
   #if ENABLED(SD_ABORT_ON_ENDSTOP_HIT)
     static void M540();
   #endif
 
+  #if ENABLED(BAUD_RATE_GCODE)
+    static void M575();
+  #endif
+
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
   #if HAS_DUPLICATION_MODE
     static void M605();
   #endif
 
   #if IS_KINEMATIC

commit b6546ea33a0f6eebee520dda516e04d3b68ded55
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jul 4 22:44:12 2019 -0500

    Add include guards to some headers

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 1f283c6453..93b91e3eec 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -12,20 +12,21 @@
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 /**
  * gcode.h - Temporary container for all gcode handlers
  */
 
 /**
  * -----------------
  * G-Codes in Marlin
  * -----------------
  *

commit eb6dec03bd8d5f6a99b594c933f0934c348f5034
Author: Tim Moore <tim@youngmoores.com>
Date:   Thu Jul 4 23:58:34 2019 -0700

    Simplify power supply naming logic (#14488)
    
    Co-Authored-By: Tim Moore <tim.moore@lightbend.com>
    Co-Authored-By: AnHardt <github@kitelab.de>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 4531616437..1f283c6453 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -104,22 +104,22 @@
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.
  * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins
  * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> S<chizoid>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
  * M73  - Set the progress percentage. (Requires LCD_SET_PROGRESS_MANUALLY)
  * M75  - Start the print job timer.
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
- * M80  - Turn on Power Supply. (Requires POWER_SUPPLY > 0)
- * M81  - Turn off Power Supply. (Requires POWER_SUPPLY > 0)
+ * M80  - Turn on Power Supply. (Requires PSU_CONTROL)
+ * M81  - Turn off Power Supply. (Requires PSU_CONTROL)
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.
  * M85  - Set inactivity shutdown timer with parameter S<seconds>. To disable set zero (default)
  * M92  - Set planner.settings.axis_steps_per_mm for one or more axes.
  * M100 - Watch Free Memory (for debugging) (Requires M100_FREE_MEMORY_WATCHER)
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
  * M106 - Set print fan speed.

commit d16954dc885f75869b572549c5e90561b89a95bc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jun 29 22:49:50 2019 -0500

    Make KEEPALIVE_STATE a scoped auto-restore (#14446)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 98c46cc3d0..4531616437 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -332,23 +332,23 @@ public:
       IN_PROCESS,         // Known to be blocking command input (as in G29)
       PAUSED_FOR_USER,    // Blocking pending any input
       PAUSED_FOR_INPUT    // Blocking pending text input (concept)
     };
 
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 
     static void host_keepalive();
 
-    #define KEEPALIVE_STATE(n) gcode.busy_state = gcode.n
+    #define KEEPALIVE_STATE(N) REMEMBER(_KA_, gcode.busy_state, gcode.N)
   #else
-    #define KEEPALIVE_STATE(n) NOOP
+    #define KEEPALIVE_STATE(N) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
   static void G0_G1(
     #if IS_SCARA || defined(G0_FEEDRATE)
       bool fast_move=false
     #endif

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8878cf9abf..98c46cc3d0 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit d7d80418aedad1c89e27fcba6aab9aa48187b5cc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 27 23:06:49 2019 -0500

    Singleton for cutting tools (#14429)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index d5656c7a43..8878cf9abf 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -68,23 +68,23 @@
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
  * G80  - Cancel current motion mode (Requires GCODE_MOTION_MODES)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
- * M3   - Turn ON Laser | Spindle (clockwise), set Power | Speed. (Requires SPINDLE_LASER_ENABLE)
- * M4   - Turn ON Laser | Spindle (counter-clockwise), set Power | Speed. (Requires SPINDLE_LASER_ENABLE)
- * M5   - Turn OFF Laser | Spindle. (Requires SPINDLE_LASER_ENABLE)
+ * M3   - Turn ON Laser | Spindle (clockwise), set Power | Speed. (Requires SPINDLE_FEATURE or LASER_FEATURE)
+ * M4   - Turn ON Laser | Spindle (counter-clockwise), set Power | Speed. (Requires SPINDLE_FEATURE or LASER_FEATURE)
+ * M5   - Turn OFF Laser | Spindle. (Requires SPINDLE_FEATURE or LASER_FEATURE)
  * M7   - Turn mist coolant ON. (Requires COOLANT_CONTROL)
  * M8   - Turn flood coolant ON. (Requires COOLANT_CONTROL)
  * M9   - Turn coolant OFF. (Requires COOLANT_CONTROL)
  * M12  - Set up closed loop control system. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
@@ -446,21 +446,21 @@ private:
   static void G92();
 
   #if ENABLED(CALIBRATION_GCODE)
     static void G425();
   #endif
 
   #if HAS_RESUME_CONTINUE
     static void M0_M1();
   #endif
 
-  #if ENABLED(SPINDLE_LASER_ENABLE)
+  #if HAS_CUTTER
     static void M3_M4(const bool is_M4);
     static void M5();
   #endif
 
   #if ENABLED(COOLANT_CONTROL)
     #if ENABLED(COOLANT_MIST)
       static void M7();
     #endif
     #if ENABLED(COOLANT_FLOOD)
       static void M8();

commit 4df4c47994f248428ae30218800803e467327b6e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 20 15:47:50 2019 -0500

    Add TMC2209 support (#14249)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 0ec531e550..d5656c7a43 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -132,21 +132,21 @@
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
  * M112 - Emergency stop.
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
- * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660 or L6470)
+ * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M141 - Set heated chamber target temp. S<temp> (Requires a chamber heater)
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, PCA9533, or PCA9632).
@@ -211,21 +211,21 @@
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
- * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130 or TMC2208)
+ * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130/2160/2208/2209/5130/5160)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
@@ -234,27 +234,27 @@
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
- * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660 or L6470)
+ * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660 or L6470)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
- * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
- * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
+ * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
+ * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/2160/5130/5160/2208/2209/2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  * M916 - L6470 tuning: Increase KVAL_HOLD until thermal warning. (Requires at least one _DRIVER_TYPE L6470)
  * M917 - L6470 tuning: Find minimum current thresholds. (Requires at least one _DRIVER_TYPE L6470)
  * M918 - L6470 tuning: Increase speed until max or error. (Requires at least one _DRIVER_TYPE L6470)
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
  * M7219 - Control Max7219 Matrix LEDs. (Requires MAX7219_GCODE)
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)

commit 4c872a01f284cbf181f52c84e2ba6b4618e62556
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 19 00:00:19 2019 -0500

    G-code queue singleton, front injection (#14236)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 21f4a1cb80..0ec531e550 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -308,21 +308,21 @@ public:
   static millis_t previous_move_ms;
   FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
 
   static int8_t get_target_extruder_from_command();
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
   static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
-  // Execute G-code as a macro, preserving parser state
+  // Execute G-code in-place, preserving current G-code parameters
   static void process_subcommands_now_P(PGM_P pgcode);
   static void process_subcommands_now(char * gcode);
 
   static inline void home_all_axes() { process_subcommands_now_P(PSTR("G28")); }
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     /**
      * States for managing Marlin and host communication
      * Marlin sends messages if blocked or busy
      */

commit bf64dd4db6e28f3ab9cddabbcdec3a56abda03de
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Jun 18 08:02:18 2019 -0400

    Improve G34, M422 (Z alignment) (#14142)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3817142cc0..21f4a1cb80 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -305,33 +305,28 @@ public:
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
   static millis_t previous_move_ms;
   FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
 
   static int8_t get_target_extruder_from_command();
   static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
-  static void process_parsed_command(
-    #if USE_EXECUTE_COMMANDS_IMMEDIATE
-      const bool no_ok = false
-    #endif
-  );
+  static void process_parsed_command(const bool no_ok=false);
   static void process_next_command();
 
-  #if USE_EXECUTE_COMMANDS_IMMEDIATE
-    static void process_subcommands_now_P(PGM_P pgcode);
-    static void process_subcommands_now(char * gcode);
-  #endif
+  // Execute G-code as a macro, preserving parser state
+  static void process_subcommands_now_P(PGM_P pgcode);
+  static void process_subcommands_now(char * gcode);
 
-  FORCE_INLINE static void home_all_axes() { G28(true); }
+  static inline void home_all_axes() { process_subcommands_now_P(PSTR("G28")); }
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     /**
      * States for managing Marlin and host communication
      * Marlin sends messages if blocked or busy
      */
     enum MarlinBusyState : char {
       NOT_BUSY,           // Not in a handler
       IN_HANDLER,         // Processing a GCode
       IN_PROCESS,         // Known to be blocking command input (as in G29)

commit 3f6424076bff60b0aca3368c5f8433079650c88a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 18 05:03:42 2019 -0500

    Update M524 description

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index cf1f1db26a..3817142cc0 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -209,21 +209,21 @@
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
- * M524 - Abort the current SD print job (started with M24)
+ * M524 - Abort the current SD print job started with M24. (Requires SDSUPPORT)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130 or TMC2208)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)

commit bf8bfb5c66bd3b2f86e522c441affb832982ec39
Author: mb300sd <mb300sd@mb300sd.net>
Date:   Thu Jun 13 19:43:11 2019 -0400

    Add Coolant Control M7/M8/M9 (#10745)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7223abf55f..cf1f1db26a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -68,23 +68,26 @@
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
  * G80  - Cancel current motion mode (Requires GCODE_MOTION_MODES)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
- * M3   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to clockwise
- * M4   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to counter-clockwise
- * M5   - Turn laser/spindle off
+ * M3   - Turn ON Laser | Spindle (clockwise), set Power | Speed. (Requires SPINDLE_LASER_ENABLE)
+ * M4   - Turn ON Laser | Spindle (counter-clockwise), set Power | Speed. (Requires SPINDLE_LASER_ENABLE)
+ * M5   - Turn OFF Laser | Spindle. (Requires SPINDLE_LASER_ENABLE)
+ * M7   - Turn mist coolant ON. (Requires COOLANT_CONTROL)
+ * M8   - Turn flood coolant ON. (Requires COOLANT_CONTROL)
+ * M9   - Turn coolant OFF. (Requires COOLANT_CONTROL)
  * M12  - Set up closed loop control system. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
@@ -453,20 +456,30 @@ private:
 
   #if HAS_RESUME_CONTINUE
     static void M0_M1();
   #endif
 
   #if ENABLED(SPINDLE_LASER_ENABLE)
     static void M3_M4(const bool is_M4);
     static void M5();
   #endif
 
+  #if ENABLED(COOLANT_CONTROL)
+    #if ENABLED(COOLANT_MIST)
+      static void M7();
+    #endif
+    #if ENABLED(COOLANT_FLOOD)
+      static void M8();
+    #endif
+    static void M9();
+  #endif
+
   #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
     static void M12();
   #endif
 
   static void M17();
 
   static void M18_M84();
 
   #if ENABLED(SDSUPPORT)
     static void M20();

commit 0ca2073625fcf1eb35de8c37d49960bf20bed4b6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jun 10 17:25:43 2019 -0500

    ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED => SD_ABORT_ON_ENDSTOP_HIT

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8aabf79a90..7223abf55f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -207,21 +207,21 @@
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M524 - Abort the current SD print job (started with M24)
- * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
+ * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires SD_ABORT_ON_ENDSTOP_HIT)
  * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130 or TMC2208)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
@@ -762,21 +762,21 @@ private:
     static void M503();
   #endif
   #if ENABLED(EEPROM_SETTINGS)
     static void M504();
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M524();
   #endif
 
-  #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
+  #if ENABLED(SD_ABORT_ON_ENDSTOP_HIT)
     static void M540();
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
   #if HAS_DUPLICATION_MODE
     static void M605();

commit 8e8e48f9004155897d572a099131b0b62592cee6
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Wed May 29 04:39:55 2019 +0200

    Fix links in templates, gcode.h (#14160)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6037804693..8aabf79a90 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -23,25 +23,25 @@
 /**
  * gcode.h - Temporary container for all gcode handlers
  */
 
 /**
  * -----------------
  * G-Codes in Marlin
  * -----------------
  *
  * Helpful G-code references:
- *  - http://linuxcnc.org/handbook/gcode/g-code.html
- *  - http://objects.reprap.org/wiki/Mendel_User_Manual:_RepRapGCodes
+ *  - http://marlinfw.org/meta/gcode
+ *  - https://reprap.org/wiki/G-code
+ *  - http://linuxcnc.org/docs/html/gcode.html
  *
  * Help to document Marlin's G-codes online:
- *  - http://reprap.org/wiki/G-code
  *  - https://github.com/MarlinFirmware/MarlinDocumentation
  *
  * -----------------
  *
  * "G" Codes
  *
  * G0   -> G1
  * G1   - Coordinated Movement X Y Z E
  * G2   - CW ARC
  * G3   - CCW ARC

commit fc52c43a26f6a56f04f4968c8fdf3e910226749e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri May 24 16:30:19 2019 -0500

    Some documentation updates

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 95f9316a49..6037804693 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -96,69 +96,71 @@
  * M30  - Delete file from SD: "M30 /path/file.gco"
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.
  * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins
  * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> S<chizoid>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
+ * M73  - Set the progress percentage. (Requires LCD_SET_PROGRESS_MANUALLY)
  * M75  - Start the print job timer.
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
  * M80  - Turn on Power Supply. (Requires POWER_SUPPLY > 0)
  * M81  - Turn off Power Supply. (Requires POWER_SUPPLY > 0)
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.
  * M85  - Set inactivity shutdown timer with parameter S<seconds>. To disable set zero (default)
  * M92  - Set planner.settings.axis_steps_per_mm for one or more axes.
  * M100 - Watch Free Memory (for debugging) (Requires M100_FREE_MEMORY_WATCHER)
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
  * M106 - Set print fan speed.
  * M107 - Print fan off.
  * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
- * M109 - Sxxx Wait for extruder current temp to reach target temp. Waits only when heating
- *        Rxxx Wait for extruder current temp to reach target temp. Waits when heating and cooling
+ * M109 - S<temp> Wait for extruder current temp to reach target temp. ** Wait only when heating! **
+ *        R<temp> Wait for extruder current temp to reach target temp. ** Wait for heating or cooling. **
  *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
  * M110 - Set the current line number. (Used by host printing)
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
  * M112 - Emergency stop.
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
- * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
+ * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660 or L6470)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
+ * M141 - Set heated chamber target temp. S<temp> (Requires a chamber heater)
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, PCA9533, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
  * M164 - Commit the mix and save to a virtual tool (current, or as specified by 'S'). (Requires MIXING_EXTRUDER)
  * M165 - Set the mix for the mixing extruder (and current virtual tool) with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M166 - Set the Gradient Mix for the mixing extruder. (Requires GRADIENT_MIX)
- * M190 - Sxxx Wait for bed current temp to reach target temp. ** Waits only when heating! **
- *        Rxxx Wait for bed current temp to reach target temp. ** Waits for heating or cooling. **
+ * M190 - S<temp> Wait for bed current temp to reach target temp. ** Wait only when heating! **
+ *        R<temp> Wait for bed current temp to reach target temp. ** Wait for heating or cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
  * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>
             X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
  * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
@@ -203,64 +205,69 @@
  * M413 - Enable / Disable Power-Loss Recovery. (Requires POWER_LOSS_RECOVERY)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
+ * M504 - Validate EEPROM contents. (Requires EEPROM_SETTINGS)
  * M524 - Abort the current SD print job (started with M24)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
- * M569 - Enable stealthChop on an axis. (Requires at least one #_X_DRIVER_TYPE to be TMC2130 or TMC2208)
+ * M569 - Enable stealthChop on an axis. (Requires at least one _DRIVER_TYPE to be TMC2130 or TMC2208)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
+ * M876 - Handle Prompt Response. (Requires HOST_PROMPT_SUPPORT and not EMERGENCY_PARSER)
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
- * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
+ * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660 or L6470)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
- * M917 - L6470 tuning: Find minimum current thresholds
- * M918 - L6470 tuning: Increase speed until max or error
+ * M916 - L6470 tuning: Increase KVAL_HOLD until thermal warning. (Requires at least one _DRIVER_TYPE L6470)
+ * M917 - L6470 tuning: Find minimum current thresholds. (Requires at least one _DRIVER_TYPE L6470)
+ * M918 - L6470 tuning: Increase speed until max or error. (Requires at least one _DRIVER_TYPE L6470)
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
+ * M7219 - Control Max7219 Matrix LEDs. (Requires MAX7219_GCODE)
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
+ * G425 - Calibrate using a conductive object. (Requires CALIBRATION_GCODE)
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  *
  */
 #pragma once
@@ -781,24 +788,20 @@ private:
 
   #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
     static void M666();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
-  #if ENABLED(MAX7219_GCODE)
-    static void M7219();
-  #endif
-
   #if ENABLED(GCODE_MACROS)
     static void M810_819();
   #endif
 
   #if HAS_BED_PROBE
     static void M851();
   #endif
 
   #if ENABLED(SKEW_CORRECTION_GCODE)
     static void M852();
@@ -870,15 +873,19 @@ private:
     static void M997();
   #endif
 
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
+  #if ENABLED(MAX7219_GCODE)
+    static void M7219();
+  #endif
+
   static void T(const uint8_t tool_index);
 
 };
 
 extern GcodeSuite gcode;

commit 23a8707ef1969be3db28251ccee2287e1ea7b9e4
Author: doggyfan <49303635+doggyfan@users.noreply.github.com>
Date:   Tue May 7 00:51:06 2019 +0100

    Configurable Thermistor (#13888)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e6cd1f59f7..95f9316a49 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -177,20 +177,21 @@
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
+ * M305 - Set user thermistor parameters R T and P. (Requires TEMP_SENSOR_x 1000)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
  * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M403 - Set filament type for PRUSA MMU2
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
@@ -679,20 +680,24 @@ private:
   #endif
 
   #if HAS_PID_HEATING
     static void M303();
   #endif
 
   #if ENABLED(PIDTEMPBED)
     static void M304();
   #endif
 
+  #if HAS_USER_THERMISTORS
+    static void M305();
+  #endif
+
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
   #if HAS_CASE_LIGHT
     static void M355();
   #endif
 
   #if ENABLED(MORGAN_SCARA)

commit ee243e4edfe45fa855d4ff71abf8a9a118b66369
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Wed May 1 22:55:58 2019 -0400

    Fix mixing extruder filament change (#13803)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index af99e4fbed..e6cd1f59f7 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -291,20 +291,21 @@ public:
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static int8_t active_coordinate_system;
     static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
   static millis_t previous_move_ms;
   FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
 
   static int8_t get_target_extruder_from_command();
+  static int8_t get_target_e_stepper_from_command();
   static void get_destination_from_command();
 
   static void process_parsed_command(
     #if USE_EXECUTE_COMMANDS_IMMEDIATE
       const bool no_ok = false
     #endif
   );
   static void process_next_command();
 
   #if USE_EXECUTE_COMMANDS_IMMEDIATE

commit cf12fc8366f2ffbc3811173769d5428236af0dd9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 5 20:02:46 2019 -0500

    Expand on serial debugging (#13577)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index dcd015c2bb..af99e4fbed 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -488,24 +488,20 @@ private:
   static void M42();
 
   #if ENABLED(PINS_DEBUGGING)
     static void M43();
   #endif
 
   #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
     static void M48();
   #endif
 
-  #if ENABLED(G26_MESH_VALIDATION)
-    static void M49();
-  #endif
-
   #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
     static void M73();
   #endif
 
   static void M75();
   static void M76();
   static void M77();
 
   #if ENABLED(PRINTCOUNTER)
     static void M78();

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e178b479a2..dcd015c2bb 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -137,21 +137,21 @@
  * M121 - Disable endstops detection.
  * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
- * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, or PCA9632).
+ * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, PCA9533, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
  * M164 - Commit the mix and save to a virtual tool (current, or as specified by 'S'). (Requires MIXING_EXTRUDER)
  * M165 - Set the mix for the mixing extruder (and current virtual tool) with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M166 - Set the Gradient Mix for the mixing extruder. (Requires GRADIENT_MIX)
  * M190 - Sxxx Wait for bed current temp to reach target temp. ** Waits only when heating! **
  *        Rxxx Wait for bed current temp to reach target temp. ** Waits for heating or cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
@@ -473,21 +473,21 @@ private:
     static void M30();
   #endif
 
   static void M31();
 
   #if ENABLED(SDSUPPORT)
     static void M32();
     #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
       static void M33();
     #endif
-    #if ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_GCODE)
+    #if BOTH(SDCARD_SORT_ALPHA, SDSORT_GCODE)
       static void M34();
     #endif
   #endif
 
   static void M42();
 
   #if ENABLED(PINS_DEBUGGING)
     static void M43();
   #endif
 
@@ -699,21 +699,21 @@ private:
   #endif
 
   #if ENABLED(MORGAN_SCARA)
     static bool M360();
     static bool M361();
     static bool M362();
     static bool M363();
     static bool M364();
   #endif
 
-  #if ENABLED(EXT_SOLENOID) || ENABLED(MANUAL_SOLENOID_CONTROL)
+  #if EITHER(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL)
     static void M380();
     static void M381();
   #endif
 
   static void M400();
 
   #if HAS_BED_PROBE
     static void M401();
     static void M402();
   #endif
@@ -838,21 +838,21 @@ private:
   #endif
 
   #if HAS_DRIVER(L6470)
     static void M122();
     static void M906();
     static void M916();
     static void M917();
     static void M918();
   #endif
 
-  #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
+  #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || EITHER(DIGIPOT_I2C, DAC_STEPPER_CURRENT)
     static void M907();
     #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
       static void M908();
       #if ENABLED(DAC_STEPPER_CURRENT)
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 

commit 050eac03afb67743131b5537bf7464e3dafbce23
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Mar 13 01:42:50 2019 -0400

    Single X Duplication Extension (#13373)
    
    * Multi-nozzle selective duplication
    * Use a bit-mask, reduce stepper_indirection.h size
    * Tweak the multi-nozzle duplication description
    * Use 'S' as a bool in M605
    * Add HAS_DUPLICATION_MODE conditional
    * Remove '_MODE' from the option name
    * M605 in the style of Stacker M280
    * Also include direct mask style (P)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2a64e0b678..e178b479a2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -762,21 +762,21 @@ private:
 
   #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
     static void M540();
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
-  #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
+  #if HAS_DUPLICATION_MODE
     static void M605();
   #endif
 
   #if IS_KINEMATIC
     static void M665();
   #endif
 
   #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
     static void M666();
   #endif

commit d94e077901e15557e94f64640adf37e10defb7f2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 11 20:48:49 2019 -0500

    Apply HAS_HOTEND_OFFSET where needed

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 186226afbb..2a64e0b678 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -630,21 +630,21 @@ private:
       static void M209();
     #endif
   #endif
 
   static void M211();
 
   #if EXTRUDERS > 1
     static void M217();
   #endif
 
-  #if HOTENDS > 1
+  #if HAS_HOTEND_OFFSET
     static void M218();
   #endif
 
   static void M220();
   static void M221();
   static void M226();
 
   #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif

commit b824a517aaad62001cf815e577b2f383f4766402
Author: Michiel Baird <michielbaird@gmail.com>
Date:   Sun Mar 10 15:22:09 2019 -0700

    Add G38.4 and G38.5 (#13348)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 61786cecee..186226afbb 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -408,21 +408,21 @@ private:
   #if ENABLED(DELTA_AUTO_CALIBRATION)
     static void G33();
   #endif
 
   #if ENABLED(Z_STEPPER_AUTO_ALIGN)
     static void G34();
     static void M422();
   #endif
 
   #if ENABLED(G38_PROBE_TARGET)
-    static void G38(const bool is_38_2);
+    static void G38(const int8_t subcode);
   #endif
 
   #if HAS_MESH
     static void G42();
   #endif
 
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();

commit 645ca7af7ac27af9d6690659dc71ff9867b34b6c
Author: 3dlabsio <shane@warnertci.com>
Date:   Thu Mar 7 00:09:39 2019 -0800

    M141 Heated Chamber, Temperature rework (#12201)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 63ca8ac1ad..61786cecee 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -569,20 +569,25 @@ private:
       static void M128();
       static void M129();
     #endif
   #endif
 
   #if HAS_HEATED_BED
     static void M140();
     static void M190();
   #endif
 
+  #if HAS_HEATED_CHAMBER
+    static void M141();
+    //static void M191();
+  #endif
+
   #if HAS_LCD_MENU
     static void M145();
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
   #endif
 
   #if HAS_COLOR_LEDS
     static void M150();

commit b0553d2d970f0d4d36a7bca34ccb7e4c57505575
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Sat Mar 2 02:11:50 2019 +0000

    Add M997 support and simple implementation for LPC176x (#13281)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 347317012c..63ca8ac1ad 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -247,20 +247,21 @@
  * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
+ * M997 - Perform in-application firmware update
  * M999 - Restart after being stopped by error
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  *
  */
 #pragma once
 
 #include "../inc/MarlinConfig.h"
@@ -851,20 +852,24 @@ private:
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M928();
   #endif
 
   #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
     static void M951();
   #endif
 
+  #if ENABLED(PLATFORM_M997_SUPPORT)
+    static void M997();
+  #endif
+
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
   static void T(const uint8_t tool_index);
 
 };

commit d2bdb71c13fa18957638b137395200ba2c28e1b2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 14 15:09:35 2019 -0600

    Add PHOTO_GCODE option, photo trigger physical move (#13168)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8928438f2d..347317012c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -165,21 +165,21 @@
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
  * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT_AUTORETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
- * M240 - Trigger a camera to take a photograph. (Requires CHDK_PIN or PHOTOGRAPH_PIN)
+ * M240 - Trigger a camera to take a photograph. (Requires PHOTO_GCODE)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
@@ -632,21 +632,21 @@ private:
   #endif
 
   #if HOTENDS > 1
     static void M218();
   #endif
 
   static void M220();
   static void M221();
   static void M226();
 
-  #if PIN_EXISTS(CHDK) || HAS_PHOTOGRAPH
+  #if ENABLED(PHOTO_GCODE)
     static void M240();
   #endif
 
   #if HAS_LCD_CONTRAST
     static void M250();
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();

commit 7cf9b93f26f728f0104dc9b930f6b23096639d98
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 20:08:34 2019 -0600

    Add HAS_FILAMENT_SENSOR ahead of 12962

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index dc63dbae2a..8928438f2d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -716,21 +716,21 @@ private:
     static void M403();
   #endif
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
-  #if ENABLED(FILAMENT_RUNOUT_SENSOR)
+  #if HAS_FILAMENT_SENSOR
     static void M412();
   #endif
 
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
   #if ENABLED(BACKLASH_GCODE)
     static void M425();

commit 7f1b69b0c83ae914ed9ae35fdad9f79814069652
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Feb 12 16:55:47 2019 -0500

    Add HOST_PROMPT_SUPPORT (#13039)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index bbc1ca0318..dc63dbae2a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -526,20 +526,23 @@ private:
 
   static void M104();
   static void M105();
   static void M106();
   static void M107();
 
   #if DISABLED(EMERGENCY_PARSER)
     static void M108();
     static void M112();
     static void M410();
+    #if ENABLED(HOST_PROMPT_SUPPORT)
+      static void M876();
+    #endif
   #endif
 
   static void M109();
 
   static void M110();
   static void M111();
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     static void M113();
   #endif

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index ef9f46cac1..bbc1ca0318 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 6de3d3437849c0710881311bc9ad4069b0aee55d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 10 04:54:23 2019 -0600

    M166 Gradients, LCD Menu for 2-channel Mixer (Geeetech A10M/A20M) (#13022)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7cee5e556f..ef9f46cac1 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -142,20 +142,21 @@
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
  * M164 - Commit the mix and save to a virtual tool (current, or as specified by 'S'). (Requires MIXING_EXTRUDER)
  * M165 - Set the mix for the mixing extruder (and current virtual tool) with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
+ * M166 - Set the Gradient Mix for the mixing extruder. (Requires GRADIENT_MIX)
  * M190 - Sxxx Wait for bed current temp to reach target temp. ** Waits only when heating! **
  *        Rxxx Wait for bed current temp to reach target temp. ** Waits for heating or cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
  * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>
@@ -586,20 +587,23 @@ private:
   #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
     static void M155();
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
     static void M164();
     #if ENABLED(DIRECT_MIXING_IN_G1)
       static void M165();
     #endif
+    #if ENABLED(GRADIENT_MIX)
+      static void M166();
+    #endif
   #endif
 
   static void M200();
   static void M201();
 
   #if 0
     static void M202(); // Not used for Sprinter/grbl gen6
   #endif
 
   static void M203();

commit e1604198ffa550f1eed2b8f5d39d51fdc0c2762f
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Feb 6 16:20:17 2019 -0700

    G425 ‚Äî Auto-calibrate Backlash and Nozzle Offsets (#13050)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3c1841234e..7cee5e556f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -429,20 +429,24 @@ private:
     static void G58();
     static void G59();
   #endif
 
   #if ENABLED(GCODE_MOTION_MODES)
     static void G80();
   #endif
 
   static void G92();
 
+  #if ENABLED(CALIBRATION_GCODE)
+    static void G425();
+  #endif
+
   #if HAS_RESUME_CONTINUE
     static void M0_M1();
   #endif
 
   #if ENABLED(SPINDLE_LASER_ENABLE)
     static void M3_M4(const bool is_M4);
     static void M5();
   #endif
 
   #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)

commit 524c6c10bf52b9956ca2f68eb3d3074e5cba0706
Author: Rolf Werum <39219447+Weruminger@users.noreply.github.com>
Date:   Wed Feb 6 13:30:53 2019 +0100

    MAGNETIC_PARKING_EXTRUDER (#12351)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 46198724e2..3c1841234e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -236,20 +236,21 @@
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  * M917 - L6470 tuning: Find minimum current thresholds
  * M918 - L6470 tuning: Increase speed until max or error
+ * M951 - Set Magnetic Parking Extruder parameters. (Requires MAGNETIC_PARKING_EXTRUDER)
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M999 - Restart after being stopped by error
@@ -835,20 +836,24 @@ private:
         static void M909();
         static void M910();
       #endif
     #endif
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M928();
   #endif
 
+  #if ENABLED(MAGNETIC_PARKING_EXTRUDER)
+    static void M951();
+  #endif
+
   static void M999();
 
   #if ENABLED(POWER_LOSS_RECOVERY)
     static void M413();
     static void M1000();
   #endif
 
   static void T(const uint8_t tool_index);
 
 };

commit 1bd9a630492e0b029c39e4c885c6a1f49dc0c6ee
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 6 04:59:22 2019 -0600

    Add HAS_EXTRA_ENDSTOPS macro

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 05a222095d..46198724e2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -752,21 +752,21 @@ private:
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
     static void M605();
   #endif
 
   #if IS_KINEMATIC
     static void M665();
   #endif
 
-  #if ENABLED(DELTA) || ENABLED(X_DUAL_ENDSTOPS) || ENABLED(Y_DUAL_ENDSTOPS) || Z_MULTI_ENDSTOPS
+  #if ENABLED(DELTA) || HAS_EXTRA_ENDSTOPS
     static void M666();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
   #if ENABLED(MAX7219_GCODE)
     static void M7219();

commit 6a57d0b381db99d67cccd48135cbdd2d831588a7
Author: revilor <oliver.rossmueller@web.de>
Date:   Fri Feb 1 02:10:52 2019 +0100

    Prusa MMU2 (#12967)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 34b4c80357..05a222095d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -184,20 +184,21 @@
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
  * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
+ * M403 - Set filament type for PRUSA MMU2
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M412 - Enable / Disable Filament Runout Detection. (Requires FILAMENT_RUNOUT_SENSOR)
  * M413 - Enable / Disable Power-Loss Recovery. (Requires POWER_LOSS_RECOVERY)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
@@ -692,20 +693,24 @@ private:
     static void M381();
   #endif
 
   static void M400();
 
   #if HAS_BED_PROBE
     static void M401();
     static void M402();
   #endif
 
+  #if ENABLED(PRUSA_MMU2)
+    static void M403();
+  #endif
+
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
   #if ENABLED(FILAMENT_RUNOUT_SENSOR)
     static void M412();
   #endif

commit 2f35747f294c4b3dc3e6920b34e208f89bd4841d
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Jan 23 19:06:54 2019 -0600

    L6470 SPI daisy chain support (#12895)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6aeeb35b2a..34b4c80357 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -233,20 +233,22 @@
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
+ * M917 - L6470 tuning: Find minimum current thresholds
+ * M918 - L6470 tuning: Increase speed until max or error
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M999 - Restart after being stopped by error
@@ -805,20 +807,28 @@ private:
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if USE_SENSORLESS
       static void M914();
     #endif
   #endif
 
+  #if HAS_DRIVER(L6470)
+    static void M122();
+    static void M906();
+    static void M916();
+    static void M917();
+    static void M918();
+  #endif
+
   #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
     static void M907();
     #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
       static void M908();
       #if ENABLED(DAC_STEPPER_CURRENT)
         static void M909();
         static void M910();
       #endif
     #endif
   #endif

commit a1cf49935ded121d5db26175f706a01dda9d6feb
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Jan 21 00:41:47 2019 -0500

    Add laser control menu (#12883)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 4a34ed6377..6aeeb35b2a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -430,21 +430,21 @@ private:
     static void G80();
   #endif
 
   static void G92();
 
   #if HAS_RESUME_CONTINUE
     static void M0_M1();
   #endif
 
   #if ENABLED(SPINDLE_LASER_ENABLE)
-    static void M3_M4(bool is_M3);
+    static void M3_M4(const bool is_M4);
     static void M5();
   #endif
 
   #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
     static void M12();
   #endif
 
   static void M17();
 
   static void M18_M84();

commit e6805582a67b106691423a35ab580bd6b0895949
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Thu Jan 17 21:17:16 2019 +0200

    M569 to change stepping mode. Add new TMC section to LCD. (#12884)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 40d8785d8c..4a34ed6377 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -202,20 +202,21 @@
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M524 - Abort the current SD print job (started with M24)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
+ * M569 - Enable stealthChop on an axis. (Requires at least one #_X_DRIVER_TYPE to be TMC2130 or TMC2208)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
@@ -789,20 +790,23 @@ private:
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
   #if ENABLED(LIN_ADVANCE)
     static void M900();
   #endif
 
   #if HAS_TRINAMIC
     static void M122();
     static void M906();
+    #if HAS_STEALTHCHOP
+      static void M569();
+    #endif
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if USE_SENSORLESS
       static void M914();
     #endif

commit 85f149befeebde5e67e9d0241d2708c30a356640
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Jan 15 03:56:30 2019 +0100

    Save some progmem (#12913)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index bce726f266..40d8785d8c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -665,21 +665,23 @@ private:
 
   #if ENABLED(PIDTEMPBED)
     static void M304();
   #endif
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
-  static void M355();
+  #if HAS_CASE_LIGHT
+    static void M355();
+  #endif
 
   #if ENABLED(MORGAN_SCARA)
     static bool M360();
     static bool M361();
     static bool M362();
     static bool M363();
     static bool M364();
   #endif
 
   #if ENABLED(EXT_SOLENOID) || ENABLED(MANUAL_SOLENOID_CONTROL)

commit 1a79878dff2d4846b1f58a45b8880a346fb9cb41
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Sat Jan 12 00:56:23 2019 +0200

    Remove TMC_Z_CALIBRATION in favor of Z_STEPPER_AUTO_ALIGN

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a3f197c788..bce726f266 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -797,23 +797,20 @@ private:
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if USE_SENSORLESS
       static void M914();
     #endif
-    #if ENABLED(TMC_Z_CALIBRATION)
-      static void M915();
-    #endif
   #endif
 
   #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
     static void M907();
     #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
       static void M908();
       #if ENABLED(DAC_STEPPER_CURRENT)
         static void M909();
         static void M910();
       #endif

commit 709a6356f78ecec41d079823f2ad230cb1ddcead
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sat Jan 5 21:02:45 2019 +0100

    Remove obsolete test conditions (#12829)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 540e0208a6..a3f197c788 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -481,21 +481,21 @@ private:
   #endif
 
   #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
     static void M48();
   #endif
 
   #if ENABLED(G26_MESH_VALIDATION)
     static void M49();
   #endif
 
-  #if ENABLED(LCD_SET_PROGRESS_MANUALLY) && (ENABLED(ULTRA_LCD) || ENABLED(EXTENSIBLE_UI))
+  #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
     static void M73();
   #endif
 
   static void M75();
   static void M76();
   static void M77();
 
   #if ENABLED(PRINTCOUNTER)
     static void M78();
   #endif

commit 902d5b0f8ba2f46f30fa063b7d2ab8b6193339cc
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Dec 12 16:21:37 2018 -0700

    Allow ExtUI to use LCD_SET_PROGRESS_MANUALLY (#12628)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 07582bc351..540e0208a6 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -481,21 +481,21 @@ private:
   #endif
 
   #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
     static void M48();
   #endif
 
   #if ENABLED(G26_MESH_VALIDATION)
     static void M49();
   #endif
 
-  #if ENABLED(ULTRA_LCD) && ENABLED(LCD_SET_PROGRESS_MANUALLY)
+  #if ENABLED(LCD_SET_PROGRESS_MANUALLY) && (ENABLED(ULTRA_LCD) || ENABLED(EXTENSIBLE_UI))
     static void M73();
   #endif
 
   static void M75();
   static void M76();
   static void M77();
 
   #if ENABLED(PRINTCOUNTER)
     static void M78();
   #endif

commit 55144284c2578dccca7a6a5fa472a3d927ff09f2
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Mon Dec 10 04:54:48 2018 +0200

    TMC connection test, spreadCycle parameters, improved debugging (#12616)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a3dc074ae0..07582bc351 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -785,23 +785,21 @@ private:
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
   #if ENABLED(LIN_ADVANCE)
     static void M900();
   #endif
 
   #if HAS_TRINAMIC
-    #if ENABLED(TMC_DEBUG)
-      static void M122();
-    #endif
+    static void M122();
     static void M906();
     #if ENABLED(MONITOR_DRIVER_STATUS)
       static void M911();
       static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if USE_SENSORLESS
       static void M914();

commit b22716e938397d8beb64f5855b64f6fdb375b5d2
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Sat Dec 8 13:36:46 2018 -0700

    M425 Backlash Correction (#11061)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 42671b6243..a3dc074ae0 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -194,20 +194,21 @@
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M412 - Enable / Disable Filament Runout Detection. (Requires FILAMENT_RUNOUT_SENSOR)
  * M413 - Enable / Disable Power-Loss Recovery. (Requires POWER_LOSS_RECOVERY)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
+ * M425 - Enable/Disable and tune backlash correction. (Requires BACKLASH_COMPENSATION and BACKLASH_GCODE)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M524 - Abort the current SD print job (started with M24)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
@@ -702,20 +703,24 @@ private:
 
   #if ENABLED(FILAMENT_RUNOUT_SENSOR)
     static void M412();
   #endif
 
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
+  #if ENABLED(BACKLASH_GCODE)
+    static void M425();
+  #endif
+
   #if HAS_M206_COMMAND
     static void M428();
   #endif
 
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif

commit d97e31db4c2b8b27ab1c6fbbe05f11aa9d5e94e2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 16 20:47:07 2018 -0600

    Optimize Power-Loss Recovery (#12440)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 375a6f9ae8..42671b6243 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -189,21 +189,22 @@
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
  * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
- * M412 - Enable / Disable filament runout detection. (Requires FILAMENT_RUNOUT_SENSOR)
+ * M412 - Enable / Disable Filament Runout Detection. (Requires FILAMENT_RUNOUT_SENSOR)
+ * M413 - Enable / Disable Power-Loss Recovery. (Requires POWER_LOSS_RECOVERY)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M524 - Abort the current SD print job (started with M24)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
@@ -815,15 +816,20 @@ private:
       #endif
     #endif
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M928();
   #endif
 
   static void M999();
 
+  #if ENABLED(POWER_LOSS_RECOVERY)
+    static void M413();
+    static void M1000();
+  #endif
+
   static void T(const uint8_t tool_index);
 
 };
 
 extern GcodeSuite gcode;

commit d2bb53702a5b8bc03d6691230f252a21ca3ee375
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 14 17:33:04 2018 -0600

    Optimize target_extruder, ignore T with mixing (#12432)
    
    * Optimize target_extruder, ignore T with mixing
    * Give G-code Tn parity with tool_change

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9ef63d1111..375a6f9ae8 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -260,22 +260,20 @@
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/I2CPositionEncoder.h"
 #endif
 
 class GcodeSuite {
 public:
 
   GcodeSuite() {}
 
-  static uint8_t target_extruder;
-
   static bool axis_relative_modes[];
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     /**
      * Workspace planes only apply to G2/G3 moves
      * (and "canned cycles" - not a current feature)
      */
     enum WorkspacePlane : char { PLANE_XY, PLANE_ZX, PLANE_YZ };
     static WorkspacePlane workspace_plane;
   #endif
@@ -283,47 +281,37 @@ public:
   #define MAX_COORDINATE_SYSTEMS 9
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static int8_t active_coordinate_system;
     static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
   static millis_t previous_move_ms;
   FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
 
-  static bool get_target_extruder_from_command();
+  static int8_t get_target_extruder_from_command();
   static void get_destination_from_command();
+
   static void process_parsed_command(
     #if USE_EXECUTE_COMMANDS_IMMEDIATE
       const bool no_ok = false
     #endif
   );
   static void process_next_command();
 
   #if USE_EXECUTE_COMMANDS_IMMEDIATE
     static void process_subcommands_now_P(PGM_P pgcode);
     static void process_subcommands_now(char * gcode);
   #endif
 
   FORCE_INLINE static void home_all_axes() { G28(true); }
 
-  /**
-   * Multi-stepper support for M92, M201, M203
-   */
-  #if ENABLED(DISTINCT_E_FACTORS)
-    #define GET_TARGET_EXTRUDER() if (gcode.get_target_extruder_from_command()) return
-    #define TARGET_EXTRUDER gcode.target_extruder
-  #else
-    #define GET_TARGET_EXTRUDER() NOOP
-    #define TARGET_EXTRUDER 0
-  #endif
-
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     /**
      * States for managing Marlin and host communication
      * Marlin sends messages if blocked or busy
      */
     enum MarlinBusyState : char {
       NOT_BUSY,           // Not in a handler
       IN_HANDLER,         // Processing a GCode
       IN_PROCESS,         // Known to be blocking command input (as in G29)
       PAUSED_FOR_USER,    // Blocking pending any input
@@ -662,21 +650,23 @@ private:
   #endif
 
   #if ENABLED(PIDTEMP)
     static void M301();
   #endif
 
   #if ENABLED(PREVENT_COLD_EXTRUSION)
     static void M302();
   #endif
 
-  static void M303();
+  #if HAS_PID_HEATING
+    static void M303();
+  #endif
 
   #if ENABLED(PIDTEMPBED)
     static void M304();
   #endif
 
   #if HAS_MICROSTEPS
     static void M350();
     static void M351();
   #endif
 
@@ -825,15 +815,15 @@ private:
       #endif
     #endif
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M928();
   #endif
 
   static void M999();
 
-  static void T(const uint8_t tmp_extruder);
+  static void T(const uint8_t tool_index);
 
 };
 
 extern GcodeSuite gcode;

commit 143b2896e0693442f642e2dc5e3fd2f05c2019c8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Nov 12 21:29:46 2018 -0600

    Add M412 to enable/disable filament runout detection (#12406)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index cb29abed56..9ef63d1111 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -71,21 +71,21 @@
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to clockwise
  * M4   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to counter-clockwise
  * M5   - Turn laser/spindle off
- * M12  - Set up closed loop control system. More features coming soon. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
+ * M12  - Set up closed loop control system. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
  * M27  - Report SD print status. (Requires SDSUPPORT)
@@ -189,20 +189,21 @@
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
  * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
+ * M412 - Enable / Disable filament runout detection. (Requires FILAMENT_RUNOUT_SENSOR)
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M524 - Abort the current SD print job (started with M24)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
@@ -701,20 +702,24 @@ private:
     static void M402();
   #endif
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
+  #if ENABLED(FILAMENT_RUNOUT_SENSOR)
+    static void M412();
+  #endif
+
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
   #if HAS_M206_COMMAND
     static void M428();
   #endif
 
   static void M500();

commit b60abc7c378e47959fb11f890d49ee7e90588d3d
Author: revilor <oliver.rossmueller@web.de>
Date:   Fri Nov 9 12:25:08 2018 +0100

    [2.0.x] Macro G-codes (#9365)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 9e3e551ebf..cb29abed56 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -204,22 +204,23 @@
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M524 - Abort the current SD print job (started with M24)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
- * M701 - Load filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
- * M702 - Unload filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
+ * M701 - Load filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
+ * M702 - Unload filament (Requires FILAMENT_LOAD_UNLOAD_GCODES)
+ * M810-M819 - Define/execute a G-code macro (Requires GCODE_MACROS)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
@@ -753,20 +754,24 @@ private:
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
   #if ENABLED(MAX7219_GCODE)
     static void M7219();
   #endif
 
+  #if ENABLED(GCODE_MACROS)
+    static void M810_819();
+  #endif
+
   #if HAS_BED_PROBE
     static void M851();
   #endif
 
   #if ENABLED(SKEW_CORRECTION_GCODE)
     static void M852();
   #endif
 
   #if ENABLED(I2C_POSITION_ENCODERS)
     FORCE_INLINE static void M860() { I2CPEM.M860(); }

commit 498dfa291e3e75a9c47fdc2e9fcfe3b0fdea5bc7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Nov 5 01:08:40 2018 -0600

    Update and fix CHDK

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index acaf73229e..9e3e551ebf 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -164,21 +164,21 @@
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
  * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT_AUTORETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
- * M240 - Trigger a camera to take a photograph. (Requires CHDK or PHOTOGRAPH_PIN)
+ * M240 - Trigger a camera to take a photograph. (Requires CHDK_PIN or PHOTOGRAPH_PIN)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
@@ -624,21 +624,21 @@ private:
   #endif
 
   #if HOTENDS > 1
     static void M218();
   #endif
 
   static void M220();
   static void M221();
   static void M226();
 
-  #if defined(CHDK) || HAS_PHOTOGRAPH
+  #if PIN_EXISTS(CHDK) || HAS_PHOTOGRAPH
     static void M240();
   #endif
 
   #if HAS_LCD_CONTRAST
     static void M250();
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();

commit f5eab912ed6d336f2c37a688a0ec822ed3d42fcc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 4 02:25:55 2018 -0600

    Apply #pragma once, misc cleanup (#12322)
    
    * Apply #pragma once in headers
    * Adjust some thermistors formatting
    * Misc cleanup and formatting

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c697e33c09..acaf73229e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -244,23 +244,21 @@
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M999 - Restart after being stopped by error
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  *
  */
-
-#ifndef _GCODE_H_
-#define _GCODE_H_
+#pragma once
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/I2CPositionEncoder.h"
 #endif
 
 class GcodeSuite {
 public:
@@ -822,12 +820,10 @@ private:
     static void M928();
   #endif
 
   static void M999();
 
   static void T(const uint8_t tmp_extruder);
 
 };
 
 extern GcodeSuite gcode;
-
-#endif // _GCODE_H_

commit e4cf175163054b9e4c3ffe78876289822cb9a923
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Nov 3 01:16:37 2018 -0500

    Synchronize on M204, M205 (#12302)
    
    * Add parser.seen for multiple parameters
    * Fix M666, use !seen for report
    * Synchronize on M204, M205

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7ce952173a..c697e33c09 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -742,21 +742,21 @@ private:
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
     static void M605();
   #endif
 
   #if IS_KINEMATIC
     static void M665();
   #endif
 
-  #if ENABLED(DELTA) || ENABLED(X_DUAL_ENDSTOPS) || ENABLED(Y_DUAL_ENDSTOPS) || ENABLED(Z_DUAL_ENDSTOPS)
+  #if ENABLED(DELTA) || ENABLED(X_DUAL_ENDSTOPS) || ENABLED(Y_DUAL_ENDSTOPS) || Z_MULTI_ENDSTOPS
     static void M666();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
   #if ENABLED(MAX7219_GCODE)
     static void M7219();

commit 31c28d0dd243331adba3debb4801fbd03f7f6ec2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 2 00:42:16 2018 -0500

    Drop pgm_read_*_near and let headers choose (#12301)
    
    - Drop `pgm_read_*_near` and let headers choose.
    - Define `USE_EXECUTE_COMMANDS_IMMEDIATE` as a conditional.
    - Add `process_subcommands_now` for SRAM-based commands.

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 39f70aca4b..7ce952173a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -286,28 +286,29 @@ public:
     static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
   static millis_t previous_move_ms;
   FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
 
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();
   static void process_parsed_command(
-    #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+    #if USE_EXECUTE_COMMANDS_IMMEDIATE
       const bool no_ok = false
     #endif
   );
   static void process_next_command();
 
-  #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+  #if USE_EXECUTE_COMMANDS_IMMEDIATE
     static void process_subcommands_now_P(PGM_P pgcode);
+    static void process_subcommands_now(char * gcode);
   #endif
 
   FORCE_INLINE static void home_all_axes() { G28(true); }
 
   /**
    * Multi-stepper support for M92, M201, M203
    */
   #if ENABLED(DISTINCT_E_FACTORS)
     #define GET_TARGET_EXTRUDER() if (gcode.get_target_extruder_from_command()) return
     #define TARGET_EXTRUDER gcode.target_extruder

commit 3583e2b4490e8fd6778d18003641c2fdd333e8a5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Oct 30 16:34:45 2018 -0500

    Followup to Menu Refactor (#12275)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index d8fd7b972e..39f70aca4b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -564,21 +564,21 @@ private:
       static void M128();
       static void M129();
     #endif
   #endif
 
   #if HAS_HEATED_BED
     static void M140();
     static void M190();
   #endif
 
-  #if ENABLED(ULTIPANEL)
+  #if HAS_LCD_MENU
     static void M145();
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
   #endif
 
   #if HAS_COLOR_LEDS
     static void M150();
   #endif

commit 553622835911b520c6ba43bc03e71868f3972cb3
Author: TheLongAndOnly <github@mueller-gelff.de>
Date:   Mon Oct 29 20:01:36 2018 +0100

    G34 Auto-align multi-stepper Z axis (#11302)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e6975fc821..d8fd7b972e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -56,20 +56,21 @@
  * G20  - Set input units to inches (Requires INCH_MODE_SUPPORT)
  * G21  - Set input units to millimeters (Requires INCH_MODE_SUPPORT)
  * G26  - Mesh Validation Pattern (Requires G26_MESH_VALIDATION)
  * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
  * G28  - Home one or more axes
  * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
+ * G34  - Z Stepper automatic alignment using probe: I<iterations> T<accuracy> A<amplification> (Requires Z_STEPPER_AUTO_ALIGN)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
  * G80  - Cancel current motion mode (Requires GCODE_MOTION_MODES)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
@@ -190,20 +191,21 @@
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
+ * M422 - Set Z Stepper automatic alignment position using probe. X<units> Y<units> A<axis> (Requires Z_STEPPER_AUTO_ALIGN)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M524 - Abort the current SD print job (started with M24)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
@@ -402,20 +404,25 @@ private:
     #if ENABLED(Z_PROBE_SLED)
       static void G31();
       static void G32();
     #endif
   #endif
 
   #if ENABLED(DELTA_AUTO_CALIBRATION)
     static void G33();
   #endif
 
+  #if ENABLED(Z_STEPPER_AUTO_ALIGN)
+    static void G34();
+    static void M422();
+  #endif
+
   #if ENABLED(G38_PROBE_TARGET)
     static void G38(const bool is_38_2);
   #endif
 
   #if HAS_MESH
     static void G42();
   #endif
 
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();

commit a07ac6312f29b3f500c49c32b50374d57e0a3986
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Thu Oct 25 17:35:16 2018 +0200

    G0 feedrate may be fixed or variable (#12172)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 345b4a4dad..e6975fc821 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -335,21 +335,21 @@ public:
     #define KEEPALIVE_STATE(n) gcode.busy_state = gcode.n
   #else
     #define KEEPALIVE_STATE(n) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
   static void G0_G1(
-    #if IS_SCARA || ENABLED(G0_FEEDRATE)
+    #if IS_SCARA || defined(G0_FEEDRATE)
       bool fast_move=false
     #endif
   );
 
   #if ENABLED(ARC_SUPPORT)
     static void G2_G3(const bool clockwise);
   #endif
 
   static void G4();
 

commit b381cad39994fbae79351d1e87368cb98fbe1a8d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 19 15:27:07 2018 -0500

    Clean up trailing whitespace

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 560cf2e122..345b4a4dad 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -716,21 +716,21 @@ private:
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
   #if ENABLED(EEPROM_SETTINGS)
     static void M504();
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M524();
   #endif
-    
+
   #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
     static void M540();
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)

commit 1fb9b299d4d96276ff1fb6cd2ee5e73e753e2b23
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Fri Oct 19 21:25:07 2018 +0200

    Add M524 to abort SD printing (#12155)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 8a8a9b0076..560cf2e122 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -195,20 +195,21 @@
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
+ * M524 - Abort the current SD print job (started with M24)
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
@@ -712,20 +713,24 @@ private:
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
   #if ENABLED(EEPROM_SETTINGS)
     static void M504();
   #endif
 
+  #if ENABLED(SDSUPPORT)
+    static void M524();
+  #endif
+    
   #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
     static void M540();
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)

commit 3ec38727305862c881f268e2fc27f8188b5bc767
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Oct 17 12:11:41 2018 -0400

    Single Z raise value for all tool-changing / parking (#12090)
    
    * Universal tool-change Z lift
    * Add TOOLCHANGE_ZRAISE to example configs
    * Park/unpark changes to example configs
    * Implement DEBUG_DXC_MODE

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index ec2d3fe26b..8a8a9b0076 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -605,21 +605,21 @@ private:
   #if ENABLED(FWRETRACT)
     static void M207();
     static void M208();
     #if ENABLED(FWRETRACT_AUTORETRACT)
       static void M209();
     #endif
   #endif
 
   static void M211();
 
-  #if ENABLED(SINGLENOZZLE)
+  #if EXTRUDERS > 1
     static void M217();
   #endif
 
   #if HOTENDS > 1
     static void M218();
   #endif
 
   static void M220();
   static void M221();
   static void M226();

commit 9ac9649183dea881930e7eb4f7e8757bdce9d88f
Author: AnHardt <github@kitelab.de>
Date:   Tue Oct 16 13:09:02 2018 +0200

    Mixer - update descriptions (#12108)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index fea79c2103..ec2d3fe26b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -139,22 +139,22 @@
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
- * M164 - Commit the mix (Req. MIXING_EXTRUDER) and optionally save as a virtual tool (Requires MIXING_EXTRUDER)
- * M165 - Set the mix for a mixing extruder with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
+ * M164 - Commit the mix and save to a virtual tool (current, or as specified by 'S'). (Requires MIXING_EXTRUDER)
+ * M165 - Set the mix for the mixing extruder (and current virtual tool) with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M190 - Sxxx Wait for bed current temp to reach target temp. ** Waits only when heating! **
  *        Rxxx Wait for bed current temp to reach target temp. ** Waits for heating or cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
  * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>

commit f56968ba0b8d4eaccbc9b0c7834cf0cd2f5872d8
Author: AnHardt <github@kitelab.de>
Date:   Tue Oct 16 10:38:57 2018 +0200

    New Continuous Filament Mixer (#12098)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 81d560d905..fea79c2103 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -139,22 +139,22 @@
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
- * M164 - Commit the mix (Req. MIXING_EXTRUDER) and optionally save as a virtual tool (Req. MIXING_VIRTUAL_TOOLS > 1)
- * M165 - Set the mix for a mixing extruder wuth parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
+ * M164 - Commit the mix (Req. MIXING_EXTRUDER) and optionally save as a virtual tool (Requires MIXING_EXTRUDER)
+ * M165 - Set the mix for a mixing extruder with parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M190 - Sxxx Wait for bed current temp to reach target temp. ** Waits only when heating! **
  *        Rxxx Wait for bed current temp to reach target temp. ** Waits for heating or cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
  * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>
@@ -574,23 +574,21 @@ private:
   #if HAS_COLOR_LEDS
     static void M150();
   #endif
 
   #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
     static void M155();
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
-    #if MIXING_VIRTUAL_TOOLS > 1
-      static void M164();
-    #endif
+    static void M164();
     #if ENABLED(DIRECT_MIXING_IN_G1)
       static void M165();
     #endif
   #endif
 
   static void M200();
   static void M201();
 
   #if 0
     static void M202(); // Not used for Sprinter/grbl gen6

commit af939c158ac8e774fbdbbfba6908a02a9e26e745
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Tue Oct 16 08:49:51 2018 +0200

    Option for G0 to have a separate feedrate (#12089)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7cc94ce8d2..81d560d905 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -334,21 +334,21 @@ public:
     #define KEEPALIVE_STATE(n) gcode.busy_state = gcode.n
   #else
     #define KEEPALIVE_STATE(n) NOOP
   #endif
 
   static void dwell(millis_t time);
 
 private:
 
   static void G0_G1(
-    #if IS_SCARA
+    #if IS_SCARA || ENABLED(G0_FEEDRATE)
       bool fast_move=false
     #endif
   );
 
   #if ENABLED(ARC_SUPPORT)
     static void G2_G3(const bool clockwise);
   #endif
 
   static void G4();
 

commit d43d4e421977e333f1a7fbff8b939e0288b3616c
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Oct 11 04:25:43 2018 +0200

    Refactor PRINTER_EVENT_LEDS, apply to M303 (#12038)
    
    Co-Authored-By: Giuliano Zaro <gmagician@users.noreply.github.com>

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a25c6c14eb..7cc94ce8d2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -329,24 +329,20 @@ public:
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 
     static void host_keepalive();
 
     #define KEEPALIVE_STATE(n) gcode.busy_state = gcode.n
   #else
     #define KEEPALIVE_STATE(n) NOOP
   #endif
 
-  #if ENABLED(PRINTER_EVENT_LEDS) && ENABLED(SDSUPPORT) && HAS_RESUME_CONTINUE
-    static bool lights_off_after_print;
-  #endif
-
   static void dwell(millis_t time);
 
 private:
 
   static void G0_G1(
     #if IS_SCARA
       bool fast_move=false
     #endif
   );
 

commit d556dc18650e2185791834d7fe70b4acf45254bc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Oct 10 09:45:20 2018 -0500

    Fix and improve EEPROM storage (#12054)
    
    * Clean up Temperature PID
    * Improve EEPROM read/write/validate
    * Group `SINGLENOZZLE` saved settings
    * Group planner saved settings
    * Group filament change saved settings
    * Group skew saved settings
    * Group `FWRETRACT` saved settings

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 92bd5496c0..a25c6c14eb 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -106,21 +106,21 @@
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
  * M80  - Turn on Power Supply. (Requires POWER_SUPPLY > 0)
  * M81  - Turn off Power Supply. (Requires POWER_SUPPLY > 0)
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.
  * M85  - Set inactivity shutdown timer with parameter S<seconds>. To disable set zero (default)
- * M92  - Set planner.axis_steps_per_mm for one or more axes.
+ * M92  - Set planner.settings.axis_steps_per_mm for one or more axes.
  * M100 - Watch Free Memory (for debugging) (Requires M100_FREE_MEMORY_WATCHER)
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
  * M106 - Set print fan speed.
  * M107 - Print fan off.
  * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
  * M109 - Sxxx Wait for extruder current temp to reach target temp. Waits only when heating
  *        Rxxx Wait for extruder current temp to reach target temp. Waits when heating and cooling
  *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
  * M110 - Set the current line number. (Used by host printing)

commit f2ecf8d5107e17508b55c2e9108c0f7395c7bb49
Author: Sam Lane <9569766+SJ-Innovation@users.noreply.github.com>
Date:   Sun Oct 7 23:07:12 2018 +0100

    Add option to control Solenoids under PARKING_EXTRUDER (#12028)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index bf3db6550e..92bd5496c0 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -680,21 +680,21 @@ private:
   static void M355();
 
   #if ENABLED(MORGAN_SCARA)
     static bool M360();
     static bool M361();
     static bool M362();
     static bool M363();
     static bool M364();
   #endif
 
-  #if ENABLED(EXT_SOLENOID)
+  #if ENABLED(EXT_SOLENOID) || ENABLED(MANUAL_SOLENOID_CONTROL)
     static void M380();
     static void M381();
   #endif
 
   static void M400();
 
   #if HAS_BED_PROBE
     static void M401();
     static void M402();
   #endif

commit 74cd6cb4fc90e4c483e7a97a313c0257790f1375
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Oct 7 18:06:14 2018 -0400

    Single nozzle filament change (#11994)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 106b980e7c..bf3db6550e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -158,20 +158,21 @@
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>
             X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
  * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
  * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT_AUTORETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
+ * M217 - Set filament swap parameters: "M217 S<length> P<feedrate> R<feedrate>". (Requires SINGLENOZZLE)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
  * M240 - Trigger a camera to take a photograph. (Requires CHDK or PHOTOGRAPH_PIN)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
@@ -610,20 +611,24 @@ private:
   #if ENABLED(FWRETRACT)
     static void M207();
     static void M208();
     #if ENABLED(FWRETRACT_AUTORETRACT)
       static void M209();
     #endif
   #endif
 
   static void M211();
 
+  #if ENABLED(SINGLENOZZLE)
+    static void M217();
+  #endif
+
   #if HOTENDS > 1
     static void M218();
   #endif
 
   static void M220();
   static void M221();
   static void M226();
 
   #if defined(CHDK) || HAS_PHOTOGRAPH
     static void M240();

commit 52a37913c16ab50a0c35e34a4c597bd1428edc7e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 5 18:19:45 2018 -0500

    Extend and apply some corrections

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7340e3b9bf..106b980e7c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -58,20 +58,21 @@
  * G26  - Mesh Validation Pattern (Requires G26_MESH_VALIDATION)
  * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
  * G28  - Home one or more axes
  * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
+ * G80  - Cancel current motion mode (Requires GCODE_MOTION_MODES)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to clockwise
  * M4   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to counter-clockwise
@@ -421,20 +422,24 @@ private:
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();
     static void G58();
     static void G59();
   #endif
 
+  #if ENABLED(GCODE_MOTION_MODES)
+    static void G80();
+  #endif
+
   static void G92();
 
   #if HAS_RESUME_CONTINUE
     static void M0_M1();
   #endif
 
   #if ENABLED(SPINDLE_LASER_ENABLE)
     static void M3_M4(bool is_M3);
     static void M5();
   #endif

commit 3e58b3a5d49e985dace724493f5d8831092d5c54
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 3 02:55:10 2018 -0500

    Followup to #11943

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 4298365e1f..7340e3b9bf 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -769,22 +769,22 @@ private:
   #if ENABLED(LIN_ADVANCE)
     static void M900();
   #endif
 
   #if HAS_TRINAMIC
     #if ENABLED(TMC_DEBUG)
       static void M122();
     #endif
     static void M906();
     #if ENABLED(MONITOR_DRIVER_STATUS)
-        static void M911();
-        static void M912();
+      static void M911();
+      static void M912();
     #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if USE_SENSORLESS
       static void M914();
     #endif
     #if ENABLED(TMC_Z_CALIBRATION)
       static void M915();
     #endif

commit c3229e1b3461b6da8373e7a24a7eeb131912a15b
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Wed Oct 3 10:48:49 2018 +0300

    Migrate to a new TMC library (#11943)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index d7ca10d9a5..4298365e1f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -768,22 +768,24 @@ private:
 
   #if ENABLED(LIN_ADVANCE)
     static void M900();
   #endif
 
   #if HAS_TRINAMIC
     #if ENABLED(TMC_DEBUG)
       static void M122();
     #endif
     static void M906();
-    static void M911();
-    static void M912();
+    #if ENABLED(MONITOR_DRIVER_STATUS)
+        static void M911();
+        static void M912();
+    #endif
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if USE_SENSORLESS
       static void M914();
     #endif
     #if ENABLED(TMC_Z_CALIBRATION)
       static void M915();
     #endif
   #endif

commit 11ac75edcb34a2f90b50ca134ff40839f8c29199
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 30 23:44:33 2018 -0500

    Use PGM_P for PSTR pointers (#11977)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 50de37ab46..d7ca10d9a5 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -288,21 +288,21 @@ public:
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();
   static void process_parsed_command(
     #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
       const bool no_ok = false
     #endif
   );
   static void process_next_command();
 
   #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
-    static void process_subcommands_now_P(const char *pgcode);
+    static void process_subcommands_now_P(PGM_P pgcode);
   #endif
 
   FORCE_INLINE static void home_all_axes() { G28(true); }
 
   /**
    * Multi-stepper support for M92, M201, M203
    */
   #if ENABLED(DISTINCT_E_FACTORS)
     #define GET_TARGET_EXTRUDER() if (gcode.get_target_extruder_from_command()) return
     #define TARGET_EXTRUDER gcode.target_extruder

commit 3286325044a7788f12ceb3f3d6cef00dc8b32433
Author: Thomas Moore <tcm0116@gmail.com>
Date:   Sun Sep 9 15:59:12 2018 -0400

    Add TMC2130 sensorless probing

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 908ac9e2f7..50de37ab46 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -222,21 +222,21 @@
  * M869 - Report position encoder module error.
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
- * M914 - Set SENSORLESS_HOMING sensitivity. (Requires SENSORLESS_HOMING)
+ * M914 - Set StallGuard sensitivity. (Requires SENSORLESS_HOMING or SENSORLESS_PROBING)
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M999 - Restart after being stopped by error
@@ -773,21 +773,21 @@ private:
   #if HAS_TRINAMIC
     #if ENABLED(TMC_DEBUG)
       static void M122();
     #endif
     static void M906();
     static void M911();
     static void M912();
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
-    #if ENABLED(SENSORLESS_HOMING)
+    #if USE_SENSORLESS
       static void M914();
     #endif
     #if ENABLED(TMC_Z_CALIBRATION)
       static void M915();
     #endif
   #endif
 
   #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
     static void M907();
     #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)

commit 93839e2f73c78fd2448c15c5ffefef62fd53fe6b
Author: Victor Tseng <palatis@gmail.com>
Date:   Sat Sep 29 05:52:56 2018 +0800

    Add option to enable/disable autoretract altogether (#11904)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 4f5a16655f..908ac9e2f7 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -154,21 +154,21 @@
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
  * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>
             X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
  * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
- * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT)
+ * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT_AUTORETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
  * M240 - Trigger a camera to take a photograph. (Requires CHDK or PHOTOGRAPH_PIN)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
@@ -598,21 +598,23 @@ private:
   static void M204();
   static void M205();
 
   #if HAS_M206_COMMAND
     static void M206();
   #endif
 
   #if ENABLED(FWRETRACT)
     static void M207();
     static void M208();
-    static void M209();
+    #if ENABLED(FWRETRACT_AUTORETRACT)
+      static void M209();
+    #endif
   #endif
 
   static void M211();
 
   #if HOTENDS > 1
     static void M218();
   #endif
 
   static void M220();
   static void M221();

commit bae8f82ba80be8dd90f52156652d46be0b0a2a08
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 18 01:10:41 2018 -0500

    [2.0] Fix Mixing Extruder mixing factors (#11861)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 36d8fc3fc3..4f5a16655f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -138,22 +138,22 @@
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
- * M164 - Save the mix as a virtual extruder. (Requires MIXING_EXTRUDER and MIXING_VIRTUAL_TOOLS)
- * M165 - Set the proportions for a mixing extruder. Use parameters ABCDHI to set the mixing factors. (Requires MIXING_EXTRUDER)
+ * M164 - Commit the mix (Req. MIXING_EXTRUDER) and optionally save as a virtual tool (Req. MIXING_VIRTUAL_TOOLS > 1)
+ * M165 - Set the mix for a mixing extruder wuth parameters ABCDHI. (Requires MIXING_EXTRUDER and DIRECT_MIXING_IN_G1)
  * M190 - Sxxx Wait for bed current temp to reach target temp. ** Waits only when heating! **
  *        Rxxx Wait for bed current temp to reach target temp. ** Waits for heating or cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
  * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>

commit 1b6bc194279b24e24df29bdd677a112236deac34
Author: Sam Lane <sl01172@surrey.ac.uk>
Date:   Sat Sep 8 18:08:31 2018 +0100

    Add external closed loop controller support

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index cb9e03b58f..36d8fc3fc3 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -69,20 +69,21 @@
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to clockwise
  * M4   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to counter-clockwise
  * M5   - Turn laser/spindle off
+ * M12  - Set up closed loop control system. More features coming soon. (Requires EXTERNAL_CLOSED_LOOP_CONTROLLER)
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
  * M27  - Report SD print status. (Requires SDSUPPORT)
@@ -431,20 +432,24 @@ private:
 
   #if HAS_RESUME_CONTINUE
     static void M0_M1();
   #endif
 
   #if ENABLED(SPINDLE_LASER_ENABLE)
     static void M3_M4(bool is_M3);
     static void M5();
   #endif
 
+  #if ENABLED(EXTERNAL_CLOSED_LOOP_CONTROLLER)
+    static void M12();
+  #endif
+
   static void M17();
 
   static void M18_M84();
 
   #if ENABLED(SDSUPPORT)
     static void M20();
     static void M21();
     static void M22();
     static void M23();
     static void M24();

commit 3e81745e81fea173599b06ac9db7ed776e986808
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Aug 24 21:53:42 2018 -0500

    Fix issues, make optional

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 0fe97bea8c..cb9e03b58f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -165,21 +165,21 @@
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
  * M240 - Trigger a camera to take a photograph. (Requires CHDK or PHOTOGRAPH_PIN)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
- * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires servos)
+ * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires EDITABLE_SERVO_ANGLES)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
@@ -621,21 +621,23 @@ private:
     static void M250();
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
-    static void M281();
+    #if ENABLED(EDITABLE_SERVO_ANGLES)
+      static void M281();
+    #endif
   #endif
 
   #if ENABLED(BABYSTEPPING)
     static void M290();
   #endif
 
   #if HAS_BUZZER
     static void M300();
   #endif
 

commit aa80e448e24a27ac0006de4e3d3e93b18c73e3e0
Author: Jan <janschon@uni-bremen.de>
Date:   Tue Aug 7 17:04:46 2018 +0200

    Store servo angles in EEPROM

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2130b1636e..0fe97bea8c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -165,20 +165,21 @@
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
  * M240 - Trigger a camera to take a photograph. (Requires CHDK or PHOTOGRAPH_PIN)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
+ * M281 - Set servo min|max position: "M281 P<index> L<min> U<max>". (Requires servos)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
@@ -620,20 +621,21 @@ private:
     static void M250();
   #endif
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
+    static void M281();
   #endif
 
   #if ENABLED(BABYSTEPPING)
     static void M290();
   #endif
 
   #if HAS_BUZZER
     static void M300();
   #endif
 

commit fbcdf5eaeb4f2265fd43097ab6c652a89842d8e7
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Sat Jul 14 14:13:06 2018 +0300

    Simplify stepper driver per-axis selection

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6f847337f4..2130b1636e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -125,21 +125,21 @@
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
  * M112 - Emergency stop.
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
- * M122 - Debug stepper (Requires HAVE_TMC2130 or HAVE_TMC2208)
+ * M122 - Debug stepper (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
@@ -212,27 +212,27 @@
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
- * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires HAVE_TMC2130 or HAVE_TMC2208)
+ * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
- * M911 - Report stepper driver overtemperature pre-warn condition. (Requires HAVE_TMC2130 or HAVE_TMC2208)
- * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires HAVE_TMC2130 or HAVE_TMC2208)
+ * M911 - Report stepper driver overtemperature pre-warn condition. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
+ * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires at least one _DRIVER_TYPE defined as TMC2130/TMC2208/TMC2660)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set SENSORLESS_HOMING sensitivity. (Requires SENSORLESS_HOMING)
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations

commit 0fff79c24b1fbf890c9d5b25172a6f0a6274ad34
Author: Colin Gilgenbach <colin@gilgenbach.net>
Date:   Fri Jun 29 19:48:11 2018 -0600

    Fixes G29_with_retry behavior (#11045)
    
    * Fix G29 (ABL) retry behavior

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a655e557d3..6f847337f4 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -380,24 +380,27 @@ private:
     static void G26();
   #endif
 
   #if ENABLED(NOZZLE_PARK_FEATURE)
     static void G27();
   #endif
 
   static void G28(const bool always_home_all);
 
   #if HAS_LEVELING
-    static void G29();
     #if ENABLED(G29_RETRY_AND_RECOVER)
       static void G29_with_retry();
+      #define G29_TYPE bool
+    #else
+      #define G29_TYPE void
     #endif
+    static G29_TYPE G29();
   #endif
 
   #if HAS_BED_PROBE
     static void G30();
     #if ENABLED(Z_PROBE_SLED)
       static void G31();
       static void G32();
     #endif
   #endif
 

commit d4795e5b8eff93fcab4a80d16cd7bc5ceb2ebc51
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jun 18 22:04:03 2018 -0500

    [2.0.x] Tweaks and additions for MAX7219 (#11034)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3debb10db1..a655e557d3 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -720,20 +720,24 @@ private:
 
   #if ENABLED(DELTA) || ENABLED(X_DUAL_ENDSTOPS) || ENABLED(Y_DUAL_ENDSTOPS) || ENABLED(Z_DUAL_ENDSTOPS)
     static void M666();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
+  #if ENABLED(MAX7219_GCODE)
+    static void M7219();
+  #endif
+
   #if HAS_BED_PROBE
     static void M851();
   #endif
 
   #if ENABLED(SKEW_CORRECTION_GCODE)
     static void M852();
   #endif
 
   #if ENABLED(I2C_POSITION_ENCODERS)
     FORCE_INLINE static void M860() { I2CPEM.M860(); }

commit cd08f01bb471aae84b7d9babcb37bb37df306857
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 28 11:16:52 2018 -0500

    Fix M421 comment in gcode.h

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index cb8e62b79e..3debb10db1 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -185,21 +185,21 @@
  * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
  * M400 - Finish all moves.
  * M401 - Deploy and activate Z probe. (Requires a probe)
  * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
- * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING or AUTO_BED_LEVELING_UBL)
+ * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, or AUTO_BED_LEVELING_UBL)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)

commit cb46cb8480c33ffc9f6361b96ed200986a3bd9ac
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 23 17:13:01 2018 -0500

    Add HAS_HEATED_BED conditional (#10495)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c9f557c005..cb8e62b79e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -540,21 +540,21 @@ private:
     #if HAS_HEATER_1
       static void M126();
       static void M127();
     #endif
     #if HAS_HEATER_2
       static void M128();
       static void M129();
     #endif
   #endif
 
-  #if HAS_HEATER_BED && HAS_TEMP_BED
+  #if HAS_HEATED_BED
     static void M140();
     static void M190();
   #endif
 
   #if ENABLED(ULTIPANEL)
     static void M145();
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();

commit 5cc7916e699a711bee82f0fbe342b7ebd80b6b37
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Apr 18 15:56:10 2018 -0600

    Add G29_RETRY_AND_RECOVER feature
    
    - Add an option to retry G29, optionally executing a G-code procedure after each failed probe.

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c8b072a238..c9f557c005 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -278,23 +278,31 @@ public:
     static int8_t active_coordinate_system;
     static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
   static millis_t previous_move_ms;
   FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
 
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();
-  static void process_parsed_command();
+  static void process_parsed_command(
+    #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+      const bool no_ok = false
+    #endif
+  );
   static void process_next_command();
 
+  #if ENABLED(USE_EXECUTE_COMMANDS_IMMEDIATE)
+    static void process_subcommands_now_P(const char *pgcode);
+  #endif
+
   FORCE_INLINE static void home_all_axes() { G28(true); }
 
   /**
    * Multi-stepper support for M92, M201, M203
    */
   #if ENABLED(DISTINCT_E_FACTORS)
     #define GET_TARGET_EXTRUDER() if (gcode.get_target_extruder_from_command()) return
     #define TARGET_EXTRUDER gcode.target_extruder
   #else
     #define GET_TARGET_EXTRUDER() NOOP
@@ -373,20 +381,23 @@ private:
   #endif
 
   #if ENABLED(NOZZLE_PARK_FEATURE)
     static void G27();
   #endif
 
   static void G28(const bool always_home_all);
 
   #if HAS_LEVELING
     static void G29();
+    #if ENABLED(G29_RETRY_AND_RECOVER)
+      static void G29_with_retry();
+    #endif
   #endif
 
   #if HAS_BED_PROBE
     static void G30();
     #if ENABLED(Z_PROBE_SLED)
       static void G31();
       static void G32();
     #endif
   #endif
 

commit 646aa20b433cbde61a849a2b79ddf1c0a13714ef
Author: Luc Van Daele <lvd@sound-silence.com>
Date:   Thu Apr 12 04:14:48 2018 +0200

    Overhaul of G33 Delta Calibration (#8822)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index eebcc4f235..c8b072a238 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -195,21 +195,21 @@
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING or AUTO_BED_LEVELING_UBL)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
- * M665 - Set delta configurations: "M665 L<diagonal rod> R<delta radius> S<segments/s> A<rod A trim mm> B<rod B trim mm> C<rod C trim mm> I<tower A trim angle> J<tower B trim angle> K<tower C trim angle>" (Requires DELTA)
+ * M665 - Set delta configurations: "M665 H<delta height> L<diagonal rod> R<delta radius> S<segments/s> B<calibration radius> X<Alpha angle trim> Y<Beta angle trim> Z<Gamma angle trim> (Requires DELTA)
  * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.

commit 9e4c037cefe0d457b21867121e3371f3400c5473
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 28 22:59:28 2018 -0500

    Wait before turning off PRINTER_EVENT_LEDS at print end (#10248)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index a668c05f8d..eebcc4f235 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -317,20 +317,24 @@ public:
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 
     static void host_keepalive();
 
     #define KEEPALIVE_STATE(n) gcode.busy_state = gcode.n
   #else
     #define KEEPALIVE_STATE(n) NOOP
   #endif
 
+  #if ENABLED(PRINTER_EVENT_LEDS) && ENABLED(SDSUPPORT) && HAS_RESUME_CONTINUE
+    static bool lights_off_after_print;
+  #endif
+
   static void dwell(millis_t time);
 
 private:
 
   static void G0_G1(
     #if IS_SCARA
       bool fast_move=false
     #endif
   );
 

commit 1cb810ff1c04065daa29182a6c22ecf6b0c0098b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 21 19:30:06 2018 -0500

    [2.0.x] Automatically reset stepper timeout (#10179)
    
    * Automatically reset stepper timeout in manage_inactivity
    
    Any code that adds moves to the planner can skip resetting the stepper timeout. We can let `idle` / `manage_inactivity` reset the timer whenever it detects any moves in the planner.
    
    * blocks_queued => has_blocks_queued

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3fd16a95fc..a668c05f8d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -273,22 +273,22 @@ public:
     static WorkspacePlane workspace_plane;
   #endif
 
   #define MAX_COORDINATE_SYSTEMS 9
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static int8_t active_coordinate_system;
     static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
-  static millis_t previous_cmd_ms;
-  FORCE_INLINE static void refresh_cmd_timeout() { previous_cmd_ms = millis(); }
+  static millis_t previous_move_ms;
+  FORCE_INLINE static void reset_stepper_timeout() { previous_move_ms = millis(); }
 
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();
   static void process_parsed_command();
   static void process_next_command();
 
   FORCE_INLINE static void home_all_axes() { G28(true); }
 
   /**
    * Multi-stepper support for M92, M201, M203

commit 2e43438e0c3f2c5e0ec7b701c6f33a71136a601a
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Sun Mar 11 11:57:31 2018 +0100

    Add C parameter to M27 to include the long filename
    
    In answer to #10001
    
    Add an option to retrieve the currently open file name (long filename if possible).

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 548987c96f..3fd16a95fc 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -78,21 +78,23 @@
  * M5   - Turn laser/spindle off
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
- * M27  - Report SD print status. (Requires SDSUPPORT) Or, with 'S<seconds>' set the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
+ * M27  - Report SD print status. (Requires SDSUPPORT)
+ *        OR, with 'S<seconds>' set the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
+ *        OR, with 'C' get the current filename.
  * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
  * M29  - Stop SD write. (Requires SDSUPPORT)
  * M30  - Delete file from SD: "M30 /path/file.gco"
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.

commit 5b45aab262445fc7e1fdf96ed5887ef55c98c0d8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 12 08:14:25 2018 -0500

    M218: report with no parameters

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e618dcf05a..548987c96f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -154,21 +154,21 @@
  * M205 - Set advanced settings. Current units apply:
             S<print> T<travel> minimum speeds
             B<minimum segment time>
             X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
  * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
  * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
  * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT)
           Every normal extrude-only move will be classified as retract depending on the direction.
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
- * M218 - Set a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
+ * M218 - Set/get a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
  * M240 - Trigger a camera to take a photograph. (Requires CHDK or PHOTOGRAPH_PIN)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
  * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>

commit f00317375256ce6125ba84290bb59333cb4f10dd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Mar 10 19:52:30 2018 -0600

    Fixup M666
    
    Followup to d6df032

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e04cc73f48..e618dcf05a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -694,21 +694,21 @@ private:
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
     static void M605();
   #endif
 
   #if IS_KINEMATIC
     static void M665();
   #endif
 
-  #if ENABLED(DELTA) || ENABLED(Z_DUAL_ENDSTOPS)
+  #if ENABLED(DELTA) || ENABLED(X_DUAL_ENDSTOPS) || ENABLED(Y_DUAL_ENDSTOPS) || ENABLED(Z_DUAL_ENDSTOPS)
     static void M666();
   #endif
 
   #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
     static void M701();
     static void M702();
   #endif
 
   #if HAS_BED_PROBE
     static void M851();

commit d6df0322c2e0c2a64a00470e2ffe0dd0b99651d5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Mar 10 05:55:25 2018 -0600

    Update M666 for XYZ dual endstops

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 5c905bbc3a..e04cc73f48 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -194,21 +194,21 @@
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
  * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 L<diagonal rod> R<delta radius> S<segments/s> A<rod A trim mm> B<rod B trim mm> C<rod C trim mm> I<tower A trim angle> J<tower B trim angle> K<tower C trim angle>" (Requires DELTA)
- * M666 - Set delta endstop adjustment. (Requires DELTA)
+ * M666 - Set/get offsets for delta (Requires DELTA) or dual endstops (Requires [XYZ]_DUAL_ENDSTOPS).
  * M701 - Load filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M702 - Unload filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.

commit fbc41c0e98da79379b4a8b4f2c4057c181057c92
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Mar 10 05:30:59 2018 -0600

    Update Marlin G-code summary

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index bdef7dfca2..5c905bbc3a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -90,21 +90,21 @@
  * M29  - Stop SD write. (Requires SDSUPPORT)
  * M30  - Delete file from SD: "M30 /path/file.gco"
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.
  * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins
- * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> <S>chizoid. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
+ * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> S<chizoid>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
  * M75  - Start the print job timer.
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
  * M80  - Turn on Power Supply. (Requires POWER_SUPPLY > 0)
  * M81  - Turn off Power Supply. (Requires POWER_SUPPLY > 0)
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.
@@ -210,21 +210,21 @@
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
- * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires HAVE_TMC2130)
+ * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires HAVE_TMC2130 or HAVE_TMC2208)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires HAVE_TMC2130 or HAVE_TMC2208)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires HAVE_TMC2130 or HAVE_TMC2208)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set SENSORLESS_HOMING sensitivity. (Requires SENSORLESS_HOMING)
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)

commit ffbf63e6afb7728849d434ccfda89e3fd8b37094
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 7 01:53:50 2018 -0600

    Add HAS_TEMP_SENSOR conditional

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 296c0f3f47..bdef7dfca2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -540,21 +540,21 @@ private:
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
   #endif
 
   #if HAS_COLOR_LEDS
     static void M150();
   #endif
 
-  #if ENABLED(AUTO_REPORT_TEMPERATURES) && (HAS_TEMP_HOTEND || HAS_TEMP_BED)
+  #if ENABLED(AUTO_REPORT_TEMPERATURES) && HAS_TEMP_SENSOR
     static void M155();
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
     #if MIXING_VIRTUAL_TOOLS > 1
       static void M164();
     #endif
     #if ENABLED(DIRECT_MIXING_IN_G1)
       static void M165();

commit 920d92aa46bc3bf5242619e730f6f1457735be95
Merge: b198b49d15 2057177184
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 7 00:16:50 2018 -0600

    Merge pull request #9974 from thinkyhead/bf2_tmc_util_progmem
    
    [2.0.x] Move tmc_util.* extended_axis_codes to PROGMEM

diff --combined Marlin/src/gcode/gcode.h
index 2428c2f356,24d7658154..296c0f3f47
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@@ -78,21 -78,21 +78,21 @@@
   * M5   - Turn laser/spindle off
   * M17  - Enable/Power all stepper motors
   * M18  - Disable all stepper motors; same as M84
   * M20  - List SD card. (Requires SDSUPPORT)
   * M21  - Init SD card. (Requires SDSUPPORT)
   * M22  - Release SD card. (Requires SDSUPPORT)
   * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
   * M24  - Start/resume SD print. (Requires SDSUPPORT)
   * M25  - Pause SD print. (Requires SDSUPPORT)
   * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
 - * M27  - Report SD print status. (Requires SDSUPPORT) With 'S<seconds>' sets the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
 + * M27  - Report SD print status. (Requires SDSUPPORT) Or, with 'S<seconds>' set the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
   * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
   * M29  - Stop SD write. (Requires SDSUPPORT)
   * M30  - Delete file from SD: "M30 /path/file.gco"
   * M31  - Report time since last M109 or SD card start to serial.
   * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
   *        Use P to run other files as sub-programs: "M32 P !filename#"
   *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
   * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
   * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
   * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.
@@@ -260,21 -260,21 +260,21 @@@ public
  
    static uint8_t target_extruder;
  
    static bool axis_relative_modes[];
  
    #if ENABLED(CNC_WORKSPACE_PLANES)
      /**
       * Workspace planes only apply to G2/G3 moves
       * (and "canned cycles" - not a current feature)
       */
-     enum WorkspacePlane { PLANE_XY, PLANE_ZX, PLANE_YZ };
+     enum WorkspacePlane : char { PLANE_XY, PLANE_ZX, PLANE_YZ };
      static WorkspacePlane workspace_plane;
    #endif
  
    #define MAX_COORDINATE_SYSTEMS 9
    #if ENABLED(CNC_COORDINATE_SYSTEMS)
      static int8_t active_coordinate_system;
      static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
      static bool select_coordinate_system(const int8_t _new);
    #endif
  
@@@ -297,21 -297,21 +297,21 @@@
    #else
      #define GET_TARGET_EXTRUDER() NOOP
      #define TARGET_EXTRUDER 0
    #endif
  
    #if ENABLED(HOST_KEEPALIVE_FEATURE)
      /**
       * States for managing Marlin and host communication
       * Marlin sends messages if blocked or busy
       */
-     enum MarlinBusyState {
+     enum MarlinBusyState : char {
        NOT_BUSY,           // Not in a handler
        IN_HANDLER,         // Processing a GCode
        IN_PROCESS,         // Known to be blocking command input (as in G29)
        PAUSED_FOR_USER,    // Blocking pending any input
        PAUSED_FOR_INPUT    // Blocking pending text input (concept)
      };
  
      static MarlinBusyState busy_state;
      static uint8_t host_keepalive_interval;
  

commit b198b49d1590543616615e2f87bba5c4ebd0f30d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 7 00:13:25 2018 -0600

    Followup to AUTO_REPORT_SD_STATUS
    
    Followup to #9832

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 889f563012..2428c2f356 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -78,21 +78,21 @@
  * M5   - Turn laser/spindle off
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
- * M27  - Report SD print status. (Requires SDSUPPORT) With 'S<seconds>' sets the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
+ * M27  - Report SD print status. (Requires SDSUPPORT) Or, with 'S<seconds>' set the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
  * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
  * M29  - Stop SD write. (Requires SDSUPPORT)
  * M30  - Delete file from SD: "M30 /path/file.gco"
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.

commit 20571771848e2d8d3bb4f216c25c3d610c7e47cb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Mar 6 22:35:22 2018 -0600

    Make enums into implicit char

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 889f563012..24d7658154 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -260,21 +260,21 @@ public:
 
   static uint8_t target_extruder;
 
   static bool axis_relative_modes[];
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     /**
      * Workspace planes only apply to G2/G3 moves
      * (and "canned cycles" - not a current feature)
      */
-    enum WorkspacePlane { PLANE_XY, PLANE_ZX, PLANE_YZ };
+    enum WorkspacePlane : char { PLANE_XY, PLANE_ZX, PLANE_YZ };
     static WorkspacePlane workspace_plane;
   #endif
 
   #define MAX_COORDINATE_SYSTEMS 9
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
     static int8_t active_coordinate_system;
     static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
@@ -297,21 +297,21 @@ public:
   #else
     #define GET_TARGET_EXTRUDER() NOOP
     #define TARGET_EXTRUDER 0
   #endif
 
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     /**
      * States for managing Marlin and host communication
      * Marlin sends messages if blocked or busy
      */
-    enum MarlinBusyState {
+    enum MarlinBusyState : char {
       NOT_BUSY,           // Not in a handler
       IN_HANDLER,         // Processing a GCode
       IN_PROCESS,         // Known to be blocking command input (as in G29)
       PAUSED_FOR_USER,    // Blocking pending any input
       PAUSED_FOR_INPUT    // Blocking pending text input (concept)
     };
 
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 

commit 6e08ddce6ec179565e0f3ab47cd69bfe807bdc5a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 1 19:10:36 2018 -0600

    Correct M401 / M402 description

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 3d1c84ff79..889f563012 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -175,22 +175,22 @@
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
  * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
  * M400 - Finish all moves.
- * M401 - Lower Z probe. (Requires a probe)
- * M402 - Raise Z probe. (Requires a probe)
+ * M401 - Deploy and activate Z probe. (Requires a probe)
+ * M402 - Deactivate and stow Z probe. (Requires a probe)
  * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
  * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
  * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
  * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
  * M410 - Quickstop. Abort all planned moves.
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING or AUTO_BED_LEVELING_UBL)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)

commit 88b6a15b47967b9b2e50050cfc86f3cec046f563
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 1 15:11:12 2018 -0600

    Update M900 verbiage

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index ef2d1dbfa2..3d1c84ff79 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -209,21 +209,21 @@
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
- * M900 - Get and/or Set advance K factor and WH/D ratio. (Requires LIN_ADVANCE)
+ * M900 - Get or Set Linear Advance K-factor. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires HAVE_TMC2130)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
  * M911 - Report stepper driver overtemperature pre-warn condition. (Requires HAVE_TMC2130 or HAVE_TMC2208)
  * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires HAVE_TMC2130 or HAVE_TMC2208)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set SENSORLESS_HOMING sensitivity. (Requires SENSORLESS_HOMING)
  *

commit eb079959fb320f99cfa885e576fed23e7aa3354f
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Mon Feb 26 22:38:27 2018 +0100

    Report sd card progress [FR]  #9751 (#9832)
    
    * SD Status auto-report feature
    Feature Request #9751

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index bce0cf3712..ef2d1dbfa2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -78,21 +78,21 @@
  * M5   - Turn laser/spindle off
  * M17  - Enable/Power all stepper motors
  * M18  - Disable all stepper motors; same as M84
  * M20  - List SD card. (Requires SDSUPPORT)
  * M21  - Init SD card. (Requires SDSUPPORT)
  * M22  - Release SD card. (Requires SDSUPPORT)
  * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
  * M24  - Start/resume SD print. (Requires SDSUPPORT)
  * M25  - Pause SD print. (Requires SDSUPPORT)
  * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
- * M27  - Report SD print status. (Requires SDSUPPORT)
+ * M27  - Report SD print status. (Requires SDSUPPORT) With 'S<seconds>' sets the SD status auto-report interval. (Requires AUTO_REPORT_SD_STATUS)
  * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
  * M29  - Stop SD write. (Requires SDSUPPORT)
  * M30  - Delete file from SD: "M30 /path/file.gco"
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.

commit 133b38b93b0a83e2601c93a47a51f97783921f71
Author: AnHardt <github@kitelab.de>
Date:   Wed Feb 14 12:17:58 2018 +0100

    Complete M48 description (#9631)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index e97646f9c5..bce0cf3712 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -90,21 +90,21 @@
  * M29  - Stop SD write. (Requires SDSUPPORT)
  * M30  - Delete file from SD: "M30 /path/file.gco"
  * M31  - Report time since last M109 or SD card start to serial.
  * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
  *        Use P to run other files as sub-programs: "M32 P !filename#"
  *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
  * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
  * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
  * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.
  * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins
- * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
+ * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs> <S>chizoid. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
  * M75  - Start the print job timer.
  * M76  - Pause the print job timer.
  * M77  - Stop the print job timer.
  * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
  * M80  - Turn on Power Supply. (Requires POWER_SUPPLY > 0)
  * M81  - Turn off Power Supply. (Requires POWER_SUPPLY > 0)
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.

commit e1117a8492f389bda7e911c3338fc16056ae4829
Author: GMagician <3684609+GMagician@users.noreply.github.com>
Date:   Fri Feb 2 08:45:46 2018 +0100

    [2.0.x] fix compile errors when CNC_COORDINATE_SYSTEMS is enabled (#9380)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 47142cae9b..e97646f9c5 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -390,21 +390,20 @@ private:
 
   #if ENABLED(G38_PROBE_TARGET)
     static void G38(const bool is_38_2);
   #endif
 
   #if HAS_MESH
     static void G42();
   #endif
 
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
-    bool select_coordinate_system(const int8_t _new);
     static void G53();
     static void G54();
     static void G55();
     static void G56();
     static void G57();
     static void G58();
     static void G59();
   #endif
 
   static void G92();

commit b91ca168fbb09807b8203fc1791e4095a57e34af
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 4 19:59:43 2018 -0600

    Add a struct defining EEPROM storage

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 823ba44d62..47142cae9b 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -264,22 +264,22 @@ public:
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     /**
      * Workspace planes only apply to G2/G3 moves
      * (and "canned cycles" - not a current feature)
      */
     enum WorkspacePlane { PLANE_XY, PLANE_ZX, PLANE_YZ };
     static WorkspacePlane workspace_plane;
   #endif
 
+  #define MAX_COORDINATE_SYSTEMS 9
   #if ENABLED(CNC_COORDINATE_SYSTEMS)
-    #define MAX_COORDINATE_SYSTEMS 9
     static int8_t active_coordinate_system;
     static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
     static bool select_coordinate_system(const int8_t _new);
   #endif
 
   static millis_t previous_cmd_ms;
   FORCE_INLINE static void refresh_cmd_timeout() { previous_cmd_ms = millis(); }
 
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();

commit 51e0f2bee34e485d038ad0ca35fca7398a1576de
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 4 19:51:18 2018 -0600

    Add MarlinSettings::validate()

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 377c948b68..823ba44d62 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -674,20 +674,23 @@ private:
   #if HAS_M206_COMMAND
     static void M428();
   #endif
 
   static void M500();
   static void M501();
   static void M502();
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
+  #if ENABLED(EEPROM_SETTINGS)
+    static void M504();
+  #endif
 
   #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
     static void M540();
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
     static void M603();
   #endif
 

commit 7541316bb49303ce97e062da601e26426321c4ba
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 4 05:06:34 2018 -0600

    Add M701/M702 Filament Load/Unload, M603

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 648a27392e..377c948b68 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -191,23 +191,26 @@
  * M410 - Quickstop. Abort all planned moves.
  * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
  * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING or AUTO_BED_LEVELING_UBL)
  * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
+ * M603 - Configure filament change: "M603 T<tool> U<unload_length> L<load_length>". (Requires ADVANCED_PAUSE_FEATURE)
+ * M605 - Set Dual X-Carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M665 - Set delta configurations: "M665 L<diagonal rod> R<delta radius> S<segments/s> A<rod A trim mm> B<rod B trim mm> C<rod C trim mm> I<tower A trim angle> J<tower B trim angle> K<tower C trim angle>" (Requires DELTA)
  * M666 - Set delta endstop adjustment. (Requires DELTA)
- * M605 - Set dual x-carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
+ * M701 - Load filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
+ * M702 - Unload filament (requires FILAMENT_LOAD_UNLOAD_GCODES)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
  * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
@@ -678,35 +681,37 @@ private:
   #if DISABLED(DISABLE_M503)
     static void M503();
   #endif
 
   #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
     static void M540();
   #endif
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     static void M600();
+    static void M603();
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
     static void M605();
   #endif
 
   #if IS_KINEMATIC
     static void M665();
   #endif
 
   #if ENABLED(DELTA) || ENABLED(Z_DUAL_ENDSTOPS)
     static void M666();
   #endif
 
-  #if ENABLED(MK2_MULTIPLEXER)
+  #if ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
+    static void M701();
     static void M702();
   #endif
 
   #if HAS_BED_PROBE
     static void M851();
   #endif
 
   #if ENABLED(SKEW_CORRECTION_GCODE)
     static void M852();
   #endif

commit 0cd1e91056213d6a0bd422848ccff7cd1191d001
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Fri Dec 15 23:03:14 2017 +0200

    [2.0.x] TMC driver update (#8769)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 5cd70f207a..648a27392e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -123,20 +123,21 @@
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
  * M112 - Emergency stop.
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
  * M117 - Display a message on the controller screen. (Requires an LCD)
  * M118 - Display a message in the host console.
  * M119 - Report endstops status.
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
+ * M122 - Debug stepper (Requires HAVE_TMC2130 or HAVE_TMC2208)
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
  * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
@@ -211,22 +212,22 @@
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
  * M900 - Get and/or Set advance K factor and WH/D ratio. (Requires LIN_ADVANCE)
  * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires HAVE_TMC2130)
  * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
  * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
  * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
  * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
- * M911 - Report stepper driver overtemperature pre-warn condition. (Requires HAVE_TMC2130)
- * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires HAVE_TMC2130)
+ * M911 - Report stepper driver overtemperature pre-warn condition. (Requires HAVE_TMC2130 or HAVE_TMC2208)
+ * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires HAVE_TMC2130 or HAVE_TMC2208)
  * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
  * M914 - Set SENSORLESS_HOMING sensitivity. (Requires SENSORLESS_HOMING)
  *
  * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
  * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
  * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
  * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
  * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
  *
  * ************ Custom codes - This can change to suit future G-code regulations
@@ -720,30 +721,36 @@ private:
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }
     FORCE_INLINE static void M869() { I2CPEM.M869(); }
   #endif
 
   #if ENABLED(LIN_ADVANCE)
     static void M900();
   #endif
 
-  #if ENABLED(HAVE_TMC2130)
+  #if HAS_TRINAMIC
+    #if ENABLED(TMC_DEBUG)
+      static void M122();
+    #endif
     static void M906();
     static void M911();
     static void M912();
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if ENABLED(SENSORLESS_HOMING)
       static void M914();
     #endif
+    #if ENABLED(TMC_Z_CALIBRATION)
+      static void M915();
+    #endif
   #endif
 
   #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
     static void M907();
     #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
       static void M908();
       #if ENABLED(DAC_STEPPER_CURRENT)
         static void M909();
         static void M910();
       #endif

commit de3d3b9cb19cce2be09b5c7c8be32a81bf2b6d97
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 8 00:37:09 2017 -0600

    Put FORCE_INLINE before static

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2b2a1c24c3..5cd70f207a 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -275,21 +275,21 @@ public:
   #endif
 
   static millis_t previous_cmd_ms;
   FORCE_INLINE static void refresh_cmd_timeout() { previous_cmd_ms = millis(); }
 
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();
   static void process_parsed_command();
   static void process_next_command();
 
-  static FORCE_INLINE void home_all_axes() { G28(true); }
+  FORCE_INLINE static void home_all_axes() { G28(true); }
 
   /**
    * Multi-stepper support for M92, M201, M203
    */
   #if ENABLED(DISTINCT_E_FACTORS)
     #define GET_TARGET_EXTRUDER() if (gcode.get_target_extruder_from_command()) return
     #define TARGET_EXTRUDER gcode.target_extruder
   #else
     #define GET_TARGET_EXTRUDER() NOOP
     #define TARGET_EXTRUDER 0

commit 0154e3480c44bf9d96d662382da25afaaf3fd854
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 1 16:42:23 2017 -0600

    New feature: BED_SKEW_CORRECTION

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 7f89004ac2..2b2a1c24c3 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -194,20 +194,21 @@
  * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
  * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
  * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
  * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
  * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
  * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
  * M665 - Set delta configurations: "M665 L<diagonal rod> R<delta radius> S<segments/s> A<rod A trim mm> B<rod B trim mm> C<rod C trim mm> I<tower A trim angle> J<tower B trim angle> K<tower C trim angle>" (Requires DELTA)
  * M666 - Set delta endstop adjustment. (Requires DELTA)
  * M605 - Set dual x-carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
  * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
+ * M852 - Set skew factors: "M852 [I<xy>] [J<xz>] [K<yz>]". (Requires SKEW_CORRECTION_GCODE, and SKEW_CORRECTION_FOR_Z for IJ)
  * M860 - Report the position of position encoder modules.
  * M861 - Report the status of position encoder modules.
  * M862 - Perform an axis continuity test for position encoder modules.
  * M863 - Perform steps-per-mm calibration for position encoder modules.
  * M864 - Change position encoder module I2C address.
  * M865 - Check position encoder module firmware version.
  * M866 - Report or reset position encoder module error count.
  * M867 - Enable/disable or toggle error correction for position encoder modules.
  * M868 - Report or set position encoder module error correction threshold.
  * M869 - Report position encoder module error.
@@ -698,20 +699,24 @@ private:
   #endif
 
   #if ENABLED(MK2_MULTIPLEXER)
     static void M702();
   #endif
 
   #if HAS_BED_PROBE
     static void M851();
   #endif
 
+  #if ENABLED(SKEW_CORRECTION_GCODE)
+    static void M852();
+  #endif
+
   #if ENABLED(I2C_POSITION_ENCODERS)
     FORCE_INLINE static void M860() { I2CPEM.M860(); }
     FORCE_INLINE static void M861() { I2CPEM.M861(); }
     FORCE_INLINE static void M862() { I2CPEM.M862(); }
     FORCE_INLINE static void M863() { I2CPEM.M863(); }
     FORCE_INLINE static void M864() { I2CPEM.M864(); }
     FORCE_INLINE static void M865() { I2CPEM.M865(); }
     FORCE_INLINE static void M866() { I2CPEM.M866(); }
     FORCE_INLINE static void M867() { I2CPEM.M867(); }
     FORCE_INLINE static void M868() { I2CPEM.M868(); }

commit c6b0c104bbab04d4d59c4f3f8fddb728e9b99603
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 23 17:59:43 2017 -0600

    Adapt G26 to work for all meshes

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 24d0d3f078..7f89004ac2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -48,21 +48,21 @@
  * G4   - Dwell S<seconds> or P<milliseconds>
  * G5   - Cubic B-spline with XYZE destination and IJPQ offsets
  * G10  - Retract filament according to settings of M207 (Requires FWRETRACT)
  * G11  - Retract recover filament according to settings of M208 (Requires FWRETRACT)
  * G12  - Clean tool (Requires NOZZLE_CLEAN_FEATURE)
  * G17  - Select Plane XY (Requires CNC_WORKSPACE_PLANES)
  * G18  - Select Plane ZX (Requires CNC_WORKSPACE_PLANES)
  * G19  - Select Plane YZ (Requires CNC_WORKSPACE_PLANES)
  * G20  - Set input units to inches (Requires INCH_MODE_SUPPORT)
  * G21  - Set input units to millimeters (Requires INCH_MODE_SUPPORT)
- * G26  - Mesh Validation Pattern (Requires UBL_G26_MESH_VALIDATION)
+ * G26  - Mesh Validation Pattern (Requires G26_MESH_VALIDATION)
  * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
  * G28  - Home one or more axes
  * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
  * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
  * G90  - Use Absolute Coordinates
@@ -350,21 +350,21 @@ private:
     static void G17();
     static void G18();
     static void G19();
   #endif
 
   #if ENABLED(INCH_MODE_SUPPORT)
     static void G20();
     static void G21();
   #endif
 
-  #if ENABLED(UBL_G26_MESH_VALIDATION)
+  #if ENABLED(G26_MESH_VALIDATION)
     static void G26();
   #endif
 
   #if ENABLED(NOZZLE_PARK_FEATURE)
     static void G27();
   #endif
 
   static void G28(const bool always_home_all);
 
   #if HAS_LEVELING
@@ -446,21 +446,21 @@ private:
   static void M42();
 
   #if ENABLED(PINS_DEBUGGING)
     static void M43();
   #endif
 
   #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
     static void M48();
   #endif
 
-  #if ENABLED(UBL_G26_MESH_VALIDATION)
+  #if ENABLED(G26_MESH_VALIDATION)
     static void M49();
   #endif
 
   #if ENABLED(ULTRA_LCD) && ENABLED(LCD_SET_PROGRESS_MANUALLY)
     static void M73();
   #endif
 
   static void M75();
   static void M76();
   static void M77();

commit c613a1ed3807805ea8f2eaec9389e37774262145
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 22 14:51:42 2017 -0600

    Fix indentation, stepper.h dependency, etc.

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 201c8e973d..24d0d3f078 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -57,21 +57,21 @@
  * G21  - Set input units to millimeters (Requires INCH_MODE_SUPPORT)
  * G26  - Mesh Validation Pattern (Requires UBL_G26_MESH_VALIDATION)
  * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
  * G28  - Home one or more axes
  * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
- * G42  - Coordinated move to a mesh point (Requires HAS_MESH)
+ * G42  - Coordinated move to a mesh point (Requires MESH_BED_LEVELING, AUTO_BED_LEVELING_BLINEAR, or AUTO_BED_LEVELING_UBL)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to clockwise
  * M4   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to counter-clockwise

commit 82f45c3e6ad00a2f8cc60f0a1f7297958c98637f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 7 19:34:34 2017 -0600

    Patch G33 misuse of PROBE_MANUALLY

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index c87a8eddae..201c8e973d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -372,21 +372,21 @@ private:
   #endif
 
   #if HAS_BED_PROBE
     static void G30();
     #if ENABLED(Z_PROBE_SLED)
       static void G31();
       static void G32();
     #endif
   #endif
 
-  #if PROBE_SELECTED && ENABLED(DELTA_AUTO_CALIBRATION)
+  #if ENABLED(DELTA_AUTO_CALIBRATION)
     static void G33();
   #endif
 
   #if ENABLED(G38_PROBE_TARGET)
     static void G38(const bool is_38_2);
   #endif
 
   #if HAS_MESH
     static void G42();
   #endif

commit 1b40e9c46475a9f9c712eba5588c72256f7dd584
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 4 16:36:41 2017 -0500

    Implement CNC_COORDINATE_SYSTEMS

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 90d4c7f6ef..c87a8eddae 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -259,25 +259,33 @@ public:
 
   #if ENABLED(CNC_WORKSPACE_PLANES)
     /**
      * Workspace planes only apply to G2/G3 moves
      * (and "canned cycles" - not a current feature)
      */
     enum WorkspacePlane { PLANE_XY, PLANE_ZX, PLANE_YZ };
     static WorkspacePlane workspace_plane;
   #endif
 
+  #if ENABLED(CNC_COORDINATE_SYSTEMS)
+    #define MAX_COORDINATE_SYSTEMS 9
+    static int8_t active_coordinate_system;
+    static float coordinate_system[MAX_COORDINATE_SYSTEMS][XYZ];
+    static bool select_coordinate_system(const int8_t _new);
+  #endif
+
   static millis_t previous_cmd_ms;
   FORCE_INLINE static void refresh_cmd_timeout() { previous_cmd_ms = millis(); }
 
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();
+  static void process_parsed_command();
   static void process_next_command();
 
   static FORCE_INLINE void home_all_axes() { G28(true); }
 
   /**
    * Multi-stepper support for M92, M201, M203
    */
   #if ENABLED(DISTINCT_E_FACTORS)
     #define GET_TARGET_EXTRUDER() if (gcode.get_target_extruder_from_command()) return
     #define TARGET_EXTRUDER gcode.target_extruder
@@ -376,20 +384,31 @@ private:
   #endif
 
   #if ENABLED(G38_PROBE_TARGET)
     static void G38(const bool is_38_2);
   #endif
 
   #if HAS_MESH
     static void G42();
   #endif
 
+  #if ENABLED(CNC_COORDINATE_SYSTEMS)
+    bool select_coordinate_system(const int8_t _new);
+    static void G53();
+    static void G54();
+    static void G55();
+    static void G56();
+    static void G57();
+    static void G58();
+    static void G59();
+  #endif
+
   static void G92();
 
   #if HAS_RESUME_CONTINUE
     static void M0_M1();
   #endif
 
   #if ENABLED(SPINDLE_LASER_ENABLE)
     static void M3_M4(bool is_M3);
     static void M5();
   #endif

commit bd78ca0ee3c362add556c9cb4ff3b5256c61d019
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 25 15:49:34 2017 -0500

    Add M290 Babystepping

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 61415b0761..90d4c7f6ef 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -162,20 +162,21 @@
  * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
  * M218 - Set a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
  * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
  * M221 - Set Flow Percentage: "M221 S<percent>"
  * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
  * M240 - Trigger a camera to take a photograph. (Requires CHDK or PHOTOGRAPH_PIN)
  * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
  * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
  * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
  * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
+ * M290 - Babystepping (Requires BABYSTEPPING)
  * M300 - Play beep sound S<frequency Hz> P<duration ms>
  * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
  * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
  * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
  * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
  * M350 - Set microstepping mode. (Requires digital microstepping pins.)
  * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
  * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
  * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
  * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
@@ -578,20 +579,24 @@ private:
 
   #if ENABLED(EXPERIMENTAL_I2CBUS)
     static void M260();
     static void M261();
   #endif
 
   #if HAS_SERVOS
     static void M280();
   #endif
 
+  #if ENABLED(BABYSTEPPING)
+    static void M290();
+  #endif
+
   #if HAS_BUZZER
     static void M300();
   #endif
 
   #if ENABLED(PIDTEMP)
     static void M301();
   #endif
 
   #if ENABLED(PREVENT_COLD_EXTRUSION)
     static void M302();

commit ce48403a0bd39870be32a4795e255fcc3cc917c4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 16 01:41:45 2017 -0500

    Add EXTRA_FAN_SPEED feature
    
    Based on #7883 by @studiodyne

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2320f838d2..61415b0761 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -106,22 +106,22 @@
  * M81  - Turn off Power Supply. (Requires POWER_SUPPLY > 0)
  * M82  - Set E codes absolute (default).
  * M83  - Set E codes relative while in Absolute (G90) mode.
  * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
  *        duration after which steppers should turn off. S0 disables the timeout.
  * M85  - Set inactivity shutdown timer with parameter S<seconds>. To disable set zero (default)
  * M92  - Set planner.axis_steps_per_mm for one or more axes.
  * M100 - Watch Free Memory (for debugging) (Requires M100_FREE_MEMORY_WATCHER)
  * M104 - Set extruder target temp.
  * M105 - Report current temperatures.
- * M106 - Fan on.
- * M107 - Fan off.
+ * M106 - Set print fan speed.
+ * M107 - Print fan off.
  * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
  * M109 - Sxxx Wait for extruder current temp to reach target temp. Waits only when heating
  *        Rxxx Wait for extruder current temp to reach target temp. Waits when heating and cooling
  *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
  * M110 - Set the current line number. (Used by host printing)
  * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
  * M112 - Emergency stop.
  * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
  * M114 - Report current position.
  * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)

commit 5c4f3e010786c1a280b7a8d448426de521e369b7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 15 02:15:19 2017 -0500

    Add LCD_SET_PROGRESS_MANUALLY

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 39cc5a79b5..2320f838d2 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -430,20 +430,24 @@ private:
   #endif
 
   #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
     static void M48();
   #endif
 
   #if ENABLED(UBL_G26_MESH_VALIDATION)
     static void M49();
   #endif
 
+  #if ENABLED(ULTRA_LCD) && ENABLED(LCD_SET_PROGRESS_MANUALLY)
+    static void M73();
+  #endif
+
   static void M75();
   static void M76();
   static void M77();
 
   #if ENABLED(PRINTCOUNTER)
     static void M78();
   #endif
 
   #if HAS_POWER_SWITCH
     static void M80();

commit a11e6a1022b8f70be237fad82a9b6ba22b2db7b1
Author: Slawomir Ciunczyk <s.ciunczyk@moye.eu>
Date:   Thu Oct 5 13:45:36 2017 +0200

    Different NEOPIXEL types
    
    Same as #7728 but for 2.0.x,
    Lot of cleanup and remove references in whole code to other "LED files" than leds.h. Now will be much easier to add next drivers/libraries. e.g. FastLED. But bad news, currently FastLED is suporting only RGB devices (no RGBW)

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 48f3bff5be..39cc5a79b5 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -131,21 +131,21 @@
  * M120 - Enable endstops detection.
  * M121 - Disable endstops detection.
  * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
  * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
  * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
  * M128 - EtoP Open. (Requires BARICUDA)
  * M129 - EtoP Closed. (Requires BARICUDA)
  * M140 - Set bed target temp. S<temp>
  * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
  * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
- * M150 - Set Status LED Color as R<red> U<green> B<blue>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, or PCA9632)
+ * M150 - Set Status LED Color as R<red> U<green> B<blue> P<bright>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, NEOPIXEL_LED, or PCA9632).
  * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
  * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
  * M164 - Save the mix as a virtual extruder. (Requires MIXING_EXTRUDER and MIXING_VIRTUAL_TOOLS)
  * M165 - Set the proportions for a mixing extruder. Use parameters ABCDHI to set the mixing factors. (Requires MIXING_EXTRUDER)
  * M190 - Sxxx Wait for bed current temp to reach target temp. ** Waits only when heating! **
  *        Rxxx Wait for bed current temp to reach target temp. ** Waits for heating or cooling. **
  * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
  * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
  * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
  * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.

commit 1587962547910eb21362cac32f3f644d79a46656
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 23 18:09:14 2017 -0500

    Combine G-code files into fewer units
    
    Addressing #7707

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 4bf97f79c8..48f3bff5be 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -699,27 +699,28 @@ private:
     static void M911();
     static void M912();
     #if ENABLED(HYBRID_THRESHOLD)
       static void M913();
     #endif
     #if ENABLED(SENSORLESS_HOMING)
       static void M914();
     #endif
   #endif
 
-  static void M907();
-
-  #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
-    static void M908();
-    #if ENABLED(DAC_STEPPER_CURRENT)
-      static void M909();
-      static void M910();
+  #if HAS_DIGIPOTSS || HAS_MOTOR_CURRENT_PWM || ENABLED(DIGIPOT_I2C) || ENABLED(DAC_STEPPER_CURRENT)
+    static void M907();
+    #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
+      static void M908();
+      #if ENABLED(DAC_STEPPER_CURRENT)
+        static void M909();
+        static void M910();
+      #endif
     #endif
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M928();
   #endif
 
   static void M999();
 
   static void T(const uint8_t tmp_extruder);

commit 07cf75883f125d569cb2013594a7519074eb34e4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 18 01:05:44 2017 -0500

    Move T (tool change) to cpp

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index f74ccef26f..4bf97f79c8 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -715,17 +715,17 @@ private:
       static void M910();
     #endif
   #endif
 
   #if ENABLED(SDSUPPORT)
     static void M928();
   #endif
 
   static void M999();
 
-  static void T(uint8_t tmp_extruder);
+  static void T(const uint8_t tmp_extruder);
 
 };
 
 extern GcodeSuite gcode;
 
 #endif // _GCODE_H_

commit 7479ff98b7e3c95b4a90176fe62397f77e1a9552
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 22:13:32 2017 -0500

    Move M140, M190 to cpp

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 26ff734429..f74ccef26f 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -495,22 +495,23 @@ private:
     #if HAS_HEATER_1
       static void M126();
       static void M127();
     #endif
     #if HAS_HEATER_2
       static void M128();
       static void M129();
     #endif
   #endif
 
-  #if HAS_TEMP_BED
+  #if HAS_HEATER_BED && HAS_TEMP_BED
     static void M140();
+    static void M190();
   #endif
 
   #if ENABLED(ULTIPANEL)
     static void M145();
   #endif
 
   #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
     static void M149();
   #endif
 
@@ -525,24 +526,20 @@ private:
   #if ENABLED(MIXING_EXTRUDER)
     static void M163();
     #if MIXING_VIRTUAL_TOOLS > 1
       static void M164();
     #endif
     #if ENABLED(DIRECT_MIXING_IN_G1)
       static void M165();
     #endif
   #endif
 
-  #if HAS_TEMP_BED
-    static void M190();
-  #endif
-
   static void M200();
   static void M201();
 
   #if 0
     static void M202(); // Not used for Sprinter/grbl gen6
   #endif
 
   static void M203();
   static void M204();
   static void M205();

commit 5b3e49babdcf8f90c7f6d2ed1bc4e61d11db9d75
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 13:24:32 2017 -0500

    Move M108, M112, M410 to cpp

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 6a25d46d25..26ff734429 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -459,31 +459,29 @@ private:
     static void M100();
   #endif
 
   static void M104();
   static void M105();
   static void M106();
   static void M107();
 
   #if DISABLED(EMERGENCY_PARSER)
     static void M108();
+    static void M112();
+    static void M410();
   #endif
 
   static void M109();
 
   static void M110();
   static void M111();
 
-  #if DISABLED(EMERGENCY_PARSER)
-    static void M112();
-  #endif
-
   #if ENABLED(HOST_KEEPALIVE_FEATURE)
     static void M113();
   #endif
 
   static void M114();
   static void M115();
   static void M117();
   static void M118();
   static void M119();
   static void M120();
@@ -631,24 +629,20 @@ private:
     static void M402();
   #endif
 
   #if ENABLED(FILAMENT_WIDTH_SENSOR)
     static void M404();
     static void M405();
     static void M406();
     static void M407();
   #endif
 
-  #if DISABLED(EMERGENCY_PARSER)
-    static void M410();
-  #endif
-
   #if HAS_LEVELING
     static void M420();
     static void M421();
   #endif
 
   #if HAS_M206_COMMAND
     static void M428();
   #endif
 
   static void M500();

commit 931aa79d855ea20fff61fb2213782e11d487cd53
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 00:04:21 2017 -0500

    Move G42 to cpp

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 66cd59232d..6a25d46d25 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -57,21 +57,21 @@
  * G21  - Set input units to millimeters (Requires INCH_MODE_SUPPORT)
  * G26  - Mesh Validation Pattern (Requires UBL_G26_MESH_VALIDATION)
  * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
  * G28  - Home one or more axes
  * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
  * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
  * G31  - Dock sled (Z_PROBE_SLED only)
  * G32  - Undock sled (Z_PROBE_SLED only)
  * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
  * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
- * G42  - Coordinated move to a mesh point (Requires AUTO_BED_LEVELING_UBL)
+ * G42  - Coordinated move to a mesh point (Requires HAS_MESH)
  * G90  - Use Absolute Coordinates
  * G91  - Use Relative Coordinates
  * G92  - Set current position to coordinates given
  *
  * "M" Codes
  *
  * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
  * M1   -> M0
  * M3   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to clockwise
  * M4   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to counter-clockwise

commit 84ddae56a8202ba0a9484e914d75e738db754550
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 23:44:29 2017 -0500

    Move G38 to cpp

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 90c1aabb6e..66cd59232d 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -368,21 +368,21 @@ private:
       static void G31();
       static void G32();
     #endif
   #endif
 
   #if PROBE_SELECTED && ENABLED(DELTA_AUTO_CALIBRATION)
     static void G33();
   #endif
 
   #if ENABLED(G38_PROBE_TARGET)
-    static void G38(bool is_38_2);
+    static void G38(const bool is_38_2);
   #endif
 
   #if HAS_MESH
     static void G42();
   #endif
 
   static void G92();
 
   #if HAS_RESUME_CONTINUE
     static void M0_M1();

commit 9b4aa5ea8bb0baf78a3a2959e4f603fe6e9f14e1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 23:08:48 2017 -0500

    Move G17-G19 to cpp

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index eb77b7b553..90c1aabb6e 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -249,20 +249,29 @@
 
 class GcodeSuite {
 public:
 
   GcodeSuite() {}
 
   static uint8_t target_extruder;
 
   static bool axis_relative_modes[];
 
+  #if ENABLED(CNC_WORKSPACE_PLANES)
+    /**
+     * Workspace planes only apply to G2/G3 moves
+     * (and "canned cycles" - not a current feature)
+     */
+    enum WorkspacePlane { PLANE_XY, PLANE_ZX, PLANE_YZ };
+    static WorkspacePlane workspace_plane;
+  #endif
+
   static millis_t previous_cmd_ms;
   FORCE_INLINE static void refresh_cmd_timeout() { previous_cmd_ms = millis(); }
 
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();
   static void process_next_command();
 
   static FORCE_INLINE void home_all_axes() { G28(true); }
 
   /**

commit 760f29a88eeef220fee764065036433222fed7eb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 21:17:34 2017 -0500

    Move G4 to cpp

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 68d8f1e506..eb77b7b553 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -292,21 +292,21 @@ public:
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 
     static void host_keepalive();
 
     #define KEEPALIVE_STATE(n) gcode.busy_state = gcode.n
   #else
     #define KEEPALIVE_STATE(n) NOOP
   #endif
 
-  void dwell(millis_t time);
+  static void dwell(millis_t time);
 
 private:
 
   static void G0_G1(
     #if IS_SCARA
       bool fast_move=false
     #endif
   );
 
   #if ENABLED(ARC_SUPPORT)

commit 4007cbfe9e1316b23e594281f520ac49e36f2561
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 20:57:52 2017 -0500

    Move G2_G3 to cpp

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index dd44e42a85..68d8f1e506 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -303,21 +303,21 @@ public:
 
 private:
 
   static void G0_G1(
     #if IS_SCARA
       bool fast_move=false
     #endif
   );
 
   #if ENABLED(ARC_SUPPORT)
-    static void G2_G3(bool clockwise);
+    static void G2_G3(const bool clockwise);
   #endif
 
   static void G4();
 
   #if ENABLED(BEZIER_CURVE_SUPPORT)
     static void G5();
   #endif
 
   #if ENABLED(FWRETRACT)
     static void G10();

commit 51f195e698e2cbdbb8f1a97213f0c9553e8fc470
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 15 20:44:40 2017 -0500

    Move dwell to gcode

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 1fdd440d8c..dd44e42a85 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -292,20 +292,22 @@ public:
     static MarlinBusyState busy_state;
     static uint8_t host_keepalive_interval;
 
     static void host_keepalive();
 
     #define KEEPALIVE_STATE(n) gcode.busy_state = gcode.n
   #else
     #define KEEPALIVE_STATE(n) NOOP
   #endif
 
+  void dwell(millis_t time);
+
 private:
 
   static void G0_G1(
     #if IS_SCARA
       bool fast_move=false
     #endif
   );
 
   #if ENABLED(ARC_SUPPORT)
     static void G2_G3(bool clockwise);

commit 8dc2838d985cabe3a5e53cf989056084f5674043
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 8 23:49:49 2017 -0500

    Move host keepalive to GcodeSuite

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 2f40b775b9..1fdd440d8c 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -256,32 +256,55 @@ public:
 
   static bool axis_relative_modes[];
 
   static millis_t previous_cmd_ms;
   FORCE_INLINE static void refresh_cmd_timeout() { previous_cmd_ms = millis(); }
 
   static bool get_target_extruder_from_command();
   static void get_destination_from_command();
   static void process_next_command();
 
+  static FORCE_INLINE void home_all_axes() { G28(true); }
+
   /**
    * Multi-stepper support for M92, M201, M203
    */
   #if ENABLED(DISTINCT_E_FACTORS)
     #define GET_TARGET_EXTRUDER() if (gcode.get_target_extruder_from_command()) return
     #define TARGET_EXTRUDER gcode.target_extruder
   #else
     #define GET_TARGET_EXTRUDER() NOOP
     #define TARGET_EXTRUDER 0
   #endif
 
-  static FORCE_INLINE void home_all_axes() { G28(true); }
+  #if ENABLED(HOST_KEEPALIVE_FEATURE)
+    /**
+     * States for managing Marlin and host communication
+     * Marlin sends messages if blocked or busy
+     */
+    enum MarlinBusyState {
+      NOT_BUSY,           // Not in a handler
+      IN_HANDLER,         // Processing a GCode
+      IN_PROCESS,         // Known to be blocking command input (as in G29)
+      PAUSED_FOR_USER,    // Blocking pending any input
+      PAUSED_FOR_INPUT    // Blocking pending text input (concept)
+    };
+
+    static MarlinBusyState busy_state;
+    static uint8_t host_keepalive_interval;
+
+    static void host_keepalive();
+
+    #define KEEPALIVE_STATE(n) gcode.busy_state = gcode.n
+  #else
+    #define KEEPALIVE_STATE(n) NOOP
+  #endif
 
 private:
 
   static void G0_G1(
     #if IS_SCARA
       bool fast_move=false
     #endif
   );
 
   #if ENABLED(ARC_SUPPORT)

commit 722786966ad284a708502d18ac5daad02012bfc8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 7 22:33:16 2017 -0500

    Add gcode.cpp, motion.*, queue.* - Apply to some G-codes.

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
index 90e91898fa..2f40b775b9 100644
--- a/Marlin/src/gcode/gcode.h
+++ b/Marlin/src/gcode/gcode.h
@@ -230,35 +230,59 @@
  * ************ Custom codes - This can change to suit future G-code regulations
  * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
  * M999 - Restart after being stopped by error
  *
  * "T" Codes
  *
  * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
  *
  */
 
-#ifndef GCODE_H
-#define GCODE_H
+#ifndef _GCODE_H_
+#define _GCODE_H_
 
 #include "../inc/MarlinConfig.h"
 #include "parser.h"
 
 #if ENABLED(I2C_POSITION_ENCODERS)
   #include "../feature/I2CPositionEncoder.h"
 #endif
 
 class GcodeSuite {
 public:
 
   GcodeSuite() {}
 
+  static uint8_t target_extruder;
+
+  static bool axis_relative_modes[];
+
+  static millis_t previous_cmd_ms;
+  FORCE_INLINE static void refresh_cmd_timeout() { previous_cmd_ms = millis(); }
+
+  static bool get_target_extruder_from_command();
+  static void get_destination_from_command();
+  static void process_next_command();
+
+  /**
+   * Multi-stepper support for M92, M201, M203
+   */
+  #if ENABLED(DISTINCT_E_FACTORS)
+    #define GET_TARGET_EXTRUDER() if (gcode.get_target_extruder_from_command()) return
+    #define TARGET_EXTRUDER gcode.target_extruder
+  #else
+    #define GET_TARGET_EXTRUDER() NOOP
+    #define TARGET_EXTRUDER 0
+  #endif
+
+  static FORCE_INLINE void home_all_axes() { G28(true); }
+
 private:
 
   static void G0_G1(
     #if IS_SCARA
       bool fast_move=false
     #endif
   );
 
   #if ENABLED(ARC_SUPPORT)
     static void G2_G3(bool clockwise);
@@ -368,21 +392,21 @@ private:
   static void M42();
 
   #if ENABLED(PINS_DEBUGGING)
     static void M43();
   #endif
 
   #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
     static void M48();
   #endif
 
-  #if ENABLED(AUTO_BED_LEVELING_UBL) && ENABLED(UBL_G26_MESH_VALIDATION)
+  #if ENABLED(UBL_G26_MESH_VALIDATION)
     static void M49();
   #endif
 
   static void M75();
   static void M76();
   static void M77();
 
   #if ENABLED(PRINTCOUNTER)
     static void M78();
   #endif
@@ -672,11 +696,11 @@ private:
   #endif
 
   static void M999();
 
   static void T(uint8_t tmp_extruder);
 
 };
 
 extern GcodeSuite gcode;
 
-#endif // GCODE_H
+#endif // _GCODE_H_

commit 4231faf7796ca8adb9ca861b014b65e79f67b376
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:31 2017 -0500

    Initial split-up of G-code handlers by category

diff --git a/Marlin/src/gcode/gcode.h b/Marlin/src/gcode/gcode.h
new file mode 100644
index 0000000000..90e91898fa
--- /dev/null
+++ b/Marlin/src/gcode/gcode.h
@@ -0,0 +1,682 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * gcode.h - Temporary container for all gcode handlers
+ */
+
+/**
+ * -----------------
+ * G-Codes in Marlin
+ * -----------------
+ *
+ * Helpful G-code references:
+ *  - http://linuxcnc.org/handbook/gcode/g-code.html
+ *  - http://objects.reprap.org/wiki/Mendel_User_Manual:_RepRapGCodes
+ *
+ * Help to document Marlin's G-codes online:
+ *  - http://reprap.org/wiki/G-code
+ *  - https://github.com/MarlinFirmware/MarlinDocumentation
+ *
+ * -----------------
+ *
+ * "G" Codes
+ *
+ * G0   -> G1
+ * G1   - Coordinated Movement X Y Z E
+ * G2   - CW ARC
+ * G3   - CCW ARC
+ * G4   - Dwell S<seconds> or P<milliseconds>
+ * G5   - Cubic B-spline with XYZE destination and IJPQ offsets
+ * G10  - Retract filament according to settings of M207 (Requires FWRETRACT)
+ * G11  - Retract recover filament according to settings of M208 (Requires FWRETRACT)
+ * G12  - Clean tool (Requires NOZZLE_CLEAN_FEATURE)
+ * G17  - Select Plane XY (Requires CNC_WORKSPACE_PLANES)
+ * G18  - Select Plane ZX (Requires CNC_WORKSPACE_PLANES)
+ * G19  - Select Plane YZ (Requires CNC_WORKSPACE_PLANES)
+ * G20  - Set input units to inches (Requires INCH_MODE_SUPPORT)
+ * G21  - Set input units to millimeters (Requires INCH_MODE_SUPPORT)
+ * G26  - Mesh Validation Pattern (Requires UBL_G26_MESH_VALIDATION)
+ * G27  - Park Nozzle (Requires NOZZLE_PARK_FEATURE)
+ * G28  - Home one or more axes
+ * G29  - Start or continue the bed leveling probe procedure (Requires bed leveling)
+ * G30  - Single Z probe, probes bed at X Y location (defaults to current XY location)
+ * G31  - Dock sled (Z_PROBE_SLED only)
+ * G32  - Undock sled (Z_PROBE_SLED only)
+ * G33  - Delta Auto-Calibration (Requires DELTA_AUTO_CALIBRATION)
+ * G38  - Probe in any direction using the Z_MIN_PROBE (Requires G38_PROBE_TARGET)
+ * G42  - Coordinated move to a mesh point (Requires AUTO_BED_LEVELING_UBL)
+ * G90  - Use Absolute Coordinates
+ * G91  - Use Relative Coordinates
+ * G92  - Set current position to coordinates given
+ *
+ * "M" Codes
+ *
+ * M0   - Unconditional stop - Wait for user to press a button on the LCD (Only if ULTRA_LCD is enabled)
+ * M1   -> M0
+ * M3   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to clockwise
+ * M4   - Turn laser/spindle on, set spindle/laser speed/power, set rotation to counter-clockwise
+ * M5   - Turn laser/spindle off
+ * M17  - Enable/Power all stepper motors
+ * M18  - Disable all stepper motors; same as M84
+ * M20  - List SD card. (Requires SDSUPPORT)
+ * M21  - Init SD card. (Requires SDSUPPORT)
+ * M22  - Release SD card. (Requires SDSUPPORT)
+ * M23  - Select SD file: "M23 /path/file.gco". (Requires SDSUPPORT)
+ * M24  - Start/resume SD print. (Requires SDSUPPORT)
+ * M25  - Pause SD print. (Requires SDSUPPORT)
+ * M26  - Set SD position in bytes: "M26 S12345". (Requires SDSUPPORT)
+ * M27  - Report SD print status. (Requires SDSUPPORT)
+ * M28  - Start SD write: "M28 /path/file.gco". (Requires SDSUPPORT)
+ * M29  - Stop SD write. (Requires SDSUPPORT)
+ * M30  - Delete file from SD: "M30 /path/file.gco"
+ * M31  - Report time since last M109 or SD card start to serial.
+ * M32  - Select file and start SD print: "M32 [S<bytepos>] !/path/file.gco#". (Requires SDSUPPORT)
+ *        Use P to run other files as sub-programs: "M32 P !filename#"
+ *        The '#' is necessary when calling from within sd files, as it stops buffer prereading
+ * M33  - Get the longname version of a path. (Requires LONG_FILENAME_HOST_SUPPORT)
+ * M34  - Set SD Card sorting options. (Requires SDCARD_SORT_ALPHA)
+ * M42  - Change pin status via gcode: M42 P<pin> S<value>. LED pin assumed if P is omitted.
+ * M43  - Display pin status, watch pins for changes, watch endstops & toggle LED, Z servo probe test, toggle pins
+ * M48  - Measure Z Probe repeatability: M48 P<points> X<pos> Y<pos> V<level> E<engage> L<legs>. (Requires Z_MIN_PROBE_REPEATABILITY_TEST)
+ * M75  - Start the print job timer.
+ * M76  - Pause the print job timer.
+ * M77  - Stop the print job timer.
+ * M78  - Show statistical information about the print jobs. (Requires PRINTCOUNTER)
+ * M80  - Turn on Power Supply. (Requires POWER_SUPPLY > 0)
+ * M81  - Turn off Power Supply. (Requires POWER_SUPPLY > 0)
+ * M82  - Set E codes absolute (default).
+ * M83  - Set E codes relative while in Absolute (G90) mode.
+ * M84  - Disable steppers until next move, or use S<seconds> to specify an idle
+ *        duration after which steppers should turn off. S0 disables the timeout.
+ * M85  - Set inactivity shutdown timer with parameter S<seconds>. To disable set zero (default)
+ * M92  - Set planner.axis_steps_per_mm for one or more axes.
+ * M100 - Watch Free Memory (for debugging) (Requires M100_FREE_MEMORY_WATCHER)
+ * M104 - Set extruder target temp.
+ * M105 - Report current temperatures.
+ * M106 - Fan on.
+ * M107 - Fan off.
+ * M108 - Break out of heating loops (M109, M190, M303). With no controller, breaks out of M0/M1. (Requires EMERGENCY_PARSER)
+ * M109 - Sxxx Wait for extruder current temp to reach target temp. Waits only when heating
+ *        Rxxx Wait for extruder current temp to reach target temp. Waits when heating and cooling
+ *        If AUTOTEMP is enabled, S<mintemp> B<maxtemp> F<factor>. Exit autotemp by any M109 without F
+ * M110 - Set the current line number. (Used by host printing)
+ * M111 - Set debug flags: "M111 S<flagbits>". See flag bits defined in enum.h.
+ * M112 - Emergency stop.
+ * M113 - Get or set the timeout interval for Host Keepalive "busy" messages. (Requires HOST_KEEPALIVE_FEATURE)
+ * M114 - Report current position.
+ * M115 - Report capabilities. (Extended capabilities requires EXTENDED_CAPABILITIES_REPORT)
+ * M117 - Display a message on the controller screen. (Requires an LCD)
+ * M118 - Display a message in the host console.
+ * M119 - Report endstops status.
+ * M120 - Enable endstops detection.
+ * M121 - Disable endstops detection.
+ * M125 - Save current position and move to filament change position. (Requires PARK_HEAD_ON_PAUSE)
+ * M126 - Solenoid Air Valve Open. (Requires BARICUDA)
+ * M127 - Solenoid Air Valve Closed. (Requires BARICUDA)
+ * M128 - EtoP Open. (Requires BARICUDA)
+ * M129 - EtoP Closed. (Requires BARICUDA)
+ * M140 - Set bed target temp. S<temp>
+ * M145 - Set heatup values for materials on the LCD. H<hotend> B<bed> F<fan speed> for S<material> (0=PLA, 1=ABS)
+ * M149 - Set temperature units. (Requires TEMPERATURE_UNITS_SUPPORT)
+ * M150 - Set Status LED Color as R<red> U<green> B<blue>. Values 0-255. (Requires BLINKM, RGB_LED, RGBW_LED, or PCA9632)
+ * M155 - Auto-report temperatures with interval of S<seconds>. (Requires AUTO_REPORT_TEMPERATURES)
+ * M163 - Set a single proportion for a mixing extruder. (Requires MIXING_EXTRUDER)
+ * M164 - Save the mix as a virtual extruder. (Requires MIXING_EXTRUDER and MIXING_VIRTUAL_TOOLS)
+ * M165 - Set the proportions for a mixing extruder. Use parameters ABCDHI to set the mixing factors. (Requires MIXING_EXTRUDER)
+ * M190 - Sxxx Wait for bed current temp to reach target temp. ** Waits only when heating! **
+ *        Rxxx Wait for bed current temp to reach target temp. ** Waits for heating or cooling. **
+ * M200 - Set filament diameter, D<diameter>, setting E axis units to cubic. (Use S0 to revert to linear units.)
+ * M201 - Set max acceleration in units/s^2 for print moves: "M201 X<accel> Y<accel> Z<accel> E<accel>"
+ * M202 - Set max acceleration in units/s^2 for travel moves: "M202 X<accel> Y<accel> Z<accel> E<accel>" ** UNUSED IN MARLIN! **
+ * M203 - Set maximum feedrate: "M203 X<fr> Y<fr> Z<fr> E<fr>" in units/sec.
+ * M204 - Set default acceleration in units/sec^2: P<printing> R<extruder_only> T<travel>
+ * M205 - Set advanced settings. Current units apply:
+            S<print> T<travel> minimum speeds
+            B<minimum segment time>
+            X<max X jerk>, Y<max Y jerk>, Z<max Z jerk>, E<max E jerk>
+ * M206 - Set additional homing offset. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
+ * M207 - Set Retract Length: S<length>, Feedrate: F<units/min>, and Z lift: Z<distance>. (Requires FWRETRACT)
+ * M208 - Set Recover (unretract) Additional (!) Length: S<length> and Feedrate: F<units/min>. (Requires FWRETRACT)
+ * M209 - Turn Automatic Retract Detection on/off: S<0|1> (For slicers that don't support G10/11). (Requires FWRETRACT)
+          Every normal extrude-only move will be classified as retract depending on the direction.
+ * M211 - Enable, Disable, and/or Report software endstops: S<0|1> (Requires MIN_SOFTWARE_ENDSTOPS or MAX_SOFTWARE_ENDSTOPS)
+ * M218 - Set a tool offset: "M218 T<index> X<offset> Y<offset>". (Requires 2 or more extruders)
+ * M220 - Set Feedrate Percentage: "M220 S<percent>" (i.e., "FR" on the LCD)
+ * M221 - Set Flow Percentage: "M221 S<percent>"
+ * M226 - Wait until a pin is in a given state: "M226 P<pin> S<state>"
+ * M240 - Trigger a camera to take a photograph. (Requires CHDK or PHOTOGRAPH_PIN)
+ * M250 - Set LCD contrast: "M250 C<contrast>" (0-63). (Requires LCD support)
+ * M260 - i2c Send Data (Requires EXPERIMENTAL_I2CBUS)
+ * M261 - i2c Request Data (Requires EXPERIMENTAL_I2CBUS)
+ * M280 - Set servo position absolute: "M280 P<index> S<angle|¬µs>". (Requires servos)
+ * M300 - Play beep sound S<frequency Hz> P<duration ms>
+ * M301 - Set PID parameters P I and D. (Requires PIDTEMP)
+ * M302 - Allow cold extrudes, or set the minimum extrude S<temperature>. (Requires PREVENT_COLD_EXTRUSION)
+ * M303 - PID relay autotune S<temperature> sets the target temperature. Default 150C. (Requires PIDTEMP)
+ * M304 - Set bed PID parameters P I and D. (Requires PIDTEMPBED)
+ * M350 - Set microstepping mode. (Requires digital microstepping pins.)
+ * M351 - Toggle MS1 MS2 pins directly. (Requires digital microstepping pins.)
+ * M355 - Set Case Light on/off and set brightness. (Requires CASE_LIGHT_PIN)
+ * M380 - Activate solenoid on active extruder. (Requires EXT_SOLENOID)
+ * M381 - Disable all solenoids. (Requires EXT_SOLENOID)
+ * M400 - Finish all moves.
+ * M401 - Lower Z probe. (Requires a probe)
+ * M402 - Raise Z probe. (Requires a probe)
+ * M404 - Display or set the Nominal Filament Width: "W<diameter>". (Requires FILAMENT_WIDTH_SENSOR)
+ * M405 - Enable Filament Sensor flow control. "M405 D<delay_cm>". (Requires FILAMENT_WIDTH_SENSOR)
+ * M406 - Disable Filament Sensor flow control. (Requires FILAMENT_WIDTH_SENSOR)
+ * M407 - Display measured filament diameter in millimeters. (Requires FILAMENT_WIDTH_SENSOR)
+ * M410 - Quickstop. Abort all planned moves.
+ * M420 - Enable/Disable Leveling (with current values) S1=enable S0=disable (Requires MESH_BED_LEVELING or ABL)
+ * M421 - Set a single Z coordinate in the Mesh Leveling grid. X<units> Y<units> Z<units> (Requires MESH_BED_LEVELING or AUTO_BED_LEVELING_UBL)
+ * M428 - Set the home_offset based on the current_position. Nearest edge applies. (Disabled by NO_WORKSPACE_OFFSETS or DELTA)
+ * M500 - Store parameters in EEPROM. (Requires EEPROM_SETTINGS)
+ * M501 - Restore parameters from EEPROM. (Requires EEPROM_SETTINGS)
+ * M502 - Revert to the default "factory settings". ** Does not write them to EEPROM! **
+ * M503 - Print the current settings (in memory): "M503 S<verbose>". S0 specifies compact output.
+ * M540 - Enable/disable SD card abort on endstop hit: "M540 S<state>". (Requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
+ * M600 - Pause for filament change: "M600 X<pos> Y<pos> Z<raise> E<first_retract> L<later_retract>". (Requires ADVANCED_PAUSE_FEATURE)
+ * M665 - Set delta configurations: "M665 L<diagonal rod> R<delta radius> S<segments/s> A<rod A trim mm> B<rod B trim mm> C<rod C trim mm> I<tower A trim angle> J<tower B trim angle> K<tower C trim angle>" (Requires DELTA)
+ * M666 - Set delta endstop adjustment. (Requires DELTA)
+ * M605 - Set dual x-carriage movement mode: "M605 S<mode> [X<x_offset>] [R<temp_offset>]". (Requires DUAL_X_CARRIAGE)
+ * M851 - Set Z probe's Z offset in current units. (Negative = below the nozzle.)
+ * M860 - Report the position of position encoder modules.
+ * M861 - Report the status of position encoder modules.
+ * M862 - Perform an axis continuity test for position encoder modules.
+ * M863 - Perform steps-per-mm calibration for position encoder modules.
+ * M864 - Change position encoder module I2C address.
+ * M865 - Check position encoder module firmware version.
+ * M866 - Report or reset position encoder module error count.
+ * M867 - Enable/disable or toggle error correction for position encoder modules.
+ * M868 - Report or set position encoder module error correction threshold.
+ * M869 - Report position encoder module error.
+ * M900 - Get and/or Set advance K factor and WH/D ratio. (Requires LIN_ADVANCE)
+ * M906 - Set or get motor current in milliamps using axis codes X, Y, Z, E. Report values if no axis codes given. (Requires HAVE_TMC2130)
+ * M907 - Set digital trimpot motor current using axis codes. (Requires a board with digital trimpots)
+ * M908 - Control digital trimpot directly. (Requires DAC_STEPPER_CURRENT or DIGIPOTSS_PIN)
+ * M909 - Print digipot/DAC current value. (Requires DAC_STEPPER_CURRENT)
+ * M910 - Commit digipot/DAC value to external EEPROM via I2C. (Requires DAC_STEPPER_CURRENT)
+ * M911 - Report stepper driver overtemperature pre-warn condition. (Requires HAVE_TMC2130)
+ * M912 - Clear stepper driver overtemperature pre-warn condition flag. (Requires HAVE_TMC2130)
+ * M913 - Set HYBRID_THRESHOLD speed. (Requires HYBRID_THRESHOLD)
+ * M914 - Set SENSORLESS_HOMING sensitivity. (Requires SENSORLESS_HOMING)
+ *
+ * M360 - SCARA calibration: Move to cal-position ThetaA (0 deg calibration)
+ * M361 - SCARA calibration: Move to cal-position ThetaB (90 deg calibration - steps per degree)
+ * M362 - SCARA calibration: Move to cal-position PsiA (0 deg calibration)
+ * M363 - SCARA calibration: Move to cal-position PsiB (90 deg calibration - steps per degree)
+ * M364 - SCARA calibration: Move to cal-position PSIC (90 deg to Theta calibration position)
+ *
+ * ************ Custom codes - This can change to suit future G-code regulations
+ * M928 - Start SD logging: "M928 filename.gco". Stop with M29. (Requires SDSUPPORT)
+ * M999 - Restart after being stopped by error
+ *
+ * "T" Codes
+ *
+ * T0-T3 - Select an extruder (tool) by index: "T<n> F<units/min>"
+ *
+ */
+
+#ifndef GCODE_H
+#define GCODE_H
+
+#include "../inc/MarlinConfig.h"
+#include "parser.h"
+
+#if ENABLED(I2C_POSITION_ENCODERS)
+  #include "../feature/I2CPositionEncoder.h"
+#endif
+
+class GcodeSuite {
+public:
+
+  GcodeSuite() {}
+
+private:
+
+  static void G0_G1(
+    #if IS_SCARA
+      bool fast_move=false
+    #endif
+  );
+
+  #if ENABLED(ARC_SUPPORT)
+    static void G2_G3(bool clockwise);
+  #endif
+
+  static void G4();
+
+  #if ENABLED(BEZIER_CURVE_SUPPORT)
+    static void G5();
+  #endif
+
+  #if ENABLED(FWRETRACT)
+    static void G10();
+    static void G11();
+  #endif
+
+  #if ENABLED(NOZZLE_CLEAN_FEATURE)
+    static void G12();
+  #endif
+
+  #if ENABLED(CNC_WORKSPACE_PLANES)
+    static void G17();
+    static void G18();
+    static void G19();
+  #endif
+
+  #if ENABLED(INCH_MODE_SUPPORT)
+    static void G20();
+    static void G21();
+  #endif
+
+  #if ENABLED(UBL_G26_MESH_VALIDATION)
+    static void G26();
+  #endif
+
+  #if ENABLED(NOZZLE_PARK_FEATURE)
+    static void G27();
+  #endif
+
+  static void G28(const bool always_home_all);
+
+  #if HAS_LEVELING
+    static void G29();
+  #endif
+
+  #if HAS_BED_PROBE
+    static void G30();
+    #if ENABLED(Z_PROBE_SLED)
+      static void G31();
+      static void G32();
+    #endif
+  #endif
+
+  #if PROBE_SELECTED && ENABLED(DELTA_AUTO_CALIBRATION)
+    static void G33();
+  #endif
+
+  #if ENABLED(G38_PROBE_TARGET)
+    static void G38(bool is_38_2);
+  #endif
+
+  #if HAS_MESH
+    static void G42();
+  #endif
+
+  static void G92();
+
+  #if HAS_RESUME_CONTINUE
+    static void M0_M1();
+  #endif
+
+  #if ENABLED(SPINDLE_LASER_ENABLE)
+    static void M3_M4(bool is_M3);
+    static void M5();
+  #endif
+
+  static void M17();
+
+  static void M18_M84();
+
+  #if ENABLED(SDSUPPORT)
+    static void M20();
+    static void M21();
+    static void M22();
+    static void M23();
+    static void M24();
+    static void M25();
+    static void M26();
+    static void M27();
+    static void M28();
+    static void M29();
+    static void M30();
+  #endif
+
+  static void M31();
+
+  #if ENABLED(SDSUPPORT)
+    static void M32();
+    #if ENABLED(LONG_FILENAME_HOST_SUPPORT)
+      static void M33();
+    #endif
+    #if ENABLED(SDCARD_SORT_ALPHA) && ENABLED(SDSORT_GCODE)
+      static void M34();
+    #endif
+  #endif
+
+  static void M42();
+
+  #if ENABLED(PINS_DEBUGGING)
+    static void M43();
+  #endif
+
+  #if ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST)
+    static void M48();
+  #endif
+
+  #if ENABLED(AUTO_BED_LEVELING_UBL) && ENABLED(UBL_G26_MESH_VALIDATION)
+    static void M49();
+  #endif
+
+  static void M75();
+  static void M76();
+  static void M77();
+
+  #if ENABLED(PRINTCOUNTER)
+    static void M78();
+  #endif
+
+  #if HAS_POWER_SWITCH
+    static void M80();
+  #endif
+
+  static void M81();
+  static void M82();
+  static void M83();
+  static void M85();
+  static void M92();
+
+  #if ENABLED(M100_FREE_MEMORY_WATCHER)
+    static void M100();
+  #endif
+
+  static void M104();
+  static void M105();
+  static void M106();
+  static void M107();
+
+  #if DISABLED(EMERGENCY_PARSER)
+    static void M108();
+  #endif
+
+  static void M109();
+
+  static void M110();
+  static void M111();
+
+  #if DISABLED(EMERGENCY_PARSER)
+    static void M112();
+  #endif
+
+  #if ENABLED(HOST_KEEPALIVE_FEATURE)
+    static void M113();
+  #endif
+
+  static void M114();
+  static void M115();
+  static void M117();
+  static void M118();
+  static void M119();
+  static void M120();
+  static void M121();
+
+  #if ENABLED(PARK_HEAD_ON_PAUSE)
+    static void M125();
+  #endif
+
+  #if ENABLED(BARICUDA)
+    #if HAS_HEATER_1
+      static void M126();
+      static void M127();
+    #endif
+    #if HAS_HEATER_2
+      static void M128();
+      static void M129();
+    #endif
+  #endif
+
+  #if HAS_TEMP_BED
+    static void M140();
+  #endif
+
+  #if ENABLED(ULTIPANEL)
+    static void M145();
+  #endif
+
+  #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
+    static void M149();
+  #endif
+
+  #if HAS_COLOR_LEDS
+    static void M150();
+  #endif
+
+  #if ENABLED(AUTO_REPORT_TEMPERATURES) && (HAS_TEMP_HOTEND || HAS_TEMP_BED)
+    static void M155();
+  #endif
+
+  #if ENABLED(MIXING_EXTRUDER)
+    static void M163();
+    #if MIXING_VIRTUAL_TOOLS > 1
+      static void M164();
+    #endif
+    #if ENABLED(DIRECT_MIXING_IN_G1)
+      static void M165();
+    #endif
+  #endif
+
+  #if HAS_TEMP_BED
+    static void M190();
+  #endif
+
+  static void M200();
+  static void M201();
+
+  #if 0
+    static void M202(); // Not used for Sprinter/grbl gen6
+  #endif
+
+  static void M203();
+  static void M204();
+  static void M205();
+
+  #if HAS_M206_COMMAND
+    static void M206();
+  #endif
+
+  #if ENABLED(FWRETRACT)
+    static void M207();
+    static void M208();
+    static void M209();
+  #endif
+
+  static void M211();
+
+  #if HOTENDS > 1
+    static void M218();
+  #endif
+
+  static void M220();
+  static void M221();
+  static void M226();
+
+  #if defined(CHDK) || HAS_PHOTOGRAPH
+    static void M240();
+  #endif
+
+  #if HAS_LCD_CONTRAST
+    static void M250();
+  #endif
+
+  #if ENABLED(EXPERIMENTAL_I2CBUS)
+    static void M260();
+    static void M261();
+  #endif
+
+  #if HAS_SERVOS
+    static void M280();
+  #endif
+
+  #if HAS_BUZZER
+    static void M300();
+  #endif
+
+  #if ENABLED(PIDTEMP)
+    static void M301();
+  #endif
+
+  #if ENABLED(PREVENT_COLD_EXTRUSION)
+    static void M302();
+  #endif
+
+  static void M303();
+
+  #if ENABLED(PIDTEMPBED)
+    static void M304();
+  #endif
+
+  #if HAS_MICROSTEPS
+    static void M350();
+    static void M351();
+  #endif
+
+  static void M355();
+
+  #if ENABLED(MORGAN_SCARA)
+    static bool M360();
+    static bool M361();
+    static bool M362();
+    static bool M363();
+    static bool M364();
+  #endif
+
+  #if ENABLED(EXT_SOLENOID)
+    static void M380();
+    static void M381();
+  #endif
+
+  static void M400();
+
+  #if HAS_BED_PROBE
+    static void M401();
+    static void M402();
+  #endif
+
+  #if ENABLED(FILAMENT_WIDTH_SENSOR)
+    static void M404();
+    static void M405();
+    static void M406();
+    static void M407();
+  #endif
+
+  #if DISABLED(EMERGENCY_PARSER)
+    static void M410();
+  #endif
+
+  #if HAS_LEVELING
+    static void M420();
+    static void M421();
+  #endif
+
+  #if HAS_M206_COMMAND
+    static void M428();
+  #endif
+
+  static void M500();
+  static void M501();
+  static void M502();
+  #if DISABLED(DISABLE_M503)
+    static void M503();
+  #endif
+
+  #if ENABLED(ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
+    static void M540();
+  #endif
+
+  #if ENABLED(ADVANCED_PAUSE_FEATURE)
+    static void M600();
+  #endif
+
+  #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(DUAL_NOZZLE_DUPLICATION_MODE)
+    static void M605();
+  #endif
+
+  #if IS_KINEMATIC
+    static void M665();
+  #endif
+
+  #if ENABLED(DELTA) || ENABLED(Z_DUAL_ENDSTOPS)
+    static void M666();
+  #endif
+
+  #if ENABLED(MK2_MULTIPLEXER)
+    static void M702();
+  #endif
+
+  #if HAS_BED_PROBE
+    static void M851();
+  #endif
+
+  #if ENABLED(I2C_POSITION_ENCODERS)
+    FORCE_INLINE static void M860() { I2CPEM.M860(); }
+    FORCE_INLINE static void M861() { I2CPEM.M861(); }
+    FORCE_INLINE static void M862() { I2CPEM.M862(); }
+    FORCE_INLINE static void M863() { I2CPEM.M863(); }
+    FORCE_INLINE static void M864() { I2CPEM.M864(); }
+    FORCE_INLINE static void M865() { I2CPEM.M865(); }
+    FORCE_INLINE static void M866() { I2CPEM.M866(); }
+    FORCE_INLINE static void M867() { I2CPEM.M867(); }
+    FORCE_INLINE static void M868() { I2CPEM.M868(); }
+    FORCE_INLINE static void M869() { I2CPEM.M869(); }
+  #endif
+
+  #if ENABLED(LIN_ADVANCE)
+    static void M900();
+  #endif
+
+  #if ENABLED(HAVE_TMC2130)
+    static void M906();
+    static void M911();
+    static void M912();
+    #if ENABLED(HYBRID_THRESHOLD)
+      static void M913();
+    #endif
+    #if ENABLED(SENSORLESS_HOMING)
+      static void M914();
+    #endif
+  #endif
+
+  static void M907();
+
+  #if HAS_DIGIPOTSS || ENABLED(DAC_STEPPER_CURRENT)
+    static void M908();
+    #if ENABLED(DAC_STEPPER_CURRENT)
+      static void M909();
+      static void M910();
+    #endif
+  #endif
+
+  #if ENABLED(SDSUPPORT)
+    static void M928();
+  #endif
+
+  static void M999();
+
+  static void T(uint8_t tmp_extruder);
+
+};
+
+extern GcodeSuite gcode;
+
+#endif // GCODE_H
