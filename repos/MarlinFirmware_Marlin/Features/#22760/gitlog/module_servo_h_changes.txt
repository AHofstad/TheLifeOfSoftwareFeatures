commit f6ecdae972c1e54f52daec5c63252281962da5b9
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Jan 10 10:19:47 2024 +1300

    üîß Base NUM_SERVO_PLUGS on SERVO PINS (#26640)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 40cfcee3c6..0286fe905b 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -100,20 +100,23 @@
   constexpr uint16_t CONST_SERVO_ANGLES [NUM_SERVOS][2] = {
       { ASRC(0,0), ASRC(0,1) }
     #if NUM_SERVOS > 1
       , { ASRC(1,0), ASRC(1,1) }
       #if NUM_SERVOS > 2
         , { ASRC(2,0), ASRC(2,1) }
         #if NUM_SERVOS > 3
           , { ASRC(3,0), ASRC(3,1) }
           #if NUM_SERVOS > 4
             , { ASRC(4,0), ASRC(4,1) }
+            #if NUM_SERVOS > 5
+              , { ASRC(5,0), ASRC(5,1) }
+            #endif
           #endif
         #endif
       #endif
     #endif
   };
 
   #if HAS_Z_SERVO_PROBE
     #define DEPLOY_Z_SERVO() servo[Z_PROBE_SERVO_NR].move(servo_angles[Z_PROBE_SERVO_NR][0])
     #define STOW_Z_SERVO() servo[Z_PROBE_SERVO_NR].move(servo_angles[Z_PROBE_SERVO_NR][1])
   #endif

commit 047bce0cdd8599d3ea9b85d173f8d79a0802adf1
Author: Dipl.-Ing. Raoul Rubien, BSc <rubienr@sbox.tugraz.at>
Date:   Mon Oct 9 02:22:40 2023 +0200

    üîß More angles for 2x Servo Switching Nozzle (#26303)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 2ed992aa03..40cfcee3c6 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -37,22 +37,27 @@
     #else
       #define REQ_ANGLES 2
     #endif
     constexpr uint16_t sase[] = SWITCHING_EXTRUDER_SERVO_ANGLES;
     static_assert(COUNT(sase) == REQ_ANGLES, "SWITCHING_EXTRUDER_SERVO_ANGLES needs " STRINGIFY(REQ_ANGLES) " angles.");
   #else
     constexpr uint16_t sase[4] = { 0 };
   #endif
 
   #if ENABLED(SWITCHING_NOZZLE)
-    constexpr uint16_t sasn[] = SWITCHING_NOZZLE_SERVO_ANGLES;
-    static_assert(COUNT(sasn) == 2, "SWITCHING_NOZZLE_SERVO_ANGLES needs 2 angles.");
+    #if SWITCHING_NOZZLE_TWO_SERVOS
+      constexpr uint16_t sasn[][2] = SWITCHING_NOZZLE_SERVO_ANGLES;
+      static_assert(COUNT(sasn) == 2, "SWITCHING_NOZZLE_SERVO_ANGLES (with SWITCHING_NOZZLE_E1_SERVO_NR) needs 2 sets of angles: { { lower, raise }, { lower, raise } }.");
+    #else
+      constexpr uint16_t sasn[] = SWITCHING_NOZZLE_SERVO_ANGLES;
+      static_assert(COUNT(sasn) == 2, "SWITCHING_NOZZLE_SERVO_ANGLES needs two angles: { E0, E1 }.");
+    #endif
   #else
     constexpr uint16_t sasn[2] = { 0 };
   #endif
 
   #ifdef Z_PROBE_SERVO_NR
     #if ENABLED(BLTOUCH)
       #include "../feature/bltouch.h"
       #undef Z_SERVO_ANGLES
       #define Z_SERVO_ANGLES { BLTOUCH_DEPLOY, BLTOUCH_STOW }
     #endif
@@ -68,42 +73,48 @@
   #ifndef SWITCHING_EXTRUDER_E23_SERVO_NR
     #define SWITCHING_EXTRUDER_E23_SERVO_NR -1
   #endif
   #ifndef SWITCHING_NOZZLE_SERVO_NR
     #define SWITCHING_NOZZLE_SERVO_NR -1
   #endif
   #ifndef Z_PROBE_SERVO_NR
     #define Z_PROBE_SERVO_NR -1
   #endif
 
-  #define ASRC(N,I) (                                  \
-      N == SWITCHING_EXTRUDER_SERVO_NR     ? sase[I]   \
-    : N == SWITCHING_EXTRUDER_E23_SERVO_NR ? sase[I+2] \
-    : N == SWITCHING_NOZZLE_SERVO_NR       ? sasn[I]   \
-    : N == Z_PROBE_SERVO_NR                ? sazp[I]   \
-    : 0                                                )
+  #define SASN(J,I) TERN(SWITCHING_NOZZLE_TWO_SERVOS, sasn[J][I], sasn[I])
+
+  #define ASRC(N,I) ( \
+                                         N == SWITCHING_EXTRUDER_SERVO_NR     ? sase[I]     \
+                                       : N == SWITCHING_EXTRUDER_E23_SERVO_NR ? sase[I+2]   \
+                                       : N == SWITCHING_NOZZLE_SERVO_NR       ? SASN(0,I)   \
+    TERN_(SWITCHING_NOZZLE_TWO_SERVOS, : N == SWITCHING_NOZZLE_E1_SERVO_NR    ? SASN(1,I))  \
+                                       : N == Z_PROBE_SERVO_NR                ? sazp[I]     \
+                                       : 0                                                  )
 
   #if ENABLED(EDITABLE_SERVO_ANGLES)
     extern uint16_t servo_angles[NUM_SERVOS][2];
     #define CONST_SERVO_ANGLES base_servo_angles
   #else
     #define CONST_SERVO_ANGLES servo_angles
   #endif
 
   constexpr uint16_t CONST_SERVO_ANGLES [NUM_SERVOS][2] = {
       { ASRC(0,0), ASRC(0,1) }
     #if NUM_SERVOS > 1
       , { ASRC(1,0), ASRC(1,1) }
       #if NUM_SERVOS > 2
         , { ASRC(2,0), ASRC(2,1) }
         #if NUM_SERVOS > 3
           , { ASRC(3,0), ASRC(3,1) }
+          #if NUM_SERVOS > 4
+            , { ASRC(4,0), ASRC(4,1) }
+          #endif
         #endif
       #endif
     #endif
   };
 
   #if HAS_Z_SERVO_PROBE
     #define DEPLOY_Z_SERVO() servo[Z_PROBE_SERVO_NR].move(servo_angles[Z_PROBE_SERVO_NR][0])
     #define STOW_Z_SERVO() servo[Z_PROBE_SERVO_NR].move(servo_angles[Z_PROBE_SERVO_NR][1])
   #endif
 

commit e4e6abe5af0f97ff5cb0c9334cb298d3584968e3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 9 00:51:08 2022 -0500

    üßë‚Äçüíª Remove servo macros

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index cd55a317a2..2ed992aa03 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -96,21 +96,18 @@
       #if NUM_SERVOS > 2
         , { ASRC(2,0), ASRC(2,1) }
         #if NUM_SERVOS > 3
           , { ASRC(3,0), ASRC(3,1) }
         #endif
       #endif
     #endif
   };
 
   #if HAS_Z_SERVO_PROBE
-    #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
-    #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
+    #define DEPLOY_Z_SERVO() servo[Z_PROBE_SERVO_NR].move(servo_angles[Z_PROBE_SERVO_NR][0])
+    #define STOW_Z_SERVO() servo[Z_PROBE_SERVO_NR].move(servo_angles[Z_PROBE_SERVO_NR][1])
   #endif
 
 #endif // HAS_SERVO_ANGLES
 
-#define MOVE_SERVO(I, P) servo[I].move(P)
-#define DETACH_SERVO(I) servo[I].detach()
-
 extern hal_servo_t servo[NUM_SERVOS];
 void servo_init();

commit 44eff9a23348dcc117fd1ea9b4b1ef0b54061808
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 17 18:50:31 2022 -0600

    ‚ôªÔ∏è Refactor HAL as singleton (#23357)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 73dbbdddb7..cd55a317a2 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -105,12 +105,12 @@
   #if HAS_Z_SERVO_PROBE
     #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
     #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
   #endif
 
 #endif // HAS_SERVO_ANGLES
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 #define DETACH_SERVO(I) servo[I].detach()
 
-extern HAL_SERVO_LIB servo[NUM_SERVOS];
+extern hal_servo_t servo[NUM_SERVOS];
 void servo_init();

commit 6a8b9274a31d11c396ce1bc44b3a0b872a4606dc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Dec 25 23:15:17 2021 -0600

    ‚è™Ô∏è Refactor still needs work
    
    Reverting #23295

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index cd55a317a2..73dbbdddb7 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -105,12 +105,12 @@
   #if HAS_Z_SERVO_PROBE
     #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
     #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
   #endif
 
 #endif // HAS_SERVO_ANGLES
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 #define DETACH_SERVO(I) servo[I].detach()
 
-extern hal_servo_t servo[NUM_SERVOS];
+extern HAL_SERVO_LIB servo[NUM_SERVOS];
 void servo_init();

commit e211ff148c39bf5dace72de7cffbb83f19d3f1bf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Dec 24 21:33:59 2021 -0600

    ‚ôªÔ∏è Refactor HAL as singleton (#23295)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 73dbbdddb7..cd55a317a2 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -105,12 +105,12 @@
   #if HAS_Z_SERVO_PROBE
     #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
     #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
   #endif
 
 #endif // HAS_SERVO_ANGLES
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 #define DETACH_SERVO(I) servo[I].detach()
 
-extern HAL_SERVO_LIB servo[NUM_SERVOS];
+extern hal_servo_t servo[NUM_SERVOS];
 void servo_init();

commit 21e8f99500554d69cb91ac2be0b4ab1497bf9fac
Author: Dakkaron <dak1st@gmx.at>
Date:   Wed Sep 15 02:00:48 2021 +0200

    ‚ú® M282 - Detach Servo (#22760)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 3b5a5e7e2c..73dbbdddb7 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -103,13 +103,14 @@
   };
 
   #if HAS_Z_SERVO_PROBE
     #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
     #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
   #endif
 
 #endif // HAS_SERVO_ANGLES
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
+#define DETACH_SERVO(I) servo[I].detach()
 
 extern HAL_SERVO_LIB servo[NUM_SERVOS];
 void servo_init();

commit c2b72c0e73a59c7b0915253c775eb6253032f0b0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 2 14:22:43 2021 -0500

    Remove extraneous 'extern' hints (#21516)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 29bd3b8798..3b5a5e7e2c 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -105,11 +105,11 @@
   #if HAS_Z_SERVO_PROBE
     #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
     #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
   #endif
 
 #endif // HAS_SERVO_ANGLES
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 
 extern HAL_SERVO_LIB servo[NUM_SERVOS];
-extern void servo_init();
+void servo_init();

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 335ce698e0..29bd3b8798 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
  * module/servo.h
  */
 
 #include "../inc/MarlinConfig.h"
 #include "../HAL/shared/servo.h"

commit 0a7e7a6fa59172f61d3d6ed94d9ccf055c85bf27
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 26 06:26:54 2020 -0600

    Allow servo features in combination (#16960)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 5f9291e97d..335ce698e0 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -24,60 +24,79 @@
 /**
  * module/servo.h
  */
 
 #include "../inc/MarlinConfig.h"
 #include "../HAL/shared/servo.h"
 
 #if HAS_SERVO_ANGLES
 
   #if ENABLED(SWITCHING_EXTRUDER)
-    #ifndef SWITCHING_EXTRUDER_E23_SERVO_NR
-      #define SWITCHING_EXTRUDER_E23_SERVO_NR -1
-    #endif
+    // Switching extruder can have 2 or 4 angles
     #if EXTRUDERS > 3
       #define REQ_ANGLES 4
     #else
       #define REQ_ANGLES 2
     #endif
-    #define SADATA    SWITCHING_EXTRUDER_SERVO_ANGLES
-    #define ASRC(N,E) (SWITCHING_EXTRUDER_SERVO_NR == N ? asrc[E] : SWITCHING_EXTRUDER_E23_SERVO_NR == N ? asrc[E+2] : 0)
-  #elif ENABLED(SWITCHING_NOZZLE)
-    #define SADATA    SWITCHING_NOZZLE_SERVO_ANGLES
-    #define ASRC(N,E) (SWITCHING_NOZZLE_SERVO_NR == N ? asrc[E] : 0)
-  #elif defined(Z_PROBE_SERVO_NR)
-    #define ASRC(N,E) (Z_PROBE_SERVO_NR == N ? asrc[E] : 0)
+    constexpr uint16_t sase[] = SWITCHING_EXTRUDER_SERVO_ANGLES;
+    static_assert(COUNT(sase) == REQ_ANGLES, "SWITCHING_EXTRUDER_SERVO_ANGLES needs " STRINGIFY(REQ_ANGLES) " angles.");
+  #else
+    constexpr uint16_t sase[4] = { 0 };
+  #endif
+
+  #if ENABLED(SWITCHING_NOZZLE)
+    constexpr uint16_t sasn[] = SWITCHING_NOZZLE_SERVO_ANGLES;
+    static_assert(COUNT(sasn) == 2, "SWITCHING_NOZZLE_SERVO_ANGLES needs 2 angles.");
+  #else
+    constexpr uint16_t sasn[2] = { 0 };
+  #endif
+
+  #ifdef Z_PROBE_SERVO_NR
     #if ENABLED(BLTOUCH)
       #include "../feature/bltouch.h"
+      #undef Z_SERVO_ANGLES
+      #define Z_SERVO_ANGLES { BLTOUCH_DEPLOY, BLTOUCH_STOW }
     #endif
-    #ifdef BLTOUCH_ANGLES
-      #define SADATA  BLTOUCH_ANGLES
-    #elif defined(Z_SERVO_ANGLES)
-      #define SADATA  Z_SERVO_ANGLES
-    #else
-      #error "Servo angles are needed!"
-    #endif
+    constexpr uint16_t sazp[] = Z_SERVO_ANGLES;
+    static_assert(COUNT(sazp) == 2, "Z_SERVO_ANGLES needs 2 angles.");
+  #else
+    constexpr uint16_t sazp[2] = { 0 };
   #endif
 
+  #ifndef SWITCHING_EXTRUDER_SERVO_NR
+    #define SWITCHING_EXTRUDER_SERVO_NR -1
+  #endif
+  #ifndef SWITCHING_EXTRUDER_E23_SERVO_NR
+    #define SWITCHING_EXTRUDER_E23_SERVO_NR -1
+  #endif
+  #ifndef SWITCHING_NOZZLE_SERVO_NR
+    #define SWITCHING_NOZZLE_SERVO_NR -1
+  #endif
+  #ifndef Z_PROBE_SERVO_NR
+    #define Z_PROBE_SERVO_NR -1
+  #endif
+
+  #define ASRC(N,I) (                                  \
+      N == SWITCHING_EXTRUDER_SERVO_NR     ? sase[I]   \
+    : N == SWITCHING_EXTRUDER_E23_SERVO_NR ? sase[I+2] \
+    : N == SWITCHING_NOZZLE_SERVO_NR       ? sasn[I]   \
+    : N == Z_PROBE_SERVO_NR                ? sazp[I]   \
+    : 0                                                )
+
   #if ENABLED(EDITABLE_SERVO_ANGLES)
     extern uint16_t servo_angles[NUM_SERVOS][2];
-    #define BASE_SERVO_ANGLES base_servo_angles
+    #define CONST_SERVO_ANGLES base_servo_angles
   #else
-    #define BASE_SERVO_ANGLES servo_angles
-  #endif
-
-  constexpr uint16_t asrc[] = SADATA;
-  #if REQ_ANGLES
-    static_assert(COUNT(asrc) == REQ_ANGLES, "SWITCHING_EXTRUDER_SERVO_ANGLES needs " STRINGIFY(REQ_ANGLES) " angles.");
+    #define CONST_SERVO_ANGLES servo_angles
   #endif
 
-  constexpr uint16_t BASE_SERVO_ANGLES [NUM_SERVOS][2] = {
+  constexpr uint16_t CONST_SERVO_ANGLES [NUM_SERVOS][2] = {
       { ASRC(0,0), ASRC(0,1) }
     #if NUM_SERVOS > 1
       , { ASRC(1,0), ASRC(1,1) }
       #if NUM_SERVOS > 2
         , { ASRC(2,0), ASRC(2,1) }
         #if NUM_SERVOS > 3
           , { ASRC(3,0), ASRC(3,1) }
         #endif
       #endif
     #endif

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 4ead93cd5c..5f9291e97d 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index d417cc877f..4ead93cd5c 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit 691e5c3bb8d04b0b6690424034d73ade19e91586
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Mar 17 06:57:25 2019 -0400

    BLTouch V3.0 support (#13406)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index c3bd05b0a1..d417cc877f 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -37,23 +37,32 @@
     #if EXTRUDERS > 3
       #define REQ_ANGLES 4
     #else
       #define REQ_ANGLES 2
     #endif
     #define SADATA    SWITCHING_EXTRUDER_SERVO_ANGLES
     #define ASRC(N,E) (SWITCHING_EXTRUDER_SERVO_NR == N ? asrc[E] : SWITCHING_EXTRUDER_E23_SERVO_NR == N ? asrc[E+2] : 0)
   #elif ENABLED(SWITCHING_NOZZLE)
     #define SADATA    SWITCHING_NOZZLE_SERVO_ANGLES
     #define ASRC(N,E) (SWITCHING_NOZZLE_SERVO_NR == N ? asrc[E] : 0)
-  #elif defined(Z_SERVO_ANGLES) && defined(Z_PROBE_SERVO_NR)
-    #define SADATA    Z_SERVO_ANGLES
+  #elif defined(Z_PROBE_SERVO_NR)
     #define ASRC(N,E) (Z_PROBE_SERVO_NR == N ? asrc[E] : 0)
+    #if ENABLED(BLTOUCH)
+      #include "../feature/bltouch.h"
+    #endif
+    #ifdef BLTOUCH_ANGLES
+      #define SADATA  BLTOUCH_ANGLES
+    #elif defined(Z_SERVO_ANGLES)
+      #define SADATA  Z_SERVO_ANGLES
+    #else
+      #error "Servo angles are needed!"
+    #endif
   #endif
 
   #if ENABLED(EDITABLE_SERVO_ANGLES)
     extern uint16_t servo_angles[NUM_SERVOS][2];
     #define BASE_SERVO_ANGLES base_servo_angles
   #else
     #define BASE_SERVO_ANGLES servo_angles
   #endif
 
   constexpr uint16_t asrc[] = SADATA;

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 54a4f0af09..c3bd05b0a1 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit aaf862aef22caa136f4aa63d9fcc4e71c164ae33
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 30 12:31:42 2018 -0600

    Fix angles for disabled EDITABLE_SERVO_ANGLES (#12559)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 7dc70559c7..54a4f0af09 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -21,20 +21,67 @@
  */
 #pragma once
 
 /**
  * module/servo.h
  */
 
 #include "../inc/MarlinConfig.h"
 #include "../HAL/shared/servo.h"
 
-extern HAL_SERVO_LIB servo[NUM_SERVOS];
-extern uint16_t servo_angles[NUM_SERVOS][2];
-extern void servo_init();
+#if HAS_SERVO_ANGLES
+
+  #if ENABLED(SWITCHING_EXTRUDER)
+    #ifndef SWITCHING_EXTRUDER_E23_SERVO_NR
+      #define SWITCHING_EXTRUDER_E23_SERVO_NR -1
+    #endif
+    #if EXTRUDERS > 3
+      #define REQ_ANGLES 4
+    #else
+      #define REQ_ANGLES 2
+    #endif
+    #define SADATA    SWITCHING_EXTRUDER_SERVO_ANGLES
+    #define ASRC(N,E) (SWITCHING_EXTRUDER_SERVO_NR == N ? asrc[E] : SWITCHING_EXTRUDER_E23_SERVO_NR == N ? asrc[E+2] : 0)
+  #elif ENABLED(SWITCHING_NOZZLE)
+    #define SADATA    SWITCHING_NOZZLE_SERVO_ANGLES
+    #define ASRC(N,E) (SWITCHING_NOZZLE_SERVO_NR == N ? asrc[E] : 0)
+  #elif defined(Z_SERVO_ANGLES) && defined(Z_PROBE_SERVO_NR)
+    #define SADATA    Z_SERVO_ANGLES
+    #define ASRC(N,E) (Z_PROBE_SERVO_NR == N ? asrc[E] : 0)
+  #endif
+
+  #if ENABLED(EDITABLE_SERVO_ANGLES)
+    extern uint16_t servo_angles[NUM_SERVOS][2];
+    #define BASE_SERVO_ANGLES base_servo_angles
+  #else
+    #define BASE_SERVO_ANGLES servo_angles
+  #endif
+
+  constexpr uint16_t asrc[] = SADATA;
+  #if REQ_ANGLES
+    static_assert(COUNT(asrc) == REQ_ANGLES, "SWITCHING_EXTRUDER_SERVO_ANGLES needs " STRINGIFY(REQ_ANGLES) " angles.");
+  #endif
+
+  constexpr uint16_t BASE_SERVO_ANGLES [NUM_SERVOS][2] = {
+      { ASRC(0,0), ASRC(0,1) }
+    #if NUM_SERVOS > 1
+      , { ASRC(1,0), ASRC(1,1) }
+      #if NUM_SERVOS > 2
+        , { ASRC(2,0), ASRC(2,1) }
+        #if NUM_SERVOS > 3
+          , { ASRC(3,0), ASRC(3,1) }
+        #endif
+      #endif
+    #endif
+  };
+
+  #if HAS_Z_SERVO_PROBE
+    #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
+    #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
+  #endif
+
+#endif // HAS_SERVO_ANGLES
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 
-#if HAS_Z_SERVO_PROBE
-  #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
-  #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
-#endif
+extern HAL_SERVO_LIB servo[NUM_SERVOS];
+extern void servo_init();

commit f5eab912ed6d336f2c37a688a0ec822ed3d42fcc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 4 02:25:55 2018 -0600

    Apply #pragma once, misc cleanup (#12322)
    
    * Apply #pragma once in headers
    * Adjust some thermistors formatting
    * Misc cleanup and formatting

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 04582431dd..7dc70559c7 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -12,33 +12,29 @@
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 /**
  * module/servo.h
  */
 
-#ifndef _SERVO_H_
-#define _SERVO_H_
-
 #include "../inc/MarlinConfig.h"
 #include "../HAL/shared/servo.h"
 
 extern HAL_SERVO_LIB servo[NUM_SERVOS];
 extern uint16_t servo_angles[NUM_SERVOS][2];
 extern void servo_init();
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 
 #if HAS_Z_SERVO_PROBE
   #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
   #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
 #endif
-
-#endif // _SERVO_H_

commit 254b68fe2c83724b2844c0b0e2aea286471261e0
Author: Christopher Pepper <p3p@p3psoft.co.uk>
Date:   Fri Sep 21 11:24:53 2018 +0100

    servo update

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index bd7e2acf5c..04582431dd 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -20,26 +20,25 @@
  *
  */
 
 /**
  * module/servo.h
  */
 
 #ifndef _SERVO_H_
 #define _SERVO_H_
 
+#include "../inc/MarlinConfig.h"
 #include "../HAL/shared/servo.h"
 
 extern HAL_SERVO_LIB servo[NUM_SERVOS];
 extern uint16_t servo_angles[NUM_SERVOS][2];
 extern void servo_init();
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 
-#include "../inc/MarlinConfig.h"
-
 #if HAS_Z_SERVO_PROBE
   #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
   #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
 #endif
 
 #endif // _SERVO_H_

commit 3e81745e81fea173599b06ac9db7ed776e986808
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Aug 24 21:53:42 2018 -0500

    Fix issues, make optional

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 807ad8e72b..bd7e2acf5c 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -23,21 +23,21 @@
 /**
  * module/servo.h
  */
 
 #ifndef _SERVO_H_
 #define _SERVO_H_
 
 #include "../HAL/shared/servo.h"
 
 extern HAL_SERVO_LIB servo[NUM_SERVOS];
-extern uint8_t servo_angles[NUM_SERVOS][2];
+extern uint16_t servo_angles[NUM_SERVOS][2];
 extern void servo_init();
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 
 #include "../inc/MarlinConfig.h"
 
 #if HAS_Z_SERVO_PROBE
   #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
   #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
 #endif

commit aa80e448e24a27ac0006de4e3d3e93b18c73e3e0
Author: Jan <janschon@uni-bremen.de>
Date:   Tue Aug 7 17:04:46 2018 +0200

    Store servo angles in EEPROM

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 05f4d6f4ef..807ad8e72b 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -23,22 +23,23 @@
 /**
  * module/servo.h
  */
 
 #ifndef _SERVO_H_
 #define _SERVO_H_
 
 #include "../HAL/shared/servo.h"
 
 extern HAL_SERVO_LIB servo[NUM_SERVOS];
+extern uint8_t servo_angles[NUM_SERVOS][2];
 extern void servo_init();
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 
 #include "../inc/MarlinConfig.h"
 
 #if HAS_Z_SERVO_PROBE
-  #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, z_servo_angle[0])
-  #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, z_servo_angle[1])
+  #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][0])
+  #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, servo_angles[Z_PROBE_SERVO_NR][1])
 #endif
 
 #endif // _SERVO_H_

commit c64199941e058abb18a06be90002f5f03009347b
Author: Dave Johnson <davejohnson3000@gmail.com>
Date:   Tue Aug 14 01:28:52 2018 -0700

    Compile only selected PIO environment (#11519)

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index 77d3f6eb87..05f4d6f4ef 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -20,21 +20,21 @@
  *
  */
 
 /**
  * module/servo.h
  */
 
 #ifndef _SERVO_H_
 #define _SERVO_H_
 
-#include "../HAL/servo.h"
+#include "../HAL/shared/servo.h"
 
 extern HAL_SERVO_LIB servo[NUM_SERVOS];
 extern void servo_init();
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 
 #include "../inc/MarlinConfig.h"
 
 #if HAS_Z_SERVO_PROBE
   #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, z_servo_angle[0])

commit adcb87f0db47672c28cfec9fda3354adac81fa99
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 1 23:54:12 2018 -0500

    Z Endstop Servo => Z Probe Servo

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
index cb5080e2b0..77d3f6eb87 100644
--- a/Marlin/src/module/servo.h
+++ b/Marlin/src/module/servo.h
@@ -29,16 +29,16 @@
 
 #include "../HAL/servo.h"
 
 extern HAL_SERVO_LIB servo[NUM_SERVOS];
 extern void servo_init();
 
 #define MOVE_SERVO(I, P) servo[I].move(P)
 
 #include "../inc/MarlinConfig.h"
 
-#if HAS_Z_SERVO_ENDSTOP
-  #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_ENDSTOP_SERVO_NR, z_servo_angle[0])
-  #define STOW_Z_SERVO() MOVE_SERVO(Z_ENDSTOP_SERVO_NR, z_servo_angle[1])
+#if HAS_Z_SERVO_PROBE
+  #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, z_servo_angle[0])
+  #define STOW_Z_SERVO() MOVE_SERVO(Z_PROBE_SERVO_NR, z_servo_angle[1])
 #endif
 
 #endif // _SERVO_H_

commit c0000a0cdc68dc2c9b49e5fcb1a04275fadd49dd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 19 13:39:46 2017 -0600

    Move servo code to modules/servo.*

diff --git a/Marlin/src/module/servo.h b/Marlin/src/module/servo.h
new file mode 100644
index 0000000000..cb5080e2b0
--- /dev/null
+++ b/Marlin/src/module/servo.h
@@ -0,0 +1,44 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * module/servo.h
+ */
+
+#ifndef _SERVO_H_
+#define _SERVO_H_
+
+#include "../HAL/servo.h"
+
+extern HAL_SERVO_LIB servo[NUM_SERVOS];
+extern void servo_init();
+
+#define MOVE_SERVO(I, P) servo[I].move(P)
+
+#include "../inc/MarlinConfig.h"
+
+#if HAS_Z_SERVO_ENDSTOP
+  #define DEPLOY_Z_SERVO() MOVE_SERVO(Z_ENDSTOP_SERVO_NR, z_servo_angle[0])
+  #define STOW_Z_SERVO() MOVE_SERVO(Z_ENDSTOP_SERVO_NR, z_servo_angle[1])
+#endif
+
+#endif // _SERVO_H_
