commit 1ac6428c82aa72cc41c0c9f758659b71e7fce1cf
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Jan 3 13:52:12 2024 +1300

    üî™ Options to slim M111, remove M115 (#26603)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 02f37f8497..a8e549b69d 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -20,6 +20,7 @@
  *
  */
 
+#include "../../inc/MarlinConfig.h"
 #include "../gcode.h"
 
 /**
@@ -27,18 +28,25 @@
  */
 void GcodeSuite::M111() {
   if (parser.seenval('S')) marlin_debug_flags = parser.value_byte();
-
-  static PGMSTR(str_debug_1, STR_DEBUG_ECHO);
-  static PGMSTR(str_debug_2, STR_DEBUG_INFO);
-  static PGMSTR(str_debug_4, STR_DEBUG_ERRORS);
+  #if ENABLED(DEBUG_FLAGS_GCODE)
+    static PGMSTR(str_debug_1, STR_DEBUG_ECHO);
+    static PGMSTR(str_debug_2, STR_DEBUG_INFO);
+    static PGMSTR(str_debug_4, STR_DEBUG_ERRORS);
+  #endif
   static PGMSTR(str_debug_8, STR_DEBUG_DRYRUN);
-  static PGMSTR(str_debug_16, STR_DEBUG_COMMUNICATION);
+  #if ENABLED(DEBUG_FLAGS_GCODE)
+    static PGMSTR(str_debug_16, STR_DEBUG_COMMUNICATION);
+  #endif
   #if ENABLED(DEBUG_LEVELING_FEATURE)
     static PGMSTR(str_debug_detail, STR_DEBUG_DETAIL);
   #endif
 
   static PGM_P const debug_strings[] PROGMEM = {
-    str_debug_1, str_debug_2, str_debug_4, str_debug_8, str_debug_16,
+    TERN(DEBUG_FLAGS_GCODE, str_debug_1, nullptr),
+    TERN(DEBUG_FLAGS_GCODE, str_debug_2, nullptr),
+    TERN(DEBUG_FLAGS_GCODE, str_debug_4, nullptr),
+    str_debug_8,
+    TERN(DEBUG_FLAGS_GCODE, str_debug_16, nullptr),
     TERN_(DEBUG_LEVELING_FEATURE, str_debug_detail)
   };
 
@@ -47,31 +55,29 @@ void GcodeSuite::M111() {
   if (marlin_debug_flags) {
     uint8_t comma = 0;
     for (uint8_t i = 0; i < COUNT(debug_strings); ++i) {
-      if (TEST(marlin_debug_flags, i)) {
+      PGM_P const pstr = (PGM_P)pgm_read_ptr(&debug_strings[i]);
+      if (pstr && TEST(marlin_debug_flags, i)) {
         if (comma++) SERIAL_CHAR(',');
-        SERIAL_ECHOPGM_P((PGM_P)pgm_read_ptr(&debug_strings[i]));
+        SERIAL_ECHOPGM_P(pstr);
       }
     }
   }
   else {
     SERIAL_ECHOPGM(STR_DEBUG_OFF);
-    #if !defined(__AVR__) || !defined(USBCON)
+    #if !(defined(__AVR__) && defined(USBCON))
       #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
         SERIAL_ECHOPGM("\nBuffer Overruns: ", MYSERIAL1.buffer_overruns());
       #endif
-
       #if ENABLED(SERIAL_STATS_RX_FRAMING_ERRORS)
         SERIAL_ECHOPGM("\nFraming Errors: ", MYSERIAL1.framing_errors());
       #endif
-
       #if ENABLED(SERIAL_STATS_DROPPED_RX)
         SERIAL_ECHOPGM("\nDropped bytes: ", MYSERIAL1.dropped());
       #endif
-
       #if ENABLED(SERIAL_STATS_MAX_RX_QUEUED)
         SERIAL_ECHOPGM("\nMax RX Queue Size: ", MYSERIAL1.rxMaxEnqueued());
       #endif
-    #endif // !__AVR__ || !USBCON
+    #endif // !(__AVR__ && USBCON)
   }
   SERIAL_EOL();
 }

commit 86c811660ebf0b3fcbae2f34273d4c9d0c22abc4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:30:34 2023 -0500

    üßë‚Äçüíª Remove LOOP macros (#25917)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index a92d334ae9..02f37f8497 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -46,7 +46,7 @@ void GcodeSuite::M111() {
   SERIAL_ECHOPGM(STR_DEBUG_PREFIX);
   if (marlin_debug_flags) {
     uint8_t comma = 0;
-    LOOP_L_N(i, COUNT(debug_strings)) {
+    for (uint8_t i = 0; i < COUNT(debug_strings); ++i) {
       if (TEST(marlin_debug_flags, i)) {
         if (comma++) SERIAL_CHAR(',');
         SERIAL_ECHOPGM_P((PGM_P)pgm_read_ptr(&debug_strings[i]));

commit 877e10205b286a6c1b8da869c54b50db866c1db8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 3 20:13:11 2022 -0500

    üèóÔ∏è Axis name arrays
    
    Co-Authored-By: DerAndere <26200979+DerAndere1@users.noreply.github.com>

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index d6aeb77410..a92d334ae9 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -49,7 +49,7 @@ void GcodeSuite::M111() {
     LOOP_L_N(i, COUNT(debug_strings)) {
       if (TEST(marlin_debug_flags, i)) {
         if (comma++) SERIAL_CHAR(',');
-        SERIAL_ECHOPGM_P((char*)pgm_read_ptr(&debug_strings[i]));
+        SERIAL_ECHOPGM_P((PGM_P)pgm_read_ptr(&debug_strings[i]));
       }
     }
   }

commit 2d04e5733aad05a3646ebc3b37ecde25d479589d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 8 18:02:28 2022 -0600

    üßë‚Äçüíª Drop hostui.flag

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 846bf70556..d6aeb77410 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -22,20 +22,12 @@
 
 #include "../gcode.h"
 
-#if ENABLED(HOST_ACTION_COMMANDS)
-  #include "../../feature/host_actions.h"
-#endif
-
 /**
  * M111: Set the debug level
  */
 void GcodeSuite::M111() {
   if (parser.seenval('S')) marlin_debug_flags = parser.value_byte();
 
-  #if EITHER(HOST_ACTION_COMMANDS, HOST_PROMPT_SUPPORT)
-    if (parser.seenval('H')) hostui.flag.bits = parser.value_byte();
-  #endif
-
   static PGMSTR(str_debug_1, STR_DEBUG_ECHO);
   static PGMSTR(str_debug_2, STR_DEBUG_INFO);
   static PGMSTR(str_debug_4, STR_DEBUG_ERRORS);

commit 7763f9385d506ef79ef81ccb48a972ab56050fb1
Author: Taylor Talkington <taylor.talkington@gmail.com>
Date:   Tue Feb 8 18:36:06 2022 -0500

    ‚ú® Optional HOST_STATUS_NOTIFICATIONS (#22833)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index d6aeb77410..846bf70556 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -22,12 +22,20 @@
 
 #include "../gcode.h"
 
+#if ENABLED(HOST_ACTION_COMMANDS)
+  #include "../../feature/host_actions.h"
+#endif
+
 /**
  * M111: Set the debug level
  */
 void GcodeSuite::M111() {
   if (parser.seenval('S')) marlin_debug_flags = parser.value_byte();
 
+  #if EITHER(HOST_ACTION_COMMANDS, HOST_PROMPT_SUPPORT)
+    if (parser.seenval('H')) hostui.flag.bits = parser.value_byte();
+  #endif
+
   static PGMSTR(str_debug_1, STR_DEBUG_ECHO);
   static PGMSTR(str_debug_2, STR_DEBUG_INFO);
   static PGMSTR(str_debug_4, STR_DEBUG_ERRORS);

commit e2446dc5610382c72d502cd3410b46f9801bb131
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 18 03:01:09 2022 -0600

    üí• Generalize extra debugging

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 08c39b762e..d6aeb77410 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -34,12 +34,12 @@ void GcodeSuite::M111() {
   static PGMSTR(str_debug_8, STR_DEBUG_DRYRUN);
   static PGMSTR(str_debug_16, STR_DEBUG_COMMUNICATION);
   #if ENABLED(DEBUG_LEVELING_FEATURE)
-    static PGMSTR(str_debug_lvl, STR_DEBUG_LEVELING);
+    static PGMSTR(str_debug_detail, STR_DEBUG_DETAIL);
   #endif
 
   static PGM_P const debug_strings[] PROGMEM = {
     str_debug_1, str_debug_2, str_debug_4, str_debug_8, str_debug_16,
-    TERN_(DEBUG_LEVELING_FEATURE, str_debug_lvl)
+    TERN_(DEBUG_LEVELING_FEATURE, str_debug_detail)
   };
 
   SERIAL_ECHO_START();

commit ee28a14e8e7f6b33fe5813dbedcd85380207c345
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 15 00:24:08 2021 -0500

    üé® Refactor Host Actions as singleton

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 69d20b4c5d..08c39b762e 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -26,7 +26,7 @@
  * M111: Set the debug level
  */
 void GcodeSuite::M111() {
-  if (parser.seen('S')) marlin_debug_flags = parser.byteval('S');
+  if (parser.seenval('S')) marlin_debug_flags = parser.value_byte();
 
   static PGMSTR(str_debug_1, STR_DEBUG_ECHO);
   static PGMSTR(str_debug_2, STR_DEBUG_INFO);

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index e762e3387f..69d20b4c5d 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -57,19 +57,19 @@ void GcodeSuite::M111() {
     SERIAL_ECHOPGM(STR_DEBUG_OFF);
     #if !defined(__AVR__) || !defined(USBCON)
       #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
-        SERIAL_ECHOPAIR("\nBuffer Overruns: ", MYSERIAL1.buffer_overruns());
+        SERIAL_ECHOPGM("\nBuffer Overruns: ", MYSERIAL1.buffer_overruns());
       #endif
 
       #if ENABLED(SERIAL_STATS_RX_FRAMING_ERRORS)
-        SERIAL_ECHOPAIR("\nFraming Errors: ", MYSERIAL1.framing_errors());
+        SERIAL_ECHOPGM("\nFraming Errors: ", MYSERIAL1.framing_errors());
       #endif
 
       #if ENABLED(SERIAL_STATS_DROPPED_RX)
-        SERIAL_ECHOPAIR("\nDropped bytes: ", MYSERIAL1.dropped());
+        SERIAL_ECHOPGM("\nDropped bytes: ", MYSERIAL1.dropped());
       #endif
 
       #if ENABLED(SERIAL_STATS_MAX_RX_QUEUED)
-        SERIAL_ECHOPAIR("\nMax RX Queue Size: ", MYSERIAL1.rxMaxEnqueued());
+        SERIAL_ECHOPGM("\nMax RX Queue Size: ", MYSERIAL1.rxMaxEnqueued());
       #endif
     #endif // !__AVR__ || !USBCON
   }

commit dbd28eecc9cd4b5954a4fd1ed0c02bd9788c279b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 10 12:05:05 2021 -0600

    Number serial from 1 to match settings

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 8e677080e0..e762e3387f 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -57,19 +57,19 @@ void GcodeSuite::M111() {
     SERIAL_ECHOPGM(STR_DEBUG_OFF);
     #if !defined(__AVR__) || !defined(USBCON)
       #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
-        SERIAL_ECHOPAIR("\nBuffer Overruns: ", MYSERIAL0.buffer_overruns());
+        SERIAL_ECHOPAIR("\nBuffer Overruns: ", MYSERIAL1.buffer_overruns());
       #endif
 
       #if ENABLED(SERIAL_STATS_RX_FRAMING_ERRORS)
-        SERIAL_ECHOPAIR("\nFraming Errors: ", MYSERIAL0.framing_errors());
+        SERIAL_ECHOPAIR("\nFraming Errors: ", MYSERIAL1.framing_errors());
       #endif
 
       #if ENABLED(SERIAL_STATS_DROPPED_RX)
-        SERIAL_ECHOPAIR("\nDropped bytes: ", MYSERIAL0.dropped());
+        SERIAL_ECHOPAIR("\nDropped bytes: ", MYSERIAL1.dropped());
       #endif
 
       #if ENABLED(SERIAL_STATS_MAX_RX_QUEUED)
-        SERIAL_ECHOPAIR("\nMax RX Queue Size: ", MYSERIAL0.rxMaxEnqueued());
+        SERIAL_ECHOPAIR("\nMax RX Queue Size: ", MYSERIAL1.rxMaxEnqueued());
       #endif
     #endif // !__AVR__ || !USBCON
   }

commit dd42831cba7334c5d106ba435bdb41b6135971bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 28 19:43:46 2021 -0600

    Serial macros cleanup

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 38cb065322..8e677080e0 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -49,7 +49,7 @@ void GcodeSuite::M111() {
     LOOP_L_N(i, COUNT(debug_strings)) {
       if (TEST(marlin_debug_flags, i)) {
         if (comma++) SERIAL_CHAR(',');
-        serialprintPGM((char*)pgm_read_ptr(&debug_strings[i]));
+        SERIAL_ECHOPGM_P((char*)pgm_read_ptr(&debug_strings[i]));
       }
     }
   }

commit 90d364fc37de5880582aec9537da11f4b125d660
Author: Jason Smith <jason.inet@gmail.com>
Date:   Wed Oct 14 11:48:46 2020 -0700

    Revert at90usb1286 conditional (#19733)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index cc871bf38b..38cb065322 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -55,7 +55,7 @@ void GcodeSuite::M111() {
   }
   else {
     SERIAL_ECHOPGM(STR_DEBUG_OFF);
-    #if !IS_AT90USB
+    #if !defined(__AVR__) || !defined(USBCON)
       #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
         SERIAL_ECHOPAIR("\nBuffer Overruns: ", MYSERIAL0.buffer_overruns());
       #endif
@@ -71,7 +71,7 @@ void GcodeSuite::M111() {
       #if ENABLED(SERIAL_STATS_MAX_RX_QUEUED)
         SERIAL_ECHOPAIR("\nMax RX Queue Size: ", MYSERIAL0.rxMaxEnqueued());
       #endif
-    #endif // !IS_AT90USB
+    #endif // !__AVR__ || !USBCON
   }
   SERIAL_EOL();
 }

commit 45731bd0221beee768e009195ee3aa9a0b0f2a88
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Oct 11 16:13:01 2020 -0700

    Fix at90usb1286 build (#19687)
    
    * Skip check for USBCON during dependency detection
    * Ignore incompatible Teensy_ADC library, which requires Teensy >= 3
    * Add IS_AT90USB
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index e31c3e2fb7..cc871bf38b 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -55,7 +55,7 @@ void GcodeSuite::M111() {
   }
   else {
     SERIAL_ECHOPGM(STR_DEBUG_OFF);
-    #if !defined(__AVR__) || !defined(USBCON)
+    #if !IS_AT90USB
       #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
         SERIAL_ECHOPAIR("\nBuffer Overruns: ", MYSERIAL0.buffer_overruns());
       #endif
@@ -71,7 +71,7 @@ void GcodeSuite::M111() {
       #if ENABLED(SERIAL_STATS_MAX_RX_QUEUED)
         SERIAL_ECHOPAIR("\nMax RX Queue Size: ", MYSERIAL0.rxMaxEnqueued());
       #endif
-    #endif //  !defined(__AVR__) || !defined(USBCON)
+    #endif // !IS_AT90USB
   }
   SERIAL_EOL();
 }

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index d93e1404af..e31c3e2fb7 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit a4c981469e317b30ff21fba109e1b126e5dcafcf
Author: Gurmeet Athwal <gurmeet.athwal@gmail.com>
Date:   Wed May 6 10:04:04 2020 +0530

    Extended reporting options (#16741)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 20ed44fb2e..d93e1404af 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -28,21 +28,18 @@
 void GcodeSuite::M111() {
   if (parser.seen('S')) marlin_debug_flags = parser.byteval('S');
 
-  static const char str_debug_1[] PROGMEM = STR_DEBUG_ECHO,
-                    str_debug_2[] PROGMEM = STR_DEBUG_INFO,
-                    str_debug_4[] PROGMEM = STR_DEBUG_ERRORS,
-                    str_debug_8[] PROGMEM = STR_DEBUG_DRYRUN,
-                    str_debug_16[] PROGMEM = STR_DEBUG_COMMUNICATION
-                    #if ENABLED(DEBUG_LEVELING_FEATURE)
-                      , str_debug_lvl[] PROGMEM = STR_DEBUG_LEVELING
-                    #endif
-                    ;
+  static PGMSTR(str_debug_1, STR_DEBUG_ECHO);
+  static PGMSTR(str_debug_2, STR_DEBUG_INFO);
+  static PGMSTR(str_debug_4, STR_DEBUG_ERRORS);
+  static PGMSTR(str_debug_8, STR_DEBUG_DRYRUN);
+  static PGMSTR(str_debug_16, STR_DEBUG_COMMUNICATION);
+  #if ENABLED(DEBUG_LEVELING_FEATURE)
+    static PGMSTR(str_debug_lvl, STR_DEBUG_LEVELING);
+  #endif
 
   static PGM_P const debug_strings[] PROGMEM = {
-    str_debug_1, str_debug_2, str_debug_4, str_debug_8, str_debug_16
-    #if ENABLED(DEBUG_LEVELING_FEATURE)
-      , str_debug_lvl
-    #endif
+    str_debug_1, str_debug_2, str_debug_4, str_debug_8, str_debug_16,
+    TERN_(DEBUG_LEVELING_FEATURE, str_debug_lvl)
   };
 
   SERIAL_ECHO_START();

commit 118bd2f8b2a1f81884cb55a8fc00b708a51aa15b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 23:18:16 2020 -0500

    Apply loop shorthand macros (#17159)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index bb1a77836b..20ed44fb2e 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -49,7 +49,7 @@ void GcodeSuite::M111() {
   SERIAL_ECHOPGM(STR_DEBUG_PREFIX);
   if (marlin_debug_flags) {
     uint8_t comma = 0;
-    for (uint8_t i = 0; i < COUNT(debug_strings); i++) {
+    LOOP_L_N(i, COUNT(debug_strings)) {
       if (TEST(marlin_debug_flags, i)) {
         if (comma++) SERIAL_CHAR(',');
         serialprintPGM((char*)pgm_read_ptr(&debug_strings[i]));

commit e78f607ef33044eecde744e77beea87532817c47
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 26 03:02:03 2020 -0600

    Use a STR_ prefix for non-translated strings

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index fd7ca09c6c..bb1a77836b 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -28,13 +28,13 @@
 void GcodeSuite::M111() {
   if (parser.seen('S')) marlin_debug_flags = parser.byteval('S');
 
-  static const char str_debug_1[] PROGMEM = MSG_DEBUG_ECHO,
-                    str_debug_2[] PROGMEM = MSG_DEBUG_INFO,
-                    str_debug_4[] PROGMEM = MSG_DEBUG_ERRORS,
-                    str_debug_8[] PROGMEM = MSG_DEBUG_DRYRUN,
-                    str_debug_16[] PROGMEM = MSG_DEBUG_COMMUNICATION
+  static const char str_debug_1[] PROGMEM = STR_DEBUG_ECHO,
+                    str_debug_2[] PROGMEM = STR_DEBUG_INFO,
+                    str_debug_4[] PROGMEM = STR_DEBUG_ERRORS,
+                    str_debug_8[] PROGMEM = STR_DEBUG_DRYRUN,
+                    str_debug_16[] PROGMEM = STR_DEBUG_COMMUNICATION
                     #if ENABLED(DEBUG_LEVELING_FEATURE)
-                      , str_debug_lvl[] PROGMEM = MSG_DEBUG_LEVELING
+                      , str_debug_lvl[] PROGMEM = STR_DEBUG_LEVELING
                     #endif
                     ;
 
@@ -46,7 +46,7 @@ void GcodeSuite::M111() {
   };
 
   SERIAL_ECHO_START();
-  SERIAL_ECHOPGM(MSG_DEBUG_PREFIX);
+  SERIAL_ECHOPGM(STR_DEBUG_PREFIX);
   if (marlin_debug_flags) {
     uint8_t comma = 0;
     for (uint8_t i = 0; i < COUNT(debug_strings); i++) {
@@ -57,7 +57,7 @@ void GcodeSuite::M111() {
     }
   }
   else {
-    SERIAL_ECHOPGM(MSG_DEBUG_OFF);
+    SERIAL_ECHOPGM(STR_DEBUG_OFF);
     #if !defined(__AVR__) || !defined(USBCON)
       #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
         SERIAL_ECHOPAIR("\nBuffer Overruns: ", MYSERIAL0.buffer_overruns());

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 1c608408f3..fd7ca09c6c 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index f4bb6e1f62..1c608408f3 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit f5bcc00570bd5ae2ba0deaa7af0ba4d3ce7c3b02
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 14 02:25:42 2019 -0500

    Unify debugging output with debug_out.h (#13388)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 86936dd5c2..f4bb6e1f62 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -34,14 +34,14 @@ void GcodeSuite::M111() {
                     str_debug_8[] PROGMEM = MSG_DEBUG_DRYRUN,
                     str_debug_16[] PROGMEM = MSG_DEBUG_COMMUNICATION
                     #if ENABLED(DEBUG_LEVELING_FEATURE)
-                      , str_debug_32[] PROGMEM = MSG_DEBUG_LEVELING
+                      , str_debug_lvl[] PROGMEM = MSG_DEBUG_LEVELING
                     #endif
                     ;
 
   static PGM_P const debug_strings[] PROGMEM = {
     str_debug_1, str_debug_2, str_debug_4, str_debug_8, str_debug_16
     #if ENABLED(DEBUG_LEVELING_FEATURE)
-      , str_debug_32
+      , str_debug_lvl
     #endif
   };
 

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 1410356789..86936dd5c2 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit d6955f25b278904e61b296201a5bee9f222cd4ca
Author: Eduardo Jos√© Tagle <ejtagle@hotmail.com>
Date:   Wed Oct 3 02:47:27 2018 -0300

    Expand serial support in DUE/AVR hals exploiting the templated MarlinSerial classes (#11988)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index ff6bd64463..1410356789 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -60,19 +60,19 @@ void GcodeSuite::M111() {
     SERIAL_ECHOPGM(MSG_DEBUG_OFF);
     #if !defined(__AVR__) || !defined(USBCON)
       #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
-        SERIAL_ECHOPAIR("\nBuffer Overruns: ", customizedSerial.buffer_overruns());
+        SERIAL_ECHOPAIR("\nBuffer Overruns: ", MYSERIAL0.buffer_overruns());
       #endif
 
       #if ENABLED(SERIAL_STATS_RX_FRAMING_ERRORS)
-        SERIAL_ECHOPAIR("\nFraming Errors: ", customizedSerial.framing_errors());
+        SERIAL_ECHOPAIR("\nFraming Errors: ", MYSERIAL0.framing_errors());
       #endif
 
       #if ENABLED(SERIAL_STATS_DROPPED_RX)
-        SERIAL_ECHOPAIR("\nDropped bytes: ", customizedSerial.dropped());
+        SERIAL_ECHOPAIR("\nDropped bytes: ", MYSERIAL0.dropped());
       #endif
 
       #if ENABLED(SERIAL_STATS_MAX_RX_QUEUED)
-        SERIAL_ECHOPAIR("\nMax RX Queue Size: ", customizedSerial.rxMaxEnqueued());
+        SERIAL_ECHOPAIR("\nMax RX Queue Size: ", MYSERIAL0.rxMaxEnqueued());
       #endif
     #endif //  !defined(__AVR__) || !defined(USBCON)
   }

commit 11ac75edcb34a2f90b50ca134ff40839f8c29199
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 30 23:44:33 2018 -0500

    Use PGM_P for PSTR pointers (#11977)

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 96587a1fc1..ff6bd64463 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -38,7 +38,7 @@ void GcodeSuite::M111() {
                     #endif
                     ;
 
-  static const char* const debug_strings[] PROGMEM = {
+  static PGM_P const debug_strings[] PROGMEM = {
     str_debug_1, str_debug_2, str_debug_4, str_debug_8, str_debug_16
     #if ENABLED(DEBUG_LEVELING_FEATURE)
       , str_debug_32

commit 590ce1c33e3e7eabc21f7d5672317513345818c7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jun 10 17:54:14 2018 -0500

    Fix serial debug ouput

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index d4c3622296..96587a1fc1 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -60,19 +60,19 @@ void GcodeSuite::M111() {
     SERIAL_ECHOPGM(MSG_DEBUG_OFF);
     #if !defined(__AVR__) || !defined(USBCON)
       #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
-        SERIAL_ECHOLNPAIR("Buffer Overruns: ", customizedSerial.buffer_overruns());
+        SERIAL_ECHOPAIR("\nBuffer Overruns: ", customizedSerial.buffer_overruns());
       #endif
 
       #if ENABLED(SERIAL_STATS_RX_FRAMING_ERRORS)
-        SERIAL_ECHOLNPAIR("Framing Errors: ", customizedSerial.framing_errors());
+        SERIAL_ECHOPAIR("\nFraming Errors: ", customizedSerial.framing_errors());
       #endif
 
       #if ENABLED(SERIAL_STATS_DROPPED_RX)
-        SERIAL_ECHOLNPAIR("Dropped bytes: ", customizedSerial.dropped());
+        SERIAL_ECHOPAIR("\nDropped bytes: ", customizedSerial.dropped());
       #endif
 
       #if ENABLED(SERIAL_STATS_MAX_RX_QUEUED)
-        SERIAL_ECHOLNPAIR("Max RX Queue Size: ", customizedSerial.rxMaxEnqueued());
+        SERIAL_ECHOPAIR("\nMax RX Queue Size: ", customizedSerial.rxMaxEnqueued());
       #endif
     #endif //  !defined(__AVR__) || !defined(USBCON)
   }

commit 99af086cea57c8b6ead0cbd2fd717ceedeaf407b
Author: etagle <ejtagle@hotmail.com>
Date:   Sat Jun 9 21:07:06 2018 -0300

    Add hidden Serial overflow debug options

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index d3c332f8cf..d4c3622296 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -58,6 +58,23 @@ void GcodeSuite::M111() {
   }
   else {
     SERIAL_ECHOPGM(MSG_DEBUG_OFF);
+    #if !defined(__AVR__) || !defined(USBCON)
+      #if ENABLED(SERIAL_STATS_RX_BUFFER_OVERRUNS)
+        SERIAL_ECHOLNPAIR("Buffer Overruns: ", customizedSerial.buffer_overruns());
+      #endif
+
+      #if ENABLED(SERIAL_STATS_RX_FRAMING_ERRORS)
+        SERIAL_ECHOLNPAIR("Framing Errors: ", customizedSerial.framing_errors());
+      #endif
+
+      #if ENABLED(SERIAL_STATS_DROPPED_RX)
+        SERIAL_ECHOLNPAIR("Dropped bytes: ", customizedSerial.dropped());
+      #endif
+
+      #if ENABLED(SERIAL_STATS_MAX_RX_QUEUED)
+        SERIAL_ECHOLNPAIR("Max RX Queue Size: ", customizedSerial.rxMaxEnqueued());
+      #endif
+    #endif //  !defined(__AVR__) || !defined(USBCON)
   }
   SERIAL_EOL();
 }

commit 33966710119b64f83a19075875a8d27452cca9a4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 22 00:16:30 2018 -0500

    [2.0.x] Reset LCD status to fallbacks (#10470)
    
    * Remove obsolete strings
    * Tweak some static consts
    * Reset LCD status to fallbacks

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
index 1850ed2db8..d3c332f8cf 100644
--- a/Marlin/src/gcode/control/M111.cpp
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -28,7 +28,7 @@
 void GcodeSuite::M111() {
   if (parser.seen('S')) marlin_debug_flags = parser.byteval('S');
 
-  const static char str_debug_1[] PROGMEM = MSG_DEBUG_ECHO,
+  static const char str_debug_1[] PROGMEM = MSG_DEBUG_ECHO,
                     str_debug_2[] PROGMEM = MSG_DEBUG_INFO,
                     str_debug_4[] PROGMEM = MSG_DEBUG_ERRORS,
                     str_debug_8[] PROGMEM = MSG_DEBUG_DRYRUN,
@@ -38,7 +38,7 @@ void GcodeSuite::M111() {
                     #endif
                     ;
 
-  const static char* const debug_strings[] PROGMEM = {
+  static const char* const debug_strings[] PROGMEM = {
     str_debug_1, str_debug_2, str_debug_4, str_debug_8, str_debug_16
     #if ENABLED(DEBUG_LEVELING_FEATURE)
       , str_debug_32

commit 06f3c8029efff175fb70aa71184be4c1329ca292
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 22:40:04 2017 -0500

    Move M111 to cpp

diff --git a/Marlin/src/gcode/control/M111.cpp b/Marlin/src/gcode/control/M111.cpp
new file mode 100644
index 0000000000..1850ed2db8
--- /dev/null
+++ b/Marlin/src/gcode/control/M111.cpp
@@ -0,0 +1,63 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../gcode.h"
+
+/**
+ * M111: Set the debug level
+ */
+void GcodeSuite::M111() {
+  if (parser.seen('S')) marlin_debug_flags = parser.byteval('S');
+
+  const static char str_debug_1[] PROGMEM = MSG_DEBUG_ECHO,
+                    str_debug_2[] PROGMEM = MSG_DEBUG_INFO,
+                    str_debug_4[] PROGMEM = MSG_DEBUG_ERRORS,
+                    str_debug_8[] PROGMEM = MSG_DEBUG_DRYRUN,
+                    str_debug_16[] PROGMEM = MSG_DEBUG_COMMUNICATION
+                    #if ENABLED(DEBUG_LEVELING_FEATURE)
+                      , str_debug_32[] PROGMEM = MSG_DEBUG_LEVELING
+                    #endif
+                    ;
+
+  const static char* const debug_strings[] PROGMEM = {
+    str_debug_1, str_debug_2, str_debug_4, str_debug_8, str_debug_16
+    #if ENABLED(DEBUG_LEVELING_FEATURE)
+      , str_debug_32
+    #endif
+  };
+
+  SERIAL_ECHO_START();
+  SERIAL_ECHOPGM(MSG_DEBUG_PREFIX);
+  if (marlin_debug_flags) {
+    uint8_t comma = 0;
+    for (uint8_t i = 0; i < COUNT(debug_strings); i++) {
+      if (TEST(marlin_debug_flags, i)) {
+        if (comma++) SERIAL_CHAR(',');
+        serialprintPGM((char*)pgm_read_ptr(&debug_strings[i]));
+      }
+    }
+  }
+  else {
+    SERIAL_ECHOPGM(MSG_DEBUG_OFF);
+  }
+  SERIAL_EOL();
+}
