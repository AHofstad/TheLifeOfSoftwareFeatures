commit 669814d0d408a622f020a55971ba04030e4fa4bf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 7 23:40:54 2024 -0600

    ‚ú® MARLIN_SMALL_BUILD option (#26775)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index ec63ff190d..7c40eddd5d 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -47,11 +47,11 @@ void GcodeSuite::M851() {
       if (WITHIN(x, PROBE_OFFSET_XMIN, PROBE_OFFSET_XMAX))
         offs.x = x;
       else {
-        SERIAL_ECHOLNPGM("?X out of range (", PROBE_OFFSET_XMIN, " to ", PROBE_OFFSET_XMAX, ")");
+        SERIAL_ECHOLNPGM(GCODE_ERR_MSG("X out of range (", PROBE_OFFSET_XMIN, " to ", PROBE_OFFSET_XMAX, ")"));
         ok = false;
       }
     #else
-      if (x) SERIAL_ECHOLNPGM("?X must be 0 (NOZZLE_AS_PROBE)."); // ...but let 'ok' stay true
+      if (x) SERIAL_ECHOLNPGM(GCODE_ERR_MSG("X must be 0 (NOZZLE_AS_PROBE).")); // ...but let 'ok' stay true
     #endif
   }
 
@@ -61,11 +61,11 @@ void GcodeSuite::M851() {
       if (WITHIN(y, PROBE_OFFSET_YMIN, PROBE_OFFSET_YMAX))
         offs.y = y;
       else {
-        SERIAL_ECHOLNPGM("?Y out of range (", PROBE_OFFSET_YMIN, " to ", PROBE_OFFSET_YMAX, ")");
+        SERIAL_ECHOLNPGM(GCODE_ERR_MSG("Y out of range (", PROBE_OFFSET_YMIN, " to ", PROBE_OFFSET_YMAX, ")"));
         ok = false;
       }
     #else
-      if (y) SERIAL_ECHOLNPGM("?Y must be 0 (NOZZLE_AS_PROBE)."); // ...but let 'ok' stay true
+      if (y) SERIAL_ECHOLNPGM(GCODE_ERR_MSG("Y must be 0 (NOZZLE_AS_PROBE).")); // ...but let 'ok' stay true
     #endif
   }
 
@@ -74,7 +74,7 @@ void GcodeSuite::M851() {
     if (WITHIN(z, PROBE_OFFSET_ZMIN, PROBE_OFFSET_ZMAX))
       offs.z = z;
     else {
-      SERIAL_ECHOLNPGM("?Z out of range (", PROBE_OFFSET_ZMIN, " to ", PROBE_OFFSET_ZMAX, ")");
+      SERIAL_ECHOLNPGM(GCODE_ERR_MSG("Z out of range (", PROBE_OFFSET_ZMIN, " to ", PROBE_OFFSET_ZMAX, ")"));
       ok = false;
     }
   }
@@ -84,6 +84,8 @@ void GcodeSuite::M851() {
 }
 
 void GcodeSuite::M851_report(const bool forReplay/*=true*/) {
+  TERN_(MARLIN_SMALL_BUILD, return);
+
   report_heading_etc(forReplay, F(STR_Z_PROBE_OFFSET));
   SERIAL_ECHOPGM_P(
     #if HAS_PROBE_XY_OFFSET

commit cb044d989c397fcbf6f106502df69a7e5c41d34b
Author: Vladimir Sitnikov <sitnikov.vladimir@gmail.com>
Date:   Sun Nov 5 09:46:57 2023 +0300

    ‚ú® Probe XY Offset value limits (#26267)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index e66392acb4..ec63ff190d 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -44,10 +44,10 @@ void GcodeSuite::M851() {
   if (parser.seenval('X')) {
     const float x = parser.value_float();
     #if HAS_PROBE_XY_OFFSET
-      if (WITHIN(x, -(X_BED_SIZE), X_BED_SIZE))
+      if (WITHIN(x, PROBE_OFFSET_XMIN, PROBE_OFFSET_XMAX))
         offs.x = x;
       else {
-        SERIAL_ECHOLNPGM("?X out of range (-", X_BED_SIZE, " to ", X_BED_SIZE, ")");
+        SERIAL_ECHOLNPGM("?X out of range (", PROBE_OFFSET_XMIN, " to ", PROBE_OFFSET_XMAX, ")");
         ok = false;
       }
     #else
@@ -58,10 +58,10 @@ void GcodeSuite::M851() {
   if (parser.seenval('Y')) {
     const float y = parser.value_float();
     #if HAS_PROBE_XY_OFFSET
-      if (WITHIN(y, -(Y_BED_SIZE), Y_BED_SIZE))
+      if (WITHIN(y, PROBE_OFFSET_YMIN, PROBE_OFFSET_YMAX))
         offs.y = y;
       else {
-        SERIAL_ECHOLNPGM("?Y out of range (-", Y_BED_SIZE, " to ", Y_BED_SIZE, ")");
+        SERIAL_ECHOLNPGM("?Y out of range (", PROBE_OFFSET_YMIN, " to ", PROBE_OFFSET_YMAX, ")");
         ok = false;
       }
     #else
@@ -71,10 +71,10 @@ void GcodeSuite::M851() {
 
   if (parser.seenval('Z')) {
     const float z = parser.value_float();
-    if (WITHIN(z, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
+    if (WITHIN(z, PROBE_OFFSET_ZMIN, PROBE_OFFSET_ZMAX))
       offs.z = z;
     else {
-      SERIAL_ECHOLNPGM("?Z out of range (", Z_PROBE_OFFSET_RANGE_MIN, " to ", Z_PROBE_OFFSET_RANGE_MAX, ")");
+      SERIAL_ECHOLNPGM("?Z out of range (", PROBE_OFFSET_ZMIN, " to ", PROBE_OFFSET_ZMAX, ")");
       ok = false;
     }
   }

commit d7fede3a6324cd6b1ec91a9c8e248fce8f0d7cf2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 13:40:01 2021 -0500

    üé® Apply F() to G-code report header

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 7ec326730f..e66392acb4 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -84,7 +84,7 @@ void GcodeSuite::M851() {
 }
 
 void GcodeSuite::M851_report(const bool forReplay/*=true*/) {
-  report_heading_etc(forReplay, PSTR(STR_Z_PROBE_OFFSET));
+  report_heading_etc(forReplay, F(STR_Z_PROBE_OFFSET));
   SERIAL_ECHOPGM_P(
     #if HAS_PROBE_XY_OFFSET
       PSTR("  M851 X"), LINEAR_UNIT(probe.offset_xy.x),

commit 86a6b9316ed16f4726096dfdf7495ee75dada7d4
Author: Manuel McLure <manuel@mclure.org>
Date:   Fri Sep 24 19:08:07 2021 -0700

    üêõ Fix M420 / M851 reports (#22829)
    
    Followup to 79c72ed821

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 5518117946..7ec326730f 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -94,7 +94,7 @@ void GcodeSuite::M851_report(const bool forReplay/*=true*/) {
       PSTR("  M851 X0 Y0 Z")
     #endif
     , LINEAR_UNIT(probe.offset.z)
-    , " ;"
+    , PSTR(" ;")
   );
   say_units();
 }

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index e7261b5a14..5518117946 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -47,11 +47,11 @@ void GcodeSuite::M851() {
       if (WITHIN(x, -(X_BED_SIZE), X_BED_SIZE))
         offs.x = x;
       else {
-        SERIAL_ECHOLNPAIR("?X out of range (-", X_BED_SIZE, " to ", X_BED_SIZE, ")");
+        SERIAL_ECHOLNPGM("?X out of range (-", X_BED_SIZE, " to ", X_BED_SIZE, ")");
         ok = false;
       }
     #else
-      if (x) SERIAL_ECHOLNPAIR("?X must be 0 (NOZZLE_AS_PROBE)."); // ...but let 'ok' stay true
+      if (x) SERIAL_ECHOLNPGM("?X must be 0 (NOZZLE_AS_PROBE)."); // ...but let 'ok' stay true
     #endif
   }
 
@@ -61,11 +61,11 @@ void GcodeSuite::M851() {
       if (WITHIN(y, -(Y_BED_SIZE), Y_BED_SIZE))
         offs.y = y;
       else {
-        SERIAL_ECHOLNPAIR("?Y out of range (-", Y_BED_SIZE, " to ", Y_BED_SIZE, ")");
+        SERIAL_ECHOLNPGM("?Y out of range (-", Y_BED_SIZE, " to ", Y_BED_SIZE, ")");
         ok = false;
       }
     #else
-      if (y) SERIAL_ECHOLNPAIR("?Y must be 0 (NOZZLE_AS_PROBE)."); // ...but let 'ok' stay true
+      if (y) SERIAL_ECHOLNPGM("?Y must be 0 (NOZZLE_AS_PROBE)."); // ...but let 'ok' stay true
     #endif
   }
 
@@ -74,7 +74,7 @@ void GcodeSuite::M851() {
     if (WITHIN(z, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
       offs.z = z;
     else {
-      SERIAL_ECHOLNPAIR("?Z out of range (", Z_PROBE_OFFSET_RANGE_MIN, " to ", Z_PROBE_OFFSET_RANGE_MAX, ")");
+      SERIAL_ECHOLNPGM("?Z out of range (", Z_PROBE_OFFSET_RANGE_MIN, " to ", Z_PROBE_OFFSET_RANGE_MAX, ")");
       ok = false;
     }
   }
@@ -85,7 +85,7 @@ void GcodeSuite::M851() {
 
 void GcodeSuite::M851_report(const bool forReplay/*=true*/) {
   report_heading_etc(forReplay, PSTR(STR_Z_PROBE_OFFSET));
-  SERIAL_ECHOPAIR_P(
+  SERIAL_ECHOPGM_P(
     #if HAS_PROBE_XY_OFFSET
       PSTR("  M851 X"), LINEAR_UNIT(probe.offset_xy.x),
               SP_Y_STR, LINEAR_UNIT(probe.offset_xy.y),

commit 79c72ed821564507b0ef46cbb26f9577585e2ccc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 7 18:06:10 2021 -0500

    üé® Standardize G-code reporting

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index ee6244932e..e7261b5a14 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -32,19 +32,8 @@
  * M851: Set the nozzle-to-probe offsets in current units
  */
 void GcodeSuite::M851() {
-
-  // Show usage with no parameters
-  if (!parser.seen("XYZ")) {
-    SERIAL_ECHOLNPAIR_P(
-      #if HAS_PROBE_XY_OFFSET
-        PSTR(STR_PROBE_OFFSET " X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR
-      #else
-        PSTR(STR_PROBE_OFFSET " X0 Y0 Z")
-      #endif
-      , probe.offset.z
-    );
-    return;
-  }
+  // No parameters? Show current state.
+  if (!parser.seen("XYZ")) return M851_report();
 
   // Start with current offsets and modify
   xyz_pos_t offs = probe.offset;
@@ -94,4 +83,20 @@ void GcodeSuite::M851() {
   if (ok) probe.offset = offs;
 }
 
+void GcodeSuite::M851_report(const bool forReplay/*=true*/) {
+  report_heading_etc(forReplay, PSTR(STR_Z_PROBE_OFFSET));
+  SERIAL_ECHOPAIR_P(
+    #if HAS_PROBE_XY_OFFSET
+      PSTR("  M851 X"), LINEAR_UNIT(probe.offset_xy.x),
+              SP_Y_STR, LINEAR_UNIT(probe.offset_xy.y),
+              SP_Z_STR
+    #else
+      PSTR("  M851 X0 Y0 Z")
+    #endif
+    , LINEAR_UNIT(probe.offset.z)
+    , " ;"
+  );
+  say_units();
+}
+
 #endif // HAS_BED_PROBE

commit e7c711996bd3080f5e343eff5556736cbf2e2416
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Mon Feb 8 07:37:24 2021 +0100

    Serial refactor. Default 8-bit ECHO to int, not char (#20985)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 04b293de31..ee6244932e 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -58,7 +58,7 @@ void GcodeSuite::M851() {
       if (WITHIN(x, -(X_BED_SIZE), X_BED_SIZE))
         offs.x = x;
       else {
-        SERIAL_ECHOLNPAIR("?X out of range (-", int(X_BED_SIZE), " to ", int(X_BED_SIZE), ")");
+        SERIAL_ECHOLNPAIR("?X out of range (-", X_BED_SIZE, " to ", X_BED_SIZE, ")");
         ok = false;
       }
     #else
@@ -72,7 +72,7 @@ void GcodeSuite::M851() {
       if (WITHIN(y, -(Y_BED_SIZE), Y_BED_SIZE))
         offs.y = y;
       else {
-        SERIAL_ECHOLNPAIR("?Y out of range (-", int(Y_BED_SIZE), " to ", int(Y_BED_SIZE), ")");
+        SERIAL_ECHOLNPAIR("?Y out of range (-", Y_BED_SIZE, " to ", Y_BED_SIZE, ")");
         ok = false;
       }
     #else
@@ -85,7 +85,7 @@ void GcodeSuite::M851() {
     if (WITHIN(z, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
       offs.z = z;
     else {
-      SERIAL_ECHOLNPAIR("?Z out of range (", int(Z_PROBE_OFFSET_RANGE_MIN), " to ", int(Z_PROBE_OFFSET_RANGE_MAX), ")");
+      SERIAL_ECHOLNPAIR("?Z out of range (", Z_PROBE_OFFSET_RANGE_MIN, " to ", Z_PROBE_OFFSET_RANGE_MAX, ")");
       ok = false;
     }
   }

commit d33fe2378c25d258b02440aef6cc31e36753f98f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 22 15:01:19 2021 -0600

    Move common strings (#20846)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index ee60e9ebc0..04b293de31 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -28,8 +28,6 @@
 #include "../../feature/bedlevel/bedlevel.h"
 #include "../../module/probe.h"
 
-extern const char SP_Y_STR[], SP_Z_STR[];
-
 /**
  * M851: Set the nozzle-to-probe offsets in current units
  */

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index c2e746cf0b..ee60e9ebc0 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit e78f607ef33044eecde744e77beea87532817c47
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 26 03:02:03 2020 -0600

    Use a STR_ prefix for non-translated strings

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 242ea170a7..c2e746cf0b 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -39,9 +39,9 @@ void GcodeSuite::M851() {
   if (!parser.seen("XYZ")) {
     SERIAL_ECHOLNPAIR_P(
       #if HAS_PROBE_XY_OFFSET
-        PSTR(MSG_PROBE_OFFSET " X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR
+        PSTR(STR_PROBE_OFFSET " X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR
       #else
-        PSTR(MSG_PROBE_OFFSET " X0 Y0 Z")
+        PSTR(STR_PROBE_OFFSET " X0 Y0 Z")
       #endif
       , probe.offset.z
     );

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 2c26ebd2a6..242ea170a7 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 90b6324563b806ea7dc24ddf299f055dc4854341
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 1 04:21:36 2020 -0600

    Encapsulate probe as singleton class (#16751)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index b0a63041fe..2c26ebd2a6 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -39,17 +39,17 @@ void GcodeSuite::M851() {
   if (!parser.seen("XYZ")) {
     SERIAL_ECHOLNPAIR_P(
       #if HAS_PROBE_XY_OFFSET
-        PSTR(MSG_PROBE_OFFSET " X"), probe_offset.x, SP_Y_STR, probe_offset.y, SP_Z_STR
+        PSTR(MSG_PROBE_OFFSET " X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR
       #else
         PSTR(MSG_PROBE_OFFSET " X0 Y0 Z")
       #endif
-      , probe_offset.z
+      , probe.offset.z
     );
     return;
   }
 
   // Start with current offsets and modify
-  xyz_pos_t offs = probe_offset;
+  xyz_pos_t offs = probe.offset;
 
   // Assume no errors
   bool ok = true;
@@ -93,7 +93,7 @@ void GcodeSuite::M851() {
   }
 
   // Save the new offsets
-  if (ok) probe_offset = offs;
+  if (ok) probe.offset = offs;
 }
 
 #endif // HAS_BED_PROBE

commit 3cade6245e851af9a33d1f395758b898c4a06a30
Author: Jason Smith <jason.inet@gmail.com>
Date:   Fri Jan 3 17:46:26 2020 -0600

    Fix MIN_PROBE_EDGE bug in default ABL G29 (#16367)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 431fe6fa09..b0a63041fe 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -37,32 +37,49 @@ void GcodeSuite::M851() {
 
   // Show usage with no parameters
   if (!parser.seen("XYZ")) {
-    SERIAL_ECHOLNPAIR_P(PSTR(MSG_PROBE_OFFSET " X"), probe_offset.x, SP_Y_STR, probe_offset.y, SP_Z_STR, probe_offset.z);
+    SERIAL_ECHOLNPAIR_P(
+      #if HAS_PROBE_XY_OFFSET
+        PSTR(MSG_PROBE_OFFSET " X"), probe_offset.x, SP_Y_STR, probe_offset.y, SP_Z_STR
+      #else
+        PSTR(MSG_PROBE_OFFSET " X0 Y0 Z")
+      #endif
+      , probe_offset.z
+    );
     return;
   }
 
+  // Start with current offsets and modify
   xyz_pos_t offs = probe_offset;
 
+  // Assume no errors
   bool ok = true;
 
   if (parser.seenval('X')) {
     const float x = parser.value_float();
-    if (WITHIN(x, -(X_BED_SIZE), X_BED_SIZE))
-      offs.x = x;
-    else {
-      SERIAL_ECHOLNPAIR("?X out of range (-", int(X_BED_SIZE), " to ", int(X_BED_SIZE), ")");
-      ok = false;
-    }
+    #if HAS_PROBE_XY_OFFSET
+      if (WITHIN(x, -(X_BED_SIZE), X_BED_SIZE))
+        offs.x = x;
+      else {
+        SERIAL_ECHOLNPAIR("?X out of range (-", int(X_BED_SIZE), " to ", int(X_BED_SIZE), ")");
+        ok = false;
+      }
+    #else
+      if (x) SERIAL_ECHOLNPAIR("?X must be 0 (NOZZLE_AS_PROBE)."); // ...but let 'ok' stay true
+    #endif
   }
 
   if (parser.seenval('Y')) {
     const float y = parser.value_float();
-    if (WITHIN(y, -(Y_BED_SIZE), Y_BED_SIZE))
-      offs.y = y;
-    else {
-      SERIAL_ECHOLNPAIR("?Y out of range (-", int(Y_BED_SIZE), " to ", int(Y_BED_SIZE), ")");
-      ok = false;
-    }
+    #if HAS_PROBE_XY_OFFSET
+      if (WITHIN(y, -(Y_BED_SIZE), Y_BED_SIZE))
+        offs.y = y;
+      else {
+        SERIAL_ECHOLNPAIR("?Y out of range (-", int(Y_BED_SIZE), " to ", int(Y_BED_SIZE), ")");
+        ok = false;
+      }
+    #else
+      if (y) SERIAL_ECHOLNPAIR("?Y must be 0 (NOZZLE_AS_PROBE)."); // ...but let 'ok' stay true
+    #endif
   }
 
   if (parser.seenval('Z')) {

commit f83bc0aa13e8cf2d92ec138576cc3a620e74a982
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Nov 29 04:45:07 2019 -0600

    Optimize common strings
    
    Saves 128 bytes in testing with `mftest mega 1 -y`

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 19f96eecd2..431fe6fa09 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -28,6 +28,8 @@
 #include "../../feature/bedlevel/bedlevel.h"
 #include "../../module/probe.h"
 
+extern const char SP_Y_STR[], SP_Z_STR[];
+
 /**
  * M851: Set the nozzle-to-probe offsets in current units
  */
@@ -35,7 +37,7 @@ void GcodeSuite::M851() {
 
   // Show usage with no parameters
   if (!parser.seen("XYZ")) {
-    SERIAL_ECHOLNPAIR(MSG_PROBE_OFFSET " X", probe_offset.x, " Y", probe_offset.y, " Z", probe_offset.z);
+    SERIAL_ECHOLNPAIR_P(PSTR(MSG_PROBE_OFFSET " X"), probe_offset.x, SP_Y_STR, probe_offset.y, SP_Z_STR, probe_offset.z);
     return;
   }
 

commit 50e4545255605eb506c20eb107270038b0fe7bdb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 29 04:25:39 2019 -0500

    Add custom types for position (#15204)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index eec6b2f255..19f96eecd2 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -35,18 +35,18 @@ void GcodeSuite::M851() {
 
   // Show usage with no parameters
   if (!parser.seen("XYZ")) {
-    SERIAL_ECHOLNPAIR(MSG_PROBE_OFFSET " X", probe_offset[X_AXIS], " Y", probe_offset[Y_AXIS], " Z", probe_offset[Z_AXIS]);
+    SERIAL_ECHOLNPAIR(MSG_PROBE_OFFSET " X", probe_offset.x, " Y", probe_offset.y, " Z", probe_offset.z);
     return;
   }
 
-  float offs[XYZ] = { probe_offset[X_AXIS], probe_offset[Y_AXIS], probe_offset[Z_AXIS] };
+  xyz_pos_t offs = probe_offset;
 
   bool ok = true;
 
   if (parser.seenval('X')) {
     const float x = parser.value_float();
     if (WITHIN(x, -(X_BED_SIZE), X_BED_SIZE))
-      offs[X_AXIS] = x;
+      offs.x = x;
     else {
       SERIAL_ECHOLNPAIR("?X out of range (-", int(X_BED_SIZE), " to ", int(X_BED_SIZE), ")");
       ok = false;
@@ -56,7 +56,7 @@ void GcodeSuite::M851() {
   if (parser.seenval('Y')) {
     const float y = parser.value_float();
     if (WITHIN(y, -(Y_BED_SIZE), Y_BED_SIZE))
-      offs[Y_AXIS] = y;
+      offs.y = y;
     else {
       SERIAL_ECHOLNPAIR("?Y out of range (-", int(Y_BED_SIZE), " to ", int(Y_BED_SIZE), ")");
       ok = false;
@@ -66,7 +66,7 @@ void GcodeSuite::M851() {
   if (parser.seenval('Z')) {
     const float z = parser.value_float();
     if (WITHIN(z, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
-      offs[Z_AXIS] = z;
+      offs.z = z;
     else {
       SERIAL_ECHOLNPAIR("?Z out of range (", int(Z_PROBE_OFFSET_RANGE_MIN), " to ", int(Z_PROBE_OFFSET_RANGE_MAX), ")");
       ok = false;
@@ -74,7 +74,7 @@ void GcodeSuite::M851() {
   }
 
   // Save the new offsets
-  if (ok) COPY(probe_offset, offs);
+  if (ok) probe_offset = offs;
 }
 
 #endif // HAS_BED_PROBE

commit 25c4c2f24e72303aeaed2f5de95d265ff5855ce5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 25 08:37:56 2019 -0500

    Fix bool in M851

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 65f984a737..eec6b2f255 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -35,13 +35,13 @@ void GcodeSuite::M851() {
 
   // Show usage with no parameters
   if (!parser.seen("XYZ")) {
-    SERIAL_ECHO_MSG(MSG_PROBE_OFFSET " X", probe_offset[X_AXIS], " Y", probe_offset[Y_AXIS], " Z", probe_offset[Z_AXIS]);
+    SERIAL_ECHOLNPAIR(MSG_PROBE_OFFSET " X", probe_offset[X_AXIS], " Y", probe_offset[Y_AXIS], " Z", probe_offset[Z_AXIS]);
     return;
   }
 
   float offs[XYZ] = { probe_offset[X_AXIS], probe_offset[Y_AXIS], probe_offset[Z_AXIS] };
 
-  const bool ok = true;
+  bool ok = true;
 
   if (parser.seenval('X')) {
     const float x = parser.value_float();

commit da1bda493e0c7472673821e18d039a2ba13200ae
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 25 03:57:08 2019 -0500

    Apply Marlin conventions to M851

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index f750020f36..65f984a737 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -35,36 +35,46 @@ void GcodeSuite::M851() {
 
   // Show usage with no parameters
   if (!parser.seen("XYZ")) {
-    SERIAL_ECHO_START();
-    SERIAL_ECHOLNPAIR(MSG_PROBE_OFFSET " X", probe_offset[X_AXIS],
-                                       " Y", probe_offset[Y_AXIS],
-                                       " Z", probe_offset[Z_AXIS]);
+    SERIAL_ECHO_MSG(MSG_PROBE_OFFSET " X", probe_offset[X_AXIS], " Y", probe_offset[Y_AXIS], " Z", probe_offset[Z_AXIS]);
     return;
   }
 
-  // Get the modified offsets
-  const float offs[] = {
-    parser.floatval('X', probe_offset[X_AXIS]),
-    parser.floatval('Y', probe_offset[Y_AXIS]),
-    parser.floatval('Z', probe_offset[Z_AXIS])
-  };
+  float offs[XYZ] = { probe_offset[X_AXIS], probe_offset[Y_AXIS], probe_offset[Z_AXIS] };
 
-  // Error-check
-  if (!WITHIN(offs[X_AXIS], -(X_BED_SIZE), X_BED_SIZE)) {
-    SERIAL_ERROR_MSG("?X out of range (-" STRINGIFY(X_BED_SIZE) " to " STRINGIFY(X_BED_SIZE) ")");
-    return;
+  const bool ok = true;
+
+  if (parser.seenval('X')) {
+    const float x = parser.value_float();
+    if (WITHIN(x, -(X_BED_SIZE), X_BED_SIZE))
+      offs[X_AXIS] = x;
+    else {
+      SERIAL_ECHOLNPAIR("?X out of range (-", int(X_BED_SIZE), " to ", int(X_BED_SIZE), ")");
+      ok = false;
+    }
   }
-  if (!WITHIN(offs[Y_AXIS], -(Y_BED_SIZE), Y_BED_SIZE)) {
-    SERIAL_ERROR_MSG("?Y out of range (-" STRINGIFY(Y_BED_SIZE) " to " STRINGIFY(Y_BED_SIZE) ")");
-    return;
+
+  if (parser.seenval('Y')) {
+    const float y = parser.value_float();
+    if (WITHIN(y, -(Y_BED_SIZE), Y_BED_SIZE))
+      offs[Y_AXIS] = y;
+    else {
+      SERIAL_ECHOLNPAIR("?Y out of range (-", int(Y_BED_SIZE), " to ", int(Y_BED_SIZE), ")");
+      ok = false;
+    }
   }
-  if (!WITHIN(offs[Z_AXIS], Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX)) {
-    SERIAL_ERROR_MSG("?Z out of range (" STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " to " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX) ")");
-    return;
+
+  if (parser.seenval('Z')) {
+    const float z = parser.value_float();
+    if (WITHIN(z, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
+      offs[Z_AXIS] = z;
+    else {
+      SERIAL_ECHOLNPAIR("?Z out of range (", int(Z_PROBE_OFFSET_RANGE_MIN), " to ", int(Z_PROBE_OFFSET_RANGE_MAX), ")");
+      ok = false;
+    }
   }
 
   // Save the new offsets
-  LOOP_XYZ(a) probe_offset[a] = offs[a];
+  if (ok) COPY(probe_offset, offs);
 }
 
 #endif // HAS_BED_PROBE

commit 4e8d9fe59b53fc5937d907fcf6d79b58233ab6ef
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 24 23:35:49 2019 -0500

    zprobe_offset => probe_offset

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 326f327ff7..f750020f36 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -36,17 +36,17 @@ void GcodeSuite::M851() {
   // Show usage with no parameters
   if (!parser.seen("XYZ")) {
     SERIAL_ECHO_START();
-    SERIAL_ECHOLNPAIR(MSG_PROBE_OFFSET " X", zprobe_offset[X_AXIS],
-                                       " Y", zprobe_offset[Y_AXIS],
-                                       " Z", zprobe_offset[Z_AXIS]);
+    SERIAL_ECHOLNPAIR(MSG_PROBE_OFFSET " X", probe_offset[X_AXIS],
+                                       " Y", probe_offset[Y_AXIS],
+                                       " Z", probe_offset[Z_AXIS]);
     return;
   }
 
   // Get the modified offsets
   const float offs[] = {
-    parser.floatval('X', zprobe_offset[X_AXIS]),
-    parser.floatval('Y', zprobe_offset[Y_AXIS]),
-    parser.floatval('Z', zprobe_offset[Z_AXIS])
+    parser.floatval('X', probe_offset[X_AXIS]),
+    parser.floatval('Y', probe_offset[Y_AXIS]),
+    parser.floatval('Z', probe_offset[Z_AXIS])
   };
 
   // Error-check
@@ -64,7 +64,7 @@ void GcodeSuite::M851() {
   }
 
   // Save the new offsets
-  LOOP_XYZ(a) zprobe_offset[a] = offs[a];
+  LOOP_XYZ(a) probe_offset[a] = offs[a];
 }
 
 #endif // HAS_BED_PROBE

commit df1e51258a8bcc432deed9f5bd60df41a75b2c32
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Sep 24 22:29:21 2019 -0400

    Add M851 X Y probe offsets (#15202)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 6ab53f9f77..326f327ff7 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -28,17 +28,43 @@
 #include "../../feature/bedlevel/bedlevel.h"
 #include "../../module/probe.h"
 
+/**
+ * M851: Set the nozzle-to-probe offsets in current units
+ */
 void GcodeSuite::M851() {
-  if (parser.seenval('Z')) {
-    const float value = parser.value_linear_units();
-    if (WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
-      zprobe_zoffset = value;
-    else
-      SERIAL_ERROR_MSG("?Z out of range (" STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " to " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX) ")");
+
+  // Show usage with no parameters
+  if (!parser.seen("XYZ")) {
+    SERIAL_ECHO_START();
+    SERIAL_ECHOLNPAIR(MSG_PROBE_OFFSET " X", zprobe_offset[X_AXIS],
+                                       " Y", zprobe_offset[Y_AXIS],
+                                       " Z", zprobe_offset[Z_AXIS]);
+    return;
+  }
+
+  // Get the modified offsets
+  const float offs[] = {
+    parser.floatval('X', zprobe_offset[X_AXIS]),
+    parser.floatval('Y', zprobe_offset[Y_AXIS]),
+    parser.floatval('Z', zprobe_offset[Z_AXIS])
+  };
+
+  // Error-check
+  if (!WITHIN(offs[X_AXIS], -(X_BED_SIZE), X_BED_SIZE)) {
+    SERIAL_ERROR_MSG("?X out of range (-" STRINGIFY(X_BED_SIZE) " to " STRINGIFY(X_BED_SIZE) ")");
+    return;
+  }
+  if (!WITHIN(offs[Y_AXIS], -(Y_BED_SIZE), Y_BED_SIZE)) {
+    SERIAL_ERROR_MSG("?Y out of range (-" STRINGIFY(Y_BED_SIZE) " to " STRINGIFY(Y_BED_SIZE) ")");
     return;
   }
-  SERIAL_ECHO_START();
-  SERIAL_ECHOLNPAIR(MSG_PROBE_Z_OFFSET ": ", zprobe_zoffset);
+  if (!WITHIN(offs[Z_AXIS], Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX)) {
+    SERIAL_ERROR_MSG("?Z out of range (" STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " to " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX) ")");
+    return;
+  }
+
+  // Save the new offsets
+  LOOP_XYZ(a) zprobe_offset[a] = offs[a];
 }
 
 #endif // HAS_BED_PROBE

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 9bc310cd8c..6ab53f9f77 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 8cb5f0e446..9bc310cd8c 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit c98623983774b9773800bc7dcef695c4bad81c0e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 29 16:58:58 2018 -0600

    A single SERIAL_ECHO macro type (#12557)

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 7699b5b5de..8cb5f0e446 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -32,18 +32,13 @@ void GcodeSuite::M851() {
   if (parser.seenval('Z')) {
     const float value = parser.value_linear_units();
     if (WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
-    {
       zprobe_zoffset = value;
-    }
-    else {
-      SERIAL_ERROR_START();
-      SERIAL_ERRORLNPGM("?Z out of range (" STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " to " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX) ")");
-    }
+    else
+      SERIAL_ERROR_MSG("?Z out of range (" STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " to " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX) ")");
     return;
   }
   SERIAL_ECHO_START();
-  SERIAL_ECHOPGM(MSG_PROBE_Z_OFFSET);
-  SERIAL_ECHOLNPAIR(": ", zprobe_zoffset);
+  SERIAL_ECHOLNPAIR(MSG_PROBE_Z_OFFSET ": ", zprobe_zoffset);
 }
 
 #endif // HAS_BED_PROBE

commit 1104054d7347668a61e90fb6216e22afae2ef9f3
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Sep 24 10:40:48 2018 -0400

    2.0 IDEX Independent z offset and other fixes (#11862)
    
    * Add Formbot Raptor board
    
    Co-Authored-By: InsanityAutomation <insanityautomation@users.noreply.github.com>
    
    * Add a second Z probe Z offset
    
    Co-Authored-By: InsanityAutomation <insanityautomation@users.noreply.github.com>
    
    * Modify method to utilize live adjustment of hotend z offset
    
    Should probably move config option to babystepping and rename as it may now apply to all multiextruder systems
    
    * Move config item and catchup other code to current method

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 36f7162371..7699b5b5de 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -32,7 +32,9 @@ void GcodeSuite::M851() {
   if (parser.seenval('Z')) {
     const float value = parser.value_linear_units();
     if (WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
+    {
       zprobe_zoffset = value;
+    }
     else {
       SERIAL_ERROR_START();
       SERIAL_ERRORLNPGM("?Z out of range (" STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " to " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX) ")");

commit bf9fc8ac0e4220ae47b134a65f8d53ae561ee20e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 5 02:07:52 2018 -0600

    M851 - report only without parameters

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 3f252f3042..36f7162371 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -29,16 +29,18 @@
 #include "../../module/probe.h"
 
 void GcodeSuite::M851() {
-  SERIAL_ECHO_START();
-  SERIAL_ECHOPGM(MSG_PROBE_Z_OFFSET);
-  if (parser.seen('Z')) {
+  if (parser.seenval('Z')) {
     const float value = parser.value_linear_units();
-    if (!WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX)) {
-      SERIAL_ECHOLNPGM(" " MSG_Z_MIN " " STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " " MSG_Z_MAX " " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX));
-      return;
+    if (WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX))
+      zprobe_zoffset = value;
+    else {
+      SERIAL_ERROR_START();
+      SERIAL_ERRORLNPGM("?Z out of range (" STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " to " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX) ")");
     }
-    zprobe_zoffset = value;
+    return;
   }
+  SERIAL_ECHO_START();
+  SERIAL_ECHOPGM(MSG_PROBE_Z_OFFSET);
   SERIAL_ECHOLNPAIR(": ", zprobe_zoffset);
 }
 

commit be00e421a76cc82a3e68cf801e211b0f450ea393
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 25 14:00:39 2017 -0600

    Patch up M290, M851

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 5a84b634bc..3f252f3042 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -30,20 +30,16 @@
 
 void GcodeSuite::M851() {
   SERIAL_ECHO_START();
-  SERIAL_ECHOPGM(MSG_ZPROBE_ZOFFSET " ");
+  SERIAL_ECHOPGM(MSG_PROBE_Z_OFFSET);
   if (parser.seen('Z')) {
     const float value = parser.value_linear_units();
-    if (WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX)) {
-      zprobe_zoffset = value;
-      SERIAL_ECHO(zprobe_zoffset);
+    if (!WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX)) {
+      SERIAL_ECHOLNPGM(" " MSG_Z_MIN " " STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " " MSG_Z_MAX " " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX));
+      return;
     }
-    else
-      SERIAL_ECHOPGM(MSG_Z_MIN " " STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " " MSG_Z_MAX " " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX));
+    zprobe_zoffset = value;
   }
-  else
-    SERIAL_ECHOPAIR(": ", zprobe_zoffset);
-
-  SERIAL_EOL();
+  SERIAL_ECHOLNPAIR(": ", zprobe_zoffset);
 }
 
 #endif // HAS_BED_PROBE

commit 3bba7d60f352c7da638bc1fb65b279cd972d9b79
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 16 16:53:55 2017 -0600

    No retroactive changes with M851 Z
    
    If using babystep to adjust the Z probe offset, the axis will move and the mesh will be updated at the same time, causing a doubling of the Z offset over the rest of the print.
    
    To correct for this, the current Z position would need to be modified in the opposite direction, canceling out the additional Z offset added to the mesh. This would be confusing to users, and moreover it would not be accurate without also taking the current Z fade level and current Z height into account.
    
    It might make sense to change the mesh in the case where no babystepping is taking place, but this could be considered an undesirable side-effect of changing the `zprobe_zoffset`.
    
    One way to remedy this would be to return to storing the mesh with `zprobe_zoffset` included, then subtracting `zprobe_zoffset` from the returned Z value. Thus, a babystep moving the Z axis up 1mm would subtract 1 from `zprobe_zoffset` while adding 1 to all mesh Z values.
    
    Without including the `zprobe_zoffset` in the `z_values` there is no safe way to alter the mesh in conjunction with babystepping, although it's fine without it.

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
index 6aea1f1583..5a84b634bc 100644
--- a/Marlin/src/gcode/probe/M851.cpp
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -35,7 +35,6 @@ void GcodeSuite::M851() {
     const float value = parser.value_linear_units();
     if (WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX)) {
       zprobe_zoffset = value;
-      refresh_zprobe_zoffset();
       SERIAL_ECHO(zprobe_zoffset);
     }
     else

commit 551752eac73a6f60de45b6465e2f224b2b2dca24
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 8 15:35:25 2017 -0500

    Consolidate "bedlevel" code

diff --git a/Marlin/src/gcode/probe/M851.cpp b/Marlin/src/gcode/probe/M851.cpp
new file mode 100644
index 0000000000..6aea1f1583
--- /dev/null
+++ b/Marlin/src/gcode/probe/M851.cpp
@@ -0,0 +1,50 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../inc/MarlinConfig.h"
+
+#if HAS_BED_PROBE
+
+#include "../gcode.h"
+#include "../../feature/bedlevel/bedlevel.h"
+#include "../../module/probe.h"
+
+void GcodeSuite::M851() {
+  SERIAL_ECHO_START();
+  SERIAL_ECHOPGM(MSG_ZPROBE_ZOFFSET " ");
+  if (parser.seen('Z')) {
+    const float value = parser.value_linear_units();
+    if (WITHIN(value, Z_PROBE_OFFSET_RANGE_MIN, Z_PROBE_OFFSET_RANGE_MAX)) {
+      zprobe_zoffset = value;
+      refresh_zprobe_zoffset();
+      SERIAL_ECHO(zprobe_zoffset);
+    }
+    else
+      SERIAL_ECHOPGM(MSG_Z_MIN " " STRINGIFY(Z_PROBE_OFFSET_RANGE_MIN) " " MSG_Z_MAX " " STRINGIFY(Z_PROBE_OFFSET_RANGE_MAX));
+  }
+  else
+    SERIAL_ECHOPAIR(": ", zprobe_zoffset);
+
+  SERIAL_EOL();
+}
+
+#endif // HAS_BED_PROBE
