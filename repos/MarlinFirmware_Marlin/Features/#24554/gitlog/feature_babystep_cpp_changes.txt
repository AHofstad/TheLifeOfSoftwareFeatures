commit 45193b4a1d82023f1b763c0340e40ec5b6fcc51c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 19 21:12:32 2023 -0500

    üî• Always use ISR for BABYSTEPPING (#26035)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index e431e40165..c6717268a6 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -66,7 +66,7 @@ void Babystep::add_mm(const AxisEnum axis, const_float_t mm) {
     steps[BS_AXIS_IND(axis)] = distance;
     TERN_(BABYSTEP_DISPLAY_TOTAL, axis_total[BS_TOTAL_IND(axis)] = distance);
     TERN_(BABYSTEP_ALWAYS_AVAILABLE, gcode.reset_stepper_timeout());
-    TERN_(INTEGRATED_BABYSTEPPING, if (has_steps()) stepper.initiateBabystepping());
+    TERN_(BABYSTEPPING, if (has_steps()) stepper.initiateBabystepping());
   }
 #endif
 
@@ -77,7 +77,7 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
   steps[BS_AXIS_IND(axis)] += distance;
   TERN_(BABYSTEP_DISPLAY_TOTAL, axis_total[BS_TOTAL_IND(axis)] += distance);
   TERN_(BABYSTEP_ALWAYS_AVAILABLE, gcode.reset_stepper_timeout());
-  TERN_(INTEGRATED_BABYSTEPPING, if (has_steps()) stepper.initiateBabystepping());
+  TERN_(BABYSTEPPING, if (has_steps()) stepper.initiateBabystepping());
 }
 
 #if ENABLED(EP_BABYSTEPPING)

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index c8c1d42f88..e431e40165 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -42,7 +42,7 @@ volatile int16_t Babystep::steps[BS_AXIS_IND(Z_AXIS) + 1];
 #endif
 int16_t Babystep::accum;
 
-#if BOTH(EP_BABYSTEPPING, EMERGENCY_PARSER)
+#if ALL(EP_BABYSTEPPING, EMERGENCY_PARSER)
   int16_t Babystep::ep_babysteps;
 #endif
 

commit 772e19aab988b5d6466bdf2e8948c8c7eee3cafd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 22:10:40 2023 -0500

    ‚ú® EP_BABYSTEPPING (#25869)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 2e3d6a9fd2..c8c1d42f88 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -26,7 +26,7 @@
 
 #include "babystep.h"
 #include "../MarlinCore.h"
-#include "../module/motion.h"   // for axes_should_home()
+#include "../module/motion.h"   // for axes_should_home(), BABYSTEP_ALLOWED
 #include "../module/planner.h"  // for axis_steps_per_mm[]
 #include "../module/stepper.h"
 
@@ -42,6 +42,10 @@ volatile int16_t Babystep::steps[BS_AXIS_IND(Z_AXIS) + 1];
 #endif
 int16_t Babystep::accum;
 
+#if BOTH(EP_BABYSTEPPING, EMERGENCY_PARSER)
+  int16_t Babystep::ep_babysteps;
+#endif
+
 void Babystep::step_axis(const AxisEnum axis) {
   const int16_t curTodo = steps[BS_AXIS_IND(axis)]; // get rid of volatile for performance
   if (curTodo) {
@@ -76,4 +80,10 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
   TERN_(INTEGRATED_BABYSTEPPING, if (has_steps()) stepper.initiateBabystepping());
 }
 
+#if ENABLED(EP_BABYSTEPPING)
+  // Step Z for M293 / M294
+  void Babystep::z_up()   { if (BABYSTEP_ALLOWED()) add_steps(Z_AXIS, +BABYSTEP_SIZE_Z); }
+  void Babystep::z_down() { if (BABYSTEP_ALLOWED()) add_steps(Z_AXIS, -BABYSTEP_SIZE_Z); }
+#endif
+
 #endif // BABYSTEPPING

commit 83320f1052dd09bff7aae789372e7bffccbced97
Author: Mark <niujl123@sina.com>
Date:   Sat Aug 6 14:14:58 2022 +0800

    ‚ú® Bed Distance Sensor (#24554)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 54ad9588f4..2e3d6a9fd2 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -54,6 +54,18 @@ void Babystep::add_mm(const AxisEnum axis, const_float_t mm) {
   add_steps(axis, mm * planner.settings.axis_steps_per_mm[axis]);
 }
 
+#if ENABLED(BD_SENSOR)
+  void Babystep::set_mm(const AxisEnum axis, const_float_t mm) {
+    //if (DISABLED(BABYSTEP_WITHOUT_HOMING) && axes_should_home(_BV(axis))) return;
+    const int16_t distance = mm * planner.settings.axis_steps_per_mm[axis];
+    accum = distance; // Count up babysteps for the UI
+    steps[BS_AXIS_IND(axis)] = distance;
+    TERN_(BABYSTEP_DISPLAY_TOTAL, axis_total[BS_TOTAL_IND(axis)] = distance);
+    TERN_(BABYSTEP_ALWAYS_AVAILABLE, gcode.reset_stepper_timeout());
+    TERN_(INTEGRATED_BABYSTEPPING, if (has_steps()) stepper.initiateBabystepping());
+  }
+#endif
+
 void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
   if (DISABLED(BABYSTEP_WITHOUT_HOMING) && axes_should_home(_BV(axis))) return;
 

commit 62f37669dc506a6e579389ca549ce5993548944d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Apr 1 17:59:57 2021 -0500

    Replace 'const float &' with 'const_float_t' (#21505)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index b076881461..54ad9588f4 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -50,7 +50,7 @@ void Babystep::step_axis(const AxisEnum axis) {
   }
 }
 
-void Babystep::add_mm(const AxisEnum axis, const float &mm) {
+void Babystep::add_mm(const AxisEnum axis, const_float_t mm) {
   add_steps(axis, mm * planner.settings.axis_steps_per_mm[axis]);
 }
 

commit a12ac5e1754f0f66babde400a0406b6cdbff983e
Author: swissnorp <67485708+swissnorp@users.noreply.github.com>
Date:   Thu Aug 27 23:05:53 2020 +0200

    Mark axes not-homed with HOME_AFTER_DEACTIVATE (#18907)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 41d0a9cb1e..b076881461 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -26,7 +26,8 @@
 
 #include "babystep.h"
 #include "../MarlinCore.h"
-#include "../module/planner.h"
+#include "../module/motion.h"   // for axes_should_home()
+#include "../module/planner.h"  // for axis_steps_per_mm[]
 #include "../module/stepper.h"
 
 #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
@@ -54,7 +55,7 @@ void Babystep::add_mm(const AxisEnum axis, const float &mm) {
 }
 
 void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
-  if (DISABLED(BABYSTEP_WITHOUT_HOMING) && !TEST(axis_known_position, axis)) return;
+  if (DISABLED(BABYSTEP_WITHOUT_HOMING) && axes_should_home(_BV(axis))) return;
 
   accum += distance; // Count up babysteps for the UI
   steps[BS_AXIS_IND(axis)] += distance;

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 7e621a4dc8..41d0a9cb1e 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit 8e20691f423cca37e5b0f4ee301f6b4002a269c5
Author: brian park <gouache95@gmail.com>
Date:   Fri Jun 19 05:28:52 2020 +0900

    Fix Core axis babystepping (#18342)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 9c5bba95fc..7e621a4dc8 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -54,60 +54,12 @@ void Babystep::add_mm(const AxisEnum axis, const float &mm) {
 }
 
 void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
-
   if (DISABLED(BABYSTEP_WITHOUT_HOMING) && !TEST(axis_known_position, axis)) return;
 
   accum += distance; // Count up babysteps for the UI
+  steps[BS_AXIS_IND(axis)] += distance;
   TERN_(BABYSTEP_DISPLAY_TOTAL, axis_total[BS_TOTAL_IND(axis)] += distance);
-
-  #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
-    #define BSA_ENABLE(AXIS) do{ switch (AXIS) { case X_AXIS: ENABLE_AXIS_X(); break; case Y_AXIS: ENABLE_AXIS_Y(); break; case Z_AXIS: ENABLE_AXIS_Z(); break; default: break; } }while(0)
-  #else
-    #define BSA_ENABLE(AXIS) NOOP
-  #endif
-
-  #if IS_CORE
-    #if ENABLED(BABYSTEP_XY)
-      switch (axis) {
-        case CORE_AXIS_1: // X on CoreXY and CoreXZ, Y on CoreYZ
-          BSA_ENABLE(CORE_AXIS_1);
-          BSA_ENABLE(CORE_AXIS_2);
-          steps[CORE_AXIS_1] += distance * 2;
-          steps[CORE_AXIS_2] += distance * 2;
-          break;
-        case CORE_AXIS_2: // Y on CoreXY, Z on CoreXZ and CoreYZ
-          BSA_ENABLE(CORE_AXIS_1);
-          BSA_ENABLE(CORE_AXIS_2);
-          steps[CORE_AXIS_1] += CORESIGN(distance * 2);
-          steps[CORE_AXIS_2] -= CORESIGN(distance * 2);
-          break;
-        case NORMAL_AXIS: // Z on CoreXY, Y on CoreXZ, X on CoreYZ
-        default:
-          BSA_ENABLE(NORMAL_AXIS);
-          steps[NORMAL_AXIS] += distance;
-          break;
-      }
-    #elif CORE_IS_XZ || CORE_IS_YZ
-      // Only Z stepping needs to be handled here
-      BSA_ENABLE(CORE_AXIS_1);
-      BSA_ENABLE(CORE_AXIS_2);
-      steps[CORE_AXIS_1] += CORESIGN(distance * 2);
-      steps[CORE_AXIS_2] -= CORESIGN(distance * 2);
-    #else
-      BSA_ENABLE(Z_AXIS);
-      steps[Z_AXIS] += distance;
-    #endif
-  #else
-    #if ENABLED(BABYSTEP_XY)
-      BSA_ENABLE(axis);
-    #else
-      BSA_ENABLE(Z_AXIS);
-    #endif
-    steps[BS_AXIS_IND(axis)] += distance;
-  #endif
-
   TERN_(BABYSTEP_ALWAYS_AVAILABLE, gcode.reset_stepper_timeout());
-
   TERN_(INTEGRATED_BABYSTEPPING, if (has_steps()) stepper.initiateBabystepping());
 }
 

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 5d2dc47bee..9c5bba95fc 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -58,9 +58,7 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
   if (DISABLED(BABYSTEP_WITHOUT_HOMING) && !TEST(axis_known_position, axis)) return;
 
   accum += distance; // Count up babysteps for the UI
-  #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
-    axis_total[BS_TOTAL_IND(axis)] += distance;
-  #endif
+  TERN_(BABYSTEP_DISPLAY_TOTAL, axis_total[BS_TOTAL_IND(axis)] += distance);
 
   #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
     #define BSA_ENABLE(AXIS) do{ switch (AXIS) { case X_AXIS: ENABLE_AXIS_X(); break; case Y_AXIS: ENABLE_AXIS_Y(); break; case Z_AXIS: ENABLE_AXIS_Z(); break; default: break; } }while(0)
@@ -107,13 +105,10 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
     #endif
     steps[BS_AXIS_IND(axis)] += distance;
   #endif
-  #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
-    gcode.reset_stepper_timeout();
-  #endif
 
-  #if ENABLED(INTEGRATED_BABYSTEPPING)
-    if (has_steps()) stepper.initiateBabystepping();
-  #endif
+  TERN_(BABYSTEP_ALWAYS_AVAILABLE, gcode.reset_stepper_timeout());
+
+  TERN_(INTEGRATED_BABYSTEPPING, if (has_steps()) stepper.initiateBabystepping());
 }
 
 #endif // BABYSTEPPING

commit 64d092935b27ff89955f0430eef5815b15e5a92d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 7 22:20:41 2020 -0600

    More useful ENABLED / DISABLED macros (#17054)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index bf9e9a78b5..5d2dc47bee 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -55,14 +55,7 @@ void Babystep::add_mm(const AxisEnum axis, const float &mm) {
 
 void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
 
-  #if ENABLED(BABYSTEP_WITHOUT_HOMING)
-    #define CAN_BABYSTEP(AXIS) true
-  #else
-    extern uint8_t axis_known_position;
-    #define CAN_BABYSTEP(AXIS) TEST(axis_known_position, AXIS)
-  #endif
-
-  if (!CAN_BABYSTEP(axis)) return;
+  if (DISABLED(BABYSTEP_WITHOUT_HOMING) && !TEST(axis_known_position, axis)) return;
 
   accum += distance; // Count up babysteps for the UI
   #if ENABLED(BABYSTEP_DISPLAY_TOTAL)

commit a254354e687a781d5cb27094374cc5c436cf98ee
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 24 06:11:31 2020 -0600

    BS_TOTAL_AXIS => BS_TOTAL_IND

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 25552a701c..bf9e9a78b5 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -37,7 +37,7 @@ Babystep babystep;
 
 volatile int16_t Babystep::steps[BS_AXIS_IND(Z_AXIS) + 1];
 #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
-  int16_t Babystep::axis_total[BS_TOTAL_AXIS(Z_AXIS) + 1];
+  int16_t Babystep::axis_total[BS_TOTAL_IND(Z_AXIS) + 1];
 #endif
 int16_t Babystep::accum;
 
@@ -66,7 +66,7 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
 
   accum += distance; // Count up babysteps for the UI
   #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
-    axis_total[BS_TOTAL_AXIS(axis)] += distance;
+    axis_total[BS_TOTAL_IND(axis)] += distance;
   #endif
 
   #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)

commit 5e197df89af624d556b75c4881aacd1ab57e861d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 24 05:29:13 2020 -0600

    Fix Babystepping loop (again)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index fd4491bc6f..25552a701c 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -35,17 +35,17 @@
 
 Babystep babystep;
 
-volatile int16_t Babystep::steps[BS_TODO_AXIS(Z_AXIS) + 1];
+volatile int16_t Babystep::steps[BS_AXIS_IND(Z_AXIS) + 1];
 #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
   int16_t Babystep::axis_total[BS_TOTAL_AXIS(Z_AXIS) + 1];
 #endif
 int16_t Babystep::accum;
 
 void Babystep::step_axis(const AxisEnum axis) {
-  const int16_t curTodo = steps[BS_TODO_AXIS(axis)]; // get rid of volatile for performance
+  const int16_t curTodo = steps[BS_AXIS_IND(axis)]; // get rid of volatile for performance
   if (curTodo) {
     stepper.do_babystep((AxisEnum)axis, curTodo > 0);
-    if (curTodo > 0) steps[BS_TODO_AXIS(axis)]--; else steps[BS_TODO_AXIS(axis)]++;
+    if (curTodo > 0) steps[BS_AXIS_IND(axis)]--; else steps[BS_AXIS_IND(axis)]++;
   }
 }
 
@@ -112,7 +112,7 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
     #else
       BSA_ENABLE(Z_AXIS);
     #endif
-    steps[BS_TODO_AXIS(axis)] += distance;
+    steps[BS_AXIS_IND(axis)] += distance;
   #endif
   #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
     gcode.reset_stepper_timeout();

commit 99a50743727e2076c19d8f9469090c3ddd6f9a93
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 16 17:46:41 2020 -0600

    Fix babystep include, typos in stepper.cpp
    
    Fix #16881

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index be2d1b0d2e..fd4491bc6f 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -44,7 +44,7 @@ int16_t Babystep::accum;
 void Babystep::step_axis(const AxisEnum axis) {
   const int16_t curTodo = steps[BS_TODO_AXIS(axis)]; // get rid of volatile for performance
   if (curTodo) {
-    stepper.babystep((AxisEnum)axis, curTodo > 0);
+    stepper.do_babystep((AxisEnum)axis, curTodo > 0);
     if (curTodo > 0) steps[BS_TODO_AXIS(axis)]--; else steps[BS_TODO_AXIS(axis)]++;
   }
 }

commit 64a81f887a3b9fd471484dba784e11bdba88ffbb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 15 21:42:28 2020 -0600

    EXPERIMENTAL integrated BABYSTEPPING (#16829)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index eedd8f6196..be2d1b0d2e 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -117,6 +117,10 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
   #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
     gcode.reset_stepper_timeout();
   #endif
+
+  #if ENABLED(INTEGRATED_BABYSTEPPING)
+    if (has_steps()) stepper.initiateBabystepping();
+  #endif
 }
 
 #endif // BABYSTEPPING

commit 0b984519c30f453fdb5b4efb8008a07c69688824
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Feb 14 05:14:37 2020 -0600

    Clean up stepper and babystep (#16857)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index c6e7628a15..eedd8f6196 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -49,14 +49,6 @@ void Babystep::step_axis(const AxisEnum axis) {
   }
 }
 
-void Babystep::task() {
-  #if EITHER(BABYSTEP_XY, I2C_POSITION_ENCODERS)
-    LOOP_XYZ(axis) step_axis((AxisEnum)axis);
-  #else
-    step_axis(Z_AXIS);
-  #endif
-}
-
 void Babystep::add_mm(const AxisEnum axis, const float &mm) {
   add_steps(axis, mm * planner.settings.axis_steps_per_mm[axis]);
 }

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 0b08f8ae41..c6e7628a15 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 50889c0f94778c378357bcc4d4a966fa869bc5c1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jan 30 03:24:23 2020 -0600

    Move L64XX index_to_axis to progmem (#16697)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 510950095f..0b08f8ae41 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -78,7 +78,7 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
   #endif
 
   #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
-    #define BSA_ENABLE(AXIS) do{ switch (AXIS) { case X_AXIS: enable_X(); break; case Y_AXIS: enable_Y(); break; case Z_AXIS: enable_Z(); break; default: break; } }while(0)
+    #define BSA_ENABLE(AXIS) do{ switch (AXIS) { case X_AXIS: ENABLE_AXIS_X(); break; case Y_AXIS: ENABLE_AXIS_Y(); break; case Z_AXIS: ENABLE_AXIS_Z(); break; default: break; } }while(0)
   #else
     #define BSA_ENABLE(AXIS) NOOP
   #endif

commit d0e1166cce60381fbdad1105d13765806a525d99
Author: Dirk O. Kaar <19971886+dok-net@users.noreply.github.com>
Date:   Fri Jan 3 02:01:38 2020 +0100

    Fix Visual Micro "Arduino IDE for Visual Studio" support (#16418)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 1fc2499110..510950095f 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -25,7 +25,7 @@
 #if ENABLED(BABYSTEPPING)
 
 #include "babystep.h"
-#include "../Marlin.h"
+#include "../MarlinCore.h"
 #include "../module/planner.h"
 #include "../module/stepper.h"
 

commit 0ca6abce72415c500713714e47980423e9b20b47
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sat Sep 28 17:58:48 2019 -0400

    Add reporting to M290 (#15376)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index e16912d69e..1fc2499110 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -36,13 +36,10 @@
 Babystep babystep;
 
 volatile int16_t Babystep::steps[BS_TODO_AXIS(Z_AXIS) + 1];
-
-#if HAS_LCD_MENU || ENABLED(EXTENSIBLE_UI)
-  int16_t Babystep::accum;
-  #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
-    int16_t Babystep::axis_total[BS_TOTAL_AXIS(Z_AXIS) + 1];
-  #endif
+#if ENABLED(BABYSTEP_DISPLAY_TOTAL)
+  int16_t Babystep::axis_total[BS_TOTAL_AXIS(Z_AXIS) + 1];
 #endif
+int16_t Babystep::accum;
 
 void Babystep::step_axis(const AxisEnum axis) {
   const int16_t curTodo = steps[BS_TODO_AXIS(axis)]; // get rid of volatile for performance
@@ -75,11 +72,9 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
 
   if (!CAN_BABYSTEP(axis)) return;
 
-  #if HAS_LCD_MENU || ENABLED(EXTENSIBLE_UI)
-    accum += distance; // Count up babysteps for the UI
-    #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
-      axis_total[BS_TOTAL_AXIS(axis)] += distance;
-    #endif
+  accum += distance; // Count up babysteps for the UI
+  #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
+    axis_total[BS_TOTAL_AXIS(axis)] += distance;
   #endif
 
   #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)

commit d63e0f6d986391ab6965665170bbfea53c876642
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 16 15:01:46 2019 -0500

    Pending refactor tweaks

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 41d7e80075..e16912d69e 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -35,7 +35,7 @@
 
 Babystep babystep;
 
-volatile int16_t Babystep::todo[BS_TODO_AXIS(Z_AXIS) + 1];
+volatile int16_t Babystep::steps[BS_TODO_AXIS(Z_AXIS) + 1];
 
 #if HAS_LCD_MENU || ENABLED(EXTENSIBLE_UI)
   int16_t Babystep::accum;
@@ -45,10 +45,10 @@ volatile int16_t Babystep::todo[BS_TODO_AXIS(Z_AXIS) + 1];
 #endif
 
 void Babystep::step_axis(const AxisEnum axis) {
-  const int16_t curTodo = todo[BS_TODO_AXIS(axis)]; // get rid of volatile for performance
+  const int16_t curTodo = steps[BS_TODO_AXIS(axis)]; // get rid of volatile for performance
   if (curTodo) {
     stepper.babystep((AxisEnum)axis, curTodo > 0);
-    if (curTodo > 0) todo[BS_TODO_AXIS(axis)]--; else todo[BS_TODO_AXIS(axis)]++;
+    if (curTodo > 0) steps[BS_TODO_AXIS(axis)]--; else steps[BS_TODO_AXIS(axis)]++;
   }
 }
 
@@ -94,30 +94,30 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
         case CORE_AXIS_1: // X on CoreXY and CoreXZ, Y on CoreYZ
           BSA_ENABLE(CORE_AXIS_1);
           BSA_ENABLE(CORE_AXIS_2);
-          todo[CORE_AXIS_1] += distance * 2;
-          todo[CORE_AXIS_2] += distance * 2;
+          steps[CORE_AXIS_1] += distance * 2;
+          steps[CORE_AXIS_2] += distance * 2;
           break;
         case CORE_AXIS_2: // Y on CoreXY, Z on CoreXZ and CoreYZ
           BSA_ENABLE(CORE_AXIS_1);
           BSA_ENABLE(CORE_AXIS_2);
-          todo[CORE_AXIS_1] += CORESIGN(distance * 2);
-          todo[CORE_AXIS_2] -= CORESIGN(distance * 2);
+          steps[CORE_AXIS_1] += CORESIGN(distance * 2);
+          steps[CORE_AXIS_2] -= CORESIGN(distance * 2);
           break;
         case NORMAL_AXIS: // Z on CoreXY, Y on CoreXZ, X on CoreYZ
         default:
           BSA_ENABLE(NORMAL_AXIS);
-          todo[NORMAL_AXIS] += distance;
+          steps[NORMAL_AXIS] += distance;
           break;
       }
     #elif CORE_IS_XZ || CORE_IS_YZ
       // Only Z stepping needs to be handled here
       BSA_ENABLE(CORE_AXIS_1);
       BSA_ENABLE(CORE_AXIS_2);
-      todo[CORE_AXIS_1] += CORESIGN(distance * 2);
-      todo[CORE_AXIS_2] -= CORESIGN(distance * 2);
+      steps[CORE_AXIS_1] += CORESIGN(distance * 2);
+      steps[CORE_AXIS_2] -= CORESIGN(distance * 2);
     #else
       BSA_ENABLE(Z_AXIS);
-      todo[Z_AXIS] += distance;
+      steps[Z_AXIS] += distance;
     #endif
   #else
     #if ENABLED(BABYSTEP_XY)
@@ -125,7 +125,7 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
     #else
       BSA_ENABLE(Z_AXIS);
     #endif
-    todo[BS_TODO_AXIS(axis)] += distance;
+    steps[BS_TODO_AXIS(axis)] += distance;
   #endif
   #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
     gcode.reset_stepper_timeout();

commit f218405c36d03094f00d867fcebec07072ba7d44
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Aug 25 05:46:02 2019 -0400

    Fix ExtUI invalid speed, timer (#15031)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index eb6ed046a4..41d7e80075 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -37,7 +37,7 @@ Babystep babystep;
 
 volatile int16_t Babystep::todo[BS_TODO_AXIS(Z_AXIS) + 1];
 
-#if HAS_LCD_MENU
+#if HAS_LCD_MENU || ENABLED(EXTENSIBLE_UI)
   int16_t Babystep::accum;
   #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
     int16_t Babystep::axis_total[BS_TOTAL_AXIS(Z_AXIS) + 1];
@@ -75,7 +75,7 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
 
   if (!CAN_BABYSTEP(axis)) return;
 
-  #if HAS_LCD_MENU
+  #if HAS_LCD_MENU || ENABLED(EXTENSIBLE_UI)
     accum += distance; // Count up babysteps for the UI
     #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
       axis_total[BS_TOTAL_AXIS(axis)] += distance;

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index bcf4e4bbb9..eb6ed046a4 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 84ac5b360bb221deafb75fd8a1f773658410d79e
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Fri May 17 21:37:23 2019 -0400

    Fix ExtUI mesh functions (#14027)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index 0f0b64295d..bcf4e4bbb9 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -83,7 +83,7 @@ void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
   #endif
 
   #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
-    #define BSA_ENABLE(AXIS) do{ switch (AXIS) { case X_AXIS: enable_X(); break; case Y_AXIS: enable_Y(); break; case Z_AXIS: enable_Z(); } }while(0)
+    #define BSA_ENABLE(AXIS) do{ switch (AXIS) { case X_AXIS: enable_X(); break; case Y_AXIS: enable_Y(); break; case Z_AXIS: enable_Z(); break; default: break; } }while(0)
   #else
     #define BSA_ENABLE(AXIS) NOOP
   #endif

commit 6a71df2925955934dd426f907214c0584f7de98b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Apr 10 18:34:38 2019 -0500

    Tweak babystep add_steps

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
index efce79a092..0f0b64295d 100644
--- a/Marlin/src/feature/babystep.cpp
+++ b/Marlin/src/feature/babystep.cpp
@@ -64,7 +64,7 @@ void Babystep::add_mm(const AxisEnum axis, const float &mm) {
   add_steps(axis, mm * planner.settings.axis_steps_per_mm[axis]);
 }
 
-void Babystep::add_steps(const AxisEnum axis, const int32_t distance) {
+void Babystep::add_steps(const AxisEnum axis, const int16_t distance) {
 
   #if ENABLED(BABYSTEP_WITHOUT_HOMING)
     #define CAN_BABYSTEP(AXIS) true

commit 9cee81d47eea0c8700e265f10f103ca99499511f
Author: Roxy-3D <Roxy-3D@users.noreply.github.com>
Date:   Sat Apr 6 18:04:34 2019 -0500

    Option to show babysteps total since G28 (#13580)

diff --git a/Marlin/src/feature/babystep.cpp b/Marlin/src/feature/babystep.cpp
new file mode 100644
index 0000000000..efce79a092
--- /dev/null
+++ b/Marlin/src/feature/babystep.cpp
@@ -0,0 +1,135 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../inc/MarlinConfig.h"
+
+#if ENABLED(BABYSTEPPING)
+
+#include "babystep.h"
+#include "../Marlin.h"
+#include "../module/planner.h"
+#include "../module/stepper.h"
+
+#if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
+  #include "../gcode/gcode.h"
+#endif
+
+Babystep babystep;
+
+volatile int16_t Babystep::todo[BS_TODO_AXIS(Z_AXIS) + 1];
+
+#if HAS_LCD_MENU
+  int16_t Babystep::accum;
+  #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
+    int16_t Babystep::axis_total[BS_TOTAL_AXIS(Z_AXIS) + 1];
+  #endif
+#endif
+
+void Babystep::step_axis(const AxisEnum axis) {
+  const int16_t curTodo = todo[BS_TODO_AXIS(axis)]; // get rid of volatile for performance
+  if (curTodo) {
+    stepper.babystep((AxisEnum)axis, curTodo > 0);
+    if (curTodo > 0) todo[BS_TODO_AXIS(axis)]--; else todo[BS_TODO_AXIS(axis)]++;
+  }
+}
+
+void Babystep::task() {
+  #if EITHER(BABYSTEP_XY, I2C_POSITION_ENCODERS)
+    LOOP_XYZ(axis) step_axis((AxisEnum)axis);
+  #else
+    step_axis(Z_AXIS);
+  #endif
+}
+
+void Babystep::add_mm(const AxisEnum axis, const float &mm) {
+  add_steps(axis, mm * planner.settings.axis_steps_per_mm[axis]);
+}
+
+void Babystep::add_steps(const AxisEnum axis, const int32_t distance) {
+
+  #if ENABLED(BABYSTEP_WITHOUT_HOMING)
+    #define CAN_BABYSTEP(AXIS) true
+  #else
+    extern uint8_t axis_known_position;
+    #define CAN_BABYSTEP(AXIS) TEST(axis_known_position, AXIS)
+  #endif
+
+  if (!CAN_BABYSTEP(axis)) return;
+
+  #if HAS_LCD_MENU
+    accum += distance; // Count up babysteps for the UI
+    #if ENABLED(BABYSTEP_DISPLAY_TOTAL)
+      axis_total[BS_TOTAL_AXIS(axis)] += distance;
+    #endif
+  #endif
+
+  #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
+    #define BSA_ENABLE(AXIS) do{ switch (AXIS) { case X_AXIS: enable_X(); break; case Y_AXIS: enable_Y(); break; case Z_AXIS: enable_Z(); } }while(0)
+  #else
+    #define BSA_ENABLE(AXIS) NOOP
+  #endif
+
+  #if IS_CORE
+    #if ENABLED(BABYSTEP_XY)
+      switch (axis) {
+        case CORE_AXIS_1: // X on CoreXY and CoreXZ, Y on CoreYZ
+          BSA_ENABLE(CORE_AXIS_1);
+          BSA_ENABLE(CORE_AXIS_2);
+          todo[CORE_AXIS_1] += distance * 2;
+          todo[CORE_AXIS_2] += distance * 2;
+          break;
+        case CORE_AXIS_2: // Y on CoreXY, Z on CoreXZ and CoreYZ
+          BSA_ENABLE(CORE_AXIS_1);
+          BSA_ENABLE(CORE_AXIS_2);
+          todo[CORE_AXIS_1] += CORESIGN(distance * 2);
+          todo[CORE_AXIS_2] -= CORESIGN(distance * 2);
+          break;
+        case NORMAL_AXIS: // Z on CoreXY, Y on CoreXZ, X on CoreYZ
+        default:
+          BSA_ENABLE(NORMAL_AXIS);
+          todo[NORMAL_AXIS] += distance;
+          break;
+      }
+    #elif CORE_IS_XZ || CORE_IS_YZ
+      // Only Z stepping needs to be handled here
+      BSA_ENABLE(CORE_AXIS_1);
+      BSA_ENABLE(CORE_AXIS_2);
+      todo[CORE_AXIS_1] += CORESIGN(distance * 2);
+      todo[CORE_AXIS_2] -= CORESIGN(distance * 2);
+    #else
+      BSA_ENABLE(Z_AXIS);
+      todo[Z_AXIS] += distance;
+    #endif
+  #else
+    #if ENABLED(BABYSTEP_XY)
+      BSA_ENABLE(axis);
+    #else
+      BSA_ENABLE(Z_AXIS);
+    #endif
+    todo[BS_TODO_AXIS(axis)] += distance;
+  #endif
+  #if ENABLED(BABYSTEP_ALWAYS_AVAILABLE)
+    gcode.reset_stepper_timeout();
+  #endif
+}
+
+#endif // BABYSTEPPING
