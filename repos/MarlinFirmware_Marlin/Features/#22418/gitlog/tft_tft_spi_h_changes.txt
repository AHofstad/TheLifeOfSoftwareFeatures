commit 5bcaae62f2c7965ee7f99eb44a44022f1cbad959
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon Jul 24 15:31:39 2023 +1200

    ‚ö°Ô∏è Compact RGB565 TFT boot images (#26011)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
index c388f3288b..944b8267f6 100644
--- a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
+++ b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
@@ -26,21 +26,21 @@
 #ifndef LCD_READ_ID
   #define LCD_READ_ID  0x04   // Read display identification information (0xD3 on ILI9341)
 #endif
 #ifndef LCD_READ_ID4
   #define LCD_READ_ID4 0xD3   // Read display identification information (0xD3 on ILI9341)
 #endif
 
 #define DATASIZE_8BIT    8
 #define DATASIZE_16BIT  16
 #define TFT_IO_DRIVER   TFT_SPI
-#define DMA_MAX_SIZE    0xFFFF
+#define DMA_MAX_WORDS   0xFFFF
 
 #define DMA_MINC_ENABLE  1
 #define DMA_MINC_DISABLE 0
 
 class TFT_SPI {
 private:
   static uint32_t readID(const uint16_t inReg);
   static void transmit(uint16_t data);
   static void transmitDMA(uint32_t memoryIncrease, uint16_t *data, uint16_t count);
 

commit 9bf95418a7fbc0da0a6dc8bfb5024b624b94a51a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jun 24 02:57:58 2023 -0500

    üêõ Fix TFT_LTDC::writeReg
    
    Followup to #25939

diff --git a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
index df7b942099..c388f3288b 100644
--- a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
+++ b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
@@ -33,35 +33,35 @@
 #define DATASIZE_8BIT    8
 #define DATASIZE_16BIT  16
 #define TFT_IO_DRIVER   TFT_SPI
 #define DMA_MAX_SIZE    0xFFFF
 
 #define DMA_MINC_ENABLE  1
 #define DMA_MINC_DISABLE 0
 
 class TFT_SPI {
 private:
-  static uint32_t readID(uint16_t reg);
+  static uint32_t readID(const uint16_t inReg);
   static void transmit(uint16_t data);
   static void transmitDMA(uint32_t memoryIncrease, uint16_t *data, uint16_t count);
 
 public:
   // static SPIClass SPIx;
 
   static void init();
   static uint32_t getID();
   static bool isBusy();
   static void abort();
 
   static void dataTransferBegin(uint16_t dataWidth=DATASIZE_16BIT);
   static void dataTransferEnd();
   static void dataTransferAbort();
 
   static void writeData(uint16_t data);
-  static void writeReg(uint16_t reg);
+  static void writeReg(const uint16_t inReg);
 
   static void writeSequence_DMA(uint16_t *data, uint16_t count) { writeSequence(data, count); }
   static void writeMultiple_DMA(uint16_t color, uint16_t count) { writeMultiple(color, count); }
 
   static void writeSequence(uint16_t *data, uint16_t count);
   static void writeMultiple(uint16_t color, uint32_t count);
 };

commit c3694f1c038fa20ad749118b0a1c7aa88e3dd5f2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 14 17:24:50 2023 -0500

    üé® Lowercase methods, functions, data members (#25939)
    
    For: TFT, DGUS, MarlinUI, Anycubic, JyersUI, CrealityUI

diff --git a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
index f3b64c4cca..df7b942099 100644
--- a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
+++ b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
@@ -33,35 +33,35 @@
 #define DATASIZE_8BIT    8
 #define DATASIZE_16BIT  16
 #define TFT_IO_DRIVER   TFT_SPI
 #define DMA_MAX_SIZE    0xFFFF
 
 #define DMA_MINC_ENABLE  1
 #define DMA_MINC_DISABLE 0
 
 class TFT_SPI {
 private:
-  static uint32_t ReadID(uint16_t Reg);
-  static void Transmit(uint16_t Data);
-  static void TransmitDMA(uint32_t MemoryIncrease, uint16_t *Data, uint16_t Count);
+  static uint32_t readID(uint16_t reg);
+  static void transmit(uint16_t data);
+  static void transmitDMA(uint32_t memoryIncrease, uint16_t *data, uint16_t count);
 
 public:
   // static SPIClass SPIx;
 
-  static void Init();
-  static uint32_t GetID();
+  static void init();
+  static uint32_t getID();
   static bool isBusy();
-  static void Abort();
+  static void abort();
 
-  static void DataTransferBegin(uint16_t DataWidth=DATASIZE_16BIT);
-  static void DataTransferEnd();
-  static void DataTransferAbort();
+  static void dataTransferBegin(uint16_t dataWidth=DATASIZE_16BIT);
+  static void dataTransferEnd();
+  static void dataTransferAbort();
 
-  static void WriteData(uint16_t Data);
-  static void WriteReg(uint16_t Reg);
+  static void writeData(uint16_t data);
+  static void writeReg(uint16_t reg);
 
-  static void WriteSequence_DMA(uint16_t *Data, uint16_t Count) { WriteSequence(Data, Count); }
-  static void WriteMultiple_DMA(uint16_t Color, uint16_t Count) { WriteMultiple(Color, Count); }
+  static void writeSequence_DMA(uint16_t *data, uint16_t count) { writeSequence(data, count); }
+  static void writeMultiple_DMA(uint16_t color, uint16_t count) { writeMultiple(color, count); }
 
-  static void WriteSequence(uint16_t *Data, uint16_t Count);
-  static void WriteMultiple(uint16_t Color, uint32_t Count);
+  static void writeSequence(uint16_t *data, uint16_t count);
+  static void writeMultiple(uint16_t color, uint32_t count);
 };

commit de0cd660705668f2e9f1e0cb8fff80b40be0f4e6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 28 05:39:35 2023 -0500

    üé® Misc. cleanup

diff --git a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
index f412e09e11..f3b64c4cca 100644
--- a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
+++ b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
@@ -45,21 +45,21 @@ private:
   static void TransmitDMA(uint32_t MemoryIncrease, uint16_t *Data, uint16_t Count);
 
 public:
   // static SPIClass SPIx;
 
   static void Init();
   static uint32_t GetID();
   static bool isBusy();
   static void Abort();
 
-  static void DataTransferBegin(uint16_t DataWidth = DATASIZE_16BIT);
+  static void DataTransferBegin(uint16_t DataWidth=DATASIZE_16BIT);
   static void DataTransferEnd();
   static void DataTransferAbort();
 
   static void WriteData(uint16_t Data);
   static void WriteReg(uint16_t Reg);
 
   static void WriteSequence_DMA(uint16_t *Data, uint16_t Count) { WriteSequence(Data, Count); }
   static void WriteMultiple_DMA(uint16_t Color, uint16_t Count) { WriteMultiple(Color, Count); }
 
   static void WriteSequence(uint16_t *Data, uint16_t Count);

commit 4f902ac950e02d1d4e4b13afdec46937364ec22d
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Thu Jan 26 07:05:43 2023 +0300

    üêõ Fix Simulator TFT compile (#25279)

diff --git a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
index b3e622f19a..f412e09e11 100644
--- a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
+++ b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
@@ -24,24 +24,25 @@
 #include "../../../inc/MarlinConfig.h"
 
 #ifndef LCD_READ_ID
   #define LCD_READ_ID  0x04   // Read display identification information (0xD3 on ILI9341)
 #endif
 #ifndef LCD_READ_ID4
   #define LCD_READ_ID4 0xD3   // Read display identification information (0xD3 on ILI9341)
 #endif
 
 #define DATASIZE_8BIT    8
-#define DATASIZE_16BIT   16
-#define TFT_IO_DRIVER TFT_SPI
+#define DATASIZE_16BIT  16
+#define TFT_IO_DRIVER   TFT_SPI
+#define DMA_MAX_SIZE    0xFFFF
 
-#define DMA_MINC_ENABLE 1
+#define DMA_MINC_ENABLE  1
 #define DMA_MINC_DISABLE 0
 
 class TFT_SPI {
 private:
   static uint32_t ReadID(uint16_t Reg);
   static void Transmit(uint16_t Data);
   static void TransmitDMA(uint32_t MemoryIncrease, uint16_t *Data, uint16_t Count);
 
 public:
   // static SPIClass SPIx;
@@ -51,14 +52,16 @@ public:
   static bool isBusy();
   static void Abort();
 
   static void DataTransferBegin(uint16_t DataWidth = DATASIZE_16BIT);
   static void DataTransferEnd();
   static void DataTransferAbort();
 
   static void WriteData(uint16_t Data);
   static void WriteReg(uint16_t Reg);
 
+  static void WriteSequence_DMA(uint16_t *Data, uint16_t Count) { WriteSequence(Data, Count); }
+  static void WriteMultiple_DMA(uint16_t Color, uint16_t Count) { WriteMultiple(Color, Count); }
+
   static void WriteSequence(uint16_t *Data, uint16_t Count);
-  // static void WriteMultiple(uint16_t Color, uint16_t Count);
   static void WriteMultiple(uint16_t Color, uint32_t Count);
 };

commit 21011eefa818f73d79746f7555fead94f0d3d20a
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Thu Jul 22 01:01:23 2021 +0100

    ‚ú® Simulator HAL and build targets (#22418)

diff --git a/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
new file mode 100644
index 0000000000..b3e622f19a
--- /dev/null
+++ b/Marlin/src/HAL/NATIVE_SIM/tft/tft_spi.h
@@ -0,0 +1,64 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#include "../../../inc/MarlinConfig.h"
+
+#ifndef LCD_READ_ID
+  #define LCD_READ_ID  0x04   // Read display identification information (0xD3 on ILI9341)
+#endif
+#ifndef LCD_READ_ID4
+  #define LCD_READ_ID4 0xD3   // Read display identification information (0xD3 on ILI9341)
+#endif
+
+#define DATASIZE_8BIT    8
+#define DATASIZE_16BIT   16
+#define TFT_IO_DRIVER TFT_SPI
+
+#define DMA_MINC_ENABLE 1
+#define DMA_MINC_DISABLE 0
+
+class TFT_SPI {
+private:
+  static uint32_t ReadID(uint16_t Reg);
+  static void Transmit(uint16_t Data);
+  static void TransmitDMA(uint32_t MemoryIncrease, uint16_t *Data, uint16_t Count);
+
+public:
+  // static SPIClass SPIx;
+
+  static void Init();
+  static uint32_t GetID();
+  static bool isBusy();
+  static void Abort();
+
+  static void DataTransferBegin(uint16_t DataWidth = DATASIZE_16BIT);
+  static void DataTransferEnd();
+  static void DataTransferAbort();
+
+  static void WriteData(uint16_t Data);
+  static void WriteReg(uint16_t Reg);
+
+  static void WriteSequence(uint16_t *Data, uint16_t Count);
+  // static void WriteMultiple(uint16_t Color, uint16_t Count);
+  static void WriteMultiple(uint16_t Color, uint32_t Count);
+};
