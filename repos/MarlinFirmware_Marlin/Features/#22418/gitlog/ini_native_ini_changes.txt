commit 74c81117c355612f40061cc07fbad8a619fc5677
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Tue Jul 16 12:31:42 2024 -0700

     🔨 MarlinSimUI updates (#27276)

diff --git a/ini/native.ini b/ini/native.ini
index 0a13b8f300..7223537bcd 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -51,21 +51,21 @@ platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17
                     -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
                     -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -DGLM_ENABLE_EXPERIMENTAL
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-                    MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/66a2b82c8f.zip
+                    MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/afe7c1c293.zip
                     Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/c6b319f447.zip
                     LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/322fb5fc23.zip
 extra_scripts     = ${common.extra_scripts}
                     pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]

commit ee1d1faa52ff284d1249932e8fbed4119b3088c1
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon Apr 29 21:11:25 2024 +1200

    🔨 Sim pins / INI cleanup

diff --git a/ini/native.ini b/ini/native.ini
index 28c558d39f..0a13b8f300 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -51,25 +51,25 @@ platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17
                     -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
                     -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -DGLM_ENABLE_EXPERIMENTAL
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/66a2b82c8f.zip
-  Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/c6b319f447.zip
-  LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/322fb5fc23.zip
-extra_scripts = ${common.extra_scripts}
-  pre:buildroot/share/PlatformIO/scripts/simulator.py
+                    MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/66a2b82c8f.zip
+                    Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/c6b319f447.zip
+                    LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/322fb5fc23.zip
+extra_scripts     = ${common.extra_scripts}
+                    pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]
 extends    = simulator_linux
 build_type = debug
 
 [env:simulator_linux_release]

commit a7317de3b43f4332d79c1efa45e6fc361c553acd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 19 14:08:41 2024 -0500

    🔨 Sim needs GLM_ENABLE_EXPERIMENTAL

diff --git a/ini/native.ini b/ini/native.ini
index 3da0237c0f..28c558d39f 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -42,22 +42,23 @@ build_flags      = ${env:linux_native.build_flags} -Werror
 #   sudo apt-get install python3-venv build-essential libsdl2-dev libsdl2-net-dev libglm-dev
 # See https://docs.platformio.org/en/latest/platforms/native.html for more information
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
-build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS
+build_flags       = ${common.build_flags} -std=gnu++17
                     -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
+                    -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -DGLM_ENABLE_EXPERIMENTAL
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
   MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/66a2b82c8f.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/c6b319f447.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/322fb5fc23.zip
 extra_scripts = ${common.extra_scripts}
@@ -146,12 +147,11 @@ custom_gcc      = g++
 #  Ensure the following paths have been added to the PATH system environment variable:
 #   C:\msys64\mingw64\bin, C:\msys64\ucrt64\bin, C:\msys64\usr\bin
 #
 
 [env:simulator_windows]
 extends         = simulator_common
 build_src_flags = ${simulator_common.build_src_flags} -fpermissive
 build_flags     = ${simulator_common.build_flags} ${simulator_common.debug_build_flags}
                   -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows
                   -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
-                  -DGLM_ENABLE_EXPERIMENTAL
 build_type      = debug

commit fa88e0f054e0e4b71b3319161131582678e6d08a
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat May 18 09:04:36 2024 +1200

    🔨 Windows Simulator needs -DGLM_ENABLE_EXPERIMENTAL (#27092)

diff --git a/ini/native.ini b/ini/native.ini
index bbb6724dae..3da0237c0f 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -146,11 +146,12 @@ custom_gcc      = g++
 #  Ensure the following paths have been added to the PATH system environment variable:
 #   C:\msys64\mingw64\bin, C:\msys64\ucrt64\bin, C:\msys64\usr\bin
 #
 
 [env:simulator_windows]
 extends         = simulator_common
 build_src_flags = ${simulator_common.build_src_flags} -fpermissive
 build_flags     = ${simulator_common.build_flags} ${simulator_common.debug_build_flags}
                   -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows
                   -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
+                  -DGLM_ENABLE_EXPERIMENTAL
 build_type      = debug

commit a955e06259fec45d724ebf6b503c5022bf044130
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 22 18:58:53 2024 -0500

    🎨 Clean up after recent PRs

diff --git a/ini/native.ini b/ini/native.ini
index 9df621172d..bbb6724dae 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -25,21 +25,21 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 # This is somewhat unorthodox, in that it uses the PlatformIO Unity testing framework,
 # but actual targets are dynamically generated during the build. This seems to prevent
 # Unity from being automatically included, so it is added here.
 [env:linux_native_test]
 extends          = env:linux_native
 extra_scripts    = ${common.extra_scripts}
                    post:buildroot/share/PlatformIO/scripts/collect-code-tests.py
 build_src_filter = ${env:linux_native.build_src_filter} +<tests>
 lib_deps         = throwtheswitch/Unity@^2.5.2
 test_build_src   = true
-build_unflags    = 
+build_unflags    =
 build_flags      = ${env:linux_native.build_flags} -Werror
 
 #
 # Native Simulation
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
 #   sudo apt-get install python3-venv build-essential libsdl2-dev libsdl2-net-dev libglm-dev
 # See https://docs.platformio.org/en/latest/platforms/native.html for more information
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]

commit 1bb4a042e26af49602816ef33fcd2f3f4f728329
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sat Apr 13 14:11:51 2024 -0700

    ✅Unit test improvements (#26965)
    
    * Do not warn about display in unit tests
    
    * Treat warnings as errors in unit tests
    
    * Report actual filenames with unit tests

diff --git a/ini/native.ini b/ini/native.ini
index 332555ed05..9df621172d 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -25,20 +25,22 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 # This is somewhat unorthodox, in that it uses the PlatformIO Unity testing framework,
 # but actual targets are dynamically generated during the build. This seems to prevent
 # Unity from being automatically included, so it is added here.
 [env:linux_native_test]
 extends          = env:linux_native
 extra_scripts    = ${common.extra_scripts}
                    post:buildroot/share/PlatformIO/scripts/collect-code-tests.py
 build_src_filter = ${env:linux_native.build_src_filter} +<tests>
 lib_deps         = throwtheswitch/Unity@^2.5.2
 test_build_src   = true
+build_unflags    = 
+build_flags      = ${env:linux_native.build_flags} -Werror
 
 #
 # Native Simulation
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
 #   sudo apt-get install python3-venv build-essential libsdl2-dev libsdl2-net-dev libglm-dev
 # See https://docs.platformio.org/en/latest/platforms/native.html for more information
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #

commit d10861e478d60042a0836e95b8a22e7b68a1d9e5
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sat Apr 13 12:06:08 2024 -0700

    ✅ Add unit testing framework (#26948)
    
    - Add a framework to build and execute unit tests for Marlin.
    - Enable unit test execution as part of PR checks.
    
    ---------
    
    Co-authored-by: Costas Basdekis <costas.basdekis@gmail.com>
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/ini/native.ini b/ini/native.ini
index d07eaa2205..332555ed05 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -8,27 +8,38 @@
 #      Native / Simulation      #
 #                               #
 #################################
 
 #
 # No supported Arduino libraries, base Marlin only
 #
 [env:linux_native]
 platform         = native
 framework        =
-build_flags      = -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MARLIN_FIRMWARE__ -Wno-expansion-to-defined
+build_flags      = ${common.build_flags} -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MARLIN_FIRMWARE__ -Wno-expansion-to-defined
 build_src_flags  = -Wall -IMarlin/src/HAL/LINUX/include
 build_unflags    = -Wall
 lib_ldf_mode     = off
-lib_deps         =
 build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 
+# Environment specifically for unit testing through the Makefile
+# This is somewhat unorthodox, in that it uses the PlatformIO Unity testing framework,
+# but actual targets are dynamically generated during the build. This seems to prevent
+# Unity from being automatically included, so it is added here.
+[env:linux_native_test]
+extends          = env:linux_native
+extra_scripts    = ${common.extra_scripts}
+                   post:buildroot/share/PlatformIO/scripts/collect-code-tests.py
+build_src_filter = ${env:linux_native.build_src_filter} +<tests>
+lib_deps         = throwtheswitch/Unity@^2.5.2
+test_build_src   = true
+
 #
 # Native Simulation
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
 #   sudo apt-get install python3-venv build-essential libsdl2-dev libsdl2-net-dev libglm-dev
 # See https://docs.platformio.org/en/latest/platforms/native.html for more information
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json

commit 9215bf791b015a8970c3ca54188f8145ab0cc263
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Apr 10 17:50:21 2024 +1200

    🔨 MarlinSimUI updates (#26955)

diff --git a/ini/native.ini b/ini/native.ini
index ba5ddbc4cc..d07eaa2205 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -37,21 +37,21 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS
                     -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/8791f3ff43.zip
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/66a2b82c8f.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/c6b319f447.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/322fb5fc23.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]

commit 610ea0a9d30f1bc566eacda7ceab7976e228957d
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Jan 31 17:56:46 2024 +1300

    🔨 No strlcpy in Windows (#26748)

diff --git a/ini/native.ini b/ini/native.ini
index 86608ff3d7..ba5ddbc4cc 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -133,12 +133,11 @@ custom_gcc      = g++
 #  Ensure the following paths have been added to the PATH system environment variable:
 #   C:\msys64\mingw64\bin, C:\msys64\ucrt64\bin, C:\msys64\usr\bin
 #
 
 [env:simulator_windows]
 extends         = simulator_common
 build_src_flags = ${simulator_common.build_src_flags} -fpermissive
 build_flags     = ${simulator_common.build_flags} ${simulator_common.debug_build_flags}
                   -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows
                   -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
-                  -DHAS_LIBBSD
 build_type      = debug

commit 5b74e25108a47acad41d9a50560cd1fbae38040a
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Tue Jan 2 20:25:26 2024 +1300

    🔨 BSD string workaround (#26532)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/ini/native.ini b/ini/native.ini
index 40511beb6f..86608ff3d7 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -29,21 +29,22 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 #   sudo apt-get install python3-venv build-essential libsdl2-dev libsdl2-net-dev libglm-dev
 # See https://docs.platformio.org/en/latest/platforms/native.html for more information
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
-build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
+build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS
+                    -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
   MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/8791f3ff43.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/c6b319f447.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/322fb5fc23.zip
 extra_scripts = ${common.extra_scripts}
@@ -92,20 +93,21 @@ build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 #  sudo ln -s gcc-12 gcc ; sudo ln -s g++-12 g++ ; sudo ln -s g++ cc
 #  cd -
 #
 # Use 'brew install mesa' to get a <GL/gl.h> if no Xcode is installed.
 # If Xcode is installed be sure to run `xcode-select --install` first.
 #
 
 [simulator_macos]
 build_unflags     = -lGL -fstack-protector-strong
 build_flags       =
+  -DHAS_LIBBSD
   -I/opt/local/include
   -I/opt/local/include/freetype2
   -I/opt/local/include/SDL2/
   -L/opt/local/lib
   -Wl,-framework,OpenGl
   -Wl,-framework,CoreFoundation
   -lSDL2
   -fno-stack-protector
 
 [env:simulator_macos_debug]
@@ -128,12 +130,15 @@ custom_gcc      = g++
 #  MSYS2 mingw-w64-x86_64 with these packages:
 #   pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net mingw-w64-x86_64-dlfcn
 #
 #  Ensure the following paths have been added to the PATH system environment variable:
 #   C:\msys64\mingw64\bin, C:\msys64\ucrt64\bin, C:\msys64\usr\bin
 #
 
 [env:simulator_windows]
 extends         = simulator_common
 build_src_flags = ${simulator_common.build_src_flags} -fpermissive
-build_flags     = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
+build_flags     = ${simulator_common.build_flags} ${simulator_common.debug_build_flags}
+                  -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows
+                  -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
+                  -DHAS_LIBBSD
 build_type      = debug

commit c74e6ad868435b5719b5a3df8cacfd16d4a5b6c9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Nov 13 04:28:33 2023 -0600

    🔨 Use classic ld on macOS

diff --git a/ini/native.ini b/ini/native.ini
index dcf4b2e6b4..40511beb6f 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -64,22 +64,23 @@ build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 
 #
 # Simulator for macOS (MacPorts)
 #
 
 #
 # MacPorts:
 #  sudo port install gcc12 glm libsdl2 libsdl2_net
 #
 #  cd /opt/local/bin
-#  sudo rm -f gcc g++ cc
+#  sudo rm gcc g++ cc ld
 #  sudo ln -s gcc-mp-12 gcc ; sudo ln -s g++-mp-12 g++ ; sudo ln -s g++ cc
+#  sudo ln -s ld-classic ld
 #  cd -
 #  rehash
 #
 # Use 'sudo port install mesa' to get a <GL/gl.h> if no Xcode is installed.
 # If Xcode is installed be sure to run `xcode-select --install` first.
 #
 #==================================================================================
 #
 # Homebrew:
 #  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

commit d159ec5c903413e1909b4ce260f9add2ade28e6a
Author: Vladimir Sitnikov <sitnikov.vladimir@gmail.com>
Date:   Sun Nov 12 05:13:23 2023 +0300

    🔨 Specific package versions (#26265)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/ini/native.ini b/ini/native.ini
index 03c6c59265..dcf4b2e6b4 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -36,23 +36,23 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/bugfix-2.1.x.zip
-  Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
-  LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/8791f3ff43.zip
+  Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/c6b319f447.zip
+  LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/322fb5fc23.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]
 extends    = simulator_linux
 build_type = debug

commit 772e19aab988b5d6466bdf2e8948c8c7eee3cafd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 22:10:40 2023 -0500

    ✨ EP_BABYSTEPPING (#25869)

diff --git a/ini/native.ini b/ini/native.ini
index 481dac1777..03c6c59265 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -36,21 +36,21 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/refs/heads/bugfix-2.1.x.zip
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/bugfix-2.1.x.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]

commit 3b425d9a3860e959ede1f841112819a6ef09f7d5
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Wed Mar 29 05:45:22 2023 +0100

    🔨 MarlinSimUI updates (#25589)

diff --git a/ini/native.ini b/ini/native.ini
index 6a0cce38e8..481dac1777 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -36,21 +36,21 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/refs/heads/bugfix-2.0.x.zip
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/refs/heads/bugfix-2.1.x.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]

commit 58d6b5db0a91ec5b8f949df138a9912c059cfdcd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 11 21:29:32 2023 -0600

    🔨 Suppress native build warnings

diff --git a/ini/native.ini b/ini/native.ini
index 7ed705a782..6a0cce38e8 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -30,21 +30,21 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 # See https://docs.platformio.org/en/latest/platforms/native.html for more information
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
-build_src_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
+build_src_flags   = -Wall -Wno-expansion-to-defined -Wno-deprecated-declarations -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
   MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/refs/heads/bugfix-2.0.x.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py

commit 6e4326b817d72b6ee576f92e14526dc4f05f6f49
Author: Richard Layton <rlayton@gmail.com>
Date:   Sat Jan 7 21:03:29 2023 -0800

    📝 Linux Sim apt-get line (#25208)

diff --git a/ini/native.ini b/ini/native.ini
index d0e1d6f293..7ed705a782 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -19,20 +19,21 @@ build_flags      = -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MAR
 build_src_flags  = -Wall -IMarlin/src/HAL/LINUX/include
 build_unflags    = -Wall
 lib_ldf_mode     = off
 lib_deps         =
 build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 
 #
 # Native Simulation
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
+#   sudo apt-get install python3-venv build-essential libsdl2-dev libsdl2-net-dev libglm-dev
 # See https://docs.platformio.org/en/latest/platforms/native.html for more information
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g

commit 3c929ab181a6d9388b581507d7ca98510083a37e
Author: Richard Layton <rlayton@gmail.com>
Date:   Sat Jan 7 02:42:21 2023 -0800

    📝 More native.ini docs (#25201)

diff --git a/ini/native.ini b/ini/native.ini
index 15a4d36af8..d0e1d6f293 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -19,20 +19,21 @@ build_flags      = -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MAR
 build_src_flags  = -Wall -IMarlin/src/HAL/LINUX/include
 build_unflags    = -Wall
 lib_ldf_mode     = off
 lib_deps         =
 build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 
 #
 # Native Simulation
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
+# See https://docs.platformio.org/en/latest/platforms/native.html for more information
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
@@ -116,17 +117,21 @@ custom_gcc      = g++
 extends         = env:simulator_linux_release
 build_flags     = ${env:simulator_linux_release.build_flags} ${simulator_macos.build_flags}
 build_unflags   = ${simulator_macos.build_unflags}
 custom_verbose  = 0
 custom_gcc      = g++
 
 #
 # Simulator for Windows 10
 #
 #  MSYS2 mingw-w64-x86_64 with these packages:
-#  pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net mingw-w64-x86_64-dlfcn
+#   pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net mingw-w64-x86_64-dlfcn
 #
+#  Ensure the following paths have been added to the PATH system environment variable:
+#   C:\msys64\mingw64\bin, C:\msys64\ucrt64\bin, C:\msys64\usr\bin
+#
+
 [env:simulator_windows]
 extends         = simulator_common
 build_src_flags = ${simulator_common.build_src_flags} -fpermissive
 build_flags     = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
 build_type      = debug

commit f8d7090e30ca679c5bce6a16c1350b15b52ba50b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 21 15:41:51 2022 -0500

    🔨 gcc-12 for macOS native

diff --git a/ini/native.ini b/ini/native.ini
index 1905559fd0..15a4d36af8 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -59,25 +59,25 @@ build_type = debug
 extends     = simulator_linux
 build_type  = release
 build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 
 #
 # Simulator for macOS (MacPorts)
 #
 
 #
 # MacPorts:
-#  sudo port install gcc11 glm libsdl2 libsdl2_net
+#  sudo port install gcc12 glm libsdl2 libsdl2_net
 #
 #  cd /opt/local/bin
 #  sudo rm -f gcc g++ cc
-#  sudo ln -s gcc-mp-11 gcc ; sudo ln -s g++-mp-11 g++ ; sudo ln -s g++ cc
+#  sudo ln -s gcc-mp-12 gcc ; sudo ln -s g++-mp-12 g++ ; sudo ln -s g++ cc
 #  cd -
 #  rehash
 #
 # Use 'sudo port install mesa' to get a <GL/gl.h> if no Xcode is installed.
 # If Xcode is installed be sure to run `xcode-select --install` first.
 #
 #==================================================================================
 #
 # Homebrew:
 #  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

commit 3c3c9f1a8eb8a690494161e3831448ca3c848205
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jul 12 13:25:36 2022 -0500

    🧑‍💻 Update Mac Sim directions

diff --git a/ini/native.ini b/ini/native.ini
index 693a985d4e..1905559fd0 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -56,34 +56,50 @@ extends    = simulator_linux
 build_type = debug
 
 [env:simulator_linux_release]
 extends     = simulator_linux
 build_type  = release
 build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 
 #
 # Simulator for macOS (MacPorts)
 #
-#  sudo port install gcc11 gdb glm libsdl2 libsdl2_net freetype
-#  sudo port install ld64 @3_3 +ld64_xcode
+
+#
+# MacPorts:
+#  sudo port install gcc11 glm libsdl2 libsdl2_net
 #
 #  cd /opt/local/bin
 #  sudo rm -f gcc g++ cc
 #  sudo ln -s gcc-mp-11 gcc ; sudo ln -s g++-mp-11 g++ ; sudo ln -s g++ cc
-# This step may be obsolete:
-#  sudo port uninstall ld64 ld64-latest
-#
-# cd -
+#  cd -
+#  rehash
 #
 # Use 'sudo port install mesa' to get a <GL/gl.h> if no Xcode is installed.
 # If Xcode is installed be sure to run `xcode-select --install` first.
 #
+#==================================================================================
+#
+# Homebrew:
+#  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
+#
+#  brew install gcc@12 glm sdl2 sdl2_net
+#
+#  cd /opt/homebrew/bin
+#  sudo rm -f gcc g++ cc
+#  sudo ln -s gcc-12 gcc ; sudo ln -s g++-12 g++ ; sudo ln -s g++ cc
+#  cd -
+#
+# Use 'brew install mesa' to get a <GL/gl.h> if no Xcode is installed.
+# If Xcode is installed be sure to run `xcode-select --install` first.
+#
+
 [simulator_macos]
 build_unflags     = -lGL -fstack-protector-strong
 build_flags       =
   -I/opt/local/include
   -I/opt/local/include/freetype2
   -I/opt/local/include/SDL2/
   -L/opt/local/lib
   -Wl,-framework,OpenGl
   -Wl,-framework,CoreFoundation
   -lSDL2
@@ -103,14 +119,14 @@ build_unflags   = ${simulator_macos.build_unflags}
 custom_verbose  = 0
 custom_gcc      = g++
 
 #
 # Simulator for Windows 10
 #
 #  MSYS2 mingw-w64-x86_64 with these packages:
 #  pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net mingw-w64-x86_64-dlfcn
 #
 [env:simulator_windows]
-extends     = simulator_common
+extends         = simulator_common
 build_src_flags = ${simulator_common.build_src_flags} -fpermissive
-build_flags = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
-build_type = debug
+build_flags     = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
+build_type      = debug

commit 3826b13ab15ba6ad81258d850a18d1b0e5496d74
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Jul 2 21:31:27 2022 -0300

    🔨 Disable stack protector on macOS simulator (#24443)

diff --git a/ini/native.ini b/ini/native.ini
index e860a55958..693a985d4e 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -71,29 +71,30 @@ build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 #  sudo ln -s gcc-mp-11 gcc ; sudo ln -s g++-mp-11 g++ ; sudo ln -s g++ cc
 # This step may be obsolete:
 #  sudo port uninstall ld64 ld64-latest
 #
 # cd -
 #
 # Use 'sudo port install mesa' to get a <GL/gl.h> if no Xcode is installed.
 # If Xcode is installed be sure to run `xcode-select --install` first.
 #
 [simulator_macos]
-build_unflags     = -lGL
+build_unflags     = -lGL -fstack-protector-strong
 build_flags       =
   -I/opt/local/include
   -I/opt/local/include/freetype2
   -I/opt/local/include/SDL2/
   -L/opt/local/lib
   -Wl,-framework,OpenGl
   -Wl,-framework,CoreFoundation
   -lSDL2
+  -fno-stack-protector
 
 [env:simulator_macos_debug]
 extends         = env:simulator_linux_debug
 build_flags     = ${env:simulator_linux_debug.build_flags} ${simulator_macos.build_flags} -ggdb -Og -D_THREAD_SAFE
 build_unflags   = ${simulator_macos.build_unflags}
 custom_verbose  = 0
 custom_gcc      = g++
 
 [env:simulator_macos_release]
 extends         = env:simulator_linux_release

commit eb0c4682d5e89b07038fa98346db1ab68c7ddc1a
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed May 25 07:49:57 2022 +1200

    📌 Use MarlinSimUI/bugfix-2.0.x (#24232)

diff --git a/ini/native.ini b/ini/native.ini
index b34945397e..e860a55958 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -34,21 +34,21 @@ build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 build_src_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/0.0.2.zip
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/refs/heads/bugfix-2.0.x.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]

commit 6a880280e4c7e7ed6ebc72d9b446017bd7db3702
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Fri May 20 02:15:57 2022 +1200

    🔨 Require PIO >= 6.0.1 (#24205)

diff --git a/ini/native.ini b/ini/native.ini
index 02737a0746..b34945397e 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -6,47 +6,47 @@
 #################################
 #                               #
 #      Native / Simulation      #
 #                               #
 #################################
 
 #
 # No supported Arduino libraries, base Marlin only
 #
 [env:linux_native]
-platform        = native
-framework       =
-build_flags     = -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MARLIN_FIRMWARE__ -Wno-expansion-to-defined
-src_build_flags = -Wall -IMarlin/src/HAL/LINUX/include
-build_unflags   = -Wall
-lib_ldf_mode    = off
-lib_deps        =
-src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>
+platform         = native
+framework        =
+build_flags      = -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MARLIN_FIRMWARE__ -Wno-expansion-to-defined
+build_src_flags  = -Wall -IMarlin/src/HAL/LINUX/include
+build_unflags    = -Wall
+lib_ldf_mode     = off
+lib_deps         =
+build_src_filter = ${common.default_src_filter} +<src/HAL/LINUX>
 
 #
 # Native Simulation
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
-src_build_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
+build_src_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
-src_filter        = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
+build_src_filter  = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
   MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/0.0.2.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
@@ -103,13 +103,13 @@ custom_verbose  = 0
 custom_gcc      = g++
 
 #
 # Simulator for Windows 10
 #
 #  MSYS2 mingw-w64-x86_64 with these packages:
 #  pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net mingw-w64-x86_64-dlfcn
 #
 [env:simulator_windows]
 extends     = simulator_common
-src_build_flags = ${simulator_common.src_build_flags} -fpermissive
+build_src_flags = ${simulator_common.build_src_flags} -fpermissive
 build_flags = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
 build_type = debug

commit 505ab1bb62033d08e94ae15b515beefec343177a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu May 5 19:11:59 2022 -0500

    🔨 Use first g++ in path for 'native' targets

diff --git a/ini/native.ini b/ini/native.ini
index 3d196f3436..02737a0746 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -56,55 +56,58 @@ extends    = simulator_linux
 build_type = debug
 
 [env:simulator_linux_release]
 extends     = simulator_linux
 build_type  = release
 build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 
 #
 # Simulator for macOS (MacPorts)
 #
-#  sudo port install gcc10 gdb glm libsdl2 libsdl2_net freetype
+#  sudo port install gcc11 gdb glm libsdl2 libsdl2_net freetype
 #  sudo port install ld64 @3_3 +ld64_xcode
 #
 #  cd /opt/local/bin
 #  sudo rm -f gcc g++ cc
-#  sudo ln -s gcc-mp-10 gcc ; sudo ln -s g++-mp-10 g++ ; sudo ln -s g++ cc
+#  sudo ln -s gcc-mp-11 gcc ; sudo ln -s g++-mp-11 g++ ; sudo ln -s g++ cc
 # This step may be obsolete:
 #  sudo port uninstall ld64 ld64-latest
 #
 # cd -
 #
 # Use 'sudo port install mesa' to get a <GL/gl.h> if no Xcode is installed.
 # If Xcode is installed be sure to run `xcode-select --install` first.
 #
 [simulator_macos]
 build_unflags     = -lGL
-custom_verbose    = 0
 build_flags       =
   -I/opt/local/include
   -I/opt/local/include/freetype2
   -I/opt/local/include/SDL2/
   -L/opt/local/lib
   -Wl,-framework,OpenGl
   -Wl,-framework,CoreFoundation
   -lSDL2
 
 [env:simulator_macos_debug]
 extends         = env:simulator_linux_debug
 build_flags     = ${env:simulator_linux_debug.build_flags} ${simulator_macos.build_flags} -ggdb -Og -D_THREAD_SAFE
 build_unflags   = ${simulator_macos.build_unflags}
+custom_verbose  = 0
+custom_gcc      = g++
 
 [env:simulator_macos_release]
 extends         = env:simulator_linux_release
 build_flags     = ${env:simulator_linux_release.build_flags} ${simulator_macos.build_flags}
 build_unflags   = ${simulator_macos.build_unflags}
+custom_verbose  = 0
+custom_gcc      = g++
 
 #
 # Simulator for Windows 10
 #
 #  MSYS2 mingw-w64-x86_64 with these packages:
 #  pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net mingw-w64-x86_64-dlfcn
 #
 [env:simulator_windows]
 extends     = simulator_common
 src_build_flags = ${simulator_common.src_build_flags} -fpermissive

commit 44eff9a23348dcc117fd1ea9b4b1ef0b54061808
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 17 18:50:31 2022 -0600

    ♻️ Refactor HAL as singleton (#23357)

diff --git a/ini/native.ini b/ini/native.ini
index 5355284992..3d196f3436 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -27,28 +27,28 @@ src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
-build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/include -IMarlin/src/HAL/NATIVE_SIM/u8g
+build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 src_build_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 src_filter        = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/master.zip
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/0.0.2.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]

commit 554a2fc84a5cd67cc9b0be8b01551a9eca3925bf
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Jan 2 21:27:22 2022 -0800

    ⬆️ Assert newer GCC in PIO via atmelavr@~3.4 (#23432)

diff --git a/ini/native.ini b/ini/native.ini
index fe5fe3a5d0..5355284992 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -45,26 +45,24 @@ lib_deps          = ${common.lib_deps}
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]
-platform   = ${simulator_linux.platform}
 extends    = simulator_linux
 build_type = debug
 
 [env:simulator_linux_release]
-platform    = ${simulator_linux.platform}
 extends     = simulator_linux
 build_type  = release
 build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 
 #
 # Simulator for macOS (MacPorts)
 #
 #  sudo port install gcc10 gdb glm libsdl2 libsdl2_net freetype
 #  sudo port install ld64 @3_3 +ld64_xcode
 #
@@ -85,33 +83,30 @@ custom_verbose    = 0
 build_flags       =
   -I/opt/local/include
   -I/opt/local/include/freetype2
   -I/opt/local/include/SDL2/
   -L/opt/local/lib
   -Wl,-framework,OpenGl
   -Wl,-framework,CoreFoundation
   -lSDL2
 
 [env:simulator_macos_debug]
-platform        = ${env:simulator_linux_release.platform}
 extends         = env:simulator_linux_debug
 build_flags     = ${env:simulator_linux_debug.build_flags} ${simulator_macos.build_flags} -ggdb -Og -D_THREAD_SAFE
 build_unflags   = ${simulator_macos.build_unflags}
 
 [env:simulator_macos_release]
-platform        = ${env:simulator_linux_release.platform}
 extends         = env:simulator_linux_release
 build_flags     = ${env:simulator_linux_release.build_flags} ${simulator_macos.build_flags}
 build_unflags   = ${simulator_macos.build_unflags}
 
 #
 # Simulator for Windows 10
 #
 #  MSYS2 mingw-w64-x86_64 with these packages:
 #  pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net mingw-w64-x86_64-dlfcn
 #
 [env:simulator_windows]
-platform    = ${simulator_common.platform}
 extends     = simulator_common
 src_build_flags = ${simulator_common.src_build_flags} -fpermissive
 build_flags = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
 build_type = debug

commit 6a8b9274a31d11c396ce1bc44b3a0b872a4606dc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Dec 25 23:15:17 2021 -0600

    ⏪️ Refactor still needs work
    
    Reverting #23295

diff --git a/ini/native.ini b/ini/native.ini
index eba34afc83..fe5fe3a5d0 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -27,28 +27,28 @@ src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
-build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
+build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/include -IMarlin/src/HAL/NATIVE_SIM/u8g
 src_build_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 src_filter        = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/thinkyhead/MarlinSimUI/archive/updated_marlin_hal_2093.zip
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/master.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]

commit e211ff148c39bf5dace72de7cffbb83f19d3f1bf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Dec 24 21:33:59 2021 -0600

    ♻️ Refactor HAL as singleton (#23295)

diff --git a/ini/native.ini b/ini/native.ini
index fe5fe3a5d0..eba34afc83 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -27,28 +27,28 @@ src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
 # For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
-build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/include -IMarlin/src/HAL/NATIVE_SIM/u8g
+build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/u8g
 src_build_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 src_filter        = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/master.zip
+  MarlinSimUI=https://github.com/thinkyhead/MarlinSimUI/archive/updated_marlin_hal_2093.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]

commit efe2e79ac8e6d35e80a7d29bfd266685a82dc546
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 30 23:43:19 2021 -0500

    🔨 Help for GDB remote debugging

diff --git a/ini/native.ini b/ini/native.ini
index 981e93f996..fe5fe3a5d0 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -22,43 +22,38 @@ lib_ldf_mode    = off
 lib_deps        =
 src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>
 
 #
 # Native Simulation
 # Builds with a small subset of available features
 # Required system libraries: SDL2, SDL2-net, OpenGL, GLM
 #
 # Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
 #
-# Debugging with gdb in vscode is as easy as adding the launch task as usual, but platformio
-# will randomly remove your task when it recreates its tasks from a template. Add your gdb
-# launch task to '~/.platformio/penv/lib/python{PYTHON_VERSION}/site-packages/platformio/ide/tpls/vscode/.vscode'
-# to avoid this until platformio updates.
+# For VSCode debugging see buildroot/share/PlatformIO/debugging/launch.json
 #
 [simulator_common]
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/include -IMarlin/src/HAL/NATIVE_SIM/u8g
 src_build_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 src_filter        = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
-
 lib_deps          = ${common.lib_deps}
   MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/master.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
-
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 
 [env:simulator_linux_debug]
 platform   = ${simulator_linux.platform}
 extends    = simulator_linux
 build_type = debug
 
 [env:simulator_linux_release]
@@ -77,31 +72,20 @@ build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 #  sudo rm -f gcc g++ cc
 #  sudo ln -s gcc-mp-10 gcc ; sudo ln -s g++-mp-10 g++ ; sudo ln -s g++ cc
 # This step may be obsolete:
 #  sudo port uninstall ld64 ld64-latest
 #
 # cd -
 #
 # Use 'sudo port install mesa' to get a <GL/gl.h> if no Xcode is installed.
 # If Xcode is installed be sure to run `xcode-select --install` first.
 #
-# For VSCode debugging paste the block below near the top of launch.json.
-# NOTE: The PlatformIO VSCode extension will remove it when regenerating launch.json.
-#
-# { "name": "Debug Sim",
-#   "type": "cppdbg",
-#   "request": "launch",
-#   "program": "${workspaceFolder}/.pio/build/simulator_macos/MarlinSimulator",
-#   "miDebuggerPath": "/opt/local/bin/ggdb",
-#   "MIMode": "gdb",
-#   "cwd": "${workspaceFolder}/.pio/build/simulator_macos" },
-#
 [simulator_macos]
 build_unflags     = -lGL
 custom_verbose    = 0
 build_flags       =
   -I/opt/local/include
   -I/opt/local/include/freetype2
   -I/opt/local/include/SDL2/
   -L/opt/local/lib
   -Wl,-framework,OpenGl
   -Wl,-framework,CoreFoundation

commit 9922410a73fd3285bfba0478ac16f04eeee48b8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 5 21:35:31 2021 -0500

    🔨 Port libsdl2_net required for macOS simulator

diff --git a/ini/native.ini b/ini/native.ini
index 2f38e715ed..981e93f996 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -63,27 +63,30 @@ build_type = debug
 
 [env:simulator_linux_release]
 platform    = ${simulator_linux.platform}
 extends     = simulator_linux
 build_type  = release
 build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
 
 #
 # Simulator for macOS (MacPorts)
 #
-#  sudo port install gcc10 gdb glm libsdl2 freetype
+#  sudo port install gcc10 gdb glm libsdl2 libsdl2_net freetype
 #  sudo port install ld64 @3_3 +ld64_xcode
-#  sudo port uninstall ld64 ld64-latest
+#
 #  cd /opt/local/bin
 #  sudo rm -f gcc g++ cc
-#  sudo ln gcc-mp-10 gcc ; sudo ln g++-mp-10 g++ ; sudo ln g++ cc
-#  cd -
+#  sudo ln -s gcc-mp-10 gcc ; sudo ln -s g++-mp-10 g++ ; sudo ln -s g++ cc
+# This step may be obsolete:
+#  sudo port uninstall ld64 ld64-latest
+#
+# cd -
 #
 # Use 'sudo port install mesa' to get a <GL/gl.h> if no Xcode is installed.
 # If Xcode is installed be sure to run `xcode-select --install` first.
 #
 # For VSCode debugging paste the block below near the top of launch.json.
 # NOTE: The PlatformIO VSCode extension will remove it when regenerating launch.json.
 #
 # { "name": "Debug Sim",
 #   "type": "cppdbg",
 #   "request": "launch",

commit 4d3cb95bd8fbe325254d3885b5c648b6ca5dfa19
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Aug 11 18:19:55 2021 -0500

    🔨 Use zip link for MarlinSimUI

diff --git a/ini/native.ini b/ini/native.ini
index 548e791f5a..2f38e715ed 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -38,21 +38,21 @@ src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>
 platform          = native
 framework         =
 build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/include -IMarlin/src/HAL/NATIVE_SIM/u8g
 src_build_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
 release_flags     = -g0 -O3 -flto
 debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
 lib_compat_mode   = off
 src_filter        = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
 
 lib_deps          = ${common.lib_deps}
-  MarlinSimUI=https://github.com/p3p/MarlinSimUI.git
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI/archive/master.zip
   Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
   LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
 extra_scripts = ${common.extra_scripts}
   pre:buildroot/share/PlatformIO/scripts/simulator.py
 
 
 [simulator_linux]
 extends     = simulator_common
 build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
 

commit 331cc5fd6a044e568dbe789ecd0b732b6eba454f
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Aug 8 19:25:17 2021 -0700

    🐛 Fix some Simulator on Windows issues (#22516)

diff --git a/ini/native.ini b/ini/native.ini
index b40ea836da..548e791f5a 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -113,18 +113,18 @@ build_unflags   = ${simulator_macos.build_unflags}
 [env:simulator_macos_release]
 platform        = ${env:simulator_linux_release.platform}
 extends         = env:simulator_linux_release
 build_flags     = ${env:simulator_linux_release.build_flags} ${simulator_macos.build_flags}
 build_unflags   = ${simulator_macos.build_unflags}
 
 #
 # Simulator for Windows 10
 #
 #  MSYS2 mingw-w64-x86_64 with these packages:
-#  pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net
+#  pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net mingw-w64-x86_64-dlfcn
 #
 [env:simulator_windows]
 platform    = ${simulator_common.platform}
 extends     = simulator_common
 src_build_flags = ${simulator_common.src_build_flags} -fpermissive
-build_flags = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
+build_flags = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -IC:\\msys64\\mingw64\\include\\SDL2 -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
 build_type = debug

commit 21011eefa818f73d79746f7555fead94f0d3d20a
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Thu Jul 22 01:01:23 2021 +0100

    ✨ Simulator HAL and build targets (#22418)

diff --git a/ini/native.ini b/ini/native.ini
index dbdfd26f8b..b40ea836da 100644
--- a/ini/native.ini
+++ b/ini/native.ini
@@ -14,10 +14,117 @@
 #
 [env:linux_native]
 platform        = native
 framework       =
 build_flags     = -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MARLIN_FIRMWARE__ -Wno-expansion-to-defined
 src_build_flags = -Wall -IMarlin/src/HAL/LINUX/include
 build_unflags   = -Wall
 lib_ldf_mode    = off
 lib_deps        =
 src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>
+
+#
+# Native Simulation
+# Builds with a small subset of available features
+# Required system libraries: SDL2, SDL2-net, OpenGL, GLM
+#
+# Tested with Linux (Mint 20) : gcc [9.3.0, 10.2.0]: libsdl2-dev[2.0.10], libsdl2-net-dev[2.0.1], libglm-dev[0.9.9.7, 0.9.9.8]
+#
+# Debugging with gdb in vscode is as easy as adding the launch task as usual, but platformio
+# will randomly remove your task when it recreates its tasks from a template. Add your gdb
+# launch task to '~/.platformio/penv/lib/python{PYTHON_VERSION}/site-packages/platformio/ide/tpls/vscode/.vscode'
+# to avoid this until platformio updates.
+#
+[simulator_common]
+platform          = native
+framework         =
+build_flags       = ${common.build_flags} -std=gnu++17 -D__PLAT_NATIVE_SIM__ -DU8G_HAL_LINKS -I/usr/include/SDL2 -IMarlin -IMarlin/src/HAL/NATIVE_SIM/include -IMarlin/src/HAL/NATIVE_SIM/u8g
+src_build_flags   = -Wall -Wno-expansion-to-defined -Wcast-align
+release_flags     = -g0 -O3 -flto
+debug_build_flags = -fstack-protector-strong -g -g3 -ggdb
+lib_compat_mode   = off
+src_filter        = ${common.default_src_filter} +<src/HAL/NATIVE_SIM>
+
+lib_deps          = ${common.lib_deps}
+  MarlinSimUI=https://github.com/p3p/MarlinSimUI.git
+  Adafruit NeoPixel=https://github.com/p3p/Adafruit_NeoPixel/archive/marlin_sim_native.zip
+  LiquidCrystal=https://github.com/p3p/LiquidCrystal/archive/master.zip
+extra_scripts = ${common.extra_scripts}
+  pre:buildroot/share/PlatformIO/scripts/simulator.py
+
+
+[simulator_linux]
+extends     = simulator_common
+build_flags = ${simulator_common.build_flags} -ldl -lpthread -lSDL2 -lSDL2_net -lGL
+
+[env:simulator_linux_debug]
+platform   = ${simulator_linux.platform}
+extends    = simulator_linux
+build_type = debug
+
+[env:simulator_linux_release]
+platform    = ${simulator_linux.platform}
+extends     = simulator_linux
+build_type  = release
+build_flags = ${simulator_linux.build_flags} ${simulator_linux.release_flags}
+
+#
+# Simulator for macOS (MacPorts)
+#
+#  sudo port install gcc10 gdb glm libsdl2 freetype
+#  sudo port install ld64 @3_3 +ld64_xcode
+#  sudo port uninstall ld64 ld64-latest
+#  cd /opt/local/bin
+#  sudo rm -f gcc g++ cc
+#  sudo ln gcc-mp-10 gcc ; sudo ln g++-mp-10 g++ ; sudo ln g++ cc
+#  cd -
+#
+# Use 'sudo port install mesa' to get a <GL/gl.h> if no Xcode is installed.
+# If Xcode is installed be sure to run `xcode-select --install` first.
+#
+# For VSCode debugging paste the block below near the top of launch.json.
+# NOTE: The PlatformIO VSCode extension will remove it when regenerating launch.json.
+#
+# { "name": "Debug Sim",
+#   "type": "cppdbg",
+#   "request": "launch",
+#   "program": "${workspaceFolder}/.pio/build/simulator_macos/MarlinSimulator",
+#   "miDebuggerPath": "/opt/local/bin/ggdb",
+#   "MIMode": "gdb",
+#   "cwd": "${workspaceFolder}/.pio/build/simulator_macos" },
+#
+[simulator_macos]
+build_unflags     = -lGL
+custom_verbose    = 0
+build_flags       =
+  -I/opt/local/include
+  -I/opt/local/include/freetype2
+  -I/opt/local/include/SDL2/
+  -L/opt/local/lib
+  -Wl,-framework,OpenGl
+  -Wl,-framework,CoreFoundation
+  -lSDL2
+
+[env:simulator_macos_debug]
+platform        = ${env:simulator_linux_release.platform}
+extends         = env:simulator_linux_debug
+build_flags     = ${env:simulator_linux_debug.build_flags} ${simulator_macos.build_flags} -ggdb -Og -D_THREAD_SAFE
+build_unflags   = ${simulator_macos.build_unflags}
+
+[env:simulator_macos_release]
+platform        = ${env:simulator_linux_release.platform}
+extends         = env:simulator_linux_release
+build_flags     = ${env:simulator_linux_release.build_flags} ${simulator_macos.build_flags}
+build_unflags   = ${simulator_macos.build_unflags}
+
+#
+# Simulator for Windows 10
+#
+#  MSYS2 mingw-w64-x86_64 with these packages:
+#  pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-glm mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-SDL2_net
+#
+[env:simulator_windows]
+platform    = ${simulator_common.platform}
+extends     = simulator_common
+src_build_flags = ${simulator_common.src_build_flags} -fpermissive
+build_flags = ${simulator_common.build_flags} ${simulator_common.debug_build_flags} -fno-stack-protector -Wl,-subsystem,windows -ldl -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lopengl32 -lssp
+build_type = debug

commit 3229100025dc428d5038eca753c70f3c831d6336
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Apr 1 21:53:19 2021 -0500

    Split up platformio.ini (#21507)

diff --git a/ini/native.ini b/ini/native.ini
new file mode 100644
index 0000000000..dbdfd26f8b
--- /dev/null
+++ b/ini/native.ini
@@ -0,0 +1,23 @@
+#
+# Marlin Firmware
+# PlatformIO Configuration File
+#
+
+#################################
+#                               #
+#      Native / Simulation      #
+#                               #
+#################################
+
+#
+# No supported Arduino libraries, base Marlin only
+#
+[env:linux_native]
+platform        = native
+framework       =
+build_flags     = -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MARLIN_FIRMWARE__ -Wno-expansion-to-defined
+src_build_flags = -Wall -IMarlin/src/HAL/LINUX/include
+build_unflags   = -Wall
+lib_ldf_mode    = off
+lib_deps        =
+src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>
