commit 9d324f7b1f58872cdac9068f0c53bff72f4012b3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Dec 27 15:16:58 2023 -0600

    🎨 Remove unused usleep

diff --git a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
index 91b7e0f67f..3566528079 100644
--- a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
+++ b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
@@ -36,17 +36,16 @@
 #include "LCD_pin_routines.h"
 
 #ifdef __cplusplus
   extern "C" {
 #endif
 
 void u8g_SetPinOutput(uint8_t internal_pin_number) { SET_DIR_OUTPUT(internal_pin_number); }
 void u8g_SetPinInput(uint8_t internal_pin_number) { SET_DIR_INPUT(internal_pin_number); }
 void u8g_SetPinLevel(uint8_t pin, uint8_t pin_status) { WRITE_PIN(pin, pin_status); }
 uint8_t u8g_GetPinLevel(uint8_t pin) { return READ_PIN(pin); }
-void usleep(uint64_t microsec) { assert(false); /* why we here? */ }
 
 #ifdef __cplusplus
   }
 #endif
 
 #endif // __PLAT_NATIVE_SIM__

commit 198ef1e474276afb0a712cf2ec7dc7bf06b0898d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat May 7 22:02:18 2022 -0500

    🎨 Misc. code cleanup

diff --git a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
index 3b5acc1656..91b7e0f67f 100644
--- a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
+++ b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
@@ -31,22 +31,22 @@
  */
 
 #ifdef __PLAT_NATIVE_SIM__
 
 #include "../fastio.h"
 #include "LCD_pin_routines.h"
 
 #ifdef __cplusplus
   extern "C" {
 #endif
-void u8g_SetPinOutput(uint8_t internal_pin_number){SET_DIR_OUTPUT(internal_pin_number);}
-void u8g_SetPinInput(uint8_t internal_pin_number){SET_DIR_INPUT(internal_pin_number);}
-void u8g_SetPinLevel(uint8_t  pin, uint8_t  pin_status){WRITE_PIN(pin, pin_status);}
-uint8_t u8g_GetPinLevel(uint8_t pin){return READ_PIN(pin);}
-void usleep(uint64_t microsec){
-assert(false); // why we here?
-}
+
+void u8g_SetPinOutput(uint8_t internal_pin_number) { SET_DIR_OUTPUT(internal_pin_number); }
+void u8g_SetPinInput(uint8_t internal_pin_number) { SET_DIR_INPUT(internal_pin_number); }
+void u8g_SetPinLevel(uint8_t pin, uint8_t pin_status) { WRITE_PIN(pin, pin_status); }
+uint8_t u8g_GetPinLevel(uint8_t pin) { return READ_PIN(pin); }
+void usleep(uint64_t microsec) { assert(false); /* why we here? */ }
+
 #ifdef __cplusplus
   }
 #endif
 
 #endif // __PLAT_NATIVE_SIM__

commit 3e2a38b653b1d8479b7b38447d5fdff51ea9947f
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed Jan 12 08:24:56 2022 -0800

    📝 KHz => kHz (#23512)

diff --git a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
index 69ea291724..3b5acc1656 100644
--- a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
+++ b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
@@ -19,21 +19,21 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 /**
  * Low level pin manipulation routines - used by all the drivers.
  *
  * These are based on the LPC1768 pinMode, digitalRead & digitalWrite routines.
  *
  * Couldn't just call exact copies because the overhead killed the LCD update speed
- * With an intermediate level the softspi was running in the 10-20KHz range which
+ * With an intermediate level the softspi was running in the 10-20kHz range which
  * resulted in using about about 25% of the CPU's time.
  */
 
 #ifdef __PLAT_NATIVE_SIM__
 
 #include "../fastio.h"
 #include "LCD_pin_routines.h"
 
 #ifdef __cplusplus
   extern "C" {

commit 02b29c0fecd1d68226cd64d660bb409e6f131f9e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 10 19:49:03 2022 -0600

    📝 kHz => KHz

diff --git a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
index 3b5acc1656..69ea291724 100644
--- a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
+++ b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
@@ -19,21 +19,21 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 /**
  * Low level pin manipulation routines - used by all the drivers.
  *
  * These are based on the LPC1768 pinMode, digitalRead & digitalWrite routines.
  *
  * Couldn't just call exact copies because the overhead killed the LCD update speed
- * With an intermediate level the softspi was running in the 10-20kHz range which
+ * With an intermediate level the softspi was running in the 10-20KHz range which
  * resulted in using about about 25% of the CPU's time.
  */
 
 #ifdef __PLAT_NATIVE_SIM__
 
 #include "../fastio.h"
 #include "LCD_pin_routines.h"
 
 #ifdef __cplusplus
   extern "C" {

commit 21011eefa818f73d79746f7555fead94f0d3d20a
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Thu Jul 22 01:01:23 2021 +0100

    ✨ Simulator HAL and build targets (#22418)

diff --git a/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
new file mode 100644
index 0000000000..3b5acc1656
--- /dev/null
+++ b/Marlin/src/HAL/NATIVE_SIM/u8g/LCD_pin_routines.cpp
@@ -0,0 +1,52 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Low level pin manipulation routines - used by all the drivers.
+ *
+ * These are based on the LPC1768 pinMode, digitalRead & digitalWrite routines.
+ *
+ * Couldn't just call exact copies because the overhead killed the LCD update speed
+ * With an intermediate level the softspi was running in the 10-20kHz range which
+ * resulted in using about about 25% of the CPU's time.
+ */
+
+#ifdef __PLAT_NATIVE_SIM__
+
+#include "../fastio.h"
+#include "LCD_pin_routines.h"
+
+#ifdef __cplusplus
+  extern "C" {
+#endif
+void u8g_SetPinOutput(uint8_t internal_pin_number){SET_DIR_OUTPUT(internal_pin_number);}
+void u8g_SetPinInput(uint8_t internal_pin_number){SET_DIR_INPUT(internal_pin_number);}
+void u8g_SetPinLevel(uint8_t  pin, uint8_t  pin_status){WRITE_PIN(pin, pin_status);}
+uint8_t u8g_GetPinLevel(uint8_t pin){return READ_PIN(pin);}
+void usleep(uint64_t microsec){
+assert(false); // why we here?
+}
+#ifdef __cplusplus
+  }
+#endif
+
+#endif // __PLAT_NATIVE_SIM__
