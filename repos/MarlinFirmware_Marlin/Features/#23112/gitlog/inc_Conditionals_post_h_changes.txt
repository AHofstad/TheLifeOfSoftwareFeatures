commit 44c268216858393243e0773ffc35bb926fb816c5
Author: Justin Nesselrotte <admin@jnesselr.org>
Date:   Tue Jul 9 16:00:14 2024 -0600

    ‚ú® RS485 support with G-code M485 (#25680)
    
    Co-authored-by: Stephen Hawes <sphawes@gmail.com>
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7af8536d90..e6f307877d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1820,25 +1820,26 @@
 
 #if DISABLED(SENSORLESS_HOMING)
   #undef SENSORLESS_BACKOFF_MM
 #endif
 
 //
 // Set USING_HW_SERIALn flags for used Serial Ports
 //
 
 // Flag the indexed hardware serial ports in use
-#define SERIAL_IN_USE(N) (   (defined(SERIAL_PORT)      && N == SERIAL_PORT) \
-                          || (defined(SERIAL_PORT_2)    && N == SERIAL_PORT_2) \
-                          || (defined(SERIAL_PORT_3)    && N == SERIAL_PORT_3) \
-                          || (defined(MMU2_SERIAL_PORT) && N == MMU2_SERIAL_PORT) \
-                          || (defined(LCD_SERIAL_PORT)  && N == LCD_SERIAL_PORT) )
+#define SERIAL_IN_USE(N) (   (defined(SERIAL_PORT)       && N == SERIAL_PORT) \
+                          || (defined(SERIAL_PORT_2)     && N == SERIAL_PORT_2) \
+                          || (defined(SERIAL_PORT_3)     && N == SERIAL_PORT_3) \
+                          || (defined(MMU2_SERIAL_PORT)  && N == MMU2_SERIAL_PORT) \
+                          || (defined(LCD_SERIAL_PORT)   && N == LCD_SERIAL_PORT) \
+                          || (defined(RS485_SERIAL_PORT) && N == RS485_SERIAL_PORT) )
 
 // Flag the named hardware serial ports in use
 #define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && (CAT(HW_,A##_HARDWARE_SERIAL) == HW_Serial##N || CAT(HW_,A##_HARDWARE_SERIAL) == HW_MSerial##N))
 #define ANY_SERIAL_IS(N) (  SERIAL_IN_USE(N) \
                          || TMC_UART_IS(X,  N) || TMC_UART_IS(Y , N) || TMC_UART_IS(Z , N) \
                          || TMC_UART_IS(I,  N) || TMC_UART_IS(J , N) || TMC_UART_IS(K , N) \
                          || TMC_UART_IS(U,  N) || TMC_UART_IS(V , N) || TMC_UART_IS(W , N) \
                          || TMC_UART_IS(X2, N) || TMC_UART_IS(Y2, N) || TMC_UART_IS(Z2, N) || TMC_UART_IS(Z3, N) || TMC_UART_IS(Z4, N) \
                          || TMC_UART_IS(E0, N) || TMC_UART_IS(E1, N) || TMC_UART_IS(E2, N) || TMC_UART_IS(E3, N) || TMC_UART_IS(E4, N) )
 

commit 10ffb9cb68b1e21757c17fd3c1958eb740caa260
Author: Vovodroid <vovodroid@users.noreply.github.com>
Date:   Fri Jul 5 05:22:16 2024 +0300

    ‚ú® FAN_KICKSTART_LINEAR (#27072)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d1524cf82a..7af8536d90 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2750,21 +2750,21 @@
   #endif
   #if FAN_MIN_PWM == 0 && FAN_MAX_PWM == 255
     #define CALC_FAN_SPEED(f) (f ?: FAN_OFF_PWM)
   #else
     #define CALC_FAN_SPEED(f) (f ? map(f, 1, 255, FAN_MIN_PWM, FAN_MAX_PWM) : FAN_OFF_PWM)
   #endif
 #endif
 
 // Fan Kickstart
 #if FAN_KICKSTART_TIME && !defined(FAN_KICKSTART_POWER)
-  #define FAN_KICKSTART_POWER 180
+  #define FAN_KICKSTART_POWER TERN(FAN_KICKSTART_LINEAR, 255, 180)
 #endif
 
 // Servos
 #if NUM_SERVOS > 0
   #define HAS_SERVOS 1
   #if PIN_EXISTS(SERVO0)
     #define HAS_SERVO_0 1
   #endif
   #if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
     #define HAS_SERVO_1 1

commit b6284c9f0136c6eec2cee65854745374d5aa0e11
Author: David Buezas <dbuezas@users.noreply.github.com>
Date:   Sat Jun 29 22:43:08 2024 +0200

    üö∏ Skip REINIT_NOISY_LCD for I2C OLED (#27222)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bdaba1570a..d1524cf82a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -550,21 +550,21 @@
   #endif
 
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || ALL(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(ONBOARD_SDIO)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
-  #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
+  #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2, HAS_U8GLIB_I2C_OLED)
     #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
   #endif
 
 #endif // HAS_MEDIA
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)

commit cb6fd130ba21fa4fbca4172b3082a37550e8b9d9
Author: David Buezas <dbuezas@users.noreply.github.com>
Date:   Fri Jun 28 01:37:35 2024 +0200

    ‚ö°Ô∏è Load/init (most) settings after showing boot-screen (#27199)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>
    Co-authored-by: Peter Ellens <ellensp@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d43132e13c..bdaba1570a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3377,20 +3377,24 @@
   #endif
   #ifndef LCD_HEIGHT
     #if HAS_MARLINUI_U8GLIB
       #define LCD_HEIGHT 5
     #elif IS_DWIN_MARLINUI
       // Defined by header
     #else
       #define LCD_HEIGHT TERN(IS_ULTIPANEL, 4, 2)
     #endif
   #endif
+  // Prepare the LCD to show the bootscreen early in setup
+  #if ENABLED(SHOW_BOOTSCREEN) && ANY(HAS_LCD_CONTRAST, HAS_LCD_BRIGHTNESS)
+    #define HAS_EARLY_LCD_SETTINGS 1
+  #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
 
 #if PIN_EXISTS(SAFE_POWER) && DISABLED(DISABLE_DRIVER_SAFE_POWER_PROTECT)
   #define HAS_DRIVER_SAFE_POWER_PROTECT 1
 #endif
 

commit 1f9fc665ec21f95666801aa4fccc4f4f71932018
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 26 18:27:05 2024 -0500

    üö∏ MarlinUI:: clear_for_drawing

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 41c22e4835..d43132e13c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -550,22 +550,22 @@
   #endif
 
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || ALL(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(ONBOARD_SDIO)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
-  #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2, HAS_U8GLIB_I2C_OLED)
-    #define REINIT_NOISY_SPI_LCD 1  // Have LCDs with shared SPI re-init on SD insertion
+  #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
+    #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
   #endif
 
 #endif // HAS_MEDIA
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control

commit 7b21cd5d7253a95e1a65760b4817d7f6475ff280
Author: David Buezas <dbuezas@users.noreply.github.com>
Date:   Wed Jun 26 23:04:58 2024 +0200

    ü©π Don't reinit i2c LCDs (#27194)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d43132e13c..41c22e4835 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -550,22 +550,22 @@
   #endif
 
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || ALL(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(ONBOARD_SDIO)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
-  #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
-    #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
+  #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2, HAS_U8GLIB_I2C_OLED)
+    #define REINIT_NOISY_SPI_LCD 1  // Have LCDs with shared SPI re-init on SD insertion
   #endif
 
 #endif // HAS_MEDIA
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control

commit f2248f79d3c4a3649bd9a4b9d6abab0f94e4af94
Author: Jonathan Brazier <66009857+JonBr306@users.noreply.github.com>
Date:   Mon Jun 24 20:52:49 2024 +0100

    ‚ö°Ô∏è Implement CALIBRATION_GCODE as endstop (#27204)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8446a1acf0..d43132e13c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2193,20 +2193,25 @@
   #endif
 #endif
 
 #if NEED_Z_MIN_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE)
   #define USE_Z_MIN_PROBE 1
 #endif
 #if HAS_REAL_BED_PROBE
   #define HAS_Z_PROBE_STATE 1
 #endif
 
+#if PIN_EXISTS(CALIBRATION)
+  #define USE_CALIBRATION 1
+  #define HAS_CALIBRATION_STATE 1
+#endif
+
 #undef _ANY_STOP
 #undef _USE_STOP
 #undef _HAS_STATE
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if USE_X_MIN
     #define ENDSTOPPULLUP_XMIN

commit 08fe8a3076c21f881f151bc596e54ff24831bdea
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 12 13:08:17 2024 -0500

    üîß Undef motor current PWM for unused axes

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 64c95fa6c4..8446a1acf0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2807,21 +2807,21 @@
   #define HAS_PHOTOGRAPH 1
 #endif
 
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_MOTOR_CURRENT_SPI 1
 #endif
-#if HAS_EXTRUDERS && PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+#if ANY_PIN(MOTOR_CURRENT_PWM_E, MOTOR_CURRENT_PWM_E0, MOTOR_CURRENT_PWM_E1)
   #define HAS_MOTOR_CURRENT_PWM_E 1
 #endif
 #if HAS_MOTOR_CURRENT_PWM_E || ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K, MOTOR_CURRENT_PWM_U, MOTOR_CURRENT_PWM_V, MOTOR_CURRENT_PWM_W)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)

commit 87e94f456348e944ba4487aed436c762dd718966
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Mon Apr 1 16:05:11 2024 -0400

    üö∏ Update ProUI Plot graph - part 2 (#26563)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2683312976..64c95fa6c4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2480,23 +2480,20 @@
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET ((CHAMBER_MAXTEMP) - (CHAMBER_OVERSHOOT))
 #else
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
-  #if ENABLED(DWIN_LCD_PROUI) && ANY(PIDTEMP, PIDTEMPBED)
-    #define PROUI_PID_TUNE 1
-  #endif
 #endif
 
 // Thermal protection
 #if !HAS_HEATED_BED
   #undef THERMAL_PROTECTION_BED
   #undef THERMAL_PROTECTION_BED_PERIOD
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
@@ -3040,22 +3037,22 @@
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_LCD_PROUI, DWIN_CREALITY_LCD_JYERSUI) || ALL(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
-    #define M600_PURGE_MORE_RESUMABLE 1
+  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_CREALITY_LCD_JYERSUI) || ALL(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+    #define M600_PURGE_MORE_RESUMABLE 1  // UI provides some way to Purge More / Resume
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
 

commit c8d51c27234bcb2b1419d238e8751593d855dadb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Mar 2 04:16:39 2024 +0100

    üö∏ Enable G92.9 with rotational axes (#26174)
    
    - Supporting axes that can rotate forever.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c64bde0bc0..2683312976 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3272,21 +3272,21 @@
   // LCD timeout to status screen default is 15s
   #ifndef LCD_TIMEOUT_TO_STATUS
     #define LCD_TIMEOUT_TO_STATUS 15000
   #endif
   #if LCD_TIMEOUT_TO_STATUS
     #define HAS_SCREEN_TIMEOUT 1
   #endif
 #endif
 
 // Add commands that need sub-codes to this list
-#if ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY)
+#if ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY, HAS_ROTATIONAL_AXES)
   #define USE_GCODE_SUBCODES 1
 #endif
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH

commit 005d6879d998ccd900d1a311185f7069541dc623
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Feb 7 19:33:54 2024 +1300

    üîß Restore probe XY edit defaults, remove arbitrary Z limit (#26774)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6a24268895..c64bde0bc0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2954,30 +2954,30 @@
 #if ANY(MESH_BED_LEVELING, HAS_BED_PROBE)
   #ifndef PROBE_OFFSET_ZMIN
     #define PROBE_OFFSET_ZMIN -20
   #endif
   #ifndef PROBE_OFFSET_ZMAX
     #define PROBE_OFFSET_ZMAX  20
   #endif
 #endif
 #if HAS_BED_PROBE
   #ifndef PROBE_OFFSET_XMIN
-    #define PROBE_OFFSET_XMIN -50
+    #define PROBE_OFFSET_XMIN -(X_BED_SIZE)
   #endif
   #ifndef PROBE_OFFSET_XMAX
-    #define PROBE_OFFSET_XMAX  50
+    #define PROBE_OFFSET_XMAX  X_BED_SIZE
   #endif
   #ifndef PROBE_OFFSET_YMIN
-    #define PROBE_OFFSET_YMIN -50
+    #define PROBE_OFFSET_YMIN -(Y_BED_SIZE)
   #endif
   #ifndef PROBE_OFFSET_YMAX
-    #define PROBE_OFFSET_YMAX  50
+    #define PROBE_OFFSET_YMAX Y_BED_SIZE
   #endif
   #if ALL(ENDSTOPPULLUPS, USE_Z_MIN_PROBE)
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef XY_PROBE_FEEDRATE
     #define XY_PROBE_FEEDRATE ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif

commit 755b661c2d9e3beb2ba6b7602715d43891ecff3a
Author: Taylor Talkington <taylor.talkington@gmail.com>
Date:   Sun Feb 4 10:03:08 2024 -0500

    üîß Fix USE_Z_MIN conditions (#26762)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a1ef4a4fe0..6a24268895 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1950,22 +1950,23 @@
 /**
  * Endstop and probe flags
  * - Set USE_(AXIS)_(MIN|MAX) flags for each used endstop that has a pin, including those for DIAG0 state.
  *   - Note: Dual X Carriage uses "X" and "X2" steppers, but X_MIN and X_MAX endstop states (i.e., not X2_MAX).
  * - Set a HAS_(AXIS)_(MIN|MAX)_STATE flag for each endstop that has a state, including SPI Sensorless which don't use a pin.
  * - Set a HAS_(AXIS)_STATE flag for each axis that has at least one state.
  * - Consider (AXIS)_SAFETY_STOP for the case where the axis has a second endstop.
  *   Currently this must be distinct, but we can add a mechanism to use the same pin for sensorless
  *   or switches wired to the same pin, or for the single SPI stall state on the axis.
  */
-#define _USE_STOP(A,N,M,C) ((ANY(A##_HOME_TO_##M, A##N##_SAFETY_STOP) || (C+0)) && PIN_EXISTS(A##N##_##M) && !A##_SPI_SENSORLESS)
-#define _HAS_STATE(A,N,M) (USE_##A##N##_##M || (ANY(A##_HOME_TO_##M, A##N##_SAFETY_STOP) && A##_SPI_SENSORLESS))
+#define _ANY_STOP(A,N,M) ANY(A##_HOME_TO_##M, A##N##_SAFETY_STOP)
+#define _USE_STOP(A,N,M,C) ((_ANY_STOP(A,N,M) || (C+0)) && PIN_EXISTS(A##N##_##M) && !A##_SPI_SENSORLESS)
+#define _HAS_STATE(A,N,M) (USE_##A##N##_##M || (_ANY_STOP(A,N,M) && A##_SPI_SENSORLESS))
 
 #if _USE_STOP(X,,MIN,)
   #define USE_X_MIN 1
 #endif
 #if _USE_STOP(X,,MAX,ENABLED(DUAL_X_CARRIAGE))
   #define USE_X_MAX 1
 #endif
 #if _HAS_STATE(X,,MIN)
   #define HAS_X_MIN_STATE 1
 #endif
@@ -1985,21 +1986,21 @@
 #if _HAS_STATE(Y,,MIN)
   #define HAS_Y_MIN_STATE 1
 #endif
 #if _HAS_STATE(Y,,MAX)
   #define HAS_Y_MAX_STATE 1
 #endif
 #if HAS_Y_MIN_STATE || HAS_Y_MAX_STATE
   #define HAS_Y_STATE 1
 #endif
 
-#if _USE_STOP(Z,,MIN,ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN))
+#if _USE_STOP(Z,,MIN,ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN)) && (DISABLED(USE_PROBE_FOR_Z_HOMING) || ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN))
   #define USE_Z_MIN 1
 #endif
 #if _USE_STOP(Z,,MAX,)
   #define USE_Z_MAX 1
 #endif
 #if _HAS_STATE(Z,,MIN)
   #define HAS_Z_MIN_STATE 1
 #endif
 #if _HAS_STATE(Z,,MAX)
   #define HAS_Z_MAX_STATE 1
@@ -2192,21 +2193,23 @@
   #endif
 #endif
 
 #if NEED_Z_MIN_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE)
   #define USE_Z_MIN_PROBE 1
 #endif
 #if HAS_REAL_BED_PROBE
   #define HAS_Z_PROBE_STATE 1
 #endif
 
+#undef _ANY_STOP
 #undef _USE_STOP
+#undef _HAS_STATE
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if USE_X_MIN
     #define ENDSTOPPULLUP_XMIN
   #endif
   #if USE_X_MAX
     #define ENDSTOPPULLUP_XMAX

commit 5fea79fd07e5d874fbd217d8d9e8afceec60ef9e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jan 23 16:02:33 2024 -0600

    üîß Fix ROTATIONAL_AXIS_GANG
    
    Co-Authored-By: DerAndere <26200979+DerAndere1@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 49562cb856..a1ef4a4fe0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -89,26 +89,20 @@
 #if HAS_U_AXIS && !defined(AXIS7_NAME)
   #define AXIS7_NAME 'U'
 #endif
 #if HAS_V_AXIS && !defined(AXIS8_NAME)
   #define AXIS8_NAME 'V'
 #endif
 #if HAS_W_AXIS && !defined(AXIS9_NAME)
   #define AXIS9_NAME 'W'
 #endif
 
-#if ANY(AXIS4_ROTATES, AXIS5_ROTATES, AXIS6_ROTATES, AXIS7_ROTATES, AXIS8_ROTATES, AXIS9_ROTATES)
-  #define HAS_ROTATIONAL_AXES 1
-#else
-  #undef MANUAL_MOVE_DISTANCE_DEG
-#endif
-
 #if HAS_X_AXIS
   #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #endif
 #if HAS_Y_AXIS
   #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #endif
 #if HAS_Z_AXIS
   #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 #else
   #undef CONTROLLER_FAN_USE_Z_ONLY

commit aa7d5714867df05348ca63ad113ea9cf7ccc3271
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jan 22 17:32:01 2024 -0600

    ‚ôªÔ∏è LCD pins migration precursor (#26719)
    
    Preliminary changes for #25650

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a344d6183d..49562cb856 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3208,32 +3208,20 @@
 
 #if HAS_SOUND
   #if LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
     #define HAS_CHIRP 1
   #endif
 #else
   #undef SOUND_MENU_ITEM   // No buzzer menu item without a buzzer
   #undef SOUND_ON_DEFAULT
 #endif
 
-/**
- * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
- */
-#if HAS_MARLINUI_U8GLIB
-  #ifndef DOGLCD_SCK
-    #define DOGLCD_SCK  SD_SCK_PIN
-  #endif
-  #ifndef DOGLCD_MOSI
-    #define DOGLCD_MOSI SD_MOSI_PIN
-  #endif
-#endif
-
 /**
  * Z_CLEARANCE_FOR_HOMING / Z_CLEARANCE_BETWEEN_PROBES
  */
 #ifndef Z_CLEARANCE_FOR_HOMING
   #ifdef Z_CLEARANCE_BETWEEN_PROBES
     #define Z_CLEARANCE_FOR_HOMING Z_CLEARANCE_BETWEEN_PROBES
   #else
     #define Z_CLEARANCE_FOR_HOMING 0
   #endif
 #endif

commit 624226c91d23941ac8fe2bd8c3a20bb364e6393a
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon Jan 22 00:09:36 2024 +1300

    ü©π Fix STM32 CPU serial UUID (#26715)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 076b1301d5..a344d6183d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3410,10 +3410,22 @@
 #if ANY(ENDSTOPPULLDOWNS, ENDSTOPPULLDOWN_ZMIN_PROBE, \
     ENDSTOPPULLDOWN_XMIN, ENDSTOPPULLDOWN_YMIN, ENDSTOPPULLDOWN_ZMIN, \
     ENDSTOPPULLDOWN_IMIN, ENDSTOPPULLDOWN_JMIN, ENDSTOPPULLDOWN_KMIN, \
     ENDSTOPPULLDOWN_XMAX, ENDSTOPPULLDOWN_YMAX, ENDSTOPPULLDOWN_ZMAX, \
     ENDSTOPPULLDOWN_IMAX, ENDSTOPPULLDOWN_JMAX, ENDSTOPPULLDOWN_KMAX, \
     POWER_LOSS_PULLDOWN, CALIBRATION_PIN_PULLDOWN, FIL_RUNOUT_PULLDOWN, \
     FIL_RUNOUT1_PULLDOWN, FIL_RUNOUT2_PULLDOWN, FIL_RUNOUT3_PULLDOWN, FIL_RUNOUT4_PULLDOWN, \
     FIL_RUNOUT5_PULLDOWN, FIL_RUNOUT6_PULLDOWN, FIL_RUNOUT7_PULLDOWN, FIL_RUNOUT8_PULLDOWN)
   #define USING_PULLDOWNS 1
 #endif
+
+// Machine UUID can come from STM32 CPU Serial Number
+#ifdef MACHINE_UUID
+  #undef HAS_STM32_UID
+#elif !HAS_STM32_UID && defined(DEFAULT_MACHINE_UUID)
+  #define MACHINE_UUID DEFAULT_MACHINE_UUID
+#endif
+
+// Flag whether hex_print.cpp is needed
+#if ANY(AUTO_BED_LEVELING_UBL, M100_FREE_MEMORY_WATCHER, DEBUG_GCODE_PARSER, TMC_DEBUG, MARLIN_DEV_MODE, DEBUG_CARDREADER, M20_TIMESTAMP_SUPPORT, HAS_STM32_UID)
+  #define NEED_HEX_PRINT 1
+#endif

commit cb291e8d00a6c1ee0a778625e0170b6b7430a004
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jan 9 22:41:00 2024 -0600

    ü©π Fix some temp constraints

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index eabb011300..076b1301d5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2451,45 +2451,45 @@
 #endif
 #if PIN_EXISTS(HEATER_CHAMBER)
   #define HAS_HEATER_CHAMBER 1
 #endif
 
 // Shorthand for common combinations
 #if HAS_HEATED_BED
   #ifndef BED_OVERSHOOT
     #define BED_OVERSHOOT 10
   #endif
-  #define BED_MAX_TARGET (BED_MAXTEMP - (BED_OVERSHOOT))
+  #define BED_MAX_TARGET ((BED_MAXTEMP) - (BED_OVERSHOOT))
 #else
   #undef PIDTEMPBED
   #undef PREHEAT_BEFORE_LEVELING
 #endif
 
 #if HAS_TEMP_COOLER && PIN_EXISTS(COOLER)
   #define HAS_COOLER 1
   #ifndef COOLER_OVERSHOOT
     #define COOLER_OVERSHOOT 2
   #endif
-  #define COOLER_MIN_TARGET (COOLER_MINTEMP + (COOLER_OVERSHOOT))
-  #define COOLER_MAX_TARGET (COOLER_MAXTEMP - (COOLER_OVERSHOOT))
+  #define COOLER_MIN_TARGET ((COOLER_MINTEMP) + (COOLER_OVERSHOOT))
+  #define COOLER_MAX_TARGET ((COOLER_MAXTEMP) - (COOLER_OVERSHOOT))
 #endif
 
 #if HAS_TEMP_HOTEND || HAS_HEATED_BED || HAS_TEMP_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER || HAS_TEMP_BOARD || HAS_TEMP_SOC
   #define HAS_TEMP_SENSOR 1
 #endif
 
 #if HAS_TEMP_CHAMBER && HAS_HEATER_CHAMBER
   #define HAS_HEATED_CHAMBER 1
   #ifndef CHAMBER_OVERSHOOT
     #define CHAMBER_OVERSHOOT 10
   #endif
-  #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
+  #define CHAMBER_MAX_TARGET ((CHAMBER_MAXTEMP) - (CHAMBER_OVERSHOOT))
 #else
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
   #if ENABLED(DWIN_LCD_PROUI) && ANY(PIDTEMP, PIDTEMPBED)
     #define PROUI_PID_TUNE 1
   #endif

commit f6ecdae972c1e54f52daec5c63252281962da5b9
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Jan 10 10:19:47 2024 +1300

    üîß Base NUM_SERVO_PLUGS on SERVO PINS (#26640)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e87681684d..eabb011300 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2755,34 +2755,40 @@
     #define CALC_FAN_SPEED(f) (f ? map(f, 1, 255, FAN_MIN_PWM, FAN_MAX_PWM) : FAN_OFF_PWM)
   #endif
 #endif
 
 // Fan Kickstart
 #if FAN_KICKSTART_TIME && !defined(FAN_KICKSTART_POWER)
   #define FAN_KICKSTART_POWER 180
 #endif
 
 // Servos
-#if PIN_EXISTS(SERVO0) && NUM_SERVOS > 0
-  #define HAS_SERVO_0 1
-#endif
-#if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
-  #define HAS_SERVO_1 1
-#endif
-#if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
-  #define HAS_SERVO_2 1
-#endif
-#if PIN_EXISTS(SERVO3) && NUM_SERVOS > 3
-  #define HAS_SERVO_3 1
-#endif
 #if NUM_SERVOS > 0
   #define HAS_SERVOS 1
+  #if PIN_EXISTS(SERVO0)
+    #define HAS_SERVO_0 1
+  #endif
+  #if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
+    #define HAS_SERVO_1 1
+  #endif
+  #if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
+    #define HAS_SERVO_2 1
+  #endif
+  #if PIN_EXISTS(SERVO3) && NUM_SERVOS > 3
+    #define HAS_SERVO_3 1
+  #endif
+  #if PIN_EXISTS(SERVO4) && NUM_SERVOS > 4
+    #define HAS_SERVO_4 1
+  #endif
+  #if PIN_EXISTS(SERVO5) && NUM_SERVOS > 5
+    #define HAS_SERVO_5 1
+  #endif
   #if defined(PAUSE_SERVO_OUTPUT) && defined(RESUME_SERVO_OUTPUT)
     #define HAS_PAUSE_SERVO_OUTPUT 1
   #endif
 #else
   #undef SERVO_DELAY
   #undef DEACTIVATE_SERVOS_AFTER_MOVE
   #undef EDITABLE_SERVO_ANGLES
   #undef SERVO_DETACH_GCODE
 #endif
 

commit 5b74e25108a47acad41d9a50560cd1fbae38040a
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Tue Jan 2 20:25:26 2024 +1300

    üî® BSD string workaround (#26532)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 04e96177b5..e87681684d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -23,20 +23,30 @@
 
 /**
  * Conditionals_post.h
  * Internal defines that depend on Configurations and Pins but are not user-editable.
  */
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
+// Arduino IDE with Teensy Additions
+#ifdef TEENSYDUINO
+  #undef max
+  #define max(a,b) ((a)>(b)?(a):(b))
+  #undef min
+  #define min(a,b) ((a)<(b)?(a):(b))
+  #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
+  #define NOT_A_PIN 0 // For PINS_DEBUGGING
+#endif
+
 // ADC
 #ifdef BOARD_ADC_VREF_MV
   #define ADC_VREF_MV BOARD_ADC_VREF_MV
 #else
   #define ADC_VREF_MV HAL_ADC_VREF_MV
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
@@ -57,30 +67,20 @@
   #undef SDCARD_EEPROM_EMULATION
   #undef SRAM_EEPROM_EMULATION
   #undef FLASH_EEPROM_EMULATION
   #undef IIC_BL24CXX_EEPROM
 #endif
 
 #if DISABLED(IIC_BL24CXX_EEPROM)
   #undef OTA_FIRMWARE_UPDATE
 #endif
 
-#ifdef TEENSYDUINO
-  #undef max
-  #define max(a,b) ((a)>(b)?(a):(b))
-  #undef min
-  #define min(a,b) ((a)<(b)?(a):(b))
-
-  #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
-  #define NOT_A_PIN 0 // For PINS_DEBUGGING
-#endif
-
 /**
  * Axis lengths and center
  */
 #if HAS_I_AXIS && !defined(AXIS4_NAME)
   #define AXIS4_NAME 'A'
 #endif
 #if HAS_J_AXIS && !defined(AXIS5_NAME)
   #define AXIS5_NAME 'B'
 #endif
 #if HAS_K_AXIS && !defined(AXIS6_NAME)

commit c18294d83cc891c47d5abe56a4842adbe6fbb1aa
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Dec 21 15:30:03 2023 -0600

    üîß Optional FAN_INVERTING

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 42379506ce..04e96177b5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2721,24 +2721,20 @@
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else
   #define FAN_COUNT 0
 #endif
 
 #if FAN_COUNT > 0
   #define HAS_FAN 1
 #endif
 
-#ifndef FAN_INVERTING
-  #define FAN_INVERTING false
-#endif
-
 #if PIN_EXISTS(FANMUX0)
   #define HAS_FANMUX 1  // Part Cooling fan multipliexer
 #endif
 
 /**
  * MIN/MAX fan PWM scaling
  */
 #if ANY(HAS_FAN, USE_CONTROLLER_FAN)
   #ifndef FAN_OFF_PWM
     #define FAN_OFF_PWM 0

commit 401ba6613b1f9079ebd392adc8b0692c1525ab4f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Dec 21 15:25:48 2023 -0600

    üîß Up to 12 PWM fans

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 85b3a22cbf..42379506ce 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2466,25 +2466,21 @@
 
 #if HAS_TEMP_COOLER && PIN_EXISTS(COOLER)
   #define HAS_COOLER 1
   #ifndef COOLER_OVERSHOOT
     #define COOLER_OVERSHOOT 2
   #endif
   #define COOLER_MIN_TARGET (COOLER_MINTEMP + (COOLER_OVERSHOOT))
   #define COOLER_MAX_TARGET (COOLER_MAXTEMP - (COOLER_OVERSHOOT))
 #endif
 
-#if HAS_HEATED_BED || HAS_TEMP_CHAMBER
-  #define BED_OR_CHAMBER 1
-#endif
-
-#if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER || HAS_TEMP_BOARD || HAS_TEMP_SOC
+#if HAS_TEMP_HOTEND || HAS_HEATED_BED || HAS_TEMP_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER || HAS_TEMP_BOARD || HAS_TEMP_SOC
   #define HAS_TEMP_SENSOR 1
 #endif
 
 #if HAS_TEMP_CHAMBER && HAS_HEATER_CHAMBER
   #define HAS_HEATED_CHAMBER 1
   #ifndef CHAMBER_OVERSHOOT
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
 #else
@@ -2637,25 +2633,27 @@
   #if ENABLED(CONTROLLER_FAN_USE_BOARD_TEMP)
     #define HAS_CONTROLLER_FAN_BOARD_TEMP_TRIGGER 1
     #ifndef CONTROLLER_FAN_TRIGGER_TEMP
       #define CONTROLLER_FAN_TRIGGER_TEMP 30
     #endif
   #else
     #undef CONTROLLER_FAN_TRIGGER_TEMP
   #endif
 #endif
 
-// Print Cooling fans (limit)
+/**
+ * Up to 12 PWM fans
+ */
 #ifdef NUM_M106_FANS
   #define MAX_FANS NUM_M106_FANS
 #else
-  #define MAX_FANS 8  // Max supported fans
+  #define MAX_FANS 12  // Max supported fans
 #endif
 
 #define _IS_E_AUTO(N,F) (PIN_EXISTS(E##N##_AUTO_FAN) && E##N##_AUTO_FAN_PIN == FAN##F##_PIN)
 #define _HAS_FAN(F) (F < MAX_FANS && PIN_EXISTS(FAN##F) \
                      && !(HAS_CONTROLLER_FAN && CONTROLLER_FAN_PIN == FAN##F##_PIN) \
                      && !_IS_E_AUTO(0,F) && !_IS_E_AUTO(1,F) \
                      && !_IS_E_AUTO(2,F) && !_IS_E_AUTO(3,F) \
                      && !_IS_E_AUTO(4,F) && !_IS_E_AUTO(5,F) \
                      && !_IS_E_AUTO(6,F) && !_IS_E_AUTO(7,F))
 
@@ -2676,35 +2674,44 @@
 #endif
 #if _HAS_FAN(5)
   #define HAS_FAN5 1
 #endif
 #if _HAS_FAN(6)
   #define HAS_FAN6 1
 #endif
 #if _HAS_FAN(7)
   #define HAS_FAN7 1
 #endif
-#undef _NOT_E_AUTO
-#undef _HAS_FAN
-
-#if BED_OR_CHAMBER || HAS_FAN0
-  #define BED_OR_CHAMBER_OR_FAN 1
+#if _HAS_FAN(8)
+  #define HAS_FAN8 1
 #endif
-
-/**
- * Up to 8 PWM fans
- */
-#ifndef FAN_INVERTING
-  #define FAN_INVERTING false
+#if _HAS_FAN(9)
+  #define HAS_FAN9 1
 #endif
-
-#if HAS_FAN7
+#if _HAS_FAN(10)
+  #define HAS_FAN10 1
+#endif
+#if _HAS_FAN(11)
+  #define HAS_FAN11 1
+#endif
+#undef _HAS_FAN
+#undef _IS_E_AUTO
+
+#if HAS_FAN11
+  #define FAN_COUNT 12
+#elif HAS_FAN10
+  #define FAN_COUNT 11
+#elif HAS_FAN9
+  #define FAN_COUNT 10
+#elif HAS_FAN8
+  #define FAN_COUNT 9
+#elif HAS_FAN7
   #define FAN_COUNT 8
 #elif HAS_FAN6
   #define FAN_COUNT 7
 #elif HAS_FAN5
   #define FAN_COUNT 6
 #elif HAS_FAN4
   #define FAN_COUNT 5
 #elif HAS_FAN3
   #define FAN_COUNT 4
 #elif HAS_FAN2
@@ -2714,20 +2721,24 @@
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else
   #define FAN_COUNT 0
 #endif
 
 #if FAN_COUNT > 0
   #define HAS_FAN 1
 #endif
 
+#ifndef FAN_INVERTING
+  #define FAN_INVERTING false
+#endif
+
 #if PIN_EXISTS(FANMUX0)
   #define HAS_FANMUX 1  // Part Cooling fan multipliexer
 #endif
 
 /**
  * MIN/MAX fan PWM scaling
  */
 #if ANY(HAS_FAN, USE_CONTROLLER_FAN)
   #ifndef FAN_OFF_PWM
     #define FAN_OFF_PWM 0

commit 75da3555ee0910f3d572f4b8176afecdc941524b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Dec 14 10:03:11 2023 -0600

    üîß Update CLASSIC_JERK conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 09e020dab8..85b3a22cbf 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -30,25 +30,20 @@
   // Extras for CI testing
 #endif
 
 // ADC
 #ifdef BOARD_ADC_VREF_MV
   #define ADC_VREF_MV BOARD_ADC_VREF_MV
 #else
   #define ADC_VREF_MV HAL_ADC_VREF_MV
 #endif
 
-// Linear advance uses Jerk since E is an isolated axis
-#if ALL(HAS_JUNCTION_DEVIATION, LIN_ADVANCE)
-  #define HAS_LINEAR_E_JERK 1
-#endif
-
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
   #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION, QSPI_EEPROM)
     #define USE_EMULATED_EEPROM 1
   #elif ANY(I2C_EEPROM, SPI_EEPROM)
     #define USE_WIRED_EEPROM    1
   #elif ENABLED(IIC_BL24CXX_EEPROM)
     // nothing

commit 0a86a5f39c560f324e65b539b5be8da1ed91c60a
Author: David Buezas <dbuezas@users.noreply.github.com>
Date:   Sun Nov 26 02:55:51 2023 +0100

    ‚ú® MAX Thermocouples for Heated Bed (#26441)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b98ca4d371..09e020dab8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -690,50 +690,58 @@
       #else
         #define TEMP_REDUNDANT_PIN TEMP_7_PIN
       #endif
     #endif
   #endif
 #endif
 
 /**
  * Compatibility layer for MAX (SPI) temp boards
  */
+
+#define TEMP_SENSOR_IS_ANY_MAX_TC(n) (TEMP_SENSOR_IS_MAX_TC(n) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E##n)))
+
 #if HAS_MAX_TC
 
   // Software SPI - enable if MISO/SCK are defined.
-  #if (TEMP_SENSOR_IS_MAX_TC(0) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E1))) \
-    && PIN_EXISTS(TEMP_0_MISO) && PIN_EXISTS(TEMP_0_SCK) && DISABLED(TEMP_SENSOR_0_FORCE_HW_SPI)
+  #if TEMP_SENSOR_IS_ANY_MAX_TC(0) && DISABLED(TEMP_SENSOR_0_FORCE_HW_SPI) && PINS_EXIST(TEMP_0_MISO, TEMP_0_SCK)
     #if TEMP_SENSOR_0_IS_MAX31865 && !PIN_EXISTS(TEMP_0_MOSI)
       #error "TEMP_SENSOR_0 MAX31865 requires TEMP_0_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_0_FORCE_HW_SPI."
     #else
       #define TEMP_SENSOR_0_HAS_SPI_PINS 1
     #endif
   #endif
 
-  #if (TEMP_SENSOR_IS_MAX_TC(1) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E1))) \
-    && PIN_EXISTS(TEMP_1_MISO) && PIN_EXISTS(TEMP_1_SCK) && DISABLED(TEMP_SENSOR_1_FORCE_HW_SPI)
+  #if TEMP_SENSOR_IS_ANY_MAX_TC(1) && DISABLED(TEMP_SENSOR_1_FORCE_HW_SPI) && PINS_EXIST(TEMP_1_MISO, TEMP_1_SCK)
     #if TEMP_SENSOR_1_IS_MAX31865 && !PIN_EXISTS(TEMP_1_MOSI)
       #error "TEMP_SENSOR_1 MAX31865 requires TEMP_1_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_1_FORCE_HW_SPI."
     #else
       #define TEMP_SENSOR_1_HAS_SPI_PINS 1
     #endif
   #endif
 
-  #if (TEMP_SENSOR_IS_MAX_TC(2) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E2))) \
-    && PIN_EXISTS(TEMP_2_MISO) && PIN_EXISTS(TEMP_2_SCK) && DISABLED(TEMP_SENSOR_2_FORCE_HW_SPI)
+  #if TEMP_SENSOR_IS_ANY_MAX_TC(2) && DISABLED(TEMP_SENSOR_2_FORCE_HW_SPI) && PINS_EXIST(TEMP_2_MISO, TEMP_2_SCK)
     #if TEMP_SENSOR_2_IS_MAX31865 && !PIN_EXISTS(TEMP_2_MOSI)
       #error "TEMP_SENSOR_2 MAX31865 requires TEMP_2_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_2_FORCE_HW_SPI."
     #else
       #define TEMP_SENSOR_2_HAS_SPI_PINS 1
     #endif
   #endif
 
+  #if (TEMP_SENSOR_IS_MAX_TC(BED)) && DISABLED(TEMP_SENSOR_BED_FORCE_HW_SPI) && PINS_EXIST(TEMP_BED_MISO, TEMP_BED_SCK)
+    #if TEMP_SENSOR_BED_IS_MAX31865 && !PIN_EXISTS(TEMP_BED_MOSI)
+      #error "TEMP_SENSOR_BED MAX31865 requires TEMP_BED_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_BED_FORCE_HW_SPI."
+    #else
+      #define TEMP_SENSOR_BED_HAS_SPI_PINS 1
+    #endif
+  #endif
+
   //
   // User-defined thermocouple libraries
   //
   // Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
   // to select a USER library for MAX6675, MAX31855, MAX31865
   //
   #if ALL(HAS_MAX6675, LIB_MAX6675)
     #define USE_LIB_MAX6675 1
   #endif
   #if ALL(HAS_MAX31855, LIB_MAX31855)

commit cc8f7c83dabdff51a0980d8fa066833aeaa3d97d
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Tue Nov 21 04:57:31 2023 -0500

    üö∏ Fix, clean up ProUI (#26434)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 002e5621d4..b98ca4d371 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2484,29 +2484,23 @@
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
 #else
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
-#endif
-
-#if ENABLED(DWIN_LCD_PROUI)
-  #if ANY(PIDTEMP, PIDTEMPBED)
+  #if ENABLED(DWIN_LCD_PROUI) && ANY(PIDTEMP, PIDTEMPBED)
     #define PROUI_PID_TUNE 1
   #endif
-  #if ANY(PROUI_PID_TUNE, MPC_AUTOTUNE) && DISABLED(DISABLE_TUNING_GRAPH)
-    #define PROUI_TUNING_GRAPH 1
-  #endif
 #endif
 
 // Thermal protection
 #if !HAS_HEATED_BED
   #undef THERMAL_PROTECTION_BED
   #undef THERMAL_PROTECTION_BED_PERIOD
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif

commit aed577271ff94c822e861d8f652f2bdf46b2aeb9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 17 22:39:00 2023 -0600

    üî® Rotational move items (#26438)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d172f6d858..002e5621d4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -96,20 +96,22 @@
 #endif
 #if HAS_V_AXIS && !defined(AXIS8_NAME)
   #define AXIS8_NAME 'V'
 #endif
 #if HAS_W_AXIS && !defined(AXIS9_NAME)
   #define AXIS9_NAME 'W'
 #endif
 
 #if ANY(AXIS4_ROTATES, AXIS5_ROTATES, AXIS6_ROTATES, AXIS7_ROTATES, AXIS8_ROTATES, AXIS9_ROTATES)
   #define HAS_ROTATIONAL_AXES 1
+#else
+  #undef MANUAL_MOVE_DISTANCE_DEG
 #endif
 
 #if HAS_X_AXIS
   #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #endif
 #if HAS_Y_AXIS
   #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #endif
 #if HAS_Z_AXIS
   #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))

commit cb044d989c397fcbf6f106502df69a7e5c41d34b
Author: Vladimir Sitnikov <sitnikov.vladimir@gmail.com>
Date:   Sun Nov 5 09:46:57 2023 +0300

    ‚ú® Probe XY Offset value limits (#26267)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ab3da73259..d172f6d858 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2936,28 +2936,40 @@
     #define CASE_LIGHT_MAX_PWM 255
   #elif !WITHIN(CASE_LIGHT_MAX_PWM, 1, 255)
     #error "CASE_LIGHT_MAX_PWM must be a value from 1 to 255."
   #endif
 #endif
 
 /**
  * Bed Probe dependencies
  */
 #if ANY(MESH_BED_LEVELING, HAS_BED_PROBE)
-  #ifndef Z_PROBE_OFFSET_RANGE_MIN
-    #define Z_PROBE_OFFSET_RANGE_MIN -20
+  #ifndef PROBE_OFFSET_ZMIN
+    #define PROBE_OFFSET_ZMIN -20
   #endif
-  #ifndef Z_PROBE_OFFSET_RANGE_MAX
-    #define Z_PROBE_OFFSET_RANGE_MAX 20
+  #ifndef PROBE_OFFSET_ZMAX
+    #define PROBE_OFFSET_ZMAX  20
   #endif
 #endif
 #if HAS_BED_PROBE
+  #ifndef PROBE_OFFSET_XMIN
+    #define PROBE_OFFSET_XMIN -50
+  #endif
+  #ifndef PROBE_OFFSET_XMAX
+    #define PROBE_OFFSET_XMAX  50
+  #endif
+  #ifndef PROBE_OFFSET_YMIN
+    #define PROBE_OFFSET_YMIN -50
+  #endif
+  #ifndef PROBE_OFFSET_YMAX
+    #define PROBE_OFFSET_YMAX  50
+  #endif
   #if ALL(ENDSTOPPULLUPS, USE_Z_MIN_PROBE)
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef XY_PROBE_FEEDRATE
     #define XY_PROBE_FEEDRATE ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif
 #endif

commit d695e5f7bc409bc3d8ede798db5205c2c6a162f1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 12 12:56:44 2023 -0500

    üîß Misc. probe opts

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 33b42e8511..ab3da73259 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2953,23 +2953,20 @@
 #if HAS_BED_PROBE
   #if ALL(ENDSTOPPULLUPS, USE_Z_MIN_PROBE)
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef XY_PROBE_FEEDRATE
     #define XY_PROBE_FEEDRATE ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif
-#else
-  #undef NOZZLE_TO_PROBE_OFFSET
-  #undef PROBING_STEPPERS_OFF
 #endif
 
 /**
  * XYZ Bed Skew Correction
  */
 #if ENABLED(SKEW_CORRECTION)
   #define SKEW_FACTOR_MIN -1
   #define SKEW_FACTOR_MAX 1
 
   #define _GET_SIDE(a,b,c) (SQRT(2*sq(a)+2*sq(b)-4*sq(c))*0.5)
@@ -3210,24 +3207,24 @@
  * Z_CLEARANCE_FOR_HOMING / Z_CLEARANCE_BETWEEN_PROBES
  */
 #ifndef Z_CLEARANCE_FOR_HOMING
   #ifdef Z_CLEARANCE_BETWEEN_PROBES
     #define Z_CLEARANCE_FOR_HOMING Z_CLEARANCE_BETWEEN_PROBES
   #else
     #define Z_CLEARANCE_FOR_HOMING 0
   #endif
 #endif
 
+#ifndef Z_CLEARANCE_BETWEEN_PROBES
+  #define Z_CLEARANCE_BETWEEN_PROBES Z_CLEARANCE_FOR_HOMING
+#endif
 #if PROBE_SELECTED
-  #ifndef Z_CLEARANCE_BETWEEN_PROBES
-    #define Z_CLEARANCE_BETWEEN_PROBES Z_CLEARANCE_FOR_HOMING
-  #endif
   #if Z_CLEARANCE_BETWEEN_PROBES > Z_CLEARANCE_FOR_HOMING
     #define Z_CLEARANCE_BETWEEN_MANUAL_PROBES Z_CLEARANCE_BETWEEN_PROBES
   #else
     #define Z_CLEARANCE_BETWEEN_MANUAL_PROBES Z_CLEARANCE_FOR_HOMING
   #endif
   #ifndef Z_CLEARANCE_MULTI_PROBE
     #define Z_CLEARANCE_MULTI_PROBE Z_CLEARANCE_BETWEEN_PROBES
   #endif
   #if ENABLED(BLTOUCH) && !defined(BLTOUCH_DELAY)
     #define BLTOUCH_DELAY 500

commit 49ead19d008dd54403b37818b21e79b8ccfa4b89
Author: Vovodroid <vovodroid@users.noreply.github.com>
Date:   Fri Aug 18 02:13:10 2023 +0300

    üîß Reversible file alpha sorting (#26130)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8f3a2eee27..33b42e8511 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3330,22 +3330,22 @@
     #undef SDSORT_LIMIT
     #undef SDSORT_USES_RAM
     #undef SDSORT_USES_STACK
     #undef SDSORT_CACHE_NAMES
     #define SDSORT_LIMIT       64
     #define SDSORT_USES_RAM    true
     #define SDSORT_USES_STACK  false
     #define SDSORT_CACHE_NAMES true
     #define SDSORT_CACHE_LPC1768_WARNING 1
   #endif
-  #ifndef FOLDER_SORTING
-    #define FOLDER_SORTING     -1
+  #ifndef SDSORT_FOLDERS
+    #define SDSORT_FOLDERS     -1
   #endif
   #ifndef SDSORT_GCODE
     #define SDSORT_GCODE       false
   #endif
   #ifndef SDSORT_DYNAMIC_RAM
     #define SDSORT_DYNAMIC_RAM false
   #endif
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif

commit 06d46a0ef96a766b114db5902beccb86829ba57c
Author: Alexey D. Filimonov <alexey@filimonic.net>
Date:   Sat Aug 5 03:07:56 2023 +0300

    ‚ú® AUTO_POWER_SPINDLE_LASER (#25739)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 13f20114e5..8f3a2eee27 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2616,20 +2616,23 @@
 #if ANY(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS, AUTO_REPORT_POSITION, AUTO_REPORT_FANS)
   #define HAS_AUTO_REPORTING 1
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 #if !HAS_AUTO_COOLER_FAN || AUTO_COOLER_IS_E
   #undef AUTO_POWER_COOLER_FAN
 #endif
+#if !HAS_CUTTER
+  #undef AUTO_POWER_SPINDLE_LASER
+#endif
 
 /**
  * Controller Fan Settings
  */
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define HAS_CONTROLLER_FAN 1
 #endif
 
 #if HAS_CONTROLLER_FAN
   #if ENABLED(CONTROLLER_FAN_USE_BOARD_TEMP)

commit bed26734a28175f7ef9669d5190bf7ebc6227223
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Aug 1 23:03:06 2023 -0500

    üîß More endstops refactoring (#25758)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 442fcfbafd..13f20114e5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1417,27 +1417,27 @@
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
     #undef Z2_STALL_SENSITIVITY
     #undef Z3_STALL_SENSITIVITY
     #undef Z4_STALL_SENSITIVITY
   #endif
 
   #if AXIS_IS_TMC(X)
     #if defined(X_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(X)
       #define X_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(X)
+        #define X_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(X)
       #define X_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define X_SPI_SENSORLESS X_SENSORLESS
-    #endif
     #ifndef X_INTERPOLATE
       #define X_INTERPOLATE INTERPOLATE
     #endif
     #ifndef X_HOLD_MULTIPLIER
       #define X_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef X_SLAVE_ADDRESS
       #define X_SLAVE_ADDRESS 0
     #endif
   #endif
@@ -1455,27 +1455,27 @@
       #define X2_HOLD_MULTIPLIER X_HOLD_MULTIPLIER
     #endif
     #ifndef X2_SLAVE_ADDRESS
       #define X2_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(Y)
     #if defined(Y_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Y)
       #define Y_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(Y)
+        #define Y_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(Y)
       #define Y_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define Y_SPI_SENSORLESS Y_SENSORLESS
-    #endif
     #ifndef Y_INTERPOLATE
       #define Y_INTERPOLATE INTERPOLATE
     #endif
     #ifndef Y_HOLD_MULTIPLIER
       #define Y_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef Y_SLAVE_ADDRESS
       #define Y_SLAVE_ADDRESS 0
     #endif
   #endif
@@ -1493,27 +1493,27 @@
       #define Y2_HOLD_MULTIPLIER Y_HOLD_MULTIPLIER
     #endif
     #ifndef Y2_SLAVE_ADDRESS
       #define Y2_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(Z)
     #if defined(Z_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z)
       #define Z_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(Z)
+        #define Z_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(Z)
       #define Z_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define Z_SPI_SENSORLESS Z_SENSORLESS
-    #endif
     #ifndef Z_INTERPOLATE
       #define Z_INTERPOLATE INTERPOLATE
     #endif
     #ifndef Z_HOLD_MULTIPLIER
       #define Z_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef Z_SLAVE_ADDRESS
       #define Z_SLAVE_ADDRESS 0
     #endif
   #endif
@@ -1565,132 +1565,132 @@
       #define Z4_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
     #endif
     #ifndef Z4_SLAVE_ADDRESS
       #define Z4_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(I)
     #if defined(I_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(I)
       #define I_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(I)
+        #define I_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(I)
       #define I_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define I_SPI_SENSORLESS I_SENSORLESS
-    #endif
     #ifndef I_INTERPOLATE
       #define I_INTERPOLATE INTERPOLATE
     #endif
     #ifndef I_HOLD_MULTIPLIER
       #define I_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef I_SLAVE_ADDRESS
       #define I_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(J)
     #if defined(J_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(J)
       #define J_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(J)
+        #define J_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(J)
       #define J_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define J_SPI_SENSORLESS J_SENSORLESS
-    #endif
     #ifndef J_INTERPOLATE
       #define J_INTERPOLATE INTERPOLATE
     #endif
     #ifndef J_HOLD_MULTIPLIER
       #define J_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef J_SLAVE_ADDRESS
       #define J_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(K)
     #if defined(K_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(K)
       #define K_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(K)
+        #define K_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(K)
       #define K_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define K_SPI_SENSORLESS K_SENSORLESS
-    #endif
     #ifndef K_INTERPOLATE
       #define K_INTERPOLATE INTERPOLATE
     #endif
     #ifndef K_HOLD_MULTIPLIER
       #define K_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef K_SLAVE_ADDRESS
       #define K_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(U)
     #if defined(U_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(U)
       #define U_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(U)
+        #define U_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(U)
       #define U_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define U_SPI_SENSORLESS U_SENSORLESS
-    #endif
     #ifndef U_INTERPOLATE
       #define U_INTERPOLATE INTERPOLATE
     #endif
     #ifndef U_HOLD_MULTIPLIER
       #define U_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef U_SLAVE_ADDRESS
       #define U_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(V)
     #if defined(V_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(V)
       #define V_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(V)
+        #define V_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(V)
       #define V_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define V_SPI_SENSORLESS V_SENSORLESS
-    #endif
     #ifndef V_INTERPOLATE
       #define V_INTERPOLATE INTERPOLATE
     #endif
     #ifndef V_HOLD_MULTIPLIER
       #define V_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef V_SLAVE_ADDRESS
       #define V_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(W)
     #if defined(W_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(W)
       #define W_SENSORLESS 1
+      #if ENABLED(SPI_ENDSTOPS) && AXIS_HAS_SPI(W)
+        #define W_SPI_SENSORLESS 1
+      #endif
     #endif
     #if AXIS_HAS_STEALTHCHOP(W)
       #define W_HAS_STEALTHCHOP 1
     #endif
-    #if ENABLED(SPI_ENDSTOPS)
-      #define W_SPI_SENSORLESS W_SENSORLESS
-    #endif
     #ifndef W_INTERPOLATE
       #define W_INTERPOLATE INTERPOLATE
     #endif
     #ifndef W_HOLD_MULTIPLIER
       #define W_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef W_SLAVE_ADDRESS
       #define W_SLAVE_ADDRESS 0
     #endif
   #endif
@@ -1941,184 +1941,291 @@
     #undef ESP_WIFI_MODULE_RESET_PIN
     #undef ESP_WIFI_MODULE_ENABLE_PIN
     #undef ESP_WIFI_MODULE_TXD_PIN
     #undef ESP_WIFI_MODULE_RXD_PIN
     #undef ESP_WIFI_MODULE_GPIO0_PIN
     #undef ESP_WIFI_MODULE_GPIO2_PIN
     #undef ESP_WIFI_MODULE_GPIO4_PIN
   #endif
 #endif
 
-//
-// Endstops and bed probe
-//
-
-#define _USE_STOP(A,N,M,C) ((A##_HOME_TO_##M || (C+0)) && PIN_EXISTS(A##N##_##M))
+/**
+ * Endstop and probe flags
+ * - Set USE_(AXIS)_(MIN|MAX) flags for each used endstop that has a pin, including those for DIAG0 state.
+ *   - Note: Dual X Carriage uses "X" and "X2" steppers, but X_MIN and X_MAX endstop states (i.e., not X2_MAX).
+ * - Set a HAS_(AXIS)_(MIN|MAX)_STATE flag for each endstop that has a state, including SPI Sensorless which don't use a pin.
+ * - Set a HAS_(AXIS)_STATE flag for each axis that has at least one state.
+ * - Consider (AXIS)_SAFETY_STOP for the case where the axis has a second endstop.
+ *   Currently this must be distinct, but we can add a mechanism to use the same pin for sensorless
+ *   or switches wired to the same pin, or for the single SPI stall state on the axis.
+ */
+#define _USE_STOP(A,N,M,C) ((ANY(A##_HOME_TO_##M, A##N##_SAFETY_STOP) || (C+0)) && PIN_EXISTS(A##N##_##M) && !A##_SPI_SENSORLESS)
+#define _HAS_STATE(A,N,M) (USE_##A##N##_##M || (ANY(A##_HOME_TO_##M, A##N##_SAFETY_STOP) && A##_SPI_SENSORLESS))
 
 #if _USE_STOP(X,,MIN,)
   #define USE_X_MIN 1
 #endif
 #if _USE_STOP(X,,MAX,ENABLED(DUAL_X_CARRIAGE))
   #define USE_X_MAX 1
 #endif
-#if USE_X_MIN || USE_X_MAX
-  #define HAS_X_ENDSTOP 1
+#if _HAS_STATE(X,,MIN)
+  #define HAS_X_MIN_STATE 1
+#endif
+#if _HAS_STATE(X,,MAX)
+  #define HAS_X_MAX_STATE 1
+#endif
+#if HAS_X_MIN_STATE || HAS_X_MAX_STATE
+  #define HAS_X_STATE 1
 #endif
 
 #if _USE_STOP(Y,,MIN,)
   #define USE_Y_MIN 1
-#elif _USE_STOP(Y,,MAX,)
+#endif
+#if _USE_STOP(Y,,MAX,)
   #define USE_Y_MAX 1
 #endif
-#if USE_Y_MIN || USE_Y_MAX
-  #define HAS_Y_ENDSTOP 1
+#if _HAS_STATE(Y,,MIN)
+  #define HAS_Y_MIN_STATE 1
+#endif
+#if _HAS_STATE(Y,,MAX)
+  #define HAS_Y_MAX_STATE 1
+#endif
+#if HAS_Y_MIN_STATE || HAS_Y_MAX_STATE
+  #define HAS_Y_STATE 1
 #endif
 
-#if _USE_STOP(Z,,MIN,ANY(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN, HAS_DELTA_SENSORLESS_PROBING))
+#if _USE_STOP(Z,,MIN,ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN))
   #define USE_Z_MIN 1
-  #if !HAS_DELTA_SENSORLESS_PROBING
-    #define HAS_Z_MIN_PIN 1
-  #endif
 #endif
 #if _USE_STOP(Z,,MAX,)
   #define USE_Z_MAX 1
 #endif
-#if USE_Z_MIN || USE_Z_MAX
-  #define HAS_Z_ENDSTOP 1
+#if _HAS_STATE(Z,,MIN)
+  #define HAS_Z_MIN_STATE 1
+#endif
+#if _HAS_STATE(Z,,MAX)
+  #define HAS_Z_MAX_STATE 1
+#endif
+#if HAS_Z_MIN_STATE || HAS_Z_MAX_STATE
+  #define HAS_Z_STATE 1
 #endif
 
 #if _USE_STOP(I,,MIN,)
   #define USE_I_MIN 1
-#elif _USE_STOP(I,,MAX,)
+#endif
+#if _USE_STOP(I,,MAX,)
   #define USE_I_MAX 1
 #endif
-#if USE_I_MIN || USE_I_MAX
-  #define HAS_I_ENDSTOP 1
+#if _HAS_STATE(I,,MIN)
+  #define HAS_I_MIN_STATE 1
+#endif
+#if _HAS_STATE(I,,MAX)
+  #define HAS_I_MAX_STATE 1
+#endif
+#if HAS_I_MIN_STATE || HAS_I_MAX_STATE
+  #define HAS_I_STATE 1
 #endif
 
 #if _USE_STOP(J,,MIN,)
   #define USE_J_MIN 1
-#elif _USE_STOP(J,,MAX,)
+#endif
+#if _USE_STOP(J,,MAX,)
   #define USE_J_MAX 1
 #endif
-#if USE_J_MIN || USE_J_MAX
-  #define HAS_J_ENDSTOP 1
+#if _HAS_STATE(J,,MIN)
+  #define HAS_J_MIN_STATE 1
+#endif
+#if _HAS_STATE(J,,MAX)
+  #define HAS_J_MAX_STATE 1
+#endif
+#if HAS_J_MIN_STATE || HAS_J_MAX_STATE
+  #define HAS_J_STATE 1
 #endif
 
 #if _USE_STOP(K,,MIN,)
   #define USE_K_MIN 1
-#elif _USE_STOP(K,,MAX,)
+#endif
+#if _USE_STOP(K,,MAX,)
   #define USE_K_MAX 1
 #endif
-#if USE_K_MIN || USE_K_MAX
-  #define HAS_K_ENDSTOP 1
+#if _HAS_STATE(K,,MIN)
+  #define HAS_K_MIN_STATE 1
+#endif
+#if _HAS_STATE(K,,MAX)
+  #define HAS_K_MAX_STATE 1
+#endif
+#if HAS_K_MIN_STATE || HAS_K_MAX_STATE
+  #define HAS_K_STATE 1
 #endif
 
 #if _USE_STOP(U,,MIN,)
   #define USE_U_MIN 1
-#elif _USE_STOP(U,,MAX,)
+#endif
+#if _USE_STOP(U,,MAX,)
   #define USE_U_MAX 1
 #endif
-#if USE_U_MIN || USE_U_MAX
-  #define HAS_U_ENDSTOP 1
+#if _HAS_STATE(U,,MIN)
+  #define HAS_U_MIN_STATE 1
+#endif
+#if _HAS_STATE(U,,MAX)
+  #define HAS_U_MAX_STATE 1
+#endif
+#if HAS_U_MIN_STATE || HAS_U_MAX_STATE
+  #define HAS_U_STATE 1
 #endif
 
 #if _USE_STOP(V,,MIN,)
   #define USE_V_MIN 1
-#elif _USE_STOP(V,,MAX,)
+#endif
+#if _USE_STOP(V,,MAX,)
   #define USE_V_MAX 1
 #endif
-#if USE_V_MIN || USE_V_MAX
-  #define HAS_V_ENDSTOP 1
+#if _HAS_STATE(V,,MIN)
+  #define HAS_V_MIN_STATE 1
+#endif
+#if _HAS_STATE(V,,MAX)
+  #define HAS_V_MAX_STATE 1
+#endif
+#if HAS_V_MIN_STATE || HAS_V_MAX_STATE
+  #define HAS_V_STATE 1
 #endif
 
 #if _USE_STOP(W,,MIN,)
   #define USE_W_MIN 1
-#elif _USE_STOP(W,,MAX,)
+#endif
+#if _USE_STOP(W,,MAX,)
   #define USE_W_MAX 1
 #endif
-#if USE_W_MIN || USE_W_MAX
-  #define HAS_W_ENDSTOP 1
+#if _HAS_STATE(W,,MIN)
+  #define HAS_W_MIN_STATE 1
+#endif
+#if _HAS_STATE(W,,MAX)
+  #define HAS_W_MAX_STATE 1
+#endif
+#if HAS_W_MIN_STATE || HAS_W_MAX_STATE
+  #define HAS_W_STATE 1
 #endif
 
-#if ANY(DUAL_X_CARRIAGE, X_DUAL_ENDSTOPS)
+#if ENABLED(X_DUAL_ENDSTOPS)
   #if _USE_STOP(X,2,MIN,)
     #define USE_X2_MIN 1
-  #elif _USE_STOP(X,2,MAX,)
+  #endif
+  #if _USE_STOP(X,2,MAX,)
     #define USE_X2_MAX 1
   #endif
-  #if USE_X2_MIN || USE_X2_MAX
-    #define HAS_X2_ENDSTOP 1
+  #if _HAS_STATE(X,2,MIN) || HAS_X_MIN_STATE
+    #define HAS_X2_MIN_STATE 1
+  #endif
+  #if _HAS_STATE(X,2,MAX) || HAS_X_MAX_STATE
+    #define HAS_X2_MAX_STATE 1
+  #endif
+  #if HAS_X2_MIN_STATE || HAS_X2_MAX_STATE
+    #define HAS_X2_STATE 1
   #endif
 #endif
 
 #if ENABLED(Y_DUAL_ENDSTOPS)
   #if _USE_STOP(Y,2,MIN,)
     #define USE_Y2_MIN 1
-  #elif _USE_STOP(Y,2,MAX,)
+  #endif
+  #if _USE_STOP(Y,2,MAX,)
     #define USE_Y2_MAX 1
   #endif
-  #if USE_Y2_MIN || USE_Y2_MAX
-    #define HAS_Y2_ENDSTOP 1
+  #if _HAS_STATE(Y,2,MIN) || HAS_Y_MIN_STATE
+    #define HAS_Y2_MIN_STATE 1
+  #endif
+  #if _HAS_STATE(Y,2,MAX) || HAS_Y_MAX_STATE
+    #define HAS_Y2_MAX_STATE 1
+  #endif
+  #if HAS_Y2_MIN_STATE || HAS_Y2_MAX_STATE
+    #define HAS_Y2_STATE 1
   #endif
 #endif
 
 #if ENABLED(Z_MULTI_ENDSTOPS)
   #if _USE_STOP(Z,2,MIN,)
     #define USE_Z2_MIN 1
-  #elif _USE_STOP(Z,2,MAX,)
+  #endif
+  #if _USE_STOP(Z,2,MAX,)
     #define USE_Z2_MAX 1
   #endif
-  #if USE_Z2_MIN || USE_Z2_MAX
-    #define HAS_Z2_ENDSTOP 1
+  #if _HAS_STATE(Z,2,MIN) || HAS_Z_MIN_STATE
+    #define HAS_Z2_MIN_STATE 1
+  #endif
+  #if _HAS_STATE(Z,2,MAX) || HAS_Z_MAX_STATE
+    #define HAS_Z2_MAX_STATE 1
+  #endif
+  #if HAS_Z2_MIN_STATE || HAS_Z2_MAX_STATE
+    #define HAS_Z2_STATE 1
   #endif
   #if NUM_Z_STEPPERS >= 3
     #if _USE_STOP(Z,3,MIN,)
       #define USE_Z3_MIN 1
-    #elif _USE_STOP(Z,3,MAX,)
+    #endif
+    #if _USE_STOP(Z,3,MAX,)
       #define USE_Z3_MAX 1
     #endif
-    #if USE_Z3_MIN || USE_Z3_MAX
-      #define HAS_Z3_ENDSTOP 1
+    #if _HAS_STATE(Z,3,MIN) || HAS_Z_MIN_STATE
+      #define HAS_Z3_MIN_STATE 1
+    #endif
+    #if _HAS_STATE(Z,3,MAX) || HAS_Z_MAX_STATE
+      #define HAS_Z3_MAX_STATE 1
+    #endif
+    #if HAS_Z3_MIN_STATE || HAS_Z3_MAX_STATE
+      #define HAS_Z3_STATE 1
     #endif
   #endif
   #if NUM_Z_STEPPERS >= 4
     #if _USE_STOP(Z,4,MIN,)
       #define USE_Z4_MIN 1
-    #elif _USE_STOP(Z,4,MAX,)
+    #endif
+    #if _USE_STOP(Z,4,MAX,)
       #define USE_Z4_MAX 1
     #endif
-    #if USE_Z4_MIN || USE_Z4_MAX
-      #define HAS_Z4_ENDSTOP 1
+    #if _HAS_STATE(Z,4,MIN) || HAS_Z_MIN_STATE
+      #define HAS_Z4_MIN_STATE 1
+    #endif
+    #if _HAS_STATE(Z,4,MAX) || HAS_Z_MAX_STATE
+      #define HAS_Z4_MAX_STATE 1
+    #endif
+    #if HAS_Z4_MIN_STATE || HAS_Z4_MAX_STATE
+      #define HAS_Z4_STATE 1
     #endif
   #endif
 #endif
 
+#if NEED_Z_MIN_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE)
+  #define USE_Z_MIN_PROBE 1
+#endif
+#if HAS_REAL_BED_PROBE
+  #define HAS_Z_PROBE_STATE 1
+#endif
+
 #undef _USE_STOP
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if USE_X_MIN
     #define ENDSTOPPULLUP_XMIN
   #endif
   #if USE_X_MAX
     #define ENDSTOPPULLUP_XMAX
   #endif
   #if USE_Y_MIN
     #define ENDSTOPPULLUP_YMIN
   #endif
   #if USE_Y_MAX
     #define ENDSTOPPULLUP_YMAX
   #endif
-  #if HAS_Z_MIN_PIN
+  #if USE_Z_MIN
     #define ENDSTOPPULLUP_ZMIN
   #endif
   #if USE_Z_MAX
     #define ENDSTOPPULLUP_ZMAX
   #endif
   #if USE_I_MIN
     #define ENDSTOPPULLUP_IMIN
   #endif
   #if USE_I_MAX
     #define ENDSTOPPULLUP_IMAX

commit 9135e3f7d3fd0d634656f1c54c70a0ba1f878bfd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 20 21:10:03 2023 -0500

    üö∏ Revert M206 Home Offset behavior (#25996)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8cc3f6bc2d..442fcfbafd 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3133,29 +3133,29 @@
     #define MANUAL_PROBE_START_Z Z_CLEARANCE_BETWEEN_PROBES
   #endif
 #endif
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
-// Updated G92 behavior shifts the workspace
+// G92 shifts the workspace
 #if DISABLED(NO_WORKSPACE_OFFSETS)
-  #define HAS_POSITION_SHIFT 1
+  #define HAS_WORKSPACE_OFFSET 1
+#endif
+#if DISABLED(NO_HOME_OFFSETS)
   #if IS_CARTESIAN
-    #define HAS_HOME_OFFSET 1       // The home offset also shifts the coordinate space
-    #define HAS_WORKSPACE_OFFSET 1  // Cumulative offset to workspace to save some calculation
-    #define HAS_M206_COMMAND 1      // M206 sets the home offset for Cartesian machines
+    #define HAS_HOME_OFFSET 1     // M206 affects the Native Machine Space on G28
   #elif IS_SCARA
-    #define HAS_SCARA_OFFSET 1      // The SCARA home offset applies only on G28
+    #define HAS_SCARA_OFFSET 1    // The SCARA home offset applies only on G28
   #endif
 #endif
 
 #if ANY(HAS_MARLINUI_MENU, TOUCH_UI_FTDI_EVE)
   // LCD timeout to status screen default is 15s
   #ifndef LCD_TIMEOUT_TO_STATUS
     #define LCD_TIMEOUT_TO_STATUS 15000
   #endif
   #if LCD_TIMEOUT_TO_STATUS
     #define HAS_SCREEN_TIMEOUT 1

commit f14f1be168ebf252dd458c935271aed1a57cfa0b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 30 19:16:00 2023 -0500

    üé® Standardize naming (ProUI) (#25982)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 664d4cd544..8cc3f6bc2d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2379,24 +2379,24 @@
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
 #endif
 
 #if ENABLED(DWIN_LCD_PROUI)
   #if ANY(PIDTEMP, PIDTEMPBED)
-    #define DWIN_PID_TUNE 1
+    #define PROUI_PID_TUNE 1
   #endif
-  #if ANY(DWIN_PID_TUNE, MPC_AUTOTUNE) && DISABLED(DISABLE_TUNING_GRAPH)
-    #define SHOW_TUNING_GRAPH 1
+  #if ANY(PROUI_PID_TUNE, MPC_AUTOTUNE) && DISABLED(DISABLE_TUNING_GRAPH)
+    #define PROUI_TUNING_GRAPH 1
   #endif
 #endif
 
 // Thermal protection
 #if !HAS_HEATED_BED
   #undef THERMAL_PROTECTION_BED
   #undef THERMAL_PROTECTION_BED_PERIOD
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1

commit 6474773555274527ac4a24162dfdd9ea4b2b59da
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Jun 29 00:06:50 2023 +0200

    üêõ Fix AD4985 with 5V input, add AD595 3.3V warning (#26021)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bc33c20f41..664d4cd544 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -24,24 +24,24 @@
 /**
  * Conditionals_post.h
  * Internal defines that depend on Configurations and Pins but are not user-editable.
  */
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
 // ADC
-#ifdef BOARD_ADC_VREF
-  #define ADC_VREF BOARD_ADC_VREF
+#ifdef BOARD_ADC_VREF_MV
+  #define ADC_VREF_MV BOARD_ADC_VREF_MV
 #else
-  #define ADC_VREF HAL_ADC_VREF
+  #define ADC_VREF_MV HAL_ADC_VREF_MV
 #endif
 
 // Linear advance uses Jerk since E is an isolated axis
 #if ALL(HAS_JUNCTION_DEVIATION, LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins

commit 2ef71c6ebaa1f1b496eb369879fe22c69cf9adb4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jun 12 16:38:14 2023 -0500

    ‚ôªÔ∏è Simplify SERIAL_ECHO (#25928)
    
    Since this increases AVR code size, try to optimize further.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6d2bbd6edf..bc33c20f41 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1808,20 +1808,23 @@
     #endif
   #endif
 #endif // HAS_TRINAMIC_CONFIG
 
 #if ANY_AXIS_HAS(HW_SERIAL)
   #define HAS_TMC_HW_SERIAL 1
 #endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
+#ifndef SERIAL_FLOAT_PRECISION
+  #define SERIAL_FLOAT_PRECISION 2
+#endif
 
 #if DISABLED(SENSORLESS_HOMING)
   #undef SENSORLESS_BACKOFF_MM
 #endif
 
 //
 // Set USING_HW_SERIALn flags for used Serial Ports
 //
 
 // Flag the indexed hardware serial ports in use

commit 1a2816284c0e92f39840e8688d617faa1e32cd2f
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Sun Jun 4 05:20:07 2023 -0400

    ‚úèÔ∏è Fix LCD contrast typo (#25929)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 588484ff3e..6d2bbd6edf 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -467,21 +467,20 @@
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
 #elif ANY(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif ANY(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif ENABLED(FYSETC_MINI_12864_2_1)
   #define _LCD_CONTRAST_MIN  230
-  #define _LCD_CONTRAST_MIN  255
   #define _LCD_CONTRAST_INIT 255
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_MIN  180
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 92b4463556..588484ff3e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -31,31 +31,31 @@
 #endif
 
 // ADC
 #ifdef BOARD_ADC_VREF
   #define ADC_VREF BOARD_ADC_VREF
 #else
   #define ADC_VREF HAL_ADC_VREF
 #endif
 
 // Linear advance uses Jerk since E is an isolated axis
-#if BOTH(HAS_JUNCTION_DEVIATION, LIN_ADVANCE)
+#if ALL(HAS_JUNCTION_DEVIATION, LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
   #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION, QSPI_EEPROM)
     #define USE_EMULATED_EEPROM 1
-  #elif EITHER(I2C_EEPROM, SPI_EEPROM)
+  #elif ANY(I2C_EEPROM, SPI_EEPROM)
     #define USE_WIRED_EEPROM    1
   #elif ENABLED(IIC_BL24CXX_EEPROM)
     // nothing
   #else
     #define USE_FALLBACK_EEPROM 1
   #endif
 #else
   #undef I2C_EEPROM
   #undef SPI_EEPROM
   #undef QSPI_EEPROM
@@ -258,21 +258,21 @@
 #if ENABLED(DUAL_X_CARRIAGE)
   #ifndef X1_MIN_POS
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
   #endif
 #endif
 
 // Calibration codes only for non-core axes
-#if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
+#if ANY(BACKLASH_GCODE, CALIBRATION_GCODE)
   #if ANY(IS_CORE, MARKFORGED_XY, MARKFORGED_YX)
     #define CAN_CALIBRATE(A,B) TERN0(HAS_##A##_AXIS, (_AXIS(A) == B))
   #else
     #define CAN_CALIBRATE(A,B) ENABLED(HAS_##A##_AXIS)
   #endif
   #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 #else
   #define AXIS_CAN_CALIBRATE(A) false
 #endif
 
@@ -459,28 +459,29 @@
   #define _LCD_CONTRAST_INIT 140
 #elif ENABLED(WYH_L12864)
   #define _LCD_CONTRAST_INIT 190
 #elif ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #define _LCD_CONTRAST_MIN   90
   #define _LCD_CONTRAST_INIT 110
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
-#elif EITHER(MKS_LCD12864A, MKS_LCD12864B)
+#elif ANY(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
-#elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
+#elif ANY(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif ENABLED(FYSETC_MINI_12864_2_1)
   #define _LCD_CONTRAST_MIN  230
+  #define _LCD_CONTRAST_MIN  255
   #define _LCD_CONTRAST_INIT 255
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_MIN  180
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)
@@ -551,21 +552,21 @@
     #define HAS_SD_DETECT 1
     #ifndef SD_DETECT_STATE
       #if ALL(SD_CONNECTION_TYPICAL, HAS_MARLINUI_MENU, ELB_FULL_GRAPHIC_CONTROLLER)
         #define SD_DETECT_STATE HIGH
       #else
         #define SD_DETECT_STATE LOW
       #endif
     #endif
   #endif
 
-  #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || BOTH(MULTI_VOLUME, VOLUME_SD_ONBOARD)
+  #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || ALL(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(ONBOARD_SDIO)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
   #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
     #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
   #endif
@@ -724,27 +725,27 @@
       #define TEMP_SENSOR_2_HAS_SPI_PINS 1
     #endif
   #endif
 
   //
   // User-defined thermocouple libraries
   //
   // Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
   // to select a USER library for MAX6675, MAX31855, MAX31865
   //
-  #if BOTH(HAS_MAX6675, LIB_MAX6675)
+  #if ALL(HAS_MAX6675, LIB_MAX6675)
     #define USE_LIB_MAX6675 1
   #endif
-  #if BOTH(HAS_MAX31855, LIB_MAX31855)
+  #if ALL(HAS_MAX31855, LIB_MAX31855)
     #define USE_ADAFRUIT_MAX31855 1
   #endif
-  #if BOTH(HAS_MAX31865, LIB_MAX31865)
+  #if ALL(HAS_MAX31865, LIB_MAX31865)
     #define USE_ADAFRUIT_MAX31865 1
   #elif HAS_MAX31865
     #define LIB_INTERNAL_MAX31865 1
   #endif
 
 #endif // HAS_MAX_TC
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
@@ -1368,21 +1369,21 @@
 
 /**
  * Set solenoid flags if any features use solenoids
  *   - EXT_SOLENOID (M380, M381) to enable/disable the extruder solenoid
  *   - MANUAL_SOLENOID_CONTROL (M380, M381) to enable/disable solenoids by index
  *   - PARKING_EXTRUDER uses SOL0_PIN and SOL1_PIN
  *   - SOLENOID_PROBE uses SOL1_PIN
  *   - Z_PROBE_SLED uses SOL1_PIN, when defined (unless EXT_SOLENOID is enabled)
  */
 #if ANY(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL, PARKING_EXTRUDER, SOLENOID_PROBE, Z_PROBE_SLED)
-  #if PIN_EXISTS(SOL0) && (EITHER(MANUAL_SOLENOID_CONTROL, PARKING_EXTRUDER) || BOTH(EXT_SOLENOID, HAS_EXTRUDERS))
+  #if PIN_EXISTS(SOL0) && (ANY(MANUAL_SOLENOID_CONTROL, PARKING_EXTRUDER) || ALL(EXT_SOLENOID, HAS_EXTRUDERS))
     #define HAS_SOLENOID_0 1
   #endif
   #if PIN_EXISTS(SOL1) && (ANY(MANUAL_SOLENOID_CONTROL, PARKING_EXTRUDER, SOLENOID_PROBE, Z_PROBE_SLED) || TERN0(EXT_SOLENOID, E_STEPPERS > 1))
     #define HAS_SOLENOID_1 1
   #endif
   #if PIN_EXISTS(SOL2) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 2))
     #define HAS_SOLENOID_2 2
   #endif
   #if PIN_EXISTS(SOL3) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 3))
     #define HAS_SOLENOID_3 3
@@ -1402,21 +1403,21 @@
 #endif
 
 //
 // Trinamic Stepper Drivers
 //
 
 #if HAS_TRINAMIC_CONFIG
   #if ANY(STEALTHCHOP_E, STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_I, STEALTHCHOP_J, STEALTHCHOP_K, STEALTHCHOP_U, STEALTHCHOP_V, STEALTHCHOP_W)
     #define STEALTHCHOP_ENABLED 1
   #endif
-  #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
+  #if ANY(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1
   #endif
 
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
     #undef Z2_STALL_SENSITIVITY
     #undef Z3_STALL_SENSITIVITY
     #undef Z4_STALL_SENSITIVITY
   #endif
@@ -1963,21 +1964,21 @@
 
 #if _USE_STOP(Y,,MIN,)
   #define USE_Y_MIN 1
 #elif _USE_STOP(Y,,MAX,)
   #define USE_Y_MAX 1
 #endif
 #if USE_Y_MIN || USE_Y_MAX
   #define HAS_Y_ENDSTOP 1
 #endif
 
-#if _USE_STOP(Z,,MIN,EITHER(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN, HAS_DELTA_SENSORLESS_PROBING))
+#if _USE_STOP(Z,,MIN,ANY(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN, HAS_DELTA_SENSORLESS_PROBING))
   #define USE_Z_MIN 1
   #if !HAS_DELTA_SENSORLESS_PROBING
     #define HAS_Z_MIN_PIN 1
   #endif
 #endif
 #if _USE_STOP(Z,,MAX,)
   #define USE_Z_MAX 1
 #endif
 #if USE_Z_MIN || USE_Z_MAX
   #define HAS_Z_ENDSTOP 1
@@ -2030,21 +2031,21 @@
 
 #if _USE_STOP(W,,MIN,)
   #define USE_W_MIN 1
 #elif _USE_STOP(W,,MAX,)
   #define USE_W_MAX 1
 #endif
 #if USE_W_MIN || USE_W_MAX
   #define HAS_W_ENDSTOP 1
 #endif
 
-#if EITHER(DUAL_X_CARRIAGE, X_DUAL_ENDSTOPS)
+#if ANY(DUAL_X_CARRIAGE, X_DUAL_ENDSTOPS)
   #if _USE_STOP(X,2,MIN,)
     #define USE_X2_MIN 1
   #elif _USE_STOP(X,2,MAX,)
     #define USE_X2_MAX 1
   #endif
   #if USE_X2_MIN || USE_X2_MAX
     #define HAS_X2_ENDSTOP 1
   #endif
 #endif
 
@@ -2375,43 +2376,43 @@
 #else
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
 #endif
 
 #if ENABLED(DWIN_LCD_PROUI)
-  #if EITHER(PIDTEMP, PIDTEMPBED)
+  #if ANY(PIDTEMP, PIDTEMPBED)
     #define DWIN_PID_TUNE 1
   #endif
-  #if EITHER(DWIN_PID_TUNE, MPC_AUTOTUNE) && DISABLED(DISABLE_TUNING_GRAPH)
+  #if ANY(DWIN_PID_TUNE, MPC_AUTOTUNE) && DISABLED(DISABLE_TUNING_GRAPH)
     #define SHOW_TUNING_GRAPH 1
   #endif
 #endif
 
 // Thermal protection
 #if !HAS_HEATED_BED
   #undef THERMAL_PROTECTION_BED
   #undef THERMAL_PROTECTION_BED_PERIOD
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
 #if ENABLED(THERMAL_PROTECTION_BED) && WATCH_BED_TEMP_PERIOD > 0
   #define WATCH_BED 1
 #endif
-#if BOTH(HAS_HEATED_CHAMBER, THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
+#if ALL(HAS_HEATED_CHAMBER, THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
   #define WATCH_CHAMBER 1
 #endif
-#if BOTH(HAS_COOLER, THERMAL_PROTECTION_COOLER) && WATCH_COOLER_TEMP_PERIOD > 0
+#if ALL(HAS_COOLER, THERMAL_PROTECTION_COOLER) && WATCH_COOLER_TEMP_PERIOD > 0
   #define WATCH_COOLER 1
 #endif
 #if NONE(THERMAL_PROTECTION_HOTENDS, THERMAL_PROTECTION_CHAMBER, THERMAL_PROTECTION_BED, THERMAL_PROTECTION_COOLER)
   #undef THERMAL_PROTECTION_VARIANCE_MONITOR
 #endif
 #if  (ENABLED(THERMAL_PROTECTION_HOTENDS) || !EXTRUDERS) \
   && (ENABLED(THERMAL_PROTECTION_BED)     || !HAS_HEATED_BED) \
   && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER) \
   && (ENABLED(THERMAL_PROTECTION_COOLER)  || !HAS_COOLER)
   #define THERMALLY_SAFE 1
@@ -2609,21 +2610,21 @@
   #define HAS_FAN 1
 #endif
 
 #if PIN_EXISTS(FANMUX0)
   #define HAS_FANMUX 1  // Part Cooling fan multipliexer
 #endif
 
 /**
  * MIN/MAX fan PWM scaling
  */
-#if EITHER(HAS_FAN, USE_CONTROLLER_FAN)
+#if ANY(HAS_FAN, USE_CONTROLLER_FAN)
   #ifndef FAN_OFF_PWM
     #define FAN_OFF_PWM 0
   #endif
   #ifndef FAN_MIN_PWM
     #if FAN_OFF_PWM > 0
       #define FAN_MIN_PWM (FAN_OFF_PWM + 1)
     #else
       #define FAN_MIN_PWM 0
     #endif
   #endif
@@ -2709,21 +2710,21 @@
   #define HAS_SOME_E_MS_PINS 1
 #endif
 #if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_I_MS_PINS, HAS_J_MS_PINS, HAS_K_MS_PINS, HAS_U_MS_PINS, HAS_V_MS_PINS, HAS_W_MS_PINS, HAS_SOME_E_MS_PINS)
   #define HAS_MICROSTEPS 1
 #endif
 
 /**
  * Helper Macros for heaters and extruder fan
  */
 #define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, (v) ^ ENABLED(HEATER_0_INVERTING))
-#if EITHER(HAS_MULTI_HOTEND, HEATERS_PARALLEL)
+#if ANY(HAS_MULTI_HOTEND, HEATERS_PARALLEL)
   #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, (v) ^ ENABLED(HEATER_1_INVERTING))
   #if HOTENDS > 2
     #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, (v) ^ ENABLED(HEATER_2_INVERTING))
     #if HOTENDS > 3
       #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, (v) ^ ENABLED(HEATER_3_INVERTING))
       #if HOTENDS > 4
         #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, (v) ^ ENABLED(HEATER_4_INVERTING))
         #if HOTENDS > 5
           #define WRITE_HEATER_5(v) WRITE(HEATER_5_PIN, (v) ^ ENABLED(HEATER_5_INVERTING))
           #if HOTENDS > 6
@@ -2822,30 +2823,30 @@
   #ifndef CASE_LIGHT_MAX_PWM
     #define CASE_LIGHT_MAX_PWM 255
   #elif !WITHIN(CASE_LIGHT_MAX_PWM, 1, 255)
     #error "CASE_LIGHT_MAX_PWM must be a value from 1 to 255."
   #endif
 #endif
 
 /**
  * Bed Probe dependencies
  */
-#if EITHER(MESH_BED_LEVELING, HAS_BED_PROBE)
+#if ANY(MESH_BED_LEVELING, HAS_BED_PROBE)
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MAX
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
 #endif
 #if HAS_BED_PROBE
-  #if BOTH(ENDSTOPPULLUPS, USE_Z_MIN_PROBE)
+  #if ALL(ENDSTOPPULLUPS, USE_Z_MIN_PROBE)
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef XY_PROBE_FEEDRATE
     #define XY_PROBE_FEEDRATE ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif
 #else
   #undef NOZZLE_TO_PROBE_OFFSET
@@ -2889,41 +2890,41 @@
   #endif
 #endif // SKEW_CORRECTION
 
 /**
  * Heater, Fan, and Probe interactions
  */
 #if !HAS_FAN
   #undef ADAPTIVE_FAN_SLOWING
   #undef TEMP_TUNING_MAINTAIN_FAN
 #endif
-#if !BOTH(HAS_BED_PROBE, HAS_FAN)
+#if !ALL(HAS_BED_PROBE, HAS_FAN)
   #undef PROBING_FANS_OFF
 #endif
-#if !BOTH(HAS_BED_PROBE, HAS_EXTRUDERS)
+#if !ALL(HAS_BED_PROBE, HAS_EXTRUDERS)
   #undef PROBING_ESTEPPERS_OFF
 #elif ENABLED(PROBING_STEPPERS_OFF)
   // PROBING_STEPPERS_OFF implies PROBING_ESTEPPERS_OFF, make sure it is defined
   #define PROBING_ESTEPPERS_OFF
 #endif
-#if EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
+#if ANY(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_LCD_PROUI, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_LCD_PROUI, DWIN_CREALITY_LCD_JYERSUI) || ALL(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
@@ -2995,21 +2996,21 @@
   #define DEFAULT_LEVELING_FADE_HEIGHT 0.0
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
-#if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
+#if ANY(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + (MESH_INSET))
     #define _MESH_MIN_Y (Y_MIN_BED + (MESH_INSET))
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
@@ -3045,21 +3046,21 @@
 
 /**
  * Buzzer/Speaker
  */
 #if PIN_EXISTS(BEEPER)
   #define HAS_BEEPER 1
 #endif
 #if ANY(IS_TFTGLCD_PANEL, PCA9632_BUZZER, LCD_USE_I2C_BUZZER)
   #define USE_MARLINUI_BUZZER 1
 #endif
-#if EITHER(HAS_BEEPER, USE_MARLINUI_BUZZER)
+#if ANY(HAS_BEEPER, USE_MARLINUI_BUZZER)
   #define HAS_SOUND 1
 #endif
 
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif
@@ -3116,21 +3117,21 @@
   #ifndef Z_CLEARANCE_MULTI_PROBE
     #define Z_CLEARANCE_MULTI_PROBE Z_CLEARANCE_BETWEEN_PROBES
   #endif
   #if ENABLED(BLTOUCH) && !defined(BLTOUCH_DELAY)
     #define BLTOUCH_DELAY 500
   #endif
 #endif
 
 // Define a starting height for measuring manual probe points
 #ifndef MANUAL_PROBE_START_Z
-  #if EITHER(MESH_BED_LEVELING, PROBE_MANUALLY)
+  #if ANY(MESH_BED_LEVELING, PROBE_MANUALLY)
     // Leave MANUAL_PROBE_START_Z undefined so the prior Z height will be used.
     // Note: If Z_CLEARANCE_BETWEEN_MANUAL_PROBES is 0 there will be no raise between points
   #elif ENABLED(AUTO_BED_LEVELING_UBL) && defined(Z_CLEARANCE_BETWEEN_PROBES)
     #define MANUAL_PROBE_START_Z Z_CLEARANCE_BETWEEN_PROBES
   #endif
 #endif
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
@@ -3142,21 +3143,21 @@
   #define HAS_POSITION_SHIFT 1
   #if IS_CARTESIAN
     #define HAS_HOME_OFFSET 1       // The home offset also shifts the coordinate space
     #define HAS_WORKSPACE_OFFSET 1  // Cumulative offset to workspace to save some calculation
     #define HAS_M206_COMMAND 1      // M206 sets the home offset for Cartesian machines
   #elif IS_SCARA
     #define HAS_SCARA_OFFSET 1      // The SCARA home offset applies only on G28
   #endif
 #endif
 
-#if EITHER(HAS_MARLINUI_MENU, TOUCH_UI_FTDI_EVE)
+#if ANY(HAS_MARLINUI_MENU, TOUCH_UI_FTDI_EVE)
   // LCD timeout to status screen default is 15s
   #ifndef LCD_TIMEOUT_TO_STATUS
     #define LCD_TIMEOUT_TO_STATUS 15000
   #endif
   #if LCD_TIMEOUT_TO_STATUS
     #define HAS_SCREEN_TIMEOUT 1
   #endif
 #endif
 
 // Add commands that need sub-codes to this list
@@ -3195,21 +3196,21 @@
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ANY(SCROLL_LONG_FILENAMES, HAS_DWIN_E3V2, TFT_COLOR_UI)
   #define VFAT_ENTRIES_LIMIT 5
 #else
   #define VFAT_ENTRIES_LIMIT 2
 #endif
 #define MAX_VFAT_ENTRIES 20 // by VFAT specs to fit LFN of length 255
 
 // Nozzle park for Delta
-#if BOTH(NOZZLE_PARK_FEATURE, DELTA)
+#if ALL(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && IS_RRD_FG_SC && (SD_SCK_PIN == LCD_PINS_D4)
   #define SDCARD_SORT_ALPHA         // Keep one directory level in RAM. Changing directory levels
                                     // may still glitch the screen, but LCD updates clean it up.

commit 49134a9467f79037cc6ea643b8ac9634e5f7eb36
Author: I3DBeeTech <129617321+I3DBeeTech@users.noreply.github.com>
Date:   Fri Jun 2 04:58:34 2023 +0530

    üîß Update LCD with NeoPixel Contrast (#25893)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5794a96b8b..92b4463556 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -465,22 +465,22 @@
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
 #elif EITHER(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
-#elif EITHER(MKS_MINI_12864_V3, BTT_MINI_12864_V1)
-  #define _LCD_CONTRAST_MIN  255
+#elif ENABLED(FYSETC_MINI_12864_2_1)
+  #define _LCD_CONTRAST_MIN  230
   #define _LCD_CONTRAST_INIT 255
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_MIN  180
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)

commit 3999d67e514c1e752128df2a6dc80ec0579ee504
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Thu Jun 1 12:44:19 2023 -0700

    üîß Default has Heated Bed (#25895)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d137e1d9c1..5794a96b8b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2233,43 +2233,46 @@
 #endif
 #if HOTENDS > 5 && HAS_ADC_TEST(5)
   #define HAS_TEMP_ADC_5 1
 #endif
 #if HOTENDS > 6 && HAS_ADC_TEST(6)
   #define HAS_TEMP_ADC_6 1
 #endif
 #if HOTENDS > 7 && HAS_ADC_TEST(7)
   #define HAS_TEMP_ADC_7 1
 #endif
-#if HAS_ADC_TEST(BED)
-  #define HAS_TEMP_ADC_BED 1
+#if TEMP_SENSOR_BED
+  #define HAS_HEATED_BED 1
+  #if HAS_ADC_TEST(BED)
+    #define HAS_TEMP_ADC_BED 1
+  #endif
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 #if HAS_ADC_TEST(COOLER)
   #define HAS_TEMP_ADC_COOLER 1
 #endif
 #if HAS_ADC_TEST(BOARD)
   #define HAS_TEMP_ADC_BOARD 1
 #endif
 #if HAS_ADC_TEST(SOC)
   #define HAS_TEMP_ADC_SOC 1
 #endif
 #if HAS_ADC_TEST(REDUNDANT)
   #define HAS_TEMP_ADC_REDUNDANT 1
 #endif
 
-#define HAS_TEMP(N) (TEMP_SENSOR_IS_MAX_TC(N) || EITHER(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_DUMMY))
+#define HAS_TEMP(N) (TEMP_SENSOR_IS_MAX_TC(N) || HAS_TEMP_ADC_##N || TEMP_SENSOR_##N##_IS_DUMMY)
 #if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
 #if HAS_TEMP(BED)
   #define HAS_TEMP_BED 1
 #endif
 #if HAS_TEMP(CHAMBER)
   #define HAS_TEMP_CHAMBER 1
 #endif
 #if HAS_TEMP(PROBE)
@@ -2324,24 +2327,26 @@
 #endif
 #if PIN_EXISTS(HEATER_6)
   #define HAS_HEATER_6 1
 #endif
 #if PIN_EXISTS(HEATER_7)
   #define HAS_HEATER_7 1
 #endif
 #if PIN_EXISTS(HEATER_BED)
   #define HAS_HEATER_BED 1
 #endif
+#if PIN_EXISTS(HEATER_CHAMBER)
+  #define HAS_HEATER_CHAMBER 1
+#endif
 
 // Shorthand for common combinations
-#if HAS_TEMP_BED && HAS_HEATER_BED
-  #define HAS_HEATED_BED 1
+#if HAS_HEATED_BED
   #ifndef BED_OVERSHOOT
     #define BED_OVERSHOOT 10
   #endif
   #define BED_MAX_TARGET (BED_MAXTEMP - (BED_OVERSHOOT))
 #else
   #undef PIDTEMPBED
   #undef PREHEAT_BEFORE_LEVELING
 #endif
 
 #if HAS_TEMP_COOLER && PIN_EXISTS(COOLER)
@@ -2354,21 +2359,21 @@
 #endif
 
 #if HAS_HEATED_BED || HAS_TEMP_CHAMBER
   #define BED_OR_CHAMBER 1
 #endif
 
 #if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER || HAS_TEMP_BOARD || HAS_TEMP_SOC
   #define HAS_TEMP_SENSOR 1
 #endif
 
-#if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
+#if HAS_TEMP_CHAMBER && HAS_HEATER_CHAMBER
   #define HAS_HEATED_CHAMBER 1
   #ifndef CHAMBER_OVERSHOOT
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
 #else
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
@@ -2381,20 +2386,21 @@
     #define DWIN_PID_TUNE 1
   #endif
   #if EITHER(DWIN_PID_TUNE, MPC_AUTOTUNE) && DISABLED(DISABLE_TUNING_GRAPH)
     #define SHOW_TUNING_GRAPH 1
   #endif
 #endif
 
 // Thermal protection
 #if !HAS_HEATED_BED
   #undef THERMAL_PROTECTION_BED
+  #undef THERMAL_PROTECTION_BED_PERIOD
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
 #if ENABLED(THERMAL_PROTECTION_BED) && WATCH_BED_TEMP_PERIOD > 0
   #define WATCH_BED 1
 #endif
 #if BOTH(HAS_HEATED_CHAMBER, THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
   #define WATCH_CHAMBER 1
 #endif

commit b364e44716d8ba0d08d01c2d61067dd8602271d2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 14 18:08:33 2023 -0500

    üìå TH3D EZBoard SD_DETECT_PIN 27

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8ad4a6161e..d137e1d9c1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -519,21 +519,21 @@
     #define LCD_CONTRAST_DEFAULT LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if HAS_MEDIA
 
-  #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
+  #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD) && DISABLED(KEEP_SD_DETECT)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define HAS_SHARED_MEDIA 1
   #endif
 
   // Extender cable doesn't support SD_DETECT_PIN

commit d52d26b4ef55ebb7ebc56ce5c712e4914f3aeb2a
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed May 10 08:37:34 2023 +1200

    üîß Update multi-stepper axis conditionals (#25798)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 17f2b909e6..8ad4a6161e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1070,31 +1070,33 @@
   #if PIN_EXISTS(Y_DIR)
     #define HAS_Y_DIR 1
   #endif
   #if PIN_EXISTS(Y_STEP)
     #define HAS_Y_STEP 1
   #endif
   #if PIN_EXISTS(Y_MS1)
     #define HAS_Y_MS_PINS 1
   #endif
 
-  #if PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
-    #define HAS_Y2_ENABLE 1
-  #endif
-  #if PIN_EXISTS(Y2_DIR)
-    #define HAS_Y2_DIR 1
-  #endif
-  #if PIN_EXISTS(Y2_STEP)
-    #define HAS_Y2_STEP 1
-  #endif
-  #if PIN_EXISTS(Y2_MS1)
-    #define HAS_Y2_MS_PINS 1
+  #if HAS_Y2_STEPPER
+    #if PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
+      #define HAS_Y2_ENABLE 1
+    #endif
+    #if PIN_EXISTS(Y2_DIR)
+      #define HAS_Y2_DIR 1
+    #endif
+    #if PIN_EXISTS(Y2_STEP)
+      #define HAS_Y2_STEP 1
+    #endif
+    #if PIN_EXISTS(Y2_MS1)
+      #define HAS_Y2_MS_PINS 1
+    #endif
   #endif
 #endif
 
 #if HAS_Z_AXIS
   #if PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
     #define HAS_Z_ENABLE 1
   #endif
   #if PIN_EXISTS(Z_DIR)
     #define HAS_Z_DIR 1
   #endif
@@ -1432,21 +1434,20 @@
     #ifndef X_INTERPOLATE
       #define X_INTERPOLATE INTERPOLATE
     #endif
     #ifndef X_HOLD_MULTIPLIER
       #define X_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef X_SLAVE_ADDRESS
       #define X_SLAVE_ADDRESS 0
     #endif
   #endif
-
   #if AXIS_IS_TMC(X2)
     #if defined(X2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(X2)
       #define X2_SENSORLESS 1
     #endif
     #if AXIS_HAS_STEALTHCHOP(X2)
       #define X2_HAS_STEALTHCHOP 1
     #endif
     #ifndef X2_INTERPOLATE
       #define X2_INTERPOLATE X_INTERPOLATE
     #endif
@@ -1470,36 +1471,36 @@
     #endif
     #ifndef Y_INTERPOLATE
       #define Y_INTERPOLATE INTERPOLATE
     #endif
     #ifndef Y_HOLD_MULTIPLIER
       #define Y_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef Y_SLAVE_ADDRESS
       #define Y_SLAVE_ADDRESS 0
     #endif
-    #if HAS_DUAL_Y_STEPPERS
-      #if defined(Y2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Y2)
-        #define Y2_SENSORLESS 1
-      #endif
-      #if AXIS_HAS_STEALTHCHOP(Y2)
-        #define Y2_HAS_STEALTHCHOP 1
-      #endif
-      #ifndef Y2_INTERPOLATE
-        #define Y2_INTERPOLATE Y_INTERPOLATE
-      #endif
-      #ifndef Y2_HOLD_MULTIPLIER
-        #define Y2_HOLD_MULTIPLIER Y_HOLD_MULTIPLIER
-      #endif
-      #ifndef Y2_SLAVE_ADDRESS
-        #define Y2_SLAVE_ADDRESS 0
-      #endif
+  #endif
+  #if AXIS_IS_TMC(Y2)
+    #if defined(Y2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Y2)
+      #define Y2_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(Y2)
+      #define Y2_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef Y2_INTERPOLATE
+      #define Y2_INTERPOLATE Y_INTERPOLATE
+    #endif
+    #ifndef Y2_HOLD_MULTIPLIER
+      #define Y2_HOLD_MULTIPLIER Y_HOLD_MULTIPLIER
+    #endif
+    #ifndef Y2_SLAVE_ADDRESS
+      #define Y2_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(Z)
     #if defined(Z_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z)
       #define Z_SENSORLESS 1
     #endif
     #if AXIS_HAS_STEALTHCHOP(Z)
       #define Z_HAS_STEALTHCHOP 1
     #endif
@@ -1508,70 +1509,70 @@
     #endif
     #ifndef Z_INTERPOLATE
       #define Z_INTERPOLATE INTERPOLATE
     #endif
     #ifndef Z_HOLD_MULTIPLIER
       #define Z_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef Z_SLAVE_ADDRESS
       #define Z_SLAVE_ADDRESS 0
     #endif
-    #if NUM_Z_STEPPERS >= 2
-      #if defined(Z2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z2)
-        #define Z2_SENSORLESS 1
-      #endif
-      #if AXIS_HAS_STEALTHCHOP(Z2)
-        #define Z2_HAS_STEALTHCHOP 1
-      #endif
-      #ifndef Z2_INTERPOLATE
-        #define Z2_INTERPOLATE Z_INTERPOLATE
-      #endif
-      #ifndef Z2_HOLD_MULTIPLIER
-        #define Z2_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
-      #endif
-      #ifndef Z2_SLAVE_ADDRESS
-        #define Z2_SLAVE_ADDRESS 0
-      #endif
+  #endif
+  #if NUM_Z_STEPPERS >= 2 && AXIS_IS_TMC(Z2)
+    #if defined(Z2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z2)
+      #define Z2_SENSORLESS 1
     #endif
-    #if NUM_Z_STEPPERS >= 3
-      #if defined(Z3_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z3)
-        #define Z3_SENSORLESS 1
-      #endif
-      #if AXIS_HAS_STEALTHCHOP(Z3)
-        #define Z3_HAS_STEALTHCHOP 1
-      #endif
-      #ifndef Z3_INTERPOLATE
-        #define Z3_INTERPOLATE Z_INTERPOLATE
-      #endif
-      #ifndef Z3_HOLD_MULTIPLIER
-        #define Z3_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
-      #endif
-      #ifndef Z3_SLAVE_ADDRESS
-        #define Z3_SLAVE_ADDRESS 0
-      #endif
+    #if AXIS_HAS_STEALTHCHOP(Z2)
+      #define Z2_HAS_STEALTHCHOP 1
     #endif
-    #if NUM_Z_STEPPERS >= 4
-      #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
-        #define Z4_SENSORLESS 1
-      #endif
-      #if AXIS_HAS_STEALTHCHOP(Z4)
-        #define Z4_HAS_STEALTHCHOP 1
-      #endif
-      #ifndef Z4_INTERPOLATE
-        #define Z4_INTERPOLATE Z_INTERPOLATE
-      #endif
-      #ifndef Z4_HOLD_MULTIPLIER
-        #define Z4_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
-      #endif
-      #ifndef Z4_SLAVE_ADDRESS
-        #define Z4_SLAVE_ADDRESS 0
-      #endif
+    #ifndef Z2_INTERPOLATE
+      #define Z2_INTERPOLATE Z_INTERPOLATE
+    #endif
+    #ifndef Z2_HOLD_MULTIPLIER
+      #define Z2_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
+    #endif
+    #ifndef Z2_SLAVE_ADDRESS
+      #define Z2_SLAVE_ADDRESS 0
+    #endif
+  #endif
+  #if NUM_Z_STEPPERS >= 3 && AXIS_IS_TMC(Z3)
+    #if defined(Z3_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z3)
+      #define Z3_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(Z3)
+      #define Z3_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef Z3_INTERPOLATE
+      #define Z3_INTERPOLATE Z_INTERPOLATE
+    #endif
+    #ifndef Z3_HOLD_MULTIPLIER
+      #define Z3_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
+    #endif
+    #ifndef Z3_SLAVE_ADDRESS
+      #define Z3_SLAVE_ADDRESS 0
+    #endif
+  #endif
+  #if NUM_Z_STEPPERS >= 4 && AXIS_IS_TMC(Z4)
+    #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
+      #define Z4_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(Z4)
+      #define Z4_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef Z4_INTERPOLATE
+      #define Z4_INTERPOLATE Z_INTERPOLATE
+    #endif
+    #ifndef Z4_HOLD_MULTIPLIER
+      #define Z4_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
+    #endif
+    #ifndef Z4_SLAVE_ADDRESS
+      #define Z4_SLAVE_ADDRESS 0
     #endif
   #endif
 
   #if AXIS_IS_TMC(I)
     #if defined(I_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(I)
       #define I_SENSORLESS 1
     #endif
     #if AXIS_HAS_STEALTHCHOP(I)
       #define I_HAS_STEALTHCHOP 1
     #endif

commit 1f9bfc5c7491d802d242623f8253b1f52c0917a3
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed May 10 06:59:25 2023 +1200

    üö∏ Optional X-Axis (#25418)
    
    Co-authored-by: alextrical <35117191+alextrical@users.noreply.github.com>
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b7ee00def8..17f2b909e6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -98,21 +98,23 @@
   #define AXIS8_NAME 'V'
 #endif
 #if HAS_W_AXIS && !defined(AXIS9_NAME)
   #define AXIS9_NAME 'W'
 #endif
 
 #if ANY(AXIS4_ROTATES, AXIS5_ROTATES, AXIS6_ROTATES, AXIS7_ROTATES, AXIS8_ROTATES, AXIS9_ROTATES)
   #define HAS_ROTATIONAL_AXES 1
 #endif
 
-#define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
+#if HAS_X_AXIS
+  #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
+#endif
 #if HAS_Y_AXIS
   #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #endif
 #if HAS_Z_AXIS
   #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 #else
   #undef CONTROLLER_FAN_USE_Z_ONLY
 #endif
 #if HAS_I_AXIS
   #define I_MAX_LENGTH (I_MAX_POS - (I_MIN_POS))
@@ -127,21 +129,21 @@
   #define U_MAX_LENGTH (U_MAX_POS - (U_MIN_POS))
 #endif
 #if HAS_V_AXIS
   #define V_MAX_LENGTH (V_MAX_POS - (V_MIN_POS))
 #endif
 #if HAS_W_AXIS
   #define W_MAX_LENGTH (W_MAX_POS - (W_MIN_POS))
 #endif
 
 // Defined only if the sanity-check is bypassed
-#ifndef X_BED_SIZE
+#if HAS_X_AXIS && !defined(X_BED_SIZE)
   #define X_BED_SIZE X_MAX_LENGTH
 #endif
 #if HAS_Y_AXIS && !defined(Y_BED_SIZE)
   #define Y_BED_SIZE Y_MAX_LENGTH
 #endif
 #if HAS_I_AXIS && !defined(I_BED_SIZE)
   #define I_BED_SIZE I_MAX_LENGTH
 #endif
 #if HAS_J_AXIS && !defined(J_BED_SIZE)
   #define J_BED_SIZE J_MAX_LENGTH
@@ -158,21 +160,23 @@
 #if HAS_W_AXIS && !defined(W_BED_SIZE)
   #define W_BED_SIZE W_MAX_LENGTH
 #endif
 
 // Require 0,0 bed center for Delta, SCARA, and Polargraph
 #if IS_KINEMATIC
   #define BED_CENTER_AT_0_0
 #endif
 
 // Define center values for future use
-#define _X_HALF_BED ((X_BED_SIZE) / 2)
+#if HAS_X_AXIS
+  #define _X_HALF_BED ((X_BED_SIZE) / 2)
+#endif
 #if HAS_Y_AXIS
   #define _Y_HALF_BED ((Y_BED_SIZE) / 2)
 #endif
 #if HAS_I_AXIS
   #define _I_HALF_IMAX ((I_BED_SIZE) / 2)
 #endif
 #if HAS_J_AXIS
   #define _J_HALF_JMAX ((J_BED_SIZE) / 2)
 #endif
 #if HAS_K_AXIS
@@ -181,21 +185,23 @@
 #if HAS_U_AXIS
   #define _U_HALF_UMAX ((U_BED_SIZE) / 2)
 #endif
 #if HAS_V_AXIS
   #define _V_HALF_VMAX ((V_BED_SIZE) / 2)
 #endif
 #if HAS_W_AXIS
   #define _W_HALF_WMAX ((W_BED_SIZE) / 2)
 #endif
 
-#define X_CENTER TERN(BED_CENTER_AT_0_0, 0, _X_HALF_BED)
+#if HAS_X_AXIS
+  #define X_CENTER TERN(BED_CENTER_AT_0_0, 0, _X_HALF_BED)
+#endif
 #if HAS_Y_AXIS
   #define Y_CENTER TERN(BED_CENTER_AT_0_0, 0, _Y_HALF_BED)
   #define XY_CENTER { X_CENTER, Y_CENTER }
 #endif
 #if HAS_I_AXIS
   #define I_CENTER _I_HALF_BED
 #endif
 #if HAS_J_AXIS
   #define J_CENTER _J_HALF_BED
 #endif
@@ -206,22 +212,24 @@
   #define U_CENTER _U_HALF_BED
 #endif
 #if HAS_V_AXIS
   #define V_CENTER _V_HALF_BED
 #endif
 #if HAS_W_AXIS
   #define W_CENTER _W_HALF_BED
 #endif
 
 // Get the linear boundaries of the bed
-#define X_MIN_BED (X_CENTER - _X_HALF_BED)
-#define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
+#if HAS_X_AXIS
+  #define X_MIN_BED (X_CENTER - _X_HALF_BED)
+  #define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
+#endif
 #if HAS_Y_AXIS
   #define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
   #define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
 #endif
 #if HAS_I_AXIS
   #define I_MINIM (I_CENTER - _I_HALF_BED_SIZE)
   #define I_MAXIM (I_MINIM + I_BED_SIZE)
 #endif
 #if HAS_J_AXIS
   #define J_MINIM (J_CENTER - _J_HALF_BED_SIZE)
@@ -285,28 +293,30 @@
     #define PRINTABLE_RADIUS (TPARA_LINKAGE_1 + TPARA_LINKAGE_2)
   #else
     #define QUICK_HOME
     #define PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #endif
 #endif
 
 /**
  * Set the home position based on settings or manual overrides
  */
-#ifdef MANUAL_X_HOME_POS
-  #define X_HOME_POS MANUAL_X_HOME_POS
-#else
-  #define X_END_POS TERN(X_HOME_TO_MIN, X_MIN_POS, X_MAX_POS)
-  #if ENABLED(BED_CENTER_AT_0_0)
-    #define X_HOME_POS TERN(DELTA, 0, X_END_POS)
+#if HAS_X_AXIS
+  #ifdef MANUAL_X_HOME_POS
+    #define X_HOME_POS MANUAL_X_HOME_POS
   #else
-    #define X_HOME_POS TERN(DELTA, X_MIN_POS + (X_BED_SIZE) * 0.5, X_END_POS)
+    #define X_END_POS TERN(X_HOME_TO_MIN, X_MIN_POS, X_MAX_POS)
+    #if ENABLED(BED_CENTER_AT_0_0)
+      #define X_HOME_POS TERN(DELTA, 0, X_END_POS)
+    #else
+      #define X_HOME_POS TERN(DELTA, X_MIN_POS + (X_BED_SIZE) * 0.5, X_END_POS)
+    #endif
   #endif
 #endif
 
 #if HAS_Y_AXIS
   #ifdef MANUAL_Y_HOME_POS
     #define Y_HOME_POS MANUAL_Y_HOME_POS
   #else
     #define Y_END_POS TERN(Y_HOME_TO_MIN, Y_MIN_POS, Y_MAX_POS)
     #if ENABLED(BED_CENTER_AT_0_0)
       #define Y_HOME_POS TERN(DELTA, 0, Y_END_POS)
@@ -1014,44 +1024,46 @@
     #endif
   #endif
 
 #endif // Z_MULTI_ENDSTOPS
 
 /**
  * Shorthand for pin tests, used wherever needed
  */
 
 // Steppers
-#if PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X))
-  #define HAS_X_ENABLE 1
-#endif
-#if PIN_EXISTS(X_DIR)
-  #define HAS_X_DIR 1
-#endif
-#if PIN_EXISTS(X_STEP)
-  #define HAS_X_STEP 1
-#endif
-#if PIN_EXISTS(X_MS1)
-  #define HAS_X_MS_PINS 1
-#endif
+#if HAS_X_AXIS
+  #if PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X))
+    #define HAS_X_ENABLE 1
+  #endif
+  #if PIN_EXISTS(X_DIR)
+    #define HAS_X_DIR 1
+  #endif
+  #if PIN_EXISTS(X_STEP)
+    #define HAS_X_STEP 1
+  #endif
+  #if PIN_EXISTS(X_MS1)
+    #define HAS_X_MS_PINS 1
+  #endif
 
-#if PIN_EXISTS(X2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2))
-  #define HAS_X2_ENABLE 1
-#endif
-#if PIN_EXISTS(X2_DIR)
-  #define HAS_X2_DIR 1
-#endif
-#if PIN_EXISTS(X2_STEP)
-  #define HAS_X2_STEP 1
-#endif
-#if PIN_EXISTS(X2_MS1)
-  #define HAS_X2_MS_PINS 1
+  #if PIN_EXISTS(X2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2))
+    #define HAS_X2_ENABLE 1
+  #endif
+  #if PIN_EXISTS(X2_DIR)
+    #define HAS_X2_DIR 1
+  #endif
+  #if PIN_EXISTS(X2_STEP)
+    #define HAS_X2_STEP 1
+  #endif
+  #if PIN_EXISTS(X2_MS1)
+    #define HAS_X2_MS_PINS 1
+  #endif
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 
 #if HAS_Y_AXIS
   #if PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
     #define HAS_Y_ENABLE 1
   #endif

commit 85325f585ac4a9bb667423561540b5d58bdc3b6e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 5 19:37:13 2023 -0500

    üßë‚Äçüíª Endstops preliminary work (#25780)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7319905ee6..b7ee00def8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1391,20 +1391,21 @@
 // Trinamic Stepper Drivers
 //
 
 #if HAS_TRINAMIC_CONFIG
   #if ANY(STEALTHCHOP_E, STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_I, STEALTHCHOP_J, STEALTHCHOP_K, STEALTHCHOP_U, STEALTHCHOP_V, STEALTHCHOP_W)
     #define STEALTHCHOP_ENABLED 1
   #endif
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1
   #endif
+
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
     #undef Z2_STALL_SENSITIVITY
     #undef Z3_STALL_SENSITIVITY
     #undef Z4_STALL_SENSITIVITY
   #endif
 
   #if AXIS_IS_TMC(X)
     #if defined(X_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(X)
@@ -1474,29 +1475,20 @@
       #ifndef Y2_INTERPOLATE
         #define Y2_INTERPOLATE Y_INTERPOLATE
       #endif
       #ifndef Y2_HOLD_MULTIPLIER
         #define Y2_HOLD_MULTIPLIER Y_HOLD_MULTIPLIER
       #endif
       #ifndef Y2_SLAVE_ADDRESS
         #define Y2_SLAVE_ADDRESS 0
       #endif
     #endif
-    #if HAS_U_AXIS
-      #define U_SPI_SENSORLESS U_SENSORLESS
-    #endif
-    #if HAS_V_AXIS
-      #define V_SPI_SENSORLESS V_SENSORLESS
-    #endif
-    #if HAS_W_AXIS
-      #define W_SPI_SENSORLESS W_SENSORLESS
-    #endif
   #endif
 
   #if AXIS_IS_TMC(Z)
     #if defined(Z_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z)
       #define Z_SENSORLESS 1
     #endif
     #if AXIS_HAS_STEALTHCHOP(Z)
       #define Z_HAS_STEALTHCHOP 1
     #endif
     #if ENABLED(SPI_ENDSTOPS)
@@ -1937,269 +1929,279 @@
     #undef ESP_WIFI_MODULE_GPIO0_PIN
     #undef ESP_WIFI_MODULE_GPIO2_PIN
     #undef ESP_WIFI_MODULE_GPIO4_PIN
   #endif
 #endif
 
 //
 // Endstops and bed probe
 //
 
-#define _HAS_STOP(A,N,M,C) ((A##_HOME_TO_##M || (C+0)) && PIN_EXISTS(A##N##_##M))
+#define _USE_STOP(A,N,M,C) ((A##_HOME_TO_##M || (C+0)) && PIN_EXISTS(A##N##_##M))
 
-#if _HAS_STOP(X,,MIN,)
-  #define HAS_X_MIN 1
+#if _USE_STOP(X,,MIN,)
+  #define USE_X_MIN 1
 #endif
-#if _HAS_STOP(X,,MAX,ENABLED(DUAL_X_CARRIAGE))
-  #define HAS_X_MAX 1
+#if _USE_STOP(X,,MAX,ENABLED(DUAL_X_CARRIAGE))
+  #define USE_X_MAX 1
 #endif
-#if HAS_X_MIN || HAS_X_MAX
+#if USE_X_MIN || USE_X_MAX
   #define HAS_X_ENDSTOP 1
 #endif
 
-#if _HAS_STOP(Y,,MIN,)
-  #define HAS_Y_MIN 1
-#elif _HAS_STOP(Y,,MAX,)
-  #define HAS_Y_MAX 1
+#if _USE_STOP(Y,,MIN,)
+  #define USE_Y_MIN 1
+#elif _USE_STOP(Y,,MAX,)
+  #define USE_Y_MAX 1
 #endif
-#if HAS_Y_MIN || HAS_Y_MAX
+#if USE_Y_MIN || USE_Y_MAX
   #define HAS_Y_ENDSTOP 1
 #endif
 
-#if _HAS_STOP(Z,,MIN,EITHER(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN, HAS_DELTA_SENSORLESS_PROBING))
-  #define HAS_Z_MIN 1
+#if _USE_STOP(Z,,MIN,EITHER(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN, HAS_DELTA_SENSORLESS_PROBING))
+  #define USE_Z_MIN 1
   #if !HAS_DELTA_SENSORLESS_PROBING
     #define HAS_Z_MIN_PIN 1
   #endif
 #endif
-#if _HAS_STOP(Z,,MAX,)
-  #define HAS_Z_MAX 1
+#if _USE_STOP(Z,,MAX,)
+  #define USE_Z_MAX 1
 #endif
-#if HAS_Z_MIN || HAS_Z_MAX
+#if USE_Z_MIN || USE_Z_MAX
   #define HAS_Z_ENDSTOP 1
 #endif
 
-#if _HAS_STOP(I,,MIN,)
-  #define HAS_I_MIN 1
-#elif _HAS_STOP(I,,MAX,)
-  #define HAS_I_MAX 1
+#if _USE_STOP(I,,MIN,)
+  #define USE_I_MIN 1
+#elif _USE_STOP(I,,MAX,)
+  #define USE_I_MAX 1
 #endif
-#if HAS_I_MIN || HAS_I_MAX
+#if USE_I_MIN || USE_I_MAX
   #define HAS_I_ENDSTOP 1
 #endif
 
-#if _HAS_STOP(J,,MIN,)
-  #define HAS_J_MIN 1
-#elif _HAS_STOP(J,,MAX,)
-  #define HAS_J_MAX 1
+#if _USE_STOP(J,,MIN,)
+  #define USE_J_MIN 1
+#elif _USE_STOP(J,,MAX,)
+  #define USE_J_MAX 1
 #endif
-#if HAS_J_MIN || HAS_J_MAX
+#if USE_J_MIN || USE_J_MAX
   #define HAS_J_ENDSTOP 1
 #endif
 
-#if _HAS_STOP(K,,MIN,)
-  #define HAS_K_MIN 1
-#elif _HAS_STOP(K,,MAX,)
-  #define HAS_K_MAX 1
+#if _USE_STOP(K,,MIN,)
+  #define USE_K_MIN 1
+#elif _USE_STOP(K,,MAX,)
+  #define USE_K_MAX 1
 #endif
-#if HAS_K_MIN || HAS_K_MAX
+#if USE_K_MIN || USE_K_MAX
   #define HAS_K_ENDSTOP 1
 #endif
 
-#if _HAS_STOP(U,,MIN,)
-  #define HAS_U_MIN 1
-#elif _HAS_STOP(U,,MAX,)
-  #define HAS_U_MAX 1
+#if _USE_STOP(U,,MIN,)
+  #define USE_U_MIN 1
+#elif _USE_STOP(U,,MAX,)
+  #define USE_U_MAX 1
 #endif
-#if HAS_U_MIN || HAS_U_MAX
+#if USE_U_MIN || USE_U_MAX
   #define HAS_U_ENDSTOP 1
 #endif
 
-#if _HAS_STOP(V,,MIN,)
-  #define HAS_V_MIN 1
-#elif _HAS_STOP(V,,MAX,)
-  #define HAS_V_MAX 1
+#if _USE_STOP(V,,MIN,)
+  #define USE_V_MIN 1
+#elif _USE_STOP(V,,MAX,)
+  #define USE_V_MAX 1
 #endif
-#if HAS_V_MIN || HAS_V_MAX
+#if USE_V_MIN || USE_V_MAX
   #define HAS_V_ENDSTOP 1
 #endif
 
-#if _HAS_STOP(W,,MIN,)
-  #define HAS_W_MIN 1
-#elif _HAS_STOP(W,,MAX,)
-  #define HAS_W_MAX 1
+#if _USE_STOP(W,,MIN,)
+  #define USE_W_MIN 1
+#elif _USE_STOP(W,,MAX,)
+  #define USE_W_MAX 1
 #endif
-#if HAS_W_MIN || HAS_W_MAX
+#if USE_W_MIN || USE_W_MAX
   #define HAS_W_ENDSTOP 1
 #endif
 
 #if EITHER(DUAL_X_CARRIAGE, X_DUAL_ENDSTOPS)
-  #if _HAS_STOP(X,2,MIN,)
-    #define HAS_X2_MIN 1
-  #elif _HAS_STOP(X,2,MAX,)
-    #define HAS_X2_MAX 1
+  #if _USE_STOP(X,2,MIN,)
+    #define USE_X2_MIN 1
+  #elif _USE_STOP(X,2,MAX,)
+    #define USE_X2_MAX 1
   #endif
-  #if HAS_X2_MIN || HAS_X2_MAX
+  #if USE_X2_MIN || USE_X2_MAX
     #define HAS_X2_ENDSTOP 1
   #endif
 #endif
 
 #if ENABLED(Y_DUAL_ENDSTOPS)
-  #if _HAS_STOP(Y,2,MIN,)
-    #define HAS_Y2_MIN 1
-  #elif _HAS_STOP(Y,2,MAX,)
-    #define HAS_Y2_MAX 1
+  #if _USE_STOP(Y,2,MIN,)
+    #define USE_Y2_MIN 1
+  #elif _USE_STOP(Y,2,MAX,)
+    #define USE_Y2_MAX 1
   #endif
-  #if HAS_Y2_MIN || HAS_Y2_MAX
+  #if USE_Y2_MIN || USE_Y2_MAX
     #define HAS_Y2_ENDSTOP 1
   #endif
 #endif
 
 #if ENABLED(Z_MULTI_ENDSTOPS)
-  #if _HAS_STOP(Z,2,MIN,)
-    #define HAS_Z2_MIN 1
-  #elif _HAS_STOP(Z,2,MAX,)
-    #define HAS_Z2_MAX 1
+  #if _USE_STOP(Z,2,MIN,)
+    #define USE_Z2_MIN 1
+  #elif _USE_STOP(Z,2,MAX,)
+    #define USE_Z2_MAX 1
   #endif
-  #if HAS_Z2_MIN || HAS_Z2_MAX
+  #if USE_Z2_MIN || USE_Z2_MAX
     #define HAS_Z2_ENDSTOP 1
   #endif
   #if NUM_Z_STEPPERS >= 3
-    #if _HAS_STOP(Z,3,MIN,)
-      #define HAS_Z3_MIN 1
-    #elif _HAS_STOP(Z,3,MAX,)
-      #define HAS_Z3_MAX 1
+    #if _USE_STOP(Z,3,MIN,)
+      #define USE_Z3_MIN 1
+    #elif _USE_STOP(Z,3,MAX,)
+      #define USE_Z3_MAX 1
     #endif
-    #if HAS_Z3_MIN || HAS_Z3_MAX
+    #if USE_Z3_MIN || USE_Z3_MAX
       #define HAS_Z3_ENDSTOP 1
     #endif
   #endif
   #if NUM_Z_STEPPERS >= 4
-    #if _HAS_STOP(Z,4,MIN,)
-      #define HAS_Z4_MIN 1
-    #elif _HAS_STOP(Z,4,MAX,)
-      #define HAS_Z4_MAX 1
+    #if _USE_STOP(Z,4,MIN,)
+      #define USE_Z4_MIN 1
+    #elif _USE_STOP(Z,4,MAX,)
+      #define USE_Z4_MAX 1
     #endif
-    #if HAS_Z4_MIN || HAS_Z4_MAX
+    #if USE_Z4_MIN || USE_Z4_MAX
       #define HAS_Z4_ENDSTOP 1
     #endif
   #endif
 #endif
 
-#if HAS_BED_PROBE && PIN_EXISTS(Z_MIN_PROBE)
-  #define HAS_Z_MIN_PROBE_PIN 1
-#endif
-
-#undef _HAS_STOP
+#undef _USE_STOP
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
-  #if HAS_X_MIN
+  #if USE_X_MIN
     #define ENDSTOPPULLUP_XMIN
   #endif
-  #if HAS_X_MAX
+  #if USE_X_MAX
     #define ENDSTOPPULLUP_XMAX
   #endif
-  #if HAS_Y_MIN
+  #if USE_Y_MIN
     #define ENDSTOPPULLUP_YMIN
-  #elif HAS_Y_MAX
+  #endif
+  #if USE_Y_MAX
     #define ENDSTOPPULLUP_YMAX
   #endif
   #if HAS_Z_MIN_PIN
     #define ENDSTOPPULLUP_ZMIN
   #endif
-  #if HAS_Z_MAX
+  #if USE_Z_MAX
     #define ENDSTOPPULLUP_ZMAX
   #endif
-  #if HAS_I_MIN
+  #if USE_I_MIN
     #define ENDSTOPPULLUP_IMIN
-  #elif HAS_I_MAX
+  #endif
+  #if USE_I_MAX
     #define ENDSTOPPULLUP_IMAX
   #endif
-  #if HAS_J_MIN
+  #if USE_J_MIN
     #define ENDSTOPPULLUP_JMIN
-  #elif HAS_J_MAX
+  #endif
+  #if USE_J_MAX
     #define ENDSTOPPULLUP_JMAX
   #endif
-  #if HAS_K_MIN
+  #if USE_K_MIN
     #define ENDSTOPPULLUP_KMIN
-  #elif HAS_K_MAX
+  #endif
+  #if USE_K_MAX
     #define ENDSTOPPULLUP_KMAX
   #endif
-  #if HAS_U_MIN
+  #if USE_U_MIN
     #define ENDSTOPPULLUP_UMIN
-  #elif HAS_U_MAX
+  #endif
+  #if USE_U_MAX
     #define ENDSTOPPULLUP_UMAX
   #endif
-  #if HAS_V_MIN
+  #if USE_V_MIN
     #define ENDSTOPPULLUP_VMIN
-  #elif HAS_V_MAX
+  #endif
+  #if USE_V_MAX
     #define ENDSTOPPULLUP_VMAX
   #endif
-  #if HAS_W_MIN
+  #if USE_W_MIN
     #define ENDSTOPPULLUP_WMIN
-  #elif HAS_W_MAX
+  #endif
+  #if USE_W_MAX
     #define ENDSTOPPULLUP_WMAX
   #endif
 #endif
 
 /**
  * Set ENDSTOPPULLDOWNS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLDOWNS)
-  #if HAS_X_MIN
+  #if USE_X_MIN
     #define ENDSTOPPULLDOWN_XMIN
   #endif
-  #if HAS_X_MAX
+  #if USE_X_MAX
     #define ENDSTOPPULLDOWN_XMAX
   #endif
-  #if HAS_Y_MIN
+  #if USE_Y_MIN
     #define ENDSTOPPULLDOWN_YMIN
-  #elif HAS_Y_MAX
+  #endif
+  #if USE_Y_MAX
     #define ENDSTOPPULLDOWN_YMAX
   #endif
-  #if HAS_Z_MIN_PIN
+  #if USE_Z_MIN
     #define ENDSTOPPULLDOWN_ZMIN
   #endif
-  #if HAS_Z_MAX
+  #if USE_Z_MAX
     #define ENDSTOPPULLDOWN_ZMAX
   #endif
-  #if HAS_I_MIN
+  #if USE_I_MIN
     #define ENDSTOPPULLDOWN_IMIN
-  #elif HAS_I_MAX
+  #endif
+  #if USE_I_MAX
     #define ENDSTOPPULLDOWN_IMAX
   #endif
-  #if HAS_J_MIN
+  #if USE_J_MIN
     #define ENDSTOPPULLDOWN_JMIN
-  #elif HAS_J_MAX
+  #endif
+  #if USE_J_MAX
     #define ENDSTOPPULLDOWN_JMAX
   #endif
-  #if HAS_K_MIN
+  #if USE_K_MIN
     #define ENDSTOPPULLDOWN_KMIN
-  #elif HAS_K_MAX
+  #endif
+  #if USE_K_MAX
     #define ENDSTOPPULLDOWN_KMAX
   #endif
-  #if HAS_U_MIN
+  #if USE_U_MIN
     #define ENDSTOPPULLDOWN_UMIN
-  #elif HAS_U_MAX
+  #endif
+  #if USE_U_MAX
     #define ENDSTOPPULLDOWN_UMAX
   #endif
-  #if HAS_V_MIN
+  #if USE_V_MIN
     #define ENDSTOPPULLDOWN_VMIN
-  #elif HAS_V_MAX
+  #endif
+  #if USE_V_MAX
     #define ENDSTOPPULLDOWN_VMAX
   #endif
-  #if HAS_W_MIN
+  #if USE_W_MIN
     #define ENDSTOPPULLDOWN_WMIN
-  #elif HAS_W_MAX
+  #endif
+  #if USE_W_MAX
     #define ENDSTOPPULLDOWN_WMAX
   #endif
 #endif
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (TEMP_SENSOR(P) && PIN_EXISTS(TEMP_##P) && !TEMP_SENSOR_IS_MAX_TC(P) && !TEMP_SENSOR_##P##_IS_DUMMY)
 #if HOTENDS > 0 && HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
@@ -2810,21 +2812,21 @@
  */
 #if EITHER(MESH_BED_LEVELING, HAS_BED_PROBE)
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MAX
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
 #endif
 #if HAS_BED_PROBE
-  #if BOTH(ENDSTOPPULLUPS, HAS_Z_MIN_PROBE_PIN)
+  #if BOTH(ENDSTOPPULLUPS, USE_Z_MIN_PROBE)
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef XY_PROBE_FEEDRATE
     #define XY_PROBE_FEEDRATE ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif
 #else
   #undef NOZZLE_TO_PROBE_OFFSET

commit 7642bfbf8b997308e691034aa294a061c5fc5426
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed May 3 14:19:32 2023 -0700

    üêõ Fix TFT Touch Calibration overrides (#25579)
    
    ‚Ä¶and other misc. display-related updates
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0d74649009..7319905ee6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -553,21 +553,21 @@
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
   #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
     #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
   #endif
 
-#endif
+#endif // HAS_MEDIA
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_STATE
     #define PSU_NAME "XBox"     // X-Box 360 (203W)
   #else
@@ -3146,20 +3146,39 @@
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 
+// Touch Calibration
+#if ANY(HAS_SPI_TFT, HAS_FSMC_TFT, HAS_LTDC_TFT)
+  #ifndef TOUCH_CALIBRATION_X
+    #define TOUCH_CALIBRATION_X 0
+  #endif
+  #ifndef TOUCH_CALIBRATION_Y
+    #define TOUCH_CALIBRATION_Y 0
+  #endif
+  #ifndef TOUCH_OFFSET_X
+    #define TOUCH_OFFSET_X 0
+  #endif
+  #ifndef TOUCH_OFFSET_Y
+    #define TOUCH_OFFSET_Y 0
+  #endif
+  #ifndef TOUCH_ORIENTATION
+    #define TOUCH_ORIENTATION TOUCH_LANDSCAPE
+  #endif
+#endif
+
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ANY(SCROLL_LONG_FILENAMES, HAS_DWIN_E3V2, TFT_COLOR_UI)
   #define VFAT_ENTRIES_LIMIT 5
 #else
   #define VFAT_ENTRIES_LIMIT 2
 #endif
 #define MAX_VFAT_ENTRIES 20 // by VFAT specs to fit LFN of length 255
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)

commit e1f6435d4410478930ef5fb7d99a311332f3cee8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue May 2 17:59:27 2023 -0500

    ‚ú® Creality STM32F401RE board (e.g., Ender-5 S1) (#25773)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2c611099e3..0d74649009 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -58,20 +58,24 @@
 #else
   #undef I2C_EEPROM
   #undef SPI_EEPROM
   #undef QSPI_EEPROM
   #undef SDCARD_EEPROM_EMULATION
   #undef SRAM_EEPROM_EMULATION
   #undef FLASH_EEPROM_EMULATION
   #undef IIC_BL24CXX_EEPROM
 #endif
 
+#if DISABLED(IIC_BL24CXX_EEPROM)
+  #undef OTA_FIRMWARE_UPDATE
+#endif
+
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 

commit 7d95928cbb3de6c677bf76110097c0aa21965740
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 28 13:38:59 2023 -0500

    üêõ Fix auto pullup/down settings
    
    Followup to #25748

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bb78178ad5..2c611099e3 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1005,140 +1005,20 @@
     #ifndef Z4_MAX_ENDSTOP_HIT_STATE
       #define Z4_MAX_ENDSTOP_HIT_STATE HIGH
     #endif
     #ifndef Z4_MIN_ENDSTOP_HIT_STATE
       #define Z4_MIN_ENDSTOP_HIT_STATE HIGH
     #endif
   #endif
 
 #endif // Z_MULTI_ENDSTOPS
 
-/**
- * Set ENDSTOPPULLUPS for active endstop switches
- */
-#if ENABLED(ENDSTOPPULLUPS)
-  #if HAS_X_MAX
-    #define ENDSTOPPULLUP_XMAX
-  #endif
-  #if HAS_Y_MAX
-    #define ENDSTOPPULLUP_YMAX
-  #endif
-  #if HAS_Z_MAX
-    #define ENDSTOPPULLUP_ZMAX
-  #endif
-  #if HAS_I_MAX
-    #define ENDSTOPPULLUP_IMAX
-  #endif
-  #if HAS_J_MAX
-    #define ENDSTOPPULLUP_JMAX
-  #endif
-  #if HAS_K_MAX
-    #define ENDSTOPPULLUP_KMAX
-  #endif
-  #if HAS_U_MAX
-    #define ENDSTOPPULLUP_UMAX
-  #endif
-  #if HAS_V_MAX
-    #define ENDSTOPPULLUP_VMAX
-  #endif
-  #if HAS_W_MAX
-    #define ENDSTOPPULLUP_WMAX
-  #endif
-  #if HAS_X_MIN
-    #define ENDSTOPPULLUP_XMIN
-  #endif
-  #if HAS_Y_MIN
-    #define ENDSTOPPULLUP_YMIN
-  #endif
-  #if HAS_Z_MIN_PIN
-    #define ENDSTOPPULLUP_ZMIN
-  #endif
-  #if HAS_I_MIN
-    #define ENDSTOPPULLUP_IMIN
-  #endif
-  #if HAS_J_MIN
-    #define ENDSTOPPULLUP_JMIN
-  #endif
-  #if HAS_K_MIN
-    #define ENDSTOPPULLUP_KMIN
-  #endif
-  #if HAS_U_MIN
-    #define ENDSTOPPULLUP_UMIN
-  #endif
-  #if HAS_V_MIN
-    #define ENDSTOPPULLUP_VMIN
-  #endif
-  #if HAS_W_MIN
-    #define ENDSTOPPULLUP_WMIN
-  #endif
-#endif
-
-/**
- * Set ENDSTOPPULLDOWNS for active endstop switches
- */
-#if ENABLED(ENDSTOPPULLDOWNS)
-  #if HAS_X_MAX
-    #define ENDSTOPPULLDOWN_XMAX
-  #endif
-  #if HAS_Y_MAX
-    #define ENDSTOPPULLDOWN_YMAX
-  #endif
-  #if HAS_Z_MAX
-    #define ENDSTOPPULLDOWN_ZMAX
-  #endif
-  #if HAS_I_MAX
-    #define ENDSTOPPULLDOWN_IMAX
-  #endif
-  #if HAS_J_MAX
-    #define ENDSTOPPULLDOWN_JMAX
-  #endif
-  #if HAS_K_MAX
-    #define ENDSTOPPULLDOWN_KMAX
-  #endif
-  #if HAS_U_MAX
-    #define ENDSTOPPULLDOWN_UMAX
-  #endif
-  #if HAS_V_MAX
-    #define ENDSTOPPULLDOWN_VMAX
-  #endif
-  #if HAS_W_MAX
-    #define ENDSTOPPULLDOWN_WMAX
-  #endif
-  #if HAS_X_MIN
-    #define ENDSTOPPULLDOWN_XMIN
-  #endif
-  #if HAS_Y_MIN
-    #define ENDSTOPPULLDOWN_YMIN
-  #endif
-  #if HAS_Z_MIN_PIN
-    #define ENDSTOPPULLDOWN_ZMIN
-  #endif
-  #if HAS_I_MIN
-    #define ENDSTOPPULLDOWN_IMIN
-  #endif
-  #if HAS_J_MIN
-    #define ENDSTOPPULLDOWN_JMIN
-  #endif
-  #if HAS_K_MIN
-    #define ENDSTOPPULLDOWN_KMIN
-  #endif
-  #if HAS_U_MIN
-    #define ENDSTOPPULLDOWN_UMIN
-  #endif
-  #if HAS_V_MIN
-    #define ENDSTOPPULLDOWN_VMIN
-  #endif
-  #if HAS_W_MIN
-    #define ENDSTOPPULLDOWN_WMIN
-  #endif
-#endif
-
 /**
  * Shorthand for pin tests, used wherever needed
  */
 
 // Steppers
 #if PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X))
   #define HAS_X_ENABLE 1
 #endif
 #if PIN_EXISTS(X_DIR)
   #define HAS_X_DIR 1
@@ -2200,20 +2080,126 @@
     #endif
   #endif
 #endif
 
 #if HAS_BED_PROBE && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
 #undef _HAS_STOP
 
+/**
+ * Set ENDSTOPPULLUPS for active endstop switches
+ */
+#if ENABLED(ENDSTOPPULLUPS)
+  #if HAS_X_MIN
+    #define ENDSTOPPULLUP_XMIN
+  #endif
+  #if HAS_X_MAX
+    #define ENDSTOPPULLUP_XMAX
+  #endif
+  #if HAS_Y_MIN
+    #define ENDSTOPPULLUP_YMIN
+  #elif HAS_Y_MAX
+    #define ENDSTOPPULLUP_YMAX
+  #endif
+  #if HAS_Z_MIN_PIN
+    #define ENDSTOPPULLUP_ZMIN
+  #endif
+  #if HAS_Z_MAX
+    #define ENDSTOPPULLUP_ZMAX
+  #endif
+  #if HAS_I_MIN
+    #define ENDSTOPPULLUP_IMIN
+  #elif HAS_I_MAX
+    #define ENDSTOPPULLUP_IMAX
+  #endif
+  #if HAS_J_MIN
+    #define ENDSTOPPULLUP_JMIN
+  #elif HAS_J_MAX
+    #define ENDSTOPPULLUP_JMAX
+  #endif
+  #if HAS_K_MIN
+    #define ENDSTOPPULLUP_KMIN
+  #elif HAS_K_MAX
+    #define ENDSTOPPULLUP_KMAX
+  #endif
+  #if HAS_U_MIN
+    #define ENDSTOPPULLUP_UMIN
+  #elif HAS_U_MAX
+    #define ENDSTOPPULLUP_UMAX
+  #endif
+  #if HAS_V_MIN
+    #define ENDSTOPPULLUP_VMIN
+  #elif HAS_V_MAX
+    #define ENDSTOPPULLUP_VMAX
+  #endif
+  #if HAS_W_MIN
+    #define ENDSTOPPULLUP_WMIN
+  #elif HAS_W_MAX
+    #define ENDSTOPPULLUP_WMAX
+  #endif
+#endif
+
+/**
+ * Set ENDSTOPPULLDOWNS for active endstop switches
+ */
+#if ENABLED(ENDSTOPPULLDOWNS)
+  #if HAS_X_MIN
+    #define ENDSTOPPULLDOWN_XMIN
+  #endif
+  #if HAS_X_MAX
+    #define ENDSTOPPULLDOWN_XMAX
+  #endif
+  #if HAS_Y_MIN
+    #define ENDSTOPPULLDOWN_YMIN
+  #elif HAS_Y_MAX
+    #define ENDSTOPPULLDOWN_YMAX
+  #endif
+  #if HAS_Z_MIN_PIN
+    #define ENDSTOPPULLDOWN_ZMIN
+  #endif
+  #if HAS_Z_MAX
+    #define ENDSTOPPULLDOWN_ZMAX
+  #endif
+  #if HAS_I_MIN
+    #define ENDSTOPPULLDOWN_IMIN
+  #elif HAS_I_MAX
+    #define ENDSTOPPULLDOWN_IMAX
+  #endif
+  #if HAS_J_MIN
+    #define ENDSTOPPULLDOWN_JMIN
+  #elif HAS_J_MAX
+    #define ENDSTOPPULLDOWN_JMAX
+  #endif
+  #if HAS_K_MIN
+    #define ENDSTOPPULLDOWN_KMIN
+  #elif HAS_K_MAX
+    #define ENDSTOPPULLDOWN_KMAX
+  #endif
+  #if HAS_U_MIN
+    #define ENDSTOPPULLDOWN_UMIN
+  #elif HAS_U_MAX
+    #define ENDSTOPPULLDOWN_UMAX
+  #endif
+  #if HAS_V_MIN
+    #define ENDSTOPPULLDOWN_VMIN
+  #elif HAS_V_MAX
+    #define ENDSTOPPULLDOWN_VMAX
+  #endif
+  #if HAS_W_MIN
+    #define ENDSTOPPULLDOWN_WMIN
+  #elif HAS_W_MAX
+    #define ENDSTOPPULLDOWN_WMAX
+  #endif
+#endif
+
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (TEMP_SENSOR(P) && PIN_EXISTS(TEMP_##P) && !TEMP_SENSOR_IS_MAX_TC(P) && !TEMP_SENSOR_##P##_IS_DUMMY)
 #if HOTENDS > 0 && HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
 #endif
 #if HOTENDS > 1 && HAS_ADC_TEST(1)
   #define HAS_TEMP_ADC_1 1
 #endif

commit 9a7d9e6995f4f66c4b48147ec7876d49d4b3ae77
Author: Martin Turski <turningtides@outlook.de>
Date:   Thu Apr 27 14:05:24 2023 +0200

    üßë‚Äçüíª Optimize PlatformIO source filtering (#25332)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9e8e8ed17f..bb78178ad5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2496,34 +2496,53 @@
   #define HAS_AUTO_REPORTING 1
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 #if !HAS_AUTO_COOLER_FAN || AUTO_COOLER_IS_E
   #undef AUTO_POWER_COOLER_FAN
 #endif
 
+/**
+ * Controller Fan Settings
+ */
+#if PIN_EXISTS(CONTROLLER_FAN)
+  #define HAS_CONTROLLER_FAN 1
+#endif
+
+#if HAS_CONTROLLER_FAN
+  #if ENABLED(CONTROLLER_FAN_USE_BOARD_TEMP)
+    #define HAS_CONTROLLER_FAN_BOARD_TEMP_TRIGGER 1
+    #ifndef CONTROLLER_FAN_TRIGGER_TEMP
+      #define CONTROLLER_FAN_TRIGGER_TEMP 30
+    #endif
+  #else
+    #undef CONTROLLER_FAN_TRIGGER_TEMP
+  #endif
+#endif
+
 // Print Cooling fans (limit)
 #ifdef NUM_M106_FANS
   #define MAX_FANS NUM_M106_FANS
 #else
   #define MAX_FANS 8  // Max supported fans
 #endif
 
 #define _IS_E_AUTO(N,F) (PIN_EXISTS(E##N##_AUTO_FAN) && E##N##_AUTO_FAN_PIN == FAN##F##_PIN)
 #define _HAS_FAN(F) (F < MAX_FANS && PIN_EXISTS(FAN##F) \
-                     && CONTROLLER_FAN_PIN != FAN##F##_PIN \
+                     && !(HAS_CONTROLLER_FAN && CONTROLLER_FAN_PIN == FAN##F##_PIN) \
                      && !_IS_E_AUTO(0,F) && !_IS_E_AUTO(1,F) \
                      && !_IS_E_AUTO(2,F) && !_IS_E_AUTO(3,F) \
                      && !_IS_E_AUTO(4,F) && !_IS_E_AUTO(5,F) \
                      && !_IS_E_AUTO(6,F) && !_IS_E_AUTO(7,F))
+
 #if _HAS_FAN(0)
   #define HAS_FAN0 1
 #endif
 #if _HAS_FAN(1)
   #define HAS_FAN1 1
 #endif
 #if _HAS_FAN(2)
   #define HAS_FAN2 1
 #endif
 #if _HAS_FAN(3)
@@ -2576,38 +2595,20 @@
 #endif
 
 #if FAN_COUNT > 0
   #define HAS_FAN 1
 #endif
 
 #if PIN_EXISTS(FANMUX0)
   #define HAS_FANMUX 1  // Part Cooling fan multipliexer
 #endif
 
-/**
- * Controller Fan Settings
- */
-#if PIN_EXISTS(CONTROLLER_FAN)
-  #define HAS_CONTROLLER_FAN 1
-#endif
-
-#if HAS_CONTROLLER_FAN
-  #if ENABLED(CONTROLLER_FAN_USE_BOARD_TEMP)
-    #define HAS_CONTROLLER_FAN_BOARD_TEMP_TRIGGER 1
-    #ifndef CONTROLLER_FAN_TRIGGER_TEMP
-      #define CONTROLLER_FAN_TRIGGER_TEMP 30
-    #endif
-  #else
-    #undef CONTROLLER_FAN_TRIGGER_TEMP
-  #endif
-#endif
-
 /**
  * MIN/MAX fan PWM scaling
  */
 #if EITHER(HAS_FAN, USE_CONTROLLER_FAN)
   #ifndef FAN_OFF_PWM
     #define FAN_OFF_PWM 0
   #endif
   #ifndef FAN_MIN_PWM
     #if FAN_OFF_PWM > 0
       #define FAN_MIN_PWM (FAN_OFF_PWM + 1)

commit 467ab74523087a852ab50939d86a0ca0b78f17ad
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 26 14:56:23 2023 -0500

    üßë‚Äçüíª Simplify endstops config (#25748)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f3d80a6c9f..9e8e8ed17f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -730,53 +730,53 @@
   #endif
 
 #endif // HAS_MAX_TC
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_TO_MAX
     #ifndef X2_MAX_ENDSTOP_HIT_STATE
-      #if X2_USE_ENDSTOP == _XMIN_
+      #if X2_STOP_PIN == X_MIN_PIN
         #define X2_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _XMAX_
+      #elif X2_STOP_PIN == X_MAX_PIN
         #define X2_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _YMIN_
+      #elif X2_STOP_PIN == Y_MIN_PIN
         #define X2_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _YMAX_
+      #elif X2_STOP_PIN == Y_MAX_PIN
         #define X2_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _ZMIN_
+      #elif X2_STOP_PIN == Z_MIN_PIN
         #define X2_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _ZMAX_
+      #elif X2_STOP_PIN == Z_MAX_PIN
         #define X2_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(X2_MAX)
       #undef X2_MAX_PIN
       #if PIN_EXISTS(X2_STOP)
         #define X2_MAX_PIN X2_STOP_PIN
       #endif
     #endif
   #else
     #ifndef X2_MIN_ENDSTOP_HIT_STATE
-      #if X2_USE_ENDSTOP == _XMIN_
+      #if X2_STOP_PIN == X_MIN_PIN
         #define X2_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _XMAX_
+      #elif X2_STOP_PIN == X_MAX_PIN
         #define X2_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _YMIN_
+      #elif X2_STOP_PIN == Y_MIN_PIN
         #define X2_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _YMAX_
+      #elif X2_STOP_PIN == Y_MAX_PIN
         #define X2_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _ZMIN_
+      #elif X2_STOP_PIN == Z_MIN_PIN
         #define X2_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-      #elif X2_USE_ENDSTOP == _ZMAX_
+      #elif X2_STOP_PIN == Z_MAX_PIN
         #define X2_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(X2_MIN)
       #undef X2_MIN_PIN
       #if PIN_EXISTS(X2_STOP)
         #define X2_MIN_PIN X2_STOP_PIN
       #endif
     #endif
   #endif
@@ -787,53 +787,53 @@
     #define X2_MIN_ENDSTOP_HIT_STATE HIGH
   #endif
 #endif
 
 /**
  * Y_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Y_DUAL_ENDSTOPS)
   #if Y_HOME_TO_MAX
     #ifndef Y2_MAX_ENDSTOP_HIT_STATE
-      #if Y2_USE_ENDSTOP == _XMIN_
+      #if Y2_STOP_PIN == X_MIN_PIN
         #define Y2_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _XMAX_
+      #elif Y2_STOP_PIN == X_MAX_PIN
         #define Y2_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _YMIN_
+      #elif Y2_STOP_PIN == Y_MIN_PIN
         #define Y2_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _YMAX_
+      #elif Y2_STOP_PIN == Y_MAX_PIN
         #define Y2_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _ZMIN_
+      #elif Y2_STOP_PIN == Z_MIN_PIN
         #define Y2_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _ZMAX_
+      #elif Y2_STOP_PIN == Z_MAX_PIN
         #define Y2_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(Y2_MAX)
       #undef Y2_MAX_PIN
       #if PIN_EXISTS(Y2_STOP)
         #define Y2_MAX_PIN Y2_STOP_PIN
       #endif
     #endif
   #else
     #ifndef Y2_MIN_ENDSTOP_HIT_STATE
-      #if Y2_USE_ENDSTOP == _XMIN_
+      #if Y2_STOP_PIN == X_MIN_PIN
         #define Y2_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _XMAX_
+      #elif Y2_STOP_PIN == X_MAX_PIN
         #define Y2_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _YMIN_
+      #elif Y2_STOP_PIN == Y_MIN_PIN
         #define Y2_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _YMAX_
+      #elif Y2_STOP_PIN == Y_MAX_PIN
         #define Y2_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _ZMIN_
+      #elif Y2_STOP_PIN == Z_MIN_PIN
         #define Y2_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-      #elif Y2_USE_ENDSTOP == _ZMAX_
+      #elif Y2_STOP_PIN == Z_MAX_PIN
         #define Y2_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(Y2_MIN)
       #undef Y2_MIN_PIN
       #if PIN_EXISTS(Y2_STOP)
         #define Y2_MIN_PIN Y2_STOP_PIN
       #endif
     #endif
   #endif
@@ -845,106 +845,106 @@
   #endif
 #endif
 
 /**
  * Z_MULTI_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Z_MULTI_ENDSTOPS)
 
   #if Z_HOME_TO_MAX
     #ifndef Z2_MAX_ENDSTOP_HIT_STATE
-      #if Z2_USE_ENDSTOP == _XMIN_
+      #if Z2_STOP_PIN == X_MIN_PIN
         #define Z2_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _XMAX_
+      #elif Z2_STOP_PIN == X_MAX_PIN
         #define Z2_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _YMIN_
+      #elif Z2_STOP_PIN == Y_MIN_PIN
         #define Z2_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _YMAX_
+      #elif Z2_STOP_PIN == Y_MAX_PIN
         #define Z2_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _ZMIN_
+      #elif Z2_STOP_PIN == Z_MIN_PIN
         #define Z2_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _ZMAX_
+      #elif Z2_STOP_PIN == Z_MAX_PIN
         #define Z2_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(Z2_MAX)
       #undef Z2_MAX_PIN
       #if PIN_EXISTS(Z2_STOP)
         #define Z2_MAX_PIN Z2_STOP_PIN
       #endif
     #endif
   #else
     #ifndef Z2_MIN_ENDSTOP_HIT_STATE
-      #if Z2_USE_ENDSTOP == _XMIN_
+      #if Z2_STOP_PIN == X_MIN_PIN
         #define Z2_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _XMAX_
+      #elif Z2_STOP_PIN == X_MAX_PIN
         #define Z2_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _YMIN_
+      #elif Z2_STOP_PIN == Y_MIN_PIN
         #define Z2_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _YMAX_
+      #elif Z2_STOP_PIN == Y_MAX_PIN
         #define Z2_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _ZMIN_
+      #elif Z2_STOP_PIN == Z_MIN_PIN
         #define Z2_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-      #elif Z2_USE_ENDSTOP == _ZMAX_
+      #elif Z2_STOP_PIN == Z_MAX_PIN
         #define Z2_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(Z2_MIN)
       #undef Z2_MIN_PIN
       #if PIN_EXISTS(Z2_STOP)
         #define Z2_MIN_PIN Z2_STOP_PIN
       #endif
     #endif
   #endif
   #ifndef Z2_MAX_ENDSTOP_HIT_STATE
     #define Z2_MAX_ENDSTOP_HIT_STATE HIGH
   #endif
   #ifndef Z2_MIN_ENDSTOP_HIT_STATE
     #define Z2_MIN_ENDSTOP_HIT_STATE HIGH
   #endif
 
   #if NUM_Z_STEPPERS >= 3
     #if Z_HOME_TO_MAX
       #ifndef Z3_MAX_ENDSTOP_HIT_STATE
-        #if Z3_USE_ENDSTOP == _XMIN_
+        #if Z3_STOP_PIN == X_MIN_PIN
           #define Z3_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _XMAX_
+        #elif Z3_STOP_PIN == X_MAX_PIN
           #define Z3_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _YMIN_
+        #elif Z3_STOP_PIN == Y_MIN_PIN
           #define Z3_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _YMAX_
+        #elif Z3_STOP_PIN == Y_MAX_PIN
           #define Z3_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _ZMIN_
+        #elif Z3_STOP_PIN == Z_MIN_PIN
           #define Z3_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _ZMAX_
+        #elif Z3_STOP_PIN == Z_MAX_PIN
           #define Z3_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
         #endif
       #endif
       #if !PIN_EXISTS(Z3_MAX)
         #undef Z3_MAX_PIN
         #if PIN_EXISTS(Z3_STOP)
           #define Z3_MAX_PIN Z3_STOP_PIN
         #endif
       #endif
     #else
       #ifndef Z3_MIN_ENDSTOP_HIT_STATE
-        #if Z3_USE_ENDSTOP == _XMIN_
+        #if Z3_STOP_PIN == X_MIN_PIN
           #define Z3_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _XMAX_
+        #elif Z3_STOP_PIN == X_MAX_PIN
           #define Z3_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _YMIN_
+        #elif Z3_STOP_PIN == Y_MIN_PIN
           #define Z3_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _YMAX_
+        #elif Z3_STOP_PIN == Y_MAX_PIN
           #define Z3_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _ZMIN_
+        #elif Z3_STOP_PIN == Z_MIN_PIN
           #define Z3_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-        #elif Z3_USE_ENDSTOP == _ZMAX_
+        #elif Z3_STOP_PIN == Z_MAX_PIN
           #define Z3_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
         #endif
       #endif
       #if !PIN_EXISTS(Z3_MIN)
         #undef Z3_MIN_PIN
         #if PIN_EXISTS(Z3_STOP)
           #define Z3_MIN_PIN Z3_STOP_PIN
         #endif
       #endif
     #endif
@@ -952,53 +952,53 @@
       #define Z3_MAX_ENDSTOP_HIT_STATE HIGH
     #endif
     #ifndef Z3_MIN_ENDSTOP_HIT_STATE
       #define Z3_MIN_ENDSTOP_HIT_STATE HIGH
     #endif
   #endif
 
   #if NUM_Z_STEPPERS >= 4
     #if Z_HOME_TO_MAX
       #ifndef Z4_MAX_ENDSTOP_HIT_STATE
-        #if Z4_USE_ENDSTOP == _XMIN_
+        #if Z4_STOP_PIN == X_MIN_PIN
           #define Z4_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _XMAX_
+        #elif Z4_STOP_PIN == X_MAX_PIN
           #define Z4_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _YMIN_
+        #elif Z4_STOP_PIN == Y_MIN_PIN
           #define Z4_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _YMAX_
+        #elif Z4_STOP_PIN == Y_MAX_PIN
           #define Z4_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _ZMIN_
+        #elif Z4_STOP_PIN == Z_MIN_PIN
           #define Z4_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _ZMAX_
+        #elif Z4_STOP_PIN == Z_MAX_PIN
           #define Z4_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
         #endif
       #endif
       #if !PIN_EXISTS(Z4_MAX)
         #undef Z4_MAX_PIN
         #if PIN_EXISTS(Z4_STOP)
           #define Z4_MAX_PIN Z4_STOP_PIN
         #endif
       #endif
     #else
       #ifndef Z4_MIN_ENDSTOP_HIT_STATE
-        #if Z4_USE_ENDSTOP == _XMIN_
+        #if Z4_STOP_PIN == X_MIN_PIN
           #define Z4_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _XMAX_
+        #elif Z4_STOP_PIN == X_MAX_PIN
           #define Z4_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _YMIN_
+        #elif Z4_STOP_PIN == Y_MIN_PIN
           #define Z4_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _YMAX_
+        #elif Z4_STOP_PIN == Y_MAX_PIN
           #define Z4_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _ZMIN_
+        #elif Z4_STOP_PIN == Z_MIN_PIN
           #define Z4_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
-        #elif Z4_USE_ENDSTOP == _ZMAX_
+        #elif Z4_STOP_PIN == Z_MAX_PIN
           #define Z4_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
         #endif
       #endif
       #if !PIN_EXISTS(Z4_MIN)
         #undef Z4_MIN_PIN
         #if PIN_EXISTS(Z4_STOP)
           #define Z4_MIN_PIN Z4_STOP_PIN
         #endif
       #endif
     #endif
@@ -1009,132 +1009,132 @@
       #define Z4_MIN_ENDSTOP_HIT_STATE HIGH
     #endif
   #endif
 
 #endif // Z_MULTI_ENDSTOPS
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
-  #if ENABLED(USE_XMAX_PLUG)
+  #if HAS_X_MAX
     #define ENDSTOPPULLUP_XMAX
   #endif
-  #if ENABLED(USE_YMAX_PLUG)
+  #if HAS_Y_MAX
     #define ENDSTOPPULLUP_YMAX
   #endif
-  #if ENABLED(USE_ZMAX_PLUG)
+  #if HAS_Z_MAX
     #define ENDSTOPPULLUP_ZMAX
   #endif
-  #if ENABLED(USE_IMAX_PLUG)
+  #if HAS_I_MAX
     #define ENDSTOPPULLUP_IMAX
   #endif
-  #if ENABLED(USE_JMAX_PLUG)
+  #if HAS_J_MAX
     #define ENDSTOPPULLUP_JMAX
   #endif
-  #if ENABLED(USE_KMAX_PLUG)
+  #if HAS_K_MAX
     #define ENDSTOPPULLUP_KMAX
   #endif
-  #if ENABLED(USE_UMAX_PLUG)
+  #if HAS_U_MAX
     #define ENDSTOPPULLUP_UMAX
   #endif
-  #if ENABLED(USE_VMAX_PLUG)
+  #if HAS_V_MAX
     #define ENDSTOPPULLUP_VMAX
   #endif
-  #if ENABLED(USE_WMAX_PLUG)
+  #if HAS_W_MAX
     #define ENDSTOPPULLUP_WMAX
   #endif
-  #if ENABLED(USE_XMIN_PLUG)
+  #if HAS_X_MIN
     #define ENDSTOPPULLUP_XMIN
   #endif
-  #if ENABLED(USE_YMIN_PLUG)
+  #if HAS_Y_MIN
     #define ENDSTOPPULLUP_YMIN
   #endif
-  #if ENABLED(USE_ZMIN_PLUG)
+  #if HAS_Z_MIN_PIN
     #define ENDSTOPPULLUP_ZMIN
   #endif
-  #if ENABLED(USE_IMIN_PLUG)
+  #if HAS_I_MIN
     #define ENDSTOPPULLUP_IMIN
   #endif
-  #if ENABLED(USE_JMIN_PLUG)
+  #if HAS_J_MIN
     #define ENDSTOPPULLUP_JMIN
   #endif
-  #if ENABLED(USE_KMIN_PLUG)
+  #if HAS_K_MIN
     #define ENDSTOPPULLUP_KMIN
   #endif
-  #if ENABLED(USE_UMIN_PLUG)
+  #if HAS_U_MIN
     #define ENDSTOPPULLUP_UMIN
   #endif
-  #if ENABLED(USE_VMIN_PLUG)
+  #if HAS_V_MIN
     #define ENDSTOPPULLUP_VMIN
   #endif
-  #if ENABLED(USE_WMIN_PLUG)
+  #if HAS_W_MIN
     #define ENDSTOPPULLUP_WMIN
   #endif
 #endif
 
 /**
  * Set ENDSTOPPULLDOWNS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLDOWNS)
-  #if ENABLED(USE_XMAX_PLUG)
+  #if HAS_X_MAX
     #define ENDSTOPPULLDOWN_XMAX
   #endif
-  #if ENABLED(USE_YMAX_PLUG)
+  #if HAS_Y_MAX
     #define ENDSTOPPULLDOWN_YMAX
   #endif
-  #if ENABLED(USE_ZMAX_PLUG)
+  #if HAS_Z_MAX
     #define ENDSTOPPULLDOWN_ZMAX
   #endif
-  #if ENABLED(USE_IMAX_PLUG)
+  #if HAS_I_MAX
     #define ENDSTOPPULLDOWN_IMAX
   #endif
-  #if ENABLED(USE_JMAX_PLUG)
+  #if HAS_J_MAX
     #define ENDSTOPPULLDOWN_JMAX
   #endif
-  #if ENABLED(USE_KMAX_PLUG)
+  #if HAS_K_MAX
     #define ENDSTOPPULLDOWN_KMAX
   #endif
-  #if ENABLED(USE_UMAX_PLUG)
+  #if HAS_U_MAX
     #define ENDSTOPPULLDOWN_UMAX
   #endif
-  #if ENABLED(USE_VMAX_PLUG)
+  #if HAS_V_MAX
     #define ENDSTOPPULLDOWN_VMAX
   #endif
-  #if ENABLED(USE_WMAX_PLUG)
+  #if HAS_W_MAX
     #define ENDSTOPPULLDOWN_WMAX
   #endif
-  #if ENABLED(USE_XMIN_PLUG)
+  #if HAS_X_MIN
     #define ENDSTOPPULLDOWN_XMIN
   #endif
-  #if ENABLED(USE_YMIN_PLUG)
+  #if HAS_Y_MIN
     #define ENDSTOPPULLDOWN_YMIN
   #endif
-  #if ENABLED(USE_ZMIN_PLUG)
+  #if HAS_Z_MIN_PIN
     #define ENDSTOPPULLDOWN_ZMIN
   #endif
-  #if ENABLED(USE_IMIN_PLUG)
+  #if HAS_I_MIN
     #define ENDSTOPPULLDOWN_IMIN
   #endif
-  #if ENABLED(USE_JMIN_PLUG)
+  #if HAS_J_MIN
     #define ENDSTOPPULLDOWN_JMIN
   #endif
-  #if ENABLED(USE_KMIN_PLUG)
+  #if HAS_K_MIN
     #define ENDSTOPPULLDOWN_KMIN
   #endif
-  #if ENABLED(USE_UMIN_PLUG)
+  #if HAS_U_MIN
     #define ENDSTOPPULLDOWN_UMIN
   #endif
-  #if ENABLED(USE_VMIN_PLUG)
+  #if HAS_V_MIN
     #define ENDSTOPPULLDOWN_VMIN
   #endif
-  #if ENABLED(USE_WMIN_PLUG)
+  #if HAS_W_MIN
     #define ENDSTOPPULLDOWN_WMIN
   #endif
 #endif
 
 /**
  * Shorthand for pin tests, used wherever needed
  */
 
 // Steppers
 #if PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X))
@@ -2053,168 +2053,166 @@
     #undef ESP_WIFI_MODULE_GPIO0_PIN
     #undef ESP_WIFI_MODULE_GPIO2_PIN
     #undef ESP_WIFI_MODULE_GPIO4_PIN
   #endif
 #endif
 
 //
 // Endstops and bed probe
 //
 
-// Is an endstop plug used for extra Z endstops or the probe?
-#define IS_PROBE_PIN(A,M) (USES_Z_MIN_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
-#define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
-#define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
-#define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
-#define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
-#define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
+#define _HAS_STOP(A,N,M,C) ((A##_HOME_TO_##M || (C+0)) && PIN_EXISTS(A##N##_##M))
 
-#define _HAS_STOP(A,M) (HAS_##A##_AXIS && PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
-#if _HAS_STOP(X,MIN)
+#if _HAS_STOP(X,,MIN,)
   #define HAS_X_MIN 1
 #endif
-#if _HAS_STOP(X,MAX)
+#if _HAS_STOP(X,,MAX,ENABLED(DUAL_X_CARRIAGE))
   #define HAS_X_MAX 1
 #endif
-#if _HAS_STOP(Y,MIN)
-  #define HAS_Y_MIN 1
-#endif
-#if _HAS_STOP(Y,MAX)
-  #define HAS_Y_MAX 1
-#endif
-#if _HAS_STOP(Z,MIN)
-  #define HAS_Z_MIN 1
-#endif
-#if _HAS_STOP(Z,MAX)
-  #define HAS_Z_MAX 1
-#endif
-#if _HAS_STOP(I,MIN)
-  #define HAS_I_MIN 1
-#endif
-#if _HAS_STOP(I,MAX)
-  #define HAS_I_MAX 1
-#endif
-#if _HAS_STOP(J,MIN)
-  #define HAS_J_MIN 1
-#endif
-#if _HAS_STOP(J,MAX)
-  #define HAS_J_MAX 1
-#endif
-#if _HAS_STOP(K,MIN)
-  #define HAS_K_MIN 1
-#endif
-#if _HAS_STOP(K,MAX)
-  #define HAS_K_MAX 1
-#endif
-#if _HAS_STOP(U,MIN)
-  #define HAS_U_MIN 1
-#endif
-#if _HAS_STOP(U,MAX)
-  #define HAS_U_MAX 1
-#endif
-#if _HAS_STOP(V,MIN)
-  #define HAS_V_MIN 1
-#endif
-#if _HAS_STOP(V,MAX)
-  #define HAS_V_MAX 1
-#endif
-#if _HAS_STOP(W,MIN)
-  #define HAS_W_MIN 1
-#endif
-#if _HAS_STOP(W,MAX)
-  #define HAS_W_MAX 1
-#endif
-#if PIN_EXISTS(X2_MIN)
-  #define HAS_X2_MIN 1
-#endif
-#if PIN_EXISTS(X2_MAX)
-  #define HAS_X2_MAX 1
-#endif
-#if PIN_EXISTS(Y2_MIN)
-  #define HAS_Y2_MIN 1
-#endif
-#if PIN_EXISTS(Y2_MAX)
-  #define HAS_Y2_MAX 1
-#endif
-#if PIN_EXISTS(Z2_MIN)
-  #define HAS_Z2_MIN 1
-#endif
-#if PIN_EXISTS(Z2_MAX)
-  #define HAS_Z2_MAX 1
-#endif
-#if PIN_EXISTS(Z3_MIN)
-  #define HAS_Z3_MIN 1
-#endif
-#if PIN_EXISTS(Z3_MAX)
-  #define HAS_Z3_MAX 1
-#endif
-#if PIN_EXISTS(Z4_MIN)
-  #define HAS_Z4_MIN 1
-#endif
-#if PIN_EXISTS(Z4_MAX)
-  #define HAS_Z4_MAX 1
-#endif
-
 #if HAS_X_MIN || HAS_X_MAX
   #define HAS_X_ENDSTOP 1
 #endif
-#if HAS_X2_MIN || HAS_X2_MAX
-  #define HAS_X2_ENDSTOP 1
+
+#if _HAS_STOP(Y,,MIN,)
+  #define HAS_Y_MIN 1
+#elif _HAS_STOP(Y,,MAX,)
+  #define HAS_Y_MAX 1
 #endif
 #if HAS_Y_MIN || HAS_Y_MAX
   #define HAS_Y_ENDSTOP 1
 #endif
-#if HAS_Y2_MIN || HAS_Y2_MAX
-  #define HAS_Y2_ENDSTOP 1
+
+#if _HAS_STOP(Z,,MIN,EITHER(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN, HAS_DELTA_SENSORLESS_PROBING))
+  #define HAS_Z_MIN 1
+  #if !HAS_DELTA_SENSORLESS_PROBING
+    #define HAS_Z_MIN_PIN 1
+  #endif
+#endif
+#if _HAS_STOP(Z,,MAX,)
+  #define HAS_Z_MAX 1
 #endif
 #if HAS_Z_MIN || HAS_Z_MAX
   #define HAS_Z_ENDSTOP 1
 #endif
-#if HAS_Z2_MIN || HAS_Z2_MAX
-  #define HAS_Z2_ENDSTOP 1
-#endif
-#if HAS_Z3_MIN || HAS_Z3_MAX
-  #define HAS_Z3_ENDSTOP 1
-#endif
-#if HAS_Z4_MIN || HAS_Z4_MAX
-  #define HAS_Z4_ENDSTOP 1
+
+#if _HAS_STOP(I,,MIN,)
+  #define HAS_I_MIN 1
+#elif _HAS_STOP(I,,MAX,)
+  #define HAS_I_MAX 1
 #endif
 #if HAS_I_MIN || HAS_I_MAX
   #define HAS_I_ENDSTOP 1
 #endif
+
+#if _HAS_STOP(J,,MIN,)
+  #define HAS_J_MIN 1
+#elif _HAS_STOP(J,,MAX,)
+  #define HAS_J_MAX 1
+#endif
 #if HAS_J_MIN || HAS_J_MAX
   #define HAS_J_ENDSTOP 1
 #endif
+
+#if _HAS_STOP(K,,MIN,)
+  #define HAS_K_MIN 1
+#elif _HAS_STOP(K,,MAX,)
+  #define HAS_K_MAX 1
+#endif
 #if HAS_K_MIN || HAS_K_MAX
   #define HAS_K_ENDSTOP 1
 #endif
+
+#if _HAS_STOP(U,,MIN,)
+  #define HAS_U_MIN 1
+#elif _HAS_STOP(U,,MAX,)
+  #define HAS_U_MAX 1
+#endif
 #if HAS_U_MIN || HAS_U_MAX
   #define HAS_U_ENDSTOP 1
 #endif
+
+#if _HAS_STOP(V,,MIN,)
+  #define HAS_V_MIN 1
+#elif _HAS_STOP(V,,MAX,)
+  #define HAS_V_MAX 1
+#endif
 #if HAS_V_MIN || HAS_V_MAX
   #define HAS_V_ENDSTOP 1
 #endif
+
+#if _HAS_STOP(W,,MIN,)
+  #define HAS_W_MIN 1
+#elif _HAS_STOP(W,,MAX,)
+  #define HAS_W_MAX 1
+#endif
 #if HAS_W_MIN || HAS_W_MAX
   #define HAS_W_ENDSTOP 1
 #endif
 
+#if EITHER(DUAL_X_CARRIAGE, X_DUAL_ENDSTOPS)
+  #if _HAS_STOP(X,2,MIN,)
+    #define HAS_X2_MIN 1
+  #elif _HAS_STOP(X,2,MAX,)
+    #define HAS_X2_MAX 1
+  #endif
+  #if HAS_X2_MIN || HAS_X2_MAX
+    #define HAS_X2_ENDSTOP 1
+  #endif
+#endif
+
+#if ENABLED(Y_DUAL_ENDSTOPS)
+  #if _HAS_STOP(Y,2,MIN,)
+    #define HAS_Y2_MIN 1
+  #elif _HAS_STOP(Y,2,MAX,)
+    #define HAS_Y2_MAX 1
+  #endif
+  #if HAS_Y2_MIN || HAS_Y2_MAX
+    #define HAS_Y2_ENDSTOP 1
+  #endif
+#endif
+
+#if ENABLED(Z_MULTI_ENDSTOPS)
+  #if _HAS_STOP(Z,2,MIN,)
+    #define HAS_Z2_MIN 1
+  #elif _HAS_STOP(Z,2,MAX,)
+    #define HAS_Z2_MAX 1
+  #endif
+  #if HAS_Z2_MIN || HAS_Z2_MAX
+    #define HAS_Z2_ENDSTOP 1
+  #endif
+  #if NUM_Z_STEPPERS >= 3
+    #if _HAS_STOP(Z,3,MIN,)
+      #define HAS_Z3_MIN 1
+    #elif _HAS_STOP(Z,3,MAX,)
+      #define HAS_Z3_MAX 1
+    #endif
+    #if HAS_Z3_MIN || HAS_Z3_MAX
+      #define HAS_Z3_ENDSTOP 1
+    #endif
+  #endif
+  #if NUM_Z_STEPPERS >= 4
+    #if _HAS_STOP(Z,4,MIN,)
+      #define HAS_Z4_MIN 1
+    #elif _HAS_STOP(Z,4,MAX,)
+      #define HAS_Z4_MAX 1
+    #endif
+    #if HAS_Z4_MIN || HAS_Z4_MAX
+      #define HAS_Z4_ENDSTOP 1
+    #endif
+  #endif
+#endif
+
 #if HAS_BED_PROBE && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
 #undef _HAS_STOP
-#undef IS_PROBE_PIN
-#undef IS_X2_ENDSTOP
-#undef IS_Y2_ENDSTOP
-#undef IS_Z2_ENDSTOP
-#undef IS_Z3_ENDSTOP
-#undef IS_Z4_ENDSTOP
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (TEMP_SENSOR(P) && PIN_EXISTS(TEMP_##P) && !TEMP_SENSOR_IS_MAX_TC(P) && !TEMP_SENSOR_##P##_IS_DUMMY)
 #if HOTENDS > 0 && HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
 #endif
 #if HOTENDS > 1 && HAS_ADC_TEST(1)
   #define HAS_TEMP_ADC_1 1

commit 08edb6282f7c85f785bd838be9ef59ef247e61a2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 26 02:57:53 2023 -0500

    üîß Extra axis endstop defaults

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ac701c4570..f3d80a6c9f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1078,29 +1078,65 @@
 #if ENABLED(ENDSTOPPULLDOWNS)
   #if ENABLED(USE_XMAX_PLUG)
     #define ENDSTOPPULLDOWN_XMAX
   #endif
   #if ENABLED(USE_YMAX_PLUG)
     #define ENDSTOPPULLDOWN_YMAX
   #endif
   #if ENABLED(USE_ZMAX_PLUG)
     #define ENDSTOPPULLDOWN_ZMAX
   #endif
+  #if ENABLED(USE_IMAX_PLUG)
+    #define ENDSTOPPULLDOWN_IMAX
+  #endif
+  #if ENABLED(USE_JMAX_PLUG)
+    #define ENDSTOPPULLDOWN_JMAX
+  #endif
+  #if ENABLED(USE_KMAX_PLUG)
+    #define ENDSTOPPULLDOWN_KMAX
+  #endif
+  #if ENABLED(USE_UMAX_PLUG)
+    #define ENDSTOPPULLDOWN_UMAX
+  #endif
+  #if ENABLED(USE_VMAX_PLUG)
+    #define ENDSTOPPULLDOWN_VMAX
+  #endif
+  #if ENABLED(USE_WMAX_PLUG)
+    #define ENDSTOPPULLDOWN_WMAX
+  #endif
   #if ENABLED(USE_XMIN_PLUG)
     #define ENDSTOPPULLDOWN_XMIN
   #endif
   #if ENABLED(USE_YMIN_PLUG)
     #define ENDSTOPPULLDOWN_YMIN
   #endif
   #if ENABLED(USE_ZMIN_PLUG)
     #define ENDSTOPPULLDOWN_ZMIN
   #endif
+  #if ENABLED(USE_IMIN_PLUG)
+    #define ENDSTOPPULLDOWN_IMIN
+  #endif
+  #if ENABLED(USE_JMIN_PLUG)
+    #define ENDSTOPPULLDOWN_JMIN
+  #endif
+  #if ENABLED(USE_KMIN_PLUG)
+    #define ENDSTOPPULLDOWN_KMIN
+  #endif
+  #if ENABLED(USE_UMIN_PLUG)
+    #define ENDSTOPPULLDOWN_UMIN
+  #endif
+  #if ENABLED(USE_VMIN_PLUG)
+    #define ENDSTOPPULLDOWN_VMIN
+  #endif
+  #if ENABLED(USE_WMIN_PLUG)
+    #define ENDSTOPPULLDOWN_WMIN
+  #endif
 #endif
 
 /**
  * Shorthand for pin tests, used wherever needed
  */
 
 // Steppers
 #if PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X))
   #define HAS_X_ENABLE 1
 #endif

commit f5a905a64121e4ff43894d295ce6990e55aa1149
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Apr 25 04:51:44 2023 +0200

    ‚ú® TEMP_SENSOR_SOC (#25642)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 30c2613b03..ac701c4570 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2209,20 +2209,23 @@
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 #if HAS_ADC_TEST(COOLER)
   #define HAS_TEMP_ADC_COOLER 1
 #endif
 #if HAS_ADC_TEST(BOARD)
   #define HAS_TEMP_ADC_BOARD 1
 #endif
+#if HAS_ADC_TEST(SOC)
+  #define HAS_TEMP_ADC_SOC 1
+#endif
 #if HAS_ADC_TEST(REDUNDANT)
   #define HAS_TEMP_ADC_REDUNDANT 1
 #endif
 
 #define HAS_TEMP(N) (TEMP_SENSOR_IS_MAX_TC(N) || EITHER(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_DUMMY))
 #if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
 #if HAS_TEMP(BED)
   #define HAS_TEMP_BED 1
@@ -2232,20 +2235,23 @@
 #endif
 #if HAS_TEMP(PROBE)
   #define HAS_TEMP_PROBE 1
 #endif
 #if HAS_TEMP(COOLER)
   #define HAS_TEMP_COOLER 1
 #endif
 #if HAS_TEMP(BOARD)
   #define HAS_TEMP_BOARD 1
 #endif
+#if HAS_TEMP(SOC)
+  #define HAS_TEMP_SOC 1
+#endif
 #if HAS_TEMP(REDUNDANT)
   #define HAS_TEMP_REDUNDANT 1
 #endif
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
   #endif
   #if PIN_EXISTS(JOY_Y)
     #define HAS_JOY_ADC_Y 1
@@ -2305,21 +2311,21 @@
     #define COOLER_OVERSHOOT 2
   #endif
   #define COOLER_MIN_TARGET (COOLER_MINTEMP + (COOLER_OVERSHOOT))
   #define COOLER_MAX_TARGET (COOLER_MAXTEMP - (COOLER_OVERSHOOT))
 #endif
 
 #if HAS_HEATED_BED || HAS_TEMP_CHAMBER
   #define BED_OR_CHAMBER 1
 #endif
 
-#if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER || HAS_TEMP_BOARD
+#if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER || HAS_TEMP_BOARD || HAS_TEMP_SOC
   #define HAS_TEMP_SENSOR 1
 #endif
 
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
   #define HAS_HEATED_CHAMBER 1
   #ifndef CHAMBER_OVERSHOOT
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
 #else
@@ -2541,23 +2547,20 @@
 
 #if PIN_EXISTS(FANMUX0)
   #define HAS_FANMUX 1  // Part Cooling fan multipliexer
 #endif
 
 /**
  * Controller Fan Settings
  */
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define HAS_CONTROLLER_FAN 1
-  #if CONTROLLER_FAN_MIN_BOARD_TEMP
-    #define HAS_CONTROLLER_FAN_MIN_BOARD_TEMP 1
-  #endif
 #endif
 
 #if HAS_CONTROLLER_FAN
   #if ENABLED(CONTROLLER_FAN_USE_BOARD_TEMP)
     #define HAS_CONTROLLER_FAN_BOARD_TEMP_TRIGGER 1
     #ifndef CONTROLLER_FAN_TRIGGER_TEMP
       #define CONTROLLER_FAN_TRIGGER_TEMP 30
     #endif
   #else
     #undef CONTROLLER_FAN_TRIGGER_TEMP

commit 69f8da468247986225b33e9a373856650746b5d7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 23 01:58:01 2023 -0500

    üîß Split Changes.h from SanityCheck.h (#25732)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index de983dd608..30c2613b03 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -676,227 +676,47 @@
       #endif
     #endif
   #endif
 #endif
 
 /**
  * Compatibility layer for MAX (SPI) temp boards
  */
 #if HAS_MAX_TC
 
-  // Translate old _SS, _CS, _SCK, _DO, _DI, _MISO, and _MOSI PIN defines.
-  #if TEMP_SENSOR_IS_MAX_TC(0) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E1))
-
-    #if !PIN_EXISTS(TEMP_0_CS) // SS, CS
-      #if PIN_EXISTS(MAX6675_SS)
-        #define TEMP_0_CS_PIN MAX6675_SS_PIN
-      #elif PIN_EXISTS(MAX6675_CS)
-        #define TEMP_0_CS_PIN MAX6675_CS_PIN
-      #elif PIN_EXISTS(MAX31855_SS)
-        #define TEMP_0_CS_PIN MAX31855_SS_PIN
-      #elif PIN_EXISTS(MAX31855_CS)
-        #define TEMP_0_CS_PIN MAX31855_CS_PIN
-      #elif PIN_EXISTS(MAX31865_SS)
-        #define TEMP_0_CS_PIN MAX31865_SS_PIN
-      #elif PIN_EXISTS(MAX31865_CS)
-        #define TEMP_0_CS_PIN MAX31865_CS_PIN
-      #endif
-    #endif
-
-    #if TEMP_SENSOR_0_IS_MAX6675
-      #if !PIN_EXISTS(TEMP_0_MISO) // DO
-        #if PIN_EXISTS(MAX6675_MISO)
-          #define TEMP_0_MISO_PIN MAX6675_MISO_PIN
-        #elif PIN_EXISTS(MAX6675_DO)
-          #define TEMP_0_MISO_PIN MAX6675_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_0_SCK) && PIN_EXISTS(MAX6675_SCK)
-        #define TEMP_0_SCK_PIN MAX6675_SCK_PIN
-      #endif
-
-    #elif TEMP_SENSOR_0_IS_MAX31855
-      #if !PIN_EXISTS(TEMP_0_MISO) // DO
-        #if PIN_EXISTS(MAX31855_MISO)
-          #define TEMP_0_MISO_PIN MAX31855_MISO_PIN
-        #elif PIN_EXISTS(MAX31855_DO)
-          #define TEMP_0_MISO_PIN MAX31855_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_0_SCK) && PIN_EXISTS(MAX31855_SCK)
-        #define TEMP_0_SCK_PIN MAX31855_SCK_PIN
-      #endif
-
-    #elif TEMP_SENSOR_0_IS_MAX31865
-      #if !PIN_EXISTS(TEMP_0_MISO) // DO
-        #if PIN_EXISTS(MAX31865_MISO)
-          #define TEMP_0_MISO_PIN MAX31865_MISO_PIN
-        #elif PIN_EXISTS(MAX31865_DO)
-          #define TEMP_0_MISO_PIN MAX31865_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_0_SCK) && PIN_EXISTS(MAX31865_SCK)
-        #define TEMP_0_SCK_PIN MAX31865_SCK_PIN
-      #endif
-      #if !PIN_EXISTS(TEMP_0_MOSI) && PIN_EXISTS(MAX31865_MOSI) // MOSI for '65 only
-        #define TEMP_0_MOSI_PIN MAX31865_MOSI_PIN
-      #endif
-    #endif
-
-    // Software SPI - enable if MISO/SCK are defined.
-    #if PIN_EXISTS(TEMP_0_MISO) && PIN_EXISTS(TEMP_0_SCK) && DISABLED(TEMP_SENSOR_0_FORCE_HW_SPI)
-      #if TEMP_SENSOR_0_IS_MAX31865 && !PIN_EXISTS(TEMP_0_MOSI)
-        #error "TEMP_SENSOR_0 MAX31865 requires TEMP_0_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_0_FORCE_HW_SPI."
-      #else
-        #define TEMP_SENSOR_0_HAS_SPI_PINS 1
-      #endif
-    #endif
-
-  #endif // TEMP_SENSOR_IS_MAX_TC(0)
-
-  #if TEMP_SENSOR_IS_MAX_TC(1) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E1))
-
-    #if !PIN_EXISTS(TEMP_1_CS) // SS2, CS2
-      #if PIN_EXISTS(MAX6675_SS2)
-        #define TEMP_1_CS_PIN MAX6675_SS2_PIN
-      #elif PIN_EXISTS(MAX6675_CS)
-        #define TEMP_1_CS_PIN MAX6675_CS2_PIN
-      #elif PIN_EXISTS(MAX31855_SS2)
-        #define TEMP_1_CS_PIN MAX31855_SS2_PIN
-      #elif PIN_EXISTS(MAX31855_CS2)
-        #define TEMP_1_CS_PIN MAX31855_CS2_PIN
-      #elif PIN_EXISTS(MAX31865_SS2)
-        #define TEMP_1_CS_PIN MAX31865_SS2_PIN
-      #elif PIN_EXISTS(MAX31865_CS2)
-        #define TEMP_1_CS_PIN MAX31865_CS2_PIN
-      #endif
-    #endif
-
-    #if TEMP_SENSOR_1_IS_MAX6675
-      #if !PIN_EXISTS(TEMP_1_MISO) // DO
-        #if PIN_EXISTS(MAX6675_MISO)
-          #define TEMP_1_MISO_PIN MAX6675_MISO_PIN
-        #elif PIN_EXISTS(MAX6675_DO)
-          #define TEMP_1_MISO_PIN MAX6675_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_1_SCK) && PIN_EXISTS(MAX6675_SCK)
-        #define TEMP_1_SCK_PIN MAX6675_SCK_PIN
-      #endif
-
-    #elif TEMP_SENSOR_1_IS_MAX31855
-      #if !PIN_EXISTS(TEMP_1_MISO) // DO
-        #if PIN_EXISTS(MAX31855_MISO)
-          #define TEMP_1_MISO_PIN MAX31855_MISO_PIN
-        #elif PIN_EXISTS(MAX31855_DO)
-          #define TEMP_1_MISO_PIN MAX31855_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_1_SCK) && PIN_EXISTS(MAX31855_SCK)
-        #define TEMP_1_SCK_PIN MAX31855_SCK_PIN
-      #endif
-
-    #elif TEMP_SENSOR_1_IS_MAX31865
-      #if !PIN_EXISTS(TEMP_1_MISO) // DO
-        #if PIN_EXISTS(MAX31865_MISO)
-          #define TEMP_1_MISO_PIN MAX31865_MISO_PIN
-        #elif PIN_EXISTS(MAX31865_DO)
-          #define TEMP_1_MISO_PIN MAX31865_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_1_SCK) && PIN_EXISTS(MAX31865_SCK)
-        #define TEMP_1_SCK_PIN MAX31865_SCK_PIN
-      #endif
-      #if !PIN_EXISTS(TEMP_1_MOSI) && PIN_EXISTS(MAX31865_MOSI) // MOSI for '65 only
-        #define TEMP_1_MOSI_PIN MAX31865_MOSI_PIN
-      #endif
-    #endif
-
-    // Software SPI - enable if MISO/SCK are defined.
-    #if PIN_EXISTS(TEMP_1_MISO) && PIN_EXISTS(TEMP_1_SCK) && DISABLED(TEMP_SENSOR_1_FORCE_HW_SPI)
-      #if TEMP_SENSOR_1_IS_MAX31865 && !PIN_EXISTS(TEMP_1_MOSI)
-        #error "TEMP_SENSOR_1 MAX31865 requires TEMP_1_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_1_FORCE_HW_SPI."
-      #else
-        #define TEMP_SENSOR_1_HAS_SPI_PINS 1
-      #endif
-    #endif
-
-  #endif // TEMP_SENSOR_IS_MAX_TC(1)
-
-  #if TEMP_SENSOR_IS_MAX_TC(2) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E2))
-
-    #if !PIN_EXISTS(TEMP_2_CS) // SS3, CS3
-      #if PIN_EXISTS(MAX6675_SS3)
-        #define TEMP_2_CS_PIN MAX6675_SS3_PIN
-      #elif PIN_EXISTS(MAX6675_CS)
-        #define TEMP_2_CS_PIN MAX6675_CS3_PIN
-      #elif PIN_EXISTS(MAX31855_SS3)
-        #define TEMP_2_CS_PIN MAX31855_SS3_PIN
-      #elif PIN_EXISTS(MAX31855_CS3)
-        #define TEMP_2_CS_PIN MAX31855_CS3_PIN
-      #elif PIN_EXISTS(MAX31865_SS3)
-        #define TEMP_2_CS_PIN MAX31865_SS3_PIN
-      #elif PIN_EXISTS(MAX31865_CS3)
-        #define TEMP_2_CS_PIN MAX31865_CS3_PIN
-      #endif
+  // Software SPI - enable if MISO/SCK are defined.
+  #if (TEMP_SENSOR_IS_MAX_TC(0) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E1))) \
+    && PIN_EXISTS(TEMP_0_MISO) && PIN_EXISTS(TEMP_0_SCK) && DISABLED(TEMP_SENSOR_0_FORCE_HW_SPI)
+    #if TEMP_SENSOR_0_IS_MAX31865 && !PIN_EXISTS(TEMP_0_MOSI)
+      #error "TEMP_SENSOR_0 MAX31865 requires TEMP_0_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_0_FORCE_HW_SPI."
+    #else
+      #define TEMP_SENSOR_0_HAS_SPI_PINS 1
     #endif
+  #endif
 
-    #if TEMP_SENSOR_2_IS_MAX6675
-      #if !PIN_EXISTS(TEMP_2_MISO) // DO
-        #if PIN_EXISTS(MAX6675_MISO)
-          #define TEMP_2_MISO_PIN MAX6675_MISO_PIN
-        #elif PIN_EXISTS(MAX6675_DO)
-          #define TEMP_2_MISO_PIN MAX6675_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_2_SCK) && PIN_EXISTS(MAX6675_SCK)
-        #define TEMP_2_SCK_PIN MAX6675_SCK_PIN
-      #endif
-
-    #elif TEMP_SENSOR_2_IS_MAX31855
-      #if !PIN_EXISTS(TEMP_2_MISO) // DO
-        #if PIN_EXISTS(MAX31855_MISO)
-          #define TEMP_2_MISO_PIN MAX31855_MISO_PIN
-        #elif PIN_EXISTS(MAX31855_DO)
-          #define TEMP_2_MISO_PIN MAX31855_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_2_SCK) && PIN_EXISTS(MAX31855_SCK)
-        #define TEMP_2_SCK_PIN MAX31855_SCK_PIN
-      #endif
-
-    #elif TEMP_SENSOR_2_IS_MAX31865
-      #if !PIN_EXISTS(TEMP_2_MISO) // DO
-        #if PIN_EXISTS(MAX31865_MISO)
-          #define TEMP_2_MISO_PIN MAX31865_MISO_PIN
-        #elif PIN_EXISTS(MAX31865_DO)
-          #define TEMP_2_MISO_PIN MAX31865_DO_PIN
-        #endif
-      #endif
-      #if !PIN_EXISTS(TEMP_2_SCK) && PIN_EXISTS(MAX31865_SCK)
-        #define TEMP_2_SCK_PIN MAX31865_SCK_PIN
-      #endif
-      #if !PIN_EXISTS(TEMP_2_MOSI) && PIN_EXISTS(MAX31865_MOSI) // MOSI for '65 only
-        #define TEMP_2_MOSI_PIN MAX31865_MOSI_PIN
-      #endif
+  #if (TEMP_SENSOR_IS_MAX_TC(1) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E1))) \
+    && PIN_EXISTS(TEMP_1_MISO) && PIN_EXISTS(TEMP_1_SCK) && DISABLED(TEMP_SENSOR_1_FORCE_HW_SPI)
+    #if TEMP_SENSOR_1_IS_MAX31865 && !PIN_EXISTS(TEMP_1_MOSI)
+      #error "TEMP_SENSOR_1 MAX31865 requires TEMP_1_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_1_FORCE_HW_SPI."
+    #else
+      #define TEMP_SENSOR_1_HAS_SPI_PINS 1
     #endif
+  #endif
 
-    // Software SPI - enable if MISO/SCK are defined.
-    #if PIN_EXISTS(TEMP_2_MISO) && PIN_EXISTS(TEMP_2_SCK) && DISABLED(TEMP_SENSOR_2_FORCE_HW_SPI)
-      #if TEMP_SENSOR_2_IS_MAX31865 && !PIN_EXISTS(TEMP_2_MOSI)
-        #error "TEMP_SENSOR_2 MAX31865 requires TEMP_2_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_2_FORCE_HW_SPI."
-      #else
-        #define TEMP_SENSOR_2_HAS_SPI_PINS 1
-      #endif
+  #if (TEMP_SENSOR_IS_MAX_TC(2) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E2))) \
+    && PIN_EXISTS(TEMP_2_MISO) && PIN_EXISTS(TEMP_2_SCK) && DISABLED(TEMP_SENSOR_2_FORCE_HW_SPI)
+    #if TEMP_SENSOR_2_IS_MAX31865 && !PIN_EXISTS(TEMP_2_MOSI)
+      #error "TEMP_SENSOR_2 MAX31865 requires TEMP_2_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_2_FORCE_HW_SPI."
+    #else
+      #define TEMP_SENSOR_2_HAS_SPI_PINS 1
     #endif
-
-  #endif // TEMP_SENSOR_IS_MAX_TC(2)
+  #endif
 
   //
   // User-defined thermocouple libraries
   //
   // Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
   // to select a USER library for MAX6675, MAX31855, MAX31865
   //
   #if BOTH(HAS_MAX6675, LIB_MAX6675)
     #define USE_LIB_MAX6675 1
   #endif

commit 921591d2b899000e3181a098a069392ac0ac4b42
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 23:15:31 2023 -0500

    üßë‚Äçüíª SDIO_SUPPORT => ONBOARD_SDIO

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bf4810cd8a..de983dd608 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -538,21 +538,21 @@
     #ifndef SD_DETECT_STATE
       #if ALL(SD_CONNECTION_TYPICAL, HAS_MARLINUI_MENU, ELB_FULL_GRAPHIC_CONTROLLER)
         #define SD_DETECT_STATE HIGH
       #else
         #define SD_DETECT_STATE LOW
       #endif
     #endif
   #endif
 
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || BOTH(MULTI_VOLUME, VOLUME_SD_ONBOARD)
-    #if ENABLED(SDIO_SUPPORT)
+    #if ENABLED(ONBOARD_SDIO)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
   #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
     #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
   #endif
 

commit 5664c02d077e028f84a24efd96c2eebe97ce8763
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 22:43:09 2023 -0500

    üßë‚Äçüíª Generalize SDSUPPORT as HAS_MEDIA
    
    In preparation for single- and multi-volume refactoring.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 59b5dab462..bf4810cd8a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -503,21 +503,21 @@
   #endif
   #ifndef LCD_CONTRAST_DEFAULT
     #define LCD_CONTRAST_DEFAULT LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
-#if ENABLED(SDSUPPORT)
+#if HAS_MEDIA
 
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define HAS_SHARED_MEDIA 1
   #endif
@@ -3344,21 +3344,21 @@
   #endif
   #ifndef SDSORT_DYNAMIC_RAM
     #define SDSORT_DYNAMIC_RAM false
   #endif
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif
 #endif
 
 // Fallback SPI Speed for SD
-#if ENABLED(SDSUPPORT) && !defined(SD_SPI_SPEED)
+#if HAS_MEDIA && !defined(SD_SPI_SPEED)
   #define SD_SPI_SPEED SPI_FULL_SPEED
 #endif
 
 #if HAS_WIRED_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_MARLINUI_U8GLIB
       #define LCD_WIDTH 21
     #elif IS_DWIN_MARLINUI
       // Defined by header

commit ce85b98db471685404d6e4975dcff645b09d771b
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sat Apr 22 20:27:01 2023 -0700

    ü©π Relocate Fan conditionals, sanity-checks (#25731)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index eaf2d03cea..59b5dab462 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2712,51 +2712,22 @@
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else
   #define FAN_COUNT 0
 #endif
 
 #if FAN_COUNT > 0
   #define HAS_FAN 1
 #endif
 
-/**
- * Part Cooling fan multipliexer
- */
 #if PIN_EXISTS(FANMUX0)
-  #define HAS_FANMUX 1
-#endif
-
-/**
- * MIN/MAX fan PWM scaling
- */
-#ifndef FAN_OFF_PWM
-  #define FAN_OFF_PWM 0
-#endif
-#ifndef FAN_MIN_PWM
-  #if FAN_OFF_PWM > 0
-    #define FAN_MIN_PWM (FAN_OFF_PWM + 1)
-  #else
-    #define FAN_MIN_PWM 0
-  #endif
-#endif
-#ifndef FAN_MAX_PWM
-  #define FAN_MAX_PWM 255
-#endif
-#if FAN_MIN_PWM < 0 || FAN_MIN_PWM > 255
-  #error "FAN_MIN_PWM must be a value from 0 to 255."
-#elif FAN_MAX_PWM < 0 || FAN_MAX_PWM > 255
-  #error "FAN_MAX_PWM must be a value from 0 to 255."
-#elif FAN_MIN_PWM > FAN_MAX_PWM
-  #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
-#elif FAN_OFF_PWM > FAN_MIN_PWM
-  #error "FAN_OFF_PWM must be less than or equal to FAN_MIN_PWM."
+  #define HAS_FANMUX 1  // Part Cooling fan multipliexer
 #endif
 
 /**
  * Controller Fan Settings
  */
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define HAS_CONTROLLER_FAN 1
   #if CONTROLLER_FAN_MIN_BOARD_TEMP
     #define HAS_CONTROLLER_FAN_MIN_BOARD_TEMP 1
   #endif
@@ -2766,20 +2737,49 @@
   #if ENABLED(CONTROLLER_FAN_USE_BOARD_TEMP)
     #define HAS_CONTROLLER_FAN_BOARD_TEMP_TRIGGER 1
     #ifndef CONTROLLER_FAN_TRIGGER_TEMP
       #define CONTROLLER_FAN_TRIGGER_TEMP 30
     #endif
   #else
     #undef CONTROLLER_FAN_TRIGGER_TEMP
   #endif
 #endif
 
+/**
+ * MIN/MAX fan PWM scaling
+ */
+#if EITHER(HAS_FAN, USE_CONTROLLER_FAN)
+  #ifndef FAN_OFF_PWM
+    #define FAN_OFF_PWM 0
+  #endif
+  #ifndef FAN_MIN_PWM
+    #if FAN_OFF_PWM > 0
+      #define FAN_MIN_PWM (FAN_OFF_PWM + 1)
+    #else
+      #define FAN_MIN_PWM 0
+    #endif
+  #endif
+  #ifndef FAN_MAX_PWM
+    #define FAN_MAX_PWM 255
+  #endif
+  #if FAN_MIN_PWM == 0 && FAN_MAX_PWM == 255
+    #define CALC_FAN_SPEED(f) (f ?: FAN_OFF_PWM)
+  #else
+    #define CALC_FAN_SPEED(f) (f ? map(f, 1, 255, FAN_MIN_PWM, FAN_MAX_PWM) : FAN_OFF_PWM)
+  #endif
+#endif
+
+// Fan Kickstart
+#if FAN_KICKSTART_TIME && !defined(FAN_KICKSTART_POWER)
+  #define FAN_KICKSTART_POWER 180
+#endif
+
 // Servos
 #if PIN_EXISTS(SERVO0) && NUM_SERVOS > 0
   #define HAS_SERVO_0 1
 #endif
 #if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
   #define HAS_SERVO_1 1
 #endif
 #if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
   #define HAS_SERVO_2 1
 #endif

commit 4233e4864f0c621612ce35a9b6ca882312e3aa4d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 01:56:10 2023 -0500

    üö∏ MarlinUI Endstop Test Screen, and more (#25667)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 96b7313f29..eaf2d03cea 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -248,26 +248,28 @@
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
   #endif
 #endif
 
 // Calibration codes only for non-core axes
 #if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
   #if ANY(IS_CORE, MARKFORGED_XY, MARKFORGED_YX)
-    #define CAN_CALIBRATE(A,B) (_AXIS(A) == B)
+    #define CAN_CALIBRATE(A,B) TERN0(HAS_##A##_AXIS, (_AXIS(A) == B))
   #else
-    #define CAN_CALIBRATE(A,B) true
+    #define CAN_CALIBRATE(A,B) ENABLED(HAS_##A##_AXIS)
   #endif
+  #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
+#else
+  #define AXIS_CAN_CALIBRATE(A) false
 #endif
-#define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
   #undef LCD_BED_TRAMMING
   #undef SLOWDOWN
 #endif
 
 /**
@@ -2289,20 +2291,63 @@
 #if PIN_EXISTS(Z3_MAX)
   #define HAS_Z3_MAX 1
 #endif
 #if PIN_EXISTS(Z4_MIN)
   #define HAS_Z4_MIN 1
 #endif
 #if PIN_EXISTS(Z4_MAX)
   #define HAS_Z4_MAX 1
 #endif
 
+#if HAS_X_MIN || HAS_X_MAX
+  #define HAS_X_ENDSTOP 1
+#endif
+#if HAS_X2_MIN || HAS_X2_MAX
+  #define HAS_X2_ENDSTOP 1
+#endif
+#if HAS_Y_MIN || HAS_Y_MAX
+  #define HAS_Y_ENDSTOP 1
+#endif
+#if HAS_Y2_MIN || HAS_Y2_MAX
+  #define HAS_Y2_ENDSTOP 1
+#endif
+#if HAS_Z_MIN || HAS_Z_MAX
+  #define HAS_Z_ENDSTOP 1
+#endif
+#if HAS_Z2_MIN || HAS_Z2_MAX
+  #define HAS_Z2_ENDSTOP 1
+#endif
+#if HAS_Z3_MIN || HAS_Z3_MAX
+  #define HAS_Z3_ENDSTOP 1
+#endif
+#if HAS_Z4_MIN || HAS_Z4_MAX
+  #define HAS_Z4_ENDSTOP 1
+#endif
+#if HAS_I_MIN || HAS_I_MAX
+  #define HAS_I_ENDSTOP 1
+#endif
+#if HAS_J_MIN || HAS_J_MAX
+  #define HAS_J_ENDSTOP 1
+#endif
+#if HAS_K_MIN || HAS_K_MAX
+  #define HAS_K_ENDSTOP 1
+#endif
+#if HAS_U_MIN || HAS_U_MAX
+  #define HAS_U_ENDSTOP 1
+#endif
+#if HAS_V_MIN || HAS_V_MAX
+  #define HAS_V_ENDSTOP 1
+#endif
+#if HAS_W_MIN || HAS_W_MAX
+  #define HAS_W_ENDSTOP 1
+#endif
+
 #if HAS_BED_PROBE && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
 #undef _HAS_STOP
 #undef IS_PROBE_PIN
 #undef IS_X2_ENDSTOP
 #undef IS_Y2_ENDSTOP
 #undef IS_Z2_ENDSTOP
 #undef IS_Z3_ENDSTOP

commit fad1dcefbcd300128b474783f1183ea8a6d18496
Author: Jay Robson <45777442+jsrobson10@users.noreply.github.com>
Date:   Thu Apr 20 06:58:42 2023 +1000

    üêõ Fix G38 with Z, support 9 axes (#25691)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c09f668450..96b7313f29 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -334,35 +334,35 @@
   #ifdef MANUAL_K_HOME_POS
     #define K_HOME_POS MANUAL_K_HOME_POS
   #else
     #define K_HOME_POS TERN(K_HOME_TO_MIN, K_MIN_POS, K_MAX_POS)
   #endif
 #endif
 #if HAS_U_AXIS
   #ifdef MANUAL_U_HOME_POS
     #define U_HOME_POS MANUAL_U_HOME_POS
   #else
-    #define U_HOME_POS (U_HOME_DIR < 0 ? U_MIN_POS : U_MAX_POS)
+    #define U_HOME_POS TERN(U_HOME_TO_MIN, U_MIN_POS, U_MAX_POS)
   #endif
 #endif
 #if HAS_V_AXIS
   #ifdef MANUAL_V_HOME_POS
     #define V_HOME_POS MANUAL_V_HOME_POS
   #else
-    #define V_HOME_POS (V_HOME_DIR < 0 ? V_MIN_POS : V_MAX_POS)
+    #define V_HOME_POS TERN(V_HOME_TO_MIN, V_MIN_POS, V_MAX_POS)
   #endif
 #endif
 #if HAS_W_AXIS
   #ifdef MANUAL_W_HOME_POS
     #define W_HOME_POS MANUAL_W_HOME_POS
   #else
-    #define W_HOME_POS (W_HOME_DIR < 0 ? W_MIN_POS : W_MAX_POS)
+    #define W_HOME_POS TERN(W_HOME_TO_MIN, W_MIN_POS, W_MAX_POS)
   #endif
 #endif
 
 /**
  * If DELTA_HEIGHT isn't defined use the old setting
  */
 #if ENABLED(DELTA) && !defined(DELTA_HEIGHT)
   #define DELTA_HEIGHT Z_HOME_POS
 #endif
 

commit c8c5ab22ce242b93632a7e2b9f855bbaf38b557f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 17 19:29:53 2023 -0500

    üßë‚Äçüíª Gather Z clearances (#25701)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4bbb43a216..c09f668450 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3173,38 +3173,38 @@
 #if HAS_MARLINUI_U8GLIB
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SD_SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI
     #define DOGLCD_MOSI SD_MOSI_PIN
   #endif
 #endif
 
 /**
- * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
+ * Z_CLEARANCE_FOR_HOMING / Z_CLEARANCE_BETWEEN_PROBES
  */
-#ifndef Z_HOMING_HEIGHT
+#ifndef Z_CLEARANCE_FOR_HOMING
   #ifdef Z_CLEARANCE_BETWEEN_PROBES
-    #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+    #define Z_CLEARANCE_FOR_HOMING Z_CLEARANCE_BETWEEN_PROBES
   #else
-    #define Z_HOMING_HEIGHT 0
+    #define Z_CLEARANCE_FOR_HOMING 0
   #endif
 #endif
 
 #if PROBE_SELECTED
   #ifndef Z_CLEARANCE_BETWEEN_PROBES
-    #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
+    #define Z_CLEARANCE_BETWEEN_PROBES Z_CLEARANCE_FOR_HOMING
   #endif
-  #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
+  #if Z_CLEARANCE_BETWEEN_PROBES > Z_CLEARANCE_FOR_HOMING
     #define Z_CLEARANCE_BETWEEN_MANUAL_PROBES Z_CLEARANCE_BETWEEN_PROBES
   #else
-    #define Z_CLEARANCE_BETWEEN_MANUAL_PROBES Z_HOMING_HEIGHT
+    #define Z_CLEARANCE_BETWEEN_MANUAL_PROBES Z_CLEARANCE_FOR_HOMING
   #endif
   #ifndef Z_CLEARANCE_MULTI_PROBE
     #define Z_CLEARANCE_MULTI_PROBE Z_CLEARANCE_BETWEEN_PROBES
   #endif
   #if ENABLED(BLTOUCH) && !defined(BLTOUCH_DELAY)
     #define BLTOUCH_DELAY 500
   #endif
 #endif
 
 // Define a starting height for measuring manual probe points

commit 06d9a2ff8f4364c13dc12e36b91399de54136097
Author: Eduard Sukharev <sukharev.eh@gmail.com>
Date:   Sat Apr 1 05:45:53 2023 +0300

    üêõ Fix Long FIlename lookup (#25598)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d45abc558a..4bbb43a216 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3255,24 +3255,25 @@
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ANY(SCROLL_LONG_FILENAMES, HAS_DWIN_E3V2, TFT_COLOR_UI)
-  #define MAX_VFAT_ENTRIES 5
+  #define VFAT_ENTRIES_LIMIT 5
 #else
-  #define MAX_VFAT_ENTRIES 2
+  #define VFAT_ENTRIES_LIMIT 2
 #endif
+#define MAX_VFAT_ENTRIES 20 // by VFAT specs to fit LFN of length 255
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)

commit 06e5273d24776219253a9229621c034ab263cba7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 31 18:18:25 2023 -0500

    üßë‚Äçüíª CardReader adjustments (#25611)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ad8d9d36fd..d45abc558a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3255,45 +3255,48 @@
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ANY(SCROLL_LONG_FILENAMES, HAS_DWIN_E3V2, TFT_COLOR_UI)
-  #define MAX_VFAT_ENTRIES (5)
+  #define MAX_VFAT_ENTRIES 5
 #else
-  #define MAX_VFAT_ENTRIES (2)
+  #define MAX_VFAT_ENTRIES 2
 #endif
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && IS_RRD_FG_SC && (SD_SCK_PIN == LCD_PINS_D4)
   #define SDCARD_SORT_ALPHA         // Keep one directory level in RAM. Changing directory levels
                                     // may still glitch the screen, but LCD updates clean it up.
-  #undef SDSORT_LIMIT
-  #undef SDSORT_USES_RAM
-  #undef SDSORT_USES_STACK
-  #undef SDSORT_CACHE_NAMES
-  #define SDSORT_LIMIT       64
-  #define SDSORT_USES_RAM    true
-  #define SDSORT_USES_STACK  false
-  #define SDSORT_CACHE_NAMES true
+  #if SDSORT_LIMIT > 64 || !SDSORT_USES_RAM || SDSORT_USES_STACK || !SDSORT_CACHE_NAMES
+    #undef SDSORT_LIMIT
+    #undef SDSORT_USES_RAM
+    #undef SDSORT_USES_STACK
+    #undef SDSORT_CACHE_NAMES
+    #define SDSORT_LIMIT       64
+    #define SDSORT_USES_RAM    true
+    #define SDSORT_USES_STACK  false
+    #define SDSORT_CACHE_NAMES true
+    #define SDSORT_CACHE_LPC1768_WARNING 1
+  #endif
   #ifndef FOLDER_SORTING
     #define FOLDER_SORTING     -1
   #endif
   #ifndef SDSORT_GCODE
     #define SDSORT_GCODE       false
   #endif
   #ifndef SDSORT_DYNAMIC_RAM
     #define SDSORT_DYNAMIC_RAM false
   #endif
   #ifndef SDSORT_CACHE_VFATS

commit a8ac83bbca1b6aed52e6cfa9a7b219cadd8c20b7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 29 22:34:07 2023 -0500

    üêõ Fix _HAS_FAN for fan on Pin 0

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4e36b726c8..ad8d9d36fd 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2598,28 +2598,27 @@
   #undef AUTO_POWER_COOLER_FAN
 #endif
 
 // Print Cooling fans (limit)
 #ifdef NUM_M106_FANS
   #define MAX_FANS NUM_M106_FANS
 #else
   #define MAX_FANS 8  // Max supported fans
 #endif
 
-#define _NOT_E_AUTO(N,F) (E##N##_AUTO_FAN_PIN != FAN##F##_PIN)
-#define _HAS_FAN(F) (PIN_EXISTS(FAN##F) \
+#define _IS_E_AUTO(N,F) (PIN_EXISTS(E##N##_AUTO_FAN) && E##N##_AUTO_FAN_PIN == FAN##F##_PIN)
+#define _HAS_FAN(F) (F < MAX_FANS && PIN_EXISTS(FAN##F) \
                      && CONTROLLER_FAN_PIN != FAN##F##_PIN \
-                     && _NOT_E_AUTO(0,F) && _NOT_E_AUTO(1,F) \
-                     && _NOT_E_AUTO(2,F) && _NOT_E_AUTO(3,F) \
-                     && _NOT_E_AUTO(4,F) && _NOT_E_AUTO(5,F) \
-                     && _NOT_E_AUTO(6,F) && _NOT_E_AUTO(7,F) \
-                     && F < MAX_FANS)
+                     && !_IS_E_AUTO(0,F) && !_IS_E_AUTO(1,F) \
+                     && !_IS_E_AUTO(2,F) && !_IS_E_AUTO(3,F) \
+                     && !_IS_E_AUTO(4,F) && !_IS_E_AUTO(5,F) \
+                     && !_IS_E_AUTO(6,F) && !_IS_E_AUTO(7,F))
 #if _HAS_FAN(0)
   #define HAS_FAN0 1
 #endif
 #if _HAS_FAN(1)
   #define HAS_FAN1 1
 #endif
 #if _HAS_FAN(2)
   #define HAS_FAN2 1
 #endif
 #if _HAS_FAN(3)

commit 2c6aff5c79310c1b8222f0c2a26994ac728516f8
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Wed Mar 29 15:36:05 2023 +1300

    üîß Impose Hephestos 2 Bed Kit requirements (#25585)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bf9ede65dc..4e36b726c8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2792,128 +2792,85 @@
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
 #if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_I_MS_PINS, HAS_J_MS_PINS, HAS_K_MS_PINS, HAS_U_MS_PINS, HAS_V_MS_PINS, HAS_W_MS_PINS, HAS_SOME_E_MS_PINS)
   #define HAS_MICROSTEPS 1
 #endif
 
-/**
- * Heater signal inversion defaults
- */
-
-#if HAS_HEATER_0 && !defined(HEATER_0_INVERTING)
-  #define HEATER_0_INVERTING false
-#endif
-#if HAS_HEATER_1 && !defined(HEATER_1_INVERTING)
-  #define HEATER_1_INVERTING false
-#endif
-#if HAS_HEATER_2 && !defined(HEATER_2_INVERTING)
-  #define HEATER_2_INVERTING false
-#endif
-#if HAS_HEATER_3 && !defined(HEATER_3_INVERTING)
-  #define HEATER_3_INVERTING false
-#endif
-#if HAS_HEATER_4 && !defined(HEATER_4_INVERTING)
-  #define HEATER_4_INVERTING false
-#endif
-#if HAS_HEATER_5 && !defined(HEATER_5_INVERTING)
-  #define HEATER_5_INVERTING false
-#endif
-#if HAS_HEATER_6 && !defined(HEATER_6_INVERTING)
-  #define HEATER_6_INVERTING false
-#endif
-#if HAS_HEATER_7 && !defined(HEATER_7_INVERTING)
-  #define HEATER_7_INVERTING false
-#endif
-
 /**
  * Helper Macros for heaters and extruder fan
  */
-
-#define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, (v) ^ HEATER_0_INVERTING)
+#define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, (v) ^ ENABLED(HEATER_0_INVERTING))
 #if EITHER(HAS_MULTI_HOTEND, HEATERS_PARALLEL)
-  #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, (v) ^ HEATER_1_INVERTING)
+  #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, (v) ^ ENABLED(HEATER_1_INVERTING))
   #if HOTENDS > 2
-    #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, (v) ^ HEATER_2_INVERTING)
+    #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, (v) ^ ENABLED(HEATER_2_INVERTING))
     #if HOTENDS > 3
-      #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, (v) ^ HEATER_3_INVERTING)
+      #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, (v) ^ ENABLED(HEATER_3_INVERTING))
       #if HOTENDS > 4
-        #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, (v) ^ HEATER_4_INVERTING)
+        #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, (v) ^ ENABLED(HEATER_4_INVERTING))
         #if HOTENDS > 5
-          #define WRITE_HEATER_5(v) WRITE(HEATER_5_PIN, (v) ^ HEATER_5_INVERTING)
+          #define WRITE_HEATER_5(v) WRITE(HEATER_5_PIN, (v) ^ ENABLED(HEATER_5_INVERTING))
           #if HOTENDS > 6
-            #define WRITE_HEATER_6(v) WRITE(HEATER_6_PIN, (v) ^ HEATER_6_INVERTING)
+            #define WRITE_HEATER_6(v) WRITE(HEATER_6_PIN, (v) ^ ENABLED(HEATER_6_INVERTING))
             #if HOTENDS > 7
-              #define WRITE_HEATER_7(v) WRITE(HEATER_7_PIN, (v) ^ HEATER_7_INVERTING)
+              #define WRITE_HEATER_7(v) WRITE(HEATER_7_PIN, (v) ^ ENABLED(HEATER_7_INVERTING))
             #endif // HOTENDS > 7
           #endif // HOTENDS > 6
         #endif // HOTENDS > 5
       #endif // HOTENDS > 4
     #endif // HOTENDS > 3
   #endif // HOTENDS > 2
 #endif // HAS_MULTI_HOTEND || HEATERS_PARALLEL
 #if ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
 #else
   #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
 #endif
 
-#ifndef MIN_POWER
-  #define MIN_POWER 0
-#endif
-
 /**
  * Heated bed requires settings
  */
 #if HAS_HEATED_BED
   #ifndef MIN_BED_POWER
     #define MIN_BED_POWER 0
   #endif
   #ifndef MAX_BED_POWER
     #define MAX_BED_POWER 255
   #endif
-  #ifndef HEATER_BED_INVERTING
-    #define HEATER_BED_INVERTING false
-  #endif
-  #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ HEATER_BED_INVERTING)
+  #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ ENABLED(HEATER_BED_INVERTING))
 #endif
 
 /**
  * Heated chamber requires settings
  */
 #if HAS_HEATED_CHAMBER
   #ifndef MIN_CHAMBER_POWER
     #define MIN_CHAMBER_POWER 0
   #endif
   #ifndef MAX_CHAMBER_POWER
     #define MAX_CHAMBER_POWER 255
   #endif
-  #ifndef HEATER_CHAMBER_INVERTING
-    #define HEATER_CHAMBER_INVERTING false
-  #endif
-  #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ HEATER_CHAMBER_INVERTING)
+  #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ ENABLED(HEATER_CHAMBER_INVERTING))
 #endif
 
 /**
  * Laser Cooling requires settings
  */
 #if HAS_COOLER
   #ifndef MAX_COOLER_POWER
     #define MAX_COOLER_POWER 255
   #endif
-  #ifndef COOLER_INVERTING
-    #define COOLER_INVERTING true
-  #endif
-  #define WRITE_HEATER_COOLER(v) WRITE(COOLER_PIN, (v) ^ COOLER_INVERTING)
+  #define WRITE_HEATER_COOLER(v) WRITE(COOLER_PIN, (v) ^ ENABLED(COOLER_INVERTING))
 #endif
 
 #if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER || HAS_COOLER
   #define HAS_TEMPERATURE 1
 #endif
 
 #if HAS_TEMPERATURE && ANY(HAS_MARLINUI_MENU, HAS_DWIN_E3V2, HAS_DGUS_LCD_CLASSIC)
   #ifdef PREHEAT_10_LABEL
     #define PREHEAT_COUNT 10
   #elif defined(PREHEAT_9_LABEL)

commit 61f22f34d32ca33d99233eb5b242e52c23aabb23
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Mar 26 17:24:40 2023 -0500

    üîß Clarify axis disable / timeout (#25571)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index edd3edf246..bf9ede65dc 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1480,57 +1480,20 @@
     #define HAS_W_DIR 1
   #endif
   #if PIN_EXISTS(W_STEP)
     #define HAS_W_STEP 1
   #endif
   #if PIN_EXISTS(W_MS1)
     #define HAS_W_MS_PINS 1
   #endif
 #endif
 
-#if !defined(DISABLE_INACTIVE_X) && ENABLED(DISABLE_X)
-  #define DISABLE_INACTIVE_X
-#endif
-#if !defined(DISABLE_INACTIVE_Y) && ENABLED(DISABLE_Y)
-  #define DISABLE_INACTIVE_Y
-#endif
-#if !defined(DISABLE_INACTIVE_Z) && ENABLED(DISABLE_Z)
-  #define DISABLE_INACTIVE_Z
-#endif
-#if !defined(DISABLE_INACTIVE_I) && ENABLED(DISABLE_I)
-  #define DISABLE_INACTIVE_I
-#endif
-#if !defined(DISABLE_INACTIVE_J) && ENABLED(DISABLE_J)
-  #define DISABLE_INACTIVE_J
-#endif
-#if !defined(DISABLE_INACTIVE_K) && ENABLED(DISABLE_K)
-  #define DISABLE_INACTIVE_K
-#endif
-#if !defined(DISABLE_INACTIVE_U) && ENABLED(DISABLE_U)
-  #define DISABLE_INACTIVE_U
-#endif
-#if !defined(DISABLE_INACTIVE_V) && ENABLED(DISABLE_V)
-  #define DISABLE_INACTIVE_V
-#endif
-#if !defined(DISABLE_INACTIVE_W) && ENABLED(DISABLE_W)
-  #define DISABLE_INACTIVE_W
-#endif
-#if !defined(DISABLE_INACTIVE_EXTRUDER) && ENABLED(DISABLE_E)
-  #define DISABLE_INACTIVE_EXTRUDER
-#endif
-#if ANY(DISABLE_INACTIVE_X, DISABLE_INACTIVE_Y, DISABLE_INACTIVE_Z, DISABLE_INACTIVE_I, DISABLE_INACTIVE_J, DISABLE_INACTIVE_K, DISABLE_INACTIVE_U, DISABLE_INACTIVE_V, DISABLE_INACTIVE_W, DISABLE_INACTIVE_EXTRUDER)
-  #define HAS_DISABLE_INACTIVE_AXIS 1
-#endif
-#if ANY(DISABLE_X, DISABLE_Y, DISABLE_Z, DISABLE_I, DISABLE_J, DISABLE_K, DISABLE_U, DISABLE_V, DISABLE_W, DISABLE_E)
-  #define HAS_DISABLE_AXIS 1
-#endif
-
 // Extruder steppers and solenoids
 #if HAS_EXTRUDERS
 
   #if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
     #define HAS_E0_ENABLE 1
   #endif
   #if PIN_EXISTS(E0_DIR)
     #define HAS_E0_DIR 1
   #endif
   #if PIN_EXISTS(E0_STEP)

commit 24a9a66f0a238cb59cc6bfc7ff235713eefc3614
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Mar 26 04:36:12 2023 -0500

    üßë‚Äçüíª Auto Fan / Cooler Fan updates (#25554)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6e0c6c95a8..edd3edf246 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2565,24 +2565,35 @@
 #endif
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN)
   #define HAS_AUTO_CHAMBER_FAN 1
 #endif
 #if HAS_TEMP_COOLER && PIN_EXISTS(COOLER_AUTO_FAN)
   #define HAS_AUTO_COOLER_FAN 1
 #endif
 
 #if ANY(HAS_AUTO_FAN_0, HAS_AUTO_FAN_1, HAS_AUTO_FAN_2, HAS_AUTO_FAN_3, HAS_AUTO_FAN_4, HAS_AUTO_FAN_5, HAS_AUTO_FAN_6, HAS_AUTO_FAN_7, HAS_AUTO_CHAMBER_FAN, HAS_AUTO_COOLER_FAN)
   #define HAS_AUTO_FAN 1
-#endif
-#define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
-#if HAS_AUTO_FAN && (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
-  #define AUTO_CHAMBER_IS_E 1
+  #define _FANOVERLAP(I,T) (T##_AUTO_FAN_PIN == E##I##_AUTO_FAN_PIN)
+  #if HAS_AUTO_CHAMBER_FAN
+    #define _CHFANOVERLAP(I) || _FANOVERLAP(I,CHAMBER)
+    #if (0 REPEAT(8, _CHFANOVERLAP))
+      #define AUTO_CHAMBER_IS_E 1
+    #endif
+    #undef _CHFANOVERLAP
+  #endif
+  #if HAS_AUTO_COOLER_FAN
+    #define _COFANOVERLAP(I) || _FANOVERLAP(I,COOLER)
+    #if (0 REPEAT(8, _COFANOVERLAP))
+      #define AUTO_COOLER_IS_E 1
+    #endif
+    #undef _COFANOVERLAP
+  #endif
 #endif
 
 // Fans check
 #if HAS_HOTEND && PIN_EXISTS(E0_FAN_TACHO)
   #define HAS_E0_FAN_TACHO 1
 #endif
 #if HOTENDS > 1 && PIN_EXISTS(E1_FAN_TACHO)
   #define HAS_E1_FAN_TACHO 1
 #endif
 #if HOTENDS > 2 && PIN_EXISTS(E2_FAN_TACHO)
@@ -2613,20 +2624,23 @@
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 #if ANY(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS, AUTO_REPORT_POSITION, AUTO_REPORT_FANS)
   #define HAS_AUTO_REPORTING 1
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
+#if !HAS_AUTO_COOLER_FAN || AUTO_COOLER_IS_E
+  #undef AUTO_POWER_COOLER_FAN
+#endif
 
 // Print Cooling fans (limit)
 #ifdef NUM_M106_FANS
   #define MAX_FANS NUM_M106_FANS
 #else
   #define MAX_FANS 8  // Max supported fans
 #endif
 
 #define _NOT_E_AUTO(N,F) (E##N##_AUTO_FAN_PIN != FAN##F##_PIN)
 #define _HAS_FAN(F) (PIN_EXISTS(FAN##F) \

commit ea5d7e2eee641122ddf56705f6c9060d84a20df3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Mar 26 04:00:12 2023 -0500

    üîß Refactor endstop state config (#25574)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f137d48859..6e0c6c95a8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -907,291 +907,291 @@
     #define LIB_INTERNAL_MAX31865 1
   #endif
 
 #endif // HAS_MAX_TC
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_TO_MAX
-    #ifndef X2_MAX_ENDSTOP_INVERTING
+    #ifndef X2_MAX_ENDSTOP_HIT_STATE
       #if X2_USE_ENDSTOP == _XMIN_
-        #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define X2_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _XMAX_
-        #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define X2_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _YMIN_
-        #define X2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define X2_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _YMAX_
-        #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define X2_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _ZMIN_
-        #define X2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define X2_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _ZMAX_
-        #define X2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define X2_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(X2_MAX)
       #undef X2_MAX_PIN
       #if PIN_EXISTS(X2_STOP)
         #define X2_MAX_PIN X2_STOP_PIN
       #endif
     #endif
   #else
-    #ifndef X2_MIN_ENDSTOP_INVERTING
+    #ifndef X2_MIN_ENDSTOP_HIT_STATE
       #if X2_USE_ENDSTOP == _XMIN_
-        #define X2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define X2_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _XMAX_
-        #define X2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define X2_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _YMIN_
-        #define X2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define X2_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _YMAX_
-        #define X2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define X2_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _ZMIN_
-        #define X2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define X2_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
       #elif X2_USE_ENDSTOP == _ZMAX_
-        #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define X2_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(X2_MIN)
       #undef X2_MIN_PIN
       #if PIN_EXISTS(X2_STOP)
         #define X2_MIN_PIN X2_STOP_PIN
       #endif
     #endif
   #endif
-  #ifndef X2_MAX_ENDSTOP_INVERTING
-    #define X2_MAX_ENDSTOP_INVERTING false
+  #ifndef X2_MAX_ENDSTOP_HIT_STATE
+    #define X2_MAX_ENDSTOP_HIT_STATE HIGH
   #endif
-  #ifndef X2_MIN_ENDSTOP_INVERTING
-    #define X2_MIN_ENDSTOP_INVERTING false
+  #ifndef X2_MIN_ENDSTOP_HIT_STATE
+    #define X2_MIN_ENDSTOP_HIT_STATE HIGH
   #endif
 #endif
 
 /**
  * Y_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Y_DUAL_ENDSTOPS)
   #if Y_HOME_TO_MAX
-    #ifndef Y2_MAX_ENDSTOP_INVERTING
+    #ifndef Y2_MAX_ENDSTOP_HIT_STATE
       #if Y2_USE_ENDSTOP == _XMIN_
-        #define Y2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Y2_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _XMAX_
-        #define Y2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Y2_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _YMIN_
-        #define Y2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Y2_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _YMAX_
-        #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Y2_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _ZMIN_
-        #define Y2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Y2_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _ZMAX_
-        #define Y2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Y2_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(Y2_MAX)
       #undef Y2_MAX_PIN
       #if PIN_EXISTS(Y2_STOP)
         #define Y2_MAX_PIN Y2_STOP_PIN
       #endif
     #endif
   #else
-    #ifndef Y2_MIN_ENDSTOP_INVERTING
+    #ifndef Y2_MIN_ENDSTOP_HIT_STATE
       #if Y2_USE_ENDSTOP == _XMIN_
-        #define Y2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Y2_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _XMAX_
-        #define Y2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Y2_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _YMIN_
-        #define Y2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Y2_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _YMAX_
-        #define Y2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Y2_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _ZMIN_
-        #define Y2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Y2_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
       #elif Y2_USE_ENDSTOP == _ZMAX_
-        #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Y2_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(Y2_MIN)
       #undef Y2_MIN_PIN
       #if PIN_EXISTS(Y2_STOP)
         #define Y2_MIN_PIN Y2_STOP_PIN
       #endif
     #endif
   #endif
-  #ifndef Y2_MAX_ENDSTOP_INVERTING
-    #define Y2_MAX_ENDSTOP_INVERTING false
+  #ifndef Y2_MAX_ENDSTOP_HIT_STATE
+    #define Y2_MAX_ENDSTOP_HIT_STATE HIGH
   #endif
-  #ifndef Y2_MIN_ENDSTOP_INVERTING
-    #define Y2_MIN_ENDSTOP_INVERTING false
+  #ifndef Y2_MIN_ENDSTOP_HIT_STATE
+    #define Y2_MIN_ENDSTOP_HIT_STATE HIGH
   #endif
 #endif
 
 /**
  * Z_MULTI_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Z_MULTI_ENDSTOPS)
 
   #if Z_HOME_TO_MAX
-    #ifndef Z2_MAX_ENDSTOP_INVERTING
+    #ifndef Z2_MAX_ENDSTOP_HIT_STATE
       #if Z2_USE_ENDSTOP == _XMIN_
-        #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Z2_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _XMAX_
-        #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Z2_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _YMIN_
-        #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Z2_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _YMAX_
-        #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Z2_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _ZMIN_
-        #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Z2_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _ZMAX_
-        #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Z2_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(Z2_MAX)
       #undef Z2_MAX_PIN
       #if PIN_EXISTS(Z2_STOP)
         #define Z2_MAX_PIN Z2_STOP_PIN
       #endif
     #endif
   #else
-    #ifndef Z2_MIN_ENDSTOP_INVERTING
+    #ifndef Z2_MIN_ENDSTOP_HIT_STATE
       #if Z2_USE_ENDSTOP == _XMIN_
-        #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Z2_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _XMAX_
-        #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Z2_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _YMIN_
-        #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Z2_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _YMAX_
-        #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Z2_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _ZMIN_
-        #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Z2_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
       #elif Z2_USE_ENDSTOP == _ZMAX_
-        #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Z2_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
       #endif
     #endif
     #if !PIN_EXISTS(Z2_MIN)
       #undef Z2_MIN_PIN
       #if PIN_EXISTS(Z2_STOP)
         #define Z2_MIN_PIN Z2_STOP_PIN
       #endif
     #endif
   #endif
-  #ifndef Z2_MAX_ENDSTOP_INVERTING
-    #define Z2_MAX_ENDSTOP_INVERTING false
+  #ifndef Z2_MAX_ENDSTOP_HIT_STATE
+    #define Z2_MAX_ENDSTOP_HIT_STATE HIGH
   #endif
-  #ifndef Z2_MIN_ENDSTOP_INVERTING
-    #define Z2_MIN_ENDSTOP_INVERTING false
+  #ifndef Z2_MIN_ENDSTOP_HIT_STATE
+    #define Z2_MIN_ENDSTOP_HIT_STATE HIGH
   #endif
 
   #if NUM_Z_STEPPERS >= 3
     #if Z_HOME_TO_MAX
-      #ifndef Z3_MAX_ENDSTOP_INVERTING
+      #ifndef Z3_MAX_ENDSTOP_HIT_STATE
         #if Z3_USE_ENDSTOP == _XMIN_
-          #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+          #define Z3_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _XMAX_
-          #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+          #define Z3_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _YMIN_
-          #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+          #define Z3_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _YMAX_
-          #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+          #define Z3_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _ZMIN_
-          #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+          #define Z3_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _ZMAX_
-          #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+          #define Z3_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
         #endif
       #endif
       #if !PIN_EXISTS(Z3_MAX)
         #undef Z3_MAX_PIN
         #if PIN_EXISTS(Z3_STOP)
           #define Z3_MAX_PIN Z3_STOP_PIN
         #endif
       #endif
     #else
-      #ifndef Z3_MIN_ENDSTOP_INVERTING
+      #ifndef Z3_MIN_ENDSTOP_HIT_STATE
         #if Z3_USE_ENDSTOP == _XMIN_
-          #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+          #define Z3_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _XMAX_
-          #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+          #define Z3_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _YMIN_
-          #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+          #define Z3_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _YMAX_
-          #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+          #define Z3_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _ZMIN_
-          #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+          #define Z3_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
         #elif Z3_USE_ENDSTOP == _ZMAX_
-          #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+          #define Z3_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
         #endif
       #endif
       #if !PIN_EXISTS(Z3_MIN)
         #undef Z3_MIN_PIN
         #if PIN_EXISTS(Z3_STOP)
           #define Z3_MIN_PIN Z3_STOP_PIN
         #endif
       #endif
     #endif
-    #ifndef Z3_MAX_ENDSTOP_INVERTING
-      #define Z3_MAX_ENDSTOP_INVERTING false
+    #ifndef Z3_MAX_ENDSTOP_HIT_STATE
+      #define Z3_MAX_ENDSTOP_HIT_STATE HIGH
     #endif
-    #ifndef Z3_MIN_ENDSTOP_INVERTING
-      #define Z3_MIN_ENDSTOP_INVERTING false
+    #ifndef Z3_MIN_ENDSTOP_HIT_STATE
+      #define Z3_MIN_ENDSTOP_HIT_STATE HIGH
     #endif
   #endif
 
   #if NUM_Z_STEPPERS >= 4
     #if Z_HOME_TO_MAX
-      #ifndef Z4_MAX_ENDSTOP_INVERTING
+      #ifndef Z4_MAX_ENDSTOP_HIT_STATE
         #if Z4_USE_ENDSTOP == _XMIN_
-          #define Z4_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+          #define Z4_MAX_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _XMAX_
-          #define Z4_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+          #define Z4_MAX_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _YMIN_
-          #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+          #define Z4_MAX_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _YMAX_
-          #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+          #define Z4_MAX_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _ZMIN_
-          #define Z4_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+          #define Z4_MAX_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _ZMAX_
-          #define Z4_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+          #define Z4_MAX_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
         #endif
       #endif
       #if !PIN_EXISTS(Z4_MAX)
         #undef Z4_MAX_PIN
         #if PIN_EXISTS(Z4_STOP)
           #define Z4_MAX_PIN Z4_STOP_PIN
         #endif
       #endif
     #else
-      #ifndef Z4_MIN_ENDSTOP_INVERTING
+      #ifndef Z4_MIN_ENDSTOP_HIT_STATE
         #if Z4_USE_ENDSTOP == _XMIN_
-          #define Z4_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+          #define Z4_MIN_ENDSTOP_HIT_STATE X_MIN_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _XMAX_
-          #define Z4_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+          #define Z4_MIN_ENDSTOP_HIT_STATE X_MAX_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _YMIN_
-          #define Z4_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+          #define Z4_MIN_ENDSTOP_HIT_STATE Y_MIN_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _YMAX_
-          #define Z4_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+          #define Z4_MIN_ENDSTOP_HIT_STATE Y_MAX_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _ZMIN_
-          #define Z4_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+          #define Z4_MIN_ENDSTOP_HIT_STATE Z_MIN_ENDSTOP_HIT_STATE
         #elif Z4_USE_ENDSTOP == _ZMAX_
-          #define Z4_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+          #define Z4_MIN_ENDSTOP_HIT_STATE Z_MAX_ENDSTOP_HIT_STATE
         #endif
       #endif
       #if !PIN_EXISTS(Z4_MIN)
         #undef Z4_MIN_PIN
         #if PIN_EXISTS(Z4_STOP)
           #define Z4_MIN_PIN Z4_STOP_PIN
         #endif
       #endif
     #endif
-    #ifndef Z4_MAX_ENDSTOP_INVERTING
-      #define Z4_MAX_ENDSTOP_INVERTING false
+    #ifndef Z4_MAX_ENDSTOP_HIT_STATE
+      #define Z4_MAX_ENDSTOP_HIT_STATE HIGH
     #endif
-    #ifndef Z4_MIN_ENDSTOP_INVERTING
-      #define Z4_MIN_ENDSTOP_INVERTING false
+    #ifndef Z4_MIN_ENDSTOP_HIT_STATE
+      #define Z4_MIN_ENDSTOP_HIT_STATE HIGH
     #endif
   #endif
 
 #endif // Z_MULTI_ENDSTOPS
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if ENABLED(USE_XMAX_PLUG)

commit 2e4bf0ab9b2b4db545665bf976d2e0738c237b80
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 25 18:20:14 2023 -0500

    üé® Rename FAN_PIN to FAN0_PIN (#25568)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1377c8e73f..f137d48859 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2624,30 +2624,26 @@
 // Print Cooling fans (limit)
 #ifdef NUM_M106_FANS
   #define MAX_FANS NUM_M106_FANS
 #else
   #define MAX_FANS 8  // Max supported fans
 #endif
 
 #define _NOT_E_AUTO(N,F) (E##N##_AUTO_FAN_PIN != FAN##F##_PIN)
 #define _HAS_FAN(F) (PIN_EXISTS(FAN##F) \
                      && CONTROLLER_FAN_PIN != FAN##F##_PIN \
-                     && _NOT_E_AUTO(0,F) \
-                     && _NOT_E_AUTO(1,F) \
-                     && _NOT_E_AUTO(2,F) \
-                     && _NOT_E_AUTO(3,F) \
-                     && _NOT_E_AUTO(4,F) \
-                     && _NOT_E_AUTO(5,F) \
-                     && _NOT_E_AUTO(6,F) \
-                     && _NOT_E_AUTO(7,F) \
+                     && _NOT_E_AUTO(0,F) && _NOT_E_AUTO(1,F) \
+                     && _NOT_E_AUTO(2,F) && _NOT_E_AUTO(3,F) \
+                     && _NOT_E_AUTO(4,F) && _NOT_E_AUTO(5,F) \
+                     && _NOT_E_AUTO(6,F) && _NOT_E_AUTO(7,F) \
                      && F < MAX_FANS)
-#if PIN_EXISTS(FAN)
+#if _HAS_FAN(0)
   #define HAS_FAN0 1
 #endif
 #if _HAS_FAN(1)
   #define HAS_FAN1 1
 #endif
 #if _HAS_FAN(2)
   #define HAS_FAN2 1
 #endif
 #if _HAS_FAN(3)
   #define HAS_FAN3 1

commit 769ad2764512b38e987ebbed1fe026d68a424bb1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 24 00:33:39 2023 -0500

    üé® TMC SPI Pins
    
    Co-Authored-By: Martin Turski <turningtides@outlook.de>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 58f04a39b6..1377c8e73f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2205,20 +2205,28 @@
 #undef HW_MSerial7
 #undef HW_MSerial8
 #undef HW_MSerial9
 #undef HW_MSerial10
 
 #undef _SERIAL_ID
 #undef _TMC_UART_IS
 #undef TMC_UART_IS
 #undef ANY_SERIAL_IS
 
+#if defined(__AVR_ARCH__) && defined(TMC_SPI_MISO) && defined(TMC_SPI_MOSI) && defined(TMC_SPI_SCK)
+  // Check that the pins are the solitary supported SPI hardware pins of the (AVR) platform.
+  // Otherwise we are forced to enable software SPI.
+  #if TMC_SPI_MISO != MISO || TMC_SPI_MOSI != MOSI || TMC_SPI_SCK != SCK
+    #define TMC_USE_SW_SPI
+  #endif
+#endif
+
 // Clean up unused ESP_WIFI pins
 #ifdef ESP_WIFI_MODULE_COM
   #if !SERIAL_IN_USE(ESP_WIFI_MODULE_COM)
     #undef ESP_WIFI_MODULE_COM
     #undef ESP_WIFI_MODULE_BAUDRATE
     #undef ESP_WIFI_MODULE_RESET_PIN
     #undef ESP_WIFI_MODULE_ENABLE_PIN
     #undef ESP_WIFI_MODULE_TXD_PIN
     #undef ESP_WIFI_MODULE_RXD_PIN
     #undef ESP_WIFI_MODULE_GPIO0_PIN

commit 2ecd4cca1b694223802a53d5a7febaac4c4573b6
Author: BIGTREETECH <38851044+bigtreetech@users.noreply.github.com>
Date:   Wed Mar 22 15:46:03 2023 +0800

    ‚ú® FILAMENT_SWITCH_AND_MOTION (#25548)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a054f90840..58f04a39b6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2657,21 +2657,21 @@
   #define HAS_FAN7 1
 #endif
 #undef _NOT_E_AUTO
 #undef _HAS_FAN
 
 #if BED_OR_CHAMBER || HAS_FAN0
   #define BED_OR_CHAMBER_OR_FAN 1
 #endif
 
 /**
- * Up to 3 PWM fans
+ * Up to 8 PWM fans
  */
 #ifndef FAN_INVERTING
   #define FAN_INVERTING false
 #endif
 
 #if HAS_FAN7
   #define FAN_COUNT 8
 #elif HAS_FAN6
   #define FAN_COUNT 7
 #elif HAS_FAN5

commit b5836b243ac9321841daa9380d55b298375aaa2e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 17 20:12:36 2023 -0500

    üîß Optional MPC_AUTOTUNE to save 5.5 - 5.8KB

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c41f87c859..a054f90840 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2492,21 +2492,21 @@
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
 #endif
 
 #if ENABLED(DWIN_LCD_PROUI)
   #if EITHER(PIDTEMP, PIDTEMPBED)
     #define DWIN_PID_TUNE 1
   #endif
-  #if EITHER(DWIN_PID_TUNE, MPCTEMP) && DISABLED(DISABLE_TUNING_GRAPH)
+  #if EITHER(DWIN_PID_TUNE, MPC_AUTOTUNE) && DISABLED(DISABLE_TUNING_GRAPH)
     #define SHOW_TUNING_GRAPH 1
   #endif
 #endif
 
 // Thermal protection
 #if !HAS_HEATED_BED
   #undef THERMAL_PROTECTION_BED
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1

commit 89e8257008507821543af8811ab78ef0365b2741
Author: jamespearson04 <jamespearson04@hotmail.co.uk>
Date:   Fri Mar 17 01:06:55 2023 +0000

    üö∏ Refinements for UBL G29 J (tilt mesh) (#25486)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9305e86594..c41f87c859 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3149,28 +3149,28 @@
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
 #if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
-    #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
-    #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
+    #define _MESH_MIN_X (X_MIN_BED + (MESH_INSET))
+    #define _MESH_MIN_Y (Y_MIN_BED + (MESH_INSET))
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
-    #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
-    #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions
+    #define _MESH_MIN_X (_MAX(X_MIN_BED + (MESH_INSET), X_MIN_POS)) // UBL is careful not to probe off the bed. It doesn't
+    #define _MESH_MIN_Y (_MAX(Y_MIN_BED + (MESH_INSET), Y_MIN_POS)) // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions.
     #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
     #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
   #endif
 
   // These may be overridden in Configuration.h if a smaller area is desired
   #ifndef MESH_MIN_X
     #define MESH_MIN_X _MESH_MIN_X
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y

commit 51d3eabf463f28411670a543a7bd7418aad46fe4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 15 22:16:53 2023 -0500

    ‚ôªÔ∏è Refactor PROBE_PT_[123]

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 249aa5c30e..9305e86594 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3181,27 +3181,23 @@
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
 #else
   #undef MESH_MIN_X
   #undef MESH_MIN_Y
   #undef MESH_MAX_X
   #undef MESH_MAX_Y
 #endif
 
-#define _POINT_COUNT (defined(PROBE_PT_1_X) + defined(PROBE_PT_2_X) + defined(PROBE_PT_3_X) + defined(PROBE_PT_1_Y) + defined(PROBE_PT_2_Y) + defined(PROBE_PT_3_Y))
-#if _POINT_COUNT == 6
-  #define HAS_FIXED_3POINT 1
-#elif _POINT_COUNT > 0
-  #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
+#if NEEDS_THREE_PROBE_POINTS && defined(PROBE_PT_1)
+  #define HAS_FIXED_3POINT 1  // Points are defined for ABL/UBL. Else calculated in probe.get_three_points.
 #endif
-#undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
 #if PIN_EXISTS(BEEPER)
   #define HAS_BEEPER 1
 #endif
 #if ANY(IS_TFTGLCD_PANEL, PCA9632_BUZZER, LCD_USE_I2C_BUZZER)
   #define USE_MARLINUI_BUZZER 1
 #endif

commit f9f6662a8c4692cc67006fb302068c96a0e86ac1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 23 21:08:31 2023 -0600

    ‚ôªÔ∏è Stepper options refactor (#25422)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5c149cee89..249aa5c30e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1301,23 +1301,20 @@
 #if PIN_EXISTS(X2_STEP)
   #define HAS_X2_STEP 1
 #endif
 #if PIN_EXISTS(X2_MS1)
   #define HAS_X2_MS_PINS 1
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
-#if !defined(DISABLE_INACTIVE_X) && ENABLED(DISABLE_X)
-  #define DISABLE_INACTIVE_X 1
-#endif
 
 #if HAS_Y_AXIS
   #if PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
     #define HAS_Y_ENABLE 1
   #endif
   #if PIN_EXISTS(Y_DIR)
     #define HAS_Y_DIR 1
   #endif
   #if PIN_EXISTS(Y_STEP)
     #define HAS_Y_STEP 1
@@ -1331,45 +1328,35 @@
   #endif
   #if PIN_EXISTS(Y2_DIR)
     #define HAS_Y2_DIR 1
   #endif
   #if PIN_EXISTS(Y2_STEP)
     #define HAS_Y2_STEP 1
   #endif
   #if PIN_EXISTS(Y2_MS1)
     #define HAS_Y2_MS_PINS 1
   #endif
-  #if !defined(DISABLE_INACTIVE_Y) && ENABLED(DISABLE_Y)
-    #define DISABLE_INACTIVE_Y 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_Y
 #endif
 
 #if HAS_Z_AXIS
   #if PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
     #define HAS_Z_ENABLE 1
   #endif
   #if PIN_EXISTS(Z_DIR)
     #define HAS_Z_DIR 1
   #endif
   #if PIN_EXISTS(Z_STEP)
     #define HAS_Z_STEP 1
   #endif
   #if PIN_EXISTS(Z_MS1)
     #define HAS_Z_MS_PINS 1
   #endif
-  #if !defined(DISABLE_INACTIVE_Z) && ENABLED(DISABLE_Z)
-    #define DISABLE_INACTIVE_Z 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_Z
 #endif
 
 #if NUM_Z_STEPPERS >= 2
   #if PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
     #define HAS_Z2_ENABLE 1
   #endif
   #if PIN_EXISTS(Z2_DIR)
     #define HAS_Z2_DIR 1
   #endif
   #if PIN_EXISTS(Z2_STEP)
@@ -1416,125 +1403,132 @@
   #endif
   #if PIN_EXISTS(I_DIR)
     #define HAS_I_DIR 1
   #endif
   #if PIN_EXISTS(I_STEP)
     #define HAS_I_STEP 1
   #endif
   #if PIN_EXISTS(I_MS1)
     #define HAS_I_MS_PINS 1
   #endif
-  #if !defined(DISABLE_INACTIVE_I) && ENABLED(DISABLE_I)
-    #define DISABLE_INACTIVE_I 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_I
 #endif
 
 #if HAS_J_AXIS
   #if PIN_EXISTS(J_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(J))
     #define HAS_J_ENABLE 1
   #endif
   #if PIN_EXISTS(J_DIR)
     #define HAS_J_DIR 1
   #endif
   #if PIN_EXISTS(J_STEP)
     #define HAS_J_STEP 1
   #endif
   #if PIN_EXISTS(J_MS1)
     #define HAS_J_MS_PINS 1
   #endif
-  #if !defined(DISABLE_INACTIVE_J) && ENABLED(DISABLE_J)
-    #define DISABLE_INACTIVE_J 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_J
 #endif
 
 #if HAS_K_AXIS
   #if PIN_EXISTS(K_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(K))
     #define HAS_K_ENABLE 1
   #endif
   #if PIN_EXISTS(K_DIR)
     #define HAS_K_DIR 1
   #endif
   #if PIN_EXISTS(K_STEP)
     #define HAS_K_STEP 1
   #endif
   #if PIN_EXISTS(K_MS1)
     #define HAS_K_MS_PINS 1
   #endif
-  #if !defined(DISABLE_INACTIVE_K) && ENABLED(DISABLE_K)
-    #define DISABLE_INACTIVE_K 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_K
 #endif
 
 #if HAS_U_AXIS
   #if PIN_EXISTS(U_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(U))
     #define HAS_U_ENABLE 1
   #endif
   #if PIN_EXISTS(U_DIR)
     #define HAS_U_DIR 1
   #endif
   #if PIN_EXISTS(U_STEP)
     #define HAS_U_STEP 1
   #endif
   #if PIN_EXISTS(U_MS1)
     #define HAS_U_MS_PINS 1
   #endif
-  #if !defined(DISABLE_INACTIVE_U) && ENABLED(DISABLE_U)
-    #define DISABLE_INACTIVE_U 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_U
 #endif
 
 #if HAS_V_AXIS
   #if PIN_EXISTS(V_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(V))
     #define HAS_V_ENABLE 1
   #endif
   #if PIN_EXISTS(V_DIR)
     #define HAS_V_DIR 1
   #endif
   #if PIN_EXISTS(V_STEP)
     #define HAS_V_STEP 1
   #endif
   #if PIN_EXISTS(V_MS1)
     #define HAS_V_MS_PINS 1
   #endif
-  #if !defined(DISABLE_INACTIVE_V) && ENABLED(DISABLE_V)
-    #define DISABLE_INACTIVE_V 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_V
 #endif
 
 #if HAS_W_AXIS
   #if PIN_EXISTS(W_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(W))
     #define HAS_W_ENABLE 1
   #endif
   #if PIN_EXISTS(W_DIR)
     #define HAS_W_DIR 1
   #endif
   #if PIN_EXISTS(W_STEP)
     #define HAS_W_STEP 1
   #endif
   #if PIN_EXISTS(W_MS1)
     #define HAS_W_MS_PINS 1
   #endif
-  #if !defined(DISABLE_INACTIVE_W) && ENABLED(DISABLE_W)
-    #define DISABLE_INACTIVE_W 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_W
+#endif
+
+#if !defined(DISABLE_INACTIVE_X) && ENABLED(DISABLE_X)
+  #define DISABLE_INACTIVE_X
+#endif
+#if !defined(DISABLE_INACTIVE_Y) && ENABLED(DISABLE_Y)
+  #define DISABLE_INACTIVE_Y
+#endif
+#if !defined(DISABLE_INACTIVE_Z) && ENABLED(DISABLE_Z)
+  #define DISABLE_INACTIVE_Z
+#endif
+#if !defined(DISABLE_INACTIVE_I) && ENABLED(DISABLE_I)
+  #define DISABLE_INACTIVE_I
+#endif
+#if !defined(DISABLE_INACTIVE_J) && ENABLED(DISABLE_J)
+  #define DISABLE_INACTIVE_J
+#endif
+#if !defined(DISABLE_INACTIVE_K) && ENABLED(DISABLE_K)
+  #define DISABLE_INACTIVE_K
+#endif
+#if !defined(DISABLE_INACTIVE_U) && ENABLED(DISABLE_U)
+  #define DISABLE_INACTIVE_U
+#endif
+#if !defined(DISABLE_INACTIVE_V) && ENABLED(DISABLE_V)
+  #define DISABLE_INACTIVE_V
+#endif
+#if !defined(DISABLE_INACTIVE_W) && ENABLED(DISABLE_W)
+  #define DISABLE_INACTIVE_W
+#endif
+#if !defined(DISABLE_INACTIVE_EXTRUDER) && ENABLED(DISABLE_E)
+  #define DISABLE_INACTIVE_EXTRUDER
+#endif
+#if ANY(DISABLE_INACTIVE_X, DISABLE_INACTIVE_Y, DISABLE_INACTIVE_Z, DISABLE_INACTIVE_I, DISABLE_INACTIVE_J, DISABLE_INACTIVE_K, DISABLE_INACTIVE_U, DISABLE_INACTIVE_V, DISABLE_INACTIVE_W, DISABLE_INACTIVE_EXTRUDER)
+  #define HAS_DISABLE_INACTIVE_AXIS 1
+#endif
+#if ANY(DISABLE_X, DISABLE_Y, DISABLE_Z, DISABLE_I, DISABLE_J, DISABLE_K, DISABLE_U, DISABLE_V, DISABLE_W, DISABLE_E)
+  #define HAS_DISABLE_AXIS 1
 #endif
 
 // Extruder steppers and solenoids
 #if HAS_EXTRUDERS
 
   #if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
     #define HAS_E0_ENABLE 1
   #endif
   #if PIN_EXISTS(E0_DIR)
     #define HAS_E0_DIR 1
@@ -1644,25 +1638,20 @@
       #define HAS_E7_DIR 1
     #endif
     #if PIN_EXISTS(E7_STEP)
       #define HAS_E7_STEP 1
     #endif
     #if PIN_EXISTS(E7_MS1)
       #define HAS_E7_MS_PINS 1
     #endif
   #endif
 
-  #if !defined(DISABLE_INACTIVE_E) && ENABLED(DISABLE_E)
-    #define DISABLE_INACTIVE_E 1
-  #endif
-#else
-  #undef DISABLE_INACTIVE_E
 #endif // HAS_EXTRUDERS
 
 /**
  * Set solenoid flags if any features use solenoids
  *   - EXT_SOLENOID (M380, M381) to enable/disable the extruder solenoid
  *   - MANUAL_SOLENOID_CONTROL (M380, M381) to enable/disable solenoids by index
  *   - PARKING_EXTRUDER uses SOL0_PIN and SOL1_PIN
  *   - SOLENOID_PROBE uses SOL1_PIN
  *   - Z_PROBE_SLED uses SOL1_PIN, when defined (unless EXT_SOLENOID is enabled)
  */

commit 23e2cb0c53abc0727b0105beb777fefbb645280b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 8 20:19:12 2023 -0600

    ü©π Misc. extra axis updates

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index cf6c560b5c..5c149cee89 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -183,36 +183,36 @@
 #if HAS_W_AXIS
   #define _W_HALF_WMAX ((W_BED_SIZE) / 2)
 #endif
 
 #define X_CENTER TERN(BED_CENTER_AT_0_0, 0, _X_HALF_BED)
 #if HAS_Y_AXIS
   #define Y_CENTER TERN(BED_CENTER_AT_0_0, 0, _Y_HALF_BED)
   #define XY_CENTER { X_CENTER, Y_CENTER }
 #endif
 #if HAS_I_AXIS
-  #define I_CENTER TERN(BED_CENTER_AT_0_0, 0, _I_HALF_BED)
+  #define I_CENTER _I_HALF_BED
 #endif
 #if HAS_J_AXIS
-  #define J_CENTER TERN(BED_CENTER_AT_0_0, 0, _J_HALF_BED)
+  #define J_CENTER _J_HALF_BED
 #endif
 #if HAS_K_AXIS
-  #define K_CENTER TERN(BED_CENTER_AT_0_0, 0, _K_HALF_BED)
+  #define K_CENTER _K_HALF_BED
 #endif
 #if HAS_U_AXIS
-  #define U_CENTER TERN(BED_CENTER_AT_0_0, 0, _U_HALF_BED)
+  #define U_CENTER _U_HALF_BED
 #endif
 #if HAS_V_AXIS
-  #define V_CENTER TERN(BED_CENTER_AT_0_0, 0, _V_HALF_BED)
+  #define V_CENTER _V_HALF_BED
 #endif
 #if HAS_W_AXIS
-  #define W_CENTER TERN(BED_CENTER_AT_0_0, 0, _W_HALF_BED)
+  #define W_CENTER _W_HALF_BED
 #endif
 
 // Get the linear boundaries of the bed
 #define X_MIN_BED (X_CENTER - _X_HALF_BED)
 #define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
 #if HAS_Y_AXIS
   #define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
   #define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
 #endif
 #if HAS_I_AXIS

commit d6f4f24658cd6d307d395077020be85ecb0d2210
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Wed Feb 1 07:25:13 2023 +0000

    ü©π Fix PID / MPC heating flags (#25314)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5ec428edf2..cf6c560b5c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3047,21 +3047,21 @@
       #define YZ_SKEW_FACTOR 0.0
     #endif
   #endif
 #endif // SKEW_CORRECTION
 
 /**
  * Heater, Fan, and Probe interactions
  */
 #if !HAS_FAN
   #undef ADAPTIVE_FAN_SLOWING
-  #undef NO_FAN_SLOWING_IN_PID_TUNING
+  #undef TEMP_TUNING_MAINTAIN_FAN
 #endif
 #if !BOTH(HAS_BED_PROBE, HAS_FAN)
   #undef PROBING_FANS_OFF
 #endif
 #if !BOTH(HAS_BED_PROBE, HAS_EXTRUDERS)
   #undef PROBING_ESTEPPERS_OFF
 #elif ENABLED(PROBING_STEPPERS_OFF)
   // PROBING_STEPPERS_OFF implies PROBING_ESTEPPERS_OFF, make sure it is defined
   #define PROBING_ESTEPPERS_OFF
 #endif

commit 087e19a0ed4b769224d42cca83c8caccefce63c9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jan 30 22:11:50 2023 -0600

    üîß Fix build with no Y axis (#25311)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3faef307a8..5ec428edf2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2243,21 +2243,21 @@
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (USES_Z_MIN_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
 #define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
 
-#define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
+#define _HAS_STOP(A,M) (HAS_##A##_AXIS && PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
 #if _HAS_STOP(X,MIN)
   #define HAS_X_MIN 1
 #endif
 #if _HAS_STOP(X,MAX)
   #define HAS_X_MAX 1
 #endif
 #if _HAS_STOP(Y,MIN)
   #define HAS_Y_MIN 1
 #endif
 #if _HAS_STOP(Y,MAX)

commit b3f65b674f23db5c32e4d7e96ad2dff97c77c717
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Tue Jan 17 18:41:36 2023 -0500

    üö∏ ProUI MPC menu (#25232)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 515d5f7984..3faef307a8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2497,23 +2497,29 @@
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
 #else
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
-  #if ENABLED(DWIN_LCD_PROUI) && EITHER(PIDTEMP, PIDTEMPBED)
+#endif
+
+#if ENABLED(DWIN_LCD_PROUI)
+  #if EITHER(PIDTEMP, PIDTEMPBED)
     #define DWIN_PID_TUNE 1
   #endif
+  #if EITHER(DWIN_PID_TUNE, MPCTEMP) && DISABLED(DISABLE_TUNING_GRAPH)
+    #define SHOW_TUNING_GRAPH 1
+  #endif
 #endif
 
 // Thermal protection
 #if !HAS_HEATED_BED
   #undef THERMAL_PROTECTION_BED
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
 #if ENABLED(THERMAL_PROTECTION_BED) && WATCH_BED_TEMP_PERIOD > 0

commit 6fe387b6f0722033e6cca96fd5e8215ea7b162eb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 15 06:48:17 2023 -0600

    üßë‚Äçüíª Adjust PID / MPC / ProUI
    
    Changes to simplify #25232 WIP

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8fe9a408f2..515d5f7984 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2497,20 +2497,23 @@
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
 #else
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
+  #if ENABLED(DWIN_LCD_PROUI) && EITHER(PIDTEMP, PIDTEMPBED)
+    #define DWIN_PID_TUNE 1
+  #endif
 #endif
 
 // Thermal protection
 #if !HAS_HEATED_BED
   #undef THERMAL_PROTECTION_BED
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
 #if ENABLED(THERMAL_PROTECTION_BED) && WATCH_BED_TEMP_PERIOD > 0

commit 7717beb79362522b8239d5af62b32ff3d0e2d748
Author: kadir ilkimen <kadirilkimen@gmail.com>
Date:   Wed Jan 11 06:29:38 2023 +0200

    ‚ú® Polar Kinematics (#25214)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b9bcb4d0d2..8fe9a408f2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -260,33 +260,33 @@
     #define CAN_CALIBRATE(A,B) true
   #endif
 #endif
 #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
   #undef LCD_BED_TRAMMING
+  #undef SLOWDOWN
 #endif
 
 /**
  * SCARA cannot use SLOWDOWN and requires QUICKHOME
  * Printable radius assumes joints can fully extend
  */
 #if IS_SCARA
-  #undef SLOWDOWN
   #if ENABLED(AXEL_TPARA)
-    #define SCARA_PRINTABLE_RADIUS (TPARA_LINKAGE_1 + TPARA_LINKAGE_2)
+    #define PRINTABLE_RADIUS (TPARA_LINKAGE_1 + TPARA_LINKAGE_2)
   #else
     #define QUICK_HOME
-    #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
+    #define PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #endif
 #endif
 
 /**
  * Set the home position based on settings or manual overrides
  */
 #ifdef MANUAL_X_HOME_POS
   #define X_HOME_POS MANUAL_X_HOME_POS
 #else
   #define X_END_POS TERN(X_HOME_TO_MIN, X_MIN_POS, X_MAX_POS)
@@ -371,21 +371,20 @@
  */
 #if ENABLED(Z_PROBE_SLED)
   #define Z_SAFE_HOMING
 #endif
 
 /**
  * DELTA should ignore Z_SAFE_HOMING and SLOWDOWN
  */
 #if ENABLED(DELTA)
   #undef Z_SAFE_HOMING
-  #undef SLOWDOWN
 #endif
 
 #ifndef MESH_INSET
   #define MESH_INSET 0
 #endif
 
 /**
  * Safe Homing Options
  */
 #if ENABLED(Z_SAFE_HOMING)
@@ -3076,21 +3075,24 @@
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
 
 /**
  * Only constrain Z on DELTA / SCARA machines
  */
-#if IS_KINEMATIC
+#if ENABLED(POLAR)
+  #undef MIN_SOFTWARE_ENDSTOP_Y
+  #undef MAX_SOFTWARE_ENDSTOP_Y
+#elif IS_KINEMATIC
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
  * Bed Probing bounds
  */
 
@@ -3147,21 +3149,21 @@
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
 #if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
-    // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
+    // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
     #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
     #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions
     #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))

commit c66b3cf8a429c427c014f33171407c634da735f1
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Sun Jan 8 04:22:21 2023 -0500

    üö∏ ProUI updates (#25176)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 18a28130eb..b9bcb4d0d2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2465,20 +2465,21 @@
 
 // Shorthand for common combinations
 #if HAS_TEMP_BED && HAS_HEATER_BED
   #define HAS_HEATED_BED 1
   #ifndef BED_OVERSHOOT
     #define BED_OVERSHOOT 10
   #endif
   #define BED_MAX_TARGET (BED_MAXTEMP - (BED_OVERSHOOT))
 #else
   #undef PIDTEMPBED
+  #undef PREHEAT_BEFORE_LEVELING
 #endif
 
 #if HAS_TEMP_COOLER && PIN_EXISTS(COOLER)
   #define HAS_COOLER 1
   #ifndef COOLER_OVERSHOOT
     #define COOLER_OVERSHOOT 2
   #endif
   #define COOLER_MIN_TARGET (COOLER_MINTEMP + (COOLER_OVERSHOOT))
   #define COOLER_MAX_TARGET (COOLER_MAXTEMP - (COOLER_OVERSHOOT))
 #endif

commit fca1929beb6a5f7dd21d17bdefcbc97511869e27
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Sat Dec 31 08:44:55 2022 +0300

    ‚ú®‚ö°Ô∏è UTF support for TFT Color UI (#25073)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9e26137198..18a28130eb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3320,21 +3320,21 @@
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
-#if EITHER(SCROLL_LONG_FILENAMES, HAS_DWIN_E3V2)
+#if ANY(SCROLL_LONG_FILENAMES, HAS_DWIN_E3V2, TFT_COLOR_UI)
   #define MAX_VFAT_ENTRIES (5)
 #else
   #define MAX_VFAT_ENTRIES (2)
 #endif
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif

commit ed6212e0bd0ec038102c27d92774fd2f6ab9817a
Author: ils15 <igorleite-ils@hotmail.com>
Date:   Fri Dec 16 17:37:56 2022 -0300

    üîß Use multi-XYZ 'STOP' pins for MIN/MAX (#24855)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f6e76d1a6e..9e26137198 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -923,36 +923,48 @@
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMIN_
         #define X2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMAX_
         #define X2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #endif
     #endif
+    #if !PIN_EXISTS(X2_MAX)
+      #undef X2_MAX_PIN
+      #if PIN_EXISTS(X2_STOP)
+        #define X2_MAX_PIN X2_STOP_PIN
+      #endif
+    #endif
   #else
     #ifndef X2_MIN_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMIN_
         #define X2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMAX_
         #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #endif
     #endif
+    #if !PIN_EXISTS(X2_MIN)
+      #undef X2_MIN_PIN
+      #if PIN_EXISTS(X2_STOP)
+        #define X2_MIN_PIN X2_STOP_PIN
+      #endif
+    #endif
   #endif
   #ifndef X2_MAX_ENDSTOP_INVERTING
     #define X2_MAX_ENDSTOP_INVERTING false
   #endif
   #ifndef X2_MIN_ENDSTOP_INVERTING
     #define X2_MIN_ENDSTOP_INVERTING false
   #endif
 #endif
 
 /**
@@ -968,36 +980,48 @@
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMIN_
         #define Y2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMAX_
         #define Y2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #endif
     #endif
+    #if !PIN_EXISTS(Y2_MAX)
+      #undef Y2_MAX_PIN
+      #if PIN_EXISTS(Y2_STOP)
+        #define Y2_MAX_PIN Y2_STOP_PIN
+      #endif
+    #endif
   #else
     #ifndef Y2_MIN_ENDSTOP_INVERTING
       #if Y2_USE_ENDSTOP == _XMIN_
         #define Y2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _XMAX_
         #define Y2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMIN_
         #define Y2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMAX_
         #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #endif
     #endif
+    #if !PIN_EXISTS(Y2_MIN)
+      #undef Y2_MIN_PIN
+      #if PIN_EXISTS(Y2_STOP)
+        #define Y2_MIN_PIN Y2_STOP_PIN
+      #endif
+    #endif
   #endif
   #ifndef Y2_MAX_ENDSTOP_INVERTING
     #define Y2_MAX_ENDSTOP_INVERTING false
   #endif
   #ifndef Y2_MIN_ENDSTOP_INVERTING
     #define Y2_MIN_ENDSTOP_INVERTING false
   #endif
 #endif
 
 /**
@@ -1014,36 +1038,48 @@
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMIN_
         #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMAX_
         #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #endif
     #endif
+    #if !PIN_EXISTS(Z2_MAX)
+      #undef Z2_MAX_PIN
+      #if PIN_EXISTS(Z2_STOP)
+        #define Z2_MAX_PIN Z2_STOP_PIN
+      #endif
+    #endif
   #else
     #ifndef Z2_MIN_ENDSTOP_INVERTING
       #if Z2_USE_ENDSTOP == _XMIN_
         #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _XMAX_
         #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMIN_
         #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMAX_
         #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #endif
     #endif
+    #if !PIN_EXISTS(Z2_MIN)
+      #undef Z2_MIN_PIN
+      #if PIN_EXISTS(Z2_STOP)
+        #define Z2_MIN_PIN Z2_STOP_PIN
+      #endif
+    #endif
   #endif
   #ifndef Z2_MAX_ENDSTOP_INVERTING
     #define Z2_MAX_ENDSTOP_INVERTING false
   #endif
   #ifndef Z2_MIN_ENDSTOP_INVERTING
     #define Z2_MIN_ENDSTOP_INVERTING false
   #endif
 
   #if NUM_Z_STEPPERS >= 3
     #if Z_HOME_TO_MAX
@@ -1055,36 +1091,48 @@
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMIN_
           #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMAX_
           #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
         #endif
       #endif
+      #if !PIN_EXISTS(Z3_MAX)
+        #undef Z3_MAX_PIN
+        #if PIN_EXISTS(Z3_STOP)
+          #define Z3_MAX_PIN Z3_STOP_PIN
+        #endif
+      #endif
     #else
       #ifndef Z3_MIN_ENDSTOP_INVERTING
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMIN_
           #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMAX_
           #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
         #endif
       #endif
+      #if !PIN_EXISTS(Z3_MIN)
+        #undef Z3_MIN_PIN
+        #if PIN_EXISTS(Z3_STOP)
+          #define Z3_MIN_PIN Z3_STOP_PIN
+        #endif
+      #endif
     #endif
     #ifndef Z3_MAX_ENDSTOP_INVERTING
       #define Z3_MAX_ENDSTOP_INVERTING false
     #endif
     #ifndef Z3_MIN_ENDSTOP_INVERTING
       #define Z3_MIN_ENDSTOP_INVERTING false
     #endif
   #endif
 
   #if NUM_Z_STEPPERS >= 4
@@ -1097,36 +1145,48 @@
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMIN_
           #define Z4_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMAX_
           #define Z4_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
         #endif
       #endif
+      #if !PIN_EXISTS(Z4_MAX)
+        #undef Z4_MAX_PIN
+        #if PIN_EXISTS(Z4_STOP)
+          #define Z4_MAX_PIN Z4_STOP_PIN
+        #endif
+      #endif
     #else
       #ifndef Z4_MIN_ENDSTOP_INVERTING
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMIN_
           #define Z4_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMAX_
           #define Z4_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
         #endif
       #endif
+      #if !PIN_EXISTS(Z4_MIN)
+        #undef Z4_MIN_PIN
+        #if PIN_EXISTS(Z4_STOP)
+          #define Z4_MIN_PIN Z4_STOP_PIN
+        #endif
+      #endif
     #endif
     #ifndef Z4_MAX_ENDSTOP_INVERTING
       #define Z4_MAX_ENDSTOP_INVERTING false
     #endif
     #ifndef Z4_MIN_ENDSTOP_INVERTING
       #define Z4_MIN_ENDSTOP_INVERTING false
     #endif
   #endif
 
 #endif // Z_MULTI_ENDSTOPS

commit 74474c8a818745f1324aa5e22e59c361b4dff609
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Nov 26 19:21:47 2022 +1300

    üîß Fix TPARA (‚Ä¶SCARA, DELTA) settings (#25016)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1e0daeb567..f6e76d1a6e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -268,24 +268,26 @@
 #if IS_KINEMATIC
   #undef LCD_BED_TRAMMING
 #endif
 
 /**
  * SCARA cannot use SLOWDOWN and requires QUICKHOME
  * Printable radius assumes joints can fully extend
  */
 #if IS_SCARA
   #undef SLOWDOWN
-  #if DISABLED(AXEL_TPARA)
+  #if ENABLED(AXEL_TPARA)
+    #define SCARA_PRINTABLE_RADIUS (TPARA_LINKAGE_1 + TPARA_LINKAGE_2)
+  #else
     #define QUICK_HOME
+    #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #endif
-  #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
 #endif
 
 /**
  * Set the home position based on settings or manual overrides
  */
 #ifdef MANUAL_X_HOME_POS
   #define X_HOME_POS MANUAL_X_HOME_POS
 #else
   #define X_END_POS TERN(X_HOME_TO_MIN, X_MIN_POS, X_MAX_POS)
   #if ENABLED(BED_CENTER_AT_0_0)

commit 739556905575e967e10b1e164ae549be28772964
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 11 20:35:07 2022 -0600

    üêõ Fix Anycubic / Trigorilla pins, etc. (#24971)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9f41390db9..1e0daeb567 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -919,134 +919,44 @@
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMIN_
         #define X2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMAX_
         #define X2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
-        #define X2_MAX_ENDSTOP_INVERTING false
       #endif
     #endif
-    #if !defined(X2_MAX_PIN) && !defined(X2_STOP_PIN)
-      #if X2_USE_ENDSTOP == _XMIN_
-        #define X2_MAX_PIN X_MIN_PIN
-      #elif X2_USE_ENDSTOP == _XMAX_
-        #define X2_MAX_PIN X_MAX_PIN
-      #elif X2_USE_ENDSTOP == _XSTOP_
-        #define X2_MAX_PIN X_STOP_PIN
-      #elif X2_USE_ENDSTOP == _YMIN_
-        #define X2_MAX_PIN Y_MIN_PIN
-      #elif X2_USE_ENDSTOP == _YMAX_
-        #define X2_MAX_PIN Y_MAX_PIN
-      #elif X2_USE_ENDSTOP == _YSTOP_
-        #define X2_MAX_PIN Y_STOP_PIN
-      #elif X2_USE_ENDSTOP == _ZMIN_
-        #define X2_MAX_PIN Z_MIN_PIN
-      #elif X2_USE_ENDSTOP == _ZMAX_
-        #define X2_MAX_PIN Z_MAX_PIN
-      #elif X2_USE_ENDSTOP == _ZSTOP_
-        #define X2_MAX_PIN Z_STOP_PIN
-      #elif X2_USE_ENDSTOP == _XDIAG_
-        #define X2_MAX_PIN X_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _YDIAG_
-        #define X2_MAX_PIN Y_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _ZDIAG_
-        #define X2_MAX_PIN Z_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E0DIAG_
-        #define X2_MAX_PIN E0_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E1DIAG_
-        #define X2_MAX_PIN E1_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E2DIAG_
-        #define X2_MAX_PIN E2_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E3DIAG_
-        #define X2_MAX_PIN E3_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E4DIAG_
-        #define X2_MAX_PIN E4_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E5DIAG_
-        #define X2_MAX_PIN E5_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E6DIAG_
-        #define X2_MAX_PIN E6_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E7DIAG_
-        #define X2_MAX_PIN E7_DIAG_PIN
-      #endif
-    #endif
-    #ifndef X2_MIN_ENDSTOP_INVERTING
-      #define X2_MIN_ENDSTOP_INVERTING false
-    #endif
   #else
     #ifndef X2_MIN_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMIN_
         #define X2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMAX_
         #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
-        #define X2_MIN_ENDSTOP_INVERTING false
       #endif
     #endif
-    #if !defined(X2_MIN_PIN) && !defined(X2_STOP_PIN)
-      #if X2_USE_ENDSTOP == _XMIN_
-        #define X2_MIN_PIN X_MIN_PIN
-      #elif X2_USE_ENDSTOP == _XMAX_
-        #define X2_MIN_PIN X_MAX_PIN
-      #elif X2_USE_ENDSTOP == _XSTOP_
-        #define X2_MIN_PIN X_STOP_PIN
-      #elif X2_USE_ENDSTOP == _YMIN_
-        #define X2_MIN_PIN Y_MIN_PIN
-      #elif X2_USE_ENDSTOP == _YMAX_
-        #define X2_MIN_PIN Y_MAX_PIN
-      #elif X2_USE_ENDSTOP == _YSTOP_
-        #define X2_MIN_PIN Y_STOP_PIN
-      #elif X2_USE_ENDSTOP == _ZMIN_
-        #define X2_MIN_PIN Z_MIN_PIN
-      #elif X2_USE_ENDSTOP == _ZMAX_
-        #define X2_MIN_PIN Z_MAX_PIN
-      #elif X2_USE_ENDSTOP == _ZSTOP_
-        #define X2_MIN_PIN Z_STOP_PIN
-      #elif X2_USE_ENDSTOP == _XDIAG_
-        #define X2_MIN_PIN X_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _YDIAG_
-        #define X2_MIN_PIN Y_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _ZDIAG_
-        #define X2_MIN_PIN Z_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E0DIAG_
-        #define X2_MIN_PIN E0_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E1DIAG_
-        #define X2_MIN_PIN E1_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E2DIAG_
-        #define X2_MIN_PIN E2_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E3DIAG_
-        #define X2_MIN_PIN E3_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E4DIAG_
-        #define X2_MIN_PIN E4_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E5DIAG_
-        #define X2_MIN_PIN E5_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E6DIAG_
-        #define X2_MIN_PIN E6_DIAG_PIN
-      #elif X2_USE_ENDSTOP == _E7DIAG_
-        #define X2_MIN_PIN E7_DIAG_PIN
-      #endif
-    #endif
-    #ifndef X2_MAX_ENDSTOP_INVERTING
-      #define X2_MAX_ENDSTOP_INVERTING false
-    #endif
+  #endif
+  #ifndef X2_MAX_ENDSTOP_INVERTING
+    #define X2_MAX_ENDSTOP_INVERTING false
+  #endif
+  #ifndef X2_MIN_ENDSTOP_INVERTING
+    #define X2_MIN_ENDSTOP_INVERTING false
   #endif
 #endif
 
 /**
  * Y_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Y_DUAL_ENDSTOPS)
   #if Y_HOME_TO_MAX
     #ifndef Y2_MAX_ENDSTOP_INVERTING
       #if Y2_USE_ENDSTOP == _XMIN_
@@ -1054,134 +964,44 @@
       #elif Y2_USE_ENDSTOP == _XMAX_
         #define Y2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMIN_
         #define Y2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMAX_
         #define Y2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
-        #define Y2_MAX_ENDSTOP_INVERTING false
-      #endif
-    #endif
-    #if !defined(Y2_MAX_PIN) && !defined(Y2_STOP_PIN)
-      #if Y2_USE_ENDSTOP == _XMIN_
-        #define Y2_MAX_PIN X_MIN_PIN
-      #elif Y2_USE_ENDSTOP == _XMAX_
-        #define Y2_MAX_PIN X_MAX_PIN
-      #elif Y2_USE_ENDSTOP == _XSTOP_
-        #define Y2_MAX_PIN X_STOP_PIN
-      #elif Y2_USE_ENDSTOP == _YMIN_
-        #define Y2_MAX_PIN Y_MIN_PIN
-      #elif Y2_USE_ENDSTOP == _YMAX_
-        #define Y2_MAX_PIN Y_MAX_PIN
-      #elif Y2_USE_ENDSTOP == _YSTOP_
-        #define Y2_MAX_PIN Y_STOP_PIN
-      #elif Y2_USE_ENDSTOP == _ZMIN_
-        #define Y2_MAX_PIN Z_MIN_PIN
-      #elif Y2_USE_ENDSTOP == _ZMAX_
-        #define Y2_MAX_PIN Z_MAX_PIN
-      #elif Y2_USE_ENDSTOP == _ZSTOP_
-        #define Y2_MAX_PIN Z_STOP_PIN
-      #elif Y2_USE_ENDSTOP == _XDIAG_
-        #define Y2_MAX_PIN X_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _YDIAG_
-        #define Y2_MAX_PIN Y_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _ZDIAG_
-        #define Y2_MAX_PIN Z_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E0DIAG_
-        #define Y2_MAX_PIN E0_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E1DIAG_
-        #define Y2_MAX_PIN E1_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E2DIAG_
-        #define Y2_MAX_PIN E2_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E3DIAG_
-        #define Y2_MAX_PIN E3_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E4DIAG_
-        #define Y2_MAX_PIN E4_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E5DIAG_
-        #define Y2_MAX_PIN E5_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E6DIAG_
-        #define Y2_MAX_PIN E6_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E7DIAG_
-        #define Y2_MAX_PIN E7_DIAG_PIN
       #endif
     #endif
-    #ifndef Y2_MIN_ENDSTOP_INVERTING
-      #define Y2_MIN_ENDSTOP_INVERTING false
-    #endif
   #else
     #ifndef Y2_MIN_ENDSTOP_INVERTING
       #if Y2_USE_ENDSTOP == _XMIN_
         #define Y2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _XMAX_
         #define Y2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMIN_
         #define Y2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMAX_
         #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
-        #define Y2_MIN_ENDSTOP_INVERTING false
-      #endif
-    #endif
-    #if !defined(Y2_MIN_PIN) && !defined(Y2_STOP_PIN)
-      #if Y2_USE_ENDSTOP == _XMIN_
-        #define Y2_MIN_PIN X_MIN_PIN
-      #elif Y2_USE_ENDSTOP == _XMAX_
-        #define Y2_MIN_PIN X_MAX_PIN
-      #elif Y2_USE_ENDSTOP == _XSTOP_
-        #define Y2_MIN_PIN X_STOP_PIN
-      #elif Y2_USE_ENDSTOP == _YMIN_
-        #define Y2_MIN_PIN Y_MIN_PIN
-      #elif Y2_USE_ENDSTOP == _YMAX_
-        #define Y2_MIN_PIN Y_MAX_PIN
-      #elif Y2_USE_ENDSTOP == _YSTOP_
-        #define Y2_MIN_PIN Y_STOP_PIN
-      #elif Y2_USE_ENDSTOP == _ZMIN_
-        #define Y2_MIN_PIN Z_MIN_PIN
-      #elif Y2_USE_ENDSTOP == _ZMAX_
-        #define Y2_MIN_PIN Z_MAX_PIN
-      #elif Y2_USE_ENDSTOP == _ZSTOP_
-        #define Y2_MIN_PIN Z_STOP_PIN
-      #elif Y2_USE_ENDSTOP == _XDIAG_
-        #define Y2_MIN_PIN X_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _YDIAG_
-        #define Y2_MIN_PIN Y_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _ZDIAG_
-        #define Y2_MIN_PIN Z_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E0DIAG_
-        #define Y2_MIN_PIN E0_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E1DIAG_
-        #define Y2_MIN_PIN E1_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E2DIAG_
-        #define Y2_MIN_PIN E2_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E3DIAG_
-        #define Y2_MIN_PIN E3_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E4DIAG_
-        #define Y2_MIN_PIN E4_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E5DIAG_
-        #define Y2_MIN_PIN E5_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E6DIAG_
-        #define Y2_MIN_PIN E6_DIAG_PIN
-      #elif Y2_USE_ENDSTOP == _E7DIAG_
-        #define Y2_MIN_PIN E7_DIAG_PIN
       #endif
     #endif
-    #ifndef Y2_MAX_ENDSTOP_INVERTING
-      #define Y2_MAX_ENDSTOP_INVERTING false
-    #endif
+  #endif
+  #ifndef Y2_MAX_ENDSTOP_INVERTING
+    #define Y2_MAX_ENDSTOP_INVERTING false
+  #endif
+  #ifndef Y2_MIN_ENDSTOP_INVERTING
+    #define Y2_MIN_ENDSTOP_INVERTING false
   #endif
 #endif
 
 /**
  * Z_MULTI_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Z_MULTI_ENDSTOPS)
 
   #if Z_HOME_TO_MAX
     #ifndef Z2_MAX_ENDSTOP_INVERTING
@@ -1190,397 +1010,127 @@
       #elif Z2_USE_ENDSTOP == _XMAX_
         #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMIN_
         #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMAX_
         #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
-        #define Z2_MAX_ENDSTOP_INVERTING false
-      #endif
-    #endif
-    #if !defined(Z2_MAX_PIN) && !defined(Z2_STOP_PIN)
-      #if Z2_USE_ENDSTOP == _XMIN_
-        #define Z2_MAX_PIN X_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _XMAX_
-        #define Z2_MAX_PIN X_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _XSTOP_
-        #define Z2_MAX_PIN X_STOP_PIN
-      #elif Z2_USE_ENDSTOP == _YMIN_
-        #define Z2_MAX_PIN Y_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _YMAX_
-        #define Z2_MAX_PIN Y_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _YSTOP_
-        #define Z2_MAX_PIN Y_STOP_PIN
-      #elif Z2_USE_ENDSTOP == _ZMIN_
-        #define Z2_MAX_PIN Z_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _ZMAX_
-        #define Z2_MAX_PIN Z_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _ZSTOP_
-        #define Z2_MAX_PIN Z_STOP_PIN
-      #elif Z2_USE_ENDSTOP == _XDIAG_
-        #define Z2_MAX_PIN X_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _YDIAG_
-        #define Z2_MAX_PIN Y_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _ZDIAG_
-        #define Z2_MAX_PIN Z_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E0DIAG_
-        #define Z2_MAX_PIN E0_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E1DIAG_
-        #define Z2_MAX_PIN E1_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E2DIAG_
-        #define Z2_MAX_PIN E2_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E3DIAG_
-        #define Z2_MAX_PIN E3_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E4DIAG_
-        #define Z2_MAX_PIN E4_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E5DIAG_
-        #define Z2_MAX_PIN E5_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E6DIAG_
-        #define Z2_MAX_PIN E6_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E7DIAG_
-        #define Z2_MAX_PIN E7_DIAG_PIN
       #endif
     #endif
-    #ifndef Z2_MIN_ENDSTOP_INVERTING
-      #define Z2_MIN_ENDSTOP_INVERTING false
-    #endif
   #else
     #ifndef Z2_MIN_ENDSTOP_INVERTING
       #if Z2_USE_ENDSTOP == _XMIN_
         #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _XMAX_
         #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMIN_
         #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMAX_
         #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
-        #define Z2_MIN_ENDSTOP_INVERTING false
       #endif
     #endif
-    #ifndef Z2_MIN_PIN
-      #if Z2_USE_ENDSTOP == _XMIN_
-        #define Z2_MIN_PIN X_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _XMAX_
-        #define Z2_MIN_PIN X_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _XSTOP_
-        #define Z2_MIN_PIN X_STOP_PIN
-      #elif Z2_USE_ENDSTOP == _YMIN_
-        #define Z2_MIN_PIN Y_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _YMAX_
-        #define Z2_MIN_PIN Y_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _YSTOP_
-        #define Z2_MIN_PIN Y_STOP_PIN
-      #elif Z2_USE_ENDSTOP == _ZMIN_
-        #define Z2_MIN_PIN Z_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _ZMAX_
-        #define Z2_MIN_PIN Z_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _ZSTOP_
-        #define Z2_MIN_PIN Z_STOP_PIN
-      #elif Z2_USE_ENDSTOP == _XDIAG_
-        #define Z2_MIN_PIN X_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _YDIAG_
-        #define Z2_MIN_PIN Y_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _ZDIAG_
-        #define Z2_MIN_PIN Z_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E0DIAG_
-        #define Z2_MIN_PIN E0_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E1DIAG_
-        #define Z2_MIN_PIN E1_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E2DIAG_
-        #define Z2_MIN_PIN E2_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E3DIAG_
-        #define Z2_MIN_PIN E3_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E4DIAG_
-        #define Z2_MIN_PIN E4_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E5DIAG_
-        #define Z2_MIN_PIN E5_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E6DIAG_
-        #define Z2_MIN_PIN E6_DIAG_PIN
-      #elif Z2_USE_ENDSTOP == _E7DIAG_
-        #define Z2_MIN_PIN E7_DIAG_PIN
-      #endif
-    #endif
-    #ifndef Z2_MAX_ENDSTOP_INVERTING
-      #define Z2_MAX_ENDSTOP_INVERTING false
-    #endif
+  #endif
+  #ifndef Z2_MAX_ENDSTOP_INVERTING
+    #define Z2_MAX_ENDSTOP_INVERTING false
+  #endif
+  #ifndef Z2_MIN_ENDSTOP_INVERTING
+    #define Z2_MIN_ENDSTOP_INVERTING false
   #endif
 
   #if NUM_Z_STEPPERS >= 3
     #if Z_HOME_TO_MAX
       #ifndef Z3_MAX_ENDSTOP_INVERTING
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMIN_
           #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMAX_
           #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #else
-          #define Z3_MAX_ENDSTOP_INVERTING false
         #endif
       #endif
-      #ifndef Z3_MAX_PIN
-        #if Z3_USE_ENDSTOP == _XMIN_
-          #define Z3_MAX_PIN X_MIN_PIN
-        #elif Z3_USE_ENDSTOP == _XMAX_
-          #define Z3_MAX_PIN X_MAX_PIN
-        #elif Z3_USE_ENDSTOP == _XSTOP_
-          #define Z3_MAX_PIN X_STOP_PIN
-        #elif Z3_USE_ENDSTOP == _YMIN_
-          #define Z3_MAX_PIN Y_MIN_PIN
-        #elif Z3_USE_ENDSTOP == _YMAX_
-          #define Z3_MAX_PIN Y_MAX_PIN
-        #elif Z3_USE_ENDSTOP == _YSTOP_
-          #define Z3_MAX_PIN Y_STOP_PIN
-        #elif Z3_USE_ENDSTOP == _ZMIN_
-          #define Z3_MAX_PIN Z_MIN_PIN
-        #elif Z3_USE_ENDSTOP == _ZMAX_
-          #define Z3_MAX_PIN Z_MAX_PIN
-        #elif Z3_USE_ENDSTOP == _ZSTOP_
-          #define Z3_MAX_PIN Z_STOP_PIN
-        #elif Z3_USE_ENDSTOP == _XDIAG_
-          #define Z3_MAX_PIN X_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _YDIAG_
-          #define Z3_MAX_PIN Y_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _ZDIAG_
-          #define Z3_MAX_PIN Z_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E0DIAG_
-          #define Z3_MAX_PIN E0_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E1DIAG_
-          #define Z3_MAX_PIN E1_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E2DIAG_
-          #define Z3_MAX_PIN E2_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E3DIAG_
-          #define Z3_MAX_PIN E3_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E4DIAG_
-          #define Z3_MAX_PIN E4_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E5DIAG_
-          #define Z3_MAX_PIN E5_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E6DIAG_
-          #define Z3_MAX_PIN E6_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E7DIAG_
-          #define Z3_MAX_PIN E7_DIAG_PIN
-        #endif
-      #endif
-      #ifndef Z3_MIN_ENDSTOP_INVERTING
-        #define Z3_MIN_ENDSTOP_INVERTING false
-      #endif
     #else
       #ifndef Z3_MIN_ENDSTOP_INVERTING
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMIN_
           #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMAX_
           #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #else
-          #define Z3_MIN_ENDSTOP_INVERTING false
-        #endif
-      #endif
-      #ifndef Z3_MIN_PIN
-        #if Z3_USE_ENDSTOP == _XMIN_
-          #define Z3_MIN_PIN X_MIN_PIN
-        #elif Z3_USE_ENDSTOP == _XMAX_
-          #define Z3_MIN_PIN X_MAX_PIN
-        #elif Z3_USE_ENDSTOP == _XSTOP_
-          #define Z3_MIN_PIN X_STOP_PIN
-        #elif Z3_USE_ENDSTOP == _YMIN_
-          #define Z3_MIN_PIN Y_MIN_PIN
-        #elif Z3_USE_ENDSTOP == _YMAX_
-          #define Z3_MIN_PIN Y_MAX_PIN
-        #elif Z3_USE_ENDSTOP == _YSTOP_
-          #define Z3_MIN_PIN Y_STOP_PIN
-        #elif Z3_USE_ENDSTOP == _ZMIN_
-          #define Z3_MIN_PIN Z_MIN_PIN
-        #elif Z3_USE_ENDSTOP == _ZMAX_
-          #define Z3_MIN_PIN Z_MAX_PIN
-        #elif Z3_USE_ENDSTOP == _ZSTOP_
-          #define Z3_MIN_PIN Z_STOP_PIN
-        #elif Z3_USE_ENDSTOP == _XDIAG_
-          #define Z3_MIN_PIN X_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _YDIAG_
-          #define Z3_MIN_PIN Y_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _ZDIAG_
-          #define Z3_MIN_PIN Z_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E0DIAG_
-          #define Z3_MIN_PIN E0_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E1DIAG_
-          #define Z3_MIN_PIN E1_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E2DIAG_
-          #define Z3_MIN_PIN E2_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E3DIAG_
-          #define Z3_MIN_PIN E3_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E4DIAG_
-          #define Z3_MIN_PIN E4_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E5DIAG_
-          #define Z3_MIN_PIN E5_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E6DIAG_
-          #define Z3_MIN_PIN E6_DIAG_PIN
-        #elif Z3_USE_ENDSTOP == _E7DIAG_
-          #define Z3_MIN_PIN E7_DIAG_PIN
         #endif
       #endif
-      #ifndef Z3_MAX_ENDSTOP_INVERTING
-        #define Z3_MAX_ENDSTOP_INVERTING false
-      #endif
+    #endif
+    #ifndef Z3_MAX_ENDSTOP_INVERTING
+      #define Z3_MAX_ENDSTOP_INVERTING false
+    #endif
+    #ifndef Z3_MIN_ENDSTOP_INVERTING
+      #define Z3_MIN_ENDSTOP_INVERTING false
     #endif
   #endif
 
   #if NUM_Z_STEPPERS >= 4
     #if Z_HOME_TO_MAX
       #ifndef Z4_MAX_ENDSTOP_INVERTING
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMIN_
           #define Z4_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMAX_
           #define Z4_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #else
-          #define Z4_MAX_ENDSTOP_INVERTING false
-        #endif
-      #endif
-      #ifndef Z4_MAX_PIN
-        #if Z4_USE_ENDSTOP == _XMIN_
-          #define Z4_MAX_PIN X_MIN_PIN
-        #elif Z4_USE_ENDSTOP == _XMAX_
-          #define Z4_MAX_PIN X_MAX_PIN
-        #elif Z4_USE_ENDSTOP == _XSTOP_
-          #define Z4_MAX_PIN X_STOP_PIN
-        #elif Z4_USE_ENDSTOP == _YMIN_
-          #define Z4_MAX_PIN Y_MIN_PIN
-        #elif Z4_USE_ENDSTOP == _YMAX_
-          #define Z4_MAX_PIN Y_MAX_PIN
-        #elif Z4_USE_ENDSTOP == _YSTOP_
-          #define Z4_MAX_PIN Y_STOP_PIN
-        #elif Z4_USE_ENDSTOP == _ZMIN_
-          #define Z4_MAX_PIN Z_MIN_PIN
-        #elif Z4_USE_ENDSTOP == _ZMAX_
-          #define Z4_MAX_PIN Z_MAX_PIN
-        #elif Z4_USE_ENDSTOP == _ZSTOP_
-          #define Z4_MAX_PIN Z_STOP_PIN
-        #elif Z4_USE_ENDSTOP == _XDIAG_
-          #define Z4_MAX_PIN X_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _YDIAG_
-          #define Z4_MAX_PIN Y_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _ZDIAG_
-          #define Z4_MAX_PIN Z_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E0DIAG_
-          #define Z4_MAX_PIN E0_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E1DIAG_
-          #define Z4_MAX_PIN E1_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E2DIAG_
-          #define Z4_MAX_PIN E2_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E3DIAG_
-          #define Z4_MAX_PIN E3_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E4DIAG_
-          #define Z4_MAX_PIN E4_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E5DIAG_
-          #define Z4_MAX_PIN E5_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E6DIAG_
-          #define Z4_MAX_PIN E6_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E7DIAG_
-          #define Z4_MAX_PIN E7_DIAG_PIN
         #endif
       #endif
-      #ifndef Z4_MIN_ENDSTOP_INVERTING
-        #define Z4_MIN_ENDSTOP_INVERTING false
-      #endif
     #else
       #ifndef Z4_MIN_ENDSTOP_INVERTING
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMIN_
           #define Z4_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMAX_
           #define Z4_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #else
-          #define Z4_MIN_ENDSTOP_INVERTING false
-        #endif
-      #endif
-      #ifndef Z4_MIN_PIN
-        #if Z4_USE_ENDSTOP == _XMIN_
-          #define Z4_MIN_PIN X_MIN_PIN
-        #elif Z4_USE_ENDSTOP == _XMAX_
-          #define Z4_MIN_PIN X_MAX_PIN
-        #elif Z4_USE_ENDSTOP == _XSTOP_
-          #define Z4_MIN_PIN X_STOP_PIN
-        #elif Z4_USE_ENDSTOP == _YMIN_
-          #define Z4_MIN_PIN Y_MIN_PIN
-        #elif Z4_USE_ENDSTOP == _YMAX_
-          #define Z4_MIN_PIN Y_MAX_PIN
-        #elif Z4_USE_ENDSTOP == _YSTOP_
-          #define Z4_MIN_PIN Y_STOP_PIN
-        #elif Z4_USE_ENDSTOP == _ZMIN_
-          #define Z4_MIN_PIN Z_MIN_PIN
-        #elif Z4_USE_ENDSTOP == _ZMAX_
-          #define Z4_MIN_PIN Z_MAX_PIN
-        #elif Z4_USE_ENDSTOP == _ZSTOP_
-          #define Z4_MIN_PIN Z_STOP_PIN
-        #elif Z4_USE_ENDSTOP == _XDIAG_
-          #define Z4_MIN_PIN X_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _YDIAG_
-          #define Z4_MIN_PIN Y_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _ZDIAG_
-          #define Z4_MIN_PIN Z_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E0DIAG_
-          #define Z4_MIN_PIN E0_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E1DIAG_
-          #define Z4_MIN_PIN E1_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E2DIAG_
-          #define Z4_MIN_PIN E2_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E3DIAG_
-          #define Z4_MIN_PIN E3_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E4DIAG_
-          #define Z4_MIN_PIN E4_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E5DIAG_
-          #define Z4_MIN_PIN E5_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E6DIAG_
-          #define Z4_MIN_PIN E6_DIAG_PIN
-        #elif Z4_USE_ENDSTOP == _E7DIAG_
-          #define Z4_MIN_PIN E7_DIAG_PIN
         #endif
       #endif
-      #ifndef Z4_MAX_ENDSTOP_INVERTING
-        #define Z4_MAX_ENDSTOP_INVERTING false
-      #endif
+    #endif
+    #ifndef Z4_MAX_ENDSTOP_INVERTING
+      #define Z4_MAX_ENDSTOP_INVERTING false
+    #endif
+    #ifndef Z4_MIN_ENDSTOP_INVERTING
+      #define Z4_MIN_ENDSTOP_INVERTING false
     #endif
   #endif
 
 #endif // Z_MULTI_ENDSTOPS
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if ENABLED(USE_XMAX_PLUG)

commit 81f88fefdc1d32fade897ddd0daff604c92b5da0
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Oct 24 17:44:52 2022 -0400

    üêõ Fix FTDUI Status Screen Timeout (#24899)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5f54039392..9f41390db9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3682,27 +3682,27 @@
   #define HAS_POSITION_SHIFT 1
   #if IS_CARTESIAN
     #define HAS_HOME_OFFSET 1       // The home offset also shifts the coordinate space
     #define HAS_WORKSPACE_OFFSET 1  // Cumulative offset to workspace to save some calculation
     #define HAS_M206_COMMAND 1      // M206 sets the home offset for Cartesian machines
   #elif IS_SCARA
     #define HAS_SCARA_OFFSET 1      // The SCARA home offset applies only on G28
   #endif
 #endif
 
-#if HAS_MARLINUI_MENU
+#if EITHER(HAS_MARLINUI_MENU, TOUCH_UI_FTDI_EVE)
   // LCD timeout to status screen default is 15s
   #ifndef LCD_TIMEOUT_TO_STATUS
     #define LCD_TIMEOUT_TO_STATUS 15000
   #endif
   #if LCD_TIMEOUT_TO_STATUS
-    #define SCREENS_CAN_TIME_OUT 1
+    #define HAS_SCREEN_TIMEOUT 1
   #endif
 #endif
 
 // Add commands that need sub-codes to this list
 #if ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY)
   #define USE_GCODE_SUBCODES 1
 #endif
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)

commit 1b31a7cf2c1b5cc1f7b58041604fa8b8ebb3ffe7
Author: kurtis-potier-geofabrica <77456752+kurtis-potier-geofabrica@users.noreply.github.com>
Date:   Sat Oct 22 00:13:56 2022 -0400

    üö∏ Up to 3 MAX Thermocouples (#24898)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 21f0eed622..5f54039392 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -716,33 +716,33 @@
         #if PIN_EXISTS(MAX31855_MISO)
           #define TEMP_0_MISO_PIN MAX31855_MISO_PIN
         #elif PIN_EXISTS(MAX31855_DO)
           #define TEMP_0_MISO_PIN MAX31855_DO_PIN
         #endif
       #endif
       #if !PIN_EXISTS(TEMP_0_SCK) && PIN_EXISTS(MAX31855_SCK)
         #define TEMP_0_SCK_PIN MAX31855_SCK_PIN
       #endif
 
-    #elif TEMP_SENSOR_1_IS_MAX31865
-      #if !PIN_EXISTS(TEMP_1_MISO) // DO
+    #elif TEMP_SENSOR_0_IS_MAX31865
+      #if !PIN_EXISTS(TEMP_0_MISO) // DO
         #if PIN_EXISTS(MAX31865_MISO)
-          #define TEMP_1_MISO_PIN MAX31865_MISO_PIN
+          #define TEMP_0_MISO_PIN MAX31865_MISO_PIN
         #elif PIN_EXISTS(MAX31865_DO)
-          #define TEMP_1_MISO_PIN MAX31865_DO_PIN
+          #define TEMP_0_MISO_PIN MAX31865_DO_PIN
         #endif
       #endif
-      #if !PIN_EXISTS(TEMP_1_SCK) && PIN_EXISTS(MAX31865_SCK)
-        #define TEMP_1_SCK_PIN MAX31865_SCK_PIN
+      #if !PIN_EXISTS(TEMP_0_SCK) && PIN_EXISTS(MAX31865_SCK)
+        #define TEMP_0_SCK_PIN MAX31865_SCK_PIN
       #endif
-      #if !PIN_EXISTS(TEMP_1_MOSI) && PIN_EXISTS(MAX31865_MOSI) // MOSI for '65 only
-        #define TEMP_1_MOSI_PIN MAX31865_MOSI_PIN
+      #if !PIN_EXISTS(TEMP_0_MOSI) && PIN_EXISTS(MAX31865_MOSI) // MOSI for '65 only
+        #define TEMP_0_MOSI_PIN MAX31865_MOSI_PIN
       #endif
     #endif
 
     // Software SPI - enable if MISO/SCK are defined.
     #if PIN_EXISTS(TEMP_0_MISO) && PIN_EXISTS(TEMP_0_SCK) && DISABLED(TEMP_SENSOR_0_FORCE_HW_SPI)
       #if TEMP_SENSOR_0_IS_MAX31865 && !PIN_EXISTS(TEMP_0_MOSI)
         #error "TEMP_SENSOR_0 MAX31865 requires TEMP_0_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_0_FORCE_HW_SPI."
       #else
         #define TEMP_SENSOR_0_HAS_SPI_PINS 1
       #endif
@@ -812,20 +812,89 @@
     #if PIN_EXISTS(TEMP_1_MISO) && PIN_EXISTS(TEMP_1_SCK) && DISABLED(TEMP_SENSOR_1_FORCE_HW_SPI)
       #if TEMP_SENSOR_1_IS_MAX31865 && !PIN_EXISTS(TEMP_1_MOSI)
         #error "TEMP_SENSOR_1 MAX31865 requires TEMP_1_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_1_FORCE_HW_SPI."
       #else
         #define TEMP_SENSOR_1_HAS_SPI_PINS 1
       #endif
     #endif
 
   #endif // TEMP_SENSOR_IS_MAX_TC(1)
 
+  #if TEMP_SENSOR_IS_MAX_TC(2) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E2))
+
+    #if !PIN_EXISTS(TEMP_2_CS) // SS3, CS3
+      #if PIN_EXISTS(MAX6675_SS3)
+        #define TEMP_2_CS_PIN MAX6675_SS3_PIN
+      #elif PIN_EXISTS(MAX6675_CS)
+        #define TEMP_2_CS_PIN MAX6675_CS3_PIN
+      #elif PIN_EXISTS(MAX31855_SS3)
+        #define TEMP_2_CS_PIN MAX31855_SS3_PIN
+      #elif PIN_EXISTS(MAX31855_CS3)
+        #define TEMP_2_CS_PIN MAX31855_CS3_PIN
+      #elif PIN_EXISTS(MAX31865_SS3)
+        #define TEMP_2_CS_PIN MAX31865_SS3_PIN
+      #elif PIN_EXISTS(MAX31865_CS3)
+        #define TEMP_2_CS_PIN MAX31865_CS3_PIN
+      #endif
+    #endif
+
+    #if TEMP_SENSOR_2_IS_MAX6675
+      #if !PIN_EXISTS(TEMP_2_MISO) // DO
+        #if PIN_EXISTS(MAX6675_MISO)
+          #define TEMP_2_MISO_PIN MAX6675_MISO_PIN
+        #elif PIN_EXISTS(MAX6675_DO)
+          #define TEMP_2_MISO_PIN MAX6675_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_2_SCK) && PIN_EXISTS(MAX6675_SCK)
+        #define TEMP_2_SCK_PIN MAX6675_SCK_PIN
+      #endif
+
+    #elif TEMP_SENSOR_2_IS_MAX31855
+      #if !PIN_EXISTS(TEMP_2_MISO) // DO
+        #if PIN_EXISTS(MAX31855_MISO)
+          #define TEMP_2_MISO_PIN MAX31855_MISO_PIN
+        #elif PIN_EXISTS(MAX31855_DO)
+          #define TEMP_2_MISO_PIN MAX31855_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_2_SCK) && PIN_EXISTS(MAX31855_SCK)
+        #define TEMP_2_SCK_PIN MAX31855_SCK_PIN
+      #endif
+
+    #elif TEMP_SENSOR_2_IS_MAX31865
+      #if !PIN_EXISTS(TEMP_2_MISO) // DO
+        #if PIN_EXISTS(MAX31865_MISO)
+          #define TEMP_2_MISO_PIN MAX31865_MISO_PIN
+        #elif PIN_EXISTS(MAX31865_DO)
+          #define TEMP_2_MISO_PIN MAX31865_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_2_SCK) && PIN_EXISTS(MAX31865_SCK)
+        #define TEMP_2_SCK_PIN MAX31865_SCK_PIN
+      #endif
+      #if !PIN_EXISTS(TEMP_2_MOSI) && PIN_EXISTS(MAX31865_MOSI) // MOSI for '65 only
+        #define TEMP_2_MOSI_PIN MAX31865_MOSI_PIN
+      #endif
+    #endif
+
+    // Software SPI - enable if MISO/SCK are defined.
+    #if PIN_EXISTS(TEMP_2_MISO) && PIN_EXISTS(TEMP_2_SCK) && DISABLED(TEMP_SENSOR_2_FORCE_HW_SPI)
+      #if TEMP_SENSOR_2_IS_MAX31865 && !PIN_EXISTS(TEMP_2_MOSI)
+        #error "TEMP_SENSOR_2 MAX31865 requires TEMP_2_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_2_FORCE_HW_SPI."
+      #else
+        #define TEMP_SENSOR_2_HAS_SPI_PINS 1
+      #endif
+    #endif
+
+  #endif // TEMP_SENSOR_IS_MAX_TC(2)
+
   //
   // User-defined thermocouple libraries
   //
   // Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
   // to select a USER library for MAX6675, MAX31855, MAX31865
   //
   #if BOTH(HAS_MAX6675, LIB_MAX6675)
     #define USE_LIB_MAX6675 1
   #endif
   #if BOTH(HAS_MAX31855, LIB_MAX31855)

commit fd0c6fa153246e0ffa3a5b39b617c75f66857162
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 21 19:45:20 2022 -0500

    üîß Clean up unused ESP_WIFI pins

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 417ce4479a..21f0eed622 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2536,20 +2536,35 @@
 #undef HW_MSerial7
 #undef HW_MSerial8
 #undef HW_MSerial9
 #undef HW_MSerial10
 
 #undef _SERIAL_ID
 #undef _TMC_UART_IS
 #undef TMC_UART_IS
 #undef ANY_SERIAL_IS
 
+// Clean up unused ESP_WIFI pins
+#ifdef ESP_WIFI_MODULE_COM
+  #if !SERIAL_IN_USE(ESP_WIFI_MODULE_COM)
+    #undef ESP_WIFI_MODULE_COM
+    #undef ESP_WIFI_MODULE_BAUDRATE
+    #undef ESP_WIFI_MODULE_RESET_PIN
+    #undef ESP_WIFI_MODULE_ENABLE_PIN
+    #undef ESP_WIFI_MODULE_TXD_PIN
+    #undef ESP_WIFI_MODULE_RXD_PIN
+    #undef ESP_WIFI_MODULE_GPIO0_PIN
+    #undef ESP_WIFI_MODULE_GPIO2_PIN
+    #undef ESP_WIFI_MODULE_GPIO4_PIN
+  #endif
+#endif
+
 //
 // Endstops and bed probe
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (USES_Z_MIN_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)

commit 42d30ed102308f0c5cb04b70dc55f9f37012a157
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Thu Oct 20 15:23:22 2022 +1300

    üîß Some STM32 UART Sanity Checks (#24795)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bb9a1ac640..417ce4479a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2439,25 +2439,25 @@
 
 #if DISABLED(SENSORLESS_HOMING)
   #undef SENSORLESS_BACKOFF_MM
 #endif
 
 //
 // Set USING_HW_SERIALn flags for used Serial Ports
 //
 
 // Flag the indexed hardware serial ports in use
-#define SERIAL_IN_USE(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
-                          || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \
-                          || (defined(SERIAL_PORT_3)    && SERIAL_PORT_3 == N) \
-                          || (defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT == N) \
-                          || (defined(LCD_SERIAL_PORT)  && LCD_SERIAL_PORT == N) )
+#define SERIAL_IN_USE(N) (   (defined(SERIAL_PORT)      && N == SERIAL_PORT) \
+                          || (defined(SERIAL_PORT_2)    && N == SERIAL_PORT_2) \
+                          || (defined(SERIAL_PORT_3)    && N == SERIAL_PORT_3) \
+                          || (defined(MMU2_SERIAL_PORT) && N == MMU2_SERIAL_PORT) \
+                          || (defined(LCD_SERIAL_PORT)  && N == LCD_SERIAL_PORT) )
 
 // Flag the named hardware serial ports in use
 #define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && (CAT(HW_,A##_HARDWARE_SERIAL) == HW_Serial##N || CAT(HW_,A##_HARDWARE_SERIAL) == HW_MSerial##N))
 #define ANY_SERIAL_IS(N) (  SERIAL_IN_USE(N) \
                          || TMC_UART_IS(X,  N) || TMC_UART_IS(Y , N) || TMC_UART_IS(Z , N) \
                          || TMC_UART_IS(I,  N) || TMC_UART_IS(J , N) || TMC_UART_IS(K , N) \
                          || TMC_UART_IS(U,  N) || TMC_UART_IS(V , N) || TMC_UART_IS(W , N) \
                          || TMC_UART_IS(X2, N) || TMC_UART_IS(Y2, N) || TMC_UART_IS(Z2, N) || TMC_UART_IS(Z3, N) || TMC_UART_IS(Z4, N) \
                          || TMC_UART_IS(E0, N) || TMC_UART_IS(E1, N) || TMC_UART_IS(E2, N) || TMC_UART_IS(E3, N) || TMC_UART_IS(E4, N) )
 

commit e298266eff9a53dd0bdddf5488135681d09baa77
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 17 21:41:22 2022 -0500

    üé® CONF_SERIAL_IS => SERIAL_IN_USE

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 90ed750d4a..bb9a1ac640 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2439,29 +2439,29 @@
 
 #if DISABLED(SENSORLESS_HOMING)
   #undef SENSORLESS_BACKOFF_MM
 #endif
 
 //
 // Set USING_HW_SERIALn flags for used Serial Ports
 //
 
 // Flag the indexed hardware serial ports in use
-#define CONF_SERIAL_IS(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
+#define SERIAL_IN_USE(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
                           || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \
                           || (defined(SERIAL_PORT_3)    && SERIAL_PORT_3 == N) \
                           || (defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT == N) \
                           || (defined(LCD_SERIAL_PORT)  && LCD_SERIAL_PORT == N) )
 
 // Flag the named hardware serial ports in use
 #define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && (CAT(HW_,A##_HARDWARE_SERIAL) == HW_Serial##N || CAT(HW_,A##_HARDWARE_SERIAL) == HW_MSerial##N))
-#define ANY_SERIAL_IS(N) (  CONF_SERIAL_IS(N) \
+#define ANY_SERIAL_IS(N) (  SERIAL_IN_USE(N) \
                          || TMC_UART_IS(X,  N) || TMC_UART_IS(Y , N) || TMC_UART_IS(Z , N) \
                          || TMC_UART_IS(I,  N) || TMC_UART_IS(J , N) || TMC_UART_IS(K , N) \
                          || TMC_UART_IS(U,  N) || TMC_UART_IS(V , N) || TMC_UART_IS(W , N) \
                          || TMC_UART_IS(X2, N) || TMC_UART_IS(Y2, N) || TMC_UART_IS(Z2, N) || TMC_UART_IS(Z3, N) || TMC_UART_IS(Z4, N) \
                          || TMC_UART_IS(E0, N) || TMC_UART_IS(E1, N) || TMC_UART_IS(E2, N) || TMC_UART_IS(E3, N) || TMC_UART_IS(E4, N) )
 
 #define HW_Serial    501
 #define HW_Serial0   502
 #define HW_Serial1   503
 #define HW_Serial2   504
@@ -2474,21 +2474,21 @@
 #define HW_MSerial2  511
 #define HW_MSerial3  512
 #define HW_MSerial4  513
 #define HW_MSerial5  514
 #define HW_MSerial6  515
 #define HW_MSerial7  516
 #define HW_MSerial8  517
 #define HW_MSerial9  518
 #define HW_MSerial10 519
 
-#if CONF_SERIAL_IS(-1)
+#if SERIAL_IN_USE(-1)
   #define USING_HW_SERIALUSB 1
 #endif
 #if ANY_SERIAL_IS(0)
   #define USING_HW_SERIAL0 1
 #endif
 #if ANY_SERIAL_IS(1)
   #define USING_HW_SERIAL1 1
 #endif
 #if ANY_SERIAL_IS(2)
   #define USING_HW_SERIAL2 1

commit 5a80fc261736f6e88ec87b5544228383e2937894
Author: Dan Royer <dan@marginallyclever.com>
Date:   Sat Oct 15 22:03:42 2022 -0700

    üêõ Fix and improve Polargraph (#24847)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 45eccaade9..90ed750d4a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -148,21 +148,21 @@
 #if HAS_U_AXIS && !defined(U_BED_SIZE)
   #define U_BED_SIZE U_MAX_LENGTH
 #endif
 #if HAS_V_AXIS && !defined(V_BED_SIZE)
   #define V_BED_SIZE V_MAX_LENGTH
 #endif
 #if HAS_W_AXIS && !defined(W_BED_SIZE)
   #define W_BED_SIZE W_MAX_LENGTH
 #endif
 
-// Require 0,0 bed center for Delta and SCARA
+// Require 0,0 bed center for Delta, SCARA, and Polargraph
 #if IS_KINEMATIC
   #define BED_CENTER_AT_0_0
 #endif
 
 // Define center values for future use
 #define _X_HALF_BED ((X_BED_SIZE) / 2)
 #if HAS_Y_AXIS
   #define _Y_HALF_BED ((Y_BED_SIZE) / 2)
 #endif
 #if HAS_I_AXIS

commit 11f82445738ae885668f29c9fa7feb4c47e673ca
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sat Oct 1 09:19:51 2022 -0700

    üîß Thermistor (66) sanity-check (#24803)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c208466dd0..45eccaade9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2649,21 +2649,21 @@
 #undef IS_PROBE_PIN
 #undef IS_X2_ENDSTOP
 #undef IS_Y2_ENDSTOP
 #undef IS_Z2_ENDSTOP
 #undef IS_Z3_ENDSTOP
 #undef IS_Z4_ENDSTOP
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
-#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && !TEMP_SENSOR_IS_MAX_TC(P) && !TEMP_SENSOR_##P##_IS_DUMMY)
+#define HAS_ADC_TEST(P) (TEMP_SENSOR(P) && PIN_EXISTS(TEMP_##P) && !TEMP_SENSOR_IS_MAX_TC(P) && !TEMP_SENSOR_##P##_IS_DUMMY)
 #if HOTENDS > 0 && HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
 #endif
 #if HOTENDS > 1 && HAS_ADC_TEST(1)
   #define HAS_TEMP_ADC_1 1
 #endif
 #if HOTENDS > 2 && HAS_ADC_TEST(2)
   #define HAS_TEMP_ADC_2 1
 #endif
 #if HOTENDS > 3 && HAS_ADC_TEST(3)

commit 4f9ba7e9915b0f288998fccc36798ecdc2525309
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 6 23:03:15 2022 -0500

    üßë‚Äçüíª Microsteps to stepper.cpp

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 010cb79330..c208466dd0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3117,87 +3117,20 @@
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
 #if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_I_MS_PINS, HAS_J_MS_PINS, HAS_K_MS_PINS, HAS_U_MS_PINS, HAS_V_MS_PINS, HAS_W_MS_PINS, HAS_SOME_E_MS_PINS)
   #define HAS_MICROSTEPS 1
 #endif
 
-#if HAS_MICROSTEPS
-
-  // MS1 MS2 MS3 Stepper Driver Microstepping mode table
-  #ifndef MICROSTEP1
-    #define MICROSTEP1 LOW,LOW,LOW
-  #endif
-  #if ENABLED(HEROIC_STEPPER_DRIVERS)
-    #ifndef MICROSTEP128
-      #define MICROSTEP128 LOW,HIGH,LOW
-    #endif
-  #else
-    #ifndef MICROSTEP2
-      #define MICROSTEP2 HIGH,LOW,LOW
-    #endif
-    #ifndef MICROSTEP4
-      #define MICROSTEP4 LOW,HIGH,LOW
-    #endif
-  #endif
-  #ifndef MICROSTEP8
-    #define MICROSTEP8 HIGH,HIGH,LOW
-  #endif
-  #ifdef __SAM3X8E__
-    #if MB(ALLIGATOR)
-      #ifndef MICROSTEP16
-        #define MICROSTEP16 LOW,LOW,LOW
-      #endif
-      #ifndef MICROSTEP32
-        #define MICROSTEP32 HIGH,HIGH,LOW
-      #endif
-    #else
-      #ifndef MICROSTEP16
-        #define MICROSTEP16 HIGH,HIGH,LOW
-      #endif
-    #endif
-  #else
-    #ifndef MICROSTEP16
-      #define MICROSTEP16 HIGH,HIGH,LOW
-    #endif
-  #endif
-
-  #ifdef MICROSTEP1
-    #define HAS_MICROSTEP1 1
-  #endif
-  #ifdef MICROSTEP2
-    #define HAS_MICROSTEP2 1
-  #endif
-  #ifdef MICROSTEP4
-    #define HAS_MICROSTEP4 1
-  #endif
-  #ifdef MICROSTEP8
-    #define HAS_MICROSTEP8 1
-  #endif
-  #ifdef MICROSTEP16
-    #define HAS_MICROSTEP16 1
-  #endif
-  #ifdef MICROSTEP32
-    #define HAS_MICROSTEP32 1
-  #endif
-  #ifdef MICROSTEP64
-    #define HAS_MICROSTEP64 1
-  #endif
-  #ifdef MICROSTEP128
-    #define HAS_MICROSTEP128 1
-  #endif
-
-#endif // HAS_MICROSTEPS
-
 /**
  * Heater signal inversion defaults
  */
 
 #if HAS_HEATER_0 && !defined(HEATER_0_INVERTING)
   #define HEATER_0_INVERTING false
 #endif
 #if HAS_HEATER_1 && !defined(HEATER_1_INVERTING)
   #define HEATER_1_INVERTING false
 #endif

commit b229fba98ba86d44061f094ab865a432d0c802aa
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Tue Aug 30 02:52:02 2022 +0300

    üêõ Fix back button (#24694)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8375ac661c..010cb79330 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3762,24 +3762,20 @@
     #else
       #define LCD_HEIGHT TERN(IS_ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
 
-#if DISABLED(DISABLE_ENCODER) && ANY(HAS_ROTARY_ENCODER, HAS_ADC_BUTTONS) && ANY(TFT_CLASSIC_UI, TFT_COLOR_UI)
-  #define HAS_BACK_ITEM 1
-#endif
-
 #if PIN_EXISTS(SAFE_POWER) && DISABLED(DISABLE_DRIVER_SAFE_POWER_PROTECT)
   #define HAS_DRIVER_SAFE_POWER_PROTECT 1
 #endif
 
 #if ANY(ENDSTOPPULLDOWNS, ENDSTOPPULLDOWN_ZMIN_PROBE, \
     ENDSTOPPULLDOWN_XMIN, ENDSTOPPULLDOWN_YMIN, ENDSTOPPULLDOWN_ZMIN, \
     ENDSTOPPULLDOWN_IMIN, ENDSTOPPULLDOWN_JMIN, ENDSTOPPULLDOWN_KMIN, \
     ENDSTOPPULLDOWN_XMAX, ENDSTOPPULLDOWN_YMAX, ENDSTOPPULLDOWN_ZMAX, \
     ENDSTOPPULLDOWN_IMAX, ENDSTOPPULLDOWN_JMAX, ENDSTOPPULLDOWN_KMAX, \
     POWER_LOSS_PULLDOWN, CALIBRATION_PIN_PULLDOWN, FIL_RUNOUT_PULLDOWN, \

commit ace358327deba7a166f344266ea0c7d062d5ac55
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Thu Aug 25 16:14:50 2022 -0700

    üö∏ Up to 10 Preheat Constants (#24636)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ea6c1f93bf..8375ac661c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3299,21 +3299,29 @@
     #define COOLER_INVERTING true
   #endif
   #define WRITE_HEATER_COOLER(v) WRITE(COOLER_PIN, (v) ^ COOLER_INVERTING)
 #endif
 
 #if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER || HAS_COOLER
   #define HAS_TEMPERATURE 1
 #endif
 
 #if HAS_TEMPERATURE && ANY(HAS_MARLINUI_MENU, HAS_DWIN_E3V2, HAS_DGUS_LCD_CLASSIC)
-  #ifdef PREHEAT_6_LABEL
+  #ifdef PREHEAT_10_LABEL
+    #define PREHEAT_COUNT 10
+  #elif defined(PREHEAT_9_LABEL)
+    #define PREHEAT_COUNT 9
+  #elif defined(PREHEAT_8_LABEL)
+    #define PREHEAT_COUNT 8
+  #elif defined(PREHEAT_7_LABEL)
+    #define PREHEAT_COUNT 7
+  #elif defined(PREHEAT_6_LABEL)
     #define PREHEAT_COUNT 6
   #elif defined(PREHEAT_5_LABEL)
     #define PREHEAT_COUNT 5
   #elif defined(PREHEAT_4_LABEL)
     #define PREHEAT_COUNT 4
   #elif defined(PREHEAT_3_LABEL)
     #define PREHEAT_COUNT 3
   #elif defined(PREHEAT_2_LABEL)
     #define PREHEAT_COUNT 2
   #elif defined(PREHEAT_1_LABEL)

commit 2f91154cbdcec3b81da9913bdd16556e8c775d06
Author: EvilGremlin <22657714+EvilGremlin@users.noreply.github.com>
Date:   Thu Aug 25 20:16:55 2022 +0300

    ‚ôªÔ∏è Display sleep minutes, encoder disable option (#24618)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 650c420532..ea6c1f93bf 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3754,20 +3754,24 @@
     #else
       #define LCD_HEIGHT TERN(IS_ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
 
+#if DISABLED(DISABLE_ENCODER) && ANY(HAS_ROTARY_ENCODER, HAS_ADC_BUTTONS) && ANY(TFT_CLASSIC_UI, TFT_COLOR_UI)
+  #define HAS_BACK_ITEM 1
+#endif
+
 #if PIN_EXISTS(SAFE_POWER) && DISABLED(DISABLE_DRIVER_SAFE_POWER_PROTECT)
   #define HAS_DRIVER_SAFE_POWER_PROTECT 1
 #endif
 
 #if ANY(ENDSTOPPULLDOWNS, ENDSTOPPULLDOWN_ZMIN_PROBE, \
     ENDSTOPPULLDOWN_XMIN, ENDSTOPPULLDOWN_YMIN, ENDSTOPPULLDOWN_ZMIN, \
     ENDSTOPPULLDOWN_IMIN, ENDSTOPPULLDOWN_JMIN, ENDSTOPPULLDOWN_KMIN, \
     ENDSTOPPULLDOWN_XMAX, ENDSTOPPULLDOWN_YMAX, ENDSTOPPULLDOWN_ZMAX, \
     ENDSTOPPULLDOWN_IMAX, ENDSTOPPULLDOWN_JMAX, ENDSTOPPULLDOWN_KMAX, \
     POWER_LOSS_PULLDOWN, CALIBRATION_PIN_PULLDOWN, FIL_RUNOUT_PULLDOWN, \

commit 1bed10c38075a15bfec380c9c7763fea336e787e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Aug 4 02:38:15 2022 -0500

    üîß Config INI, dump options (#24528)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1c67a43ed4..650c420532 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -674,21 +674,21 @@
     #endif
   #endif
 #endif
 
 /**
  * Compatibility layer for MAX (SPI) temp boards
  */
 #if HAS_MAX_TC
 
   // Translate old _SS, _CS, _SCK, _DO, _DI, _MISO, and _MOSI PIN defines.
-  #if TEMP_SENSOR_0_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && REDUNDANT_TEMP_MATCH(SOURCE, E1))
+  #if TEMP_SENSOR_IS_MAX_TC(0) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E1))
 
     #if !PIN_EXISTS(TEMP_0_CS) // SS, CS
       #if PIN_EXISTS(MAX6675_SS)
         #define TEMP_0_CS_PIN MAX6675_SS_PIN
       #elif PIN_EXISTS(MAX6675_CS)
         #define TEMP_0_CS_PIN MAX6675_CS_PIN
       #elif PIN_EXISTS(MAX31855_SS)
         #define TEMP_0_CS_PIN MAX31855_SS_PIN
       #elif PIN_EXISTS(MAX31855_CS)
         #define TEMP_0_CS_PIN MAX31855_CS_PIN
@@ -741,23 +741,23 @@
 
     // Software SPI - enable if MISO/SCK are defined.
     #if PIN_EXISTS(TEMP_0_MISO) && PIN_EXISTS(TEMP_0_SCK) && DISABLED(TEMP_SENSOR_0_FORCE_HW_SPI)
       #if TEMP_SENSOR_0_IS_MAX31865 && !PIN_EXISTS(TEMP_0_MOSI)
         #error "TEMP_SENSOR_0 MAX31865 requires TEMP_0_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_0_FORCE_HW_SPI."
       #else
         #define TEMP_SENSOR_0_HAS_SPI_PINS 1
       #endif
     #endif
 
-  #endif // TEMP_SENSOR_0_IS_MAX_TC
+  #endif // TEMP_SENSOR_IS_MAX_TC(0)
 
-  #if TEMP_SENSOR_1_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && REDUNDANT_TEMP_MATCH(SOURCE, E1))
+  #if TEMP_SENSOR_IS_MAX_TC(1) || (TEMP_SENSOR_IS_MAX_TC(REDUNDANT) && REDUNDANT_TEMP_MATCH(SOURCE, E1))
 
     #if !PIN_EXISTS(TEMP_1_CS) // SS2, CS2
       #if PIN_EXISTS(MAX6675_SS2)
         #define TEMP_1_CS_PIN MAX6675_SS2_PIN
       #elif PIN_EXISTS(MAX6675_CS)
         #define TEMP_1_CS_PIN MAX6675_CS2_PIN
       #elif PIN_EXISTS(MAX31855_SS2)
         #define TEMP_1_CS_PIN MAX31855_SS2_PIN
       #elif PIN_EXISTS(MAX31855_CS2)
         #define TEMP_1_CS_PIN MAX31855_CS2_PIN
@@ -810,21 +810,21 @@
 
     // Software SPI - enable if MISO/SCK are defined.
     #if PIN_EXISTS(TEMP_1_MISO) && PIN_EXISTS(TEMP_1_SCK) && DISABLED(TEMP_SENSOR_1_FORCE_HW_SPI)
       #if TEMP_SENSOR_1_IS_MAX31865 && !PIN_EXISTS(TEMP_1_MOSI)
         #error "TEMP_SENSOR_1 MAX31865 requires TEMP_1_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_1_FORCE_HW_SPI."
       #else
         #define TEMP_SENSOR_1_HAS_SPI_PINS 1
       #endif
     #endif
 
-  #endif // TEMP_SENSOR_1_IS_MAX_TC
+  #endif // TEMP_SENSOR_IS_MAX_TC(1)
 
   //
   // User-defined thermocouple libraries
   //
   // Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
   // to select a USER library for MAX6675, MAX31855, MAX31865
   //
   #if BOTH(HAS_MAX6675, LIB_MAX6675)
     #define USE_LIB_MAX6675 1
   #endif
@@ -2649,21 +2649,21 @@
 #undef IS_PROBE_PIN
 #undef IS_X2_ENDSTOP
 #undef IS_Y2_ENDSTOP
 #undef IS_Z2_ENDSTOP
 #undef IS_Z3_ENDSTOP
 #undef IS_Z4_ENDSTOP
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
-#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && NONE(TEMP_SENSOR_##P##_IS_MAX_TC, TEMP_SENSOR_##P##_IS_DUMMY))
+#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && !TEMP_SENSOR_IS_MAX_TC(P) && !TEMP_SENSOR_##P##_IS_DUMMY)
 #if HOTENDS > 0 && HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
 #endif
 #if HOTENDS > 1 && HAS_ADC_TEST(1)
   #define HAS_TEMP_ADC_1 1
 #endif
 #if HOTENDS > 2 && HAS_ADC_TEST(2)
   #define HAS_TEMP_ADC_2 1
 #endif
 #if HOTENDS > 3 && HAS_ADC_TEST(3)
@@ -2693,21 +2693,21 @@
 #if HAS_ADC_TEST(COOLER)
   #define HAS_TEMP_ADC_COOLER 1
 #endif
 #if HAS_ADC_TEST(BOARD)
   #define HAS_TEMP_ADC_BOARD 1
 #endif
 #if HAS_ADC_TEST(REDUNDANT)
   #define HAS_TEMP_ADC_REDUNDANT 1
 #endif
 
-#define HAS_TEMP(N) ANY(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_MAX_TC, TEMP_SENSOR_##N##_IS_DUMMY)
+#define HAS_TEMP(N) (TEMP_SENSOR_IS_MAX_TC(N) || EITHER(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_DUMMY))
 #if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
 #if HAS_TEMP(BED)
   #define HAS_TEMP_BED 1
 #endif
 #if HAS_TEMP(CHAMBER)
   #define HAS_TEMP_CHAMBER 1
 #endif
 #if HAS_TEMP(PROBE)

commit 007af4776880fda761e925bce383ac41a7769833
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jul 22 21:59:00 2022 -0500

    ‚ú® Reinstate JyersUI

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7d2009dc8f..1c67a43ed4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3423,21 +3423,21 @@
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_LCD_PROUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_LCD_PROUI, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif

commit 5f2908a117ab45cf9e5a03a39e499979a40bf0f3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jul 18 19:53:36 2022 -0500

    ‚ôªÔ∏è Small sound / buzz refactor (#24520)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 517e95c83e..7d2009dc8f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3557,46 +3557,50 @@
   #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
 #undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
 #if PIN_EXISTS(BEEPER)
   #define HAS_BEEPER 1
 #endif
-#if ANY(HAS_BEEPER, LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
-  #define HAS_BUZZER 1
+#if ANY(IS_TFTGLCD_PANEL, PCA9632_BUZZER, LCD_USE_I2C_BUZZER)
+  #define USE_MARLINUI_BUZZER 1
+#endif
+#if EITHER(HAS_BEEPER, USE_MARLINUI_BUZZER)
+  #define HAS_SOUND 1
 #endif
 
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif
-#elif HAS_BUZZER
+#elif HAS_SOUND
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 5000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
 #endif
 
-#if HAS_BUZZER
+#if HAS_SOUND
   #if LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
     #define HAS_CHIRP 1
   #endif
 #else
   #undef SOUND_MENU_ITEM   // No buzzer menu item without a buzzer
+  #undef SOUND_ON_DEFAULT
 #endif
 
 /**
  * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
  */
 #if HAS_MARLINUI_U8GLIB
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SD_SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI

commit 05a7be7b25e3659fe10da7c4090765250dc2fdd9
Author: Christophe Huriaux <c.huriaux@gmail.com>
Date:   Sat Jul 16 23:35:40 2022 +0200

    ‚ú® eMotion-Tech eMotronic (Micro-Delta rework) (#24488)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5f9ab3dc7d..517e95c83e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -464,20 +464,22 @@
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)
   #define _LCD_CONTRAST_INIT 150
 #elif ENABLED(ZONESTAR_12864OLED)
   #define _LCD_CONTRAST_MIN   64
   #define _LCD_CONTRAST_INIT 128
+#elif ENABLED(EMOTION_TECH_LCD)
+  #define _LCD_CONTRAST_INIT 140
 #elif IS_TFTGLCD_PANEL
   #define _LCD_CONTRAST_INIT 250
 #endif
 
 #ifdef _LCD_CONTRAST_INIT
   #define HAS_LCD_CONTRAST 1
   #ifndef LCD_CONTRAST_MIN
     #ifdef _LCD_CONTRAST_MIN
       #define LCD_CONTRAST_MIN _LCD_CONTRAST_MIN
     #else

commit 3f4e4a4d891e3c4b73ab80aedec46e69c1b59f0d
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Jul 13 22:16:22 2022 -0500

    üî• Drop STM L64** drivers, STEVAL_3DP001V1 (#24427)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3a5470b03e..5f9ab3dc7d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1603,240 +1603,240 @@
 #if PIN_EXISTS(X_DIR)
   #define HAS_X_DIR 1
 #endif
 #if PIN_EXISTS(X_STEP)
   #define HAS_X_STEP 1
 #endif
 #if PIN_EXISTS(X_MS1)
   #define HAS_X_MS_PINS 1
 #endif
 
-#if PIN_EXISTS(X2_ENABLE) || AXIS_IS_L64XX(X2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2))
+#if PIN_EXISTS(X2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2))
   #define HAS_X2_ENABLE 1
 #endif
 #if PIN_EXISTS(X2_DIR)
   #define HAS_X2_DIR 1
 #endif
 #if PIN_EXISTS(X2_STEP)
   #define HAS_X2_STEP 1
 #endif
 #if PIN_EXISTS(X2_MS1)
   #define HAS_X2_MS_PINS 1
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #if !defined(DISABLE_INACTIVE_X) && ENABLED(DISABLE_X)
   #define DISABLE_INACTIVE_X 1
 #endif
 
 #if HAS_Y_AXIS
-  #if PIN_EXISTS(Y_ENABLE) || AXIS_IS_L64XX(Y) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
+  #if PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
     #define HAS_Y_ENABLE 1
   #endif
   #if PIN_EXISTS(Y_DIR)
     #define HAS_Y_DIR 1
   #endif
   #if PIN_EXISTS(Y_STEP)
     #define HAS_Y_STEP 1
   #endif
   #if PIN_EXISTS(Y_MS1)
     #define HAS_Y_MS_PINS 1
   #endif
 
-  #if PIN_EXISTS(Y2_ENABLE) || AXIS_IS_L64XX(Y2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
+  #if PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
     #define HAS_Y2_ENABLE 1
   #endif
   #if PIN_EXISTS(Y2_DIR)
     #define HAS_Y2_DIR 1
   #endif
   #if PIN_EXISTS(Y2_STEP)
     #define HAS_Y2_STEP 1
   #endif
   #if PIN_EXISTS(Y2_MS1)
     #define HAS_Y2_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_Y) && ENABLED(DISABLE_Y)
     #define DISABLE_INACTIVE_Y 1
   #endif
 #else
   #undef DISABLE_INACTIVE_Y
 #endif
 
 #if HAS_Z_AXIS
-  #if PIN_EXISTS(Z_ENABLE) || AXIS_IS_L64XX(Z) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
+  #if PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
     #define HAS_Z_ENABLE 1
   #endif
   #if PIN_EXISTS(Z_DIR)
     #define HAS_Z_DIR 1
   #endif
   #if PIN_EXISTS(Z_STEP)
     #define HAS_Z_STEP 1
   #endif
   #if PIN_EXISTS(Z_MS1)
     #define HAS_Z_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_Z) && ENABLED(DISABLE_Z)
     #define DISABLE_INACTIVE_Z 1
   #endif
 #else
   #undef DISABLE_INACTIVE_Z
 #endif
 
 #if NUM_Z_STEPPERS >= 2
-  #if PIN_EXISTS(Z2_ENABLE) || AXIS_IS_L64XX(Z2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
+  #if PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
     #define HAS_Z2_ENABLE 1
   #endif
   #if PIN_EXISTS(Z2_DIR)
     #define HAS_Z2_DIR 1
   #endif
   #if PIN_EXISTS(Z2_STEP)
     #define HAS_Z2_STEP 1
   #endif
   #if PIN_EXISTS(Z2_MS1)
     #define HAS_Z2_MS_PINS 1
   #endif
 #endif
 
 #if NUM_Z_STEPPERS >= 3
-  #if PIN_EXISTS(Z3_ENABLE) || AXIS_IS_L64XX(Z3) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
+  #if PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
     #define HAS_Z3_ENABLE 1
   #endif
   #if PIN_EXISTS(Z3_DIR)
     #define HAS_Z3_DIR 1
   #endif
   #if PIN_EXISTS(Z3_STEP)
     #define HAS_Z3_STEP 1
   #endif
   #if PIN_EXISTS(Z3_MS1)
     #define HAS_Z3_MS_PINS 1
   #endif
 #endif
 
 #if NUM_Z_STEPPERS >= 4
-  #if PIN_EXISTS(Z4_ENABLE) || AXIS_IS_L64XX(Z4) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
+  #if PIN_EXISTS(Z4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
     #define HAS_Z4_ENABLE 1
   #endif
   #if PIN_EXISTS(Z4_DIR)
     #define HAS_Z4_DIR 1
   #endif
   #if PIN_EXISTS(Z4_STEP)
     #define HAS_Z4_STEP 1
   #endif
   #if PIN_EXISTS(Z4_MS1)
     #define HAS_Z4_MS_PINS 1
   #endif
 #endif
 
 #if HAS_I_AXIS
-  #if PIN_EXISTS(I_ENABLE) || AXIS_IS_L64XX(I) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(I))
+  #if PIN_EXISTS(I_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(I))
     #define HAS_I_ENABLE 1
   #endif
   #if PIN_EXISTS(I_DIR)
     #define HAS_I_DIR 1
   #endif
   #if PIN_EXISTS(I_STEP)
     #define HAS_I_STEP 1
   #endif
   #if PIN_EXISTS(I_MS1)
     #define HAS_I_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_I) && ENABLED(DISABLE_I)
     #define DISABLE_INACTIVE_I 1
   #endif
 #else
   #undef DISABLE_INACTIVE_I
 #endif
 
 #if HAS_J_AXIS
-  #if PIN_EXISTS(J_ENABLE) || AXIS_IS_L64XX(J) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(J))
+  #if PIN_EXISTS(J_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(J))
     #define HAS_J_ENABLE 1
   #endif
   #if PIN_EXISTS(J_DIR)
     #define HAS_J_DIR 1
   #endif
   #if PIN_EXISTS(J_STEP)
     #define HAS_J_STEP 1
   #endif
   #if PIN_EXISTS(J_MS1)
     #define HAS_J_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_J) && ENABLED(DISABLE_J)
     #define DISABLE_INACTIVE_J 1
   #endif
 #else
   #undef DISABLE_INACTIVE_J
 #endif
 
 #if HAS_K_AXIS
-  #if PIN_EXISTS(K_ENABLE) || AXIS_IS_L64XX(K) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(K))
+  #if PIN_EXISTS(K_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(K))
     #define HAS_K_ENABLE 1
   #endif
   #if PIN_EXISTS(K_DIR)
     #define HAS_K_DIR 1
   #endif
   #if PIN_EXISTS(K_STEP)
     #define HAS_K_STEP 1
   #endif
   #if PIN_EXISTS(K_MS1)
     #define HAS_K_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_K) && ENABLED(DISABLE_K)
     #define DISABLE_INACTIVE_K 1
   #endif
 #else
   #undef DISABLE_INACTIVE_K
 #endif
 
 #if HAS_U_AXIS
-  #if PIN_EXISTS(U_ENABLE) || AXIS_IS_L64XX(U) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(U))
+  #if PIN_EXISTS(U_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(U))
     #define HAS_U_ENABLE 1
   #endif
   #if PIN_EXISTS(U_DIR)
     #define HAS_U_DIR 1
   #endif
   #if PIN_EXISTS(U_STEP)
     #define HAS_U_STEP 1
   #endif
   #if PIN_EXISTS(U_MS1)
     #define HAS_U_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_U) && ENABLED(DISABLE_U)
     #define DISABLE_INACTIVE_U 1
   #endif
 #else
   #undef DISABLE_INACTIVE_U
 #endif
 
 #if HAS_V_AXIS
-  #if PIN_EXISTS(V_ENABLE) || AXIS_IS_L64XX(V) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(V))
+  #if PIN_EXISTS(V_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(V))
     #define HAS_V_ENABLE 1
   #endif
   #if PIN_EXISTS(V_DIR)
     #define HAS_V_DIR 1
   #endif
   #if PIN_EXISTS(V_STEP)
     #define HAS_V_STEP 1
   #endif
   #if PIN_EXISTS(V_MS1)
     #define HAS_V_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_V) && ENABLED(DISABLE_V)
     #define DISABLE_INACTIVE_V 1
   #endif
 #else
   #undef DISABLE_INACTIVE_V
 #endif
 
 #if HAS_W_AXIS
-  #if PIN_EXISTS(W_ENABLE) || AXIS_IS_L64XX(W) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(W))
+  #if PIN_EXISTS(W_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(W))
     #define HAS_W_ENABLE 1
   #endif
   #if PIN_EXISTS(W_DIR)
     #define HAS_W_DIR 1
   #endif
   #if PIN_EXISTS(W_STEP)
     #define HAS_W_STEP 1
   #endif
   #if PIN_EXISTS(W_MS1)
     #define HAS_W_MS_PINS 1
@@ -1844,125 +1844,125 @@
   #if !defined(DISABLE_INACTIVE_W) && ENABLED(DISABLE_W)
     #define DISABLE_INACTIVE_W 1
   #endif
 #else
   #undef DISABLE_INACTIVE_W
 #endif
 
 // Extruder steppers and solenoids
 #if HAS_EXTRUDERS
 
-  #if PIN_EXISTS(E0_ENABLE) || AXIS_IS_L64XX(E0) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
+  #if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
     #define HAS_E0_ENABLE 1
   #endif
   #if PIN_EXISTS(E0_DIR)
     #define HAS_E0_DIR 1
   #endif
   #if PIN_EXISTS(E0_STEP)
     #define HAS_E0_STEP 1
   #endif
   #if PIN_EXISTS(E0_MS1)
     #define HAS_E0_MS_PINS 1
   #endif
 
   #if E_STEPPERS > 1 || ENABLED(E_DUAL_STEPPER_DRIVERS)
-    #if PIN_EXISTS(E1_ENABLE) || AXIS_IS_L64XX(E1) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
+    #if PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
       #define HAS_E1_ENABLE 1
     #endif
     #if PIN_EXISTS(E1_DIR)
       #define HAS_E1_DIR 1
     #endif
     #if PIN_EXISTS(E1_STEP)
       #define HAS_E1_STEP 1
     #endif
     #if PIN_EXISTS(E1_MS1)
       #define HAS_E1_MS_PINS 1
     #endif
   #endif
 
   #if E_STEPPERS > 2
-    #if PIN_EXISTS(E2_ENABLE) || AXIS_IS_L64XX(E2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
+    #if PIN_EXISTS(E2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
       #define HAS_E2_ENABLE 1
     #endif
     #if PIN_EXISTS(E2_DIR)
       #define HAS_E2_DIR 1
     #endif
     #if PIN_EXISTS(E2_STEP)
       #define HAS_E2_STEP 1
     #endif
     #if PIN_EXISTS(E2_MS1)
       #define HAS_E2_MS_PINS 1
     #endif
   #endif
 
   #if E_STEPPERS > 3
-    #if PIN_EXISTS(E3_ENABLE) || AXIS_IS_L64XX(E3) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
+    #if PIN_EXISTS(E3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
       #define HAS_E3_ENABLE 1
     #endif
     #if PIN_EXISTS(E3_DIR)
       #define HAS_E3_DIR 1
     #endif
     #if PIN_EXISTS(E3_STEP)
       #define HAS_E3_STEP 1
     #endif
     #if PIN_EXISTS(E3_MS1)
       #define HAS_E3_MS_PINS 1
     #endif
   #endif
 
   #if E_STEPPERS > 4
-    #if PIN_EXISTS(E4_ENABLE) || AXIS_IS_L64XX(E4) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
+    #if PIN_EXISTS(E4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
       #define HAS_E4_ENABLE 1
     #endif
     #if PIN_EXISTS(E4_DIR)
       #define HAS_E4_DIR 1
     #endif
     #if PIN_EXISTS(E4_STEP)
       #define HAS_E4_STEP 1
     #endif
     #if PIN_EXISTS(E4_MS1)
       #define HAS_E4_MS_PINS 1
     #endif
   #endif
 
   #if E_STEPPERS > 5
-    #if PIN_EXISTS(E5_ENABLE) || AXIS_IS_L64XX(E5) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
+    #if PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
       #define HAS_E5_ENABLE 1
     #endif
     #if PIN_EXISTS(E5_DIR)
       #define HAS_E5_DIR 1
     #endif
     #if PIN_EXISTS(E5_STEP)
       #define HAS_E5_STEP 1
     #endif
     #if PIN_EXISTS(E5_MS1)
       #define HAS_E5_MS_PINS 1
     #endif
   #endif
 
   #if E_STEPPERS > 6
-    #if PIN_EXISTS(E6_ENABLE) || AXIS_IS_L64XX(E6) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
+    #if PIN_EXISTS(E6_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
       #define HAS_E6_ENABLE 1
     #endif
     #if PIN_EXISTS(E6_DIR)
       #define HAS_E6_DIR 1
     #endif
     #if PIN_EXISTS(E6_STEP)
       #define HAS_E6_STEP 1
     #endif
     #if PIN_EXISTS(E6_MS1)
       #define HAS_E6_MS_PINS 1
     #endif
   #endif
 
   #if E_STEPPERS > 7
-    #if PIN_EXISTS(E7_ENABLE) || AXIS_IS_L64XX(E7) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
+    #if PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
       #define HAS_E7_ENABLE 1
     #endif
     #if PIN_EXISTS(E7_DIR)
       #define HAS_E7_DIR 1
     #endif
     #if PIN_EXISTS(E7_STEP)
       #define HAS_E7_STEP 1
     #endif
     #if PIN_EXISTS(E7_MS1)
       #define HAS_E7_MS_PINS 1

commit 2dc543c4f58c39e6cdf7a4a001c15100268cdf46
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 13 21:22:53 2022 -0500

    üé® ANY => EITHER

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index dfccd9b8f5..3a5470b03e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -41,21 +41,21 @@
 #if BOTH(HAS_JUNCTION_DEVIATION, LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
   #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION, QSPI_EEPROM)
     #define USE_EMULATED_EEPROM 1
-  #elif ANY(I2C_EEPROM, SPI_EEPROM)
+  #elif EITHER(I2C_EEPROM, SPI_EEPROM)
     #define USE_WIRED_EEPROM    1
   #elif ENABLED(IIC_BL24CXX_EEPROM)
     // nothing
   #else
     #define USE_FALLBACK_EEPROM 1
   #endif
 #else
   #undef I2C_EEPROM
   #undef SPI_EEPROM
   #undef QSPI_EEPROM

commit f73fad1b2fa6e70b3d632969ecf2773bee826643
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 6 19:34:45 2022 -0500

    üî• Remove JyersUI (#24459)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0f4cf1381a..dfccd9b8f5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3421,21 +3421,21 @@
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_LCD_PROUI, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_LCD_PROUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
@@ -3534,21 +3534,21 @@
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
-#elif DISABLED(DWIN_CREALITY_LCD_JYERSUI)
+#else
   #undef MESH_MIN_X
   #undef MESH_MIN_Y
   #undef MESH_MAX_X
   #undef MESH_MAX_Y
 #endif
 
 #define _POINT_COUNT (defined(PROBE_PT_1_X) + defined(PROBE_PT_2_X) + defined(PROBE_PT_3_X) + defined(PROBE_PT_1_Y) + defined(PROBE_PT_2_Y) + defined(PROBE_PT_3_Y))
 #if _POINT_COUNT == 6
   #define HAS_FIXED_3POINT 1
 #elif _POINT_COUNT > 0

commit 509dfe92d0c2227ddece025fb97875582ca47aed
Author: Meilleur Gars <98503100+LCh-77@users.noreply.github.com>
Date:   Wed Jul 6 13:46:11 2022 -0700

    üö∏ JyersUI updates (#24451)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9edcd6f1aa..0f4cf1381a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3534,21 +3534,21 @@
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
-#else
+#elif DISABLED(DWIN_CREALITY_LCD_JYERSUI)
   #undef MESH_MIN_X
   #undef MESH_MIN_Y
   #undef MESH_MAX_X
   #undef MESH_MAX_Y
 #endif
 
 #define _POINT_COUNT (defined(PROBE_PT_1_X) + defined(PROBE_PT_2_X) + defined(PROBE_PT_3_X) + defined(PROBE_PT_1_Y) + defined(PROBE_PT_2_Y) + defined(PROBE_PT_3_Y))
 #if _POINT_COUNT == 6
   #define HAS_FIXED_3POINT 1
 #elif _POINT_COUNT > 0

commit 3e9fb34892e85bc4069acf5baddbf12d6cd47789
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Tue Jun 7 18:59:21 2022 +1200

    ü©π Media Change followup (#24302)
    
    Followup to #24015

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 98f5ed3f48..9edcd6f1aa 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -510,46 +510,54 @@
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define HAS_SHARED_MEDIA 1
   #endif
 
-  // Set SD_DETECT_STATE based on hardware if not overridden
-  #if PIN_EXISTS(SD_DETECT) && !defined(SD_DETECT_STATE)
-    #if BOTH(HAS_MARLINUI_MENU, ELB_FULL_GRAPHIC_CONTROLLER) && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
-      #define SD_DETECT_STATE HIGH
-    #else
-      #define SD_DETECT_STATE LOW
-    #endif
-  #endif
-
   // Extender cable doesn't support SD_DETECT_PIN
   #if ENABLED(NO_SD_DETECT)
     #undef SD_DETECT_PIN
   #endif
 
+  // Not onboard or custom cable
+  #if SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION)
+    #define SD_CONNECTION_TYPICAL 1
+  #endif
+
+  // Set SD_DETECT_STATE based on hardware if not overridden
+  #if PIN_EXISTS(SD_DETECT)
+    #define HAS_SD_DETECT 1
+    #ifndef SD_DETECT_STATE
+      #if ALL(SD_CONNECTION_TYPICAL, HAS_MARLINUI_MENU, ELB_FULL_GRAPHIC_CONTROLLER)
+        #define SD_DETECT_STATE HIGH
+      #else
+        #define SD_DETECT_STATE LOW
+      #endif
+    #endif
+  #endif
+
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || BOTH(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(SDIO_SUPPORT)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
-#endif
+  #if HAS_SD_DETECT && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
+    #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
+  #endif
 
-#if PIN_EXISTS(SD_DETECT) && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
-  #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
 #endif
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_STATE
     #define PSU_NAME "XBox"     // X-Box 360 (203W)

commit 2b3ba02f09832379cffa4fc1baaa055228b82fe8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jun 3 18:16:43 2022 -0500

    üîß LEVEL_BED_CORNERS => LCD_BED_TRAMMING

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6c025b1dbb..98f5ed3f48 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -259,21 +259,21 @@
   #else
     #define CAN_CALIBRATE(A,B) true
   #endif
 #endif
 #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
-  #undef LEVEL_BED_CORNERS
+  #undef LCD_BED_TRAMMING
 #endif
 
 /**
  * SCARA cannot use SLOWDOWN and requires QUICKHOME
  * Printable radius assumes joints can fully extend
  */
 #if IS_SCARA
   #undef SLOWDOWN
   #if DISABLED(AXEL_TPARA)
     #define QUICK_HOME

commit 04fe50936e23a8aca7a400591e700c1220f68b3f
Author: Pauli Jokela <pauli.jokela@didstopia.com>
Date:   Thu May 12 05:23:16 2022 +0300

    ‚ú® SOUND_ON_DEFAULT option (#24102)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 88d1bb0c2b..6c025b1dbb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3545,23 +3545,23 @@
   #define HAS_FIXED_3POINT 1
 #elif _POINT_COUNT > 0
   #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
 #undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
 #if PIN_EXISTS(BEEPER)
-  #define USE_BEEPER 1
+  #define HAS_BEEPER 1
 #endif
-#if USE_BEEPER || ANY(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+#if ANY(HAS_BEEPER, LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
   #define HAS_BUZZER 1
 #endif
 
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif

commit df40181357b08761766067ef5012b2b3d0e34d3e
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed May 4 17:25:02 2022 -0700

    üí• Num Axes and Multi-Stepper based on Driver Types (#24120)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e1de8b28b0..88d1bb0c2b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1227,21 +1227,21 @@
         #define Z2_MIN_PIN E6_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E7DIAG_
         #define Z2_MIN_PIN E7_DIAG_PIN
       #endif
     #endif
     #ifndef Z2_MAX_ENDSTOP_INVERTING
       #define Z2_MAX_ENDSTOP_INVERTING false
     #endif
   #endif
 
-  #if NUM_Z_STEPPER_DRIVERS >= 3
+  #if NUM_Z_STEPPERS >= 3
     #if Z_HOME_TO_MAX
       #ifndef Z3_MAX_ENDSTOP_INVERTING
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
@@ -1359,21 +1359,21 @@
         #elif Z3_USE_ENDSTOP == _E7DIAG_
           #define Z3_MIN_PIN E7_DIAG_PIN
         #endif
       #endif
       #ifndef Z3_MAX_ENDSTOP_INVERTING
         #define Z3_MAX_ENDSTOP_INVERTING false
       #endif
     #endif
   #endif
 
-  #if NUM_Z_STEPPER_DRIVERS >= 4
+  #if NUM_Z_STEPPERS >= 4
     #if Z_HOME_TO_MAX
       #ifndef Z4_MAX_ENDSTOP_INVERTING
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
@@ -1668,51 +1668,51 @@
   #if PIN_EXISTS(Z_MS1)
     #define HAS_Z_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_Z) && ENABLED(DISABLE_Z)
     #define DISABLE_INACTIVE_Z 1
   #endif
 #else
   #undef DISABLE_INACTIVE_Z
 #endif
 
-#if NUM_Z_STEPPER_DRIVERS >= 2
+#if NUM_Z_STEPPERS >= 2
   #if PIN_EXISTS(Z2_ENABLE) || AXIS_IS_L64XX(Z2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
     #define HAS_Z2_ENABLE 1
   #endif
   #if PIN_EXISTS(Z2_DIR)
     #define HAS_Z2_DIR 1
   #endif
   #if PIN_EXISTS(Z2_STEP)
     #define HAS_Z2_STEP 1
   #endif
   #if PIN_EXISTS(Z2_MS1)
     #define HAS_Z2_MS_PINS 1
   #endif
 #endif
 
-#if NUM_Z_STEPPER_DRIVERS >= 3
+#if NUM_Z_STEPPERS >= 3
   #if PIN_EXISTS(Z3_ENABLE) || AXIS_IS_L64XX(Z3) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
     #define HAS_Z3_ENABLE 1
   #endif
   #if PIN_EXISTS(Z3_DIR)
     #define HAS_Z3_DIR 1
   #endif
   #if PIN_EXISTS(Z3_STEP)
     #define HAS_Z3_STEP 1
   #endif
   #if PIN_EXISTS(Z3_MS1)
     #define HAS_Z3_MS_PINS 1
   #endif
 #endif
 
-#if NUM_Z_STEPPER_DRIVERS >= 4
+#if NUM_Z_STEPPERS >= 4
   #if PIN_EXISTS(Z4_ENABLE) || AXIS_IS_L64XX(Z4) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
     #define HAS_Z4_ENABLE 1
   #endif
   #if PIN_EXISTS(Z4_DIR)
     #define HAS_Z4_DIR 1
   #endif
   #if PIN_EXISTS(Z4_STEP)
     #define HAS_Z4_STEP 1
   #endif
   #if PIN_EXISTS(Z4_MS1)
@@ -2073,21 +2073,21 @@
     #endif
     #ifndef Y_INTERPOLATE
       #define Y_INTERPOLATE INTERPOLATE
     #endif
     #ifndef Y_HOLD_MULTIPLIER
       #define Y_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef Y_SLAVE_ADDRESS
       #define Y_SLAVE_ADDRESS 0
     #endif
-    #if ENABLED(Y_DUAL_STEPPER_DRIVERS)
+    #if HAS_DUAL_Y_STEPPERS
       #if defined(Y2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Y2)
         #define Y2_SENSORLESS 1
       #endif
       #if AXIS_HAS_STEALTHCHOP(Y2)
         #define Y2_HAS_STEALTHCHOP 1
       #endif
       #ifndef Y2_INTERPOLATE
         #define Y2_INTERPOLATE Y_INTERPOLATE
       #endif
       #ifndef Y2_HOLD_MULTIPLIER
@@ -2120,55 +2120,55 @@
     #endif
     #ifndef Z_INTERPOLATE
       #define Z_INTERPOLATE INTERPOLATE
     #endif
     #ifndef Z_HOLD_MULTIPLIER
       #define Z_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef Z_SLAVE_ADDRESS
       #define Z_SLAVE_ADDRESS 0
     #endif
-    #if NUM_Z_STEPPER_DRIVERS >= 2
+    #if NUM_Z_STEPPERS >= 2
       #if defined(Z2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z2)
         #define Z2_SENSORLESS 1
       #endif
       #if AXIS_HAS_STEALTHCHOP(Z2)
         #define Z2_HAS_STEALTHCHOP 1
       #endif
       #ifndef Z2_INTERPOLATE
         #define Z2_INTERPOLATE Z_INTERPOLATE
       #endif
       #ifndef Z2_HOLD_MULTIPLIER
         #define Z2_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
       #endif
       #ifndef Z2_SLAVE_ADDRESS
         #define Z2_SLAVE_ADDRESS 0
       #endif
     #endif
-    #if NUM_Z_STEPPER_DRIVERS >= 3
+    #if NUM_Z_STEPPERS >= 3
       #if defined(Z3_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z3)
         #define Z3_SENSORLESS 1
       #endif
       #if AXIS_HAS_STEALTHCHOP(Z3)
         #define Z3_HAS_STEALTHCHOP 1
       #endif
       #ifndef Z3_INTERPOLATE
         #define Z3_INTERPOLATE Z_INTERPOLATE
       #endif
       #ifndef Z3_HOLD_MULTIPLIER
         #define Z3_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
       #endif
       #ifndef Z3_SLAVE_ADDRESS
         #define Z3_SLAVE_ADDRESS 0
       #endif
     #endif
-    #if NUM_Z_STEPPER_DRIVERS >= 4
+    #if NUM_Z_STEPPERS >= 4
       #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
         #define Z4_SENSORLESS 1
       #endif
       #if AXIS_HAS_STEALTHCHOP(Z4)
         #define Z4_HAS_STEALTHCHOP 1
       #endif
       #ifndef Z4_INTERPOLATE
         #define Z4_INTERPOLATE Z_INTERPOLATE
       #endif
       #ifndef Z4_HOLD_MULTIPLIER
@@ -2535,22 +2535,22 @@
 
 //
 // Endstops and bed probe
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (USES_Z_MIN_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
-#define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
-#define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
+#define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
+#define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
 
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
 #if _HAS_STOP(X,MIN)
   #define HAS_X_MIN 1
 #endif
 #if _HAS_STOP(X,MAX)
   #define HAS_X_MAX 1
 #endif
 #if _HAS_STOP(Y,MIN)
   #define HAS_Y_MIN 1

commit 1a131d17b6996268d20949f303daaab7c16a90bb
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Fri Apr 22 23:02:47 2022 +1200

    ü©π Fix DGUS_PREHEAT_UI enable with DGUS_LCD_CLASSIC (#24066)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ada2a512b5..e1de8b28b0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3288,21 +3288,21 @@
   #ifndef COOLER_INVERTING
     #define COOLER_INVERTING true
   #endif
   #define WRITE_HEATER_COOLER(v) WRITE(COOLER_PIN, (v) ^ COOLER_INVERTING)
 #endif
 
 #if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER || HAS_COOLER
   #define HAS_TEMPERATURE 1
 #endif
 
-#if HAS_TEMPERATURE && EITHER(HAS_MARLINUI_MENU, HAS_DWIN_E3V2)
+#if HAS_TEMPERATURE && ANY(HAS_MARLINUI_MENU, HAS_DWIN_E3V2, HAS_DGUS_LCD_CLASSIC)
   #ifdef PREHEAT_6_LABEL
     #define PREHEAT_COUNT 6
   #elif defined(PREHEAT_5_LABEL)
     #define PREHEAT_COUNT 5
   #elif defined(PREHEAT_4_LABEL)
     #define PREHEAT_COUNT 4
   #elif defined(PREHEAT_3_LABEL)
     #define PREHEAT_COUNT 3
   #elif defined(PREHEAT_2_LABEL)
     #define PREHEAT_COUNT 2

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 85ccb8088e..ada2a512b5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -80,111 +80,172 @@
  */
 #if HAS_I_AXIS && !defined(AXIS4_NAME)
   #define AXIS4_NAME 'A'
 #endif
 #if HAS_J_AXIS && !defined(AXIS5_NAME)
   #define AXIS5_NAME 'B'
 #endif
 #if HAS_K_AXIS && !defined(AXIS6_NAME)
   #define AXIS6_NAME 'C'
 #endif
+#if HAS_U_AXIS && !defined(AXIS7_NAME)
+  #define AXIS7_NAME 'U'
+#endif
+#if HAS_V_AXIS && !defined(AXIS8_NAME)
+  #define AXIS8_NAME 'V'
+#endif
+#if HAS_W_AXIS && !defined(AXIS9_NAME)
+  #define AXIS9_NAME 'W'
+#endif
+
+#if ANY(AXIS4_ROTATES, AXIS5_ROTATES, AXIS6_ROTATES, AXIS7_ROTATES, AXIS8_ROTATES, AXIS9_ROTATES)
+  #define HAS_ROTATIONAL_AXES 1
+#endif
 
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #if HAS_Y_AXIS
   #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #endif
 #if HAS_Z_AXIS
   #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 #else
   #undef CONTROLLER_FAN_USE_Z_ONLY
 #endif
 #if HAS_I_AXIS
   #define I_MAX_LENGTH (I_MAX_POS - (I_MIN_POS))
 #endif
 #if HAS_J_AXIS
   #define J_MAX_LENGTH (J_MAX_POS - (J_MIN_POS))
 #endif
 #if HAS_K_AXIS
   #define K_MAX_LENGTH (K_MAX_POS - (K_MIN_POS))
 #endif
+#if HAS_U_AXIS
+  #define U_MAX_LENGTH (U_MAX_POS - (U_MIN_POS))
+#endif
+#if HAS_V_AXIS
+  #define V_MAX_LENGTH (V_MAX_POS - (V_MIN_POS))
+#endif
+#if HAS_W_AXIS
+  #define W_MAX_LENGTH (W_MAX_POS - (W_MIN_POS))
+#endif
 
 // Defined only if the sanity-check is bypassed
 #ifndef X_BED_SIZE
   #define X_BED_SIZE X_MAX_LENGTH
 #endif
 #if HAS_Y_AXIS && !defined(Y_BED_SIZE)
   #define Y_BED_SIZE Y_MAX_LENGTH
 #endif
 #if HAS_I_AXIS && !defined(I_BED_SIZE)
   #define I_BED_SIZE I_MAX_LENGTH
 #endif
 #if HAS_J_AXIS && !defined(J_BED_SIZE)
   #define J_BED_SIZE J_MAX_LENGTH
 #endif
 #if HAS_K_AXIS && !defined(K_BED_SIZE)
   #define K_BED_SIZE K_MAX_LENGTH
 #endif
+#if HAS_U_AXIS && !defined(U_BED_SIZE)
+  #define U_BED_SIZE U_MAX_LENGTH
+#endif
+#if HAS_V_AXIS && !defined(V_BED_SIZE)
+  #define V_BED_SIZE V_MAX_LENGTH
+#endif
+#if HAS_W_AXIS && !defined(W_BED_SIZE)
+  #define W_BED_SIZE W_MAX_LENGTH
+#endif
 
 // Require 0,0 bed center for Delta and SCARA
 #if IS_KINEMATIC
   #define BED_CENTER_AT_0_0
 #endif
 
 // Define center values for future use
 #define _X_HALF_BED ((X_BED_SIZE) / 2)
 #if HAS_Y_AXIS
   #define _Y_HALF_BED ((Y_BED_SIZE) / 2)
 #endif
 #if HAS_I_AXIS
   #define _I_HALF_IMAX ((I_BED_SIZE) / 2)
 #endif
 #if HAS_J_AXIS
   #define _J_HALF_JMAX ((J_BED_SIZE) / 2)
 #endif
 #if HAS_K_AXIS
   #define _K_HALF_KMAX ((K_BED_SIZE) / 2)
 #endif
+#if HAS_U_AXIS
+  #define _U_HALF_UMAX ((U_BED_SIZE) / 2)
+#endif
+#if HAS_V_AXIS
+  #define _V_HALF_VMAX ((V_BED_SIZE) / 2)
+#endif
+#if HAS_W_AXIS
+  #define _W_HALF_WMAX ((W_BED_SIZE) / 2)
+#endif
 
 #define X_CENTER TERN(BED_CENTER_AT_0_0, 0, _X_HALF_BED)
 #if HAS_Y_AXIS
   #define Y_CENTER TERN(BED_CENTER_AT_0_0, 0, _Y_HALF_BED)
   #define XY_CENTER { X_CENTER, Y_CENTER }
 #endif
 #if HAS_I_AXIS
   #define I_CENTER TERN(BED_CENTER_AT_0_0, 0, _I_HALF_BED)
 #endif
 #if HAS_J_AXIS
   #define J_CENTER TERN(BED_CENTER_AT_0_0, 0, _J_HALF_BED)
 #endif
 #if HAS_K_AXIS
   #define K_CENTER TERN(BED_CENTER_AT_0_0, 0, _K_HALF_BED)
 #endif
+#if HAS_U_AXIS
+  #define U_CENTER TERN(BED_CENTER_AT_0_0, 0, _U_HALF_BED)
+#endif
+#if HAS_V_AXIS
+  #define V_CENTER TERN(BED_CENTER_AT_0_0, 0, _V_HALF_BED)
+#endif
+#if HAS_W_AXIS
+  #define W_CENTER TERN(BED_CENTER_AT_0_0, 0, _W_HALF_BED)
+#endif
 
 // Get the linear boundaries of the bed
 #define X_MIN_BED (X_CENTER - _X_HALF_BED)
 #define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
 #if HAS_Y_AXIS
   #define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
   #define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
 #endif
 #if HAS_I_AXIS
   #define I_MINIM (I_CENTER - _I_HALF_BED_SIZE)
   #define I_MAXIM (I_MINIM + I_BED_SIZE)
   #define I_MAXIM (I_MINIM + I_BED_SIZE)
 #endif
 #if HAS_J_AXIS
   #define J_MINIM (J_CENTER - _J_HALF_BED_SIZE)
   #define J_MAXIM (J_MINIM + J_BED_SIZE)
 #endif
 #if HAS_K_AXIS
   #define K_MINIM (K_CENTER - _K_HALF_BED_SIZE)
   #define K_MAXIM (K_MINIM + K_BED_SIZE)V_HOME_POS
 #endif
+#if HAS_U_AXIS
+  #define U_MINIM (U_CENTER - _U_HALF_BED_SIZE)
+  #define U_MAXIM (U_MINIM + U_BED_SIZE)
+#endif
+#if HAS_V_AXIS
+  #define V_MINIM (V_CENTER - _V_HALF_BED_SIZE)
+  #define V_MAXIM (V_MINIM + V_BED_SIZE)
+#endif
+#if HAS_W_AXIS
+  #define W_MINIM (W_CENTER - _W_HALF_BED_SIZE)
+  #define W_MAXIM (W_MINIM + W_BED_SIZE)
+#endif
 
 /**
  * Dual X Carriage
  */
 #if ENABLED(DUAL_X_CARRIAGE)
   #ifndef X1_MIN_POS
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
@@ -267,20 +328,41 @@
     #define J_HOME_POS TERN(J_HOME_TO_MIN, J_MIN_POS, J_MAX_POS)
   #endif
 #endif
 #if HAS_K_AXIS
   #ifdef MANUAL_K_HOME_POS
     #define K_HOME_POS MANUAL_K_HOME_POS
   #else
     #define K_HOME_POS TERN(K_HOME_TO_MIN, K_MIN_POS, K_MAX_POS)
   #endif
 #endif
+#if HAS_U_AXIS
+  #ifdef MANUAL_U_HOME_POS
+    #define U_HOME_POS MANUAL_U_HOME_POS
+  #else
+    #define U_HOME_POS (U_HOME_DIR < 0 ? U_MIN_POS : U_MAX_POS)
+  #endif
+#endif
+#if HAS_V_AXIS
+  #ifdef MANUAL_V_HOME_POS
+    #define V_HOME_POS MANUAL_V_HOME_POS
+  #else
+    #define V_HOME_POS (V_HOME_DIR < 0 ? V_MIN_POS : V_MAX_POS)
+  #endif
+#endif
+#if HAS_W_AXIS
+  #ifdef MANUAL_W_HOME_POS
+    #define W_HOME_POS MANUAL_W_HOME_POS
+  #else
+    #define W_HOME_POS (W_HOME_DIR < 0 ? W_MIN_POS : W_MAX_POS)
+  #endif
+#endif
 
 /**
  * If DELTA_HEIGHT isn't defined use the old setting
  */
 #if ENABLED(DELTA) && !defined(DELTA_HEIGHT)
   #define DELTA_HEIGHT Z_HOME_POS
 #endif
 
 /**
  * Z Sled Probe requires Z_SAFE_HOMING
@@ -1433,38 +1515,56 @@
   #endif
   #if ENABLED(USE_IMAX_PLUG)
     #define ENDSTOPPULLUP_IMAX
   #endif
   #if ENABLED(USE_JMAX_PLUG)
     #define ENDSTOPPULLUP_JMAX
   #endif
   #if ENABLED(USE_KMAX_PLUG)
     #define ENDSTOPPULLUP_KMAX
   #endif
+  #if ENABLED(USE_UMAX_PLUG)
+    #define ENDSTOPPULLUP_UMAX
+  #endif
+  #if ENABLED(USE_VMAX_PLUG)
+    #define ENDSTOPPULLUP_VMAX
+  #endif
+  #if ENABLED(USE_WMAX_PLUG)
+    #define ENDSTOPPULLUP_WMAX
+  #endif
   #if ENABLED(USE_XMIN_PLUG)
     #define ENDSTOPPULLUP_XMIN
   #endif
   #if ENABLED(USE_YMIN_PLUG)
     #define ENDSTOPPULLUP_YMIN
   #endif
   #if ENABLED(USE_ZMIN_PLUG)
     #define ENDSTOPPULLUP_ZMIN
   #endif
   #if ENABLED(USE_IMIN_PLUG)
     #define ENDSTOPPULLUP_IMIN
   #endif
   #if ENABLED(USE_JMIN_PLUG)
     #define ENDSTOPPULLUP_JMIN
   #endif
   #if ENABLED(USE_KMIN_PLUG)
     #define ENDSTOPPULLUP_KMIN
   #endif
+  #if ENABLED(USE_UMIN_PLUG)
+    #define ENDSTOPPULLUP_UMIN
+  #endif
+  #if ENABLED(USE_VMIN_PLUG)
+    #define ENDSTOPPULLUP_VMIN
+  #endif
+  #if ENABLED(USE_WMIN_PLUG)
+    #define ENDSTOPPULLUP_WMIN
+  #endif
 #endif
 
 /**
  * Set ENDSTOPPULLDOWNS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLDOWNS)
   #if ENABLED(USE_XMAX_PLUG)
     #define ENDSTOPPULLDOWN_XMAX
   #endif
   #if ENABLED(USE_YMAX_PLUG)
@@ -1673,20 +1773,80 @@
   #if PIN_EXISTS(K_MS1)
     #define HAS_K_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_K) && ENABLED(DISABLE_K)
     #define DISABLE_INACTIVE_K 1
   #endif
 #else
   #undef DISABLE_INACTIVE_K
 #endif
 
+#if HAS_U_AXIS
+  #if PIN_EXISTS(U_ENABLE) || AXIS_IS_L64XX(U) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(U))
+    #define HAS_U_ENABLE 1
+  #endif
+  #if PIN_EXISTS(U_DIR)
+    #define HAS_U_DIR 1
+  #endif
+  #if PIN_EXISTS(U_STEP)
+    #define HAS_U_STEP 1
+  #endif
+  #if PIN_EXISTS(U_MS1)
+    #define HAS_U_MS_PINS 1
+  #endif
+  #if !defined(DISABLE_INACTIVE_U) && ENABLED(DISABLE_U)
+    #define DISABLE_INACTIVE_U 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_U
+#endif
+
+#if HAS_V_AXIS
+  #if PIN_EXISTS(V_ENABLE) || AXIS_IS_L64XX(V) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(V))
+    #define HAS_V_ENABLE 1
+  #endif
+  #if PIN_EXISTS(V_DIR)
+    #define HAS_V_DIR 1
+  #endif
+  #if PIN_EXISTS(V_STEP)
+    #define HAS_V_STEP 1
+  #endif
+  #if PIN_EXISTS(V_MS1)
+    #define HAS_V_MS_PINS 1
+  #endif
+  #if !defined(DISABLE_INACTIVE_V) && ENABLED(DISABLE_V)
+    #define DISABLE_INACTIVE_V 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_V
+#endif
+
+#if HAS_W_AXIS
+  #if PIN_EXISTS(W_ENABLE) || AXIS_IS_L64XX(W) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(W))
+    #define HAS_W_ENABLE 1
+  #endif
+  #if PIN_EXISTS(W_DIR)
+    #define HAS_W_DIR 1
+  #endif
+  #if PIN_EXISTS(W_STEP)
+    #define HAS_W_STEP 1
+  #endif
+  #if PIN_EXISTS(W_MS1)
+    #define HAS_W_MS_PINS 1
+  #endif
+  #if !defined(DISABLE_INACTIVE_W) && ENABLED(DISABLE_W)
+    #define DISABLE_INACTIVE_W 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_W
+#endif
+
 // Extruder steppers and solenoids
 #if HAS_EXTRUDERS
 
   #if PIN_EXISTS(E0_ENABLE) || AXIS_IS_L64XX(E0) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
     #define HAS_E0_ENABLE 1
   #endif
   #if PIN_EXISTS(E0_DIR)
     #define HAS_E0_DIR 1
   #endif
   #if PIN_EXISTS(E0_STEP)
@@ -1841,21 +2001,21 @@
   #if PIN_EXISTS(SOL7) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 7))
     #define HAS_SOLENOID_7 7
   #endif
 #endif
 
 //
 // Trinamic Stepper Drivers
 //
 
 #if HAS_TRINAMIC_CONFIG
-  #if ANY(STEALTHCHOP_E, STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_I, STEALTHCHOP_J, STEALTHCHOP_K)
+  #if ANY(STEALTHCHOP_E, STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_I, STEALTHCHOP_J, STEALTHCHOP_K, STEALTHCHOP_U, STEALTHCHOP_V, STEALTHCHOP_W)
     #define STEALTHCHOP_ENABLED 1
   #endif
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1
   #endif
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
     #undef Z2_STALL_SENSITIVITY
     #undef Z3_STALL_SENSITIVITY
@@ -1930,20 +2090,29 @@
       #ifndef Y2_INTERPOLATE
         #define Y2_INTERPOLATE Y_INTERPOLATE
       #endif
       #ifndef Y2_HOLD_MULTIPLIER
         #define Y2_HOLD_MULTIPLIER Y_HOLD_MULTIPLIER
       #endif
       #ifndef Y2_SLAVE_ADDRESS
         #define Y2_SLAVE_ADDRESS 0
       #endif
     #endif
+    #if HAS_U_AXIS
+      #define U_SPI_SENSORLESS U_SENSORLESS
+    #endif
+    #if HAS_V_AXIS
+      #define V_SPI_SENSORLESS V_SENSORLESS
+    #endif
+    #if HAS_W_AXIS
+      #define W_SPI_SENSORLESS W_SENSORLESS
+    #endif
   #endif
 
   #if AXIS_IS_TMC(Z)
     #if defined(Z_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z)
       #define Z_SENSORLESS 1
     #endif
     #if AXIS_HAS_STEALTHCHOP(Z)
       #define Z_HAS_STEALTHCHOP 1
     #endif
     #if ENABLED(SPI_ENDSTOPS)
@@ -2067,20 +2236,83 @@
       #define K_INTERPOLATE INTERPOLATE
     #endif
     #ifndef K_HOLD_MULTIPLIER
       #define K_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
     #ifndef K_SLAVE_ADDRESS
       #define K_SLAVE_ADDRESS 0
     #endif
   #endif
 
+  #if AXIS_IS_TMC(U)
+    #if defined(U_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(U)
+      #define U_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(U)
+      #define U_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
+      #define U_SPI_SENSORLESS U_SENSORLESS
+    #endif
+    #ifndef U_INTERPOLATE
+      #define U_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef U_HOLD_MULTIPLIER
+      #define U_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef U_SLAVE_ADDRESS
+      #define U_SLAVE_ADDRESS 0
+    #endif
+  #endif
+
+  #if AXIS_IS_TMC(V)
+    #if defined(V_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(V)
+      #define V_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(V)
+      #define V_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
+      #define V_SPI_SENSORLESS V_SENSORLESS
+    #endif
+    #ifndef V_INTERPOLATE
+      #define V_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef V_HOLD_MULTIPLIER
+      #define V_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef V_SLAVE_ADDRESS
+      #define V_SLAVE_ADDRESS 0
+    #endif
+  #endif
+
+  #if AXIS_IS_TMC(W)
+    #if defined(W_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(W)
+      #define W_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(W)
+      #define W_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
+      #define W_SPI_SENSORLESS W_SENSORLESS
+    #endif
+    #ifndef W_INTERPOLATE
+      #define W_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef W_HOLD_MULTIPLIER
+      #define W_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef W_SLAVE_ADDRESS
+      #define W_SLAVE_ADDRESS 0
+    #endif
+  #endif
+
   #if AXIS_IS_TMC(E0)
     #if AXIS_HAS_STEALTHCHOP(E0)
       #define E0_HAS_STEALTHCHOP 1
     #endif
     #ifndef E0_INTERPOLATE
       #define E0_INTERPOLATE INTERPOLATE
     #endif
     #ifndef E0_HOLD_MULTIPLIER
       #define E0_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
@@ -2208,20 +2440,21 @@
                           || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \
                           || (defined(SERIAL_PORT_3)    && SERIAL_PORT_3 == N) \
                           || (defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT == N) \
                           || (defined(LCD_SERIAL_PORT)  && LCD_SERIAL_PORT == N) )
 
 // Flag the named hardware serial ports in use
 #define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && (CAT(HW_,A##_HARDWARE_SERIAL) == HW_Serial##N || CAT(HW_,A##_HARDWARE_SERIAL) == HW_MSerial##N))
 #define ANY_SERIAL_IS(N) (  CONF_SERIAL_IS(N) \
                          || TMC_UART_IS(X,  N) || TMC_UART_IS(Y , N) || TMC_UART_IS(Z , N) \
                          || TMC_UART_IS(I,  N) || TMC_UART_IS(J , N) || TMC_UART_IS(K , N) \
+                         || TMC_UART_IS(U,  N) || TMC_UART_IS(V , N) || TMC_UART_IS(W , N) \
                          || TMC_UART_IS(X2, N) || TMC_UART_IS(Y2, N) || TMC_UART_IS(Z2, N) || TMC_UART_IS(Z3, N) || TMC_UART_IS(Z4, N) \
                          || TMC_UART_IS(E0, N) || TMC_UART_IS(E1, N) || TMC_UART_IS(E2, N) || TMC_UART_IS(E3, N) || TMC_UART_IS(E4, N) )
 
 #define HW_Serial    501
 #define HW_Serial0   502
 #define HW_Serial1   503
 #define HW_Serial2   504
 #define HW_Serial3   505
 #define HW_Serial4   506
 #define HW_Serial5   507
@@ -2342,20 +2575,38 @@
 #endif
 #if _HAS_STOP(J,MAX)
   #define HAS_J_MAX 1
 #endif
 #if _HAS_STOP(K,MIN)
   #define HAS_K_MIN 1
 #endif
 #if _HAS_STOP(K,MAX)
   #define HAS_K_MAX 1
 #endif
+#if _HAS_STOP(U,MIN)
+  #define HAS_U_MIN 1
+#endif
+#if _HAS_STOP(U,MAX)
+  #define HAS_U_MAX 1
+#endif
+#if _HAS_STOP(V,MIN)
+  #define HAS_V_MIN 1
+#endif
+#if _HAS_STOP(V,MAX)
+  #define HAS_V_MAX 1
+#endif
+#if _HAS_STOP(W,MIN)
+  #define HAS_W_MIN 1
+#endif
+#if _HAS_STOP(W,MAX)
+  #define HAS_W_MAX 1
+#endif
 #if PIN_EXISTS(X2_MIN)
   #define HAS_X2_MIN 1
 #endif
 #if PIN_EXISTS(X2_MAX)
   #define HAS_X2_MAX 1
 #endif
 #if PIN_EXISTS(Y2_MIN)
   #define HAS_Y2_MIN 1
 #endif
 #if PIN_EXISTS(Y2_MAX)
@@ -2842,31 +3093,31 @@
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_MOTOR_CURRENT_SPI 1
 #endif
 #if HAS_EXTRUDERS && PIN_EXISTS(MOTOR_CURRENT_PWM_E)
   #define HAS_MOTOR_CURRENT_PWM_E 1
 #endif
-#if HAS_MOTOR_CURRENT_PWM_E || ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K)
+#if HAS_MOTOR_CURRENT_PWM_E || ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K, MOTOR_CURRENT_PWM_U, MOTOR_CURRENT_PWM_V, MOTOR_CURRENT_PWM_W)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
-#if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_I_MS_PINS, HAS_J_MS_PINS, HAS_K_MS_PINS, HAS_SOME_E_MS_PINS)
+#if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_I_MS_PINS, HAS_J_MS_PINS, HAS_K_MS_PINS, HAS_U_MS_PINS, HAS_V_MS_PINS, HAS_W_MS_PINS, HAS_SOME_E_MS_PINS)
   #define HAS_MICROSTEPS 1
 #endif
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)

commit 20b5615305639c9e33907a755cee1c22cc5aa664
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sat Mar 26 16:44:22 2022 +1300

    ‚ú® Configurable FREEZE pin state (#23944)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index dd175ac2cc..85ccb8088e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2817,31 +2817,23 @@
   #undef EDITABLE_SERVO_ANGLES
   #undef SERVO_DETACH_GCODE
 #endif
 
 // Sensors
 #if PIN_EXISTS(FILWIDTH)
   #define HAS_FILAMENT_WIDTH_SENSOR 1
 #endif
 
 // User Interface
-#if ENABLED(FREEZE_FEATURE)
-  #if !PIN_EXISTS(FREEZE) && PIN_EXISTS(KILL)
-    #define FREEZE_PIN KILL_PIN
-  #endif
-  #if PIN_EXISTS(FREEZE)
-    #define HAS_FREEZE_PIN 1
-  #endif
-#else
-  #undef FREEZE_PIN
-#endif
-#if PIN_EXISTS(KILL) && TERN1(FREEZE_FEATURE, KILL_PIN != FREEZE_PIN)
+#if ENABLED(FREEZE_FEATURE) && !PIN_EXISTS(FREEZE) && PIN_EXISTS(KILL)
+  #define FREEZE_PIN KILL_PIN
+#elif PIN_EXISTS(KILL) && TERN1(FREEZE_FEATURE, KILL_PIN != FREEZE_PIN)
   #define HAS_KILL 1
 #endif
 #if PIN_EXISTS(HOME)
   #define HAS_HOME 1
 #endif
 #if PIN_EXISTS(SUICIDE)
   #define HAS_SUICIDE 1
 #endif
 #if PIN_EXISTS(PHOTOGRAPH)
   #define HAS_PHOTOGRAPH 1

commit b1958a43fc2a4536df7402a5f2420d14dc8fb810
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 25 21:16:00 2022 -0500

    üêõ Fix pulldown sanity check

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9942f14eee..dd175ac2cc 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3500,10 +3500,21 @@
   #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
 
 #if PIN_EXISTS(SAFE_POWER) && DISABLED(DISABLE_DRIVER_SAFE_POWER_PROTECT)
   #define HAS_DRIVER_SAFE_POWER_PROTECT 1
 #endif
+
+#if ANY(ENDSTOPPULLDOWNS, ENDSTOPPULLDOWN_ZMIN_PROBE, \
+    ENDSTOPPULLDOWN_XMIN, ENDSTOPPULLDOWN_YMIN, ENDSTOPPULLDOWN_ZMIN, \
+    ENDSTOPPULLDOWN_IMIN, ENDSTOPPULLDOWN_JMIN, ENDSTOPPULLDOWN_KMIN, \
+    ENDSTOPPULLDOWN_XMAX, ENDSTOPPULLDOWN_YMAX, ENDSTOPPULLDOWN_ZMAX, \
+    ENDSTOPPULLDOWN_IMAX, ENDSTOPPULLDOWN_JMAX, ENDSTOPPULLDOWN_KMAX, \
+    POWER_LOSS_PULLDOWN, CALIBRATION_PIN_PULLDOWN, FIL_RUNOUT_PULLDOWN, \
+    FIL_RUNOUT1_PULLDOWN, FIL_RUNOUT2_PULLDOWN, FIL_RUNOUT3_PULLDOWN, FIL_RUNOUT4_PULLDOWN, \
+    FIL_RUNOUT5_PULLDOWN, FIL_RUNOUT6_PULLDOWN, FIL_RUNOUT7_PULLDOWN, FIL_RUNOUT8_PULLDOWN)
+  #define USING_PULLDOWNS 1
+#endif

commit f4b41fcc3fe2a953ca47c537f01a99df0ec555dd
Author: Jelmer van der Stel <steljwagh@users.noreply.github.com>
Date:   Sun Mar 13 23:20:30 2022 +0100

    ü©π Fix DWIN E3V2 display issues by allowing re-init (#23879)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 547ca36e92..9942f14eee 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -452,21 +452,21 @@
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || BOTH(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(SDIO_SUPPORT)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
 #endif
 
-#if PIN_EXISTS(SD_DETECT) && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI)
+#if PIN_EXISTS(SD_DETECT) && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI, HAS_DWIN_E3V2)
   #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
 #endif
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_STATE

commit 48b5362cf02ff12c9e9fc4d5825ceebe457ea34b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 10 22:07:47 2022 -0600

    üîß DWIN_CREALITY_LCD_ENHANCED => DWIN_LCD_PROUI
    
    Followup to #23624

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index fa273cd32e..547ca36e92 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3170,21 +3170,21 @@
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_CREALITY_LCD_ENHANCED, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_LCD_PROUI, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif

commit 03516f05191b888b5378f0426bc86f41b6cb2d03
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Feb 13 14:44:24 2022 -0500

    ‚ôªÔ∏è No ui.reinit_lcd on any ExtUI (#23722)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b107ad03ae..fa273cd32e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -452,22 +452,22 @@
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || BOTH(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(SDIO_SUPPORT)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
 #endif
 
-#if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI) || !PIN_EXISTS(SD_DETECT)
-  #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
+#if PIN_EXISTS(SD_DETECT) && NONE(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI, EXTENSIBLE_UI)
+  #define REINIT_NOISY_LCD 1  // Have the LCD re-init on SD insertion
 #endif
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_STATE
     #define PSU_NAME "XBox"     // X-Box 360 (203W)

commit e8cc050e90252d45734552ae857cf8b6cb8580d0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 13 13:12:38 2022 -0600

    üìù Update conditionals descriptions

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 37f0a5cbe5..b107ad03ae 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -16,21 +16,21 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
  * Conditionals_post.h
- * Defines that depend on configuration but are not editable.
+ * Internal defines that depend on Configurations and Pins but are not user-editable.
  */
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
 // ADC
 #ifdef BOARD_ADC_VREF
   #define ADC_VREF BOARD_ADC_VREF
 #else

commit ab46b7e2f298826a5512569d6e79bb59a7a6b8ea
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 25 15:33:03 2022 -0600

    üßë‚Äçüíª HAS_MARLINUI_MENU, HAS_MANUAL_MOVE_MENU

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2f06fe255a..37f0a5cbe5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -430,21 +430,21 @@
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define HAS_SHARED_MEDIA 1
   #endif
 
   // Set SD_DETECT_STATE based on hardware if not overridden
   #if PIN_EXISTS(SD_DETECT) && !defined(SD_DETECT_STATE)
-    #if BOTH(HAS_LCD_MENU, ELB_FULL_GRAPHIC_CONTROLLER) && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
+    #if BOTH(HAS_MARLINUI_MENU, ELB_FULL_GRAPHIC_CONTROLLER) && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
       #define SD_DETECT_STATE HIGH
     #else
       #define SD_DETECT_STATE LOW
     #endif
   #endif
 
   // Extender cable doesn't support SD_DETECT_PIN
   #if ENABLED(NO_SD_DETECT)
     #undef SD_DETECT_PIN
   #endif
@@ -3045,21 +3045,21 @@
   #ifndef COOLER_INVERTING
     #define COOLER_INVERTING true
   #endif
   #define WRITE_HEATER_COOLER(v) WRITE(COOLER_PIN, (v) ^ COOLER_INVERTING)
 #endif
 
 #if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER || HAS_COOLER
   #define HAS_TEMPERATURE 1
 #endif
 
-#if HAS_TEMPERATURE && EITHER(HAS_LCD_MENU, HAS_DWIN_E3V2)
+#if HAS_TEMPERATURE && EITHER(HAS_MARLINUI_MENU, HAS_DWIN_E3V2)
   #ifdef PREHEAT_6_LABEL
     #define PREHEAT_COUNT 6
   #elif defined(PREHEAT_5_LABEL)
     #define PREHEAT_COUNT 5
   #elif defined(PREHEAT_4_LABEL)
     #define PREHEAT_COUNT 4
   #elif defined(PREHEAT_3_LABEL)
     #define PREHEAT_COUNT 3
   #elif defined(PREHEAT_2_LABEL)
     #define PREHEAT_COUNT 2
@@ -3170,21 +3170,21 @@
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if ANY(HAS_LCD_MENU, EXTENSIBLE_UI, DWIN_CREALITY_LCD_ENHANCED, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+  #if ANY(HAS_MARLINUI_MENU, EXTENSIBLE_UI, DWIN_CREALITY_LCD_ENHANCED, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
@@ -3400,21 +3400,21 @@
   #define HAS_POSITION_SHIFT 1
   #if IS_CARTESIAN
     #define HAS_HOME_OFFSET 1       // The home offset also shifts the coordinate space
     #define HAS_WORKSPACE_OFFSET 1  // Cumulative offset to workspace to save some calculation
     #define HAS_M206_COMMAND 1      // M206 sets the home offset for Cartesian machines
   #elif IS_SCARA
     #define HAS_SCARA_OFFSET 1      // The SCARA home offset applies only on G28
   #endif
 #endif
 
-#if HAS_LCD_MENU
+#if HAS_MARLINUI_MENU
   // LCD timeout to status screen default is 15s
   #ifndef LCD_TIMEOUT_TO_STATUS
     #define LCD_TIMEOUT_TO_STATUS 15000
   #endif
   #if LCD_TIMEOUT_TO_STATUS
     #define SCREENS_CAN_TIME_OUT 1
   #endif
 #endif
 
 // Add commands that need sub-codes to this list

commit f6e8622360609d95464d256be5717db090191583
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sat Jan 22 10:16:41 2022 -0600

    üêõ Fix LCD contrast/brightness init (#23567)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 734676559c..2f06fe255a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -370,20 +370,21 @@
 #elif EITHER(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif EITHER(MKS_MINI_12864_V3, BTT_MINI_12864_V1)
   #define _LCD_CONTRAST_MIN  255
   #define _LCD_CONTRAST_INIT 255
 #elif ENABLED(FYSETC_MINI_12864)
+  #define _LCD_CONTRAST_MIN  180
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)
   #define _LCD_CONTRAST_INIT 150
 #elif ENABLED(ZONESTAR_12864OLED)
   #define _LCD_CONTRAST_MIN   64

commit d5f2334140e6f8ead29d3648b371547ebe72c7aa
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Jan 22 10:14:47 2022 -0600

    ‚ôªÔ∏è Adjust LCD init, contrast default, settings load

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5d3ac7a690..734676559c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -369,66 +369,59 @@
   #define _LCD_CONTRAST_INIT 190
 #elif EITHER(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif EITHER(MKS_MINI_12864_V3, BTT_MINI_12864_V1)
   #define _LCD_CONTRAST_MIN  255
   #define _LCD_CONTRAST_INIT 255
-  #define _LCD_CONTRAST_MAX  255
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)
   #define _LCD_CONTRAST_INIT 150
 #elif ENABLED(ZONESTAR_12864OLED)
   #define _LCD_CONTRAST_MIN   64
   #define _LCD_CONTRAST_INIT 128
-  #define _LCD_CONTRAST_MAX  255
 #elif IS_TFTGLCD_PANEL
-  #define _LCD_CONTRAST_MIN    0
   #define _LCD_CONTRAST_INIT 250
-  #define _LCD_CONTRAST_MAX  255
 #endif
 
 #ifdef _LCD_CONTRAST_INIT
   #define HAS_LCD_CONTRAST 1
-#endif
-
-#if HAS_LCD_CONTRAST
   #ifndef LCD_CONTRAST_MIN
     #ifdef _LCD_CONTRAST_MIN
       #define LCD_CONTRAST_MIN _LCD_CONTRAST_MIN
     #else
       #define LCD_CONTRAST_MIN 0
     #endif
   #endif
   #ifndef LCD_CONTRAST_INIT
     #define LCD_CONTRAST_INIT _LCD_CONTRAST_INIT
   #endif
   #ifndef LCD_CONTRAST_MAX
     #ifdef _LCD_CONTRAST_MAX
       #define LCD_CONTRAST_MAX _LCD_CONTRAST_MAX
     #elif _LCD_CONTRAST_INIT > 63
       #define LCD_CONTRAST_MAX 255
     #else
       #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
-  #ifndef DEFAULT_LCD_CONTRAST
-    #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
+  #ifndef LCD_CONTRAST_DEFAULT
+    #define LCD_CONTRAST_DEFAULT LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
 
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)

commit 9285b6b9edcb42d38736a08785371204aea56501
Author: zerkix <97692157+zerkix@users.noreply.github.com>
Date:   Mon Jan 17 07:05:31 2022 +0100

    üêõ Finish and organize temp sensors (#23519)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3a2a6f2711..5d3ac7a690 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -500,21 +500,27 @@
   #ifndef TEMP_SENSOR_REDUNDANT_SOURCE
     #define TEMP_SENSOR_REDUNDANT_SOURCE E1
   #endif
   #ifndef TEMP_SENSOR_REDUNDANT_TARGET
     #define TEMP_SENSOR_REDUNDANT_TARGET E0
   #endif
   #if !PIN_EXISTS(TEMP_REDUNDANT)
     #ifndef TEMP_SENSOR_REDUNDANT_MAX_DIFF
       #define TEMP_SENSOR_REDUNDANT_MAX_DIFF 10
     #endif
-    #if REDUNDANT_TEMP_MATCH(SOURCE, COOLER)
+    #if REDUNDANT_TEMP_MATCH(SOURCE, BOARD)
+      #if !PIN_EXISTS(TEMP_BOARD)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to BOARD requires TEMP_BOARD_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_BOARD_PIN
+      #endif
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, COOLER)
       #if !PIN_EXISTS(TEMP_COOLER)
         #error "TEMP_SENSOR_REDUNDANT_SOURCE set to COOLER requires TEMP_COOLER_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_COOLER_PIN
       #endif
     #elif REDUNDANT_TEMP_MATCH(SOURCE, PROBE)
       #if !PIN_EXISTS(TEMP_PROBE)
         #error "TEMP_SENSOR_REDUNDANT_SOURCE set to PROBE requires TEMP_PROBE_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_PROBE_PIN
@@ -2439,26 +2445,26 @@
   #define HAS_TEMP_ADC_REDUNDANT 1
 #endif
 
 #define HAS_TEMP(N) ANY(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_MAX_TC, TEMP_SENSOR_##N##_IS_DUMMY)
 #if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
 #if HAS_TEMP(BED)
   #define HAS_TEMP_BED 1
 #endif
-#if HAS_TEMP(PROBE)
-  #define HAS_TEMP_PROBE 1
-#endif
 #if HAS_TEMP(CHAMBER)
   #define HAS_TEMP_CHAMBER 1
 #endif
+#if HAS_TEMP(PROBE)
+  #define HAS_TEMP_PROBE 1
+#endif
 #if HAS_TEMP(COOLER)
   #define HAS_TEMP_COOLER 1
 #endif
 #if HAS_TEMP(BOARD)
   #define HAS_TEMP_BOARD 1
 #endif
 #if HAS_TEMP(REDUNDANT)
   #define HAS_TEMP_REDUNDANT 1
 #endif
 

commit 80e978ec8a9043d98dac76835c9d7c31ad9864cc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 14 06:16:14 2022 -0600

    üîß Skip unused axis names

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6d2a0e1f7d..3a2a6f2711 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -71,27 +71,27 @@
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
 /**
  * Axis lengths and center
  */
-#ifndef AXIS4_NAME
+#if HAS_I_AXIS && !defined(AXIS4_NAME)
   #define AXIS4_NAME 'A'
 #endif
-#ifndef AXIS5_NAME
+#if HAS_J_AXIS && !defined(AXIS5_NAME)
   #define AXIS5_NAME 'B'
 #endif
-#ifndef AXIS6_NAME
+#if HAS_K_AXIS && !defined(AXIS6_NAME)
   #define AXIS6_NAME 'C'
 #endif
 
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #if HAS_Y_AXIS
   #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #endif
 #if HAS_Z_AXIS
   #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 #else

commit 40481947fc1f11a01235c5c55333a4437fc45c5f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 14 03:14:13 2022 -0600

    üßë‚Äçüíª Misc. updates for extra axes (#23521)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 08130d31b7..6d2a0e1f7d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2207,20 +2207,21 @@
 #define CONF_SERIAL_IS(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
                           || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \
                           || (defined(SERIAL_PORT_3)    && SERIAL_PORT_3 == N) \
                           || (defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT == N) \
                           || (defined(LCD_SERIAL_PORT)  && LCD_SERIAL_PORT == N) )
 
 // Flag the named hardware serial ports in use
 #define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && (CAT(HW_,A##_HARDWARE_SERIAL) == HW_Serial##N || CAT(HW_,A##_HARDWARE_SERIAL) == HW_MSerial##N))
 #define ANY_SERIAL_IS(N) (  CONF_SERIAL_IS(N) \
                          || TMC_UART_IS(X,  N) || TMC_UART_IS(Y , N) || TMC_UART_IS(Z , N) \
+                         || TMC_UART_IS(I,  N) || TMC_UART_IS(J , N) || TMC_UART_IS(K , N) \
                          || TMC_UART_IS(X2, N) || TMC_UART_IS(Y2, N) || TMC_UART_IS(Z2, N) || TMC_UART_IS(Z3, N) || TMC_UART_IS(Z4, N) \
                          || TMC_UART_IS(E0, N) || TMC_UART_IS(E1, N) || TMC_UART_IS(E2, N) || TMC_UART_IS(E3, N) || TMC_UART_IS(E4, N) )
 
 #define HW_Serial    501
 #define HW_Serial0   502
 #define HW_Serial1   503
 #define HW_Serial2   504
 #define HW_Serial3   505
 #define HW_Serial4   506
 #define HW_Serial5   507

commit e65c12cf96a226019a7456099078ee5cb03f9a49
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 2 09:22:36 2022 -0600

    üßë‚Äçüíª Apply axis conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 477309ad81..08130d31b7 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -90,98 +90,98 @@
 
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #if HAS_Y_AXIS
   #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #endif
 #if HAS_Z_AXIS
   #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 #else
   #undef CONTROLLER_FAN_USE_Z_ONLY
 #endif
-#if LINEAR_AXES >= 4
+#if HAS_I_AXIS
   #define I_MAX_LENGTH (I_MAX_POS - (I_MIN_POS))
 #endif
-#if LINEAR_AXES >= 5
+#if HAS_J_AXIS
   #define J_MAX_LENGTH (J_MAX_POS - (J_MIN_POS))
 #endif
-#if LINEAR_AXES >= 6
+#if HAS_K_AXIS
   #define K_MAX_LENGTH (K_MAX_POS - (K_MIN_POS))
 #endif
 
 // Defined only if the sanity-check is bypassed
 #ifndef X_BED_SIZE
   #define X_BED_SIZE X_MAX_LENGTH
 #endif
 #if HAS_Y_AXIS && !defined(Y_BED_SIZE)
   #define Y_BED_SIZE Y_MAX_LENGTH
 #endif
-#if LINEAR_AXES >= 4 && !defined(I_BED_SIZE)
+#if HAS_I_AXIS && !defined(I_BED_SIZE)
   #define I_BED_SIZE I_MAX_LENGTH
 #endif
-#if LINEAR_AXES >= 5 && !defined(J_BED_SIZE)
+#if HAS_J_AXIS && !defined(J_BED_SIZE)
   #define J_BED_SIZE J_MAX_LENGTH
 #endif
-#if LINEAR_AXES >= 6 && !defined(K_BED_SIZE)
+#if HAS_K_AXIS && !defined(K_BED_SIZE)
   #define K_BED_SIZE K_MAX_LENGTH
 #endif
 
 // Require 0,0 bed center for Delta and SCARA
 #if IS_KINEMATIC
   #define BED_CENTER_AT_0_0
 #endif
 
 // Define center values for future use
 #define _X_HALF_BED ((X_BED_SIZE) / 2)
 #if HAS_Y_AXIS
   #define _Y_HALF_BED ((Y_BED_SIZE) / 2)
 #endif
-#if LINEAR_AXES >= 4
+#if HAS_I_AXIS
   #define _I_HALF_IMAX ((I_BED_SIZE) / 2)
 #endif
-#if LINEAR_AXES >= 5
+#if HAS_J_AXIS
   #define _J_HALF_JMAX ((J_BED_SIZE) / 2)
 #endif
-#if LINEAR_AXES >= 6
+#if HAS_K_AXIS
   #define _K_HALF_KMAX ((K_BED_SIZE) / 2)
 #endif
 
 #define X_CENTER TERN(BED_CENTER_AT_0_0, 0, _X_HALF_BED)
 #if HAS_Y_AXIS
   #define Y_CENTER TERN(BED_CENTER_AT_0_0, 0, _Y_HALF_BED)
   #define XY_CENTER { X_CENTER, Y_CENTER }
 #endif
-#if LINEAR_AXES >= 4
+#if HAS_I_AXIS
   #define I_CENTER TERN(BED_CENTER_AT_0_0, 0, _I_HALF_BED)
 #endif
-#if LINEAR_AXES >= 5
+#if HAS_J_AXIS
   #define J_CENTER TERN(BED_CENTER_AT_0_0, 0, _J_HALF_BED)
 #endif
-#if LINEAR_AXES >= 6
+#if HAS_K_AXIS
   #define K_CENTER TERN(BED_CENTER_AT_0_0, 0, _K_HALF_BED)
 #endif
 
 // Get the linear boundaries of the bed
 #define X_MIN_BED (X_CENTER - _X_HALF_BED)
 #define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
 #if HAS_Y_AXIS
   #define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
   #define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
 #endif
-#if LINEAR_AXES >= 4
+#if HAS_I_AXIS
   #define I_MINIM (I_CENTER - _I_HALF_BED_SIZE)
   #define I_MAXIM (I_MINIM + I_BED_SIZE)
 #endif
-#if LINEAR_AXES >= 5
+#if HAS_J_AXIS
   #define J_MINIM (J_CENTER - _J_HALF_BED_SIZE)
   #define J_MAXIM (J_MINIM + J_BED_SIZE)
 #endif
-#if LINEAR_AXES >= 6
+#if HAS_K_AXIS
   #define K_MINIM (K_CENTER - _K_HALF_BED_SIZE)
   #define K_MAXIM (K_MINIM + K_BED_SIZE)
 #endif
 
 /**
  * Dual X Carriage
  */
 #if ENABLED(DUAL_X_CARRIAGE)
   #ifndef X1_MIN_POS
     #define X1_MIN_POS X_MIN_POS
@@ -246,35 +246,35 @@
     #endif
   #endif
 #endif
 
 #ifdef MANUAL_Z_HOME_POS
   #define Z_HOME_POS MANUAL_Z_HOME_POS
 #else
   #define Z_HOME_POS TERN(Z_HOME_TO_MIN, Z_MIN_POS, Z_MAX_POS)
 #endif
 
-#if LINEAR_AXES >= 4
+#if HAS_I_AXIS
   #ifdef MANUAL_I_HOME_POS
     #define I_HOME_POS MANUAL_I_HOME_POS
   #else
     #define I_HOME_POS TERN(I_HOME_TO_MIN, I_MIN_POS, I_MAX_POS)
   #endif
 #endif
-#if LINEAR_AXES >= 5
+#if HAS_J_AXIS
   #ifdef MANUAL_J_HOME_POS
     #define J_HOME_POS MANUAL_J_HOME_POS
   #else
     #define J_HOME_POS TERN(J_HOME_TO_MIN, J_MIN_POS, J_MAX_POS)
   #endif
 #endif
-#if LINEAR_AXES >= 6
+#if HAS_K_AXIS
   #ifdef MANUAL_K_HOME_POS
     #define K_HOME_POS MANUAL_K_HOME_POS
   #else
     #define K_HOME_POS TERN(K_HOME_TO_MIN, K_MIN_POS, K_MAX_POS)
   #endif
 #endif
 
 /**
  * If DELTA_HEIGHT isn't defined use the old setting
  */
@@ -738,21 +738,21 @@
   #endif
   #if BOTH(HAS_MAX31855, LIB_MAX31855)
     #define USE_ADAFRUIT_MAX31855 1
   #endif
   #if BOTH(HAS_MAX31865, LIB_MAX31865)
     #define USE_ADAFRUIT_MAX31865 1
   #elif HAS_MAX31865
     #define LIB_INTERNAL_MAX31865 1
   #endif
 
-#endif //HAS_MAX_TC
+#endif // HAS_MAX_TC
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_TO_MAX
     #ifndef X2_MAX_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _XMAX_
@@ -1613,61 +1613,61 @@
     #define HAS_Z4_DIR 1
   #endif
   #if PIN_EXISTS(Z4_STEP)
     #define HAS_Z4_STEP 1
   #endif
   #if PIN_EXISTS(Z4_MS1)
     #define HAS_Z4_MS_PINS 1
   #endif
 #endif
 
-#if LINEAR_AXES >= 4
+#if HAS_I_AXIS
   #if PIN_EXISTS(I_ENABLE) || AXIS_IS_L64XX(I) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(I))
     #define HAS_I_ENABLE 1
   #endif
   #if PIN_EXISTS(I_DIR)
     #define HAS_I_DIR 1
   #endif
   #if PIN_EXISTS(I_STEP)
     #define HAS_I_STEP 1
   #endif
   #if PIN_EXISTS(I_MS1)
     #define HAS_I_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_I) && ENABLED(DISABLE_I)
     #define DISABLE_INACTIVE_I 1
   #endif
 #else
   #undef DISABLE_INACTIVE_I
 #endif
 
-#if LINEAR_AXES >= 5
+#if HAS_J_AXIS
   #if PIN_EXISTS(J_ENABLE) || AXIS_IS_L64XX(J) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(J))
     #define HAS_J_ENABLE 1
   #endif
   #if PIN_EXISTS(J_DIR)
     #define HAS_J_DIR 1
   #endif
   #if PIN_EXISTS(J_STEP)
     #define HAS_J_STEP 1
   #endif
   #if PIN_EXISTS(J_MS1)
     #define HAS_J_MS_PINS 1
   #endif
   #if !defined(DISABLE_INACTIVE_J) && ENABLED(DISABLE_J)
     #define DISABLE_INACTIVE_J 1
   #endif
 #else
   #undef DISABLE_INACTIVE_J
 #endif
 
-#if LINEAR_AXES >= 6
+#if HAS_K_AXIS
   #if PIN_EXISTS(K_ENABLE) || AXIS_IS_L64XX(K) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(K))
     #define HAS_K_ENABLE 1
   #endif
   #if PIN_EXISTS(K_DIR)
     #define HAS_K_DIR 1
   #endif
   #if PIN_EXISTS(K_STEP)
     #define HAS_K_STEP 1
   #endif
   #if PIN_EXISTS(K_MS1)

commit 6fbfeb68010e63c76b545e2c27aeb48ee73be68b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 1 22:54:27 2022 -0600

    ‚ú® M919 : Chopper Timing (#23400)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9ed25a6114..477309ad81 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2388,42 +2388,42 @@
 #undef IS_X2_ENDSTOP
 #undef IS_Y2_ENDSTOP
 #undef IS_Z2_ENDSTOP
 #undef IS_Z3_ENDSTOP
 #undef IS_Z4_ENDSTOP
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && NONE(TEMP_SENSOR_##P##_IS_MAX_TC, TEMP_SENSOR_##P##_IS_DUMMY))
-#if HAS_ADC_TEST(0)
+#if HOTENDS > 0 && HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
 #endif
-#if HAS_ADC_TEST(1)
+#if HOTENDS > 1 && HAS_ADC_TEST(1)
   #define HAS_TEMP_ADC_1 1
 #endif
-#if HAS_ADC_TEST(2)
+#if HOTENDS > 2 && HAS_ADC_TEST(2)
   #define HAS_TEMP_ADC_2 1
 #endif
-#if HAS_ADC_TEST(3)
+#if HOTENDS > 3 && HAS_ADC_TEST(3)
   #define HAS_TEMP_ADC_3 1
 #endif
-#if HAS_ADC_TEST(4)
+#if HOTENDS > 4 && HAS_ADC_TEST(4)
   #define HAS_TEMP_ADC_4 1
 #endif
-#if HAS_ADC_TEST(5)
+#if HOTENDS > 5 && HAS_ADC_TEST(5)
   #define HAS_TEMP_ADC_5 1
 #endif
-#if HAS_ADC_TEST(6)
+#if HOTENDS > 6 && HAS_ADC_TEST(6)
   #define HAS_TEMP_ADC_6 1
 #endif
-#if HAS_ADC_TEST(7)
+#if HOTENDS > 7 && HAS_ADC_TEST(7)
   #define HAS_TEMP_ADC_7 1
 #endif
 #if HAS_ADC_TEST(BED)
   #define HAS_TEMP_ADC_BED 1
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1

commit 63f71d85f2af5c9a352a4fca9b3c1acb1a5f4746
Author: John Lagonikas <39417467+zeleps@users.noreply.github.com>
Date:   Sun Jan 2 02:18:07 2022 +0200

    ‚ú® Temperature variance monitor (#23373)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e1e82c40f2..9ed25a6114 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2557,20 +2557,23 @@
 #endif
 #if ENABLED(THERMAL_PROTECTION_BED) && WATCH_BED_TEMP_PERIOD > 0
   #define WATCH_BED 1
 #endif
 #if BOTH(HAS_HEATED_CHAMBER, THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
   #define WATCH_CHAMBER 1
 #endif
 #if BOTH(HAS_COOLER, THERMAL_PROTECTION_COOLER) && WATCH_COOLER_TEMP_PERIOD > 0
   #define WATCH_COOLER 1
 #endif
+#if NONE(THERMAL_PROTECTION_HOTENDS, THERMAL_PROTECTION_CHAMBER, THERMAL_PROTECTION_BED, THERMAL_PROTECTION_COOLER)
+  #undef THERMAL_PROTECTION_VARIANCE_MONITOR
+#endif
 #if  (ENABLED(THERMAL_PROTECTION_HOTENDS) || !EXTRUDERS) \
   && (ENABLED(THERMAL_PROTECTION_BED)     || !HAS_HEATED_BED) \
   && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER) \
   && (ENABLED(THERMAL_PROTECTION_COOLER)  || !HAS_COOLER)
   #define THERMALLY_SAFE 1
 #endif
 
 // Auto fans
 #if HAS_HOTEND && PIN_EXISTS(E0_AUTO_FAN)
   #define HAS_AUTO_FAN_0 1

commit b07887687ed96645b3e67ae2586c8198575a3e5d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 31 07:42:07 2021 -0600

    üöëÔ∏è Fix thermal conditionals, structure

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a5c9d20eda..e1e82c40f2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2542,39 +2542,39 @@
 #else
   #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
 #if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
 #endif
 
 // Thermal protection
-#if BOTH(HAS_HEATED_BED, THERMAL_PROTECTION_BED)
-  #define HAS_THERMALLY_PROTECTED_BED 1
+#if !HAS_HEATED_BED
+  #undef THERMAL_PROTECTION_BED
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
-#if HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0
+#if ENABLED(THERMAL_PROTECTION_BED) && WATCH_BED_TEMP_PERIOD > 0
   #define WATCH_BED 1
 #endif
 #if BOTH(HAS_HEATED_CHAMBER, THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
   #define WATCH_CHAMBER 1
 #endif
 #if BOTH(HAS_COOLER, THERMAL_PROTECTION_COOLER) && WATCH_COOLER_TEMP_PERIOD > 0
   #define WATCH_COOLER 1
 #endif
 #if  (ENABLED(THERMAL_PROTECTION_HOTENDS) || !EXTRUDERS) \
   && (ENABLED(THERMAL_PROTECTION_BED)     || !HAS_HEATED_BED) \
   && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER) \
-  && (ENABLED(THERMAL_PROTECTION_COOLER) || !HAS_COOLER)
+  && (ENABLED(THERMAL_PROTECTION_COOLER)  || !HAS_COOLER)
   #define THERMALLY_SAFE 1
 #endif
 
 // Auto fans
 #if HAS_HOTEND && PIN_EXISTS(E0_AUTO_FAN)
   #define HAS_AUTO_FAN_0 1
 #endif
 #if HAS_MULTI_HOTEND && PIN_EXISTS(E1_AUTO_FAN)
   #define HAS_AUTO_FAN_1 1
 #endif

commit c74161c011abfeb7004631f63642566f37a845db
Author: fflosi <34758322+fflosi@users.noreply.github.com>
Date:   Sat Dec 25 05:57:07 2021 -0300

    ‚ú® Per-axis TMC hold multiplier (#23345)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 95c8f7737b..a5c9d20eda 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1854,245 +1854,346 @@
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1
   #endif
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
     #undef Z2_STALL_SENSITIVITY
     #undef Z3_STALL_SENSITIVITY
     #undef Z4_STALL_SENSITIVITY
   #endif
-  #if defined(X_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(X)
-    #define X_SENSORLESS 1
-  #endif
-  #if defined(X2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(X2)
-    #define X2_SENSORLESS 1
-  #endif
-  #if defined(Y_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(Y)
-    #define Y_SENSORLESS 1
-  #endif
-  #if defined(Y2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Y2)
-    #define Y2_SENSORLESS 1
-  #endif
-  #if defined(Z_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(Z)
-    #define Z_SENSORLESS 1
-  #endif
-  #if defined(Z2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z2)
-    #define Z2_SENSORLESS 1
-  #endif
-  #if defined(Z3_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z3)
-    #define Z3_SENSORLESS 1
-  #endif
-  #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
-    #define Z4_SENSORLESS 1
-  #endif
-  #if defined(I_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(I)
-    #define I_SENSORLESS 1
-  #endif
-  #if defined(J_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(J)
-    #define J_SENSORLESS 1
-  #endif
-  #if defined(K_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(K)
-    #define K_SENSORLESS 1
-  #endif
 
-  #if AXIS_HAS_STEALTHCHOP(X)
-    #define X_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(X2)
-    #define X2_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(Y)
-    #define Y_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(Y2)
-    #define Y2_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(Z)
-    #define Z_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(Z2)
-    #define Z2_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(Z3)
-    #define Z3_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(Z4)
-    #define Z4_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(I)
-    #define I_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(J)
-    #define J_HAS_STEALTHCHOP 1
-  #endif
-  #if AXIS_HAS_STEALTHCHOP(K)
-    #define K_HAS_STEALTHCHOP 1
-  #endif
-  #if E_STEPPERS > 0 && AXIS_HAS_STEALTHCHOP(E0)
-    #define E0_HAS_STEALTHCHOP 1
-  #endif
-  #if E_STEPPERS > 1 && AXIS_HAS_STEALTHCHOP(E1)
-    #define E1_HAS_STEALTHCHOP 1
-  #endif
-  #if E_STEPPERS > 2 && AXIS_HAS_STEALTHCHOP(E2)
-    #define E2_HAS_STEALTHCHOP 1
-  #endif
-  #if E_STEPPERS > 3 && AXIS_HAS_STEALTHCHOP(E3)
-    #define E3_HAS_STEALTHCHOP 1
-  #endif
-  #if E_STEPPERS > 4 && AXIS_HAS_STEALTHCHOP(E4)
-    #define E4_HAS_STEALTHCHOP 1
-  #endif
-  #if E_STEPPERS > 5 && AXIS_HAS_STEALTHCHOP(E5)
-    #define E5_HAS_STEALTHCHOP 1
-  #endif
-  #if E_STEPPERS > 6 && AXIS_HAS_STEALTHCHOP(E6)
-    #define E6_HAS_STEALTHCHOP 1
+  #if AXIS_IS_TMC(X)
+    #if defined(X_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(X)
+      #define X_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(X)
+      #define X_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
+      #define X_SPI_SENSORLESS X_SENSORLESS
+    #endif
+    #ifndef X_INTERPOLATE
+      #define X_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef X_HOLD_MULTIPLIER
+      #define X_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef X_SLAVE_ADDRESS
+      #define X_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #if E_STEPPERS > 7 && AXIS_HAS_STEALTHCHOP(E7)
-    #define E7_HAS_STEALTHCHOP 1
+
+  #if AXIS_IS_TMC(X2)
+    #if defined(X2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(X2)
+      #define X2_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(X2)
+      #define X2_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef X2_INTERPOLATE
+      #define X2_INTERPOLATE X_INTERPOLATE
+    #endif
+    #ifndef X2_HOLD_MULTIPLIER
+      #define X2_HOLD_MULTIPLIER X_HOLD_MULTIPLIER
+    #endif
+    #ifndef X2_SLAVE_ADDRESS
+      #define X2_SLAVE_ADDRESS 0
+    #endif
   #endif
 
-  #if ENABLED(SPI_ENDSTOPS)
-    #define X_SPI_SENSORLESS X_SENSORLESS
-    #if HAS_Y_AXIS
+  #if AXIS_IS_TMC(Y)
+    #if defined(Y_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Y)
+      #define Y_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(Y)
+      #define Y_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
       #define Y_SPI_SENSORLESS Y_SENSORLESS
     #endif
-    #if HAS_Z_AXIS
-      #define Z_SPI_SENSORLESS Z_SENSORLESS
+    #ifndef Y_INTERPOLATE
+      #define Y_INTERPOLATE INTERPOLATE
     #endif
-    #if LINEAR_AXES >= 4
-      #define I_SPI_SENSORLESS I_SENSORLESS
+    #ifndef Y_HOLD_MULTIPLIER
+      #define Y_HOLD_MULTIPLIER HOLD_MULTIPLIER
     #endif
-    #if LINEAR_AXES >= 5
-      #define J_SPI_SENSORLESS J_SENSORLESS
+    #ifndef Y_SLAVE_ADDRESS
+      #define Y_SLAVE_ADDRESS 0
     #endif
-    #if LINEAR_AXES >= 6
-      #define K_SPI_SENSORLESS K_SENSORLESS
+    #if ENABLED(Y_DUAL_STEPPER_DRIVERS)
+      #if defined(Y2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Y2)
+        #define Y2_SENSORLESS 1
+      #endif
+      #if AXIS_HAS_STEALTHCHOP(Y2)
+        #define Y2_HAS_STEALTHCHOP 1
+      #endif
+      #ifndef Y2_INTERPOLATE
+        #define Y2_INTERPOLATE Y_INTERPOLATE
+      #endif
+      #ifndef Y2_HOLD_MULTIPLIER
+        #define Y2_HOLD_MULTIPLIER Y_HOLD_MULTIPLIER
+      #endif
+      #ifndef Y2_SLAVE_ADDRESS
+        #define Y2_SLAVE_ADDRESS 0
+      #endif
     #endif
   #endif
-  #ifndef X_INTERPOLATE
-    #define X_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef X2_INTERPOLATE
-    #define X2_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef Y_INTERPOLATE
-    #define Y_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef Y2_INTERPOLATE
-    #define Y2_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef Z_INTERPOLATE
-    #define Z_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef Z2_INTERPOLATE
-    #define Z2_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef Z3_INTERPOLATE
-    #define Z3_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef Z4_INTERPOLATE
-    #define Z4_INTERPOLATE INTERPOLATE
-  #endif
-  #if LINEAR_AXES >= 4 && !defined(I_INTERPOLATE)
-    #define I_INTERPOLATE INTERPOLATE
-  #endif
-  #if LINEAR_AXES >= 5 && !defined(J_INTERPOLATE)
-    #define J_INTERPOLATE INTERPOLATE
-  #endif
-  #if LINEAR_AXES >= 6 && !defined(K_INTERPOLATE)
-    #define K_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef E0_INTERPOLATE
-    #define E0_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef E1_INTERPOLATE
-    #define E1_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef E2_INTERPOLATE
-    #define E2_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef E3_INTERPOLATE
-    #define E3_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef E4_INTERPOLATE
-    #define E4_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef E5_INTERPOLATE
-    #define E5_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef E6_INTERPOLATE
-    #define E6_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef E7_INTERPOLATE
-    #define E7_INTERPOLATE INTERPOLATE
-  #endif
-  #ifndef X_SLAVE_ADDRESS
-    #define X_SLAVE_ADDRESS 0
-  #endif
-  #ifndef Y_SLAVE_ADDRESS
-    #define Y_SLAVE_ADDRESS 0
-  #endif
-  #ifndef Z_SLAVE_ADDRESS
-    #define Z_SLAVE_ADDRESS 0
-  #endif
-  #ifndef I_SLAVE_ADDRESS
-    #define I_SLAVE_ADDRESS 0
-  #endif
-  #ifndef J_SLAVE_ADDRESS
-    #define J_SLAVE_ADDRESS 0
-  #endif
-  #ifndef K_SLAVE_ADDRESS
-    #define K_SLAVE_ADDRESS 0
-  #endif
-  #ifndef X2_SLAVE_ADDRESS
-    #define X2_SLAVE_ADDRESS 0
-  #endif
-  #ifndef Y2_SLAVE_ADDRESS
-    #define Y2_SLAVE_ADDRESS 0
+
+  #if AXIS_IS_TMC(Z)
+    #if defined(Z_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z)
+      #define Z_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(Z)
+      #define Z_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
+      #define Z_SPI_SENSORLESS Z_SENSORLESS
+    #endif
+    #ifndef Z_INTERPOLATE
+      #define Z_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef Z_HOLD_MULTIPLIER
+      #define Z_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef Z_SLAVE_ADDRESS
+      #define Z_SLAVE_ADDRESS 0
+    #endif
+    #if NUM_Z_STEPPER_DRIVERS >= 2
+      #if defined(Z2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z2)
+        #define Z2_SENSORLESS 1
+      #endif
+      #if AXIS_HAS_STEALTHCHOP(Z2)
+        #define Z2_HAS_STEALTHCHOP 1
+      #endif
+      #ifndef Z2_INTERPOLATE
+        #define Z2_INTERPOLATE Z_INTERPOLATE
+      #endif
+      #ifndef Z2_HOLD_MULTIPLIER
+        #define Z2_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
+      #endif
+      #ifndef Z2_SLAVE_ADDRESS
+        #define Z2_SLAVE_ADDRESS 0
+      #endif
+    #endif
+    #if NUM_Z_STEPPER_DRIVERS >= 3
+      #if defined(Z3_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z3)
+        #define Z3_SENSORLESS 1
+      #endif
+      #if AXIS_HAS_STEALTHCHOP(Z3)
+        #define Z3_HAS_STEALTHCHOP 1
+      #endif
+      #ifndef Z3_INTERPOLATE
+        #define Z3_INTERPOLATE Z_INTERPOLATE
+      #endif
+      #ifndef Z3_HOLD_MULTIPLIER
+        #define Z3_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
+      #endif
+      #ifndef Z3_SLAVE_ADDRESS
+        #define Z3_SLAVE_ADDRESS 0
+      #endif
+    #endif
+    #if NUM_Z_STEPPER_DRIVERS >= 4
+      #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
+        #define Z4_SENSORLESS 1
+      #endif
+      #if AXIS_HAS_STEALTHCHOP(Z4)
+        #define Z4_HAS_STEALTHCHOP 1
+      #endif
+      #ifndef Z4_INTERPOLATE
+        #define Z4_INTERPOLATE Z_INTERPOLATE
+      #endif
+      #ifndef Z4_HOLD_MULTIPLIER
+        #define Z4_HOLD_MULTIPLIER Z_HOLD_MULTIPLIER
+      #endif
+      #ifndef Z4_SLAVE_ADDRESS
+        #define Z4_SLAVE_ADDRESS 0
+      #endif
+    #endif
   #endif
-  #ifndef Z2_SLAVE_ADDRESS
-    #define Z2_SLAVE_ADDRESS 0
+
+  #if AXIS_IS_TMC(I)
+    #if defined(I_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(I)
+      #define I_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(I)
+      #define I_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
+      #define I_SPI_SENSORLESS I_SENSORLESS
+    #endif
+    #ifndef I_INTERPOLATE
+      #define I_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef I_HOLD_MULTIPLIER
+      #define I_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef I_SLAVE_ADDRESS
+      #define I_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef Z3_SLAVE_ADDRESS
-    #define Z3_SLAVE_ADDRESS 0
+
+  #if AXIS_IS_TMC(J)
+    #if defined(J_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(J)
+      #define J_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(J)
+      #define J_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
+      #define J_SPI_SENSORLESS J_SENSORLESS
+    #endif
+    #ifndef J_INTERPOLATE
+      #define J_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef J_HOLD_MULTIPLIER
+      #define J_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef J_SLAVE_ADDRESS
+      #define J_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef Z4_SLAVE_ADDRESS
-    #define Z4_SLAVE_ADDRESS 0
+
+  #if AXIS_IS_TMC(K)
+    #if defined(K_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(K)
+      #define K_SENSORLESS 1
+    #endif
+    #if AXIS_HAS_STEALTHCHOP(K)
+      #define K_HAS_STEALTHCHOP 1
+    #endif
+    #if ENABLED(SPI_ENDSTOPS)
+      #define K_SPI_SENSORLESS K_SENSORLESS
+    #endif
+    #ifndef K_INTERPOLATE
+      #define K_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef K_HOLD_MULTIPLIER
+      #define K_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef K_SLAVE_ADDRESS
+      #define K_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef E0_SLAVE_ADDRESS
-    #define E0_SLAVE_ADDRESS 0
+
+  #if AXIS_IS_TMC(E0)
+    #if AXIS_HAS_STEALTHCHOP(E0)
+      #define E0_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef E0_INTERPOLATE
+      #define E0_INTERPOLATE INTERPOLATE
+    #endif
+    #ifndef E0_HOLD_MULTIPLIER
+      #define E0_HOLD_MULTIPLIER HOLD_MULTIPLIER
+    #endif
+    #ifndef E0_SLAVE_ADDRESS
+      #define E0_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef E1_SLAVE_ADDRESS
-    #define E1_SLAVE_ADDRESS 0
+  #if AXIS_IS_TMC(E1)
+    #if AXIS_HAS_STEALTHCHOP(E1)
+      #define E1_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef E1_INTERPOLATE
+      #define E1_INTERPOLATE E0_INTERPOLATE
+    #endif
+    #ifndef E1_HOLD_MULTIPLIER
+      #define E1_HOLD_MULTIPLIER E0_HOLD_MULTIPLIER
+    #endif
+    #ifndef E1_SLAVE_ADDRESS
+      #define E1_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef E2_SLAVE_ADDRESS
-    #define E2_SLAVE_ADDRESS 0
+  #if AXIS_IS_TMC(E2)
+    #if AXIS_HAS_STEALTHCHOP(E2)
+      #define E2_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef E2_INTERPOLATE
+      #define E2_INTERPOLATE E0_INTERPOLATE
+    #endif
+    #ifndef E2_HOLD_MULTIPLIER
+      #define E2_HOLD_MULTIPLIER E0_HOLD_MULTIPLIER
+    #endif
+    #ifndef E2_SLAVE_ADDRESS
+      #define E2_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef E3_SLAVE_ADDRESS
-    #define E3_SLAVE_ADDRESS 0
+  #if AXIS_IS_TMC(E3)
+    #if AXIS_HAS_STEALTHCHOP(E3)
+      #define E3_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef E3_INTERPOLATE
+      #define E3_INTERPOLATE E0_INTERPOLATE
+    #endif
+    #ifndef E3_HOLD_MULTIPLIER
+      #define E3_HOLD_MULTIPLIER E0_HOLD_MULTIPLIER
+    #endif
+    #ifndef E3_SLAVE_ADDRESS
+      #define E3_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef E4_SLAVE_ADDRESS
-    #define E4_SLAVE_ADDRESS 0
+  #if AXIS_IS_TMC(E4)
+    #if AXIS_HAS_STEALTHCHOP(E4)
+      #define E4_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef E4_INTERPOLATE
+      #define E4_INTERPOLATE E0_INTERPOLATE
+    #endif
+    #ifndef E4_HOLD_MULTIPLIER
+      #define E4_HOLD_MULTIPLIER E0_HOLD_MULTIPLIER
+    #endif
+    #ifndef E4_SLAVE_ADDRESS
+      #define E4_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef E5_SLAVE_ADDRESS
-    #define E5_SLAVE_ADDRESS 0
+  #if AXIS_IS_TMC(E5)
+    #if AXIS_HAS_STEALTHCHOP(E5)
+      #define E5_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef E5_INTERPOLATE
+      #define E5_INTERPOLATE E0_INTERPOLATE
+    #endif
+    #ifndef E5_HOLD_MULTIPLIER
+      #define E5_HOLD_MULTIPLIER E0_HOLD_MULTIPLIER
+    #endif
+    #ifndef E5_SLAVE_ADDRESS
+      #define E5_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef E6_SLAVE_ADDRESS
-    #define E6_SLAVE_ADDRESS 0
+  #if AXIS_IS_TMC(E6)
+    #if AXIS_HAS_STEALTHCHOP(E6)
+      #define E6_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef E6_INTERPOLATE
+      #define E6_INTERPOLATE E0_INTERPOLATE
+    #endif
+    #ifndef E6_HOLD_MULTIPLIER
+      #define E6_HOLD_MULTIPLIER E0_HOLD_MULTIPLIER
+    #endif
+    #ifndef E6_SLAVE_ADDRESS
+      #define E6_SLAVE_ADDRESS 0
+    #endif
   #endif
-  #ifndef E7_SLAVE_ADDRESS
-    #define E7_SLAVE_ADDRESS 0
+  #if AXIS_IS_TMC(E7)
+    #if AXIS_HAS_STEALTHCHOP(E7)
+      #define E7_HAS_STEALTHCHOP 1
+    #endif
+    #ifndef E7_INTERPOLATE
+      #define E7_INTERPOLATE E0_INTERPOLATE
+    #endif
+    #ifndef E7_HOLD_MULTIPLIER
+      #define E7_HOLD_MULTIPLIER E0_HOLD_MULTIPLIER
+    #endif
+    #ifndef E7_SLAVE_ADDRESS
+      #define E7_SLAVE_ADDRESS 0
+    #endif
   #endif
-#endif
+#endif // HAS_TRINAMIC_CONFIG
 
 #if ANY_AXIS_HAS(HW_SERIAL)
   #define HAS_TMC_HW_SERIAL 1
 #endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
 #if DISABLED(SENSORLESS_HOMING)
   #undef SENSORLESS_BACKOFF_MM

commit 3e737cbc910315364b77af6b1d6d3e92306f48f3
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Thu Dec 23 15:19:39 2021 +0700

    üîß Group FAST_PWM_FAN.options (#23331)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7fb8395506..95c8f7737b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2660,31 +2660,20 @@
 #if FAN_MIN_PWM < 0 || FAN_MIN_PWM > 255
   #error "FAN_MIN_PWM must be a value from 0 to 255."
 #elif FAN_MAX_PWM < 0 || FAN_MAX_PWM > 255
   #error "FAN_MAX_PWM must be a value from 0 to 255."
 #elif FAN_MIN_PWM > FAN_MAX_PWM
   #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
 #elif FAN_OFF_PWM > FAN_MIN_PWM
   #error "FAN_OFF_PWM must be less than or equal to FAN_MIN_PWM."
 #endif
 
-/**
- * FAST PWM FAN default PWM frequency
- */
-#if !defined(FAST_PWM_FAN_FREQUENCY) && ENABLED(FAST_PWM_FAN)
-  #ifdef __AVR__
-    #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1))
-  #else
-    #define FAST_PWM_FAN_FREQUENCY 1000U
-  #endif
-#endif
-
 /**
  * Controller Fan Settings
  */
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define HAS_CONTROLLER_FAN 1
   #if CONTROLLER_FAN_MIN_BOARD_TEMP
     #define HAS_CONTROLLER_FAN_MIN_BOARD_TEMP 1
   #endif
 #endif
 

commit f374fa0eb8cfa60981b25cb99856c14328fd703e
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Tue Dec 21 01:26:31 2021 -0600

    üöëÔ∏è FAST_PWM_FAN default 1KHz base freq. (#23326)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 971318518d..7fb8395506 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2661,24 +2661,28 @@
   #error "FAN_MIN_PWM must be a value from 0 to 255."
 #elif FAN_MAX_PWM < 0 || FAN_MAX_PWM > 255
   #error "FAN_MAX_PWM must be a value from 0 to 255."
 #elif FAN_MIN_PWM > FAN_MAX_PWM
   #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
 #elif FAN_OFF_PWM > FAN_MIN_PWM
   #error "FAN_OFF_PWM must be less than or equal to FAN_MIN_PWM."
 #endif
 
 /**
- * FAST PWM FAN Settings
+ * FAST PWM FAN default PWM frequency
  */
-#if ENABLED(FAST_PWM_FAN) && !defined(FAST_PWM_FAN_FREQUENCY)
-  #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1)) // Fan frequency default
+#if !defined(FAST_PWM_FAN_FREQUENCY) && ENABLED(FAST_PWM_FAN)
+  #ifdef __AVR__
+    #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1))
+  #else
+    #define FAST_PWM_FAN_FREQUENCY 1000U
+  #endif
 #endif
 
 /**
  * Controller Fan Settings
  */
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define HAS_CONTROLLER_FAN 1
   #if CONTROLLER_FAN_MIN_BOARD_TEMP
     #define HAS_CONTROLLER_FAN_MIN_BOARD_TEMP 1
   #endif

commit e5154ec28179c7dc7b58a830412e7cb09c2f878c
Author: John Robertson <john@cirtech.co.uk>
Date:   Tue Nov 23 21:24:24 2021 +0000

    ‚ú® MarkForged YX kinematics (#23163)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d0b5aff5dd..971318518d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -186,21 +186,21 @@
   #ifndef X1_MIN_POS
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
   #endif
 #endif
 
 // Calibration codes only for non-core axes
 #if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
-  #if EITHER(IS_CORE, MARKFORGED_XY)
+  #if ANY(IS_CORE, MARKFORGED_XY, MARKFORGED_YX)
     #define CAN_CALIBRATE(A,B) (_AXIS(A) == B)
   #else
     #define CAN_CALIBRATE(A,B) true
   #endif
 #endif
 #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 
 /**
  * No adjustable bed on non-cartesians
  */

commit 7110d11c9d8933c8c412c2fabd3b065a5ab97b6e
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Nov 23 21:01:53 2021 +0100

    ‚ú® Fan tachometer support (#23086)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ae3a8a8bf2..d0b5aff5dd 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2503,24 +2503,56 @@
 #endif
 
 #if ANY(HAS_AUTO_FAN_0, HAS_AUTO_FAN_1, HAS_AUTO_FAN_2, HAS_AUTO_FAN_3, HAS_AUTO_FAN_4, HAS_AUTO_FAN_5, HAS_AUTO_FAN_6, HAS_AUTO_FAN_7, HAS_AUTO_CHAMBER_FAN, HAS_AUTO_COOLER_FAN)
   #define HAS_AUTO_FAN 1
 #endif
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN && (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
   #define AUTO_CHAMBER_IS_E 1
 #endif
 
+// Fans check
+#if HAS_HOTEND && PIN_EXISTS(E0_FAN_TACHO)
+  #define HAS_E0_FAN_TACHO 1
+#endif
+#if HOTENDS > 1 && PIN_EXISTS(E1_FAN_TACHO)
+  #define HAS_E1_FAN_TACHO 1
+#endif
+#if HOTENDS > 2 && PIN_EXISTS(E2_FAN_TACHO)
+  #define HAS_E2_FAN_TACHO 1
+#endif
+#if HOTENDS > 3 && PIN_EXISTS(E3_FAN_TACHO)
+  #define HAS_E3_FAN_TACHO 1
+#endif
+#if HOTENDS > 4 && PIN_EXISTS(E4_FAN_TACHO)
+  #define HAS_E4_FAN_TACHO 1
+#endif
+#if HOTENDS > 5 && PIN_EXISTS(E5_FAN_TACHO)
+  #define HAS_E5_FAN_TACHO 1
+#endif
+#if HOTENDS > 6 && PIN_EXISTS(E6_FAN_TACHO)
+  #define HAS_E6_FAN_TACHO 1
+#endif
+#if HOTENDS > 7 && PIN_EXISTS(E7_FAN_TACHO)
+  #define HAS_E7_FAN_TACHO 1
+#endif
+#if ANY(HAS_E0_FAN_TACHO, HAS_E1_FAN_TACHO, HAS_E2_FAN_TACHO, HAS_E3_FAN_TACHO, HAS_E4_FAN_TACHO, HAS_E5_FAN_TACHO, HAS_E6_FAN_TACHO, HAS_E7_FAN_TACHO)
+  #define HAS_FANCHECK 1
+  #if HAS_AUTO_FAN && EXTRUDER_AUTO_FAN_SPEED != 255 && DISABLED(FOURWIRES_FANS)
+    #define HAS_PWMFANCHECK 1
+  #endif
+#endif
+
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
-#if ANY(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS, AUTO_REPORT_POSITION)
+#if ANY(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS, AUTO_REPORT_POSITION, AUTO_REPORT_FANS)
   #define HAS_AUTO_REPORTING 1
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Print Cooling fans (limit)
 #ifdef NUM_M106_FANS
   #define MAX_FANS NUM_M106_FANS

commit 6ac0d4727cd4abe70002c32faf3d87c7e24bfad3
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sun Nov 21 11:25:06 2021 -0800

    ‚ú® BigTreeTech Mini 12864 V1.0 (#23130)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8008461547..ae3a8a8bf2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -366,21 +366,21 @@
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
 #elif EITHER(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
-#elif ENABLED(MKS_MINI_12864_V3)
+#elif EITHER(MKS_MINI_12864_V3, BTT_MINI_12864_V1)
   #define _LCD_CONTRAST_MIN  255
   #define _LCD_CONTRAST_INIT 255
   #define _LCD_CONTRAST_MAX  255
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17

commit 399faa91b99dab0f8565396efd32f277965c93b2
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Thu Nov 4 14:04:06 2021 +1300

    üìå 'STOP' auto-assign, some Chitu V9 pins (#22889)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c8b6d504e2..8008461547 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -762,33 +762,39 @@
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMIN_
         #define X2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMAX_
         #define X2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #else
         #define X2_MAX_ENDSTOP_INVERTING false
       #endif
     #endif
-    #ifndef X2_MAX_PIN
+    #if !defined(X2_MAX_PIN) && !defined(X2_STOP_PIN)
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MAX_PIN X_MIN_PIN
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MAX_PIN X_MAX_PIN
+      #elif X2_USE_ENDSTOP == _XSTOP_
+        #define X2_MAX_PIN X_STOP_PIN
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MAX_PIN Y_MIN_PIN
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MAX_PIN Y_MAX_PIN
+      #elif X2_USE_ENDSTOP == _YSTOP_
+        #define X2_MAX_PIN Y_STOP_PIN
       #elif X2_USE_ENDSTOP == _ZMIN_
         #define X2_MAX_PIN Z_MIN_PIN
       #elif X2_USE_ENDSTOP == _ZMAX_
         #define X2_MAX_PIN Z_MAX_PIN
+      #elif X2_USE_ENDSTOP == _ZSTOP_
+        #define X2_MAX_PIN Z_STOP_PIN
       #elif X2_USE_ENDSTOP == _XDIAG_
         #define X2_MAX_PIN X_DIAG_PIN
       #elif X2_USE_ENDSTOP == _YDIAG_
         #define X2_MAX_PIN Y_DIAG_PIN
       #elif X2_USE_ENDSTOP == _ZDIAG_
         #define X2_MAX_PIN Z_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E0DIAG_
         #define X2_MAX_PIN E0_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E1DIAG_
         #define X2_MAX_PIN E1_DIAG_PIN
@@ -820,33 +826,39 @@
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMIN_
         #define X2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMAX_
         #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #else
         #define X2_MIN_ENDSTOP_INVERTING false
       #endif
     #endif
-    #ifndef X2_MIN_PIN
+    #if !defined(X2_MIN_PIN) && !defined(X2_STOP_PIN)
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MIN_PIN X_MIN_PIN
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MIN_PIN X_MAX_PIN
+      #elif X2_USE_ENDSTOP == _XSTOP_
+        #define X2_MIN_PIN X_STOP_PIN
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MIN_PIN Y_MIN_PIN
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MIN_PIN Y_MAX_PIN
+      #elif X2_USE_ENDSTOP == _YSTOP_
+        #define X2_MIN_PIN Y_STOP_PIN
       #elif X2_USE_ENDSTOP == _ZMIN_
         #define X2_MIN_PIN Z_MIN_PIN
       #elif X2_USE_ENDSTOP == _ZMAX_
         #define X2_MIN_PIN Z_MAX_PIN
+      #elif X2_USE_ENDSTOP == _ZSTOP_
+        #define X2_MIN_PIN Z_STOP_PIN
       #elif X2_USE_ENDSTOP == _XDIAG_
         #define X2_MIN_PIN X_DIAG_PIN
       #elif X2_USE_ENDSTOP == _YDIAG_
         #define X2_MIN_PIN Y_DIAG_PIN
       #elif X2_USE_ENDSTOP == _ZDIAG_
         #define X2_MIN_PIN Z_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E0DIAG_
         #define X2_MIN_PIN E0_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E1DIAG_
         #define X2_MIN_PIN E1_DIAG_PIN
@@ -885,33 +897,39 @@
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMIN_
         #define Y2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMAX_
         #define Y2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #else
         #define Y2_MAX_ENDSTOP_INVERTING false
       #endif
     #endif
-    #ifndef Y2_MAX_PIN
+    #if !defined(Y2_MAX_PIN) && !defined(Y2_STOP_PIN)
       #if Y2_USE_ENDSTOP == _XMIN_
         #define Y2_MAX_PIN X_MIN_PIN
       #elif Y2_USE_ENDSTOP == _XMAX_
         #define Y2_MAX_PIN X_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _XSTOP_
+        #define Y2_MAX_PIN X_STOP_PIN
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MAX_PIN Y_MIN_PIN
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MAX_PIN Y_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _YSTOP_
+        #define Y2_MAX_PIN Y_STOP_PIN
       #elif Y2_USE_ENDSTOP == _ZMIN_
         #define Y2_MAX_PIN Z_MIN_PIN
       #elif Y2_USE_ENDSTOP == _ZMAX_
         #define Y2_MAX_PIN Z_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _ZSTOP_
+        #define Y2_MAX_PIN Z_STOP_PIN
       #elif Y2_USE_ENDSTOP == _XDIAG_
         #define Y2_MAX_PIN X_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _YDIAG_
         #define Y2_MAX_PIN Y_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _ZDIAG_
         #define Y2_MAX_PIN Z_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E0DIAG_
         #define Y2_MAX_PIN E0_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E1DIAG_
         #define Y2_MAX_PIN E1_DIAG_PIN
@@ -943,33 +961,39 @@
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMIN_
         #define Y2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMAX_
         #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #else
         #define Y2_MIN_ENDSTOP_INVERTING false
       #endif
     #endif
-    #ifndef Y2_MIN_PIN
+    #if !defined(Y2_MIN_PIN) && !defined(Y2_STOP_PIN)
       #if Y2_USE_ENDSTOP == _XMIN_
         #define Y2_MIN_PIN X_MIN_PIN
       #elif Y2_USE_ENDSTOP == _XMAX_
         #define Y2_MIN_PIN X_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _XSTOP_
+        #define Y2_MIN_PIN X_STOP_PIN
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MIN_PIN Y_MIN_PIN
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MIN_PIN Y_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _YSTOP_
+        #define Y2_MIN_PIN Y_STOP_PIN
       #elif Y2_USE_ENDSTOP == _ZMIN_
         #define Y2_MIN_PIN Z_MIN_PIN
       #elif Y2_USE_ENDSTOP == _ZMAX_
         #define Y2_MIN_PIN Z_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _ZSTOP_
+        #define Y2_MIN_PIN Z_STOP_PIN
       #elif Y2_USE_ENDSTOP == _XDIAG_
         #define Y2_MIN_PIN X_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _YDIAG_
         #define Y2_MIN_PIN Y_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _ZDIAG_
         #define Y2_MIN_PIN Z_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E0DIAG_
         #define Y2_MIN_PIN E0_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E1DIAG_
         #define Y2_MIN_PIN E1_DIAG_PIN
@@ -1009,33 +1033,39 @@
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMIN_
         #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMAX_
         #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #else
         #define Z2_MAX_ENDSTOP_INVERTING false
       #endif
     #endif
-    #ifndef Z2_MAX_PIN
+    #if !defined(Z2_MAX_PIN) && !defined(Z2_STOP_PIN)
       #if Z2_USE_ENDSTOP == _XMIN_
         #define Z2_MAX_PIN X_MIN_PIN
       #elif Z2_USE_ENDSTOP == _XMAX_
         #define Z2_MAX_PIN X_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _XSTOP_
+        #define Z2_MAX_PIN X_STOP_PIN
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MAX_PIN Y_MIN_PIN
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MAX_PIN Y_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _YSTOP_
+        #define Z2_MAX_PIN Y_STOP_PIN
       #elif Z2_USE_ENDSTOP == _ZMIN_
         #define Z2_MAX_PIN Z_MIN_PIN
       #elif Z2_USE_ENDSTOP == _ZMAX_
         #define Z2_MAX_PIN Z_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _ZSTOP_
+        #define Z2_MAX_PIN Z_STOP_PIN
       #elif Z2_USE_ENDSTOP == _XDIAG_
         #define Z2_MAX_PIN X_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _YDIAG_
         #define Z2_MAX_PIN Y_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _ZDIAG_
         #define Z2_MAX_PIN Z_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E0DIAG_
         #define Z2_MAX_PIN E0_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E1DIAG_
         #define Z2_MAX_PIN E1_DIAG_PIN
@@ -1072,28 +1102,34 @@
         #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #else
         #define Z2_MIN_ENDSTOP_INVERTING false
       #endif
     #endif
     #ifndef Z2_MIN_PIN
       #if Z2_USE_ENDSTOP == _XMIN_
         #define Z2_MIN_PIN X_MIN_PIN
       #elif Z2_USE_ENDSTOP == _XMAX_
         #define Z2_MIN_PIN X_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _XSTOP_
+        #define Z2_MIN_PIN X_STOP_PIN
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MIN_PIN Y_MIN_PIN
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MIN_PIN Y_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _YSTOP_
+        #define Z2_MIN_PIN Y_STOP_PIN
       #elif Z2_USE_ENDSTOP == _ZMIN_
         #define Z2_MIN_PIN Z_MIN_PIN
       #elif Z2_USE_ENDSTOP == _ZMAX_
         #define Z2_MIN_PIN Z_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _ZSTOP_
+        #define Z2_MIN_PIN Z_STOP_PIN
       #elif Z2_USE_ENDSTOP == _XDIAG_
         #define Z2_MIN_PIN X_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _YDIAG_
         #define Z2_MIN_PIN Y_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _ZDIAG_
         #define Z2_MIN_PIN Z_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E0DIAG_
         #define Z2_MIN_PIN E0_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E1DIAG_
         #define Z2_MIN_PIN E1_DIAG_PIN
@@ -1133,28 +1169,34 @@
           #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
         #else
           #define Z3_MAX_ENDSTOP_INVERTING false
         #endif
       #endif
       #ifndef Z3_MAX_PIN
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MAX_PIN X_MIN_PIN
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MAX_PIN X_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _XSTOP_
+          #define Z3_MAX_PIN X_STOP_PIN
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MAX_PIN Y_MIN_PIN
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MAX_PIN Y_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _YSTOP_
+          #define Z3_MAX_PIN Y_STOP_PIN
         #elif Z3_USE_ENDSTOP == _ZMIN_
           #define Z3_MAX_PIN Z_MIN_PIN
         #elif Z3_USE_ENDSTOP == _ZMAX_
           #define Z3_MAX_PIN Z_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _ZSTOP_
+          #define Z3_MAX_PIN Z_STOP_PIN
         #elif Z3_USE_ENDSTOP == _XDIAG_
           #define Z3_MAX_PIN X_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _YDIAG_
           #define Z3_MAX_PIN Y_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _ZDIAG_
           #define Z3_MAX_PIN Z_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E0DIAG_
           #define Z3_MAX_PIN E0_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E1DIAG_
           #define Z3_MAX_PIN E1_DIAG_PIN
@@ -1191,28 +1233,34 @@
           #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
         #else
           #define Z3_MIN_ENDSTOP_INVERTING false
         #endif
       #endif
       #ifndef Z3_MIN_PIN
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MIN_PIN X_MIN_PIN
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MIN_PIN X_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _XSTOP_
+          #define Z3_MIN_PIN X_STOP_PIN
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MIN_PIN Y_MIN_PIN
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MIN_PIN Y_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _YSTOP_
+          #define Z3_MIN_PIN Y_STOP_PIN
         #elif Z3_USE_ENDSTOP == _ZMIN_
           #define Z3_MIN_PIN Z_MIN_PIN
         #elif Z3_USE_ENDSTOP == _ZMAX_
           #define Z3_MIN_PIN Z_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _ZSTOP_
+          #define Z3_MIN_PIN Z_STOP_PIN
         #elif Z3_USE_ENDSTOP == _XDIAG_
           #define Z3_MIN_PIN X_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _YDIAG_
           #define Z3_MIN_PIN Y_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _ZDIAG_
           #define Z3_MIN_PIN Z_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E0DIAG_
           #define Z3_MIN_PIN E0_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E1DIAG_
           #define Z3_MIN_PIN E1_DIAG_PIN
@@ -1253,28 +1301,34 @@
           #define Z4_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
         #else
           #define Z4_MAX_ENDSTOP_INVERTING false
         #endif
       #endif
       #ifndef Z4_MAX_PIN
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MAX_PIN X_MIN_PIN
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MAX_PIN X_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _XSTOP_
+          #define Z4_MAX_PIN X_STOP_PIN
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MAX_PIN Y_MIN_PIN
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MAX_PIN Y_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _YSTOP_
+          #define Z4_MAX_PIN Y_STOP_PIN
         #elif Z4_USE_ENDSTOP == _ZMIN_
           #define Z4_MAX_PIN Z_MIN_PIN
         #elif Z4_USE_ENDSTOP == _ZMAX_
           #define Z4_MAX_PIN Z_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _ZSTOP_
+          #define Z4_MAX_PIN Z_STOP_PIN
         #elif Z4_USE_ENDSTOP == _XDIAG_
           #define Z4_MAX_PIN X_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _YDIAG_
           #define Z4_MAX_PIN Y_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _ZDIAG_
           #define Z4_MAX_PIN Z_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E0DIAG_
           #define Z4_MAX_PIN E0_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E1DIAG_
           #define Z4_MAX_PIN E1_DIAG_PIN
@@ -1311,28 +1365,34 @@
           #define Z4_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
         #else
           #define Z4_MIN_ENDSTOP_INVERTING false
         #endif
       #endif
       #ifndef Z4_MIN_PIN
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MIN_PIN X_MIN_PIN
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MIN_PIN X_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _XSTOP_
+          #define Z4_MIN_PIN X_STOP_PIN
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MIN_PIN Y_MIN_PIN
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MIN_PIN Y_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _YSTOP_
+          #define Z4_MIN_PIN Y_STOP_PIN
         #elif Z4_USE_ENDSTOP == _ZMIN_
           #define Z4_MIN_PIN Z_MIN_PIN
         #elif Z4_USE_ENDSTOP == _ZMAX_
           #define Z4_MIN_PIN Z_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _ZSTOP_
+          #define Z4_MIN_PIN Z_STOP_PIN
         #elif Z4_USE_ENDSTOP == _XDIAG_
           #define Z4_MIN_PIN X_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _YDIAG_
           #define Z4_MIN_PIN Y_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _ZDIAG_
           #define Z4_MIN_PIN Z_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E0DIAG_
           #define Z4_MIN_PIN E0_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E1DIAG_
           #define Z4_MIN_PIN E1_DIAG_PIN

commit 1d80464ba77bc576426f15af28a633bf48d769ad
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 27 21:15:58 2021 -0500

    üé® Define HAS_PREHEAT conditional

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6a70a5ce54..c8b6d504e2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2869,24 +2869,28 @@
     #define PREHEAT_COUNT 5
   #elif defined(PREHEAT_4_LABEL)
     #define PREHEAT_COUNT 4
   #elif defined(PREHEAT_3_LABEL)
     #define PREHEAT_COUNT 3
   #elif defined(PREHEAT_2_LABEL)
     #define PREHEAT_COUNT 2
   #elif defined(PREHEAT_1_LABEL)
     #define PREHEAT_COUNT 1
   #endif
+  #if PREHEAT_COUNT && ANY(HAS_HOTEND, HAS_HEATED_BED, HAS_FAN)
+    #define HAS_PREHEAT 1
+  #endif
 #endif
 
-#if !PREHEAT_COUNT
+#if !HAS_PREHEAT
   #undef PREHEAT_SHORTCUT_MENU_ITEM
+  #undef DGUS_PREHEAT_UI
 #endif
 
 /**
  * MIN/MAX case light PWM scaling
  */
 #if ENABLED(CASE_LIGHT_ENABLE)
   #ifndef CASE_LIGHT_MAX_PWM
     #define CASE_LIGHT_MAX_PWM 255
   #elif !WITHIN(CASE_LIGHT_MAX_PWM, 1, 255)
     #error "CASE_LIGHT_MAX_PWM must be a value from 1 to 255."

commit b619a7184406a3fff2d67d33f1f82159721bb1bc
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Mon Oct 25 19:12:07 2021 +1300

    üêõ Fix b√∏rken E_DUAL_STEPPER_DRIVERS (#23017)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 41a2ab3938..6a70a5ce54 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1629,21 +1629,21 @@
   #if PIN_EXISTS(E0_DIR)
     #define HAS_E0_DIR 1
   #endif
   #if PIN_EXISTS(E0_STEP)
     #define HAS_E0_STEP 1
   #endif
   #if PIN_EXISTS(E0_MS1)
     #define HAS_E0_MS_PINS 1
   #endif
 
-  #if E_STEPPERS > 1
+  #if E_STEPPERS > 1 || ENABLED(E_DUAL_STEPPER_DRIVERS)
     #if PIN_EXISTS(E1_ENABLE) || AXIS_IS_L64XX(E1) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
       #define HAS_E1_ENABLE 1
     #endif
     #if PIN_EXISTS(E1_DIR)
       #define HAS_E1_DIR 1
     #endif
     #if PIN_EXISTS(E1_STEP)
       #define HAS_E1_STEP 1
     #endif
     #if PIN_EXISTS(E1_MS1)

commit f8968ed13c217ffa8db13d15c1d136e8d3864c1e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Oct 24 23:32:34 2021 -0500

    üêõ More explicit allocation of solenoids
    
    In reference to #22887

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9dfc7b187a..41a2ab3938 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1628,157 +1628,168 @@
   #endif
   #if PIN_EXISTS(E0_DIR)
     #define HAS_E0_DIR 1
   #endif
   #if PIN_EXISTS(E0_STEP)
     #define HAS_E0_STEP 1
   #endif
   #if PIN_EXISTS(E0_MS1)
     #define HAS_E0_MS_PINS 1
   #endif
-  #if PIN_EXISTS(SOL0)
-    #define HAS_SOLENOID_0 1
-  #endif
 
   #if E_STEPPERS > 1
     #if PIN_EXISTS(E1_ENABLE) || AXIS_IS_L64XX(E1) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
       #define HAS_E1_ENABLE 1
     #endif
     #if PIN_EXISTS(E1_DIR)
       #define HAS_E1_DIR 1
     #endif
     #if PIN_EXISTS(E1_STEP)
       #define HAS_E1_STEP 1
     #endif
     #if PIN_EXISTS(E1_MS1)
       #define HAS_E1_MS_PINS 1
     #endif
-    #if PIN_EXISTS(SOL1)
-      #define HAS_SOLENOID_1 1
-    #endif
   #endif
 
   #if E_STEPPERS > 2
     #if PIN_EXISTS(E2_ENABLE) || AXIS_IS_L64XX(E2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
       #define HAS_E2_ENABLE 1
     #endif
     #if PIN_EXISTS(E2_DIR)
       #define HAS_E2_DIR 1
     #endif
     #if PIN_EXISTS(E2_STEP)
       #define HAS_E2_STEP 1
     #endif
     #if PIN_EXISTS(E2_MS1)
       #define HAS_E2_MS_PINS 1
     #endif
-    #if PIN_EXISTS(SOL2)
-      #define HAS_SOLENOID_2 1
-    #endif
   #endif
 
   #if E_STEPPERS > 3
     #if PIN_EXISTS(E3_ENABLE) || AXIS_IS_L64XX(E3) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
       #define HAS_E3_ENABLE 1
     #endif
     #if PIN_EXISTS(E3_DIR)
       #define HAS_E3_DIR 1
     #endif
     #if PIN_EXISTS(E3_STEP)
       #define HAS_E3_STEP 1
     #endif
     #if PIN_EXISTS(E3_MS1)
       #define HAS_E3_MS_PINS 1
     #endif
-    #if PIN_EXISTS(SOL3)
-      #define HAS_SOLENOID_3 1
-    #endif
   #endif
 
   #if E_STEPPERS > 4
     #if PIN_EXISTS(E4_ENABLE) || AXIS_IS_L64XX(E4) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
       #define HAS_E4_ENABLE 1
     #endif
     #if PIN_EXISTS(E4_DIR)
       #define HAS_E4_DIR 1
     #endif
     #if PIN_EXISTS(E4_STEP)
       #define HAS_E4_STEP 1
     #endif
     #if PIN_EXISTS(E4_MS1)
       #define HAS_E4_MS_PINS 1
     #endif
-    #if PIN_EXISTS(SOL4)
-      #define HAS_SOLENOID_4 1
-    #endif
   #endif
 
   #if E_STEPPERS > 5
     #if PIN_EXISTS(E5_ENABLE) || AXIS_IS_L64XX(E5) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
       #define HAS_E5_ENABLE 1
     #endif
     #if PIN_EXISTS(E5_DIR)
       #define HAS_E5_DIR 1
     #endif
     #if PIN_EXISTS(E5_STEP)
       #define HAS_E5_STEP 1
     #endif
     #if PIN_EXISTS(E5_MS1)
       #define HAS_E5_MS_PINS 1
     #endif
-    #if PIN_EXISTS(SOL5)
-      #define HAS_SOLENOID_5 1
-    #endif
   #endif
 
   #if E_STEPPERS > 6
     #if PIN_EXISTS(E6_ENABLE) || AXIS_IS_L64XX(E6) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
       #define HAS_E6_ENABLE 1
     #endif
     #if PIN_EXISTS(E6_DIR)
       #define HAS_E6_DIR 1
     #endif
     #if PIN_EXISTS(E6_STEP)
       #define HAS_E6_STEP 1
     #endif
     #if PIN_EXISTS(E6_MS1)
       #define HAS_E6_MS_PINS 1
     #endif
-    #if PIN_EXISTS(SOL6)
-      #define HAS_SOLENOID_6 1
-    #endif
   #endif
 
   #if E_STEPPERS > 7
     #if PIN_EXISTS(E7_ENABLE) || AXIS_IS_L64XX(E7) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
       #define HAS_E7_ENABLE 1
     #endif
     #if PIN_EXISTS(E7_DIR)
       #define HAS_E7_DIR 1
     #endif
     #if PIN_EXISTS(E7_STEP)
       #define HAS_E7_STEP 1
     #endif
     #if PIN_EXISTS(E7_MS1)
       #define HAS_E7_MS_PINS 1
     #endif
-    #if PIN_EXISTS(SOL7)
-      #define HAS_SOLENOID_7 1
-    #endif
   #endif
 
   #if !defined(DISABLE_INACTIVE_E) && ENABLED(DISABLE_E)
     #define DISABLE_INACTIVE_E 1
   #endif
 #else
   #undef DISABLE_INACTIVE_E
 #endif // HAS_EXTRUDERS
 
+/**
+ * Set solenoid flags if any features use solenoids
+ *   - EXT_SOLENOID (M380, M381) to enable/disable the extruder solenoid
+ *   - MANUAL_SOLENOID_CONTROL (M380, M381) to enable/disable solenoids by index
+ *   - PARKING_EXTRUDER uses SOL0_PIN and SOL1_PIN
+ *   - SOLENOID_PROBE uses SOL1_PIN
+ *   - Z_PROBE_SLED uses SOL1_PIN, when defined (unless EXT_SOLENOID is enabled)
+ */
+#if ANY(EXT_SOLENOID, MANUAL_SOLENOID_CONTROL, PARKING_EXTRUDER, SOLENOID_PROBE, Z_PROBE_SLED)
+  #if PIN_EXISTS(SOL0) && (EITHER(MANUAL_SOLENOID_CONTROL, PARKING_EXTRUDER) || BOTH(EXT_SOLENOID, HAS_EXTRUDERS))
+    #define HAS_SOLENOID_0 1
+  #endif
+  #if PIN_EXISTS(SOL1) && (ANY(MANUAL_SOLENOID_CONTROL, PARKING_EXTRUDER, SOLENOID_PROBE, Z_PROBE_SLED) || TERN0(EXT_SOLENOID, E_STEPPERS > 1))
+    #define HAS_SOLENOID_1 1
+  #endif
+  #if PIN_EXISTS(SOL2) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 2))
+    #define HAS_SOLENOID_2 2
+  #endif
+  #if PIN_EXISTS(SOL3) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 3))
+    #define HAS_SOLENOID_3 3
+  #endif
+  #if PIN_EXISTS(SOL4) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 4))
+    #define HAS_SOLENOID_4 4
+  #endif
+  #if PIN_EXISTS(SOL5) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 5))
+    #define HAS_SOLENOID_5 5
+  #endif
+  #if PIN_EXISTS(SOL6) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 6))
+    #define HAS_SOLENOID_6 6
+  #endif
+  #if PIN_EXISTS(SOL7) && (ENABLED(MANUAL_SOLENOID_CONTROL) || TERN0(EXT_SOLENOID, E_STEPPERS > 7))
+    #define HAS_SOLENOID_7 7
+  #endif
+#endif
+
 //
 // Trinamic Stepper Drivers
 //
 
 #if HAS_TRINAMIC_CONFIG
   #if ANY(STEALTHCHOP_E, STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_I, STEALTHCHOP_J, STEALTHCHOP_K)
     #define STEALTHCHOP_ENABLED 1
   #endif
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1

commit 9bb562f40a5570a63430bbf9392da0fdb85c5c8c
Author: VragVideo <91742261+VragVideo@users.noreply.github.com>
Date:   Sun Oct 3 06:12:51 2021 +0300

    ‚ú® WYH L12864 LCD (Alfawise Ex8) (#22863)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1db4208a1f..9dfc7b187a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -351,20 +351,22 @@
 #if ENABLED(CARTESIO_UI)
   #define _LCD_CONTRAST_MIN   60
   #define _LCD_CONTRAST_INIT  90
   #define _LCD_CONTRAST_MAX  140
 #elif ENABLED(miniVIKI)
   #define _LCD_CONTRAST_MIN   75
   #define _LCD_CONTRAST_INIT  95
   #define _LCD_CONTRAST_MAX  115
 #elif ENABLED(VIKI2)
   #define _LCD_CONTRAST_INIT 140
+#elif ENABLED(WYH_L12864)
+  #define _LCD_CONTRAST_INIT 190
 #elif ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #define _LCD_CONTRAST_MIN   90
   #define _LCD_CONTRAST_INIT 110
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
 #elif EITHER(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205

commit 1ac7a56a823b5012250dd7259a9a7a46d3bfcde5
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Sat Sep 25 05:59:43 2021 -0500

    üêõ E3V2 Brightness followup (#22821)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6c1511282f..1db4208a1f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -416,25 +416,20 @@
       #define LCD_CONTRAST_MAX 255
     #else
       #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
-#if EITHER(HAS_DWIN_E3V2, IS_DWIN_MARLINUI)
-  #define HAS_LCD_BRIGHTNESS 1
-  #define MAX_LCD_BRIGHTNESS 31
-#endif
-
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
 
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to

commit dc5bef62ba185461ba969db6af996ebc93a33ba7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 23 10:01:37 2021 -0500

    üé® Various multi-axis patches (#22823)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ccb7cdde7c..6c1511282f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1920,34 +1920,28 @@
   #endif
   #ifndef Z2_INTERPOLATE
     #define Z2_INTERPOLATE INTERPOLATE
   #endif
   #ifndef Z3_INTERPOLATE
     #define Z3_INTERPOLATE INTERPOLATE
   #endif
   #ifndef Z4_INTERPOLATE
     #define Z4_INTERPOLATE INTERPOLATE
   #endif
-  #if LINEAR_AXES >= 4
-    #ifndef I_INTERPOLATE
-      #define I_INTERPOLATE INTERPOLATE
-    #endif
+  #if LINEAR_AXES >= 4 && !defined(I_INTERPOLATE)
+    #define I_INTERPOLATE INTERPOLATE
   #endif
-  #if LINEAR_AXES >= 5
-    #ifndef J_INTERPOLATE
-      #define J_INTERPOLATE INTERPOLATE
-    #endif
+  #if LINEAR_AXES >= 5 && !defined(J_INTERPOLATE)
+    #define J_INTERPOLATE INTERPOLATE
   #endif
-  #if LINEAR_AXES >= 6
-    #ifndef K_INTERPOLATE
-      #define K_INTERPOLATE INTERPOLATE
-    #endif
+  #if LINEAR_AXES >= 6 && !defined(K_INTERPOLATE)
+    #define K_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E0_INTERPOLATE
     #define E0_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E1_INTERPOLATE
     #define E1_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E2_INTERPOLATE
     #define E2_INTERPOLATE INTERPOLATE
   #endif
@@ -1960,27 +1954,27 @@
   #ifndef E5_INTERPOLATE
     #define E5_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E6_INTERPOLATE
     #define E6_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E7_INTERPOLATE
     #define E7_INTERPOLATE INTERPOLATE
   #endif
   #ifndef X_SLAVE_ADDRESS
-    #define X_SLAVE_ADDRESS  0
+    #define X_SLAVE_ADDRESS 0
   #endif
   #ifndef Y_SLAVE_ADDRESS
-    #define Y_SLAVE_ADDRESS  0
+    #define Y_SLAVE_ADDRESS 0
   #endif
   #ifndef Z_SLAVE_ADDRESS
-    #define Z_SLAVE_ADDRESS  0
+    #define Z_SLAVE_ADDRESS 0
   #endif
   #ifndef I_SLAVE_ADDRESS
     #define I_SLAVE_ADDRESS 0
   #endif
   #ifndef J_SLAVE_ADDRESS
     #define J_SLAVE_ADDRESS 0
   #endif
   #ifndef K_SLAVE_ADDRESS
     #define K_SLAVE_ADDRESS 0
   #endif
@@ -2658,21 +2652,21 @@
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_MOTOR_CURRENT_SPI 1
 #endif
 #if HAS_EXTRUDERS && PIN_EXISTS(MOTOR_CURRENT_PWM_E)
   #define HAS_MOTOR_CURRENT_PWM_E 1
 #endif
-#if HAS_MOTOR_CURRENT_PWM_E || ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z)
+#if HAS_MOTOR_CURRENT_PWM_E || ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_I, MOTOR_CURRENT_PWM_J, MOTOR_CURRENT_PWM_K)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
 #if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_I_MS_PINS, HAS_J_MS_PINS, HAS_K_MS_PINS, HAS_SOME_E_MS_PINS)

commit b88117d6364b8919a8a7df6c80d8132af98a6afc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 21 06:25:13 2021 -0500

    üé® Fix L64xx enable, clean up conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5c1aa5321f..ccb7cdde7c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -87,20 +87,22 @@
 #ifndef AXIS6_NAME
   #define AXIS6_NAME 'C'
 #endif
 
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #if HAS_Y_AXIS
   #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #endif
 #if HAS_Z_AXIS
   #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
+#else
+  #undef CONTROLLER_FAN_USE_Z_ONLY
 #endif
 #if LINEAR_AXES >= 4
   #define I_MAX_LENGTH (I_MAX_POS - (I_MIN_POS))
 #endif
 #if LINEAR_AXES >= 5
   #define J_MAX_LENGTH (J_MAX_POS - (J_MIN_POS))
 #endif
 #if LINEAR_AXES >= 6
   #define K_MAX_LENGTH (K_MAX_POS - (K_MIN_POS))
 #endif
@@ -463,45 +465,20 @@
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
 #endif
 
 #if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI) || !PIN_EXISTS(SD_DETECT)
   #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
 #endif
 
-/**
- * Set defaults for missing (newer) options
- */
-#ifndef DISABLE_INACTIVE_X
-  #define DISABLE_INACTIVE_X DISABLE_X
-#endif
-#if HAS_Y_AXIS && !defined(DISABLE_INACTIVE_Y)
-  #define DISABLE_INACTIVE_Y DISABLE_Y
-#endif
-#if HAS_Z_AXIS && !defined(DISABLE_INACTIVE_Z)
-  #define DISABLE_INACTIVE_Z DISABLE_Z
-#endif
-#ifndef DISABLE_INACTIVE_E
-  #define DISABLE_INACTIVE_E DISABLE_E
-#endif
-#if LINEAR_AXES >= 4 && !defined(DISABLE_INACTIVE_I)
-  #define DISABLE_INACTIVE_I DISABLE_I
-#endif
-#if LINEAR_AXES >= 5 && !defined(DISABLE_INACTIVE_J)
-  #define DISABLE_INACTIVE_J DISABLE_J
-#endif
-#if LINEAR_AXES >= 6 && !defined(DISABLE_INACTIVE_K)
-  #define DISABLE_INACTIVE_K DISABLE_K
-#endif
-
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_STATE
     #define PSU_NAME "XBox"     // X-Box 360 (203W)
   #else
     #define PSU_NAME "ATX"      // ATX style
@@ -1461,297 +1438,348 @@
 #if PIN_EXISTS(X_DIR)
   #define HAS_X_DIR 1
 #endif
 #if PIN_EXISTS(X_STEP)
   #define HAS_X_STEP 1
 #endif
 #if PIN_EXISTS(X_MS1)
   #define HAS_X_MS_PINS 1
 #endif
 
-#if PIN_EXISTS(X2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2))
+#if PIN_EXISTS(X2_ENABLE) || AXIS_IS_L64XX(X2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2))
   #define HAS_X2_ENABLE 1
 #endif
 #if PIN_EXISTS(X2_DIR)
   #define HAS_X2_DIR 1
 #endif
 #if PIN_EXISTS(X2_STEP)
   #define HAS_X2_STEP 1
 #endif
 #if PIN_EXISTS(X2_MS1)
   #define HAS_X2_MS_PINS 1
 #endif
 
+/**
+ * Set defaults for missing (newer) options
+ */
+#if !defined(DISABLE_INACTIVE_X) && ENABLED(DISABLE_X)
+  #define DISABLE_INACTIVE_X 1
+#endif
+
 #if HAS_Y_AXIS
-  #if PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
+  #if PIN_EXISTS(Y_ENABLE) || AXIS_IS_L64XX(Y) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
     #define HAS_Y_ENABLE 1
   #endif
   #if PIN_EXISTS(Y_DIR)
     #define HAS_Y_DIR 1
   #endif
   #if PIN_EXISTS(Y_STEP)
     #define HAS_Y_STEP 1
   #endif
   #if PIN_EXISTS(Y_MS1)
     #define HAS_Y_MS_PINS 1
   #endif
 
-  #if PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
+  #if PIN_EXISTS(Y2_ENABLE) || AXIS_IS_L64XX(Y2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
     #define HAS_Y2_ENABLE 1
   #endif
   #if PIN_EXISTS(Y2_DIR)
     #define HAS_Y2_DIR 1
   #endif
   #if PIN_EXISTS(Y2_STEP)
     #define HAS_Y2_STEP 1
   #endif
   #if PIN_EXISTS(Y2_MS1)
     #define HAS_Y2_MS_PINS 1
   #endif
+  #if !defined(DISABLE_INACTIVE_Y) && ENABLED(DISABLE_Y)
+    #define DISABLE_INACTIVE_Y 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_Y
 #endif
 
 #if HAS_Z_AXIS
-  #if PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
+  #if PIN_EXISTS(Z_ENABLE) || AXIS_IS_L64XX(Z) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
     #define HAS_Z_ENABLE 1
   #endif
   #if PIN_EXISTS(Z_DIR)
     #define HAS_Z_DIR 1
   #endif
   #if PIN_EXISTS(Z_STEP)
     #define HAS_Z_STEP 1
   #endif
   #if PIN_EXISTS(Z_MS1)
     #define HAS_Z_MS_PINS 1
   #endif
+  #if !defined(DISABLE_INACTIVE_Z) && ENABLED(DISABLE_Z)
+    #define DISABLE_INACTIVE_Z 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_Z
 #endif
 
 #if NUM_Z_STEPPER_DRIVERS >= 2
-  #if PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
+  #if PIN_EXISTS(Z2_ENABLE) || AXIS_IS_L64XX(Z2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
     #define HAS_Z2_ENABLE 1
   #endif
   #if PIN_EXISTS(Z2_DIR)
     #define HAS_Z2_DIR 1
   #endif
   #if PIN_EXISTS(Z2_STEP)
     #define HAS_Z2_STEP 1
   #endif
   #if PIN_EXISTS(Z2_MS1)
     #define HAS_Z2_MS_PINS 1
   #endif
 #endif
 
 #if NUM_Z_STEPPER_DRIVERS >= 3
-  #if PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
+  #if PIN_EXISTS(Z3_ENABLE) || AXIS_IS_L64XX(Z3) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
     #define HAS_Z3_ENABLE 1
   #endif
   #if PIN_EXISTS(Z3_DIR)
     #define HAS_Z3_DIR 1
   #endif
   #if PIN_EXISTS(Z3_STEP)
     #define HAS_Z3_STEP 1
   #endif
   #if PIN_EXISTS(Z3_MS1)
     #define HAS_Z3_MS_PINS 1
   #endif
 #endif
 
 #if NUM_Z_STEPPER_DRIVERS >= 4
-  #if PIN_EXISTS(Z4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
+  #if PIN_EXISTS(Z4_ENABLE) || AXIS_IS_L64XX(Z4) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
     #define HAS_Z4_ENABLE 1
   #endif
   #if PIN_EXISTS(Z4_DIR)
     #define HAS_Z4_DIR 1
   #endif
   #if PIN_EXISTS(Z4_STEP)
     #define HAS_Z4_STEP 1
   #endif
   #if PIN_EXISTS(Z4_MS1)
     #define HAS_Z4_MS_PINS 1
   #endif
 #endif
 
 #if LINEAR_AXES >= 4
-  #if PIN_EXISTS(I_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(I))
+  #if PIN_EXISTS(I_ENABLE) || AXIS_IS_L64XX(I) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(I))
     #define HAS_I_ENABLE 1
   #endif
   #if PIN_EXISTS(I_DIR)
     #define HAS_I_DIR 1
   #endif
   #if PIN_EXISTS(I_STEP)
     #define HAS_I_STEP 1
   #endif
   #if PIN_EXISTS(I_MS1)
     #define HAS_I_MS_PINS 1
   #endif
+  #if !defined(DISABLE_INACTIVE_I) && ENABLED(DISABLE_I)
+    #define DISABLE_INACTIVE_I 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_I
 #endif
 
 #if LINEAR_AXES >= 5
-  #if PIN_EXISTS(J_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(J))
+  #if PIN_EXISTS(J_ENABLE) || AXIS_IS_L64XX(J) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(J))
     #define HAS_J_ENABLE 1
   #endif
   #if PIN_EXISTS(J_DIR)
     #define HAS_J_DIR 1
   #endif
   #if PIN_EXISTS(J_STEP)
     #define HAS_J_STEP 1
   #endif
   #if PIN_EXISTS(J_MS1)
     #define HAS_J_MS_PINS 1
   #endif
+  #if !defined(DISABLE_INACTIVE_J) && ENABLED(DISABLE_J)
+    #define DISABLE_INACTIVE_J 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_J
 #endif
 
 #if LINEAR_AXES >= 6
-  #if PIN_EXISTS(K_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(K))
+  #if PIN_EXISTS(K_ENABLE) || AXIS_IS_L64XX(K) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(K))
     #define HAS_K_ENABLE 1
   #endif
   #if PIN_EXISTS(K_DIR)
     #define HAS_K_DIR 1
   #endif
   #if PIN_EXISTS(K_STEP)
     #define HAS_K_STEP 1
   #endif
   #if PIN_EXISTS(K_MS1)
     #define HAS_K_MS_PINS 1
   #endif
+  #if !defined(DISABLE_INACTIVE_K) && ENABLED(DISABLE_K)
+    #define DISABLE_INACTIVE_K 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_K
 #endif
 
 // Extruder steppers and solenoids
 #if HAS_EXTRUDERS
 
-  #if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
+  #if PIN_EXISTS(E0_ENABLE) || AXIS_IS_L64XX(E0) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
     #define HAS_E0_ENABLE 1
   #endif
   #if PIN_EXISTS(E0_DIR)
     #define HAS_E0_DIR 1
   #endif
   #if PIN_EXISTS(E0_STEP)
     #define HAS_E0_STEP 1
   #endif
   #if PIN_EXISTS(E0_MS1)
     #define HAS_E0_MS_PINS 1
   #endif
   #if PIN_EXISTS(SOL0)
     #define HAS_SOLENOID_0 1
   #endif
 
-  #if PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
-    #define HAS_E1_ENABLE 1
-  #endif
-  #if PIN_EXISTS(E1_DIR)
-    #define HAS_E1_DIR 1
-  #endif
-  #if PIN_EXISTS(E1_STEP)
-    #define HAS_E1_STEP 1
-  #endif
-  #if PIN_EXISTS(E1_MS1)
-    #define HAS_E1_MS_PINS 1
-  #endif
-  #if PIN_EXISTS(SOL1)
-    #define HAS_SOLENOID_1 1
+  #if E_STEPPERS > 1
+    #if PIN_EXISTS(E1_ENABLE) || AXIS_IS_L64XX(E1) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
+      #define HAS_E1_ENABLE 1
+    #endif
+    #if PIN_EXISTS(E1_DIR)
+      #define HAS_E1_DIR 1
+    #endif
+    #if PIN_EXISTS(E1_STEP)
+      #define HAS_E1_STEP 1
+    #endif
+    #if PIN_EXISTS(E1_MS1)
+      #define HAS_E1_MS_PINS 1
+    #endif
+    #if PIN_EXISTS(SOL1)
+      #define HAS_SOLENOID_1 1
+    #endif
   #endif
 
-  #if PIN_EXISTS(E2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
-    #define HAS_E2_ENABLE 1
-  #endif
-  #if PIN_EXISTS(E2_DIR)
-    #define HAS_E2_DIR 1
-  #endif
-  #if PIN_EXISTS(E2_STEP)
-    #define HAS_E2_STEP 1
-  #endif
-  #if PIN_EXISTS(E2_MS1)
-    #define HAS_E2_MS_PINS 1
-  #endif
-  #if PIN_EXISTS(SOL2)
-    #define HAS_SOLENOID_2 1
+  #if E_STEPPERS > 2
+    #if PIN_EXISTS(E2_ENABLE) || AXIS_IS_L64XX(E2) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
+      #define HAS_E2_ENABLE 1
+    #endif
+    #if PIN_EXISTS(E2_DIR)
+      #define HAS_E2_DIR 1
+    #endif
+    #if PIN_EXISTS(E2_STEP)
+      #define HAS_E2_STEP 1
+    #endif
+    #if PIN_EXISTS(E2_MS1)
+      #define HAS_E2_MS_PINS 1
+    #endif
+    #if PIN_EXISTS(SOL2)
+      #define HAS_SOLENOID_2 1
+    #endif
   #endif
 
-  #if PIN_EXISTS(E3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
-    #define HAS_E3_ENABLE 1
-  #endif
-  #if PIN_EXISTS(E3_DIR)
-    #define HAS_E3_DIR 1
-  #endif
-  #if PIN_EXISTS(E3_STEP)
-    #define HAS_E3_STEP 1
-  #endif
-  #if PIN_EXISTS(E3_MS1)
-    #define HAS_E3_MS_PINS 1
-  #endif
-  #if PIN_EXISTS(SOL3)
-    #define HAS_SOLENOID_3 1
+  #if E_STEPPERS > 3
+    #if PIN_EXISTS(E3_ENABLE) || AXIS_IS_L64XX(E3) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
+      #define HAS_E3_ENABLE 1
+    #endif
+    #if PIN_EXISTS(E3_DIR)
+      #define HAS_E3_DIR 1
+    #endif
+    #if PIN_EXISTS(E3_STEP)
+      #define HAS_E3_STEP 1
+    #endif
+    #if PIN_EXISTS(E3_MS1)
+      #define HAS_E3_MS_PINS 1
+    #endif
+    #if PIN_EXISTS(SOL3)
+      #define HAS_SOLENOID_3 1
+    #endif
   #endif
 
-  #if PIN_EXISTS(E4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
-    #define HAS_E4_ENABLE 1
-  #endif
-  #if PIN_EXISTS(E4_DIR)
-    #define HAS_E4_DIR 1
-  #endif
-  #if PIN_EXISTS(E4_STEP)
-    #define HAS_E4_STEP 1
-  #endif
-  #if PIN_EXISTS(E4_MS1)
-    #define HAS_E4_MS_PINS 1
-  #endif
-  #if PIN_EXISTS(SOL4)
-    #define HAS_SOLENOID_4 1
+  #if E_STEPPERS > 4
+    #if PIN_EXISTS(E4_ENABLE) || AXIS_IS_L64XX(E4) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
+      #define HAS_E4_ENABLE 1
+    #endif
+    #if PIN_EXISTS(E4_DIR)
+      #define HAS_E4_DIR 1
+    #endif
+    #if PIN_EXISTS(E4_STEP)
+      #define HAS_E4_STEP 1
+    #endif
+    #if PIN_EXISTS(E4_MS1)
+      #define HAS_E4_MS_PINS 1
+    #endif
+    #if PIN_EXISTS(SOL4)
+      #define HAS_SOLENOID_4 1
+    #endif
   #endif
 
-  #if PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
-    #define HAS_E5_ENABLE 1
-  #endif
-  #if PIN_EXISTS(E5_DIR)
-    #define HAS_E5_DIR 1
-  #endif
-  #if PIN_EXISTS(E5_STEP)
-    #define HAS_E5_STEP 1
-  #endif
-  #if PIN_EXISTS(E5_MS1)
-    #define HAS_E5_MS_PINS 1
-  #endif
-  #if PIN_EXISTS(SOL5)
-    #define HAS_SOLENOID_5 1
+  #if E_STEPPERS > 5
+    #if PIN_EXISTS(E5_ENABLE) || AXIS_IS_L64XX(E5) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
+      #define HAS_E5_ENABLE 1
+    #endif
+    #if PIN_EXISTS(E5_DIR)
+      #define HAS_E5_DIR 1
+    #endif
+    #if PIN_EXISTS(E5_STEP)
+      #define HAS_E5_STEP 1
+    #endif
+    #if PIN_EXISTS(E5_MS1)
+      #define HAS_E5_MS_PINS 1
+    #endif
+    #if PIN_EXISTS(SOL5)
+      #define HAS_SOLENOID_5 1
+    #endif
   #endif
 
-  #if PIN_EXISTS(E6_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
-    #define HAS_E6_ENABLE 1
-  #endif
-  #if PIN_EXISTS(E6_DIR)
-    #define HAS_E6_DIR 1
-  #endif
-  #if PIN_EXISTS(E6_STEP)
-    #define HAS_E6_STEP 1
-  #endif
-  #if PIN_EXISTS(E6_MS1)
-    #define HAS_E6_MS_PINS 1
-  #endif
-  #if PIN_EXISTS(SOL6)
-    #define HAS_SOLENOID_6 1
+  #if E_STEPPERS > 6
+    #if PIN_EXISTS(E6_ENABLE) || AXIS_IS_L64XX(E6) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
+      #define HAS_E6_ENABLE 1
+    #endif
+    #if PIN_EXISTS(E6_DIR)
+      #define HAS_E6_DIR 1
+    #endif
+    #if PIN_EXISTS(E6_STEP)
+      #define HAS_E6_STEP 1
+    #endif
+    #if PIN_EXISTS(E6_MS1)
+      #define HAS_E6_MS_PINS 1
+    #endif
+    #if PIN_EXISTS(SOL6)
+      #define HAS_SOLENOID_6 1
+    #endif
   #endif
 
-  #if PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
-    #define HAS_E7_ENABLE 1
-  #endif
-  #if PIN_EXISTS(E7_DIR)
-    #define HAS_E7_DIR 1
-  #endif
-  #if PIN_EXISTS(E7_STEP)
-    #define HAS_E7_STEP 1
-  #endif
-  #if PIN_EXISTS(E7_MS1)
-    #define HAS_E7_MS_PINS 1
-  #endif
-  #if PIN_EXISTS(SOL7)
-    #define HAS_SOLENOID_7 1
+  #if E_STEPPERS > 7
+    #if PIN_EXISTS(E7_ENABLE) || AXIS_IS_L64XX(E7) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
+      #define HAS_E7_ENABLE 1
+    #endif
+    #if PIN_EXISTS(E7_DIR)
+      #define HAS_E7_DIR 1
+    #endif
+    #if PIN_EXISTS(E7_STEP)
+      #define HAS_E7_STEP 1
+    #endif
+    #if PIN_EXISTS(E7_MS1)
+      #define HAS_E7_MS_PINS 1
+    #endif
+    #if PIN_EXISTS(SOL7)
+      #define HAS_SOLENOID_7 1
+    #endif
   #endif
 
+  #if !defined(DISABLE_INACTIVE_E) && ENABLED(DISABLE_E)
+    #define DISABLE_INACTIVE_E 1
+  #endif
+#else
+  #undef DISABLE_INACTIVE_E
 #endif // HAS_EXTRUDERS
 
 //
 // Trinamic Stepper Drivers
 //
 
 #if HAS_TRINAMIC_CONFIG
   #if ANY(STEALTHCHOP_E, STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_I, STEALTHCHOP_J, STEALTHCHOP_K)
     #define STEALTHCHOP_ENABLED 1
   #endif
@@ -1990,26 +2018,20 @@
     #define E5_SLAVE_ADDRESS 0
   #endif
   #ifndef E6_SLAVE_ADDRESS
     #define E6_SLAVE_ADDRESS 0
   #endif
   #ifndef E7_SLAVE_ADDRESS
     #define E7_SLAVE_ADDRESS 0
   #endif
 #endif
 
-#if (HAS_E_DRIVER(TMC2660) \
-  || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
-    && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) )
-  #define HAS_E_STEPPER_ENABLE 1
-#endif
-
 #if ANY_AXIS_HAS(HW_SERIAL)
   #define HAS_TMC_HW_SERIAL 1
 #endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
 #if DISABLED(SENSORLESS_HOMING)
   #undef SENSORLESS_BACKOFF_MM
 #endif
@@ -3253,25 +3275,20 @@
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif
 #endif
 
 // Fallback SPI Speed for SD
 #if ENABLED(SDSUPPORT) && !defined(SD_SPI_SPEED)
   #define SD_SPI_SPEED SPI_FULL_SPEED
 #endif
 
-// Defined here to catch the above defines
-#if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
-  #define HAS_FOLDER_SORTING 1
-#endif
-
 #if HAS_WIRED_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_MARLINUI_U8GLIB
       #define LCD_WIDTH 21
     #elif IS_DWIN_MARLINUI
       // Defined by header
     #else
       #define LCD_WIDTH TERN(IS_ULTIPANEL, 20, 16)
     #endif

commit 5b5a8798f8fe202e86c008088f847a3edb51cc71
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Sep 15 19:48:29 2021 -0500

    üé® Consolidate Ender-3 V2 DWIN common code (#22778)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5b7526b74b..5c1aa5321f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -414,22 +414,23 @@
       #define LCD_CONTRAST_MAX 255
     #else
       #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
-#if EITHER(DWIN_CREALITY_LCD_ENHANCED, DWIN_CREALITY_LCD_JYERSUI)
+#if EITHER(HAS_DWIN_E3V2, IS_DWIN_MARLINUI)
   #define HAS_LCD_BRIGHTNESS 1
+  #define MAX_LCD_BRIGHTNESS 31
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
 
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //

commit 21e8f99500554d69cb91ac2be0b4ab1497bf9fac
Author: Dakkaron <dak1st@gmx.at>
Date:   Wed Sep 15 02:00:48 2021 +0200

    ‚ú® M282 - Detach Servo (#22760)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 61a9ea2c9a..5b7526b74b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2586,23 +2586,28 @@
   #define HAS_SERVO_1 1
 #endif
 #if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
   #define HAS_SERVO_2 1
 #endif
 #if PIN_EXISTS(SERVO3) && NUM_SERVOS > 3
   #define HAS_SERVO_3 1
 #endif
 #if NUM_SERVOS > 0
   #define HAS_SERVOS 1
-#endif
-#if HAS_SERVOS && defined(PAUSE_SERVO_OUTPUT) && defined(RESUME_SERVO_OUTPUT)
-  #define HAS_PAUSE_SERVO_OUTPUT 1
+  #if defined(PAUSE_SERVO_OUTPUT) && defined(RESUME_SERVO_OUTPUT)
+    #define HAS_PAUSE_SERVO_OUTPUT 1
+  #endif
+#else
+  #undef SERVO_DELAY
+  #undef DEACTIVATE_SERVOS_AFTER_MOVE
+  #undef EDITABLE_SERVO_ANGLES
+  #undef SERVO_DETACH_GCODE
 #endif
 
 // Sensors
 #if PIN_EXISTS(FILWIDTH)
   #define HAS_FILAMENT_WIDTH_SENSOR 1
 #endif
 
 // User Interface
 #if ENABLED(FREEZE_FEATURE)
   #if !PIN_EXISTS(FREEZE) && PIN_EXISTS(KILL)

commit 392a4a6f85bea8470ee291eedcf85d16ce071e52
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Thu Sep 9 16:40:10 2021 -0500

    üêõ Fix, improve E3V2 Enhanced UI (#22733)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c45995aba5..61a9ea2c9a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -414,21 +414,21 @@
       #define LCD_CONTRAST_MAX 255
     #else
       #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
-#if ENABLED(DWIN_CREALITY_LCD_JYERSUI)
+#if EITHER(DWIN_CREALITY_LCD_ENHANCED, DWIN_CREALITY_LCD_JYERSUI)
   #define HAS_LCD_BRIGHTNESS 1
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
 
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)

commit 650e73af27eab6c185337c3fc2c44300a9262af8
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Thu Sep 9 18:13:01 2021 +1200

    ü©π Fix Enhanced E3V2 Advanced Pause (#22728)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6de8dc9860..c45995aba5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2946,21 +2946,21 @@
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if ANY(HAS_LCD_MENU, EXTENSIBLE_UI, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+  #if ANY(HAS_LCD_MENU, EXTENSIBLE_UI, DWIN_CREALITY_LCD_ENHANCED, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif

commit 43a9c71ef7a1c9e9e294707017d372d344c774ce
Author: Jyers <76993396+Jyers@users.noreply.github.com>
Date:   Mon Sep 6 21:06:27 2021 -0700

    ‚ú® Ender-3 V2 with Jyers UI (#22422)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d82b651650..6de8dc9860 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -414,20 +414,24 @@
       #define LCD_CONTRAST_MAX 255
     #else
       #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
+#if ENABLED(DWIN_CREALITY_LCD_JYERSUI)
+  #define HAS_LCD_BRIGHTNESS 1
+#endif
+
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
 
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
@@ -2821,21 +2825,21 @@
   #ifndef COOLER_INVERTING
     #define COOLER_INVERTING true
   #endif
   #define WRITE_HEATER_COOLER(v) WRITE(COOLER_PIN, (v) ^ COOLER_INVERTING)
 #endif
 
 #if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER || HAS_COOLER
   #define HAS_TEMPERATURE 1
 #endif
 
-#if HAS_TEMPERATURE && EITHER(HAS_LCD_MENU, DWIN_CREALITY_LCD)
+#if HAS_TEMPERATURE && EITHER(HAS_LCD_MENU, HAS_DWIN_E3V2)
   #ifdef PREHEAT_6_LABEL
     #define PREHEAT_COUNT 6
   #elif defined(PREHEAT_5_LABEL)
     #define PREHEAT_COUNT 5
   #elif defined(PREHEAT_4_LABEL)
     #define PREHEAT_COUNT 4
   #elif defined(PREHEAT_3_LABEL)
     #define PREHEAT_COUNT 3
   #elif defined(PREHEAT_2_LABEL)
     #define PREHEAT_COUNT 2
@@ -2942,21 +2946,21 @@
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if EITHER(HAS_LCD_MENU, EXTENSIBLE_UI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+  #if ANY(HAS_LCD_MENU, EXTENSIBLE_UI, DWIN_CREALITY_LCD_JYERSUI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
@@ -3198,21 +3202,21 @@
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
-#if EITHER(SCROLL_LONG_FILENAMES, DWIN_CREALITY_LCD)
+#if EITHER(SCROLL_LONG_FILENAMES, HAS_DWIN_E3V2)
   #define MAX_VFAT_ENTRIES (5)
 #else
   #define MAX_VFAT_ENTRIES (2)
 #endif
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif

commit 1f5eacac09d694c2b69c223aba7bf8c422d16241
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Tue Aug 31 19:26:12 2021 +1200

    üîß Set Z_PROBE_OFFSET_RANGE_MIN/MAX for MBL (#22663)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a43e57d158..d82b651650 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2855,30 +2855,32 @@
   #ifndef CASE_LIGHT_MAX_PWM
     #define CASE_LIGHT_MAX_PWM 255
   #elif !WITHIN(CASE_LIGHT_MAX_PWM, 1, 255)
     #error "CASE_LIGHT_MAX_PWM must be a value from 1 to 255."
   #endif
 #endif
 
 /**
  * Bed Probe dependencies
  */
-#if HAS_BED_PROBE
-  #if BOTH(ENDSTOPPULLUPS, HAS_Z_MIN_PROBE_PIN)
-    #define ENDSTOPPULLUP_ZMIN_PROBE
-  #endif
+#if EITHER(MESH_BED_LEVELING, HAS_BED_PROBE)
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MAX
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
+#endif
+#if HAS_BED_PROBE
+  #if BOTH(ENDSTOPPULLUPS, HAS_Z_MIN_PROBE_PIN)
+    #define ENDSTOPPULLUP_ZMIN_PROBE
+  #endif
   #ifndef XY_PROBE_FEEDRATE
     #define XY_PROBE_FEEDRATE ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif
 #else
   #undef NOZZLE_TO_PROBE_OFFSET
   #undef PROBING_STEPPERS_OFF
 #endif

commit 66ded801b734fbb597ab1c1497d347544b3aa05c
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Tue Aug 31 15:40:49 2021 +1200

    ‚è™Ô∏è Revert MAX31865 recent changes (#22660)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index fd49aada6b..a43e57d158 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -748,27 +748,27 @@
 
   #endif // TEMP_SENSOR_1_IS_MAX_TC
 
   //
   // User-defined thermocouple libraries
   //
   // Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
   // to select a USER library for MAX6675, MAX31855, MAX31865
   //
   #if BOTH(HAS_MAX6675, LIB_MAX6675)
-    #define LIB_USR_MAX6675 1
+    #define USE_LIB_MAX6675 1
   #endif
   #if BOTH(HAS_MAX31855, LIB_MAX31855)
-    #define LIB_USR_MAX31855 1
+    #define USE_ADAFRUIT_MAX31855 1
   #endif
   #if BOTH(HAS_MAX31865, LIB_MAX31865)
-    #define LIB_USR_MAX31865 1
+    #define USE_ADAFRUIT_MAX31865 1
   #elif HAS_MAX31865
     #define LIB_INTERNAL_MAX31865 1
   #endif
 
 #endif //HAS_MAX_TC
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)

commit 09a83d565e0db2157baa3662020500476b931ec6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Aug 28 17:46:22 2021 -0500

    ü©π Sensorless homing tweak

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 20243ae0ea..fd49aada6b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1998,21 +1998,21 @@
   #define HAS_E_STEPPER_ENABLE 1
 #endif
 
 #if ANY_AXIS_HAS(HW_SERIAL)
   #define HAS_TMC_HW_SERIAL 1
 #endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
-#if !USE_SENSORLESS
+#if DISABLED(SENSORLESS_HOMING)
   #undef SENSORLESS_BACKOFF_MM
 #endif
 
 //
 // Set USING_HW_SERIALn flags for used Serial Ports
 //
 
 // Flag the indexed hardware serial ports in use
 #define CONF_SERIAL_IS(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
                           || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \

commit 7d416bd055e3ccddf765208b2937dcc1fcd4ea8b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 22 05:25:07 2021 -0500

    ‚ú® MarlinUI for Ender 3 v2 DWIN LCD (#22594)
    
    Co-Authored-By: Taylor Talkington <taylor.talkington@gmail.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 04848bd0d6..20243ae0ea 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -454,21 +454,21 @@
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || BOTH(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(SDIO_SUPPORT)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
 #endif
 
-#if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
+#if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT, IS_DWIN_MARLINUI) || !PIN_EXISTS(SD_DETECT)
   #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #if HAS_Y_AXIS && !defined(DISABLE_INACTIVE_Y)
@@ -3251,27 +3251,31 @@
 // Defined here to catch the above defines
 #if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
   #define HAS_FOLDER_SORTING 1
 #endif
 
 #if HAS_WIRED_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_MARLINUI_U8GLIB
       #define LCD_WIDTH 21
+    #elif IS_DWIN_MARLINUI
+      // Defined by header
     #else
       #define LCD_WIDTH TERN(IS_ULTIPANEL, 20, 16)
     #endif
   #endif
   #ifndef LCD_HEIGHT
     #if HAS_MARLINUI_U8GLIB
       #define LCD_HEIGHT 5
+    #elif IS_DWIN_MARLINUI
+      // Defined by header
     #else
       #define LCD_HEIGHT TERN(IS_ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
 

commit c05de6cbf8b914c9198091423fe19415e802de6e
Author: Jason Smith <jason.inet@gmail.com>
Date:   Tue Aug 17 20:35:12 2021 -0700

    ‚ö°Ô∏è Simplify PROBING_STEPPERS_OFF (#22581)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0f33b4799d..04848bd0d6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2925,24 +2925,23 @@
  */
 #if !HAS_FAN
   #undef ADAPTIVE_FAN_SLOWING
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
 #if !BOTH(HAS_BED_PROBE, HAS_FAN)
   #undef PROBING_FANS_OFF
 #endif
 #if !BOTH(HAS_BED_PROBE, HAS_EXTRUDERS)
   #undef PROBING_ESTEPPERS_OFF
-#endif
-#if BOTH(PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF)
-  #undef PROBING_ESTEPPERS_OFF
-  #warning "PROBING_STEPPERS_OFF includes PROBING_ESTEPPERS_OFF. Disabling PROBING_ESTEPPERS_OFF."
+#elif ENABLED(PROBING_STEPPERS_OFF)
+  // PROBING_STEPPERS_OFF implies PROBING_ESTEPPERS_OFF, make sure it is defined
+  #define PROBING_ESTEPPERS_OFF
 #endif
 #if EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change

commit 03b0a6371dcdee90846c5838a5b59a7e5ce57505
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Aug 5 15:03:26 2021 -0500

    üé® Simplify endstops flags (#22525)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e25229c198..0f33b4799d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2115,97 +2115,92 @@
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (USES_Z_MIN_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
 #define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
 
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
-#if BOTH(X_HOME_TO_MIN, USE_XMIN_PLUG) && _HAS_STOP(X,MIN)
+#if _HAS_STOP(X,MIN)
   #define HAS_X_MIN 1
 #endif
-#if (BOTH(X_HOME_TO_MAX, USE_XMAX_PLUG) || ENABLED(DUAL_X_CARRIAGE)) && _HAS_STOP(X,MAX)
+#if _HAS_STOP(X,MAX)
   #define HAS_X_MAX 1
 #endif
-#if ALL(HAS_Y_AXIS, Y_HOME_TO_MIN, USE_YMIN_PLUG) && _HAS_STOP(Y,MIN)
+#if _HAS_STOP(Y,MIN)
   #define HAS_Y_MIN 1
 #endif
-#if ALL(HAS_Y_AXIS, Y_HOME_TO_MAX, USE_YMAX_PLUG) && _HAS_STOP(Y,MAX)
+#if _HAS_STOP(Y,MAX)
   #define HAS_Y_MAX 1
 #endif
-#if BOTH(HAS_Z_AXIS, USE_ZMIN_PLUG) && _HAS_STOP(Z,MIN)
+#if _HAS_STOP(Z,MIN)
   #define HAS_Z_MIN 1
 #endif
-#if ALL(HAS_Z_AXIS, Z_HOME_TO_MAX, USE_ZMAX_PLUG) && _HAS_STOP(Z,MAX)
+#if _HAS_STOP(Z,MAX)
   #define HAS_Z_MAX 1
 #endif
-#if LINEAR_AXES >= 4 && BOTH(I_HOME_TO_MIN, USE_IMIN_PLUG) && _HAS_STOP(I,MIN)
+#if _HAS_STOP(I,MIN)
   #define HAS_I_MIN 1
 #endif
-#if LINEAR_AXES >= 4 && BOTH(I_HOME_TO_MAX, USE_IMAX_PLUG) && _HAS_STOP(I,MAX)
+#if _HAS_STOP(I,MAX)
   #define HAS_I_MAX 1
 #endif
-#if LINEAR_AXES >= 5 && BOTH(J_HOME_TO_MIN, USE_JMIN_PLUG) && _HAS_STOP(J,MIN)
+#if _HAS_STOP(J,MIN)
   #define HAS_J_MIN 1
 #endif
-#if LINEAR_AXES >= 5 && BOTH(J_HOME_TO_MAX, USE_JMAX_PLUG) && _HAS_STOP(J,MAX)
+#if _HAS_STOP(J,MAX)
   #define HAS_J_MAX 1
 #endif
-#if LINEAR_AXES >= 6 && BOTH(K_HOME_TO_MIN, USE_KMIN_PLUG) && _HAS_STOP(K,MIN)
+#if _HAS_STOP(K,MIN)
   #define HAS_K_MIN 1
 #endif
-#if LINEAR_AXES >= 6 && BOTH(K_HOME_TO_MAX, USE_KMAX_PLUG) && _HAS_STOP(K,MAX)
+#if _HAS_STOP(K,MAX)
   #define HAS_K_MAX 1
 #endif
-#if BOTH(X_HOME_TO_MIN, X_DUAL_ENDSTOPS) && PIN_EXISTS(X2_MIN)
+#if PIN_EXISTS(X2_MIN)
   #define HAS_X2_MIN 1
 #endif
-#if BOTH(X_HOME_TO_MAX, X_DUAL_ENDSTOPS) && PIN_EXISTS(X2_MAX)
+#if PIN_EXISTS(X2_MAX)
   #define HAS_X2_MAX 1
 #endif
-#if BOTH(Y_HOME_TO_MIN, Y_DUAL_ENDSTOPS) && PIN_EXISTS(Y2_MIN)
+#if PIN_EXISTS(Y2_MIN)
   #define HAS_Y2_MIN 1
 #endif
-#if BOTH(Y_HOME_TO_MAX, Y_DUAL_ENDSTOPS) && PIN_EXISTS(Y2_MAX)
+#if PIN_EXISTS(Y2_MAX)
   #define HAS_Y2_MAX 1
 #endif
-#if ENABLED(Z_MULTI_ENDSTOPS)
-  #if Z_HOME_TO_MIN && PIN_EXISTS(Z2_MIN)
-    #define HAS_Z2_MIN 1
-  #endif
-  #if Z_HOME_TO_MAX && PIN_EXISTS(Z2_MAX)
-    #define HAS_Z2_MAX 1
-  #endif
-  #if NUM_Z_STEPPER_DRIVERS >= 3
-    #if Z_HOME_TO_MIN && PIN_EXISTS(Z3_MIN)
-      #define HAS_Z3_MIN 1
-    #endif
-    #if Z_HOME_TO_MAX && PIN_EXISTS(Z3_MAX)
-      #define HAS_Z3_MAX 1
-    #endif
-    #if NUM_Z_STEPPER_DRIVERS >= 4
-      #if Z_HOME_TO_MIN && PIN_EXISTS(Z4_MIN)
-        #define HAS_Z4_MIN 1
-      #endif
-      #if Z_HOME_TO_MAX && PIN_EXISTS(Z4_MAX)
-        #define HAS_Z4_MAX 1
-      #endif
-    #endif
-  #endif
+#if PIN_EXISTS(Z2_MIN)
+  #define HAS_Z2_MIN 1
+#endif
+#if PIN_EXISTS(Z2_MAX)
+  #define HAS_Z2_MAX 1
+#endif
+#if PIN_EXISTS(Z3_MIN)
+  #define HAS_Z3_MIN 1
+#endif
+#if PIN_EXISTS(Z3_MAX)
+  #define HAS_Z3_MAX 1
+#endif
+#if PIN_EXISTS(Z4_MIN)
+  #define HAS_Z4_MIN 1
+#endif
+#if PIN_EXISTS(Z4_MAX)
+  #define HAS_Z4_MAX 1
 #endif
 
 #if HAS_BED_PROBE && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
+#undef _HAS_STOP
 #undef IS_PROBE_PIN
 #undef IS_X2_ENDSTOP
 #undef IS_Y2_ENDSTOP
 #undef IS_Z2_ENDSTOP
 #undef IS_Z3_ENDSTOP
 #undef IS_Z4_ENDSTOP
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //

commit 0060dbc49e32cd5015b0bf2e42c2667e07eb7b72
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Aug 2 17:08:35 2021 -0500

    üêõ Fix up endstop flags (#22487)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 532602ed44..e25229c198 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2115,86 +2115,93 @@
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (USES_Z_MIN_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
 #define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
 
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
-#if _HAS_STOP(X,MIN)
+#if BOTH(X_HOME_TO_MIN, USE_XMIN_PLUG) && _HAS_STOP(X,MIN)
   #define HAS_X_MIN 1
 #endif
-#if _HAS_STOP(X,MAX)
+#if (BOTH(X_HOME_TO_MAX, USE_XMAX_PLUG) || ENABLED(DUAL_X_CARRIAGE)) && _HAS_STOP(X,MAX)
   #define HAS_X_MAX 1
 #endif
-#if HAS_Y_AXIS && _HAS_STOP(Y,MIN)
+#if ALL(HAS_Y_AXIS, Y_HOME_TO_MIN, USE_YMIN_PLUG) && _HAS_STOP(Y,MIN)
   #define HAS_Y_MIN 1
 #endif
-#if HAS_Y_AXIS && _HAS_STOP(Y,MAX)
+#if ALL(HAS_Y_AXIS, Y_HOME_TO_MAX, USE_YMAX_PLUG) && _HAS_STOP(Y,MAX)
   #define HAS_Y_MAX 1
 #endif
 #if BOTH(HAS_Z_AXIS, USE_ZMIN_PLUG) && _HAS_STOP(Z,MIN)
   #define HAS_Z_MIN 1
 #endif
-#if BOTH(HAS_Z_AXIS, USE_ZMAX_PLUG) && _HAS_STOP(Z,MAX)
+#if ALL(HAS_Z_AXIS, Z_HOME_TO_MAX, USE_ZMAX_PLUG) && _HAS_STOP(Z,MAX)
   #define HAS_Z_MAX 1
 #endif
-#if _HAS_STOP(I,MIN)
+#if LINEAR_AXES >= 4 && BOTH(I_HOME_TO_MIN, USE_IMIN_PLUG) && _HAS_STOP(I,MIN)
   #define HAS_I_MIN 1
 #endif
-#if _HAS_STOP(I,MAX)
+#if LINEAR_AXES >= 4 && BOTH(I_HOME_TO_MAX, USE_IMAX_PLUG) && _HAS_STOP(I,MAX)
   #define HAS_I_MAX 1
 #endif
-#if _HAS_STOP(J,MIN)
+#if LINEAR_AXES >= 5 && BOTH(J_HOME_TO_MIN, USE_JMIN_PLUG) && _HAS_STOP(J,MIN)
   #define HAS_J_MIN 1
 #endif
-#if _HAS_STOP(J,MAX)
+#if LINEAR_AXES >= 5 && BOTH(J_HOME_TO_MAX, USE_JMAX_PLUG) && _HAS_STOP(J,MAX)
   #define HAS_J_MAX 1
 #endif
-#if _HAS_STOP(K,MIN)
+#if LINEAR_AXES >= 6 && BOTH(K_HOME_TO_MIN, USE_KMIN_PLUG) && _HAS_STOP(K,MIN)
   #define HAS_K_MIN 1
 #endif
-#if _HAS_STOP(K,MAX)
+#if LINEAR_AXES >= 6 && BOTH(K_HOME_TO_MAX, USE_KMAX_PLUG) && _HAS_STOP(K,MAX)
   #define HAS_K_MAX 1
 #endif
-#if PIN_EXISTS(X2_MIN)
+#if BOTH(X_HOME_TO_MIN, X_DUAL_ENDSTOPS) && PIN_EXISTS(X2_MIN)
   #define HAS_X2_MIN 1
 #endif
-#if PIN_EXISTS(X2_MAX)
+#if BOTH(X_HOME_TO_MAX, X_DUAL_ENDSTOPS) && PIN_EXISTS(X2_MAX)
   #define HAS_X2_MAX 1
 #endif
-#if PIN_EXISTS(Y2_MIN)
+#if BOTH(Y_HOME_TO_MIN, Y_DUAL_ENDSTOPS) && PIN_EXISTS(Y2_MIN)
   #define HAS_Y2_MIN 1
 #endif
-#if PIN_EXISTS(Y2_MAX)
+#if BOTH(Y_HOME_TO_MAX, Y_DUAL_ENDSTOPS) && PIN_EXISTS(Y2_MAX)
   #define HAS_Y2_MAX 1
 #endif
-#if PIN_EXISTS(Z2_MIN)
-  #define HAS_Z2_MIN 1
-#endif
-#if PIN_EXISTS(Z2_MAX)
-  #define HAS_Z2_MAX 1
-#endif
-#if PIN_EXISTS(Z3_MIN)
-  #define HAS_Z3_MIN 1
-#endif
-#if PIN_EXISTS(Z3_MAX)
-  #define HAS_Z3_MAX 1
-#endif
-#if PIN_EXISTS(Z4_MIN)
-  #define HAS_Z4_MIN 1
-#endif
-#if PIN_EXISTS(Z4_MAX)
-  #define HAS_Z4_MAX 1
+#if ENABLED(Z_MULTI_ENDSTOPS)
+  #if Z_HOME_TO_MIN && PIN_EXISTS(Z2_MIN)
+    #define HAS_Z2_MIN 1
+  #endif
+  #if Z_HOME_TO_MAX && PIN_EXISTS(Z2_MAX)
+    #define HAS_Z2_MAX 1
+  #endif
+  #if NUM_Z_STEPPER_DRIVERS >= 3
+    #if Z_HOME_TO_MIN && PIN_EXISTS(Z3_MIN)
+      #define HAS_Z3_MIN 1
+    #endif
+    #if Z_HOME_TO_MAX && PIN_EXISTS(Z3_MAX)
+      #define HAS_Z3_MAX 1
+    #endif
+    #if NUM_Z_STEPPER_DRIVERS >= 4
+      #if Z_HOME_TO_MIN && PIN_EXISTS(Z4_MIN)
+        #define HAS_Z4_MIN 1
+      #endif
+      #if Z_HOME_TO_MAX && PIN_EXISTS(Z4_MAX)
+        #define HAS_Z4_MAX 1
+      #endif
+    #endif
+  #endif
 #endif
+
 #if HAS_BED_PROBE && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
 #undef IS_PROBE_PIN
 #undef IS_X2_ENDSTOP
 #undef IS_Y2_ENDSTOP
 #undef IS_Z2_ENDSTOP
 #undef IS_Z3_ENDSTOP
 #undef IS_Z4_ENDSTOP

commit 0eda34e07d6b15ac889d21d84457401683c0345f
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Mon Aug 2 07:13:57 2021 +0200

    üêõ Followup to 6 linear axes (#22482)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 26f28f4833..532602ed44 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1777,20 +1777,29 @@
   #endif
   #if defined(Z2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z2)
     #define Z2_SENSORLESS 1
   #endif
   #if defined(Z3_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z3)
     #define Z3_SENSORLESS 1
   #endif
   #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
     #define Z4_SENSORLESS 1
   #endif
+  #if defined(I_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(I)
+    #define I_SENSORLESS 1
+  #endif
+  #if defined(J_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(J)
+    #define J_SENSORLESS 1
+  #endif
+  #if defined(K_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(K)
+    #define K_SENSORLESS 1
+  #endif
 
   #if AXIS_HAS_STEALTHCHOP(X)
     #define X_HAS_STEALTHCHOP 1
   #endif
   #if AXIS_HAS_STEALTHCHOP(X2)
     #define X2_HAS_STEALTHCHOP 1
   #endif
   #if AXIS_HAS_STEALTHCHOP(Y)
     #define Y_HAS_STEALTHCHOP 1
   #endif
@@ -1838,22 +1847,35 @@
   #endif
   #if E_STEPPERS > 6 && AXIS_HAS_STEALTHCHOP(E6)
     #define E6_HAS_STEALTHCHOP 1
   #endif
   #if E_STEPPERS > 7 && AXIS_HAS_STEALTHCHOP(E7)
     #define E7_HAS_STEALTHCHOP 1
   #endif
 
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
-    #define Y_SPI_SENSORLESS Y_SENSORLESS
-    #define Z_SPI_SENSORLESS Z_SENSORLESS
+    #if HAS_Y_AXIS
+      #define Y_SPI_SENSORLESS Y_SENSORLESS
+    #endif
+    #if HAS_Z_AXIS
+      #define Z_SPI_SENSORLESS Z_SENSORLESS
+    #endif
+    #if LINEAR_AXES >= 4
+      #define I_SPI_SENSORLESS I_SENSORLESS
+    #endif
+    #if LINEAR_AXES >= 5
+      #define J_SPI_SENSORLESS J_SENSORLESS
+    #endif
+    #if LINEAR_AXES >= 6
+      #define K_SPI_SENSORLESS K_SENSORLESS
+    #endif
   #endif
   #ifndef X_INTERPOLATE
     #define X_INTERPOLATE INTERPOLATE
   #endif
   #ifndef X2_INTERPOLATE
     #define X2_INTERPOLATE INTERPOLATE
   #endif
   #ifndef Y_INTERPOLATE
     #define Y_INTERPOLATE INTERPOLATE
   #endif

commit a90c8b762c8b8ca06093d6e62f4355e8a5726115
Author: Grayson <mxpklx@gmail.com>
Date:   Sat Jul 31 22:55:22 2021 -0500

    üêõ Fix G38 with probe on Z_MIN (#22452)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index da17d18af1..26f28f4833 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2159,21 +2159,21 @@
 #endif
 #if PIN_EXISTS(Z3_MAX)
   #define HAS_Z3_MAX 1
 #endif
 #if PIN_EXISTS(Z4_MIN)
   #define HAS_Z4_MIN 1
 #endif
 #if PIN_EXISTS(Z4_MAX)
   #define HAS_Z4_MAX 1
 #endif
-#if BOTH(HAS_BED_PROBE, USES_Z_MIN_PROBE_PIN) && PIN_EXISTS(Z_MIN_PROBE)
+#if HAS_BED_PROBE && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
 #undef IS_PROBE_PIN
 #undef IS_X2_ENDSTOP
 #undef IS_Y2_ENDSTOP
 #undef IS_Z2_ENDSTOP
 #undef IS_Z3_ENDSTOP
 #undef IS_Z4_ENDSTOP
 

commit 363e83731f7b045d7b3e9842882b1f53e032ca89
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jul 28 23:24:30 2021 -0500

    üîß HAS_CUSTOM_PROBE_PIN => USES_Z_MIN_PROBE_PIN

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b6cf8eccb6..da17d18af1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2085,21 +2085,21 @@
 #undef _SERIAL_ID
 #undef _TMC_UART_IS
 #undef TMC_UART_IS
 #undef ANY_SERIAL_IS
 
 //
 // Endstops and bed probe
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
-#define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
+#define IS_PROBE_PIN(A,M) (USES_Z_MIN_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
 #define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
 
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
 #if _HAS_STOP(X,MIN)
   #define HAS_X_MIN 1
 #endif
@@ -2159,21 +2159,21 @@
 #endif
 #if PIN_EXISTS(Z3_MAX)
   #define HAS_Z3_MAX 1
 #endif
 #if PIN_EXISTS(Z4_MIN)
   #define HAS_Z4_MIN 1
 #endif
 #if PIN_EXISTS(Z4_MAX)
   #define HAS_Z4_MAX 1
 #endif
-#if BOTH(HAS_BED_PROBE, HAS_CUSTOM_PROBE_PIN) && PIN_EXISTS(Z_MIN_PROBE)
+#if BOTH(HAS_BED_PROBE, USES_Z_MIN_PROBE_PIN) && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
 #undef IS_PROBE_PIN
 #undef IS_X2_ENDSTOP
 #undef IS_Y2_ENDSTOP
 #undef IS_Z2_ENDSTOP
 #undef IS_Z3_ENDSTOP
 #undef IS_Z4_ENDSTOP
 

commit 9a7727e61c76a9e30fda85d8ac33392be0e453c0
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Tue Jul 13 17:13:06 2021 -0700

    üé® Define temp sensor conditionals earlier (#22342)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1bac56339f..b6cf8eccb6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -506,36 +506,23 @@
 #if ENABLED(PSU_CONTROL)
   #ifndef PSU_POWERUP_DELAY
     #define PSU_POWERUP_DELAY 250
   #endif
   #ifndef POWER_OFF_DELAY
     #define POWER_OFF_DELAY   0
   #endif
 #endif
 
 /**
- * Temp Sensor defines
+ * Temp Sensor defines; set up pins as needed.
  */
 
-#define ANY_TEMP_SENSOR_IS(n) ( \
-     n == TEMP_SENSOR_0 || n == TEMP_SENSOR_1 || n == TEMP_SENSOR_2 || n == TEMP_SENSOR_3 \
-  || n == TEMP_SENSOR_4 || n == TEMP_SENSOR_5 || n == TEMP_SENSOR_6 || n == TEMP_SENSOR_7 \
-  || n == TEMP_SENSOR_BED \
-  || n == TEMP_SENSOR_PROBE \
-  || n == TEMP_SENSOR_CHAMBER \
-  || n == TEMP_SENSOR_COOLER \
-  || n == TEMP_SENSOR_REDUNDANT )
-#if ANY_TEMP_SENSOR_IS(1000)
-  #define HAS_USER_THERMISTORS 1
-#endif
-#undef ANY_TEMP_SENSOR_IS
-
 // Usurp a sensor to do redundant readings
 #if TEMP_SENSOR_REDUNDANT
   #ifndef TEMP_SENSOR_REDUNDANT_SOURCE
     #define TEMP_SENSOR_REDUNDANT_SOURCE E1
   #endif
   #ifndef TEMP_SENSOR_REDUNDANT_TARGET
     #define TEMP_SENSOR_REDUNDANT_TARGET E0
   #endif
   #if !PIN_EXISTS(TEMP_REDUNDANT)
     #ifndef TEMP_SENSOR_REDUNDANT_MAX_DIFF
@@ -610,180 +597,23 @@
     #elif REDUNDANT_TEMP_MATCH(SOURCE, E7)
       #if !PIN_EXISTS(TEMP_7)
         #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E7 requires TEMP_7_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_7_PIN
       #endif
     #endif
   #endif
 #endif
 
-#if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
-  #define TEMP_SENSOR_0_IS_MAX_TC 1
-  #if TEMP_SENSOR_0 == -5
-    #define TEMP_SENSOR_0_IS_MAX31865 1
-    #define TEMP_SENSOR_0_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_0_MAX_TC_TMAX 1024
-    #ifndef MAX31865_SENSOR_WIRES_0
-      #define MAX31865_SENSOR_WIRES_0 2
-    #endif
-  #elif TEMP_SENSOR_0 == -3
-    #define TEMP_SENSOR_0_IS_MAX31855 1
-    #define TEMP_SENSOR_0_MAX_TC_TMIN -270
-    #define TEMP_SENSOR_0_MAX_TC_TMAX 1800
-  #elif TEMP_SENSOR_0 == -2
-    #define TEMP_SENSOR_0_IS_MAX6675 1
-    #define TEMP_SENSOR_0_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_0_MAX_TC_TMAX 1024
-  #endif
-#elif TEMP_SENSOR_0 == -4
-  #define TEMP_SENSOR_0_IS_AD8495 1
-#elif TEMP_SENSOR_0 == -1
-  #define TEMP_SENSOR_0_IS_AD595 1
-#elif TEMP_SENSOR_0 > 0
-  #define TEMP_SENSOR_0_IS_THERMISTOR 1
-  #if TEMP_SENSOR_0 == 1000
-    #define TEMP_SENSOR_0_IS_CUSTOM 1
-  #elif TEMP_SENSOR_0 == 998 || TEMP_SENSOR_0 == 999
-    #define TEMP_SENSOR_0_IS_DUMMY 1
-  #endif
-#else
-  #undef HEATER_0_MINTEMP
-  #undef HEATER_0_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_1 == -5 || TEMP_SENSOR_1 == -3 || TEMP_SENSOR_1 == -2
-  #define TEMP_SENSOR_1_IS_MAX_TC 1
-  #if TEMP_SENSOR_1 == -5
-    #define TEMP_SENSOR_1_IS_MAX31865 1
-    #define TEMP_SENSOR_1_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_1_MAX_TC_TMAX 1024
-    #ifndef MAX31865_SENSOR_WIRES_1
-      #define MAX31865_SENSOR_WIRES_1 2
-    #endif
-  #elif TEMP_SENSOR_1 == -3
-    #define TEMP_SENSOR_1_IS_MAX31855 1
-    #define TEMP_SENSOR_1_MAX_TC_TMIN -270
-    #define TEMP_SENSOR_1_MAX_TC_TMAX 1800
-  #elif TEMP_SENSOR_1 == -2
-    #define TEMP_SENSOR_1_IS_MAX6675 1
-    #define TEMP_SENSOR_1_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_1_MAX_TC_TMAX 1024
-  #endif
-
-  #if TEMP_SENSOR_1 != TEMP_SENSOR_0
-    #if   TEMP_SENSOR_1 == -5
-      #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
-    #elif TEMP_SENSOR_1 == -3
-      #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
-    #elif TEMP_SENSOR_1 == -2
-      #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
-    #endif
-  #endif
-#elif TEMP_SENSOR_1 == -4
-  #define TEMP_SENSOR_1_IS_AD8495 1
-#elif TEMP_SENSOR_1 == -1
-  #define TEMP_SENSOR_1_IS_AD595 1
-#elif TEMP_SENSOR_1 > 0
-  #define TEMP_SENSOR_1_IS_THERMISTOR 1
-  #if TEMP_SENSOR_1 == 1000
-    #define TEMP_SENSOR_1_IS_CUSTOM 1
-  #elif TEMP_SENSOR_1 == 998 || TEMP_SENSOR_1 == 999
-    #define TEMP_SENSOR_1_IS_DUMMY 1
-  #endif
-#else
-  #undef HEATER_1_MINTEMP
-  #undef HEATER_1_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_REDUNDANT == -5 || TEMP_SENSOR_REDUNDANT == -3 || TEMP_SENSOR_REDUNDANT == -2
-  #define TEMP_SENSOR_REDUNDANT_IS_MAX_TC 1
-
-  #if TEMP_SENSOR_REDUNDANT == -5
-    #if !REDUNDANT_TEMP_MATCH(SOURCE, E0) && !REDUNDANT_TEMP_MATCH(SOURCE, E1)
-      #error "MAX31865 Thermocouples (-5) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
-    #endif
-
-    #define TEMP_SENSOR_REDUNDANT_IS_MAX31865    1
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1024
-  #elif TEMP_SENSOR_REDUNDANT == -3
-    #if !REDUNDANT_TEMP_MATCH(SOURCE, E0) && !REDUNDANT_TEMP_MATCH(SOURCE, E1)
-      #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
-    #endif
-
-    #define TEMP_SENSOR_REDUNDANT_IS_MAX31855    1
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN -270
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1800
-  #elif TEMP_SENSOR_REDUNDANT == -2
-    #if !REDUNDANT_TEMP_MATCH(SOURCE, E0) && !REDUNDANT_TEMP_MATCH(SOURCE, E1)
-      #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
-    #endif
-
-    #define TEMP_SENSOR_REDUNDANT_IS_MAX6675     1
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1024
-  #endif
-
-  // mimic setting up the source TEMP_SENSOR
-  #if REDUNDANT_TEMP_MATCH(SOURCE, E0)
-    #define TEMP_SENSOR_0_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
-    #define TEMP_SENSOR_0_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
-    #ifndef MAX31865_SENSOR_WIRES_0
-      #define MAX31865_SENSOR_WIRES_0 2
-    #endif
-  #elif REDUNDANT_TEMP_MATCH(SOURCE, E1)
-    #define TEMP_SENSOR_1_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
-    #define TEMP_SENSOR_1_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
-    #ifndef MAX31865_SENSOR_WIRES_1
-      #define MAX31865_SENSOR_WIRES_1 2
-    #endif
-  #endif
-
-  #if (TEMP_SENSOR_0_IS_MAX_TC && TEMP_SENSOR_REDUNDANT != TEMP_SENSOR_0) || (TEMP_SENSOR_1_IS_MAX_TC && TEMP_SENSOR_REDUNDANT != TEMP_SENSOR_1)
-    #if   TEMP_SENSOR_REDUNDANT == -5
-      #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
-    #elif TEMP_SENSOR_REDUNDANT == -3
-      #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
-    #elif TEMP_SENSOR_REDUNDANT == -2
-      #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
-    #endif
-  #endif
-#elif TEMP_SENSOR_REDUNDANT == -4
-  #define TEMP_SENSOR_REDUNDANT_IS_AD8495 1
-#elif TEMP_SENSOR_REDUNDANT == -1
-  #define TEMP_SENSOR_REDUNDANT_IS_AD595 1
-#elif TEMP_SENSOR_REDUNDANT > 0
-  #define TEMP_SENSOR_REDUNDANT_IS_THERMISTOR 1
-  #if TEMP_SENSOR_REDUNDANT == 1000
-    #define TEMP_SENSOR_REDUNDANT_IS_CUSTOM 1
-  #elif TEMP_SENSOR_REDUNDANT == 998 || TEMP_SENSOR_REDUNDANT == 999
-    #error "Dummy sensors are not supported for TEMP_SENSOR_REDUNDANT."
-  #endif
-#endif
-
-#if TEMP_SENSOR_0_IS_MAX_TC || TEMP_SENSOR_1_IS_MAX_TC || TEMP_SENSOR_REDUNDANT_IS_MAX_TC
-  #define HAS_MAX_TC 1
-#endif
-#if TEMP_SENSOR_0_IS_MAX6675 || TEMP_SENSOR_1_IS_MAX6675 || TEMP_SENSOR_REDUNDANT_IS_MAX6675
-  #define HAS_MAX6675 1
-#endif
-#if TEMP_SENSOR_0_IS_MAX31855 || TEMP_SENSOR_1_IS_MAX31855 || TEMP_SENSOR_REDUNDANT_IS_MAX31855
-  #define HAS_MAX31855 1
-#endif
-#if TEMP_SENSOR_0_IS_MAX31865 || TEMP_SENSOR_1_IS_MAX31865 || TEMP_SENSOR_REDUNDANT_IS_MAX31865
-  #define HAS_MAX31865 1
-#endif
-
-//
-// Compatibility layer for MAX (SPI) temp boards
-//
+/**
+ * Compatibility layer for MAX (SPI) temp boards
+ */
 #if HAS_MAX_TC
 
   // Translate old _SS, _CS, _SCK, _DO, _DI, _MISO, and _MOSI PIN defines.
   #if TEMP_SENSOR_0_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && REDUNDANT_TEMP_MATCH(SOURCE, E1))
 
     #if !PIN_EXISTS(TEMP_0_CS) // SS, CS
       #if PIN_EXISTS(MAX6675_SS)
         #define TEMP_0_CS_PIN MAX6675_SS_PIN
       #elif PIN_EXISTS(MAX6675_CS)
         #define TEMP_0_CS_PIN MAX6675_CS_PIN
@@ -931,234 +761,20 @@
     #define LIB_USR_MAX31855 1
   #endif
   #if BOTH(HAS_MAX31865, LIB_MAX31865)
     #define LIB_USR_MAX31865 1
   #elif HAS_MAX31865
     #define LIB_INTERNAL_MAX31865 1
   #endif
 
 #endif //HAS_MAX_TC
 
-#if TEMP_SENSOR_2 == -4
-  #define TEMP_SENSOR_2_IS_AD8495 1
-#elif TEMP_SENSOR_2 == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
-#elif TEMP_SENSOR_2 == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
-#elif TEMP_SENSOR_2 == -1
-  #define TEMP_SENSOR_2_IS_AD595 1
-#elif TEMP_SENSOR_2 > 0
-  #define TEMP_SENSOR_2_IS_THERMISTOR 1
-  #if TEMP_SENSOR_2 == 1000
-    #define TEMP_SENSOR_2_IS_CUSTOM 1
-  #elif TEMP_SENSOR_2 == 998 || TEMP_SENSOR_2 == 999
-    #define TEMP_SENSOR_2_IS_DUMMY 1
-  #endif
-#else
-  #undef HEATER_2_MINTEMP
-  #undef HEATER_2_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_3 == -4
-  #define TEMP_SENSOR_3_IS_AD8495 1
-#elif TEMP_SENSOR_3 == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_3."
-#elif TEMP_SENSOR_3 == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_3."
-#elif TEMP_SENSOR_3 == -1
-  #define TEMP_SENSOR_3_IS_AD595 1
-#elif TEMP_SENSOR_3 > 0
-  #define TEMP_SENSOR_3_IS_THERMISTOR 1
-  #if TEMP_SENSOR_3 == 1000
-    #define TEMP_SENSOR_3_IS_CUSTOM 1
-  #elif TEMP_SENSOR_3 == 998 || TEMP_SENSOR_3 == 999
-    #define TEMP_SENSOR_3_IS_DUMMY 1
-  #endif
-#else
-  #undef HEATER_3_MINTEMP
-  #undef HEATER_3_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_4 == -4
-  #define TEMP_SENSOR_4_IS_AD8495 1
-#elif TEMP_SENSOR_4 == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_4."
-#elif TEMP_SENSOR_4 == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_4."
-#elif TEMP_SENSOR_4 == -1
-  #define TEMP_SENSOR_4_IS_AD595 1
-#elif TEMP_SENSOR_4 > 0
-  #define TEMP_SENSOR_4_IS_THERMISTOR 1
-  #if TEMP_SENSOR_4 == 1000
-    #define TEMP_SENSOR_4_IS_CUSTOM 1
-  #elif TEMP_SENSOR_4 == 998 || TEMP_SENSOR_4 == 999
-    #define TEMP_SENSOR_4_IS_DUMMY 1
-  #endif
-#else
-  #undef HEATER_4_MINTEMP
-  #undef HEATER_4_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_5 == -4
-  #define TEMP_SENSOR_5_IS_AD8495 1
-#elif TEMP_SENSOR_5 == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_5."
-#elif TEMP_SENSOR_5 == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_5."
-#elif TEMP_SENSOR_5 == -1
-  #define TEMP_SENSOR_5_IS_AD595 1
-#elif TEMP_SENSOR_5 > 0
-  #define TEMP_SENSOR_5_IS_THERMISTOR 1
-  #if TEMP_SENSOR_5 == 1000
-    #define TEMP_SENSOR_5_IS_CUSTOM 1
-  #elif TEMP_SENSOR_5 == 998 || TEMP_SENSOR_5 == 999
-    #define TEMP_SENSOR_5_IS_DUMMY 1
-  #endif
-#else
-  #undef HEATER_5_MINTEMP
-  #undef HEATER_5_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_6 == -4
-  #define TEMP_SENSOR_6_IS_AD8495 1
-#elif TEMP_SENSOR_6 == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_6."
-#elif TEMP_SENSOR_6 == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_6."
-#elif TEMP_SENSOR_6 == -1
-  #define TEMP_SENSOR_6_IS_AD595 1
-#elif TEMP_SENSOR_6 > 0
-  #define TEMP_SENSOR_6_IS_THERMISTOR 1
-  #if TEMP_SENSOR_6 == 1000
-    #define TEMP_SENSOR_6_IS_CUSTOM 1
-  #elif TEMP_SENSOR_6 == 998 || TEMP_SENSOR_6 == 999
-    #define TEMP_SENSOR_6_IS_DUMMY 1
-  #endif
-#else
-  #undef HEATER_6_MINTEMP
-  #undef HEATER_6_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_7 == -4
-  #define TEMP_SENSOR_7_IS_AD8495 1
-#elif TEMP_SENSOR_7 == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_7."
-#elif TEMP_SENSOR_7 == -2
-  #error "MAX7775 Thermocouples (-2) not supported for TEMP_SENSOR_7."
-#elif TEMP_SENSOR_7 == -1
-  #define TEMP_SENSOR_7_IS_AD595 1
-#elif TEMP_SENSOR_7 > 0
-  #define TEMP_SENSOR_7_IS_THERMISTOR 1
-  #if TEMP_SENSOR_7 == 1000
-    #define TEMP_SENSOR_7_IS_CUSTOM 1
-  #elif TEMP_SENSOR_7 == 998 || TEMP_SENSOR_7 == 999
-    #define TEMP_SENSOR_7_IS_DUMMY 1
-  #endif
-#else
-  #undef HEATER_7_MINTEMP
-  #undef HEATER_7_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_BED == -4
-  #define TEMP_SENSOR_BED_IS_AD8495 1
-#elif TEMP_SENSOR_BED == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
-#elif TEMP_SENSOR_BED == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
-#elif TEMP_SENSOR_BED == -1
-  #define TEMP_SENSOR_BED_IS_AD595 1
-#elif TEMP_SENSOR_BED > 0
-  #define TEMP_SENSOR_BED_IS_THERMISTOR 1
-  #if TEMP_SENSOR_BED == 1000
-    #define TEMP_SENSOR_BED_IS_CUSTOM 1
-  #elif TEMP_SENSOR_BED == 998 || TEMP_SENSOR_BED == 999
-    #define TEMP_SENSOR_BED_IS_DUMMY 1
-  #endif
-#else
-  #undef BED_MINTEMP
-  #undef BED_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_CHAMBER == -4
-  #define TEMP_SENSOR_CHAMBER_IS_AD8495 1
-#elif TEMP_SENSOR_CHAMBER == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
-#elif TEMP_SENSOR_CHAMBER == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
-#elif TEMP_SENSOR_CHAMBER == -1
-  #define TEMP_SENSOR_CHAMBER_IS_AD595 1
-#elif TEMP_SENSOR_CHAMBER > 0
-  #define TEMP_SENSOR_CHAMBER_IS_THERMISTOR 1
-  #if TEMP_SENSOR_CHAMBER == 1000
-    #define TEMP_SENSOR_CHAMBER_IS_CUSTOM 1
-  #elif TEMP_SENSOR_CHAMBER == 998 || TEMP_SENSOR_CHAMBER == 999
-    #define TEMP_SENSOR_CHAMBER_IS_DUMMY 1
-  #endif
-#else
-  #undef CHAMBER_MINTEMP
-  #undef CHAMBER_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_COOLER == -4
-  #define TEMP_SENSOR_COOLER_IS_AD8495 1
-#elif TEMP_SENSOR_COOLER == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_COOLER."
-#elif TEMP_SENSOR_COOLER == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_COOLER."
-#elif TEMP_SENSOR_COOLER == -1
-  #define TEMP_SENSOR_COOLER_IS_AD595 1
-#elif TEMP_SENSOR_COOLER > 0
-  #define TEMP_SENSOR_COOLER_IS_THERMISTOR 1
-  #if TEMP_SENSOR_COOLER == 1000
-    #define TEMP_SENSOR_COOLER_IS_CUSTOM 1
-  #elif TEMP_SENSOR_COOLER == 998 || TEMP_SENSOR_COOLER == 999
-    #define TEMP_SENSOR_COOLER_IS_DUMMY 1
-  #endif
-#else
-  #undef COOLER_MINTEMP
-  #undef COOLER_MAXTEMP
-#endif
-
-#if TEMP_SENSOR_PROBE == -4
-  #define TEMP_SENSOR_PROBE_IS_AD8495 1
-#elif TEMP_SENSOR_PROBE == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_PROBE."
-#elif TEMP_SENSOR_PROBE == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_PROBE."
-#elif TEMP_SENSOR_PROBE == -1
-  #define TEMP_SENSOR_PROBE_IS_AD595 1
-#elif TEMP_SENSOR_PROBE > 0
-  #define TEMP_SENSOR_PROBE_IS_THERMISTOR 1
-  #if TEMP_SENSOR_PROBE == 1000
-    #define TEMP_SENSOR_PROBE_IS_CUSTOM 1
-  #elif TEMP_SENSOR_PROBE == 998 || TEMP_SENSOR_PROBE == 999
-    #define TEMP_SENSOR_PROBE_IS_DUMMY 1
-  #endif
-#endif
-
-#if TEMP_SENSOR_BOARD == -4
-  #define TEMP_SENSOR_BOARD_IS_AD8495 1
-#elif TEMP_SENSOR_BOARD == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BOARD."
-#elif TEMP_SENSOR_BOARD == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BOARD."
-#elif TEMP_SENSOR_BOARD == -1
-  #define TEMP_SENSOR_BOARD_IS_AD595 1
-#elif TEMP_SENSOR_BOARD > 0
-  #define TEMP_SENSOR_BOARD_IS_THERMISTOR 1
-  #if TEMP_SENSOR_BOARD == 1000
-    #define TEMP_SENSOR_BOARD_IS_CUSTOM 1
-  #elif TEMP_SENSOR_BOARD == 998 || TEMP_SENSOR_BOARD == 999
-    #define TEMP_SENSOR_BOARD_IS_DUMMY 1
-  #endif
-#endif
-
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_TO_MAX
     #ifndef X2_MAX_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING

commit 4479b0222bb66dd54f2c60f50a35a9d35f3230dc
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Mon Jul 12 20:57:01 2021 -0700

    üêõ Followup to TEMP_SENSOR_BOARD (#22343, #22344)
    
    Followup to #22279

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d62debf755..1bac56339f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1128,20 +1128,37 @@
   #define TEMP_SENSOR_PROBE_IS_AD595 1
 #elif TEMP_SENSOR_PROBE > 0
   #define TEMP_SENSOR_PROBE_IS_THERMISTOR 1
   #if TEMP_SENSOR_PROBE == 1000
     #define TEMP_SENSOR_PROBE_IS_CUSTOM 1
   #elif TEMP_SENSOR_PROBE == 998 || TEMP_SENSOR_PROBE == 999
     #define TEMP_SENSOR_PROBE_IS_DUMMY 1
   #endif
 #endif
 
+#if TEMP_SENSOR_BOARD == -4
+  #define TEMP_SENSOR_BOARD_IS_AD8495 1
+#elif TEMP_SENSOR_BOARD == -3
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BOARD."
+#elif TEMP_SENSOR_BOARD == -2
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BOARD."
+#elif TEMP_SENSOR_BOARD == -1
+  #define TEMP_SENSOR_BOARD_IS_AD595 1
+#elif TEMP_SENSOR_BOARD > 0
+  #define TEMP_SENSOR_BOARD_IS_THERMISTOR 1
+  #if TEMP_SENSOR_BOARD == 1000
+    #define TEMP_SENSOR_BOARD_IS_CUSTOM 1
+  #elif TEMP_SENSOR_BOARD == 998 || TEMP_SENSOR_BOARD == 999
+    #define TEMP_SENSOR_BOARD_IS_DUMMY 1
+  #endif
+#endif
+
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_TO_MAX
     #ifndef X2_MAX_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING

commit 2f6c8e1176202a014c2a038846cb0403cd2cafe0
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Sun Jul 11 18:41:33 2021 -0700

    ‚ú® Add TEMP_SENSOR_BOARD (#22279)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index dde5edb522..d62debf755 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -525,98 +525,98 @@
   || n == TEMP_SENSOR_COOLER \
   || n == TEMP_SENSOR_REDUNDANT )
 #if ANY_TEMP_SENSOR_IS(1000)
   #define HAS_USER_THERMISTORS 1
 #endif
 #undef ANY_TEMP_SENSOR_IS
 
 // Usurp a sensor to do redundant readings
 #if TEMP_SENSOR_REDUNDANT
   #ifndef TEMP_SENSOR_REDUNDANT_SOURCE
-    #define TEMP_SENSOR_REDUNDANT_SOURCE 1
+    #define TEMP_SENSOR_REDUNDANT_SOURCE E1
   #endif
   #ifndef TEMP_SENSOR_REDUNDANT_TARGET
-    #define TEMP_SENSOR_REDUNDANT_TARGET 0
+    #define TEMP_SENSOR_REDUNDANT_TARGET E0
   #endif
   #if !PIN_EXISTS(TEMP_REDUNDANT)
     #ifndef TEMP_SENSOR_REDUNDANT_MAX_DIFF
       #define TEMP_SENSOR_REDUNDANT_MAX_DIFF 10
     #endif
-    #if TEMP_SENSOR_REDUNDANT_SOURCE == -5
+    #if REDUNDANT_TEMP_MATCH(SOURCE, COOLER)
       #if !PIN_EXISTS(TEMP_COOLER)
         #error "TEMP_SENSOR_REDUNDANT_SOURCE set to COOLER requires TEMP_COOLER_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_COOLER_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == -4
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, PROBE)
       #if !PIN_EXISTS(TEMP_PROBE)
         #error "TEMP_SENSOR_REDUNDANT_SOURCE set to PROBE requires TEMP_PROBE_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_PROBE_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == -2
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, CHAMBER)
       #if !PIN_EXISTS(TEMP_CHAMBER)
         #error "TEMP_SENSOR_REDUNDANT_SOURCE set to CHAMBER requires TEMP_CHAMBER_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_CHAMBER_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == -1
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, BED)
       #if !PIN_EXISTS(TEMP_BED)
         #error "TEMP_SENSOR_REDUNDANT_SOURCE set to BED requires TEMP_BED_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_BED_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 0
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, E0)
       #if !PIN_EXISTS(TEMP_0)
-        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 0 requires TEMP_0_PIN."
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E0 requires TEMP_0_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_0_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 1
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, E1)
       #if !PIN_EXISTS(TEMP_1)
-        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 1 requires TEMP_1_PIN."
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E1 requires TEMP_1_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_1_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 2
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, E2)
       #if !PIN_EXISTS(TEMP_2)
-        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 2 requires TEMP_2_PIN."
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E2 requires TEMP_2_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_2_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 3
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, E3)
       #if !PIN_EXISTS(TEMP_3)
-        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 3 requires TEMP_3_PIN."
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E3 requires TEMP_3_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_3_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 4
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, E4)
       #if !PIN_EXISTS(TEMP_4)
-        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 4 requires TEMP_4_PIN."
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E4 requires TEMP_4_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_4_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 5
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, E5)
       #if !PIN_EXISTS(TEMP_5)
-        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 5 requires TEMP_5_PIN."
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E5 requires TEMP_5_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_5_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 6
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, E6)
       #if !PIN_EXISTS(TEMP_6)
-        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 6 requires TEMP_6_PIN."
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E6 requires TEMP_6_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_6_PIN
       #endif
-    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 7
+    #elif REDUNDANT_TEMP_MATCH(SOURCE, E7)
       #if !PIN_EXISTS(TEMP_7)
-        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 7 requires TEMP_7_PIN."
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to E7 requires TEMP_7_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_7_PIN
       #endif
     #endif
   #endif
 #endif
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define TEMP_SENSOR_0_IS_MAX_TC 1
   #if TEMP_SENSOR_0 == -5
@@ -692,53 +692,53 @@
   #endif
 #else
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_REDUNDANT == -5 || TEMP_SENSOR_REDUNDANT == -3 || TEMP_SENSOR_REDUNDANT == -2
   #define TEMP_SENSOR_REDUNDANT_IS_MAX_TC 1
 
   #if TEMP_SENSOR_REDUNDANT == -5
-    #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
+    #if !REDUNDANT_TEMP_MATCH(SOURCE, E0) && !REDUNDANT_TEMP_MATCH(SOURCE, E1)
       #error "MAX31865 Thermocouples (-5) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
     #endif
 
     #define TEMP_SENSOR_REDUNDANT_IS_MAX31865    1
     #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN    0
     #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1024
   #elif TEMP_SENSOR_REDUNDANT == -3
-    #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
+    #if !REDUNDANT_TEMP_MATCH(SOURCE, E0) && !REDUNDANT_TEMP_MATCH(SOURCE, E1)
       #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
     #endif
 
     #define TEMP_SENSOR_REDUNDANT_IS_MAX31855    1
     #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN -270
     #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1800
   #elif TEMP_SENSOR_REDUNDANT == -2
-    #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
+    #if !REDUNDANT_TEMP_MATCH(SOURCE, E0) && !REDUNDANT_TEMP_MATCH(SOURCE, E1)
       #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
     #endif
 
     #define TEMP_SENSOR_REDUNDANT_IS_MAX6675     1
     #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN    0
     #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1024
   #endif
 
   // mimic setting up the source TEMP_SENSOR
-  #if TEMP_SENSOR_REDUNDANT_SOURCE == 0
+  #if REDUNDANT_TEMP_MATCH(SOURCE, E0)
     #define TEMP_SENSOR_0_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
     #define TEMP_SENSOR_0_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
     #ifndef MAX31865_SENSOR_WIRES_0
       #define MAX31865_SENSOR_WIRES_0 2
     #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 1
+  #elif REDUNDANT_TEMP_MATCH(SOURCE, E1)
     #define TEMP_SENSOR_1_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
     #define TEMP_SENSOR_1_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
     #ifndef MAX31865_SENSOR_WIRES_1
       #define MAX31865_SENSOR_WIRES_1 2
     #endif
   #endif
 
   #if (TEMP_SENSOR_0_IS_MAX_TC && TEMP_SENSOR_REDUNDANT != TEMP_SENSOR_0) || (TEMP_SENSOR_1_IS_MAX_TC && TEMP_SENSOR_REDUNDANT != TEMP_SENSOR_1)
     #if   TEMP_SENSOR_REDUNDANT == -5
       #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
@@ -773,21 +773,21 @@
 #if TEMP_SENSOR_0_IS_MAX31865 || TEMP_SENSOR_1_IS_MAX31865 || TEMP_SENSOR_REDUNDANT_IS_MAX31865
   #define HAS_MAX31865 1
 #endif
 
 //
 // Compatibility layer for MAX (SPI) temp boards
 //
 #if HAS_MAX_TC
 
   // Translate old _SS, _CS, _SCK, _DO, _DI, _MISO, and _MOSI PIN defines.
-  #if TEMP_SENSOR_0_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && TEMP_SENSOR_REDUNDANT_SOURCE == 1)
+  #if TEMP_SENSOR_0_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && REDUNDANT_TEMP_MATCH(SOURCE, E1))
 
     #if !PIN_EXISTS(TEMP_0_CS) // SS, CS
       #if PIN_EXISTS(MAX6675_SS)
         #define TEMP_0_CS_PIN MAX6675_SS_PIN
       #elif PIN_EXISTS(MAX6675_CS)
         #define TEMP_0_CS_PIN MAX6675_CS_PIN
       #elif PIN_EXISTS(MAX31855_SS)
         #define TEMP_0_CS_PIN MAX31855_SS_PIN
       #elif PIN_EXISTS(MAX31855_CS)
         #define TEMP_0_CS_PIN MAX31855_CS_PIN
@@ -842,21 +842,21 @@
     #if PIN_EXISTS(TEMP_0_MISO) && PIN_EXISTS(TEMP_0_SCK) && DISABLED(TEMP_SENSOR_0_FORCE_HW_SPI)
       #if TEMP_SENSOR_0_IS_MAX31865 && !PIN_EXISTS(TEMP_0_MOSI)
         #error "TEMP_SENSOR_0 MAX31865 requires TEMP_0_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_0_FORCE_HW_SPI."
       #else
         #define TEMP_SENSOR_0_HAS_SPI_PINS 1
       #endif
     #endif
 
   #endif // TEMP_SENSOR_0_IS_MAX_TC
 
-  #if TEMP_SENSOR_1_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && TEMP_SENSOR_REDUNDANT_SOURCE == 1)
+  #if TEMP_SENSOR_1_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && REDUNDANT_TEMP_MATCH(SOURCE, E1))
 
     #if !PIN_EXISTS(TEMP_1_CS) // SS2, CS2
       #if PIN_EXISTS(MAX6675_SS2)
         #define TEMP_1_CS_PIN MAX6675_SS2_PIN
       #elif PIN_EXISTS(MAX6675_CS)
         #define TEMP_1_CS_PIN MAX6675_CS2_PIN
       #elif PIN_EXISTS(MAX31855_SS2)
         #define TEMP_1_CS_PIN MAX31855_SS2_PIN
       #elif PIN_EXISTS(MAX31855_CS2)
         #define TEMP_1_CS_PIN MAX31855_CS2_PIN
@@ -2577,40 +2577,46 @@
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 #if HAS_ADC_TEST(COOLER)
   #define HAS_TEMP_ADC_COOLER 1
 #endif
+#if HAS_ADC_TEST(BOARD)
+  #define HAS_TEMP_ADC_BOARD 1
+#endif
 #if HAS_ADC_TEST(REDUNDANT)
   #define HAS_TEMP_ADC_REDUNDANT 1
 #endif
 
 #define HAS_TEMP(N) ANY(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_MAX_TC, TEMP_SENSOR_##N##_IS_DUMMY)
 #if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
 #if HAS_TEMP(BED)
   #define HAS_TEMP_BED 1
 #endif
 #if HAS_TEMP(PROBE)
   #define HAS_TEMP_PROBE 1
 #endif
 #if HAS_TEMP(CHAMBER)
   #define HAS_TEMP_CHAMBER 1
 #endif
 #if HAS_TEMP(COOLER)
   #define HAS_TEMP_COOLER 1
 #endif
+#if HAS_TEMP(BOARD)
+  #define HAS_TEMP_BOARD 1
+#endif
 #if HAS_TEMP(REDUNDANT)
   #define HAS_TEMP_REDUNDANT 1
 #endif
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
   #endif
   #if PIN_EXISTS(JOY_Y)
     #define HAS_JOY_ADC_Y 1
@@ -2668,21 +2674,22 @@
   #ifndef COOLER_OVERSHOOT
     #define COOLER_OVERSHOOT 2
   #endif
   #define COOLER_MIN_TARGET (COOLER_MINTEMP + (COOLER_OVERSHOOT))
   #define COOLER_MAX_TARGET (COOLER_MAXTEMP - (COOLER_OVERSHOOT))
 #endif
 
 #if HAS_HEATED_BED || HAS_TEMP_CHAMBER
   #define BED_OR_CHAMBER 1
 #endif
-#if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER
+
+#if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER || HAS_TEMP_BOARD
   #define HAS_TEMP_SENSOR 1
 #endif
 
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
   #define HAS_HEATED_CHAMBER 1
   #ifndef CHAMBER_OVERSHOOT
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
 #else
@@ -2806,23 +2813,20 @@
   #define HAS_FAN5 1
 #endif
 #if _HAS_FAN(6)
   #define HAS_FAN6 1
 #endif
 #if _HAS_FAN(7)
   #define HAS_FAN7 1
 #endif
 #undef _NOT_E_AUTO
 #undef _HAS_FAN
-#if PIN_EXISTS(CONTROLLER_FAN)
-  #define HAS_CONTROLLER_FAN 1
-#endif
 
 #if BED_OR_CHAMBER || HAS_FAN0
   #define BED_OR_CHAMBER_OR_FAN 1
 #endif
 
 /**
  * Up to 3 PWM fans
  */
 #ifndef FAN_INVERTING
   #define FAN_INVERTING false
@@ -2885,20 +2889,41 @@
   #error "FAN_OFF_PWM must be less than or equal to FAN_MIN_PWM."
 #endif
 
 /**
  * FAST PWM FAN Settings
  */
 #if ENABLED(FAST_PWM_FAN) && !defined(FAST_PWM_FAN_FREQUENCY)
   #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1)) // Fan frequency default
 #endif
 
+/**
+ * Controller Fan Settings
+ */
+#if PIN_EXISTS(CONTROLLER_FAN)
+  #define HAS_CONTROLLER_FAN 1
+  #if CONTROLLER_FAN_MIN_BOARD_TEMP
+    #define HAS_CONTROLLER_FAN_MIN_BOARD_TEMP 1
+  #endif
+#endif
+
+#if HAS_CONTROLLER_FAN
+  #if ENABLED(CONTROLLER_FAN_USE_BOARD_TEMP)
+    #define HAS_CONTROLLER_FAN_BOARD_TEMP_TRIGGER 1
+    #ifndef CONTROLLER_FAN_TRIGGER_TEMP
+      #define CONTROLLER_FAN_TRIGGER_TEMP 30
+    #endif
+  #else
+    #undef CONTROLLER_FAN_TRIGGER_TEMP
+  #endif
+#endif
+
 // Servos
 #if PIN_EXISTS(SERVO0) && NUM_SERVOS > 0
   #define HAS_SERVO_0 1
 #endif
 #if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
   #define HAS_SERVO_1 1
 #endif
 #if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
   #define HAS_SERVO_2 1
 #endif

commit 3ba5eda0b28498a3e557669496e0d6ffec875876
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Fri Jul 9 19:24:14 2021 -0400

    üì∫ ExtUI pause state response (#22164)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f4bb862db9..dde5edb522 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3259,21 +3259,21 @@
   #define HEATER_IDLE_HANDLER 1
 #endif
 #if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
-  #if HAS_LCD_MENU || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+  #if EITHER(HAS_LCD_MENU, EXTENSIBLE_UI) || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
   #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif

commit 938d86d1c5512a39ac2527b497a0875d742d17e9
Author: mks-viva <1224833100@qq.com>
Date:   Fri Jul 9 17:59:36 2021 -0500

    ‚ú® MKS MINI12864 V3 for MKS Robin Nano V2/3 (#22285)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2f5af2b700..f4bb862db9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -362,20 +362,24 @@
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
 #elif EITHER(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
+#elif ENABLED(MKS_MINI_12864_V3)
+  #define _LCD_CONTRAST_MIN  255
+  #define _LCD_CONTRAST_INIT 255
+  #define _LCD_CONTRAST_MAX  255
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)
   #define _LCD_CONTRAST_INIT 150
 #elif ENABLED(ZONESTAR_12864OLED)

commit b2f0913083d83bd3fd9af1c603d1f4cc1afb64eb
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Tue Jul 6 17:36:41 2021 -0700

    üêõ Redundant Temp Sensor followup (#22196)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 45271bca72..2f5af2b700 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -608,68 +608,71 @@
         #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 7 requires TEMP_7_PIN."
       #else
         #define TEMP_REDUNDANT_PIN TEMP_7_PIN
       #endif
     #endif
   #endif
 #endif
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define TEMP_SENSOR_0_IS_MAX_TC 1
-  #define HAS_MAX_TC 1
-  #if TEMP_SENSOR_0 == -3
-    #define TEMP_SENSOR_0_MAX_TC_TMIN -270
-    #define TEMP_SENSOR_0_MAX_TC_TMAX 1800
-  #else
-    #define TEMP_SENSOR_0_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_0_MAX_TC_TMAX 1024
-  #endif
   #if TEMP_SENSOR_0 == -5
     #define TEMP_SENSOR_0_IS_MAX31865 1
+    #define TEMP_SENSOR_0_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_0_MAX_TC_TMAX 1024
+    #ifndef MAX31865_SENSOR_WIRES_0
+      #define MAX31865_SENSOR_WIRES_0 2
+    #endif
   #elif TEMP_SENSOR_0 == -3
     #define TEMP_SENSOR_0_IS_MAX31855 1
+    #define TEMP_SENSOR_0_MAX_TC_TMIN -270
+    #define TEMP_SENSOR_0_MAX_TC_TMAX 1800
   #elif TEMP_SENSOR_0 == -2
     #define TEMP_SENSOR_0_IS_MAX6675 1
+    #define TEMP_SENSOR_0_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_0_MAX_TC_TMAX 1024
   #endif
 #elif TEMP_SENSOR_0 == -4
   #define TEMP_SENSOR_0_IS_AD8495 1
 #elif TEMP_SENSOR_0 == -1
   #define TEMP_SENSOR_0_IS_AD595 1
 #elif TEMP_SENSOR_0 > 0
   #define TEMP_SENSOR_0_IS_THERMISTOR 1
   #if TEMP_SENSOR_0 == 1000
     #define TEMP_SENSOR_0_IS_CUSTOM 1
   #elif TEMP_SENSOR_0 == 998 || TEMP_SENSOR_0 == 999
     #define TEMP_SENSOR_0_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_1 == -5 || TEMP_SENSOR_1 == -3 || TEMP_SENSOR_1 == -2
   #define TEMP_SENSOR_1_IS_MAX_TC 1
-  #define HAS_MAX_TC 1
-  #if TEMP_SENSOR_1 == -3
-    #define TEMP_SENSOR_1_MAX_TC_TMIN -270
-    #define TEMP_SENSOR_1_MAX_TC_TMAX 1800
-  #else
-    #define TEMP_SENSOR_1_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_1_MAX_TC_TMAX 1024
-  #endif
   #if TEMP_SENSOR_1 == -5
     #define TEMP_SENSOR_1_IS_MAX31865 1
+    #define TEMP_SENSOR_1_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_1_MAX_TC_TMAX 1024
+    #ifndef MAX31865_SENSOR_WIRES_1
+      #define MAX31865_SENSOR_WIRES_1 2
+    #endif
   #elif TEMP_SENSOR_1 == -3
     #define TEMP_SENSOR_1_IS_MAX31855 1
+    #define TEMP_SENSOR_1_MAX_TC_TMIN -270
+    #define TEMP_SENSOR_1_MAX_TC_TMAX 1800
   #elif TEMP_SENSOR_1 == -2
     #define TEMP_SENSOR_1_IS_MAX6675 1
+    #define TEMP_SENSOR_1_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_1_MAX_TC_TMAX 1024
   #endif
+
   #if TEMP_SENSOR_1 != TEMP_SENSOR_0
     #if   TEMP_SENSOR_1 == -5
       #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -3
       #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -2
       #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #endif
   #endif
 #elif TEMP_SENSOR_1 == -4
@@ -683,51 +686,62 @@
   #elif TEMP_SENSOR_1 == 998 || TEMP_SENSOR_1 == 999
     #define TEMP_SENSOR_1_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_REDUNDANT == -5 || TEMP_SENSOR_REDUNDANT == -3 || TEMP_SENSOR_REDUNDANT == -2
   #define TEMP_SENSOR_REDUNDANT_IS_MAX_TC 1
-  #define HAS_MAX_TC 1
-  #if TEMP_SENSOR_REDUNDANT == -3
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN -270
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1800
-  #else
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN    0
-    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1024
-  #endif
-  #if TEMP_SENSOR_REDUNDANT_SOURCE == 0
-    #define TEMP_SENSOR_0_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
-    #define TEMP_SENSOR_0_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 1
-    #define TEMP_SENSOR_1_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
-    #define TEMP_SENSOR_1_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
-  #endif
+
   #if TEMP_SENSOR_REDUNDANT == -5
     #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
       #error "MAX31865 Thermocouples (-5) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
     #endif
-    #define TEMP_SENSOR_REDUNDANT_IS_MAX31865 1
+
+    #define TEMP_SENSOR_REDUNDANT_IS_MAX31865    1
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1024
   #elif TEMP_SENSOR_REDUNDANT == -3
     #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
       #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
     #endif
-    #define TEMP_SENSOR_REDUNDANT_IS_MAX31855 1
+
+    #define TEMP_SENSOR_REDUNDANT_IS_MAX31855    1
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN -270
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1800
   #elif TEMP_SENSOR_REDUNDANT == -2
     #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
       #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
     #endif
-    #define TEMP_SENSOR_REDUNDANT_IS_MAX6675 1
+
+    #define TEMP_SENSOR_REDUNDANT_IS_MAX6675     1
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1024
   #endif
+
+  // mimic setting up the source TEMP_SENSOR
+  #if TEMP_SENSOR_REDUNDANT_SOURCE == 0
+    #define TEMP_SENSOR_0_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
+    #define TEMP_SENSOR_0_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
+    #ifndef MAX31865_SENSOR_WIRES_0
+      #define MAX31865_SENSOR_WIRES_0 2
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 1
+    #define TEMP_SENSOR_1_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
+    #define TEMP_SENSOR_1_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
+    #ifndef MAX31865_SENSOR_WIRES_1
+      #define MAX31865_SENSOR_WIRES_1 2
+    #endif
+  #endif
+
   #if (TEMP_SENSOR_0_IS_MAX_TC && TEMP_SENSOR_REDUNDANT != TEMP_SENSOR_0) || (TEMP_SENSOR_1_IS_MAX_TC && TEMP_SENSOR_REDUNDANT != TEMP_SENSOR_1)
     #if   TEMP_SENSOR_REDUNDANT == -5
       #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
     #elif TEMP_SENSOR_REDUNDANT == -3
       #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
     #elif TEMP_SENSOR_REDUNDANT == -2
       #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
     #endif
   #endif
 #elif TEMP_SENSOR_REDUNDANT == -4
@@ -736,115 +750,196 @@
   #define TEMP_SENSOR_REDUNDANT_IS_AD595 1
 #elif TEMP_SENSOR_REDUNDANT > 0
   #define TEMP_SENSOR_REDUNDANT_IS_THERMISTOR 1
   #if TEMP_SENSOR_REDUNDANT == 1000
     #define TEMP_SENSOR_REDUNDANT_IS_CUSTOM 1
   #elif TEMP_SENSOR_REDUNDANT == 998 || TEMP_SENSOR_REDUNDANT == 999
     #error "Dummy sensors are not supported for TEMP_SENSOR_REDUNDANT."
   #endif
 #endif
 
+#if TEMP_SENSOR_0_IS_MAX_TC || TEMP_SENSOR_1_IS_MAX_TC || TEMP_SENSOR_REDUNDANT_IS_MAX_TC
+  #define HAS_MAX_TC 1
+#endif
+#if TEMP_SENSOR_0_IS_MAX6675 || TEMP_SENSOR_1_IS_MAX6675 || TEMP_SENSOR_REDUNDANT_IS_MAX6675
+  #define HAS_MAX6675 1
+#endif
 #if TEMP_SENSOR_0_IS_MAX31855 || TEMP_SENSOR_1_IS_MAX31855 || TEMP_SENSOR_REDUNDANT_IS_MAX31855
   #define HAS_MAX31855 1
 #endif
 #if TEMP_SENSOR_0_IS_MAX31865 || TEMP_SENSOR_1_IS_MAX31865 || TEMP_SENSOR_REDUNDANT_IS_MAX31865
   #define HAS_MAX31865 1
 #endif
-#if TEMP_SENSOR_0_IS_MAX6675 || TEMP_SENSOR_1_IS_MAX6675 || TEMP_SENSOR_REDUNDANT_IS_MAX6675
-  #define HAS_MAX6675 1
-#endif
 
 //
 // Compatibility layer for MAX (SPI) temp boards
 //
-#define TEMP_SENSOR_IS_MAX(n, M) (ENABLED(TEMP_SENSOR_##n##_IS_##M) || (ENABLED(TEMP_SENSOR_REDUNDANT_IS_##M) && TEMP_SENSOR_REDUNDANT_SOURCE == (n)))
+#if HAS_MAX_TC
+
+  // Translate old _SS, _CS, _SCK, _DO, _DI, _MISO, and _MOSI PIN defines.
+  #if TEMP_SENSOR_0_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && TEMP_SENSOR_REDUNDANT_SOURCE == 1)
+
+    #if !PIN_EXISTS(TEMP_0_CS) // SS, CS
+      #if PIN_EXISTS(MAX6675_SS)
+        #define TEMP_0_CS_PIN MAX6675_SS_PIN
+      #elif PIN_EXISTS(MAX6675_CS)
+        #define TEMP_0_CS_PIN MAX6675_CS_PIN
+      #elif PIN_EXISTS(MAX31855_SS)
+        #define TEMP_0_CS_PIN MAX31855_SS_PIN
+      #elif PIN_EXISTS(MAX31855_CS)
+        #define TEMP_0_CS_PIN MAX31855_CS_PIN
+      #elif PIN_EXISTS(MAX31865_SS)
+        #define TEMP_0_CS_PIN MAX31865_SS_PIN
+      #elif PIN_EXISTS(MAX31865_CS)
+        #define TEMP_0_CS_PIN MAX31865_CS_PIN
+      #endif
+    #endif
 
-#if PIN_EXISTS(MAX6675_SS)
-  #if TEMP_SENSOR_IS_MAX(0, MAX31855)
-    #define MAX31855_CS_PIN MAX6675_SS_PIN
-  #elif TEMP_SENSOR_IS_MAX(0, MAX31865)
-    #define MAX31865_CS_PIN MAX6675_SS_PIN
-  #elif TEMP_SENSOR_IS_MAX(0, MAX6675)
-    #define MAX6675_CS_PIN MAX6675_SS_PIN
-  #endif
-#endif
+    #if TEMP_SENSOR_0_IS_MAX6675
+      #if !PIN_EXISTS(TEMP_0_MISO) // DO
+        #if PIN_EXISTS(MAX6675_MISO)
+          #define TEMP_0_MISO_PIN MAX6675_MISO_PIN
+        #elif PIN_EXISTS(MAX6675_DO)
+          #define TEMP_0_MISO_PIN MAX6675_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_0_SCK) && PIN_EXISTS(MAX6675_SCK)
+        #define TEMP_0_SCK_PIN MAX6675_SCK_PIN
+      #endif
 
-#if PIN_EXISTS(MAX6675_SS2)
-  #if TEMP_SENSOR_IS_MAX(1, MAX31855)
-    #define MAX31855_CS2_PIN MAX6675_SS2_PIN
-  #elif TEMP_SENSOR_IS_MAX(1, MAX31865)
-    #define MAX31865_CS2_PIN MAX6675_SS2_PIN
-  #elif TEMP_SENSOR_IS_MAX(1, MAX6675)
-    #define MAX6675_CS2_PIN MAX6675_SS2_PIN
-  #endif
-#endif
+    #elif TEMP_SENSOR_0_IS_MAX31855
+      #if !PIN_EXISTS(TEMP_0_MISO) // DO
+        #if PIN_EXISTS(MAX31855_MISO)
+          #define TEMP_0_MISO_PIN MAX31855_MISO_PIN
+        #elif PIN_EXISTS(MAX31855_DO)
+          #define TEMP_0_MISO_PIN MAX31855_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_0_SCK) && PIN_EXISTS(MAX31855_SCK)
+        #define TEMP_0_SCK_PIN MAX31855_SCK_PIN
+      #endif
 
-#if PIN_EXISTS(MAX6675_DO)
-  #if HAS_MAX31855
-    #define MAX31855_MISO_PIN MAX6675_DO_PIN
-  #elif HAS_MAX31865
-    #define MAX31865_MISO_PIN MAX6675_DO_PIN
-  #elif HAS_MAX6675
-    #define MAX6675_MISO_PIN MAX6675_DO_PIN
-  #endif
-#endif
+    #elif TEMP_SENSOR_1_IS_MAX31865
+      #if !PIN_EXISTS(TEMP_1_MISO) // DO
+        #if PIN_EXISTS(MAX31865_MISO)
+          #define TEMP_1_MISO_PIN MAX31865_MISO_PIN
+        #elif PIN_EXISTS(MAX31865_DO)
+          #define TEMP_1_MISO_PIN MAX31865_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_1_SCK) && PIN_EXISTS(MAX31865_SCK)
+        #define TEMP_1_SCK_PIN MAX31865_SCK_PIN
+      #endif
+      #if !PIN_EXISTS(TEMP_1_MOSI) && PIN_EXISTS(MAX31865_MOSI) // MOSI for '65 only
+        #define TEMP_1_MOSI_PIN MAX31865_MOSI_PIN
+      #endif
+    #endif
 
-#if PIN_EXISTS(MAX6675_SCK)
-  #if HAS_MAX31855
-    #define MAX31855_SCK_PIN MAX6675_SCK_PIN
-  #elif HAS_MAX31865
-    #define MAX31865_SCK_PIN MAX6675_SCK_PIN
-  #endif
-#endif
+    // Software SPI - enable if MISO/SCK are defined.
+    #if PIN_EXISTS(TEMP_0_MISO) && PIN_EXISTS(TEMP_0_SCK) && DISABLED(TEMP_SENSOR_0_FORCE_HW_SPI)
+      #if TEMP_SENSOR_0_IS_MAX31865 && !PIN_EXISTS(TEMP_0_MOSI)
+        #error "TEMP_SENSOR_0 MAX31865 requires TEMP_0_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_0_FORCE_HW_SPI."
+      #else
+        #define TEMP_SENSOR_0_HAS_SPI_PINS 1
+      #endif
+    #endif
 
-// Compatibility Layer for use when HAL manipulates PINS for MAX31855 and MAX6675
-#if PIN_EXISTS(MAX31855_CS) && !PIN_EXISTS(MAX6675_SS)
-  #define MAX6675_SS_PIN MAX31855_CS_PIN
-#endif
-#if PIN_EXISTS(MAX31855_CS2) && !PIN_EXISTS(MAX6675_SS2)
-  #define MAX6675_SS2_PIN MAX31855_CS2_PIN
-#endif
-#if PIN_EXISTS(MAX6675_CS) && !PIN_EXISTS(MAX6675_SS)
-  #define MAX6675_SS_PIN MAX6675_CS_PIN
-#endif
-#if PIN_EXISTS(MAX6675_CS2) && !PIN_EXISTS(MAX6675_SS2)
-  #define MAX6675_SS2_PIN MAX6675_CS2_PIN
-#endif
-#if PIN_EXISTS(MAX31855_MISO) && !PIN_EXISTS(MAX6675_DO)
-  #define MAX6675_DO_PIN MAX31855_MISO_PIN
-#endif
-#if PIN_EXISTS(MAX6675_MISO) && !PIN_EXISTS(MAX6675_DO)
-  #define MAX6675_DO_PIN MAX6675_MISO_PIN
-#endif
-#if PIN_EXISTS(MAX31855_SCK) && !PIN_EXISTS(MAX6675_SCK)
-  #define MAX6675_SCK_PIN MAX31855_SCK_PIN
-#endif
+  #endif // TEMP_SENSOR_0_IS_MAX_TC
+
+  #if TEMP_SENSOR_1_IS_MAX_TC || (TEMP_SENSOR_REDUNDANT_IS_MAX_TC && TEMP_SENSOR_REDUNDANT_SOURCE == 1)
+
+    #if !PIN_EXISTS(TEMP_1_CS) // SS2, CS2
+      #if PIN_EXISTS(MAX6675_SS2)
+        #define TEMP_1_CS_PIN MAX6675_SS2_PIN
+      #elif PIN_EXISTS(MAX6675_CS)
+        #define TEMP_1_CS_PIN MAX6675_CS2_PIN
+      #elif PIN_EXISTS(MAX31855_SS2)
+        #define TEMP_1_CS_PIN MAX31855_SS2_PIN
+      #elif PIN_EXISTS(MAX31855_CS2)
+        #define TEMP_1_CS_PIN MAX31855_CS2_PIN
+      #elif PIN_EXISTS(MAX31865_SS2)
+        #define TEMP_1_CS_PIN MAX31865_SS2_PIN
+      #elif PIN_EXISTS(MAX31865_CS2)
+        #define TEMP_1_CS_PIN MAX31865_CS2_PIN
+      #endif
+    #endif
 
-//
-// User-defined thermocouple libraries
-//
-// Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
-// to select a USER library for MAX6675, MAX31855, MAX31865
-//
-#if BOTH(HAS_MAX6675, LIB_MAX6675)
-  #define LIB_USR_MAX6675 1
-#endif
-#if BOTH(HAS_MAX31855, LIB_MAX31855)
-  #define LIB_USR_MAX31855 1
-#endif
-#if HAS_MAX31865
-  #if ENABLED(LIB_MAX31865)
+    #if TEMP_SENSOR_1_IS_MAX6675
+      #if !PIN_EXISTS(TEMP_1_MISO) // DO
+        #if PIN_EXISTS(MAX6675_MISO)
+          #define TEMP_1_MISO_PIN MAX6675_MISO_PIN
+        #elif PIN_EXISTS(MAX6675_DO)
+          #define TEMP_1_MISO_PIN MAX6675_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_1_SCK) && PIN_EXISTS(MAX6675_SCK)
+        #define TEMP_1_SCK_PIN MAX6675_SCK_PIN
+      #endif
+
+    #elif TEMP_SENSOR_1_IS_MAX31855
+      #if !PIN_EXISTS(TEMP_1_MISO) // DO
+        #if PIN_EXISTS(MAX31855_MISO)
+          #define TEMP_1_MISO_PIN MAX31855_MISO_PIN
+        #elif PIN_EXISTS(MAX31855_DO)
+          #define TEMP_1_MISO_PIN MAX31855_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_1_SCK) && PIN_EXISTS(MAX31855_SCK)
+        #define TEMP_1_SCK_PIN MAX31855_SCK_PIN
+      #endif
+
+    #elif TEMP_SENSOR_1_IS_MAX31865
+      #if !PIN_EXISTS(TEMP_1_MISO) // DO
+        #if PIN_EXISTS(MAX31865_MISO)
+          #define TEMP_1_MISO_PIN MAX31865_MISO_PIN
+        #elif PIN_EXISTS(MAX31865_DO)
+          #define TEMP_1_MISO_PIN MAX31865_DO_PIN
+        #endif
+      #endif
+      #if !PIN_EXISTS(TEMP_1_SCK) && PIN_EXISTS(MAX31865_SCK)
+        #define TEMP_1_SCK_PIN MAX31865_SCK_PIN
+      #endif
+      #if !PIN_EXISTS(TEMP_1_MOSI) && PIN_EXISTS(MAX31865_MOSI) // MOSI for '65 only
+        #define TEMP_1_MOSI_PIN MAX31865_MOSI_PIN
+      #endif
+    #endif
+
+    // Software SPI - enable if MISO/SCK are defined.
+    #if PIN_EXISTS(TEMP_1_MISO) && PIN_EXISTS(TEMP_1_SCK) && DISABLED(TEMP_SENSOR_1_FORCE_HW_SPI)
+      #if TEMP_SENSOR_1_IS_MAX31865 && !PIN_EXISTS(TEMP_1_MOSI)
+        #error "TEMP_SENSOR_1 MAX31865 requires TEMP_1_MOSI_PIN defined for Software SPI. To use Hardware SPI instead, undefine MISO/SCK or enable TEMP_SENSOR_1_FORCE_HW_SPI."
+      #else
+        #define TEMP_SENSOR_1_HAS_SPI_PINS 1
+      #endif
+    #endif
+
+  #endif // TEMP_SENSOR_1_IS_MAX_TC
+
+  //
+  // User-defined thermocouple libraries
+  //
+  // Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
+  // to select a USER library for MAX6675, MAX31855, MAX31865
+  //
+  #if BOTH(HAS_MAX6675, LIB_MAX6675)
+    #define LIB_USR_MAX6675 1
+  #endif
+  #if BOTH(HAS_MAX31855, LIB_MAX31855)
+    #define LIB_USR_MAX31855 1
+  #endif
+  #if BOTH(HAS_MAX31865, LIB_MAX31865)
     #define LIB_USR_MAX31865 1
-  #else
-    #define LIB_ADAFRUIT_MAX31865 1
+  #elif HAS_MAX31865
+    #define LIB_INTERNAL_MAX31865 1
   #endif
-#endif
+
+#endif //HAS_MAX_TC
 
 #if TEMP_SENSOR_2 == -4
   #define TEMP_SENSOR_2_IS_AD8495 1
 #elif TEMP_SENSOR_2 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
   #define TEMP_SENSOR_2_IS_AD595 1
 #elif TEMP_SENSOR_2 > 0
@@ -2715,20 +2810,91 @@
 #undef _NOT_E_AUTO
 #undef _HAS_FAN
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define HAS_CONTROLLER_FAN 1
 #endif
 
 #if BED_OR_CHAMBER || HAS_FAN0
   #define BED_OR_CHAMBER_OR_FAN 1
 #endif
 
+/**
+ * Up to 3 PWM fans
+ */
+#ifndef FAN_INVERTING
+  #define FAN_INVERTING false
+#endif
+
+#if HAS_FAN7
+  #define FAN_COUNT 8
+#elif HAS_FAN6
+  #define FAN_COUNT 7
+#elif HAS_FAN5
+  #define FAN_COUNT 6
+#elif HAS_FAN4
+  #define FAN_COUNT 5
+#elif HAS_FAN3
+  #define FAN_COUNT 4
+#elif HAS_FAN2
+  #define FAN_COUNT 3
+#elif HAS_FAN1
+  #define FAN_COUNT 2
+#elif HAS_FAN0
+  #define FAN_COUNT 1
+#else
+  #define FAN_COUNT 0
+#endif
+
+#if FAN_COUNT > 0
+  #define HAS_FAN 1
+#endif
+
+/**
+ * Part Cooling fan multipliexer
+ */
+#if PIN_EXISTS(FANMUX0)
+  #define HAS_FANMUX 1
+#endif
+
+/**
+ * MIN/MAX fan PWM scaling
+ */
+#ifndef FAN_OFF_PWM
+  #define FAN_OFF_PWM 0
+#endif
+#ifndef FAN_MIN_PWM
+  #if FAN_OFF_PWM > 0
+    #define FAN_MIN_PWM (FAN_OFF_PWM + 1)
+  #else
+    #define FAN_MIN_PWM 0
+  #endif
+#endif
+#ifndef FAN_MAX_PWM
+  #define FAN_MAX_PWM 255
+#endif
+#if FAN_MIN_PWM < 0 || FAN_MIN_PWM > 255
+  #error "FAN_MIN_PWM must be a value from 0 to 255."
+#elif FAN_MAX_PWM < 0 || FAN_MAX_PWM > 255
+  #error "FAN_MAX_PWM must be a value from 0 to 255."
+#elif FAN_MIN_PWM > FAN_MAX_PWM
+  #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
+#elif FAN_OFF_PWM > FAN_MIN_PWM
+  #error "FAN_OFF_PWM must be less than or equal to FAN_MIN_PWM."
+#endif
+
+/**
+ * FAST PWM FAN Settings
+ */
+#if ENABLED(FAST_PWM_FAN) && !defined(FAST_PWM_FAN_FREQUENCY)
+  #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1)) // Fan frequency default
+#endif
+
 // Servos
 #if PIN_EXISTS(SERVO0) && NUM_SERVOS > 0
   #define HAS_SERVO_0 1
 #endif
 #if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
   #define HAS_SERVO_1 1
 #endif
 #if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
   #define HAS_SERVO_2 1
 #endif
@@ -2989,91 +3155,20 @@
     #define PREHEAT_COUNT 2
   #elif defined(PREHEAT_1_LABEL)
     #define PREHEAT_COUNT 1
   #endif
 #endif
 
 #if !PREHEAT_COUNT
   #undef PREHEAT_SHORTCUT_MENU_ITEM
 #endif
 
-/**
- * Up to 3 PWM fans
- */
-#ifndef FAN_INVERTING
-  #define FAN_INVERTING false
-#endif
-
-#if HAS_FAN7
-  #define FAN_COUNT 8
-#elif HAS_FAN6
-  #define FAN_COUNT 7
-#elif HAS_FAN5
-  #define FAN_COUNT 6
-#elif HAS_FAN4
-  #define FAN_COUNT 5
-#elif HAS_FAN3
-  #define FAN_COUNT 4
-#elif HAS_FAN2
-  #define FAN_COUNT 3
-#elif HAS_FAN1
-  #define FAN_COUNT 2
-#elif HAS_FAN0
-  #define FAN_COUNT 1
-#else
-  #define FAN_COUNT 0
-#endif
-
-#if FAN_COUNT > 0
-  #define HAS_FAN 1
-#endif
-
-/**
- * Part Cooling fan multipliexer
- */
-#if PIN_EXISTS(FANMUX0)
-  #define HAS_FANMUX 1
-#endif
-
-/**
- * MIN/MAX fan PWM scaling
- */
-#ifndef FAN_OFF_PWM
-  #define FAN_OFF_PWM 0
-#endif
-#ifndef FAN_MIN_PWM
-  #if FAN_OFF_PWM > 0
-    #define FAN_MIN_PWM (FAN_OFF_PWM + 1)
-  #else
-    #define FAN_MIN_PWM 0
-  #endif
-#endif
-#ifndef FAN_MAX_PWM
-  #define FAN_MAX_PWM 255
-#endif
-#if FAN_MIN_PWM < 0 || FAN_MIN_PWM > 255
-  #error "FAN_MIN_PWM must be a value from 0 to 255."
-#elif FAN_MAX_PWM < 0 || FAN_MAX_PWM > 255
-  #error "FAN_MAX_PWM must be a value from 0 to 255."
-#elif FAN_MIN_PWM > FAN_MAX_PWM
-  #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
-#elif FAN_OFF_PWM > FAN_MIN_PWM
-  #error "FAN_OFF_PWM must be less than or equal to FAN_MIN_PWM."
-#endif
-
-/**
- * FAST PWM FAN Settings
- */
-#if ENABLED(FAST_PWM_FAN) && !defined(FAST_PWM_FAN_FREQUENCY)
-  #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1)) // Fan frequency default
-#endif
-
 /**
  * MIN/MAX case light PWM scaling
  */
 #if ENABLED(CASE_LIGHT_ENABLE)
   #ifndef CASE_LIGHT_MAX_PWM
     #define CASE_LIGHT_MAX_PWM 255
   #elif !WITHIN(CASE_LIGHT_MAX_PWM, 1, 255)
     #error "CASE_LIGHT_MAX_PWM must be a value from 1 to 255."
   #endif
 #endif

commit f9051e5469cdd99bcb93bc46124e95984c279984
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jun 27 00:33:44 2021 -0500

    ‚ôªÔ∏è Refactor status screen timeout

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 32ae0fdef4..45271bca72 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3390,23 +3390,28 @@
   #define HAS_POSITION_SHIFT 1
   #if IS_CARTESIAN
     #define HAS_HOME_OFFSET 1       // The home offset also shifts the coordinate space
     #define HAS_WORKSPACE_OFFSET 1  // Cumulative offset to workspace to save some calculation
     #define HAS_M206_COMMAND 1      // M206 sets the home offset for Cartesian machines
   #elif IS_SCARA
     #define HAS_SCARA_OFFSET 1      // The SCARA home offset applies only on G28
   #endif
 #endif
 
-// LCD timeout to status screen default is 15s
-#ifndef LCD_TIMEOUT_TO_STATUS
-  #define LCD_TIMEOUT_TO_STATUS 15000
+#if HAS_LCD_MENU
+  // LCD timeout to status screen default is 15s
+  #ifndef LCD_TIMEOUT_TO_STATUS
+    #define LCD_TIMEOUT_TO_STATUS 15000
+  #endif
+  #if LCD_TIMEOUT_TO_STATUS
+    #define SCREENS_CAN_TIME_OUT 1
+  #endif
 #endif
 
 // Add commands that need sub-codes to this list
 #if ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY)
   #define USE_GCODE_SUBCODES 1
 #endif
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE

commit 33185b090e264a923a8d2fb0687846fe100f5465
Author: cr20-123 <66994235+cr20-123@users.noreply.github.com>
Date:   Sat Jun 26 14:17:18 2021 -0400

    ‚ú® Update/extend Quiet Probing (#22205)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index eb215c34eb..32ae0fdef4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3092,20 +3092,21 @@
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
   #ifndef XY_PROBE_FEEDRATE
     #define XY_PROBE_FEEDRATE ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif
 #else
   #undef NOZZLE_TO_PROBE_OFFSET
+  #undef PROBING_STEPPERS_OFF
 #endif
 
 /**
  * XYZ Bed Skew Correction
  */
 #if ENABLED(SKEW_CORRECTION)
   #define SKEW_FACTOR_MIN -1
   #define SKEW_FACTOR_MAX 1
 
   #define _GET_SIDE(a,b,c) (SQRT(2*sq(a)+2*sq(b)-4*sq(c))*0.5)
@@ -3134,32 +3135,40 @@
       #define YZ_SKEW_FACTOR _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
     #else
       #define YZ_SKEW_FACTOR 0.0
     #endif
   #endif
 #endif // SKEW_CORRECTION
 
 /**
  * Heater, Fan, and Probe interactions
  */
-#if FAN_COUNT == 0
-  #undef PROBING_FANS_OFF
+#if !HAS_FAN
   #undef ADAPTIVE_FAN_SLOWING
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
-
-#if HAS_BED_PROBE && (EITHER(PROBING_HEATERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
-  #define HAS_QUIET_PROBING 1
+#if !BOTH(HAS_BED_PROBE, HAS_FAN)
+  #undef PROBING_FANS_OFF
+#endif
+#if !BOTH(HAS_BED_PROBE, HAS_EXTRUDERS)
+  #undef PROBING_ESTEPPERS_OFF
+#endif
+#if BOTH(PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF)
+  #undef PROBING_ESTEPPERS_OFF
+  #warning "PROBING_STEPPERS_OFF includes PROBING_ESTEPPERS_OFF. Disabling PROBING_ESTEPPERS_OFF."
 #endif
 #if EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
   #define HEATER_IDLE_HANDLER 1
 #endif
+#if HAS_BED_PROBE && (ANY(PROBING_HEATERS_OFF, PROBING_STEPPERS_OFF, PROBING_ESTEPPERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
+  #define HAS_QUIET_PROBING 1
+#endif
 
 /**
  * Advanced Pause - Filament Change
  */
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
   #if HAS_LCD_MENU || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
     #define M600_PURGE_MORE_RESUMABLE 1
   #endif
   #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
     #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0

commit f944ec3ac6d0f4c4b394e11fe1af7416d52d6b68
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Sat Jun 19 11:44:28 2021 -0700

    üêõ Redundant Temp Sensor followup (#22173)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a5a1070b03..eb215c34eb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -519,98 +519,105 @@
   || n == TEMP_SENSOR_PROBE \
   || n == TEMP_SENSOR_CHAMBER \
   || n == TEMP_SENSOR_COOLER \
   || n == TEMP_SENSOR_REDUNDANT )
 #if ANY_TEMP_SENSOR_IS(1000)
   #define HAS_USER_THERMISTORS 1
 #endif
 #undef ANY_TEMP_SENSOR_IS
 
 // Usurp a sensor to do redundant readings
-#if TEMP_SENSOR_REDUNDANT && !PIN_EXISTS(TEMP_REDUNDANT)
-  #if TEMP_SENSOR_REDUNDANT_SOURCE == -5
-    #if !PIN_EXISTS(TEMP_COOLER)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to COOLER requires TEMP_COOLER_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_COOLER_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == -4
-    #if !PIN_EXISTS(TEMP_PROBE)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to PROBE requires TEMP_PROBE_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_PROBE_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == -2
-    #if !PIN_EXISTS(TEMP_CHAMBER)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to CHAMBER requires TEMP_CHAMBER_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_CHAMBER_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == -1
-    #if !PIN_EXISTS(TEMP_BED)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to BED requires TEMP_BED_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_BED_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 0
-    #if !PIN_EXISTS(TEMP_0)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 0 requires TEMP_0_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_0_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 1
-    #if !PIN_EXISTS(TEMP_1)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 1 requires TEMP_1_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_1_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 2
-    #if !PIN_EXISTS(TEMP_2)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 2 requires TEMP_2_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_2_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 3
-    #if !PIN_EXISTS(TEMP_3)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 3 requires TEMP_3_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_3_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 4
-    #if !PIN_EXISTS(TEMP_4)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 4 requires TEMP_4_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_4_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 5
-    #if !PIN_EXISTS(TEMP_5)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 5 requires TEMP_5_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_5_PIN
-    #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 6
-    #if !PIN_EXISTS(TEMP_6)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 6 requires TEMP_6_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_6_PIN
+#if TEMP_SENSOR_REDUNDANT
+  #ifndef TEMP_SENSOR_REDUNDANT_SOURCE
+    #define TEMP_SENSOR_REDUNDANT_SOURCE 1
+  #endif
+  #ifndef TEMP_SENSOR_REDUNDANT_TARGET
+    #define TEMP_SENSOR_REDUNDANT_TARGET 0
+  #endif
+  #if !PIN_EXISTS(TEMP_REDUNDANT)
+    #ifndef TEMP_SENSOR_REDUNDANT_MAX_DIFF
+      #define TEMP_SENSOR_REDUNDANT_MAX_DIFF 10
     #endif
-  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 7
-    #if !PIN_EXISTS(TEMP_7)
-      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 7 requires TEMP_7_PIN."
-    #else
-      #define TEMP_REDUNDANT_PIN TEMP_7_PIN
+    #if TEMP_SENSOR_REDUNDANT_SOURCE == -5
+      #if !PIN_EXISTS(TEMP_COOLER)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to COOLER requires TEMP_COOLER_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_COOLER_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == -4
+      #if !PIN_EXISTS(TEMP_PROBE)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to PROBE requires TEMP_PROBE_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_PROBE_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == -2
+      #if !PIN_EXISTS(TEMP_CHAMBER)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to CHAMBER requires TEMP_CHAMBER_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_CHAMBER_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == -1
+      #if !PIN_EXISTS(TEMP_BED)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to BED requires TEMP_BED_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_BED_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 0
+      #if !PIN_EXISTS(TEMP_0)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 0 requires TEMP_0_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_0_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 1
+      #if !PIN_EXISTS(TEMP_1)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 1 requires TEMP_1_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_1_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 2
+      #if !PIN_EXISTS(TEMP_2)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 2 requires TEMP_2_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_2_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 3
+      #if !PIN_EXISTS(TEMP_3)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 3 requires TEMP_3_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_3_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 4
+      #if !PIN_EXISTS(TEMP_4)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 4 requires TEMP_4_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_4_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 5
+      #if !PIN_EXISTS(TEMP_5)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 5 requires TEMP_5_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_5_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 6
+      #if !PIN_EXISTS(TEMP_6)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 6 requires TEMP_6_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_6_PIN
+      #endif
+    #elif TEMP_SENSOR_REDUNDANT_SOURCE == 7
+      #if !PIN_EXISTS(TEMP_7)
+        #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 7 requires TEMP_7_PIN."
+      #else
+        #define TEMP_REDUNDANT_PIN TEMP_7_PIN
+      #endif
     #endif
   #endif
-
-  #ifndef TEMP_SENSOR_REDUNDANT_MAX_DIFF
-    #define TEMP_SENSOR_REDUNDANT_MAX_DIFF 10
-  #endif
 #endif
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define TEMP_SENSOR_0_IS_MAX_TC 1
   #define HAS_MAX_TC 1
   #if TEMP_SENSOR_0 == -3
     #define TEMP_SENSOR_0_MAX_TC_TMIN -270
     #define TEMP_SENSOR_0_MAX_TC_TMAX 1800
   #else
     #define TEMP_SENSOR_0_MAX_TC_TMIN    0

commit 629551d9bc10fd10baf8684c6830baf83e6caa9b
Author: Katelyn Schiesser <katelyn.schiesser@gmail.com>
Date:   Fri Jun 11 13:51:29 2021 -0700

    ‚ú® More flexible redundant temp sensor (#22085)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d28822cf38..a5a1070b03 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -505,25 +505,113 @@
   #endif
   #ifndef POWER_OFF_DELAY
     #define POWER_OFF_DELAY   0
   #endif
 #endif
 
 /**
  * Temp Sensor defines
  */
 
-#define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n) || TEMP_SENSOR_COOLER == (n))
-
+#define ANY_TEMP_SENSOR_IS(n) ( \
+     n == TEMP_SENSOR_0 || n == TEMP_SENSOR_1 || n == TEMP_SENSOR_2 || n == TEMP_SENSOR_3 \
+  || n == TEMP_SENSOR_4 || n == TEMP_SENSOR_5 || n == TEMP_SENSOR_6 || n == TEMP_SENSOR_7 \
+  || n == TEMP_SENSOR_BED \
+  || n == TEMP_SENSOR_PROBE \
+  || n == TEMP_SENSOR_CHAMBER \
+  || n == TEMP_SENSOR_COOLER \
+  || n == TEMP_SENSOR_REDUNDANT )
 #if ANY_TEMP_SENSOR_IS(1000)
   #define HAS_USER_THERMISTORS 1
 #endif
+#undef ANY_TEMP_SENSOR_IS
+
+// Usurp a sensor to do redundant readings
+#if TEMP_SENSOR_REDUNDANT && !PIN_EXISTS(TEMP_REDUNDANT)
+  #if TEMP_SENSOR_REDUNDANT_SOURCE == -5
+    #if !PIN_EXISTS(TEMP_COOLER)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to COOLER requires TEMP_COOLER_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_COOLER_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == -4
+    #if !PIN_EXISTS(TEMP_PROBE)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to PROBE requires TEMP_PROBE_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_PROBE_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == -2
+    #if !PIN_EXISTS(TEMP_CHAMBER)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to CHAMBER requires TEMP_CHAMBER_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_CHAMBER_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == -1
+    #if !PIN_EXISTS(TEMP_BED)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to BED requires TEMP_BED_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_BED_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 0
+    #if !PIN_EXISTS(TEMP_0)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 0 requires TEMP_0_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_0_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 1
+    #if !PIN_EXISTS(TEMP_1)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 1 requires TEMP_1_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_1_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 2
+    #if !PIN_EXISTS(TEMP_2)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 2 requires TEMP_2_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_2_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 3
+    #if !PIN_EXISTS(TEMP_3)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 3 requires TEMP_3_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_3_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 4
+    #if !PIN_EXISTS(TEMP_4)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 4 requires TEMP_4_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_4_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 5
+    #if !PIN_EXISTS(TEMP_5)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 5 requires TEMP_5_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_5_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 6
+    #if !PIN_EXISTS(TEMP_6)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 6 requires TEMP_6_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_6_PIN
+    #endif
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 7
+    #if !PIN_EXISTS(TEMP_7)
+      #error "TEMP_SENSOR_REDUNDANT_SOURCE set to 7 requires TEMP_7_PIN."
+    #else
+      #define TEMP_REDUNDANT_PIN TEMP_7_PIN
+    #endif
+  #endif
+
+  #ifndef TEMP_SENSOR_REDUNDANT_MAX_DIFF
+    #define TEMP_SENSOR_REDUNDANT_MAX_DIFF 10
+  #endif
+#endif
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define TEMP_SENSOR_0_IS_MAX_TC 1
   #define HAS_MAX_TC 1
   #if TEMP_SENSOR_0 == -3
     #define TEMP_SENSOR_0_MAX_TC_TMIN -270
     #define TEMP_SENSOR_0_MAX_TC_TMAX 1800
   #else
     #define TEMP_SENSOR_0_MAX_TC_TMIN    0
     #define TEMP_SENSOR_0_MAX_TC_TMAX 1024
@@ -533,21 +621,20 @@
   #elif TEMP_SENSOR_0 == -3
     #define TEMP_SENSOR_0_IS_MAX31855 1
   #elif TEMP_SENSOR_0 == -2
     #define TEMP_SENSOR_0_IS_MAX6675 1
   #endif
 #elif TEMP_SENSOR_0 == -4
   #define TEMP_SENSOR_0_IS_AD8495 1
 #elif TEMP_SENSOR_0 == -1
   #define TEMP_SENSOR_0_IS_AD595 1
 #elif TEMP_SENSOR_0 > 0
-  #define TEMP_SENSOR_0_THERMISTOR_ID TEMP_SENSOR_0
   #define TEMP_SENSOR_0_IS_THERMISTOR 1
   #if TEMP_SENSOR_0 == 1000
     #define TEMP_SENSOR_0_IS_CUSTOM 1
   #elif TEMP_SENSOR_0 == 998 || TEMP_SENSOR_0 == 999
     #define TEMP_SENSOR_0_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #endif
@@ -576,61 +663,117 @@
       #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -2
       #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #endif
   #endif
 #elif TEMP_SENSOR_1 == -4
   #define TEMP_SENSOR_1_IS_AD8495 1
 #elif TEMP_SENSOR_1 == -1
   #define TEMP_SENSOR_1_IS_AD595 1
 #elif TEMP_SENSOR_1 > 0
-  #define TEMP_SENSOR_1_THERMISTOR_ID TEMP_SENSOR_1
   #define TEMP_SENSOR_1_IS_THERMISTOR 1
   #if TEMP_SENSOR_1 == 1000
     #define TEMP_SENSOR_1_IS_CUSTOM 1
   #elif TEMP_SENSOR_1 == 998 || TEMP_SENSOR_1 == 999
     #define TEMP_SENSOR_1_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #endif
 
-#if TEMP_SENSOR_0_IS_MAX31855 || TEMP_SENSOR_1_IS_MAX31855
+#if TEMP_SENSOR_REDUNDANT == -5 || TEMP_SENSOR_REDUNDANT == -3 || TEMP_SENSOR_REDUNDANT == -2
+  #define TEMP_SENSOR_REDUNDANT_IS_MAX_TC 1
+  #define HAS_MAX_TC 1
+  #if TEMP_SENSOR_REDUNDANT == -3
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN -270
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1800
+  #else
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX 1024
+  #endif
+  #if TEMP_SENSOR_REDUNDANT_SOURCE == 0
+    #define TEMP_SENSOR_0_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
+    #define TEMP_SENSOR_0_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
+  #elif TEMP_SENSOR_REDUNDANT_SOURCE == 1
+    #define TEMP_SENSOR_1_MAX_TC_TMIN TEMP_SENSOR_REDUNDANT_MAX_TC_TMIN
+    #define TEMP_SENSOR_1_MAX_TC_TMAX TEMP_SENSOR_REDUNDANT_MAX_TC_TMAX
+  #endif
+  #if TEMP_SENSOR_REDUNDANT == -5
+    #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
+      #error "MAX31865 Thermocouples (-5) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
+    #endif
+    #define TEMP_SENSOR_REDUNDANT_IS_MAX31865 1
+  #elif TEMP_SENSOR_REDUNDANT == -3
+    #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
+      #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
+    #endif
+    #define TEMP_SENSOR_REDUNDANT_IS_MAX31855 1
+  #elif TEMP_SENSOR_REDUNDANT == -2
+    #if TEMP_SENSOR_REDUNDANT_SOURCE != 0 && TEMP_SENSOR_REDUNDANT_SOURCE != 1
+      #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_REDUNDANT_SOURCE other than TEMP_SENSOR_0/TEMP_SENSOR_1 (0/1)."
+    #endif
+    #define TEMP_SENSOR_REDUNDANT_IS_MAX6675 1
+  #endif
+  #if (TEMP_SENSOR_0_IS_MAX_TC && TEMP_SENSOR_REDUNDANT != TEMP_SENSOR_0) || (TEMP_SENSOR_1_IS_MAX_TC && TEMP_SENSOR_REDUNDANT != TEMP_SENSOR_1)
+    #if   TEMP_SENSOR_REDUNDANT == -5
+      #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
+    #elif TEMP_SENSOR_REDUNDANT == -3
+      #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
+    #elif TEMP_SENSOR_REDUNDANT == -2
+      #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_0/TEMP_SENSOR_1 then TEMP_SENSOR_REDUNDANT must match."
+    #endif
+  #endif
+#elif TEMP_SENSOR_REDUNDANT == -4
+  #define TEMP_SENSOR_REDUNDANT_IS_AD8495 1
+#elif TEMP_SENSOR_REDUNDANT == -1
+  #define TEMP_SENSOR_REDUNDANT_IS_AD595 1
+#elif TEMP_SENSOR_REDUNDANT > 0
+  #define TEMP_SENSOR_REDUNDANT_IS_THERMISTOR 1
+  #if TEMP_SENSOR_REDUNDANT == 1000
+    #define TEMP_SENSOR_REDUNDANT_IS_CUSTOM 1
+  #elif TEMP_SENSOR_REDUNDANT == 998 || TEMP_SENSOR_REDUNDANT == 999
+    #error "Dummy sensors are not supported for TEMP_SENSOR_REDUNDANT."
+  #endif
+#endif
+
+#if TEMP_SENSOR_0_IS_MAX31855 || TEMP_SENSOR_1_IS_MAX31855 || TEMP_SENSOR_REDUNDANT_IS_MAX31855
   #define HAS_MAX31855 1
 #endif
-#if TEMP_SENSOR_0_IS_MAX31865 || TEMP_SENSOR_1_IS_MAX31865
+#if TEMP_SENSOR_0_IS_MAX31865 || TEMP_SENSOR_1_IS_MAX31865 || TEMP_SENSOR_REDUNDANT_IS_MAX31865
   #define HAS_MAX31865 1
 #endif
-#if TEMP_SENSOR_0_IS_MAX6675 || TEMP_SENSOR_1_IS_MAX6675
+#if TEMP_SENSOR_0_IS_MAX6675 || TEMP_SENSOR_1_IS_MAX6675 || TEMP_SENSOR_REDUNDANT_IS_MAX6675
   #define HAS_MAX6675 1
 #endif
 
 //
 // Compatibility layer for MAX (SPI) temp boards
 //
+#define TEMP_SENSOR_IS_MAX(n, M) (ENABLED(TEMP_SENSOR_##n##_IS_##M) || (ENABLED(TEMP_SENSOR_REDUNDANT_IS_##M) && TEMP_SENSOR_REDUNDANT_SOURCE == (n)))
+
 #if PIN_EXISTS(MAX6675_SS)
-  #if TEMP_SENSOR_0_IS_MAX31855
+  #if TEMP_SENSOR_IS_MAX(0, MAX31855)
     #define MAX31855_CS_PIN MAX6675_SS_PIN
-  #elif TEMP_SENSOR_0_IS_MAX31865
+  #elif TEMP_SENSOR_IS_MAX(0, MAX31865)
     #define MAX31865_CS_PIN MAX6675_SS_PIN
-  #elif TEMP_SENSOR_0_IS_MAX6675
+  #elif TEMP_SENSOR_IS_MAX(0, MAX6675)
     #define MAX6675_CS_PIN MAX6675_SS_PIN
   #endif
 #endif
 
 #if PIN_EXISTS(MAX6675_SS2)
-  #if TEMP_SENSOR_1_IS_MAX31855
+  #if TEMP_SENSOR_IS_MAX(1, MAX31855)
     #define MAX31855_CS2_PIN MAX6675_SS2_PIN
-  #elif TEMP_SENSOR_1_IS_MAX31865
+  #elif TEMP_SENSOR_IS_MAX(1, MAX31865)
     #define MAX31865_CS2_PIN MAX6675_SS2_PIN
-  #elif TEMP_SENSOR_1_IS_MAX6675
+  #elif TEMP_SENSOR_IS_MAX(1, MAX6675)
     #define MAX6675_CS2_PIN MAX6675_SS2_PIN
   #endif
 #endif
 
 #if PIN_EXISTS(MAX6675_DO)
   #if HAS_MAX31855
     #define MAX31855_MISO_PIN MAX6675_DO_PIN
   #elif HAS_MAX31865
     #define MAX31865_MISO_PIN MAX6675_DO_PIN
   #elif HAS_MAX6675
@@ -691,210 +834,200 @@
 
 #if TEMP_SENSOR_2 == -4
   #define TEMP_SENSOR_2_IS_AD8495 1
 #elif TEMP_SENSOR_2 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
   #define TEMP_SENSOR_2_IS_AD595 1
 #elif TEMP_SENSOR_2 > 0
-  #define TEMP_SENSOR_2_THERMISTOR_ID TEMP_SENSOR_2
   #define TEMP_SENSOR_2_IS_THERMISTOR 1
   #if TEMP_SENSOR_2 == 1000
     #define TEMP_SENSOR_2_IS_CUSTOM 1
   #elif TEMP_SENSOR_2 == 998 || TEMP_SENSOR_2 == 999
     #define TEMP_SENSOR_2_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_2_MINTEMP
   #undef HEATER_2_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_3 == -4
   #define TEMP_SENSOR_3_IS_AD8495 1
 #elif TEMP_SENSOR_3 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -1
   #define TEMP_SENSOR_3_IS_AD595 1
 #elif TEMP_SENSOR_3 > 0
-  #define TEMP_SENSOR_3_THERMISTOR_ID TEMP_SENSOR_3
   #define TEMP_SENSOR_3_IS_THERMISTOR 1
   #if TEMP_SENSOR_3 == 1000
     #define TEMP_SENSOR_3_IS_CUSTOM 1
   #elif TEMP_SENSOR_3 == 998 || TEMP_SENSOR_3 == 999
     #define TEMP_SENSOR_3_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_3_MINTEMP
   #undef HEATER_3_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_4 == -4
   #define TEMP_SENSOR_4_IS_AD8495 1
 #elif TEMP_SENSOR_4 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -1
   #define TEMP_SENSOR_4_IS_AD595 1
 #elif TEMP_SENSOR_4 > 0
-  #define TEMP_SENSOR_4_THERMISTOR_ID TEMP_SENSOR_4
   #define TEMP_SENSOR_4_IS_THERMISTOR 1
   #if TEMP_SENSOR_4 == 1000
     #define TEMP_SENSOR_4_IS_CUSTOM 1
   #elif TEMP_SENSOR_4 == 998 || TEMP_SENSOR_4 == 999
     #define TEMP_SENSOR_4_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_5 == -4
   #define TEMP_SENSOR_5_IS_AD8495 1
 #elif TEMP_SENSOR_5 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -1
   #define TEMP_SENSOR_5_IS_AD595 1
 #elif TEMP_SENSOR_5 > 0
-  #define TEMP_SENSOR_5_THERMISTOR_ID TEMP_SENSOR_5
   #define TEMP_SENSOR_5_IS_THERMISTOR 1
   #if TEMP_SENSOR_5 == 1000
     #define TEMP_SENSOR_5_IS_CUSTOM 1
   #elif TEMP_SENSOR_5 == 998 || TEMP_SENSOR_5 == 999
     #define TEMP_SENSOR_5_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_5_MINTEMP
   #undef HEATER_5_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_6 == -4
   #define TEMP_SENSOR_6_IS_AD8495 1
 #elif TEMP_SENSOR_6 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_6."
 #elif TEMP_SENSOR_6 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_6."
 #elif TEMP_SENSOR_6 == -1
   #define TEMP_SENSOR_6_IS_AD595 1
 #elif TEMP_SENSOR_6 > 0
-  #define TEMP_SENSOR_6_THERMISTOR_ID TEMP_SENSOR_6
   #define TEMP_SENSOR_6_IS_THERMISTOR 1
   #if TEMP_SENSOR_6 == 1000
     #define TEMP_SENSOR_6_IS_CUSTOM 1
   #elif TEMP_SENSOR_6 == 998 || TEMP_SENSOR_6 == 999
     #define TEMP_SENSOR_6_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_6_MINTEMP
   #undef HEATER_6_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_7 == -4
   #define TEMP_SENSOR_7_IS_AD8495 1
 #elif TEMP_SENSOR_7 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_7."
 #elif TEMP_SENSOR_7 == -2
   #error "MAX7775 Thermocouples (-2) not supported for TEMP_SENSOR_7."
 #elif TEMP_SENSOR_7 == -1
   #define TEMP_SENSOR_7_IS_AD595 1
 #elif TEMP_SENSOR_7 > 0
-  #define TEMP_SENSOR_7_THERMISTOR_ID TEMP_SENSOR_7
   #define TEMP_SENSOR_7_IS_THERMISTOR 1
   #if TEMP_SENSOR_7 == 1000
     #define TEMP_SENSOR_7_IS_CUSTOM 1
   #elif TEMP_SENSOR_7 == 998 || TEMP_SENSOR_7 == 999
     #define TEMP_SENSOR_7_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_7_MINTEMP
   #undef HEATER_7_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_BED == -4
   #define TEMP_SENSOR_BED_IS_AD8495 1
 #elif TEMP_SENSOR_BED == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
   #define TEMP_SENSOR_BED_IS_AD595 1
 #elif TEMP_SENSOR_BED > 0
-  #define TEMP_SENSOR_BED_THERMISTOR_ID TEMP_SENSOR_BED
   #define TEMP_SENSOR_BED_IS_THERMISTOR 1
   #if TEMP_SENSOR_BED == 1000
     #define TEMP_SENSOR_BED_IS_CUSTOM 1
   #elif TEMP_SENSOR_BED == 998 || TEMP_SENSOR_BED == 999
     #define TEMP_SENSOR_BED_IS_DUMMY 1
   #endif
 #else
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_CHAMBER == -4
   #define TEMP_SENSOR_CHAMBER_IS_AD8495 1
 #elif TEMP_SENSOR_CHAMBER == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -1
   #define TEMP_SENSOR_CHAMBER_IS_AD595 1
 #elif TEMP_SENSOR_CHAMBER > 0
-  #define TEMP_SENSOR_CHAMBER_THERMISTOR_ID TEMP_SENSOR_CHAMBER
   #define TEMP_SENSOR_CHAMBER_IS_THERMISTOR 1
   #if TEMP_SENSOR_CHAMBER == 1000
     #define TEMP_SENSOR_CHAMBER_IS_CUSTOM 1
   #elif TEMP_SENSOR_CHAMBER == 998 || TEMP_SENSOR_CHAMBER == 999
     #define TEMP_SENSOR_CHAMBER_IS_DUMMY 1
   #endif
 #else
   #undef CHAMBER_MINTEMP
   #undef CHAMBER_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_COOLER == -4
-  #define COOLER_USES_AD8495 1
+  #define TEMP_SENSOR_COOLER_IS_AD8495 1
 #elif TEMP_SENSOR_COOLER == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_COOLER."
 #elif TEMP_SENSOR_COOLER == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_COOLER."
 #elif TEMP_SENSOR_COOLER == -1
-  #define COOLER_USES_AD595 1
+  #define TEMP_SENSOR_COOLER_IS_AD595 1
 #elif TEMP_SENSOR_COOLER > 0
-  #define TEMP_SENSOR_COOLER_THERMISTOR_ID TEMP_SENSOR_COOLER
   #define TEMP_SENSOR_COOLER_IS_THERMISTOR 1
   #if TEMP_SENSOR_COOLER == 1000
-    #define COOLER_USER_THERMISTOR 1
+    #define TEMP_SENSOR_COOLER_IS_CUSTOM 1
   #elif TEMP_SENSOR_COOLER == 998 || TEMP_SENSOR_COOLER == 999
-    #define COOLER_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_COOLER_IS_DUMMY 1
   #endif
 #else
   #undef COOLER_MINTEMP
   #undef COOLER_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_PROBE == -4
   #define TEMP_SENSOR_PROBE_IS_AD8495 1
 #elif TEMP_SENSOR_PROBE == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -1
   #define TEMP_SENSOR_PROBE_IS_AD595 1
 #elif TEMP_SENSOR_PROBE > 0
-  #define TEMP_SENSOR_PROBE_THERMISTOR_ID TEMP_SENSOR_PROBE
   #define TEMP_SENSOR_PROBE_IS_THERMISTOR 1
   #if TEMP_SENSOR_PROBE == 1000
     #define TEMP_SENSOR_PROBE_IS_CUSTOM 1
   #elif TEMP_SENSOR_PROBE == 998 || TEMP_SENSOR_PROBE == 999
     #define TEMP_SENSOR_PROBE_IS_DUMMY 1
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
@@ -2338,37 +2471,43 @@
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 #if HAS_ADC_TEST(COOLER)
   #define HAS_TEMP_ADC_COOLER 1
 #endif
+#if HAS_ADC_TEST(REDUNDANT)
+  #define HAS_TEMP_ADC_REDUNDANT 1
+#endif
 
 #define HAS_TEMP(N) ANY(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_MAX_TC, TEMP_SENSOR_##N##_IS_DUMMY)
 #if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
 #if HAS_TEMP(BED)
   #define HAS_TEMP_BED 1
 #endif
 #if HAS_TEMP(PROBE)
   #define HAS_TEMP_PROBE 1
 #endif
 #if HAS_TEMP(CHAMBER)
   #define HAS_TEMP_CHAMBER 1
 #endif
 #if HAS_TEMP(COOLER)
   #define HAS_TEMP_COOLER 1
 #endif
+#if HAS_TEMP(REDUNDANT)
+  #define HAS_TEMP_REDUNDANT 1
+#endif
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
   #endif
   #if PIN_EXISTS(JOY_Y)
     #define HAS_JOY_ADC_Y 1
   #endif
   #if PIN_EXISTS(JOY_Z)
     #define HAS_JOY_ADC_Z 1

commit 7726af9c5348c1c7d0fd9a56eca87d00cd75fee6
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Jun 5 09:18:47 2021 +0200

    üèóÔ∏è Support for up to 6 linear axes (#19112)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a0e5db301e..d28822cf38 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -71,49 +71,118 @@
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
 /**
  * Axis lengths and center
  */
+#ifndef AXIS4_NAME
+  #define AXIS4_NAME 'A'
+#endif
+#ifndef AXIS5_NAME
+  #define AXIS5_NAME 'B'
+#endif
+#ifndef AXIS6_NAME
+  #define AXIS6_NAME 'C'
+#endif
+
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
-#define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
-#define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
+#if HAS_Y_AXIS
+  #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
+#endif
+#if HAS_Z_AXIS
+  #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
+#endif
+#if LINEAR_AXES >= 4
+  #define I_MAX_LENGTH (I_MAX_POS - (I_MIN_POS))
+#endif
+#if LINEAR_AXES >= 5
+  #define J_MAX_LENGTH (J_MAX_POS - (J_MIN_POS))
+#endif
+#if LINEAR_AXES >= 6
+  #define K_MAX_LENGTH (K_MAX_POS - (K_MIN_POS))
+#endif
 
 // Defined only if the sanity-check is bypassed
 #ifndef X_BED_SIZE
   #define X_BED_SIZE X_MAX_LENGTH
 #endif
-#ifndef Y_BED_SIZE
+#if HAS_Y_AXIS && !defined(Y_BED_SIZE)
   #define Y_BED_SIZE Y_MAX_LENGTH
 #endif
+#if LINEAR_AXES >= 4 && !defined(I_BED_SIZE)
+  #define I_BED_SIZE I_MAX_LENGTH
+#endif
+#if LINEAR_AXES >= 5 && !defined(J_BED_SIZE)
+  #define J_BED_SIZE J_MAX_LENGTH
+#endif
+#if LINEAR_AXES >= 6 && !defined(K_BED_SIZE)
+  #define K_BED_SIZE K_MAX_LENGTH
+#endif
 
 // Require 0,0 bed center for Delta and SCARA
 #if IS_KINEMATIC
   #define BED_CENTER_AT_0_0
 #endif
 
 // Define center values for future use
 #define _X_HALF_BED ((X_BED_SIZE) / 2)
-#define _Y_HALF_BED ((Y_BED_SIZE) / 2)
+#if HAS_Y_AXIS
+  #define _Y_HALF_BED ((Y_BED_SIZE) / 2)
+#endif
+#if LINEAR_AXES >= 4
+  #define _I_HALF_IMAX ((I_BED_SIZE) / 2)
+#endif
+#if LINEAR_AXES >= 5
+  #define _J_HALF_JMAX ((J_BED_SIZE) / 2)
+#endif
+#if LINEAR_AXES >= 6
+  #define _K_HALF_KMAX ((K_BED_SIZE) / 2)
+#endif
+
 #define X_CENTER TERN(BED_CENTER_AT_0_0, 0, _X_HALF_BED)
-#define Y_CENTER TERN(BED_CENTER_AT_0_0, 0, _Y_HALF_BED)
-#define XY_CENTER { X_CENTER, Y_CENTER }
+#if HAS_Y_AXIS
+  #define Y_CENTER TERN(BED_CENTER_AT_0_0, 0, _Y_HALF_BED)
+  #define XY_CENTER { X_CENTER, Y_CENTER }
+#endif
+#if LINEAR_AXES >= 4
+  #define I_CENTER TERN(BED_CENTER_AT_0_0, 0, _I_HALF_BED)
+#endif
+#if LINEAR_AXES >= 5
+  #define J_CENTER TERN(BED_CENTER_AT_0_0, 0, _J_HALF_BED)
+#endif
+#if LINEAR_AXES >= 6
+  #define K_CENTER TERN(BED_CENTER_AT_0_0, 0, _K_HALF_BED)
+#endif
 
 // Get the linear boundaries of the bed
 #define X_MIN_BED (X_CENTER - _X_HALF_BED)
 #define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
-#define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
-#define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
+#if HAS_Y_AXIS
+  #define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
+  #define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
+#endif
+#if LINEAR_AXES >= 4
+  #define I_MINIM (I_CENTER - _I_HALF_BED_SIZE)
+  #define I_MAXIM (I_MINIM + I_BED_SIZE)
+#endif
+#if LINEAR_AXES >= 5
+  #define J_MINIM (J_CENTER - _J_HALF_BED_SIZE)
+  #define J_MAXIM (J_MINIM + J_BED_SIZE)
+#endif
+#if LINEAR_AXES >= 6
+  #define K_MINIM (K_CENTER - _K_HALF_BED_SIZE)
+  #define K_MAXIM (K_MINIM + K_BED_SIZE)
+#endif
 
 /**
  * Dual X Carriage
  */
 #if ENABLED(DUAL_X_CARRIAGE)
   #ifndef X1_MIN_POS
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
@@ -156,37 +225,61 @@
   #define X_HOME_POS MANUAL_X_HOME_POS
 #else
   #define X_END_POS TERN(X_HOME_TO_MIN, X_MIN_POS, X_MAX_POS)
   #if ENABLED(BED_CENTER_AT_0_0)
     #define X_HOME_POS TERN(DELTA, 0, X_END_POS)
   #else
     #define X_HOME_POS TERN(DELTA, X_MIN_POS + (X_BED_SIZE) * 0.5, X_END_POS)
   #endif
 #endif
 
-#ifdef MANUAL_Y_HOME_POS
-  #define Y_HOME_POS MANUAL_Y_HOME_POS
-#else
-  #define Y_END_POS TERN(Y_HOME_TO_MIN, Y_MIN_POS, Y_MAX_POS)
-  #if ENABLED(BED_CENTER_AT_0_0)
-    #define Y_HOME_POS TERN(DELTA, 0, Y_END_POS)
+#if HAS_Y_AXIS
+  #ifdef MANUAL_Y_HOME_POS
+    #define Y_HOME_POS MANUAL_Y_HOME_POS
   #else
-    #define Y_HOME_POS TERN(DELTA, Y_MIN_POS + (Y_BED_SIZE) * 0.5, Y_END_POS)
+    #define Y_END_POS TERN(Y_HOME_TO_MIN, Y_MIN_POS, Y_MAX_POS)
+    #if ENABLED(BED_CENTER_AT_0_0)
+      #define Y_HOME_POS TERN(DELTA, 0, Y_END_POS)
+    #else
+      #define Y_HOME_POS TERN(DELTA, Y_MIN_POS + (Y_BED_SIZE) * 0.5, Y_END_POS)
+    #endif
   #endif
 #endif
 
 #ifdef MANUAL_Z_HOME_POS
   #define Z_HOME_POS MANUAL_Z_HOME_POS
 #else
   #define Z_HOME_POS TERN(Z_HOME_TO_MIN, Z_MIN_POS, Z_MAX_POS)
 #endif
 
+#if LINEAR_AXES >= 4
+  #ifdef MANUAL_I_HOME_POS
+    #define I_HOME_POS MANUAL_I_HOME_POS
+  #else
+    #define I_HOME_POS TERN(I_HOME_TO_MIN, I_MIN_POS, I_MAX_POS)
+  #endif
+#endif
+#if LINEAR_AXES >= 5
+  #ifdef MANUAL_J_HOME_POS
+    #define J_HOME_POS MANUAL_J_HOME_POS
+  #else
+    #define J_HOME_POS TERN(J_HOME_TO_MIN, J_MIN_POS, J_MAX_POS)
+  #endif
+#endif
+#if LINEAR_AXES >= 6
+  #ifdef MANUAL_K_HOME_POS
+    #define K_HOME_POS MANUAL_K_HOME_POS
+  #else
+    #define K_HOME_POS TERN(K_HOME_TO_MIN, K_MIN_POS, K_MAX_POS)
+  #endif
+#endif
+
 /**
  * If DELTA_HEIGHT isn't defined use the old setting
  */
 #if ENABLED(DELTA) && !defined(DELTA_HEIGHT)
   #define DELTA_HEIGHT Z_HOME_POS
 #endif
 
 /**
  * Z Sled Probe requires Z_SAFE_HOMING
  */
@@ -367,29 +460,38 @@
 #if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
   #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
-#ifndef DISABLE_INACTIVE_Y
+#if HAS_Y_AXIS && !defined(DISABLE_INACTIVE_Y)
   #define DISABLE_INACTIVE_Y DISABLE_Y
 #endif
-#ifndef DISABLE_INACTIVE_Z
+#if HAS_Z_AXIS && !defined(DISABLE_INACTIVE_Z)
   #define DISABLE_INACTIVE_Z DISABLE_Z
 #endif
 #ifndef DISABLE_INACTIVE_E
   #define DISABLE_INACTIVE_E DISABLE_E
 #endif
+#if LINEAR_AXES >= 4 && !defined(DISABLE_INACTIVE_I)
+  #define DISABLE_INACTIVE_I DISABLE_I
+#endif
+#if LINEAR_AXES >= 5 && !defined(DISABLE_INACTIVE_J)
+  #define DISABLE_INACTIVE_J DISABLE_J
+#endif
+#if LINEAR_AXES >= 6 && !defined(DISABLE_INACTIVE_K)
+  #define DISABLE_INACTIVE_K DISABLE_K
+#endif
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_STATE
     #define PSU_NAME "XBox"     // X-Box 360 (203W)
   #else
@@ -1411,29 +1513,47 @@
 #if ENABLED(ENDSTOPPULLUPS)
   #if ENABLED(USE_XMAX_PLUG)
     #define ENDSTOPPULLUP_XMAX
   #endif
   #if ENABLED(USE_YMAX_PLUG)
     #define ENDSTOPPULLUP_YMAX
   #endif
   #if ENABLED(USE_ZMAX_PLUG)
     #define ENDSTOPPULLUP_ZMAX
   #endif
+  #if ENABLED(USE_IMAX_PLUG)
+    #define ENDSTOPPULLUP_IMAX
+  #endif
+  #if ENABLED(USE_JMAX_PLUG)
+    #define ENDSTOPPULLUP_JMAX
+  #endif
+  #if ENABLED(USE_KMAX_PLUG)
+    #define ENDSTOPPULLUP_KMAX
+  #endif
   #if ENABLED(USE_XMIN_PLUG)
     #define ENDSTOPPULLUP_XMIN
   #endif
   #if ENABLED(USE_YMIN_PLUG)
     #define ENDSTOPPULLUP_YMIN
   #endif
   #if ENABLED(USE_ZMIN_PLUG)
     #define ENDSTOPPULLUP_ZMIN
   #endif
+  #if ENABLED(USE_IMIN_PLUG)
+    #define ENDSTOPPULLUP_IMIN
+  #endif
+  #if ENABLED(USE_JMIN_PLUG)
+    #define ENDSTOPPULLUP_JMIN
+  #endif
+  #if ENABLED(USE_KMIN_PLUG)
+    #define ENDSTOPPULLUP_KMIN
+  #endif
 #endif
 
 /**
  * Set ENDSTOPPULLDOWNS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLDOWNS)
   #if ENABLED(USE_XMAX_PLUG)
     #define ENDSTOPPULLDOWN_XMAX
   #endif
   #if ENABLED(USE_YMAX_PLUG)
@@ -1477,96 +1597,151 @@
 #if PIN_EXISTS(X2_DIR)
   #define HAS_X2_DIR 1
 #endif
 #if PIN_EXISTS(X2_STEP)
   #define HAS_X2_STEP 1
 #endif
 #if PIN_EXISTS(X2_MS1)
   #define HAS_X2_MS_PINS 1
 #endif
 
-#if PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
-  #define HAS_Y_ENABLE 1
-#endif
-#if PIN_EXISTS(Y_DIR)
-  #define HAS_Y_DIR 1
-#endif
-#if PIN_EXISTS(Y_STEP)
-  #define HAS_Y_STEP 1
-#endif
-#if PIN_EXISTS(Y_MS1)
-  #define HAS_Y_MS_PINS 1
-#endif
+#if HAS_Y_AXIS
+  #if PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
+    #define HAS_Y_ENABLE 1
+  #endif
+  #if PIN_EXISTS(Y_DIR)
+    #define HAS_Y_DIR 1
+  #endif
+  #if PIN_EXISTS(Y_STEP)
+    #define HAS_Y_STEP 1
+  #endif
+  #if PIN_EXISTS(Y_MS1)
+    #define HAS_Y_MS_PINS 1
+  #endif
 
-#if PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
-  #define HAS_Y2_ENABLE 1
-#endif
-#if PIN_EXISTS(Y2_DIR)
-  #define HAS_Y2_DIR 1
-#endif
-#if PIN_EXISTS(Y2_STEP)
-  #define HAS_Y2_STEP 1
-#endif
-#if PIN_EXISTS(Y2_MS1)
-  #define HAS_Y2_MS_PINS 1
+  #if PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
+    #define HAS_Y2_ENABLE 1
+  #endif
+  #if PIN_EXISTS(Y2_DIR)
+    #define HAS_Y2_DIR 1
+  #endif
+  #if PIN_EXISTS(Y2_STEP)
+    #define HAS_Y2_STEP 1
+  #endif
+  #if PIN_EXISTS(Y2_MS1)
+    #define HAS_Y2_MS_PINS 1
+  #endif
 #endif
 
-#if PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
-  #define HAS_Z_ENABLE 1
-#endif
-#if PIN_EXISTS(Z_DIR)
-  #define HAS_Z_DIR 1
-#endif
-#if PIN_EXISTS(Z_STEP)
-  #define HAS_Z_STEP 1
-#endif
-#if PIN_EXISTS(Z_MS1)
-  #define HAS_Z_MS_PINS 1
+#if HAS_Z_AXIS
+  #if PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
+    #define HAS_Z_ENABLE 1
+  #endif
+  #if PIN_EXISTS(Z_DIR)
+    #define HAS_Z_DIR 1
+  #endif
+  #if PIN_EXISTS(Z_STEP)
+    #define HAS_Z_STEP 1
+  #endif
+  #if PIN_EXISTS(Z_MS1)
+    #define HAS_Z_MS_PINS 1
+  #endif
 #endif
 
-#if PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
-  #define HAS_Z2_ENABLE 1
-#endif
-#if PIN_EXISTS(Z2_DIR)
-  #define HAS_Z2_DIR 1
-#endif
-#if PIN_EXISTS(Z2_STEP)
-  #define HAS_Z2_STEP 1
-#endif
-#if PIN_EXISTS(Z2_MS1)
-  #define HAS_Z2_MS_PINS 1
+#if NUM_Z_STEPPER_DRIVERS >= 2
+  #if PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
+    #define HAS_Z2_ENABLE 1
+  #endif
+  #if PIN_EXISTS(Z2_DIR)
+    #define HAS_Z2_DIR 1
+  #endif
+  #if PIN_EXISTS(Z2_STEP)
+    #define HAS_Z2_STEP 1
+  #endif
+  #if PIN_EXISTS(Z2_MS1)
+    #define HAS_Z2_MS_PINS 1
+  #endif
 #endif
 
-#if PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
-  #define HAS_Z3_ENABLE 1
-#endif
-#if PIN_EXISTS(Z3_DIR)
-  #define HAS_Z3_DIR 1
-#endif
-#if PIN_EXISTS(Z3_STEP)
-  #define HAS_Z3_STEP 1
-#endif
-#if PIN_EXISTS(Z3_MS1)
-  #define HAS_Z3_MS_PINS 1
+#if NUM_Z_STEPPER_DRIVERS >= 3
+  #if PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
+    #define HAS_Z3_ENABLE 1
+  #endif
+  #if PIN_EXISTS(Z3_DIR)
+    #define HAS_Z3_DIR 1
+  #endif
+  #if PIN_EXISTS(Z3_STEP)
+    #define HAS_Z3_STEP 1
+  #endif
+  #if PIN_EXISTS(Z3_MS1)
+    #define HAS_Z3_MS_PINS 1
+  #endif
 #endif
 
-#if PIN_EXISTS(Z4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
-  #define HAS_Z4_ENABLE 1
+#if NUM_Z_STEPPER_DRIVERS >= 4
+  #if PIN_EXISTS(Z4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
+    #define HAS_Z4_ENABLE 1
+  #endif
+  #if PIN_EXISTS(Z4_DIR)
+    #define HAS_Z4_DIR 1
+  #endif
+  #if PIN_EXISTS(Z4_STEP)
+    #define HAS_Z4_STEP 1
+  #endif
+  #if PIN_EXISTS(Z4_MS1)
+    #define HAS_Z4_MS_PINS 1
+  #endif
 #endif
-#if PIN_EXISTS(Z4_DIR)
-  #define HAS_Z4_DIR 1
+
+#if LINEAR_AXES >= 4
+  #if PIN_EXISTS(I_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(I))
+    #define HAS_I_ENABLE 1
+  #endif
+  #if PIN_EXISTS(I_DIR)
+    #define HAS_I_DIR 1
+  #endif
+  #if PIN_EXISTS(I_STEP)
+    #define HAS_I_STEP 1
+  #endif
+  #if PIN_EXISTS(I_MS1)
+    #define HAS_I_MS_PINS 1
+  #endif
 #endif
-#if PIN_EXISTS(Z4_STEP)
-  #define HAS_Z4_STEP 1
+
+#if LINEAR_AXES >= 5
+  #if PIN_EXISTS(J_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(J))
+    #define HAS_J_ENABLE 1
+  #endif
+  #if PIN_EXISTS(J_DIR)
+    #define HAS_J_DIR 1
+  #endif
+  #if PIN_EXISTS(J_STEP)
+    #define HAS_J_STEP 1
+  #endif
+  #if PIN_EXISTS(J_MS1)
+    #define HAS_J_MS_PINS 1
+  #endif
 #endif
-#if PIN_EXISTS(Z4_MS1)
-  #define HAS_Z4_MS_PINS 1
+
+#if LINEAR_AXES >= 6
+  #if PIN_EXISTS(K_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(K))
+    #define HAS_K_ENABLE 1
+  #endif
+  #if PIN_EXISTS(K_DIR)
+    #define HAS_K_DIR 1
+  #endif
+  #if PIN_EXISTS(K_STEP)
+    #define HAS_K_STEP 1
+  #endif
+  #if PIN_EXISTS(K_MS1)
+    #define HAS_K_MS_PINS 1
+  #endif
 #endif
 
 // Extruder steppers and solenoids
 #if HAS_EXTRUDERS
 
   #if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
     #define HAS_E0_ENABLE 1
   #endif
   #if PIN_EXISTS(E0_DIR)
     #define HAS_E0_DIR 1
@@ -1693,21 +1868,21 @@
     #define HAS_SOLENOID_7 1
   #endif
 
 #endif // HAS_EXTRUDERS
 
 //
 // Trinamic Stepper Drivers
 //
 
 #if HAS_TRINAMIC_CONFIG
-  #if ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
+  #if ANY(STEALTHCHOP_E, STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_I, STEALTHCHOP_J, STEALTHCHOP_K)
     #define STEALTHCHOP_ENABLED 1
   #endif
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1
   #endif
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
     #undef Z2_STALL_SENSITIVITY
     #undef Z3_STALL_SENSITIVITY
@@ -1730,20 +1905,79 @@
   #endif
   #if defined(Z2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z2)
     #define Z2_SENSORLESS 1
   #endif
   #if defined(Z3_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z3)
     #define Z3_SENSORLESS 1
   #endif
   #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
     #define Z4_SENSORLESS 1
   #endif
+
+  #if AXIS_HAS_STEALTHCHOP(X)
+    #define X_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(X2)
+    #define X2_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(Y)
+    #define Y_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(Y2)
+    #define Y2_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(Z)
+    #define Z_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(Z2)
+    #define Z2_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(Z3)
+    #define Z3_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(Z4)
+    #define Z4_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(I)
+    #define I_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(J)
+    #define J_HAS_STEALTHCHOP 1
+  #endif
+  #if AXIS_HAS_STEALTHCHOP(K)
+    #define K_HAS_STEALTHCHOP 1
+  #endif
+  #if E_STEPPERS > 0 && AXIS_HAS_STEALTHCHOP(E0)
+    #define E0_HAS_STEALTHCHOP 1
+  #endif
+  #if E_STEPPERS > 1 && AXIS_HAS_STEALTHCHOP(E1)
+    #define E1_HAS_STEALTHCHOP 1
+  #endif
+  #if E_STEPPERS > 2 && AXIS_HAS_STEALTHCHOP(E2)
+    #define E2_HAS_STEALTHCHOP 1
+  #endif
+  #if E_STEPPERS > 3 && AXIS_HAS_STEALTHCHOP(E3)
+    #define E3_HAS_STEALTHCHOP 1
+  #endif
+  #if E_STEPPERS > 4 && AXIS_HAS_STEALTHCHOP(E4)
+    #define E4_HAS_STEALTHCHOP 1
+  #endif
+  #if E_STEPPERS > 5 && AXIS_HAS_STEALTHCHOP(E5)
+    #define E5_HAS_STEALTHCHOP 1
+  #endif
+  #if E_STEPPERS > 6 && AXIS_HAS_STEALTHCHOP(E6)
+    #define E6_HAS_STEALTHCHOP 1
+  #endif
+  #if E_STEPPERS > 7 && AXIS_HAS_STEALTHCHOP(E7)
+    #define E7_HAS_STEALTHCHOP 1
+  #endif
+
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
     #define Y_SPI_SENSORLESS Y_SENSORLESS
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
   #ifndef X_INTERPOLATE
     #define X_INTERPOLATE INTERPOLATE
   #endif
   #ifndef X2_INTERPOLATE
     #define X2_INTERPOLATE INTERPOLATE
@@ -1759,20 +1993,35 @@
   #endif
   #ifndef Z2_INTERPOLATE
     #define Z2_INTERPOLATE INTERPOLATE
   #endif
   #ifndef Z3_INTERPOLATE
     #define Z3_INTERPOLATE INTERPOLATE
   #endif
   #ifndef Z4_INTERPOLATE
     #define Z4_INTERPOLATE INTERPOLATE
   #endif
+  #if LINEAR_AXES >= 4
+    #ifndef I_INTERPOLATE
+      #define I_INTERPOLATE INTERPOLATE
+    #endif
+  #endif
+  #if LINEAR_AXES >= 5
+    #ifndef J_INTERPOLATE
+      #define J_INTERPOLATE INTERPOLATE
+    #endif
+  #endif
+  #if LINEAR_AXES >= 6
+    #ifndef K_INTERPOLATE
+      #define K_INTERPOLATE INTERPOLATE
+    #endif
+  #endif
   #ifndef E0_INTERPOLATE
     #define E0_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E1_INTERPOLATE
     #define E1_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E2_INTERPOLATE
     #define E2_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E3_INTERPOLATE
@@ -1792,20 +2041,29 @@
   #endif
   #ifndef X_SLAVE_ADDRESS
     #define X_SLAVE_ADDRESS  0
   #endif
   #ifndef Y_SLAVE_ADDRESS
     #define Y_SLAVE_ADDRESS  0
   #endif
   #ifndef Z_SLAVE_ADDRESS
     #define Z_SLAVE_ADDRESS  0
   #endif
+  #ifndef I_SLAVE_ADDRESS
+    #define I_SLAVE_ADDRESS 0
+  #endif
+  #ifndef J_SLAVE_ADDRESS
+    #define J_SLAVE_ADDRESS 0
+  #endif
+  #ifndef K_SLAVE_ADDRESS
+    #define K_SLAVE_ADDRESS 0
+  #endif
   #ifndef X2_SLAVE_ADDRESS
     #define X2_SLAVE_ADDRESS 0
   #endif
   #ifndef Y2_SLAVE_ADDRESS
     #define Y2_SLAVE_ADDRESS 0
   #endif
   #ifndef Z2_SLAVE_ADDRESS
     #define Z2_SLAVE_ADDRESS 0
   #endif
   #ifndef Z3_SLAVE_ADDRESS
@@ -1846,20 +2104,24 @@
   #define HAS_E_STEPPER_ENABLE 1
 #endif
 
 #if ANY_AXIS_HAS(HW_SERIAL)
   #define HAS_TMC_HW_SERIAL 1
 #endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
+#if !USE_SENSORLESS
+  #undef SENSORLESS_BACKOFF_MM
+#endif
+
 //
 // Set USING_HW_SERIALn flags for used Serial Ports
 //
 
 // Flag the indexed hardware serial ports in use
 #define CONF_SERIAL_IS(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
                           || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \
                           || (defined(SERIAL_PORT_3)    && SERIAL_PORT_3 == N) \
                           || (defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT == N) \
                           || (defined(LCD_SERIAL_PORT)  && LCD_SERIAL_PORT == N) )
@@ -1965,32 +2227,50 @@
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
 #define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
 
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
 #if _HAS_STOP(X,MIN)
   #define HAS_X_MIN 1
 #endif
 #if _HAS_STOP(X,MAX)
   #define HAS_X_MAX 1
 #endif
-#if _HAS_STOP(Y,MIN)
+#if HAS_Y_AXIS && _HAS_STOP(Y,MIN)
   #define HAS_Y_MIN 1
 #endif
-#if _HAS_STOP(Y,MAX)
+#if HAS_Y_AXIS && _HAS_STOP(Y,MAX)
   #define HAS_Y_MAX 1
 #endif
-#if _HAS_STOP(Z,MIN)
+#if BOTH(HAS_Z_AXIS, USE_ZMIN_PLUG) && _HAS_STOP(Z,MIN)
   #define HAS_Z_MIN 1
 #endif
-#if _HAS_STOP(Z,MAX)
+#if BOTH(HAS_Z_AXIS, USE_ZMAX_PLUG) && _HAS_STOP(Z,MAX)
   #define HAS_Z_MAX 1
 #endif
+#if _HAS_STOP(I,MIN)
+  #define HAS_I_MIN 1
+#endif
+#if _HAS_STOP(I,MAX)
+  #define HAS_I_MAX 1
+#endif
+#if _HAS_STOP(J,MIN)
+  #define HAS_J_MIN 1
+#endif
+#if _HAS_STOP(J,MAX)
+  #define HAS_J_MAX 1
+#endif
+#if _HAS_STOP(K,MIN)
+  #define HAS_K_MIN 1
+#endif
+#if _HAS_STOP(K,MAX)
+  #define HAS_K_MAX 1
+#endif
 #if PIN_EXISTS(X2_MIN)
   #define HAS_X2_MIN 1
 #endif
 #if PIN_EXISTS(X2_MAX)
   #define HAS_X2_MAX 1
 #endif
 #if PIN_EXISTS(Y2_MIN)
   #define HAS_Y2_MIN 1
 #endif
 #if PIN_EXISTS(Y2_MAX)
@@ -2358,21 +2638,21 @@
 #if HAS_MOTOR_CURRENT_PWM_E || ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
-#if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_SOME_E_MS_PINS)
+#if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_I_MS_PINS, HAS_J_MS_PINS, HAS_K_MS_PINS, HAS_SOME_E_MS_PINS)
   #define HAS_MICROSTEPS 1
 #endif
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)

commit dd4990252e891cdfe56cb7d6e3bbe1e6289be649
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon May 24 16:38:57 2021 -0500

    ‚ôªÔ∏è Refactor Linear / Logical / Distinct Axes (#21953)
    
    * More patches supporting EXTRUDERS 0
    * Extend types in prep for more axes

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d86b02bdc2..a0e5db301e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1556,147 +1556,151 @@
   #define HAS_Z4_DIR 1
 #endif
 #if PIN_EXISTS(Z4_STEP)
   #define HAS_Z4_STEP 1
 #endif
 #if PIN_EXISTS(Z4_MS1)
   #define HAS_Z4_MS_PINS 1
 #endif
 
 // Extruder steppers and solenoids
-#if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
-  #define HAS_E0_ENABLE 1
-#endif
-#if PIN_EXISTS(E0_DIR)
-  #define HAS_E0_DIR 1
-#endif
-#if PIN_EXISTS(E0_STEP)
-  #define HAS_E0_STEP 1
-#endif
-#if PIN_EXISTS(E0_MS1)
-  #define HAS_E0_MS_PINS 1
-#endif
-#if PIN_EXISTS(SOL0)
-  #define HAS_SOLENOID_0 1
-#endif
+#if HAS_EXTRUDERS
 
-#if PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
-  #define HAS_E1_ENABLE 1
-#endif
-#if PIN_EXISTS(E1_DIR)
-  #define HAS_E1_DIR 1
-#endif
-#if PIN_EXISTS(E1_STEP)
-  #define HAS_E1_STEP 1
-#endif
-#if PIN_EXISTS(E1_MS1)
-  #define HAS_E1_MS_PINS 1
-#endif
-#if PIN_EXISTS(SOL1)
-  #define HAS_SOLENOID_1 1
-#endif
+  #if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
+    #define HAS_E0_ENABLE 1
+  #endif
+  #if PIN_EXISTS(E0_DIR)
+    #define HAS_E0_DIR 1
+  #endif
+  #if PIN_EXISTS(E0_STEP)
+    #define HAS_E0_STEP 1
+  #endif
+  #if PIN_EXISTS(E0_MS1)
+    #define HAS_E0_MS_PINS 1
+  #endif
+  #if PIN_EXISTS(SOL0)
+    #define HAS_SOLENOID_0 1
+  #endif
 
-#if PIN_EXISTS(E2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
-  #define HAS_E2_ENABLE 1
-#endif
-#if PIN_EXISTS(E2_DIR)
-  #define HAS_E2_DIR 1
-#endif
-#if PIN_EXISTS(E2_STEP)
-  #define HAS_E2_STEP 1
-#endif
-#if PIN_EXISTS(E2_MS1)
-  #define HAS_E2_MS_PINS 1
-#endif
-#if PIN_EXISTS(SOL2)
-  #define HAS_SOLENOID_2 1
-#endif
+  #if PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
+    #define HAS_E1_ENABLE 1
+  #endif
+  #if PIN_EXISTS(E1_DIR)
+    #define HAS_E1_DIR 1
+  #endif
+  #if PIN_EXISTS(E1_STEP)
+    #define HAS_E1_STEP 1
+  #endif
+  #if PIN_EXISTS(E1_MS1)
+    #define HAS_E1_MS_PINS 1
+  #endif
+  #if PIN_EXISTS(SOL1)
+    #define HAS_SOLENOID_1 1
+  #endif
 
-#if PIN_EXISTS(E3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
-  #define HAS_E3_ENABLE 1
-#endif
-#if PIN_EXISTS(E3_DIR)
-  #define HAS_E3_DIR 1
-#endif
-#if PIN_EXISTS(E3_STEP)
-  #define HAS_E3_STEP 1
-#endif
-#if PIN_EXISTS(E3_MS1)
-  #define HAS_E3_MS_PINS 1
-#endif
-#if PIN_EXISTS(SOL3)
-  #define HAS_SOLENOID_3 1
-#endif
+  #if PIN_EXISTS(E2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
+    #define HAS_E2_ENABLE 1
+  #endif
+  #if PIN_EXISTS(E2_DIR)
+    #define HAS_E2_DIR 1
+  #endif
+  #if PIN_EXISTS(E2_STEP)
+    #define HAS_E2_STEP 1
+  #endif
+  #if PIN_EXISTS(E2_MS1)
+    #define HAS_E2_MS_PINS 1
+  #endif
+  #if PIN_EXISTS(SOL2)
+    #define HAS_SOLENOID_2 1
+  #endif
 
-#if PIN_EXISTS(E4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
-  #define HAS_E4_ENABLE 1
-#endif
-#if PIN_EXISTS(E4_DIR)
-  #define HAS_E4_DIR 1
-#endif
-#if PIN_EXISTS(E4_STEP)
-  #define HAS_E4_STEP 1
-#endif
-#if PIN_EXISTS(E4_MS1)
-  #define HAS_E4_MS_PINS 1
-#endif
-#if PIN_EXISTS(SOL4)
-  #define HAS_SOLENOID_4 1
-#endif
+  #if PIN_EXISTS(E3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
+    #define HAS_E3_ENABLE 1
+  #endif
+  #if PIN_EXISTS(E3_DIR)
+    #define HAS_E3_DIR 1
+  #endif
+  #if PIN_EXISTS(E3_STEP)
+    #define HAS_E3_STEP 1
+  #endif
+  #if PIN_EXISTS(E3_MS1)
+    #define HAS_E3_MS_PINS 1
+  #endif
+  #if PIN_EXISTS(SOL3)
+    #define HAS_SOLENOID_3 1
+  #endif
 
-#if PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
-  #define HAS_E5_ENABLE 1
-#endif
-#if PIN_EXISTS(E5_DIR)
-  #define HAS_E5_DIR 1
-#endif
-#if PIN_EXISTS(E5_STEP)
-  #define HAS_E5_STEP 1
-#endif
-#if PIN_EXISTS(E5_MS1)
-  #define HAS_E5_MS_PINS 1
-#endif
-#if PIN_EXISTS(SOL5)
-  #define HAS_SOLENOID_5 1
-#endif
+  #if PIN_EXISTS(E4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
+    #define HAS_E4_ENABLE 1
+  #endif
+  #if PIN_EXISTS(E4_DIR)
+    #define HAS_E4_DIR 1
+  #endif
+  #if PIN_EXISTS(E4_STEP)
+    #define HAS_E4_STEP 1
+  #endif
+  #if PIN_EXISTS(E4_MS1)
+    #define HAS_E4_MS_PINS 1
+  #endif
+  #if PIN_EXISTS(SOL4)
+    #define HAS_SOLENOID_4 1
+  #endif
 
-#if PIN_EXISTS(E6_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
-  #define HAS_E6_ENABLE 1
-#endif
-#if PIN_EXISTS(E6_DIR)
-  #define HAS_E6_DIR 1
-#endif
-#if PIN_EXISTS(E6_STEP)
-  #define HAS_E6_STEP 1
-#endif
-#if PIN_EXISTS(E6_MS1)
-  #define HAS_E6_MS_PINS 1
-#endif
-#if PIN_EXISTS(SOL6)
-  #define HAS_SOLENOID_6 1
-#endif
+  #if PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
+    #define HAS_E5_ENABLE 1
+  #endif
+  #if PIN_EXISTS(E5_DIR)
+    #define HAS_E5_DIR 1
+  #endif
+  #if PIN_EXISTS(E5_STEP)
+    #define HAS_E5_STEP 1
+  #endif
+  #if PIN_EXISTS(E5_MS1)
+    #define HAS_E5_MS_PINS 1
+  #endif
+  #if PIN_EXISTS(SOL5)
+    #define HAS_SOLENOID_5 1
+  #endif
 
-#if PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
-  #define HAS_E7_ENABLE 1
-#endif
-#if PIN_EXISTS(E7_DIR)
-  #define HAS_E7_DIR 1
-#endif
-#if PIN_EXISTS(E7_STEP)
-  #define HAS_E7_STEP 1
-#endif
-#if PIN_EXISTS(E7_MS1)
-  #define HAS_E7_MS_PINS 1
-#endif
-#if PIN_EXISTS(SOL7)
-  #define HAS_SOLENOID_7 1
-#endif
+  #if PIN_EXISTS(E6_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
+    #define HAS_E6_ENABLE 1
+  #endif
+  #if PIN_EXISTS(E6_DIR)
+    #define HAS_E6_DIR 1
+  #endif
+  #if PIN_EXISTS(E6_STEP)
+    #define HAS_E6_STEP 1
+  #endif
+  #if PIN_EXISTS(E6_MS1)
+    #define HAS_E6_MS_PINS 1
+  #endif
+  #if PIN_EXISTS(SOL6)
+    #define HAS_SOLENOID_6 1
+  #endif
+
+  #if PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
+    #define HAS_E7_ENABLE 1
+  #endif
+  #if PIN_EXISTS(E7_DIR)
+    #define HAS_E7_DIR 1
+  #endif
+  #if PIN_EXISTS(E7_STEP)
+    #define HAS_E7_STEP 1
+  #endif
+  #if PIN_EXISTS(E7_MS1)
+    #define HAS_E7_MS_PINS 1
+  #endif
+  #if PIN_EXISTS(SOL7)
+    #define HAS_SOLENOID_7 1
+  #endif
+
+#endif // HAS_EXTRUDERS
 
 //
 // Trinamic Stepper Drivers
 //
 
 #if HAS_TRINAMIC_CONFIG
   #if ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
     #define STEALTHCHOP_ENABLED 1
   #endif
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
@@ -2341,21 +2345,24 @@
   #define HAS_PHOTOGRAPH 1
 #endif
 
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_MOTOR_CURRENT_SPI 1
 #endif
-#if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
+#if HAS_EXTRUDERS && PIN_EXISTS(MOTOR_CURRENT_PWM_E)
+  #define HAS_MOTOR_CURRENT_PWM_E 1
+#endif
+#if HAS_MOTOR_CURRENT_PWM_E || ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
 #if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_SOME_E_MS_PINS)

commit 49771c4a9ed2afa1e572f82a24b5edb3de120f78
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 19 00:21:34 2021 -0500

    üé® Flags for homing directions

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 46c1e59020..d86b02bdc2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -148,43 +148,43 @@
   #endif
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
 #endif
 
 /**
  * Set the home position based on settings or manual overrides
  */
 #ifdef MANUAL_X_HOME_POS
   #define X_HOME_POS MANUAL_X_HOME_POS
 #else
-  #define X_END_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
+  #define X_END_POS TERN(X_HOME_TO_MIN, X_MIN_POS, X_MAX_POS)
   #if ENABLED(BED_CENTER_AT_0_0)
     #define X_HOME_POS TERN(DELTA, 0, X_END_POS)
   #else
     #define X_HOME_POS TERN(DELTA, X_MIN_POS + (X_BED_SIZE) * 0.5, X_END_POS)
   #endif
 #endif
 
 #ifdef MANUAL_Y_HOME_POS
   #define Y_HOME_POS MANUAL_Y_HOME_POS
 #else
-  #define Y_END_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
+  #define Y_END_POS TERN(Y_HOME_TO_MIN, Y_MIN_POS, Y_MAX_POS)
   #if ENABLED(BED_CENTER_AT_0_0)
     #define Y_HOME_POS TERN(DELTA, 0, Y_END_POS)
   #else
     #define Y_HOME_POS TERN(DELTA, Y_MIN_POS + (Y_BED_SIZE) * 0.5, Y_END_POS)
   #endif
 #endif
 
 #ifdef MANUAL_Z_HOME_POS
   #define Z_HOME_POS MANUAL_Z_HOME_POS
 #else
-  #define Z_HOME_POS (Z_HOME_DIR < 0 ? Z_MIN_POS : Z_MAX_POS)
+  #define Z_HOME_POS TERN(Z_HOME_TO_MIN, Z_MIN_POS, Z_MAX_POS)
 #endif
 
 /**
  * If DELTA_HEIGHT isn't defined use the old setting
  */
 #if ENABLED(DELTA) && !defined(DELTA_HEIGHT)
   #define DELTA_HEIGHT Z_HOME_POS
 #endif
 
 /**
@@ -791,21 +791,21 @@
     #define TEMP_SENSOR_PROBE_IS_CUSTOM 1
   #elif TEMP_SENSOR_PROBE == 998 || TEMP_SENSOR_PROBE == 999
     #define TEMP_SENSOR_PROBE_IS_DUMMY 1
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
-  #if X_HOME_DIR > 0
+  #if X_HOME_TO_MAX
     #ifndef X2_MAX_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _ZMIN_
@@ -914,21 +914,21 @@
     #ifndef X2_MAX_ENDSTOP_INVERTING
       #define X2_MAX_ENDSTOP_INVERTING false
     #endif
   #endif
 #endif
 
 /**
  * Y_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Y_DUAL_ENDSTOPS)
-  #if Y_HOME_DIR > 0
+  #if Y_HOME_TO_MAX
     #ifndef Y2_MAX_ENDSTOP_INVERTING
       #if Y2_USE_ENDSTOP == _XMIN_
         #define Y2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _XMAX_
         #define Y2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Y2_USE_ENDSTOP == _ZMIN_
@@ -1038,21 +1038,21 @@
       #define Y2_MAX_ENDSTOP_INVERTING false
     #endif
   #endif
 #endif
 
 /**
  * Z_MULTI_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Z_MULTI_ENDSTOPS)
 
-  #if Z_HOME_DIR > 0
+  #if Z_HOME_TO_MAX
     #ifndef Z2_MAX_ENDSTOP_INVERTING
       #if Z2_USE_ENDSTOP == _XMIN_
         #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _XMAX_
         #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
       #elif Z2_USE_ENDSTOP == _ZMIN_
@@ -1157,21 +1157,21 @@
       #elif Z2_USE_ENDSTOP == _E7DIAG_
         #define Z2_MIN_PIN E7_DIAG_PIN
       #endif
     #endif
     #ifndef Z2_MAX_ENDSTOP_INVERTING
       #define Z2_MAX_ENDSTOP_INVERTING false
     #endif
   #endif
 
   #if NUM_Z_STEPPER_DRIVERS >= 3
-    #if Z_HOME_DIR > 0
+    #if Z_HOME_TO_MAX
       #ifndef Z3_MAX_ENDSTOP_INVERTING
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z3_USE_ENDSTOP == _ZMIN_
@@ -1277,21 +1277,21 @@
           #define Z3_MIN_PIN E7_DIAG_PIN
         #endif
       #endif
       #ifndef Z3_MAX_ENDSTOP_INVERTING
         #define Z3_MAX_ENDSTOP_INVERTING false
       #endif
     #endif
   #endif
 
   #if NUM_Z_STEPPER_DRIVERS >= 4
-    #if Z_HOME_DIR > 0
+    #if Z_HOME_TO_MAX
       #ifndef Z4_MAX_ENDSTOP_INVERTING
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
         #elif Z4_USE_ENDSTOP == _ZMIN_

commit abbe3f0dc7aa23bae4aa26f6d6b09a4a0665a1a0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 18 22:46:59 2021 -0500

    üé® Misc cleanup and fixes

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6de9c40ac7..46c1e59020 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -118,21 +118,21 @@
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
   #endif
 #endif
 
 // Calibration codes only for non-core axes
 #if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
   #if EITHER(IS_CORE, MARKFORGED_XY)
     #define CAN_CALIBRATE(A,B) (_AXIS(A) == B)
   #else
-    #define CAN_CALIBRATE(A,B) 1
+    #define CAN_CALIBRATE(A,B) true
   #endif
 #endif
 #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
   #undef LEVEL_BED_CORNERS
 #endif

commit 7f774cab9005dd56667bf4db09c23370bd2c873f
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Sat May 15 15:02:20 2021 -0500

    M154 Position Auto-Report (#18427)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8c115fbab6..6de9c40ac7 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2224,21 +2224,21 @@
   #define HAS_AUTO_FAN 1
 #endif
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN && (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
   #define AUTO_CHAMBER_IS_E 1
 #endif
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
-#if EITHER(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS)
+#if ANY(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS, AUTO_REPORT_POSITION)
   #define HAS_AUTO_REPORTING 1
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Print Cooling fans (limit)
 #ifdef NUM_M106_FANS
   #define MAX_FANS NUM_M106_FANS

commit d97c1f1c6245e2b1f3152e5a210ed840b4bdbefb
Author: Jamie <vector76@users.noreply.github.com>
Date:   Fri May 14 00:14:13 2021 -0500

    ‚ú® Instant Freeze/Resume Function (#17462)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ec6e66d35a..8c115fbab6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2311,26 +2311,36 @@
 #if HAS_SERVOS && defined(PAUSE_SERVO_OUTPUT) && defined(RESUME_SERVO_OUTPUT)
   #define HAS_PAUSE_SERVO_OUTPUT 1
 #endif
 
 // Sensors
 #if PIN_EXISTS(FILWIDTH)
   #define HAS_FILAMENT_WIDTH_SENSOR 1
 #endif
 
 // User Interface
-#if PIN_EXISTS(HOME)
-  #define HAS_HOME 1
+#if ENABLED(FREEZE_FEATURE)
+  #if !PIN_EXISTS(FREEZE) && PIN_EXISTS(KILL)
+    #define FREEZE_PIN KILL_PIN
+  #endif
+  #if PIN_EXISTS(FREEZE)
+    #define HAS_FREEZE_PIN 1
+  #endif
+#else
+  #undef FREEZE_PIN
 #endif
-#if PIN_EXISTS(KILL)
+#if PIN_EXISTS(KILL) && TERN1(FREEZE_FEATURE, KILL_PIN != FREEZE_PIN)
   #define HAS_KILL 1
 #endif
+#if PIN_EXISTS(HOME)
+  #define HAS_HOME 1
+#endif
 #if PIN_EXISTS(SUICIDE)
   #define HAS_SUICIDE 1
 #endif
 #if PIN_EXISTS(PHOTOGRAPH)
   #define HAS_PHOTOGRAPH 1
 #endif
 
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1

commit 69473daa3d5fb0d30a6d4ddfa17e8d4ee278c14c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 13 01:14:37 2021 -0500

    üîß Improve SD_DETECT_STATE default (#21885)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c237e6edd9..ec6e66d35a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -323,47 +323,44 @@
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
 
-  // Extender cable doesn't support SD_DETECT_PIN
-  #if ENABLED(NO_SD_DETECT)
-    #undef SD_DETECT_PIN
-  #endif
-
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define HAS_SHARED_MEDIA 1
   #endif
 
-  #if PIN_EXISTS(SD_DETECT)
-    #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
-      #undef SD_DETECT_STATE
-      #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
-        #define SD_DETECT_STATE HIGH
-      #endif
-    #endif
-    #ifndef SD_DETECT_STATE
+  // Set SD_DETECT_STATE based on hardware if not overridden
+  #if PIN_EXISTS(SD_DETECT) && !defined(SD_DETECT_STATE)
+    #if BOTH(HAS_LCD_MENU, ELB_FULL_GRAPHIC_CONTROLLER) && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
+      #define SD_DETECT_STATE HIGH
+    #else
       #define SD_DETECT_STATE LOW
     #endif
   #endif
 
+  // Extender cable doesn't support SD_DETECT_PIN
+  #if ENABLED(NO_SD_DETECT)
+    #undef SD_DETECT_PIN
+  #endif
+
   #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || BOTH(MULTI_VOLUME, VOLUME_SD_ONBOARD)
     #if ENABLED(SDIO_SUPPORT)
       #define NEED_SD2CARD_SDIO 1
     #else
       #define NEED_SD2CARD_SPI 1
     #endif
   #endif
 
 #endif
 

commit 02405add76e722701ab49434549e7d8bf5690162
Author: ellensp <ellensp@hotmail.com>
Date:   Fri May 7 17:31:45 2021 +1200

    Support a third serial port (#21784)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d5bb3e68db..c237e6edd9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1852,20 +1852,21 @@
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
 //
 // Set USING_HW_SERIALn flags for used Serial Ports
 //
 
 // Flag the indexed hardware serial ports in use
 #define CONF_SERIAL_IS(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
                           || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \
+                          || (defined(SERIAL_PORT_3)    && SERIAL_PORT_3 == N) \
                           || (defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT == N) \
                           || (defined(LCD_SERIAL_PORT)  && LCD_SERIAL_PORT == N) )
 
 // Flag the named hardware serial ports in use
 #define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && (CAT(HW_,A##_HARDWARE_SERIAL) == HW_Serial##N || CAT(HW_,A##_HARDWARE_SERIAL) == HW_MSerial##N))
 #define ANY_SERIAL_IS(N) (  CONF_SERIAL_IS(N) \
                          || TMC_UART_IS(X,  N) || TMC_UART_IS(Y , N) || TMC_UART_IS(Z , N) \
                          || TMC_UART_IS(X2, N) || TMC_UART_IS(Y2, N) || TMC_UART_IS(Z2, N) || TMC_UART_IS(Z3, N) || TMC_UART_IS(Z4, N) \
                          || TMC_UART_IS(E0, N) || TMC_UART_IS(E1, N) || TMC_UART_IS(E2, N) || TMC_UART_IS(E3, N) || TMC_UART_IS(E4, N) )
 

commit be6fbc76a1ab1618421315958480f6a1d6093533
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu May 6 22:39:34 2021 -0500

    Serial and pins debug cleanup
    
    - Rename some AVR / DUE / ESP32 serial types
    - Reduce two #error to one static_assert
    - Update AVR/DUE error messages

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 67a6ce86e1..d5bb3e68db 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1942,21 +1942,20 @@
 #undef HW_MSerial5
 #undef HW_MSerial6
 #undef HW_MSerial7
 #undef HW_MSerial8
 #undef HW_MSerial9
 #undef HW_MSerial10
 
 #undef _SERIAL_ID
 #undef _TMC_UART_IS
 #undef TMC_UART_IS
-#undef CONF_SERIAL_IS
 #undef ANY_SERIAL_IS
 
 //
 // Endstops and bed probe
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)

commit fb87b2d1adf667f63dde7d8d19058d5d75bc6aa2
Author: ellensp <ellensp@hotmail.com>
Date:   Thu May 6 18:54:02 2021 +1200

    Simplify / undef extra endstops (#21808)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 98b5c06914..67a6ce86e1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1976,29 +1976,20 @@
 #endif
 #if _HAS_STOP(Y,MAX)
   #define HAS_Y_MAX 1
 #endif
 #if _HAS_STOP(Z,MIN)
   #define HAS_Z_MIN 1
 #endif
 #if _HAS_STOP(Z,MAX)
   #define HAS_Z_MAX 1
 #endif
-#if _HAS_STOP(X,STOP)
-  #define HAS_X_STOP 1
-#endif
-#if _HAS_STOP(Y,STOP)
-  #define HAS_Y_STOP 1
-#endif
-#if _HAS_STOP(Z,STOP)
-  #define HAS_Z_STOP 1
-#endif
 #if PIN_EXISTS(X2_MIN)
   #define HAS_X2_MIN 1
 #endif
 #if PIN_EXISTS(X2_MAX)
   #define HAS_X2_MAX 1
 #endif
 #if PIN_EXISTS(Y2_MIN)
   #define HAS_Y2_MIN 1
 #endif
 #if PIN_EXISTS(Y2_MAX)
@@ -2015,24 +2006,31 @@
 #endif
 #if PIN_EXISTS(Z3_MAX)
   #define HAS_Z3_MAX 1
 #endif
 #if PIN_EXISTS(Z4_MIN)
   #define HAS_Z4_MIN 1
 #endif
 #if PIN_EXISTS(Z4_MAX)
   #define HAS_Z4_MAX 1
 #endif
-#if HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE)
+#if BOTH(HAS_BED_PROBE, HAS_CUSTOM_PROBE_PIN) && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
+#undef IS_PROBE_PIN
+#undef IS_X2_ENDSTOP
+#undef IS_Y2_ENDSTOP
+#undef IS_Z2_ENDSTOP
+#undef IS_Z3_ENDSTOP
+#undef IS_Z4_ENDSTOP
+
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && NONE(TEMP_SENSOR_##P##_IS_MAX_TC, TEMP_SENSOR_##P##_IS_DUMMY))
 #if HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
 #endif
 #if HAS_ADC_TEST(1)
   #define HAS_TEMP_ADC_1 1
 #endif

commit 301ee6c57aeafbe121f6896b532fada07c2b3477
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 5 04:24:42 2021 -0500

    Add MKS_LCD12864B

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 208c875982..98b5c06914 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -263,21 +263,21 @@
   #define _LCD_CONTRAST_MAX  115
 #elif ENABLED(VIKI2)
   #define _LCD_CONTRAST_INIT 140
 #elif ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #define _LCD_CONTRAST_MIN   90
   #define _LCD_CONTRAST_INIT 110
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
-#elif ENABLED(MKS_LCD12864)
+#elif EITHER(MKS_LCD12864A, MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254

commit 69d85cce2da20b88784db68324c228db212af071
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Tue Apr 27 00:22:09 2021 -0700

    BTT SKR V2.0 / Stepper Driver Anti-Reverse Protection (#21503)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 772c8bc3c1..208c875982 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -3035,10 +3035,14 @@
       #define LCD_HEIGHT 5
     #else
       #define LCD_HEIGHT TERN(IS_ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
+
+#if PIN_EXISTS(SAFE_POWER) && DISABLED(DISABLE_DRIVER_SAFE_POWER_PROTECT)
+  #define HAS_DRIVER_SAFE_POWER_PROTECT 1
+#endif

commit a1ee5124d3673077e7812c00f883fca7179b30bd
Author: pinchies <pinchies@gmail.com>
Date:   Sun Apr 25 18:48:20 2021 +1000

    Fix usage, commentary of MANUAL_PROBE_START_Z, Z_AFTER_PROBING (#21692)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 611c13e344..772c8bc3c1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2903,34 +2903,40 @@
   #else
     #define Z_HOMING_HEIGHT 0
   #endif
 #endif
 
 #if PROBE_SELECTED
   #ifndef Z_CLEARANCE_BETWEEN_PROBES
     #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
   #endif
   #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
-    #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+    #define Z_CLEARANCE_BETWEEN_MANUAL_PROBES Z_CLEARANCE_BETWEEN_PROBES
   #else
-    #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
+    #define Z_CLEARANCE_BETWEEN_MANUAL_PROBES Z_HOMING_HEIGHT
   #endif
   #ifndef Z_CLEARANCE_MULTI_PROBE
     #define Z_CLEARANCE_MULTI_PROBE Z_CLEARANCE_BETWEEN_PROBES
   #endif
   #if ENABLED(BLTOUCH) && !defined(BLTOUCH_DELAY)
     #define BLTOUCH_DELAY 500
   #endif
 #endif
 
-#if !defined(MANUAL_PROBE_START_Z) && defined(Z_CLEARANCE_BETWEEN_PROBES)
-  #define MANUAL_PROBE_START_Z Z_CLEARANCE_BETWEEN_PROBES
+// Define a starting height for measuring manual probe points
+#ifndef MANUAL_PROBE_START_Z
+  #if EITHER(MESH_BED_LEVELING, PROBE_MANUALLY)
+    // Leave MANUAL_PROBE_START_Z undefined so the prior Z height will be used.
+    // Note: If Z_CLEARANCE_BETWEEN_MANUAL_PROBES is 0 there will be no raise between points
+  #elif ENABLED(AUTO_BED_LEVELING_UBL) && defined(Z_CLEARANCE_BETWEEN_PROBES)
+    #define MANUAL_PROBE_START_Z Z_CLEARANCE_BETWEEN_PROBES
+  #endif
 #endif
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
 #if DISABLED(NO_WORKSPACE_OFFSETS)

commit a58276c4c1a7dbcac815a65473d1d0f8f36d5978
Author: BigTreeTech <38851044+bigtreetech@users.noreply.github.com>
Date:   Fri Apr 23 07:43:28 2021 +0800

    Enable Purge More / Resume with EP + Host Prompt (#21671)
    
    Co-authored-by: Msq001 <alansayyeah@gmail.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7fabef7e63..611c13e344 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2709,22 +2709,30 @@
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
 
 #if HAS_BED_PROBE && (EITHER(PROBING_HEATERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
   #define HAS_QUIET_PROBING 1
 #endif
 #if EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
   #define HEATER_IDLE_HANDLER 1
 #endif
 
-#if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
-  #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
+/**
+ * Advanced Pause - Filament Change
+ */
+#if ENABLED(ADVANCED_PAUSE_FEATURE)
+  #if HAS_LCD_MENU || BOTH(EMERGENCY_PARSER, HOST_PROMPT_SUPPORT)
+    #define M600_PURGE_MORE_RESUMABLE 1
+  #endif
+  #ifndef FILAMENT_CHANGE_SLOW_LOAD_LENGTH
+    #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
+  #endif
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
 
 /**
  * Only constrain Z on DELTA / SCARA machines
  */
 #if IS_KINEMATIC

commit 6bb10b189897dcaef5a6da496dfd4f1631689f1b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Apr 20 00:44:19 2021 -0500

    Changes supporting "Prussia3D" MK3 (#21617)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f00dd6ec97..7fabef7e63 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2532,21 +2532,23 @@
     #define COOLER_INVERTING true
   #endif
   #define WRITE_HEATER_COOLER(v) WRITE(COOLER_PIN, (v) ^ COOLER_INVERTING)
 #endif
 
 #if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER || HAS_COOLER
   #define HAS_TEMPERATURE 1
 #endif
 
 #if HAS_TEMPERATURE && EITHER(HAS_LCD_MENU, DWIN_CREALITY_LCD)
-  #ifdef PREHEAT_5_LABEL
+  #ifdef PREHEAT_6_LABEL
+    #define PREHEAT_COUNT 6
+  #elif defined(PREHEAT_5_LABEL)
     #define PREHEAT_COUNT 5
   #elif defined(PREHEAT_4_LABEL)
     #define PREHEAT_COUNT 4
   #elif defined(PREHEAT_3_LABEL)
     #define PREHEAT_COUNT 3
   #elif defined(PREHEAT_2_LABEL)
     #define PREHEAT_COUNT 2
   #elif defined(PREHEAT_1_LABEL)
     #define PREHEAT_COUNT 1
   #endif

commit 138340ee99a852bc116e2a436932bed074624fde
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Tue Apr 13 19:34:19 2021 -0300

    Multi-Volume. Select Media for LVGL (#21344)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 337cf2a950..f00dd6ec97 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -349,20 +349,29 @@
     #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
       #undef SD_DETECT_STATE
       #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE
       #define SD_DETECT_STATE LOW
     #endif
   #endif
+
+  #if DISABLED(USB_FLASH_DRIVE_SUPPORT) || BOTH(MULTI_VOLUME, VOLUME_SD_ONBOARD)
+    #if ENABLED(SDIO_SUPPORT)
+      #define NEED_SD2CARD_SDIO 1
+    #else
+      #define NEED_SD2CARD_SPI 1
+    #endif
+  #endif
+
 #endif
 
 #if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
   #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X

commit 45c1432946547cef4cbe9ac832394ff68526687d
Author: Marcio T <mlt4356-github@yahoo.com>
Date:   Thu Apr 1 18:12:00 2021 -0600

    G26 Hilbert Curve followup (#21480)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2433050528..337cf2a950 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -217,20 +217,25 @@
     #define _SAFE_POINT(A) A##_CENTER
   #endif
   #ifndef Z_SAFE_HOMING_X_POINT
     #define Z_SAFE_HOMING_X_POINT _SAFE_POINT(X)
   #endif
   #ifndef Z_SAFE_HOMING_Y_POINT
     #define Z_SAFE_HOMING_Y_POINT _SAFE_POINT(Y)
   #endif
 #endif
 
+#ifdef GRID_MAX_POINTS_X
+  #define GRID_MAX_CELLS_X (GRID_MAX_POINTS_X - 1)
+  #define GRID_MAX_CELLS_Y (GRID_MAX_POINTS_Y - 1)
+#endif
+
 /**
  * Host keep alive
  */
 #ifndef DEFAULT_KEEPALIVE_INTERVAL
   #define DEFAULT_KEEPALIVE_INTERVAL 2
 #endif
 
 /**
  * Provide a MAX_AUTORETRACT for older configs
  */

commit 704b8cd83c507675d6f71621e1c35172779ac9d1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 25 16:49:04 2021 -0500

    Apply TMC UART to STM32, simplify

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 84e9cf8955..2433050528 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1835,34 +1835,28 @@
   #define HAS_TMC_HW_SERIAL 1
 #endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
 //
 // Set USING_HW_SERIALn flags for used Serial Ports
 //
 
-// ... HW_SerialX
-#define _SERIAL_ID(P) _CAT(HW_,P)
-
-// ... (HW_Serial1 == HW_SerialX || HW_Serial1 == HW_MSerialX)
-#define _TMC_UART_IS(P,N) ( _SERIAL_ID(P##_HARDWARE_SERIAL) == _SERIAL_ID(Serial##N) || _SERIAL_ID(P) == _SERIAL_ID(MSerial##N) )
-#define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && _TMC_UART_IS(A, N))
-
 // Flag the indexed hardware serial ports in use
 #define CONF_SERIAL_IS(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
                           || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \
                           || (defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT == N) \
                           || (defined(LCD_SERIAL_PORT)  && LCD_SERIAL_PORT == N) )
 
 // Flag the named hardware serial ports in use
+#define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && (CAT(HW_,A##_HARDWARE_SERIAL) == HW_Serial##N || CAT(HW_,A##_HARDWARE_SERIAL) == HW_MSerial##N))
 #define ANY_SERIAL_IS(N) (  CONF_SERIAL_IS(N) \
                          || TMC_UART_IS(X,  N) || TMC_UART_IS(Y , N) || TMC_UART_IS(Z , N) \
                          || TMC_UART_IS(X2, N) || TMC_UART_IS(Y2, N) || TMC_UART_IS(Z2, N) || TMC_UART_IS(Z3, N) || TMC_UART_IS(Z4, N) \
                          || TMC_UART_IS(E0, N) || TMC_UART_IS(E1, N) || TMC_UART_IS(E2, N) || TMC_UART_IS(E3, N) || TMC_UART_IS(E4, N) )
 
 #define HW_Serial    501
 #define HW_Serial0   502
 #define HW_Serial1   503
 #define HW_Serial2   504
 #define HW_Serial3   505

commit 84b961cb20a4f0b2c1ad67a71d6c507a12f9da2a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 25 16:19:03 2021 -0500

    Define HW serial ports needed for TMC UART (#21446)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1cd7e5f0e9..84e9cf8955 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1831,20 +1831,126 @@
   #define HAS_E_STEPPER_ENABLE 1
 #endif
 
 #if ANY_AXIS_HAS(HW_SERIAL)
   #define HAS_TMC_HW_SERIAL 1
 #endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
+//
+// Set USING_HW_SERIALn flags for used Serial Ports
+//
+
+// ... HW_SerialX
+#define _SERIAL_ID(P) _CAT(HW_,P)
+
+// ... (HW_Serial1 == HW_SerialX || HW_Serial1 == HW_MSerialX)
+#define _TMC_UART_IS(P,N) ( _SERIAL_ID(P##_HARDWARE_SERIAL) == _SERIAL_ID(Serial##N) || _SERIAL_ID(P) == _SERIAL_ID(MSerial##N) )
+#define TMC_UART_IS(A,N) (defined(A##_HARDWARE_SERIAL) && _TMC_UART_IS(A, N))
+
+// Flag the indexed hardware serial ports in use
+#define CONF_SERIAL_IS(N) (  (defined(SERIAL_PORT)      && SERIAL_PORT == N) \
+                          || (defined(SERIAL_PORT_2)    && SERIAL_PORT_2 == N) \
+                          || (defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT == N) \
+                          || (defined(LCD_SERIAL_PORT)  && LCD_SERIAL_PORT == N) )
+
+// Flag the named hardware serial ports in use
+#define ANY_SERIAL_IS(N) (  CONF_SERIAL_IS(N) \
+                         || TMC_UART_IS(X,  N) || TMC_UART_IS(Y , N) || TMC_UART_IS(Z , N) \
+                         || TMC_UART_IS(X2, N) || TMC_UART_IS(Y2, N) || TMC_UART_IS(Z2, N) || TMC_UART_IS(Z3, N) || TMC_UART_IS(Z4, N) \
+                         || TMC_UART_IS(E0, N) || TMC_UART_IS(E1, N) || TMC_UART_IS(E2, N) || TMC_UART_IS(E3, N) || TMC_UART_IS(E4, N) )
+
+#define HW_Serial    501
+#define HW_Serial0   502
+#define HW_Serial1   503
+#define HW_Serial2   504
+#define HW_Serial3   505
+#define HW_Serial4   506
+#define HW_Serial5   507
+#define HW_Serial6   508
+#define HW_MSerial0  509
+#define HW_MSerial1  510
+#define HW_MSerial2  511
+#define HW_MSerial3  512
+#define HW_MSerial4  513
+#define HW_MSerial5  514
+#define HW_MSerial6  515
+#define HW_MSerial7  516
+#define HW_MSerial8  517
+#define HW_MSerial9  518
+#define HW_MSerial10 519
+
+#if CONF_SERIAL_IS(-1)
+  #define USING_HW_SERIALUSB 1
+#endif
+#if ANY_SERIAL_IS(0)
+  #define USING_HW_SERIAL0 1
+#endif
+#if ANY_SERIAL_IS(1)
+  #define USING_HW_SERIAL1 1
+#endif
+#if ANY_SERIAL_IS(2)
+  #define USING_HW_SERIAL2 1
+#endif
+#if ANY_SERIAL_IS(3)
+  #define USING_HW_SERIAL3 1
+#endif
+#if ANY_SERIAL_IS(4)
+  #define USING_HW_SERIAL4 1
+#endif
+#if ANY_SERIAL_IS(5)
+  #define USING_HW_SERIAL5 1
+#endif
+#if ANY_SERIAL_IS(6)
+  #define USING_HW_SERIAL6 1
+#endif
+#if ANY_SERIAL_IS(7)
+  #define USING_HW_SERIAL7 1
+#endif
+#if ANY_SERIAL_IS(8)
+  #define USING_HW_SERIAL8 1
+#endif
+#if ANY_SERIAL_IS(9)
+  #define USING_HW_SERIAL9 1
+#endif
+#if ANY_SERIAL_IS(10)
+  #define USING_HW_SERIAL10 1
+#endif
+
+#undef HW_Serial
+#undef HW_Serial0
+#undef HW_Serial1
+#undef HW_Serial2
+#undef HW_Serial3
+#undef HW_Serial4
+#undef HW_Serial5
+#undef HW_Serial6
+#undef HW_MSerial0
+#undef HW_MSerial1
+#undef HW_MSerial2
+#undef HW_MSerial3
+#undef HW_MSerial4
+#undef HW_MSerial5
+#undef HW_MSerial6
+#undef HW_MSerial7
+#undef HW_MSerial8
+#undef HW_MSerial9
+#undef HW_MSerial10
+
+#undef _SERIAL_ID
+#undef _TMC_UART_IS
+#undef TMC_UART_IS
+#undef CONF_SERIAL_IS
+#undef ANY_SERIAL_IS
+
 //
 // Endstops and bed probe
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)

commit cfa6c7d45ba72d1a0b26e6308191e008dcd0d9c9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Mar 19 16:34:10 2021 -0500

    Improve max temp / target

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index fb06a7a3f3..1cd7e5f0e9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2018,25 +2018,31 @@
 #if HAS_TEMP_BED && HAS_HEATER_BED
   #define HAS_HEATED_BED 1
   #ifndef BED_OVERSHOOT
     #define BED_OVERSHOOT 10
   #endif
   #define BED_MAX_TARGET (BED_MAXTEMP - (BED_OVERSHOOT))
 #else
   #undef PIDTEMPBED
 #endif
 
-#if HAS_HEATED_BED || HAS_TEMP_CHAMBER
-  #define BED_OR_CHAMBER 1
-#endif
 #if HAS_TEMP_COOLER && PIN_EXISTS(COOLER)
   #define HAS_COOLER 1
+  #ifndef COOLER_OVERSHOOT
+    #define COOLER_OVERSHOOT 2
+  #endif
+  #define COOLER_MIN_TARGET (COOLER_MINTEMP + (COOLER_OVERSHOOT))
+  #define COOLER_MAX_TARGET (COOLER_MAXTEMP - (COOLER_OVERSHOOT))
+#endif
+
+#if HAS_HEATED_BED || HAS_TEMP_CHAMBER
+  #define BED_OR_CHAMBER 1
 #endif
 #if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER
   #define HAS_TEMP_SENSOR 1
 #endif
 
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
   #define HAS_HEATED_CHAMBER 1
   #ifndef CHAMBER_OVERSHOOT
     #define CHAMBER_OVERSHOOT 10
   #endif

commit d787cd307680c5c4f155ad4643c1137db56bb006
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Sun Mar 14 18:11:11 2021 +0100

    Fix build with Meatpack only on 2nd port (#21336)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a6567e9714..fb06a7a3f3 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2899,23 +2899,10 @@
       #define LCD_HEIGHT 5
     #else
       #define LCD_HEIGHT TERN(IS_ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
-
-#if !NUM_SERIAL
-  #undef BAUD_RATE_GCODE
-#elif NUM_SERIAL > 1
-  #define HAS_MULTI_SERIAL 1
-#endif
-
-#if !HAS_MULTI_SERIAL
-  #undef MEATPACK_ON_SERIAL_PORT_2
-#endif
-#if EITHER(MEATPACK_ON_SERIAL_PORT_1, MEATPACK_ON_SERIAL_PORT_2)
-  #define HAS_MEATPACK 1
-#endif

commit 9dc2712c47f9ce6e5eb0c388a3d50a3a28574c27
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Fri Mar 12 12:25:30 2021 +0100

    Undef unused 2nd serial option(s) (#21331)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7dc75db1c2..a6567e9714 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2906,13 +2906,16 @@
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
 #elif NUM_SERIAL > 1
   #define HAS_MULTI_SERIAL 1
 #endif
 
-#if ENABLED(MEATPACK_ON_SERIAL_PORT_1) || BOTH(HAS_MULTI_SERIAL, MEATPACK_ON_SERIAL_PORT_2)
+#if !HAS_MULTI_SERIAL
+  #undef MEATPACK_ON_SERIAL_PORT_2
+#endif
+#if EITHER(MEATPACK_ON_SERIAL_PORT_1, MEATPACK_ON_SERIAL_PORT_2)
   #define HAS_MEATPACK 1
 #endif

commit f147a8990a68503cd5eb2bb0fc7b26b7c00efe91
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Wed Mar 10 21:22:20 2021 +0100

    Fix MeatPack with per-serial-port instances (#21306)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e8ed0d5a91..7dc75db1c2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2905,10 +2905,14 @@
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
 #elif NUM_SERIAL > 1
   #define HAS_MULTI_SERIAL 1
 #endif
+
+#if ENABLED(MEATPACK_ON_SERIAL_PORT_1) || BOTH(HAS_MULTI_SERIAL, MEATPACK_ON_SERIAL_PORT_2)
+  #define HAS_MEATPACK 1
+#endif

commit b95e548ddbcbc1c088eabc17992d0a06f82ac167
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sat Mar 6 14:13:28 2021 -0600

    Cooler (for Laser) - M143, M193 (#21255)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index be04341200..e8ed0d5a91 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -392,21 +392,21 @@
   #endif
   #ifndef POWER_OFF_DELAY
     #define POWER_OFF_DELAY   0
   #endif
 #endif
 
 /**
  * Temp Sensor defines
  */
 
-#define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
+#define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n) || TEMP_SENSOR_COOLER == (n))
 
 #if ANY_TEMP_SENSOR_IS(1000)
   #define HAS_USER_THERMISTORS 1
 #endif
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define TEMP_SENSOR_0_IS_MAX_TC 1
   #define HAS_MAX_TC 1
   #if TEMP_SENSOR_0 == -3
     #define TEMP_SENSOR_0_MAX_TC_TMIN -270
@@ -737,20 +737,41 @@
   #if TEMP_SENSOR_CHAMBER == 1000
     #define TEMP_SENSOR_CHAMBER_IS_CUSTOM 1
   #elif TEMP_SENSOR_CHAMBER == 998 || TEMP_SENSOR_CHAMBER == 999
     #define TEMP_SENSOR_CHAMBER_IS_DUMMY 1
   #endif
 #else
   #undef CHAMBER_MINTEMP
   #undef CHAMBER_MAXTEMP
 #endif
 
+#if TEMP_SENSOR_COOLER == -4
+  #define COOLER_USES_AD8495 1
+#elif TEMP_SENSOR_COOLER == -3
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_COOLER."
+#elif TEMP_SENSOR_COOLER == -2
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_COOLER."
+#elif TEMP_SENSOR_COOLER == -1
+  #define COOLER_USES_AD595 1
+#elif TEMP_SENSOR_COOLER > 0
+  #define TEMP_SENSOR_COOLER_THERMISTOR_ID TEMP_SENSOR_COOLER
+  #define TEMP_SENSOR_COOLER_IS_THERMISTOR 1
+  #if TEMP_SENSOR_COOLER == 1000
+    #define COOLER_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_COOLER == 998 || TEMP_SENSOR_COOLER == 999
+    #define COOLER_DUMMY_THERMISTOR 1
+  #endif
+#else
+  #undef COOLER_MINTEMP
+  #undef COOLER_MAXTEMP
+#endif
+
 #if TEMP_SENSOR_PROBE == -4
   #define TEMP_SENSOR_PROBE_IS_AD8495 1
 #elif TEMP_SENSOR_PROBE == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -1
   #define TEMP_SENSOR_PROBE_IS_AD595 1
 #elif TEMP_SENSOR_PROBE > 0
   #define TEMP_SENSOR_PROBE_THERMISTOR_ID TEMP_SENSOR_PROBE
@@ -1921,34 +1942,40 @@
 #endif
 #if HAS_ADC_TEST(BED)
   #define HAS_TEMP_ADC_BED 1
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
+#if HAS_ADC_TEST(COOLER)
+  #define HAS_TEMP_ADC_COOLER 1
+#endif
 
 #define HAS_TEMP(N) ANY(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_MAX_TC, TEMP_SENSOR_##N##_IS_DUMMY)
 #if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
 #if HAS_TEMP(BED)
   #define HAS_TEMP_BED 1
 #endif
 #if HAS_TEMP(PROBE)
   #define HAS_TEMP_PROBE 1
 #endif
 #if HAS_TEMP(CHAMBER)
   #define HAS_TEMP_CHAMBER 1
 #endif
+#if HAS_TEMP(COOLER)
+  #define HAS_TEMP_COOLER 1
+#endif
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
   #endif
   #if PIN_EXISTS(JOY_Y)
     #define HAS_JOY_ADC_Y 1
   #endif
   #if PIN_EXISTS(JOY_Z)
     #define HAS_JOY_ADC_Z 1
@@ -1994,21 +2021,24 @@
     #define BED_OVERSHOOT 10
   #endif
   #define BED_MAX_TARGET (BED_MAXTEMP - (BED_OVERSHOOT))
 #else
   #undef PIDTEMPBED
 #endif
 
 #if HAS_HEATED_BED || HAS_TEMP_CHAMBER
   #define BED_OR_CHAMBER 1
 #endif
-#if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE
+#if HAS_TEMP_COOLER && PIN_EXISTS(COOLER)
+  #define HAS_COOLER 1
+#endif
+#if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE || HAS_TEMP_COOLER
   #define HAS_TEMP_SENSOR 1
 #endif
 
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
   #define HAS_HEATED_CHAMBER 1
   #ifndef CHAMBER_OVERSHOOT
     #define CHAMBER_OVERSHOOT 10
   #endif
   #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
 #else
@@ -2026,23 +2056,27 @@
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
 #if HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0
   #define WATCH_BED 1
 #endif
 #if BOTH(HAS_HEATED_CHAMBER, THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
   #define WATCH_CHAMBER 1
 #endif
+#if BOTH(HAS_COOLER, THERMAL_PROTECTION_COOLER) && WATCH_COOLER_TEMP_PERIOD > 0
+  #define WATCH_COOLER 1
+#endif
 #if  (ENABLED(THERMAL_PROTECTION_HOTENDS) || !EXTRUDERS) \
   && (ENABLED(THERMAL_PROTECTION_BED)     || !HAS_HEATED_BED) \
-  && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER)
+  && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER) \
+  && (ENABLED(THERMAL_PROTECTION_COOLER) || !HAS_COOLER)
   #define THERMALLY_SAFE 1
 #endif
 
 // Auto fans
 #if HAS_HOTEND && PIN_EXISTS(E0_AUTO_FAN)
   #define HAS_AUTO_FAN_0 1
 #endif
 #if HAS_MULTI_HOTEND && PIN_EXISTS(E1_AUTO_FAN)
   #define HAS_AUTO_FAN_1 1
 #endif
@@ -2060,22 +2094,25 @@
 #endif
 #if HOTENDS > 6 && PIN_EXISTS(E6_AUTO_FAN)
   #define HAS_AUTO_FAN_6 1
 #endif
 #if HOTENDS > 7 && PIN_EXISTS(E7_AUTO_FAN)
   #define HAS_AUTO_FAN_7 1
 #endif
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN)
   #define HAS_AUTO_CHAMBER_FAN 1
 #endif
+#if HAS_TEMP_COOLER && PIN_EXISTS(COOLER_AUTO_FAN)
+  #define HAS_AUTO_COOLER_FAN 1
+#endif
 
-#if ANY(HAS_AUTO_FAN_0, HAS_AUTO_FAN_1, HAS_AUTO_FAN_2, HAS_AUTO_FAN_3, HAS_AUTO_FAN_4, HAS_AUTO_FAN_5, HAS_AUTO_FAN_6, HAS_AUTO_FAN_7, HAS_AUTO_CHAMBER_FAN)
+#if ANY(HAS_AUTO_FAN_0, HAS_AUTO_FAN_1, HAS_AUTO_FAN_2, HAS_AUTO_FAN_3, HAS_AUTO_FAN_4, HAS_AUTO_FAN_5, HAS_AUTO_FAN_6, HAS_AUTO_FAN_7, HAS_AUTO_CHAMBER_FAN, HAS_AUTO_COOLER_FAN)
   #define HAS_AUTO_FAN 1
 #endif
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN && (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
   #define AUTO_CHAMBER_IS_E 1
 #endif
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
@@ -2357,21 +2394,34 @@
   #endif
   #ifndef MAX_CHAMBER_POWER
     #define MAX_CHAMBER_POWER 255
   #endif
   #ifndef HEATER_CHAMBER_INVERTING
     #define HEATER_CHAMBER_INVERTING false
   #endif
   #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ HEATER_CHAMBER_INVERTING)
 #endif
 
-#if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER
+/**
+ * Laser Cooling requires settings
+ */
+#if HAS_COOLER
+  #ifndef MAX_COOLER_POWER
+    #define MAX_COOLER_POWER 255
+  #endif
+  #ifndef COOLER_INVERTING
+    #define COOLER_INVERTING true
+  #endif
+  #define WRITE_HEATER_COOLER(v) WRITE(COOLER_PIN, (v) ^ COOLER_INVERTING)
+#endif
+
+#if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER || HAS_COOLER
   #define HAS_TEMPERATURE 1
 #endif
 
 #if HAS_TEMPERATURE && EITHER(HAS_LCD_MENU, DWIN_CREALITY_LCD)
   #ifdef PREHEAT_5_LABEL
     #define PREHEAT_COUNT 5
   #elif defined(PREHEAT_4_LABEL)
     #define PREHEAT_COUNT 4
   #elif defined(PREHEAT_3_LABEL)
     #define PREHEAT_COUNT 3

commit a46e0257252bcd50f4c7acb04215f3ad2a92047c
Author: Axel <ansepulveda@uc.cl>
Date:   Wed Mar 3 20:46:32 2021 -0300

    TPARA - 3DOF robot arm IK (#21005)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c800a52fb8..be04341200 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -136,21 +136,23 @@
 #if IS_KINEMATIC
   #undef LEVEL_BED_CORNERS
 #endif
 
 /**
  * SCARA cannot use SLOWDOWN and requires QUICKHOME
  * Printable radius assumes joints can fully extend
  */
 #if IS_SCARA
   #undef SLOWDOWN
-  #define QUICK_HOME
+  #if DISABLED(AXEL_TPARA)
+    #define QUICK_HOME
+  #endif
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
 #endif
 
 /**
  * Set the home position based on settings or manual overrides
  */
 #ifdef MANUAL_X_HOME_POS
   #define X_HOME_POS MANUAL_X_HOME_POS
 #else
   #define X_END_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)

commit ee7701c15bc91f7a05f973e03624fb14815f5027
Author: jbuck2005 <59450931+jbuck2005@users.noreply.github.com>
Date:   Sat Feb 27 16:54:43 2021 -0500

    SPEED => FEEDRATE (#21217)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6de98e2a0e..c800a52fb8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2472,22 +2472,22 @@
 #if HAS_BED_PROBE
   #if BOTH(ENDSTOPPULLUPS, HAS_Z_MIN_PROBE_PIN)
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MAX
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
-  #ifndef XY_PROBE_SPEED
-    #define XY_PROBE_SPEED ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
+  #ifndef XY_PROBE_FEEDRATE
+    #define XY_PROBE_FEEDRATE ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif
 #else
   #undef NOZZLE_TO_PROBE_OFFSET
 #endif
 
 /**
  * XYZ Bed Skew Correction

commit f7d9305786927a1d95903464af3480fd64049034
Author: Vi B-P <violetbp@eecs.umich.edu>
Date:   Thu Feb 25 11:23:17 2021 -0500

    Preheat Menu shortcut option (#20350)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 585d48de8c..6de98e2a0e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2373,20 +2373,24 @@
     #define PREHEAT_COUNT 4
   #elif defined(PREHEAT_3_LABEL)
     #define PREHEAT_COUNT 3
   #elif defined(PREHEAT_2_LABEL)
     #define PREHEAT_COUNT 2
   #elif defined(PREHEAT_1_LABEL)
     #define PREHEAT_COUNT 1
   #endif
 #endif
 
+#if !PREHEAT_COUNT
+  #undef PREHEAT_SHORTCUT_MENU_ITEM
+#endif
+
 /**
  * Up to 3 PWM fans
  */
 #ifndef FAN_INVERTING
   #define FAN_INVERTING false
 #endif
 
 #if HAS_FAN7
   #define FAN_COUNT 8
 #elif HAS_FAN6

commit a3a10b62f21cfbedfd001746faa46ac55d248b36
Author: Ken Sanislo <ksanislo@users.noreply.github.com>
Date:   Wed Feb 24 16:26:51 2021 -0800

    Chamber Heater PID (#21156)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f8360767d9..585d48de8c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1985,41 +1985,45 @@
   #define HAS_HEATER_BED 1
 #endif
 
 // Shorthand for common combinations
 #if HAS_TEMP_BED && HAS_HEATER_BED
   #define HAS_HEATED_BED 1
   #ifndef BED_OVERSHOOT
     #define BED_OVERSHOOT 10
   #endif
   #define BED_MAX_TARGET (BED_MAXTEMP - (BED_OVERSHOOT))
+#else
+  #undef PIDTEMPBED
 #endif
+
 #if HAS_HEATED_BED || HAS_TEMP_CHAMBER
   #define BED_OR_CHAMBER 1
 #endif
 #if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE
   #define HAS_TEMP_SENSOR 1
 #endif
+
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
   #define HAS_HEATED_CHAMBER 1
+  #ifndef CHAMBER_OVERSHOOT
+    #define CHAMBER_OVERSHOOT 10
+  #endif
+  #define CHAMBER_MAX_TARGET (CHAMBER_MAXTEMP - (CHAMBER_OVERSHOOT))
+#else
+  #undef PIDTEMPCHAMBER
 #endif
 
 // PID heating
-#if !HAS_HEATED_BED
-  #undef PIDTEMPBED
-#endif
-#if EITHER(PIDTEMP, PIDTEMPBED)
+#if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
   #define HAS_PID_HEATING 1
 #endif
-#if BOTH(PIDTEMP, PIDTEMPBED)
-  #define HAS_PID_FOR_BOTH 1
-#endif
 
 // Thermal protection
 #if BOTH(HAS_HEATED_BED, THERMAL_PROTECTION_BED)
   #define HAS_THERMALLY_PROTECTED_BED 1
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
 #if HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0
   #define WATCH_BED 1
@@ -2339,20 +2343,23 @@
   #ifndef HEATER_BED_INVERTING
     #define HEATER_BED_INVERTING false
   #endif
   #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ HEATER_BED_INVERTING)
 #endif
 
 /**
  * Heated chamber requires settings
  */
 #if HAS_HEATED_CHAMBER
+  #ifndef MIN_CHAMBER_POWER
+    #define MIN_CHAMBER_POWER 0
+  #endif
   #ifndef MAX_CHAMBER_POWER
     #define MAX_CHAMBER_POWER 255
   #endif
   #ifndef HEATER_CHAMBER_INVERTING
     #define HEATER_CHAMBER_INVERTING false
   #endif
   #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ HEATER_CHAMBER_INVERTING)
 #endif
 
 #if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER

commit 27f9437d3141635e290b11109b5f6d0929962194
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 23 16:08:00 2021 -0600

    G92, subcodes flag cleanup

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 949885eab7..f8360767d9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2751,21 +2751,21 @@
   #endif
 #endif
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
 // Add commands that need sub-codes to this list
 #if ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY)
-  #define USE_GCODE_SUBCODES
+  #define USE_GCODE_SUBCODES 1
 #endif
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif

commit 8707ae23e22d40e7f818cf77e7ec89038fdaacf7
Author: JoAnn Manges <joannmanges@gmail.com>
Date:   Mon Feb 8 20:51:57 2021 -0500

    MAX Thermocouples rework (#20447)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 04c4eb120d..949885eab7 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -483,20 +483,104 @@
 #if TEMP_SENSOR_0_IS_MAX31855 || TEMP_SENSOR_1_IS_MAX31855
   #define HAS_MAX31855 1
 #endif
 #if TEMP_SENSOR_0_IS_MAX31865 || TEMP_SENSOR_1_IS_MAX31865
   #define HAS_MAX31865 1
 #endif
 #if TEMP_SENSOR_0_IS_MAX6675 || TEMP_SENSOR_1_IS_MAX6675
   #define HAS_MAX6675 1
 #endif
 
+//
+// Compatibility layer for MAX (SPI) temp boards
+//
+#if PIN_EXISTS(MAX6675_SS)
+  #if TEMP_SENSOR_0_IS_MAX31855
+    #define MAX31855_CS_PIN MAX6675_SS_PIN
+  #elif TEMP_SENSOR_0_IS_MAX31865
+    #define MAX31865_CS_PIN MAX6675_SS_PIN
+  #elif TEMP_SENSOR_0_IS_MAX6675
+    #define MAX6675_CS_PIN MAX6675_SS_PIN
+  #endif
+#endif
+
+#if PIN_EXISTS(MAX6675_SS2)
+  #if TEMP_SENSOR_1_IS_MAX31855
+    #define MAX31855_CS2_PIN MAX6675_SS2_PIN
+  #elif TEMP_SENSOR_1_IS_MAX31865
+    #define MAX31865_CS2_PIN MAX6675_SS2_PIN
+  #elif TEMP_SENSOR_1_IS_MAX6675
+    #define MAX6675_CS2_PIN MAX6675_SS2_PIN
+  #endif
+#endif
+
+#if PIN_EXISTS(MAX6675_DO)
+  #if HAS_MAX31855
+    #define MAX31855_MISO_PIN MAX6675_DO_PIN
+  #elif HAS_MAX31865
+    #define MAX31865_MISO_PIN MAX6675_DO_PIN
+  #elif HAS_MAX6675
+    #define MAX6675_MISO_PIN MAX6675_DO_PIN
+  #endif
+#endif
+
+#if PIN_EXISTS(MAX6675_SCK)
+  #if HAS_MAX31855
+    #define MAX31855_SCK_PIN MAX6675_SCK_PIN
+  #elif HAS_MAX31865
+    #define MAX31865_SCK_PIN MAX6675_SCK_PIN
+  #endif
+#endif
+
+// Compatibility Layer for use when HAL manipulates PINS for MAX31855 and MAX6675
+#if PIN_EXISTS(MAX31855_CS) && !PIN_EXISTS(MAX6675_SS)
+  #define MAX6675_SS_PIN MAX31855_CS_PIN
+#endif
+#if PIN_EXISTS(MAX31855_CS2) && !PIN_EXISTS(MAX6675_SS2)
+  #define MAX6675_SS2_PIN MAX31855_CS2_PIN
+#endif
+#if PIN_EXISTS(MAX6675_CS) && !PIN_EXISTS(MAX6675_SS)
+  #define MAX6675_SS_PIN MAX6675_CS_PIN
+#endif
+#if PIN_EXISTS(MAX6675_CS2) && !PIN_EXISTS(MAX6675_SS2)
+  #define MAX6675_SS2_PIN MAX6675_CS2_PIN
+#endif
+#if PIN_EXISTS(MAX31855_MISO) && !PIN_EXISTS(MAX6675_DO)
+  #define MAX6675_DO_PIN MAX31855_MISO_PIN
+#endif
+#if PIN_EXISTS(MAX6675_MISO) && !PIN_EXISTS(MAX6675_DO)
+  #define MAX6675_DO_PIN MAX6675_MISO_PIN
+#endif
+#if PIN_EXISTS(MAX31855_SCK) && !PIN_EXISTS(MAX6675_SCK)
+  #define MAX6675_SCK_PIN MAX31855_SCK_PIN
+#endif
+
+//
+// User-defined thermocouple libraries
+//
+// Add LIB_MAX6675 / LIB_MAX31855 / LIB_MAX31865 to the build_flags
+// to select a USER library for MAX6675, MAX31855, MAX31865
+//
+#if BOTH(HAS_MAX6675, LIB_MAX6675)
+  #define LIB_USR_MAX6675 1
+#endif
+#if BOTH(HAS_MAX31855, LIB_MAX31855)
+  #define LIB_USR_MAX31855 1
+#endif
+#if HAS_MAX31865
+  #if ENABLED(LIB_MAX31865)
+    #define LIB_USR_MAX31865 1
+  #else
+    #define LIB_ADAFRUIT_MAX31865 1
+  #endif
+#endif
+
 #if TEMP_SENSOR_2 == -4
   #define TEMP_SENSOR_2_IS_AD8495 1
 #elif TEMP_SENSOR_2 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
   #define TEMP_SENSOR_2_IS_AD595 1
 #elif TEMP_SENSOR_2 > 0
   #define TEMP_SENSOR_2_THERMISTOR_ID TEMP_SENSOR_2

commit b35bfeb1c3f1271016227a1d79dcb552e67e3cb9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 7 16:58:06 2021 -0600

    Fix TEMP_0_TR_ENABLE, rename temp conditions (#21016)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index acf8f3620b..04c4eb120d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -397,273 +397,289 @@
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #if ANY_TEMP_SENSOR_IS(1000)
   #define HAS_USER_THERMISTORS 1
 #endif
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
-  #define HEATER_0_USES_MAX6675 1
+  #define TEMP_SENSOR_0_IS_MAX_TC 1
+  #define HAS_MAX_TC 1
   #if TEMP_SENSOR_0 == -3
-    #define HEATER_0_MAX6675_TMIN -270
-    #define HEATER_0_MAX6675_TMAX 1800
+    #define TEMP_SENSOR_0_MAX_TC_TMIN -270
+    #define TEMP_SENSOR_0_MAX_TC_TMAX 1800
   #else
-    #define HEATER_0_MAX6675_TMIN    0
-    #define HEATER_0_MAX6675_TMAX 1024
+    #define TEMP_SENSOR_0_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_0_MAX_TC_TMAX 1024
   #endif
   #if TEMP_SENSOR_0 == -5
-    #define MAX6675_0_IS_MAX31865 1
+    #define TEMP_SENSOR_0_IS_MAX31865 1
   #elif TEMP_SENSOR_0 == -3
-    #define MAX6675_0_IS_MAX31855 1
+    #define TEMP_SENSOR_0_IS_MAX31855 1
+  #elif TEMP_SENSOR_0 == -2
+    #define TEMP_SENSOR_0_IS_MAX6675 1
   #endif
 #elif TEMP_SENSOR_0 == -4
-  #define HEATER_0_USES_AD8495 1
+  #define TEMP_SENSOR_0_IS_AD8495 1
 #elif TEMP_SENSOR_0 == -1
-  #define HEATER_0_USES_AD595 1
+  #define TEMP_SENSOR_0_IS_AD595 1
 #elif TEMP_SENSOR_0 > 0
-  #define THERMISTOR_HEATER_0 TEMP_SENSOR_0
-  #define HEATER_0_USES_THERMISTOR 1
+  #define TEMP_SENSOR_0_THERMISTOR_ID TEMP_SENSOR_0
+  #define TEMP_SENSOR_0_IS_THERMISTOR 1
   #if TEMP_SENSOR_0 == 1000
-    #define HEATER_0_USER_THERMISTOR 1
+    #define TEMP_SENSOR_0_IS_CUSTOM 1
   #elif TEMP_SENSOR_0 == 998 || TEMP_SENSOR_0 == 999
-    #define HEATER_0_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_0_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_1 == -5 || TEMP_SENSOR_1 == -3 || TEMP_SENSOR_1 == -2
-  #define HEATER_1_USES_MAX6675 1
+  #define TEMP_SENSOR_1_IS_MAX_TC 1
+  #define HAS_MAX_TC 1
   #if TEMP_SENSOR_1 == -3
-    #define HEATER_1_MAX6675_TMIN -270
-    #define HEATER_1_MAX6675_TMAX 1800
+    #define TEMP_SENSOR_1_MAX_TC_TMIN -270
+    #define TEMP_SENSOR_1_MAX_TC_TMAX 1800
   #else
-    #define HEATER_1_MAX6675_TMIN    0
-    #define HEATER_1_MAX6675_TMAX 1024
+    #define TEMP_SENSOR_1_MAX_TC_TMIN    0
+    #define TEMP_SENSOR_1_MAX_TC_TMAX 1024
   #endif
   #if TEMP_SENSOR_1 == -5
-    #define MAX6675_1_IS_MAX31865 1
+    #define TEMP_SENSOR_1_IS_MAX31865 1
   #elif TEMP_SENSOR_1 == -3
-    #define MAX6675_1_IS_MAX31855 1
+    #define TEMP_SENSOR_1_IS_MAX31855 1
+  #elif TEMP_SENSOR_1 == -2
+    #define TEMP_SENSOR_1_IS_MAX6675 1
   #endif
   #if TEMP_SENSOR_1 != TEMP_SENSOR_0
     #if   TEMP_SENSOR_1 == -5
       #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -3
       #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -2
       #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #endif
   #endif
 #elif TEMP_SENSOR_1 == -4
-  #define HEATER_1_USES_AD8495 1
+  #define TEMP_SENSOR_1_IS_AD8495 1
 #elif TEMP_SENSOR_1 == -1
-  #define HEATER_1_USES_AD595 1
+  #define TEMP_SENSOR_1_IS_AD595 1
 #elif TEMP_SENSOR_1 > 0
-  #define THERMISTOR_HEATER_1 TEMP_SENSOR_1
-  #define HEATER_1_USES_THERMISTOR 1
+  #define TEMP_SENSOR_1_THERMISTOR_ID TEMP_SENSOR_1
+  #define TEMP_SENSOR_1_IS_THERMISTOR 1
   #if TEMP_SENSOR_1 == 1000
-    #define HEATER_1_USER_THERMISTOR 1
+    #define TEMP_SENSOR_1_IS_CUSTOM 1
   #elif TEMP_SENSOR_1 == 998 || TEMP_SENSOR_1 == 999
-    #define HEATER_1_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_1_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #endif
 
+#if TEMP_SENSOR_0_IS_MAX31855 || TEMP_SENSOR_1_IS_MAX31855
+  #define HAS_MAX31855 1
+#endif
+#if TEMP_SENSOR_0_IS_MAX31865 || TEMP_SENSOR_1_IS_MAX31865
+  #define HAS_MAX31865 1
+#endif
+#if TEMP_SENSOR_0_IS_MAX6675 || TEMP_SENSOR_1_IS_MAX6675
+  #define HAS_MAX6675 1
+#endif
+
 #if TEMP_SENSOR_2 == -4
-  #define HEATER_2_USES_AD8495 1
+  #define TEMP_SENSOR_2_IS_AD8495 1
 #elif TEMP_SENSOR_2 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
-  #define HEATER_2_USES_AD595 1
+  #define TEMP_SENSOR_2_IS_AD595 1
 #elif TEMP_SENSOR_2 > 0
-  #define THERMISTOR_HEATER_2 TEMP_SENSOR_2
-  #define HEATER_2_USES_THERMISTOR 1
+  #define TEMP_SENSOR_2_THERMISTOR_ID TEMP_SENSOR_2
+  #define TEMP_SENSOR_2_IS_THERMISTOR 1
   #if TEMP_SENSOR_2 == 1000
-    #define HEATER_2_USER_THERMISTOR 1
+    #define TEMP_SENSOR_2_IS_CUSTOM 1
   #elif TEMP_SENSOR_2 == 998 || TEMP_SENSOR_2 == 999
-    #define HEATER_2_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_2_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_2_MINTEMP
   #undef HEATER_2_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_3 == -4
-  #define HEATER_3_USES_AD8495 1
+  #define TEMP_SENSOR_3_IS_AD8495 1
 #elif TEMP_SENSOR_3 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -1
-  #define HEATER_3_USES_AD595 1
+  #define TEMP_SENSOR_3_IS_AD595 1
 #elif TEMP_SENSOR_3 > 0
-  #define THERMISTOR_HEATER_3 TEMP_SENSOR_3
-  #define HEATER_3_USES_THERMISTOR 1
+  #define TEMP_SENSOR_3_THERMISTOR_ID TEMP_SENSOR_3
+  #define TEMP_SENSOR_3_IS_THERMISTOR 1
   #if TEMP_SENSOR_3 == 1000
-    #define HEATER_3_USER_THERMISTOR 1
+    #define TEMP_SENSOR_3_IS_CUSTOM 1
   #elif TEMP_SENSOR_3 == 998 || TEMP_SENSOR_3 == 999
-    #define HEATER_3_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_3_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_3_MINTEMP
   #undef HEATER_3_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_4 == -4
-  #define HEATER_4_USES_AD8495 1
+  #define TEMP_SENSOR_4_IS_AD8495 1
 #elif TEMP_SENSOR_4 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -1
-  #define HEATER_4_USES_AD595 1
+  #define TEMP_SENSOR_4_IS_AD595 1
 #elif TEMP_SENSOR_4 > 0
-  #define THERMISTOR_HEATER_4 TEMP_SENSOR_4
-  #define HEATER_4_USES_THERMISTOR 1
+  #define TEMP_SENSOR_4_THERMISTOR_ID TEMP_SENSOR_4
+  #define TEMP_SENSOR_4_IS_THERMISTOR 1
   #if TEMP_SENSOR_4 == 1000
-    #define HEATER_4_USER_THERMISTOR 1
+    #define TEMP_SENSOR_4_IS_CUSTOM 1
   #elif TEMP_SENSOR_4 == 998 || TEMP_SENSOR_4 == 999
-    #define HEATER_4_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_4_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_5 == -4
-  #define HEATER_5_USES_AD8495 1
+  #define TEMP_SENSOR_5_IS_AD8495 1
 #elif TEMP_SENSOR_5 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -1
-  #define HEATER_5_USES_AD595 1
+  #define TEMP_SENSOR_5_IS_AD595 1
 #elif TEMP_SENSOR_5 > 0
-  #define THERMISTOR_HEATER_5 TEMP_SENSOR_5
-  #define HEATER_5_USES_THERMISTOR 1
+  #define TEMP_SENSOR_5_THERMISTOR_ID TEMP_SENSOR_5
+  #define TEMP_SENSOR_5_IS_THERMISTOR 1
   #if TEMP_SENSOR_5 == 1000
-    #define HEATER_5_USER_THERMISTOR 1
+    #define TEMP_SENSOR_5_IS_CUSTOM 1
   #elif TEMP_SENSOR_5 == 998 || TEMP_SENSOR_5 == 999
-    #define HEATER_5_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_5_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_5_MINTEMP
   #undef HEATER_5_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_6 == -4
-  #define HEATER_6_USES_AD8495 1
+  #define TEMP_SENSOR_6_IS_AD8495 1
 #elif TEMP_SENSOR_6 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_6."
 #elif TEMP_SENSOR_6 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_6."
 #elif TEMP_SENSOR_6 == -1
-  #define HEATER_6_USES_AD595 1
+  #define TEMP_SENSOR_6_IS_AD595 1
 #elif TEMP_SENSOR_6 > 0
-  #define THERMISTOR_HEATER_6 TEMP_SENSOR_6
-  #define HEATER_6_USES_THERMISTOR 1
+  #define TEMP_SENSOR_6_THERMISTOR_ID TEMP_SENSOR_6
+  #define TEMP_SENSOR_6_IS_THERMISTOR 1
   #if TEMP_SENSOR_6 == 1000
-    #define HEATER_6_USER_THERMISTOR 1
+    #define TEMP_SENSOR_6_IS_CUSTOM 1
   #elif TEMP_SENSOR_6 == 998 || TEMP_SENSOR_6 == 999
-    #define HEATER_6_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_6_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_6_MINTEMP
   #undef HEATER_6_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_7 == -4
-  #define HEATER_7_USES_AD8495 1
+  #define TEMP_SENSOR_7_IS_AD8495 1
 #elif TEMP_SENSOR_7 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_7."
 #elif TEMP_SENSOR_7 == -2
   #error "MAX7775 Thermocouples (-2) not supported for TEMP_SENSOR_7."
 #elif TEMP_SENSOR_7 == -1
-  #define HEATER_7_USES_AD595 1
+  #define TEMP_SENSOR_7_IS_AD595 1
 #elif TEMP_SENSOR_7 > 0
-  #define THERMISTOR_HEATER_7 TEMP_SENSOR_7
-  #define HEATER_7_USES_THERMISTOR 1
+  #define TEMP_SENSOR_7_THERMISTOR_ID TEMP_SENSOR_7
+  #define TEMP_SENSOR_7_IS_THERMISTOR 1
   #if TEMP_SENSOR_7 == 1000
-    #define HEATER_7_USER_THERMISTOR 1
+    #define TEMP_SENSOR_7_IS_CUSTOM 1
   #elif TEMP_SENSOR_7 == 998 || TEMP_SENSOR_7 == 999
-    #define HEATER_7_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_7_IS_DUMMY 1
   #endif
 #else
   #undef HEATER_7_MINTEMP
   #undef HEATER_7_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_BED == -4
-  #define HEATER_BED_USES_AD8495 1
+  #define TEMP_SENSOR_BED_IS_AD8495 1
 #elif TEMP_SENSOR_BED == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
-  #define HEATER_BED_USES_AD595 1
+  #define TEMP_SENSOR_BED_IS_AD595 1
 #elif TEMP_SENSOR_BED > 0
-  #define THERMISTORBED TEMP_SENSOR_BED
-  #define HEATER_BED_USES_THERMISTOR 1
+  #define TEMP_SENSOR_BED_THERMISTOR_ID TEMP_SENSOR_BED
+  #define TEMP_SENSOR_BED_IS_THERMISTOR 1
   #if TEMP_SENSOR_BED == 1000
-    #define HEATER_BED_USER_THERMISTOR 1
+    #define TEMP_SENSOR_BED_IS_CUSTOM 1
   #elif TEMP_SENSOR_BED == 998 || TEMP_SENSOR_BED == 999
-    #define HEATER_BED_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_BED_IS_DUMMY 1
   #endif
 #else
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_CHAMBER == -4
-  #define HEATER_CHAMBER_USES_AD8495 1
+  #define TEMP_SENSOR_CHAMBER_IS_AD8495 1
 #elif TEMP_SENSOR_CHAMBER == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -1
-  #define HEATER_CHAMBER_USES_AD595 1
+  #define TEMP_SENSOR_CHAMBER_IS_AD595 1
 #elif TEMP_SENSOR_CHAMBER > 0
-  #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
-  #define HEATER_CHAMBER_USES_THERMISTOR 1
+  #define TEMP_SENSOR_CHAMBER_THERMISTOR_ID TEMP_SENSOR_CHAMBER
+  #define TEMP_SENSOR_CHAMBER_IS_THERMISTOR 1
   #if TEMP_SENSOR_CHAMBER == 1000
-    #define HEATER_CHAMBER_USER_THERMISTOR 1
+    #define TEMP_SENSOR_CHAMBER_IS_CUSTOM 1
   #elif TEMP_SENSOR_CHAMBER == 998 || TEMP_SENSOR_CHAMBER == 999
-    #define HEATER_CHAMBER_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_CHAMBER_IS_DUMMY 1
   #endif
 #else
   #undef CHAMBER_MINTEMP
   #undef CHAMBER_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_PROBE == -4
-  #define HEATER_PROBE_USES_AD8495 1
+  #define TEMP_SENSOR_PROBE_IS_AD8495 1
 #elif TEMP_SENSOR_PROBE == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -1
-  #define HEATER_PROBE_USES_AD595 1
+  #define TEMP_SENSOR_PROBE_IS_AD595 1
 #elif TEMP_SENSOR_PROBE > 0
-  #define THERMISTORPROBE TEMP_SENSOR_PROBE
-  #define HEATER_PROBE_USES_THERMISTOR 1
+  #define TEMP_SENSOR_PROBE_THERMISTOR_ID TEMP_SENSOR_PROBE
+  #define TEMP_SENSOR_PROBE_IS_THERMISTOR 1
   #if TEMP_SENSOR_PROBE == 1000
-    #define HEATER_PROBE_USER_THERMISTOR 1
+    #define TEMP_SENSOR_PROBE_IS_CUSTOM 1
   #elif TEMP_SENSOR_PROBE == 998 || TEMP_SENSOR_PROBE == 999
-    #define HEATER_PROBE_DUMMY_THERMISTOR 1
+    #define TEMP_SENSOR_PROBE_IS_DUMMY 1
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_DIR > 0
     #ifndef X2_MAX_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
@@ -1785,21 +1801,21 @@
 #if PIN_EXISTS(Z4_MAX)
   #define HAS_Z4_MAX 1
 #endif
 #if HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
-#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && NONE(HEATER_##P##_USES_MAX6675, HEATER_##P##_DUMMY_THERMISTOR))
+#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && NONE(TEMP_SENSOR_##P##_IS_MAX_TC, TEMP_SENSOR_##P##_IS_DUMMY))
 #if HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
 #endif
 #if HAS_ADC_TEST(1)
   #define HAS_TEMP_ADC_1 1
 #endif
 #if HAS_ADC_TEST(2)
   #define HAS_TEMP_ADC_2 1
 #endif
 #if HAS_ADC_TEST(3)
@@ -1820,21 +1836,21 @@
 #if HAS_ADC_TEST(BED)
   #define HAS_TEMP_ADC_BED 1
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 
-#define HAS_TEMP(N) ANY(HAS_TEMP_ADC_##N, HEATER_##N##_USES_MAX6675, HEATER_##N##_DUMMY_THERMISTOR)
+#define HAS_TEMP(N) ANY(HAS_TEMP_ADC_##N, TEMP_SENSOR_##N##_IS_MAX_TC, TEMP_SENSOR_##N##_IS_DUMMY)
 #if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
 #if HAS_TEMP(BED)
   #define HAS_TEMP_BED 1
 #endif
 #if HAS_TEMP(PROBE)
   #define HAS_TEMP_PROBE 1
 #endif
 #if HAS_TEMP(CHAMBER)

commit f2726399dded441ab751471a8058831636dfaff6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jan 6 21:32:30 2021 -0600

    Move WRITE_FAN

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 43ed3fabfe..acf8f3620b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2295,21 +2295,20 @@
 #elif HAS_FAN1
   #define FAN_COUNT 2
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else
   #define FAN_COUNT 0
 #endif
 
 #if FAN_COUNT > 0
   #define HAS_FAN 1
-  #define WRITE_FAN(n, v) WRITE(FAN##n##_PIN, (v) ^ FAN_INVERTING)
 #endif
 
 /**
  * Part Cooling fan multipliexer
  */
 #if PIN_EXISTS(FANMUX0)
   #define HAS_FANMUX 1
 #endif
 
 /**

commit d6de6de1bbe796181c342a633ac9487e2bbf2d6e
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Mon Jan 11 00:55:16 2021 -0300

    NO_SD_DETECT option (#20741)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 135867a72b..43ed3fabfe 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -316,20 +316,25 @@
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
 
+  // Extender cable doesn't support SD_DETECT_PIN
+  #if ENABLED(NO_SD_DETECT)
+    #undef SD_DETECT_PIN
+  #endif
+
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define HAS_SHARED_MEDIA 1
   #endif
 

commit 6b458676b1a5477b73ccdd5071ee322fcf23f814
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Jan 3 22:59:48 2021 -0500

    Fix SD SPI Speed override, FTDI mesh edit (#20657)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 388caa9eb1..135867a72b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2701,20 +2701,25 @@
     #define SDSORT_GCODE       false
   #endif
   #ifndef SDSORT_DYNAMIC_RAM
     #define SDSORT_DYNAMIC_RAM false
   #endif
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif
 #endif
 
+// Fallback SPI Speed for SD
+#if ENABLED(SDSUPPORT) && !defined(SD_SPI_SPEED)
+  #define SD_SPI_SPEED SPI_FULL_SPEED
+#endif
+
 // Defined here to catch the above defines
 #if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
   #define HAS_FOLDER_SORTING 1
 #endif
 
 #if HAS_WIRED_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_MARLINUI_U8GLIB
       #define LCD_WIDTH 21

commit c840bbc970c2684c2c9c193ee967c03dd621d99a
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Fri Jan 1 17:31:15 2021 -0300

    Prefix SD SPI pins (SCK, MISO, MOSI, SS) (#20606)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e9ea26aa7a..388caa9eb1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2583,24 +2583,24 @@
   #endif
 #else
   #undef SOUND_MENU_ITEM   // No buzzer menu item without a buzzer
 #endif
 
 /**
  * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
  */
 #if HAS_MARLINUI_U8GLIB
   #ifndef DOGLCD_SCK
-    #define DOGLCD_SCK  SCK_PIN
+    #define DOGLCD_SCK  SD_SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI
-    #define DOGLCD_MOSI MOSI_PIN
+    #define DOGLCD_MOSI SD_MOSI_PIN
   #endif
 #endif
 
 /**
  * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
  */
 #ifndef Z_HOMING_HEIGHT
   #ifdef Z_CLEARANCE_BETWEEN_PROBES
     #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
   #else
@@ -2676,21 +2676,21 @@
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)
-#if defined(TARGET_LPC1768) && IS_RRD_FG_SC && (SCK_PIN == LCD_PINS_D4)
+#if defined(TARGET_LPC1768) && IS_RRD_FG_SC && (SD_SCK_PIN == LCD_PINS_D4)
   #define SDCARD_SORT_ALPHA         // Keep one directory level in RAM. Changing directory levels
                                     // may still glitch the screen, but LCD updates clean it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK
   #undef SDSORT_CACHE_NAMES
   #define SDSORT_LIMIT       64
   #define SDSORT_USES_RAM    true
   #define SDSORT_USES_STACK  false
   #define SDSORT_CACHE_NAMES true

commit 9a8f8f8284cf0f27aa696e7c1b74bb7196c273d8
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sat Dec 19 19:48:31 2020 -0800

    Let boards set Default TMC Slave Addresses (#20498)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3ce7043f4f..e9ea26aa7a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1640,20 +1640,68 @@
   #endif
   #ifndef E5_INTERPOLATE
     #define E5_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E6_INTERPOLATE
     #define E6_INTERPOLATE INTERPOLATE
   #endif
   #ifndef E7_INTERPOLATE
     #define E7_INTERPOLATE INTERPOLATE
   #endif
+  #ifndef X_SLAVE_ADDRESS
+    #define X_SLAVE_ADDRESS  0
+  #endif
+  #ifndef Y_SLAVE_ADDRESS
+    #define Y_SLAVE_ADDRESS  0
+  #endif
+  #ifndef Z_SLAVE_ADDRESS
+    #define Z_SLAVE_ADDRESS  0
+  #endif
+  #ifndef X2_SLAVE_ADDRESS
+    #define X2_SLAVE_ADDRESS 0
+  #endif
+  #ifndef Y2_SLAVE_ADDRESS
+    #define Y2_SLAVE_ADDRESS 0
+  #endif
+  #ifndef Z2_SLAVE_ADDRESS
+    #define Z2_SLAVE_ADDRESS 0
+  #endif
+  #ifndef Z3_SLAVE_ADDRESS
+    #define Z3_SLAVE_ADDRESS 0
+  #endif
+  #ifndef Z4_SLAVE_ADDRESS
+    #define Z4_SLAVE_ADDRESS 0
+  #endif
+  #ifndef E0_SLAVE_ADDRESS
+    #define E0_SLAVE_ADDRESS 0
+  #endif
+  #ifndef E1_SLAVE_ADDRESS
+    #define E1_SLAVE_ADDRESS 0
+  #endif
+  #ifndef E2_SLAVE_ADDRESS
+    #define E2_SLAVE_ADDRESS 0
+  #endif
+  #ifndef E3_SLAVE_ADDRESS
+    #define E3_SLAVE_ADDRESS 0
+  #endif
+  #ifndef E4_SLAVE_ADDRESS
+    #define E4_SLAVE_ADDRESS 0
+  #endif
+  #ifndef E5_SLAVE_ADDRESS
+    #define E5_SLAVE_ADDRESS 0
+  #endif
+  #ifndef E6_SLAVE_ADDRESS
+    #define E6_SLAVE_ADDRESS 0
+  #endif
+  #ifndef E7_SLAVE_ADDRESS
+    #define E7_SLAVE_ADDRESS 0
+  #endif
 #endif
 
 #if (HAS_E_DRIVER(TMC2660) \
   || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
     && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) )
   #define HAS_E_STEPPER_ENABLE 1
 #endif
 
 #if ANY_AXIS_HAS(HW_SERIAL)
   #define HAS_TMC_HW_SERIAL 1

commit e5d0b27aafa9c33931e2abf668e498a3532b3dc2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 18 21:13:37 2020 -0600

    Rename QUIET_PROBING

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3510cb2115..3ce7043f4f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2366,21 +2366,21 @@
 /**
  * Heater, Fan, and Probe interactions
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
   #undef ADAPTIVE_FAN_SLOWING
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
 
 #if HAS_BED_PROBE && (EITHER(PROBING_HEATERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
-  #define QUIET_PROBING 1
+  #define HAS_QUIET_PROBING 1
 #endif
 #if EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
   #define HEATER_IDLE_HANDLER 1
 #endif
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
   #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
 #endif
 
 #if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)

commit fbcc07261d944222cca30ef8590fb387f53fcc70
Author: rafaljot <rafal@jastrzebscy.org>
Date:   Thu Dec 17 13:02:05 2020 +0100

    Homing feedrates as XYZ array (#20426)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 092dc818b8..3510cb2115 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2310,25 +2310,21 @@
   #if BOTH(ENDSTOPPULLUPS, HAS_Z_MIN_PROBE_PIN)
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MAX
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
   #ifndef XY_PROBE_SPEED
-    #ifdef HOMING_FEEDRATE_XY
-      #define XY_PROBE_SPEED HOMING_FEEDRATE_XY
-    #else
-      #define XY_PROBE_SPEED 4000
-    #endif
+    #define XY_PROBE_SPEED ((homing_feedrate_mm_m.x + homing_feedrate_mm_m.y) / 2)
   #endif
   #ifndef NOZZLE_TO_PROBE_OFFSET
     #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
   #endif
 #else
   #undef NOZZLE_TO_PROBE_OFFSET
 #endif
 
 /**
  * XYZ Bed Skew Correction

commit 2c8f5662313f35fb3728fb691615977ac360cd3e
Author: Jason Smith <jason.inet@gmail.com>
Date:   Fri Dec 4 22:02:58 2020 -0800

    Suspend Servos for STM32+NeoPixel (#19963)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index dfecd57749..092dc818b8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1990,20 +1990,23 @@
 #endif
 #if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
   #define HAS_SERVO_2 1
 #endif
 #if PIN_EXISTS(SERVO3) && NUM_SERVOS > 3
   #define HAS_SERVO_3 1
 #endif
 #if NUM_SERVOS > 0
   #define HAS_SERVOS 1
 #endif
+#if HAS_SERVOS && defined(PAUSE_SERVO_OUTPUT) && defined(RESUME_SERVO_OUTPUT)
+  #define HAS_PAUSE_SERVO_OUTPUT 1
+#endif
 
 // Sensors
 #if PIN_EXISTS(FILWIDTH)
   #define HAS_FILAMENT_WIDTH_SENSOR 1
 #endif
 
 // User Interface
 #if PIN_EXISTS(HOME)
   #define HAS_HOME 1
 #endif

commit df0a0c9490346f57e1b8224cb0fe7a1ad46d76bb
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Nov 29 13:00:08 2020 -0800

    Leveling Fade Height default setting (#20316)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 35fd92e10b..dfecd57749 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2441,20 +2441,24 @@
     #define DELTA_TOWER_ANGLE_TRIM { 0, 0, 0 }
   #endif
   #ifndef DELTA_RADIUS_TRIM_TOWER
     #define DELTA_RADIUS_TRIM_TOWER { 0, 0, 0 }
   #endif
   #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
     #define DELTA_DIAGONAL_ROD_TRIM_TOWER { 0, 0, 0 }
   #endif
 #endif
 
+#ifndef DEFAULT_LEVELING_FADE_HEIGHT
+  #define DEFAULT_LEVELING_FADE_HEIGHT 0.0
+#endif
+
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
 #if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius

commit 58eaad703a5e369ab3bf6a1d325b8775d89ede0d
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Nov 22 16:47:52 2020 -0800

    Fix dummy thermistors for Bed, Chamber, Probe (#20247)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4f4787855c..35fd92e10b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1767,26 +1767,33 @@
 #if HAS_ADC_TEST(BED)
   #define HAS_TEMP_ADC_BED 1
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 
-#if HAS_HOTEND && ANY(HAS_TEMP_ADC_0, HEATER_0_USES_MAX6675, HEATER_0_DUMMY_THERMISTOR)
+#define HAS_TEMP(N) ANY(HAS_TEMP_ADC_##N, HEATER_##N##_USES_MAX6675, HEATER_##N##_DUMMY_THERMISTOR)
+#if HAS_HOTEND && HAS_TEMP(0)
   #define HAS_TEMP_HOTEND 1
 #endif
-#define HAS_TEMP_BED        HAS_TEMP_ADC_BED
-#define HAS_TEMP_PROBE      HAS_TEMP_ADC_PROBE
-#define HAS_TEMP_CHAMBER    HAS_TEMP_ADC_CHAMBER
+#if HAS_TEMP(BED)
+  #define HAS_TEMP_BED 1
+#endif
+#if HAS_TEMP(PROBE)
+  #define HAS_TEMP_PROBE 1
+#endif
+#if HAS_TEMP(CHAMBER)
+  #define HAS_TEMP_CHAMBER 1
+#endif
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
   #endif
   #if PIN_EXISTS(JOY_Y)
     #define HAS_JOY_ADC_Y 1
   #endif
   #if PIN_EXISTS(JOY_Z)
     #define HAS_JOY_ADC_Z 1

commit d8a3b9eb3a891258ef3ba75052b0f2ee78a167b9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 1 20:30:58 2020 -0600

    Move core conditionals earlier

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 994d83ffb3..4f4787855c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -113,57 +113,20 @@
  */
 #if ENABLED(DUAL_X_CARRIAGE)
   #ifndef X1_MIN_POS
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
   #endif
 #endif
 
-/**
- * CoreXY, CoreXZ, and CoreYZ - and their reverse
- */
-#if EITHER(COREXY, COREYX)
-  #define CORE_IS_XY 1
-#endif
-#if EITHER(COREXZ, COREZX)
-  #define CORE_IS_XZ 1
-#endif
-#if EITHER(COREYZ, COREZY)
-  #define CORE_IS_YZ 1
-#endif
-#if CORE_IS_XY || CORE_IS_XZ || CORE_IS_YZ
-  #define IS_CORE 1
-#endif
-#if IS_CORE
-  #if CORE_IS_XY
-    #define CORE_AXIS_1 A_AXIS
-    #define CORE_AXIS_2 B_AXIS
-    #define NORMAL_AXIS Z_AXIS
-  #elif CORE_IS_XZ
-    #define CORE_AXIS_1 A_AXIS
-    #define NORMAL_AXIS Y_AXIS
-    #define CORE_AXIS_2 C_AXIS
-  #elif CORE_IS_YZ
-    #define NORMAL_AXIS X_AXIS
-    #define CORE_AXIS_1 B_AXIS
-    #define CORE_AXIS_2 C_AXIS
-  #endif
-  #define CORESIGN(n) (ANY(COREYX, COREZX, COREZY) ? (-(n)) : (n))
-#elif ENABLED(MARKFORGED_XY)
-  // Markforged kinematics
-  #define CORE_AXIS_1 A_AXIS
-  #define CORE_AXIS_2 B_AXIS
-  #define NORMAL_AXIS Z_AXIS
-#endif
-
 // Calibration codes only for non-core axes
 #if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
   #if EITHER(IS_CORE, MARKFORGED_XY)
     #define CAN_CALIBRATE(A,B) (_AXIS(A) == B)
   #else
     #define CAN_CALIBRATE(A,B) 1
   #endif
 #endif
 #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 

commit 11b811820fc09ad0a183ae275006849309f8ec78
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 18 00:13:17 2020 -0600

    USB Media Host followup
    
    Restore HAS_SHARED_MEDIA

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 99a40b016a..994d83ffb3 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -360,20 +360,21 @@
  */
 #if ENABLED(SDSUPPORT)
 
   #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
+    #define HAS_SHARED_MEDIA 1
   #endif
 
   #if PIN_EXISTS(SD_DETECT)
     #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
       #undef SD_DETECT_STATE
       #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE

commit 39305aa47c74822badee716996369b12976ba668
Author: Jason Smith <jason.inet@gmail.com>
Date:   Tue Nov 17 21:59:48 2020 -0800

    Use MANUAL_PROBE_START_Z for UBL manual probing (#20160)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index cae7544fa3..99a40b016a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2596,20 +2596,24 @@
     #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
   #endif
   #ifndef Z_CLEARANCE_MULTI_PROBE
     #define Z_CLEARANCE_MULTI_PROBE Z_CLEARANCE_BETWEEN_PROBES
   #endif
   #if ENABLED(BLTOUCH) && !defined(BLTOUCH_DELAY)
     #define BLTOUCH_DELAY 500
   #endif
 #endif
 
+#if !defined(MANUAL_PROBE_START_Z) && defined(Z_CLEARANCE_BETWEEN_PROBES)
+  #define MANUAL_PROBE_START_Z Z_CLEARANCE_BETWEEN_PROBES
+#endif
+
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
 #if DISABLED(NO_WORKSPACE_OFFSETS)
   #define HAS_POSITION_SHIFT 1
   #if IS_CARTESIAN

commit f1cdd02d4cf616da632bf2b7735e1ef7546a936a
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Wed Nov 18 02:48:14 2020 -0300

    Improve USB Media Host conditions (#20176)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index acb5cc2351..cae7544fa3 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -353,42 +353,40 @@
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
  * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
 
-  #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE) && !defined(ARDUINO_GRAND_CENTRAL_M4)
+  #if HAS_SD_HOST_DRIVE && SD_CONNECTION_IS(ONBOARD)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
-    #define HAS_SHARED_MEDIA 1
   #endif
 
   #if PIN_EXISTS(SD_DETECT)
     #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
       #undef SD_DETECT_STATE
       #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE
       #define SD_DETECT_STATE LOW
     #endif
   #endif
-
 #endif
 
 #if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
   #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X

commit 5768ee0f9ebb09b69b6e3acfe4f1b4876291f169
Author: wmariz <11435639+wmariz@users.noreply.github.com>
Date:   Wed Nov 18 00:54:21 2020 -0300

    Probe Wizard XY position (#20167)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f8727dd963..acb5cc2351 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -93,20 +93,21 @@
 // Require 0,0 bed center for Delta and SCARA
 #if IS_KINEMATIC
   #define BED_CENTER_AT_0_0
 #endif
 
 // Define center values for future use
 #define _X_HALF_BED ((X_BED_SIZE) / 2)
 #define _Y_HALF_BED ((Y_BED_SIZE) / 2)
 #define X_CENTER TERN(BED_CENTER_AT_0_0, 0, _X_HALF_BED)
 #define Y_CENTER TERN(BED_CENTER_AT_0_0, 0, _Y_HALF_BED)
+#define XY_CENTER { X_CENTER, Y_CENTER }
 
 // Get the linear boundaries of the bed
 #define X_MIN_BED (X_CENTER - _X_HALF_BED)
 #define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
 #define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
 #define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
 
 /**
  * Dual X Carriage
  */

commit 4dd2496530d3d42205aaf874bcb6f356685aa464
Author: Jason Smith <jason.inet@gmail.com>
Date:   Mon Nov 16 12:56:59 2020 -0800

    Allow dummy thermistors without pin definitions (#20159)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9fb3e53c4e..f8727dd963 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -451,20 +451,22 @@
   #endif
 #elif TEMP_SENSOR_0 == -4
   #define HEATER_0_USES_AD8495 1
 #elif TEMP_SENSOR_0 == -1
   #define HEATER_0_USES_AD595 1
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTOR_HEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR 1
   #if TEMP_SENSOR_0 == 1000
     #define HEATER_0_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_0 == 998 || TEMP_SENSOR_0 == 999
+    #define HEATER_0_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_1 == -5 || TEMP_SENSOR_1 == -3 || TEMP_SENSOR_1 == -2
   #define HEATER_1_USES_MAX6675 1
   #if TEMP_SENSOR_1 == -3
     #define HEATER_1_MAX6675_TMIN -270
@@ -489,191 +491,211 @@
   #endif
 #elif TEMP_SENSOR_1 == -4
   #define HEATER_1_USES_AD8495 1
 #elif TEMP_SENSOR_1 == -1
   #define HEATER_1_USES_AD595 1
 #elif TEMP_SENSOR_1 > 0
   #define THERMISTOR_HEATER_1 TEMP_SENSOR_1
   #define HEATER_1_USES_THERMISTOR 1
   #if TEMP_SENSOR_1 == 1000
     #define HEATER_1_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_1 == 998 || TEMP_SENSOR_1 == 999
+    #define HEATER_1_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_2 == -4
   #define HEATER_2_USES_AD8495 1
 #elif TEMP_SENSOR_2 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
   #define HEATER_2_USES_AD595 1
 #elif TEMP_SENSOR_2 > 0
   #define THERMISTOR_HEATER_2 TEMP_SENSOR_2
   #define HEATER_2_USES_THERMISTOR 1
   #if TEMP_SENSOR_2 == 1000
     #define HEATER_2_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_2 == 998 || TEMP_SENSOR_2 == 999
+    #define HEATER_2_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef HEATER_2_MINTEMP
   #undef HEATER_2_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_3 == -4
   #define HEATER_3_USES_AD8495 1
 #elif TEMP_SENSOR_3 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -1
   #define HEATER_3_USES_AD595 1
 #elif TEMP_SENSOR_3 > 0
   #define THERMISTOR_HEATER_3 TEMP_SENSOR_3
   #define HEATER_3_USES_THERMISTOR 1
   #if TEMP_SENSOR_3 == 1000
     #define HEATER_3_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_3 == 998 || TEMP_SENSOR_3 == 999
+    #define HEATER_3_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef HEATER_3_MINTEMP
   #undef HEATER_3_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_4 == -4
   #define HEATER_4_USES_AD8495 1
 #elif TEMP_SENSOR_4 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -1
   #define HEATER_4_USES_AD595 1
 #elif TEMP_SENSOR_4 > 0
   #define THERMISTOR_HEATER_4 TEMP_SENSOR_4
   #define HEATER_4_USES_THERMISTOR 1
   #if TEMP_SENSOR_4 == 1000
     #define HEATER_4_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_4 == 998 || TEMP_SENSOR_4 == 999
+    #define HEATER_4_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_5 == -4
   #define HEATER_5_USES_AD8495 1
 #elif TEMP_SENSOR_5 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -1
   #define HEATER_5_USES_AD595 1
 #elif TEMP_SENSOR_5 > 0
   #define THERMISTOR_HEATER_5 TEMP_SENSOR_5
   #define HEATER_5_USES_THERMISTOR 1
   #if TEMP_SENSOR_5 == 1000
     #define HEATER_5_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_5 == 998 || TEMP_SENSOR_5 == 999
+    #define HEATER_5_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef HEATER_5_MINTEMP
   #undef HEATER_5_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_6 == -4
   #define HEATER_6_USES_AD8495 1
 #elif TEMP_SENSOR_6 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_6."
 #elif TEMP_SENSOR_6 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_6."
 #elif TEMP_SENSOR_6 == -1
   #define HEATER_6_USES_AD595 1
 #elif TEMP_SENSOR_6 > 0
   #define THERMISTOR_HEATER_6 TEMP_SENSOR_6
   #define HEATER_6_USES_THERMISTOR 1
   #if TEMP_SENSOR_6 == 1000
     #define HEATER_6_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_6 == 998 || TEMP_SENSOR_6 == 999
+    #define HEATER_6_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef HEATER_6_MINTEMP
   #undef HEATER_6_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_7 == -4
   #define HEATER_7_USES_AD8495 1
 #elif TEMP_SENSOR_7 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_7."
 #elif TEMP_SENSOR_7 == -2
   #error "MAX7775 Thermocouples (-2) not supported for TEMP_SENSOR_7."
 #elif TEMP_SENSOR_7 == -1
   #define HEATER_7_USES_AD595 1
 #elif TEMP_SENSOR_7 > 0
   #define THERMISTOR_HEATER_7 TEMP_SENSOR_7
   #define HEATER_7_USES_THERMISTOR 1
   #if TEMP_SENSOR_7 == 1000
     #define HEATER_7_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_7 == 998 || TEMP_SENSOR_7 == 999
+    #define HEATER_7_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef HEATER_7_MINTEMP
   #undef HEATER_7_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_BED == -4
   #define HEATER_BED_USES_AD8495 1
 #elif TEMP_SENSOR_BED == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
   #define HEATER_BED_USES_AD595 1
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
   #define HEATER_BED_USES_THERMISTOR 1
   #if TEMP_SENSOR_BED == 1000
     #define HEATER_BED_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_BED == 998 || TEMP_SENSOR_BED == 999
+    #define HEATER_BED_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_CHAMBER == -4
   #define HEATER_CHAMBER_USES_AD8495 1
 #elif TEMP_SENSOR_CHAMBER == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -1
   #define HEATER_CHAMBER_USES_AD595 1
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define HEATER_CHAMBER_USES_THERMISTOR 1
   #if TEMP_SENSOR_CHAMBER == 1000
     #define HEATER_CHAMBER_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_CHAMBER == 998 || TEMP_SENSOR_CHAMBER == 999
+    #define HEATER_CHAMBER_DUMMY_THERMISTOR 1
   #endif
 #else
   #undef CHAMBER_MINTEMP
   #undef CHAMBER_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_PROBE == -4
   #define HEATER_PROBE_USES_AD8495 1
 #elif TEMP_SENSOR_PROBE == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -1
   #define HEATER_PROBE_USES_AD595 1
 #elif TEMP_SENSOR_PROBE > 0
   #define THERMISTORPROBE TEMP_SENSOR_PROBE
   #define HEATER_PROBE_USES_THERMISTOR 1
   #if TEMP_SENSOR_PROBE == 1000
     #define HEATER_PROBE_USER_THERMISTOR 1
+  #elif TEMP_SENSOR_PROBE == 998 || TEMP_SENSOR_PROBE == 999
+    #define HEATER_PROBE_DUMMY_THERMISTOR 1
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_DIR > 0
     #ifndef X2_MAX_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
@@ -1747,21 +1769,21 @@
 #if PIN_EXISTS(Z4_MAX)
   #define HAS_Z4_MAX 1
 #endif
 #if HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE)
   #define HAS_Z_MIN_PROBE_PIN 1
 #endif
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
-#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
+#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && NONE(HEATER_##P##_USES_MAX6675, HEATER_##P##_DUMMY_THERMISTOR))
 #if HAS_ADC_TEST(0)
   #define HAS_TEMP_ADC_0 1
 #endif
 #if HAS_ADC_TEST(1)
   #define HAS_TEMP_ADC_1 1
 #endif
 #if HAS_ADC_TEST(2)
   #define HAS_TEMP_ADC_2 1
 #endif
 #if HAS_ADC_TEST(3)
@@ -1782,21 +1804,21 @@
 #if HAS_ADC_TEST(BED)
   #define HAS_TEMP_ADC_BED 1
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 
-#if HAS_HOTEND && EITHER(HAS_TEMP_ADC_0, HEATER_0_USES_MAX6675)
+#if HAS_HOTEND && ANY(HAS_TEMP_ADC_0, HEATER_0_USES_MAX6675, HEATER_0_DUMMY_THERMISTOR)
   #define HAS_TEMP_HOTEND 1
 #endif
 #define HAS_TEMP_BED        HAS_TEMP_ADC_BED
 #define HAS_TEMP_PROBE      HAS_TEMP_ADC_PROBE
 #define HAS_TEMP_CHAMBER    HAS_TEMP_ADC_CHAMBER
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
   #endif

commit 40d442fde294faedf839e3a80c82cd72c1824ba8
Author: JoAnn Manges <joannmanges@gmail.com>
Date:   Wed Nov 11 16:52:35 2020 -0500

    Fix MAX31865 on SPI (PT100/1000) support (#20074)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9eeb39f9a8..9fb3e53c4e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -438,23 +438,23 @@
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675 1
   #if TEMP_SENSOR_0 == -3
     #define HEATER_0_MAX6675_TMIN -270
     #define HEATER_0_MAX6675_TMAX 1800
   #else
     #define HEATER_0_MAX6675_TMIN    0
     #define HEATER_0_MAX6675_TMAX 1024
   #endif
   #if TEMP_SENSOR_0 == -5
-    #define MAX6675_IS_MAX31865 1
+    #define MAX6675_0_IS_MAX31865 1
   #elif TEMP_SENSOR_0 == -3
-    #define MAX6675_IS_MAX31855 1
+    #define MAX6675_0_IS_MAX31855 1
   #endif
 #elif TEMP_SENSOR_0 == -4
   #define HEATER_0_USES_AD8495 1
 #elif TEMP_SENSOR_0 == -1
   #define HEATER_0_USES_AD595 1
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTOR_HEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR 1
   #if TEMP_SENSOR_0 == 1000
     #define HEATER_0_USER_THERMISTOR 1
@@ -466,20 +466,25 @@
 
 #if TEMP_SENSOR_1 == -5 || TEMP_SENSOR_1 == -3 || TEMP_SENSOR_1 == -2
   #define HEATER_1_USES_MAX6675 1
   #if TEMP_SENSOR_1 == -3
     #define HEATER_1_MAX6675_TMIN -270
     #define HEATER_1_MAX6675_TMAX 1800
   #else
     #define HEATER_1_MAX6675_TMIN    0
     #define HEATER_1_MAX6675_TMAX 1024
   #endif
+  #if TEMP_SENSOR_1 == -5
+    #define MAX6675_1_IS_MAX31865 1
+  #elif TEMP_SENSOR_1 == -3
+    #define MAX6675_1_IS_MAX31855 1
+  #endif
   #if TEMP_SENSOR_1 != TEMP_SENSOR_0
     #if   TEMP_SENSOR_1 == -5
       #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -3
       #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -2
       #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #endif
   #endif
 #elif TEMP_SENSOR_1 == -4

commit 59eca253e1518f17e1ffe962ffc6e7bfa0db49a3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Nov 9 01:17:37 2020 -0600

    Simplified temp sensor conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a8e619fb3b..9eeb39f9a8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -429,253 +429,249 @@
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #if ANY_TEMP_SENSOR_IS(1000)
   #define HAS_USER_THERMISTORS 1
 #endif
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
-  #define HEATER_0_USES_MAX6675
+  #define HEATER_0_USES_MAX6675 1
   #if TEMP_SENSOR_0 == -3
     #define HEATER_0_MAX6675_TMIN -270
     #define HEATER_0_MAX6675_TMAX 1800
   #else
     #define HEATER_0_MAX6675_TMIN    0
     #define HEATER_0_MAX6675_TMAX 1024
   #endif
   #if TEMP_SENSOR_0 == -5
-    #define MAX6675_IS_MAX31865
+    #define MAX6675_IS_MAX31865 1
   #elif TEMP_SENSOR_0 == -3
-    #define MAX6675_IS_MAX31855
+    #define MAX6675_IS_MAX31855 1
   #endif
 #elif TEMP_SENSOR_0 == -4
-  #define HEATER_0_USES_AD8495
+  #define HEATER_0_USES_AD8495 1
 #elif TEMP_SENSOR_0 == -1
-  #define HEATER_0_USES_AD595
+  #define HEATER_0_USES_AD595 1
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTOR_HEATER_0 TEMP_SENSOR_0
-  #define HEATER_0_USES_THERMISTOR
+  #define HEATER_0_USES_THERMISTOR 1
   #if TEMP_SENSOR_0 == 1000
-    #define HEATER_0_USER_THERMISTOR
+    #define HEATER_0_USER_THERMISTOR 1
   #endif
 #else
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_1 == -5 || TEMP_SENSOR_1 == -3 || TEMP_SENSOR_1 == -2
-  #define HEATER_1_USES_MAX6675
+  #define HEATER_1_USES_MAX6675 1
   #if TEMP_SENSOR_1 == -3
     #define HEATER_1_MAX6675_TMIN -270
     #define HEATER_1_MAX6675_TMAX 1800
   #else
     #define HEATER_1_MAX6675_TMIN    0
     #define HEATER_1_MAX6675_TMAX 1024
   #endif
   #if TEMP_SENSOR_1 != TEMP_SENSOR_0
     #if   TEMP_SENSOR_1 == -5
       #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -3
       #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #elif TEMP_SENSOR_1 == -2
       #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
     #endif
   #endif
 #elif TEMP_SENSOR_1 == -4
-  #define HEATER_1_USES_AD8495
+  #define HEATER_1_USES_AD8495 1
 #elif TEMP_SENSOR_1 == -1
-  #define HEATER_1_USES_AD595
+  #define HEATER_1_USES_AD595 1
 #elif TEMP_SENSOR_1 > 0
   #define THERMISTOR_HEATER_1 TEMP_SENSOR_1
-  #define HEATER_1_USES_THERMISTOR
+  #define HEATER_1_USES_THERMISTOR 1
   #if TEMP_SENSOR_1 == 1000
-    #define HEATER_1_USER_THERMISTOR
+    #define HEATER_1_USER_THERMISTOR 1
   #endif
 #else
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_2 == -4
-  #define HEATER_2_USES_AD8495
+  #define HEATER_2_USES_AD8495 1
 #elif TEMP_SENSOR_2 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
-  #define HEATER_2_USES_AD595
+  #define HEATER_2_USES_AD595 1
 #elif TEMP_SENSOR_2 > 0
   #define THERMISTOR_HEATER_2 TEMP_SENSOR_2
-  #define HEATER_2_USES_THERMISTOR
+  #define HEATER_2_USES_THERMISTOR 1
   #if TEMP_SENSOR_2 == 1000
-    #define HEATER_2_USER_THERMISTOR
+    #define HEATER_2_USER_THERMISTOR 1
   #endif
 #else
   #undef HEATER_2_MINTEMP
   #undef HEATER_2_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_3 == -4
-  #define HEATER_3_USES_AD8495
+  #define HEATER_3_USES_AD8495 1
 #elif TEMP_SENSOR_3 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -1
-  #define HEATER_3_USES_AD595
+  #define HEATER_3_USES_AD595 1
 #elif TEMP_SENSOR_3 > 0
   #define THERMISTOR_HEATER_3 TEMP_SENSOR_3
-  #define HEATER_3_USES_THERMISTOR
+  #define HEATER_3_USES_THERMISTOR 1
   #if TEMP_SENSOR_3 == 1000
-    #define HEATER_3_USER_THERMISTOR
+    #define HEATER_3_USER_THERMISTOR 1
   #endif
 #else
   #undef HEATER_3_MINTEMP
   #undef HEATER_3_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_4 == -4
-  #define HEATER_4_USES_AD8495
+  #define HEATER_4_USES_AD8495 1
 #elif TEMP_SENSOR_4 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -1
-  #define HEATER_4_USES_AD595
+  #define HEATER_4_USES_AD595 1
 #elif TEMP_SENSOR_4 > 0
   #define THERMISTOR_HEATER_4 TEMP_SENSOR_4
-  #define HEATER_4_USES_THERMISTOR
+  #define HEATER_4_USES_THERMISTOR 1
   #if TEMP_SENSOR_4 == 1000
-    #define HEATER_4_USER_THERMISTOR
+    #define HEATER_4_USER_THERMISTOR 1
   #endif
 #else
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_5 == -4
-  #define HEATER_5_USES_AD8495
+  #define HEATER_5_USES_AD8495 1
 #elif TEMP_SENSOR_5 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -1
-  #define HEATER_5_USES_AD595
+  #define HEATER_5_USES_AD595 1
 #elif TEMP_SENSOR_5 > 0
   #define THERMISTOR_HEATER_5 TEMP_SENSOR_5
-  #define HEATER_5_USES_THERMISTOR
+  #define HEATER_5_USES_THERMISTOR 1
   #if TEMP_SENSOR_5 == 1000
-    #define HEATER_5_USER_THERMISTOR
+    #define HEATER_5_USER_THERMISTOR 1
   #endif
 #else
   #undef HEATER_5_MINTEMP
   #undef HEATER_5_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_6 == -4
-  #define HEATER_6_USES_AD8495
+  #define HEATER_6_USES_AD8495 1
 #elif TEMP_SENSOR_6 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_6."
 #elif TEMP_SENSOR_6 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_6."
 #elif TEMP_SENSOR_6 == -1
-  #define HEATER_6_USES_AD595
+  #define HEATER_6_USES_AD595 1
 #elif TEMP_SENSOR_6 > 0
   #define THERMISTOR_HEATER_6 TEMP_SENSOR_6
-  #define HEATER_6_USES_THERMISTOR
+  #define HEATER_6_USES_THERMISTOR 1
   #if TEMP_SENSOR_6 == 1000
-    #define HEATER_6_USER_THERMISTOR
+    #define HEATER_6_USER_THERMISTOR 1
   #endif
 #else
   #undef HEATER_6_MINTEMP
   #undef HEATER_6_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_7 == -4
-  #define HEATER_7_USES_AD8495
+  #define HEATER_7_USES_AD8495 1
 #elif TEMP_SENSOR_7 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_7."
 #elif TEMP_SENSOR_7 == -2
   #error "MAX7775 Thermocouples (-2) not supported for TEMP_SENSOR_7."
 #elif TEMP_SENSOR_7 == -1
-  #define HEATER_7_USES_AD595
+  #define HEATER_7_USES_AD595 1
 #elif TEMP_SENSOR_7 > 0
   #define THERMISTOR_HEATER_7 TEMP_SENSOR_7
-  #define HEATER_7_USES_THERMISTOR
+  #define HEATER_7_USES_THERMISTOR 1
   #if TEMP_SENSOR_7 == 1000
-    #define HEATER_7_USER_THERMISTOR
+    #define HEATER_7_USER_THERMISTOR 1
   #endif
 #else
   #undef HEATER_7_MINTEMP
   #undef HEATER_7_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_BED == -4
-  #define HEATER_BED_USES_AD8495
+  #define HEATER_BED_USES_AD8495 1
 #elif TEMP_SENSOR_BED == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
-  #define HEATER_BED_USES_AD595
+  #define HEATER_BED_USES_AD595 1
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
-  #define HEATER_BED_USES_THERMISTOR
+  #define HEATER_BED_USES_THERMISTOR 1
   #if TEMP_SENSOR_BED == 1000
-    #define HEATER_BED_USER_THERMISTOR
+    #define HEATER_BED_USER_THERMISTOR 1
   #endif
 #else
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_CHAMBER == -4
-  #define HEATER_CHAMBER_USES_AD8495
+  #define HEATER_CHAMBER_USES_AD8495 1
 #elif TEMP_SENSOR_CHAMBER == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -1
-  #define HEATER_CHAMBER_USES_AD595
+  #define HEATER_CHAMBER_USES_AD595 1
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
-  #define HEATER_CHAMBER_USES_THERMISTOR
+  #define HEATER_CHAMBER_USES_THERMISTOR 1
   #if TEMP_SENSOR_CHAMBER == 1000
-    #define HEATER_CHAMBER_USER_THERMISTOR
+    #define HEATER_CHAMBER_USER_THERMISTOR 1
   #endif
 #else
   #undef CHAMBER_MINTEMP
   #undef CHAMBER_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_PROBE == -4
-  #define HEATER_PROBE_USES_AD8495
+  #define HEATER_PROBE_USES_AD8495 1
 #elif TEMP_SENSOR_PROBE == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_PROBE."
 #elif TEMP_SENSOR_PROBE == -1
-  #define HEATER_PROBE_USES_AD595
+  #define HEATER_PROBE_USES_AD595 1
 #elif TEMP_SENSOR_PROBE > 0
   #define THERMISTORPROBE TEMP_SENSOR_PROBE
-  #define PROBE_USES_THERMISTOR
+  #define HEATER_PROBE_USES_THERMISTOR 1
   #if TEMP_SENSOR_PROBE == 1000
-    #define PROBE_USER_THERMISTOR
+    #define HEATER_PROBE_USER_THERMISTOR 1
   #endif
 #endif
 
-#define HOTEND_USES_THERMISTOR ANY( \
-  HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, HEATER_3_USES_THERMISTOR, \
-  HEATER_4_USES_THERMISTOR, HEATER_5_USES_THERMISTOR, HEATER_6_USES_THERMISTOR, HEATER_7_USES_THERMISTOR )
-
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_DIR > 0
     #ifndef X2_MAX_ENDSTOP_INVERTING
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING

commit 4ace02f4c2b6eda750412feaa661c856fe7a8674
Author: Hebezo <Kannix2005@users.noreply.github.com>
Date:   Mon Nov 9 01:37:41 2020 +0100

    Add POWER_OFF_DELAY option (#19987)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bbbcf6fb2f..a8e619fb3b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -409,22 +409,27 @@
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_STATE
     #define PSU_NAME "XBox"     // X-Box 360 (203W)
   #else
     #define PSU_NAME "ATX"      // ATX style
   #endif
 #endif
 
-#if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL)
-  #define PSU_POWERUP_DELAY 250
+#if ENABLED(PSU_CONTROL)
+  #ifndef PSU_POWERUP_DELAY
+    #define PSU_POWERUP_DELAY 250
+  #endif
+  #ifndef POWER_OFF_DELAY
+    #define POWER_OFF_DELAY   0
+  #endif
 #endif
 
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #if ANY_TEMP_SENSOR_IS(1000)
   #define HAS_USER_THERMISTORS 1

commit c0b4f4eb47ee9d657581035737383d15b3706b79
Author: Lucas Seiki Oshiro <lucasseikioshiro@gmail.com>
Date:   Tue Oct 27 22:41:12 2020 -0300

    "Sound: ON/OFF" menu item (#19901)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bb717ba097..bbbcf6fb2f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2498,45 +2498,49 @@
 #if _POINT_COUNT == 6
   #define HAS_FIXED_3POINT 1
 #elif _POINT_COUNT > 0
   #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
 #undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
-#if PIN_EXISTS(BEEPER) || ANY(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+#if PIN_EXISTS(BEEPER)
+  #define USE_BEEPER 1
+#endif
+#if USE_BEEPER || ANY(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
   #define HAS_BUZZER 1
-  #if PIN_EXISTS(BEEPER)
-    #define USE_BEEPER 1
-  #endif
 #endif
 
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif
 #elif HAS_BUZZER
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 5000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
 #endif
 
-#if HAS_BUZZER && LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
-  #define HAS_CHIRP 1
+#if HAS_BUZZER
+  #if LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
+    #define HAS_CHIRP 1
+  #endif
+#else
+  #undef SOUND_MENU_ITEM   // No buzzer menu item without a buzzer
 #endif
 
 /**
  * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
  */
 #if HAS_MARLINUI_U8GLIB
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI

commit 4fccb92e072463bd6147b2ce22352b79337cb53c
Author: ManuelMcLure <manuel@mclure.org>
Date:   Thu Oct 22 04:27:33 2020 -0700

    Configure TMC interpolation per driver (#19828)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3587d82cda..bb717ba097 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1601,20 +1601,68 @@
     #define Z3_SENSORLESS 1
   #endif
   #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
     #define Z4_SENSORLESS 1
   #endif
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
     #define Y_SPI_SENSORLESS Y_SENSORLESS
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
+  #ifndef X_INTERPOLATE
+    #define X_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef X2_INTERPOLATE
+    #define X2_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef Y_INTERPOLATE
+    #define Y_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef Y2_INTERPOLATE
+    #define Y2_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef Z_INTERPOLATE
+    #define Z_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef Z2_INTERPOLATE
+    #define Z2_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef Z3_INTERPOLATE
+    #define Z3_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef Z4_INTERPOLATE
+    #define Z4_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef E0_INTERPOLATE
+    #define E0_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef E1_INTERPOLATE
+    #define E1_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef E2_INTERPOLATE
+    #define E2_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef E3_INTERPOLATE
+    #define E3_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef E4_INTERPOLATE
+    #define E4_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef E5_INTERPOLATE
+    #define E5_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef E6_INTERPOLATE
+    #define E6_INTERPOLATE INTERPOLATE
+  #endif
+  #ifndef E7_INTERPOLATE
+    #define E7_INTERPOLATE INTERPOLATE
+  #endif
 #endif
 
 #if (HAS_E_DRIVER(TMC2660) \
   || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
     && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) )
   #define HAS_E_STEPPER_ENABLE 1
 #endif
 
 #if ANY_AXIS_HAS(HW_SERIAL)
   #define HAS_TMC_HW_SERIAL 1

commit 050ba0e0a09312f9ce46de1b92ee09f9f792228d
Author: Jason Smith <jason.inet@gmail.com>
Date:   Fri Oct 16 15:04:10 2020 -0700

    LCD conditionals followup (#19766)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 581b36932a..3587d82cda 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2607,28 +2607,28 @@
 #if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
   #define HAS_FOLDER_SORTING 1
 #endif
 
 #if HAS_WIRED_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_MARLINUI_U8GLIB
       #define LCD_WIDTH 21
     #else
-      #define LCD_WIDTH TERN(ULTIPANEL, 20, 16)
+      #define LCD_WIDTH TERN(IS_ULTIPANEL, 20, 16)
     #endif
   #endif
   #ifndef LCD_HEIGHT
     #if HAS_MARLINUI_U8GLIB
       #define LCD_HEIGHT 5
     #else
-      #define LCD_HEIGHT TERN(ULTIPANEL, 4, 2)
+      #define LCD_HEIGHT TERN(IS_ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE

commit f6ffbe548c81abfeecc996c8f2bffd27cabe0014
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 15 03:00:27 2020 -0500

    TFT Presets, Generic options, Sanity checks (#19723)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 798bf009c6..581b36932a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -376,21 +376,21 @@
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE
       #define SD_DETECT_STATE LOW
     #endif
   #endif
 
 #endif
 
-#if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, FSMC_GRAPHICAL_TFT, SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
+#if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, HAS_FSMC_GRAPHICAL_TFT, HAS_SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
   #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y
@@ -2571,21 +2571,21 @@
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)
-#if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER) && (SCK_PIN == LCD_PINS_D4)
+#if defined(TARGET_LPC1768) && IS_RRD_FG_SC && (SCK_PIN == LCD_PINS_D4)
   #define SDCARD_SORT_ALPHA         // Keep one directory level in RAM. Changing directory levels
                                     // may still glitch the screen, but LCD updates clean it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK
   #undef SDSORT_CACHE_NAMES
   #define SDSORT_LIMIT       64
   #define SDSORT_USES_RAM    true
   #define SDSORT_USES_STACK  false
   #define SDSORT_CACHE_NAMES true

commit 492ba2a111ce541513d4515c4af3f57ceaa897ea
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Oct 11 14:58:35 2020 -0500

    Digipots refactor / cleanup (#19690)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f832137f5b..798bf009c6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1969,21 +1969,21 @@
 #endif
 #if PIN_EXISTS(PHOTOGRAPH)
   #define HAS_PHOTOGRAPH 1
 #endif
 
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
-  #define HAS_DIGIPOTSS 1
+  #define HAS_MOTOR_CURRENT_SPI 1
 #endif
 #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1

commit 6fdaaf3d203002fb7b437e86cd3aaa80e5da77bd
Author: Serhiy-K <52166448+Serhiy-K@users.noreply.github.com>
Date:   Sat Oct 10 13:01:46 2020 +0300

    Fixes for TFTGLCD Panel, FastIO (#19614)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 80c42955e9..f832137f5b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2450,21 +2450,21 @@
 #if _POINT_COUNT == 6
   #define HAS_FIXED_3POINT 1
 #elif _POINT_COUNT > 0
   #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
 #undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
-#if PIN_EXISTS(BEEPER) || ANY(LCD_USE_I2C_BUZZER, PCA9632_BUZZER, IS_TFTGLCD_PANEL)
+#if PIN_EXISTS(BEEPER) || ANY(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
   #define HAS_BUZZER 1
   #if PIN_EXISTS(BEEPER)
     #define USE_BEEPER 1
   #endif
 #endif
 
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif

commit 27bdf4b24e8da06ea7923b6382f38b5fb6292914
Author: Serhiy-K <52166448+Serhiy-K@users.noreply.github.com>
Date:   Mon Sep 28 09:52:38 2020 +0300

    MarlinUI for SPI/I2C TFT-GLCD character-based display bridge (#19375)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bf297b633f..80c42955e9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -311,20 +311,24 @@
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)
   #define _LCD_CONTRAST_INIT 150
 #elif ENABLED(ZONESTAR_12864OLED)
   #define _LCD_CONTRAST_MIN   64
   #define _LCD_CONTRAST_INIT 128
   #define _LCD_CONTRAST_MAX  255
+#elif IS_TFTGLCD_PANEL
+  #define _LCD_CONTRAST_MIN    0
+  #define _LCD_CONTRAST_INIT 250
+  #define _LCD_CONTRAST_MAX  255
 #endif
 
 #ifdef _LCD_CONTRAST_INIT
   #define HAS_LCD_CONTRAST 1
 #endif
 
 #if HAS_LCD_CONTRAST
   #ifndef LCD_CONTRAST_MIN
     #ifdef _LCD_CONTRAST_MIN
       #define LCD_CONTRAST_MIN _LCD_CONTRAST_MIN
@@ -2446,21 +2450,21 @@
 #if _POINT_COUNT == 6
   #define HAS_FIXED_3POINT 1
 #elif _POINT_COUNT > 0
   #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
 #undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
-#if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+#if PIN_EXISTS(BEEPER) || ANY(LCD_USE_I2C_BUZZER, PCA9632_BUZZER, IS_TFTGLCD_PANEL)
   #define HAS_BUZZER 1
   #if PIN_EXISTS(BEEPER)
     #define USE_BEEPER 1
   #endif
 #endif
 
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif

commit c2c6a679ea4bdf48ce1800a8831fcec36c09ce53
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 28 01:13:27 2020 -0500

    Rename LCD conditionals (#19533)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c9a29b351c..bf297b633f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -306,21 +306,21 @@
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)
-  #define _LCD_CONTRAST_INIT  150
+  #define _LCD_CONTRAST_INIT 150
 #elif ENABLED(ZONESTAR_12864OLED)
   #define _LCD_CONTRAST_MIN   64
   #define _LCD_CONTRAST_INIT 128
   #define _LCD_CONTRAST_MAX  255
 #endif
 
 #ifdef _LCD_CONTRAST_INIT
   #define HAS_LCD_CONTRAST 1
 #endif
 
@@ -2448,21 +2448,21 @@
 #elif _POINT_COUNT > 0
   #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
 #undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
 #if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
   #define HAS_BUZZER 1
-  #if NONE(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+  #if PIN_EXISTS(BEEPER)
     #define USE_BEEPER 1
   #endif
 #endif
 
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
@@ -2476,21 +2476,21 @@
   #endif
 #endif
 
 #if HAS_BUZZER && LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
   #define HAS_CHIRP 1
 #endif
 
 /**
  * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
  */
-#if HAS_GRAPHICAL_LCD
+#if HAS_MARLINUI_U8GLIB
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI
     #define DOGLCD_MOSI MOSI_PIN
   #endif
 #endif
 
 /**
  * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
@@ -2597,31 +2597,31 @@
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif
 #endif
 
 // Defined here to catch the above defines
 #if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
   #define HAS_FOLDER_SORTING 1
 #endif
 
-#if HAS_SPI_LCD
+#if HAS_WIRED_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
-    #if HAS_GRAPHICAL_LCD
+    #if HAS_MARLINUI_U8GLIB
       #define LCD_WIDTH 21
     #else
       #define LCD_WIDTH TERN(ULTIPANEL, 20, 16)
     #endif
   #endif
   #ifndef LCD_HEIGHT
-    #if HAS_GRAPHICAL_LCD
+    #if HAS_MARLINUI_U8GLIB
       #define LCD_HEIGHT 5
     #else
       #define LCD_HEIGHT TERN(ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if BUTTONS_EXIST(EN1, EN2, ENC)
   #define HAS_ROTARY_ENCODER 1
 #endif

commit 4f73ac728991eed39946d1fdfff65d294b744a3f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 20 19:08:08 2020 -0500

    Add HAS_ROTARY_ENCODER

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2ae4f4e399..c9a29b351c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2615,15 +2615,19 @@
   #endif
   #ifndef LCD_HEIGHT
     #if HAS_GRAPHICAL_LCD
       #define LCD_HEIGHT 5
     #else
       #define LCD_HEIGHT TERN(ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
+#if BUTTONS_EXIST(EN1, EN2, ENC)
+  #define HAS_ROTARY_ENCODER 1
+#endif
+
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
 #elif NUM_SERIAL > 1
   #define HAS_MULTI_SERIAL 1
 #endif

commit 76d8d1742c1d4a1efe0fd6c0645d3fc656bfd0b2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 20 18:29:08 2020 -0500

    Add multi-extruder condition

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2b232623a3..2ae4f4e399 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2327,21 +2327,21 @@
   #define QUIET_PROBING 1
 #endif
 #if EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
   #define HEATER_IDLE_HANDLER 1
 #endif
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
   #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
 #endif
 
-#if EXTRUDERS > 1 && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
+#if HAS_MULTI_EXTRUDER && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
   #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
 
 /**
  * Only constrain Z on DELTA / SCARA machines
  */
 #if IS_KINEMATIC
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X

commit 4628f0e237d452a7c6633c3d6127a460b3bb477b
Author: Cole Markham <github@themarkhams.us>
Date:   Sat Sep 19 08:14:34 2020 -0500

    Fix CoreXY compile with backlash cal. (#19422)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 71ae4bb285..2b232623a3 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -152,24 +152,21 @@
 #elif ENABLED(MARKFORGED_XY)
   // Markforged kinematics
   #define CORE_AXIS_1 A_AXIS
   #define CORE_AXIS_2 B_AXIS
   #define NORMAL_AXIS Z_AXIS
 #endif
 
 // Calibration codes only for non-core axes
 #if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
   #if EITHER(IS_CORE, MARKFORGED_XY)
-    #define X_AXIS_INDEX 0
-    #define Y_AXIS_INDEX 1
-    #define Z_AXIS_INDEX 2
-    #define CAN_CALIBRATE(A,B) (A##_AXIS_INDEX == B##_INDEX)
+    #define CAN_CALIBRATE(A,B) (_AXIS(A) == B)
   #else
     #define CAN_CALIBRATE(A,B) 1
   #endif
 #endif
 #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC

commit 5c3140811d499caad9376b1316b7a1f12f64b335
Author: Jason Smith <jason.inet@gmail.com>
Date:   Mon Sep 7 15:07:53 2020 -0700

    TFT is neither "graphical" nor "character" (#19297)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 89dc73fb5c..71ae4bb285 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2605,28 +2605,28 @@
 // Defined here to catch the above defines
 #if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
   #define HAS_FOLDER_SORTING 1
 #endif
 
 #if HAS_SPI_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_GRAPHICAL_LCD
       #define LCD_WIDTH 21
-    #elif HAS_CHARACTER_LCD
+    #else
       #define LCD_WIDTH TERN(ULTIPANEL, 20, 16)
     #endif
   #endif
   #ifndef LCD_HEIGHT
     #if HAS_GRAPHICAL_LCD
       #define LCD_HEIGHT 5
-    #elif HAS_CHARACTER_LCD
+    #else
       #define LCD_HEIGHT TERN(ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
 #elif NUM_SERIAL > 1
   #define HAS_MULTI_SERIAL 1
 #endif

commit a445746a8b6dd752de725eb67d264153c3b393d7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 6 21:40:58 2020 -0500

    Clean up LCD conditionals, DWIN

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 71ae4bb285..89dc73fb5c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2605,28 +2605,28 @@
 // Defined here to catch the above defines
 #if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
   #define HAS_FOLDER_SORTING 1
 #endif
 
 #if HAS_SPI_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_GRAPHICAL_LCD
       #define LCD_WIDTH 21
-    #else
+    #elif HAS_CHARACTER_LCD
       #define LCD_WIDTH TERN(ULTIPANEL, 20, 16)
     #endif
   #endif
   #ifndef LCD_HEIGHT
     #if HAS_GRAPHICAL_LCD
       #define LCD_HEIGHT 5
-    #else
+    #elif HAS_CHARACTER_LCD
       #define LCD_HEIGHT TERN(ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
 #elif NUM_SERIAL > 1
   #define HAS_MULTI_SERIAL 1
 #endif

commit e97e6865c3e587a04ae2878e72a8dfb137534b7e
Author: Victor Sokolov <gzigzigzeo@gmail.com>
Date:   Fri Sep 4 05:12:53 2020 +0400

    MarkForged kinematics (#19235)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f566643bdb..71ae4bb285 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -142,25 +142,30 @@
   #elif CORE_IS_XZ
     #define CORE_AXIS_1 A_AXIS
     #define NORMAL_AXIS Y_AXIS
     #define CORE_AXIS_2 C_AXIS
   #elif CORE_IS_YZ
     #define NORMAL_AXIS X_AXIS
     #define CORE_AXIS_1 B_AXIS
     #define CORE_AXIS_2 C_AXIS
   #endif
   #define CORESIGN(n) (ANY(COREYX, COREZX, COREZY) ? (-(n)) : (n))
+#elif ENABLED(MARKFORGED_XY)
+  // Markforged kinematics
+  #define CORE_AXIS_1 A_AXIS
+  #define CORE_AXIS_2 B_AXIS
+  #define NORMAL_AXIS Z_AXIS
 #endif
 
 // Calibration codes only for non-core axes
 #if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
-  #if IS_CORE
+  #if EITHER(IS_CORE, MARKFORGED_XY)
     #define X_AXIS_INDEX 0
     #define Y_AXIS_INDEX 1
     #define Z_AXIS_INDEX 2
     #define CAN_CALIBRATE(A,B) (A##_AXIS_INDEX == B##_INDEX)
   #else
     #define CAN_CALIBRATE(A,B) 1
   #endif
 #endif
 #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 

commit 8652a7bdd2dada6b5dcdbccbbf5feb76b465083d
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sat Aug 22 06:13:43 2020 +0200

    HIGH/LOW naming of pin state settings (#19089)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5d7322753f..f566643bdb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -396,21 +396,21 @@
 #ifndef DISABLE_INACTIVE_E
   #define DISABLE_INACTIVE_E DISABLE_E
 #endif
 
 /**
  * Power Supply
  */
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
-  #elif PSU_ACTIVE_HIGH
+  #elif PSU_ACTIVE_STATE
     #define PSU_NAME "XBox"     // X-Box 360 (203W)
   #else
     #define PSU_NAME "ATX"      // ATX style
   #endif
 #endif
 
 #if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL)
   #define PSU_POWERUP_DELAY 250
 #endif
 

commit 3426c7fc94beb62dedc85d5f5cd9ac9cac0859b1
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Aug 20 03:11:20 2020 +0200

    Configurable number of M106 fans (#18883)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 29ab2cfc29..5d7322753f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1869,26 +1869,42 @@
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 #if EITHER(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS)
   #define HAS_AUTO_REPORTING 1
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
-// Other fans
+// Print Cooling fans (limit)
+#ifdef NUM_M106_FANS
+  #define MAX_FANS NUM_M106_FANS
+#else
+  #define MAX_FANS 8  // Max supported fans
+#endif
+
+#define _NOT_E_AUTO(N,F) (E##N##_AUTO_FAN_PIN != FAN##F##_PIN)
+#define _HAS_FAN(F) (PIN_EXISTS(FAN##F) \
+                     && CONTROLLER_FAN_PIN != FAN##F##_PIN \
+                     && _NOT_E_AUTO(0,F) \
+                     && _NOT_E_AUTO(1,F) \
+                     && _NOT_E_AUTO(2,F) \
+                     && _NOT_E_AUTO(3,F) \
+                     && _NOT_E_AUTO(4,F) \
+                     && _NOT_E_AUTO(5,F) \
+                     && _NOT_E_AUTO(6,F) \
+                     && _NOT_E_AUTO(7,F) \
+                     && F < MAX_FANS)
 #if PIN_EXISTS(FAN)
   #define HAS_FAN0 1
 #endif
-#define _NOT_E_AUTO(N,F) (E##N##_AUTO_FAN_PIN != FAN##F##_PIN)
-#define _HAS_FAN(F) (PIN_EXISTS(FAN##F) && CONTROLLER_FAN_PIN != FAN##F##_PIN && _NOT_E_AUTO(0,F) && _NOT_E_AUTO(1,F) && _NOT_E_AUTO(2,F) && _NOT_E_AUTO(3,F) && _NOT_E_AUTO(4,F) && _NOT_E_AUTO(5,F) && _NOT_E_AUTO(6,F) && _NOT_E_AUTO(7,F))
 #if _HAS_FAN(1)
   #define HAS_FAN1 1
 #endif
 #if _HAS_FAN(2)
   #define HAS_FAN2 1
 #endif
 #if _HAS_FAN(3)
   #define HAS_FAN3 1
 #endif
 #if _HAS_FAN(4)

commit e70440b7cbbabc0bf44db45273ec1a4baaf7d5cf
Author: Julius Mumme <jufimu12@gmail.com>
Date:   Sun Aug 16 05:50:28 2020 +0200

    Fix IS_PROBE_PIN macro (#19024)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6243d82aa8..29ab2cfc29 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1615,21 +1615,21 @@
 #endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
 //
 // Endstops and bed probe
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
-#define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == P)
+#define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
 #define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
 
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
 #if _HAS_STOP(X,MIN)
   #define HAS_X_MIN 1
 #endif

commit da4eaebdc9c1adc7387e302fe6516ed009974edd
Author: wmariz <11435639+wmariz@users.noreply.github.com>
Date:   Fri Aug 7 19:03:59 2020 -0300

    ZoneStar Z6FB (#18918)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 556d57b669..6243d82aa8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -305,20 +305,24 @@
   #define _LCD_CONTRAST_INIT 195
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
 #elif ENABLED(MINIPANEL)
   #define _LCD_CONTRAST_INIT  150
+#elif ENABLED(ZONESTAR_12864OLED)
+  #define _LCD_CONTRAST_MIN   64
+  #define _LCD_CONTRAST_INIT 128
+  #define _LCD_CONTRAST_MAX  255
 #endif
 
 #ifdef _LCD_CONTRAST_INIT
   #define HAS_LCD_CONTRAST 1
 #endif
 
 #if HAS_LCD_CONTRAST
   #ifndef LCD_CONTRAST_MIN
     #ifdef _LCD_CONTRAST_MIN
       #define LCD_CONTRAST_MIN _LCD_CONTRAST_MIN

commit 99ba866d8d3c9abc16558ca12ba34efb9a7922e5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Aug 6 08:14:00 2020 -0500

    Optimize G-code / feature dependencies (#18919)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a93e0527bf..556d57b669 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1937,23 +1937,20 @@
 #endif
 #if PIN_EXISTS(KILL)
   #define HAS_KILL 1
 #endif
 #if PIN_EXISTS(SUICIDE)
   #define HAS_SUICIDE 1
 #endif
 #if PIN_EXISTS(PHOTOGRAPH)
   #define HAS_PHOTOGRAPH 1
 #endif
-#if PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE)
-  #define HAS_CASE_LIGHT 1
-#endif
 
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_DIGIPOTSS 1
 #endif
 #if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
   #define HAS_MOTOR_CURRENT_PWM 1
@@ -2216,21 +2213,21 @@
 /**
  * FAST PWM FAN Settings
  */
 #if ENABLED(FAST_PWM_FAN) && !defined(FAST_PWM_FAN_FREQUENCY)
   #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1)) // Fan frequency default
 #endif
 
 /**
  * MIN/MAX case light PWM scaling
  */
-#if HAS_CASE_LIGHT
+#if ENABLED(CASE_LIGHT_ENABLE)
   #ifndef CASE_LIGHT_MAX_PWM
     #define CASE_LIGHT_MAX_PWM 255
   #elif !WITHIN(CASE_LIGHT_MAX_PWM, 1, 255)
     #error "CASE_LIGHT_MAX_PWM must be a value from 1 to 255."
   #endif
 #endif
 
 /**
  * Bed Probe dependencies
  */

commit 7a5d408bc0ad461c0bdbfaa4acdfe24356d7e058
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Aug 6 04:19:56 2020 -0500

    Conditions cleanup

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5534acaf2c..a93e0527bf 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1948,21 +1948,21 @@
   #define HAS_CASE_LIGHT 1
 #endif
 
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_DIGIPOTSS 1
 #endif
-#if  ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
+#if ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
 #if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_SOME_E_MS_PINS)

commit a9912681b40ebaea6b452a41fb0d25ec9c93c8fc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Aug 6 00:49:15 2020 -0500

    General cleanup

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b7f92fcb25..5534acaf2c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2429,21 +2429,21 @@
 #elif _POINT_COUNT > 0
   #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
 #undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
 #if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
   #define HAS_BUZZER 1
-  #if DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+  #if NONE(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
     #define USE_BEEPER 1
   #endif
 #endif
 
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100

commit 117df87d193994f6fbcd46c45573095adf921784
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Thu Jul 30 09:43:19 2020 +0300

    Support for TFT & Touch Screens (#18130)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c7171b06d8..b7f92fcb25 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -366,21 +366,21 @@
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE
       #define SD_DETECT_STATE LOW
     #endif
   #endif
 
 #endif
 
-#if ANY(LCD_USE_DMA_FSMC, FSMC_GRAPHICAL_TFT, SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
+#if ANY(HAS_GRAPHICAL_TFT, LCD_USE_DMA_FSMC, FSMC_GRAPHICAL_TFT, SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
   #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y

commit 38ce5966e19094fb499ce7d647961c0594c5f811
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Wed Jul 29 23:25:07 2020 -0300

    SPI Emulated DOGM (like FSMC_GRAPHICAL_TFT, but SPI) (#18817)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e12310e07c..c7171b06d8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -366,21 +366,21 @@
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE
       #define SD_DETECT_STATE LOW
     #endif
   #endif
 
 #endif
 
-#if EITHER(LCD_USE_DMA_FSMC, FSMC_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
+#if ANY(LCD_USE_DMA_FSMC, FSMC_GRAPHICAL_TFT, SPI_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
   #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y

commit 451f48231d922d473bae27d2f8992857f0bc3fe2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jul 24 03:09:14 2020 -0500

    Ender 3 V2 BL24C16 EEPROM support (#18758)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 401a64d72d..e12310e07c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -43,30 +43,33 @@
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
   #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION, QSPI_EEPROM)
     #define USE_EMULATED_EEPROM 1
   #elif ANY(I2C_EEPROM, SPI_EEPROM)
     #define USE_WIRED_EEPROM    1
+  #elif ENABLED(IIC_BL24CXX_EEPROM)
+    // nothing
   #else
     #define USE_FALLBACK_EEPROM 1
   #endif
 #else
   #undef I2C_EEPROM
   #undef SPI_EEPROM
   #undef QSPI_EEPROM
   #undef SDCARD_EEPROM_EMULATION
   #undef SRAM_EEPROM_EMULATION
   #undef FLASH_EEPROM_EMULATION
+  #undef IIC_BL24CXX_EEPROM
 #endif
 
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index eb0155949e..401a64d72d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
 #ifdef GITHUB_ACTIONS

commit e78f19bc87a9180148866df1b93beeab083eed17
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jul 14 20:01:29 2020 -0500

    Clean up DWIN code

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6d9998b692..eb0155949e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1769,21 +1769,24 @@
 #if PIN_EXISTS(HEATER_7)
   #define HAS_HEATER_7 1
 #endif
 #if PIN_EXISTS(HEATER_BED)
   #define HAS_HEATER_BED 1
 #endif
 
 // Shorthand for common combinations
 #if HAS_TEMP_BED && HAS_HEATER_BED
   #define HAS_HEATED_BED 1
-  #define BED_MAX_TARGET (BED_MAXTEMP - 10)
+  #ifndef BED_OVERSHOOT
+    #define BED_OVERSHOOT 10
+  #endif
+  #define BED_MAX_TARGET (BED_MAXTEMP - (BED_OVERSHOOT))
 #endif
 #if HAS_HEATED_BED || HAS_TEMP_CHAMBER
   #define BED_OR_CHAMBER 1
 #endif
 #if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE
   #define HAS_TEMP_SENSOR 1
 #endif
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
   #define HAS_HEATED_CHAMBER 1
 #endif

commit b0c6cfb0511b8d71fec26ab91cd945f3d623b3c0
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Jul 9 10:11:57 2020 +0200

    MarlinUI support for up to 5 Material Presets (#18488)
    
    - Add `I` preset parameter to `G26`, `M106`, `M140`, and `M190`.
    - Extend menu items to permit a string interpolation.
    - Keep material names in a list and interpolate in menu items.
    - Extend material presets to support up to 5 predefined materials.
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 04af5e40c9..6d9998b692 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2122,23 +2122,31 @@
     #define HEATER_CHAMBER_INVERTING false
   #endif
   #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ HEATER_CHAMBER_INVERTING)
 #endif
 
 #if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER
   #define HAS_TEMPERATURE 1
 #endif
 
 #if HAS_TEMPERATURE && EITHER(HAS_LCD_MENU, DWIN_CREALITY_LCD)
-  #define PREHEAT_COUNT 2
-#else
-  #undef PREHEAT_COUNT
+  #ifdef PREHEAT_5_LABEL
+    #define PREHEAT_COUNT 5
+  #elif defined(PREHEAT_4_LABEL)
+    #define PREHEAT_COUNT 4
+  #elif defined(PREHEAT_3_LABEL)
+    #define PREHEAT_COUNT 3
+  #elif defined(PREHEAT_2_LABEL)
+    #define PREHEAT_COUNT 2
+  #elif defined(PREHEAT_1_LABEL)
+    #define PREHEAT_COUNT 1
+  #endif
 #endif
 
 /**
  * Up to 3 PWM fans
  */
 #ifndef FAN_INVERTING
   #define FAN_INVERTING false
 #endif
 
 #if HAS_FAN7

commit af8be58d9287c7c49d68bb5319ca2dd262042351
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Jul 5 23:18:49 2020 -0700

    Fix broken POWER_LOSS_RECOVERY prompt (#18557)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8eaa02b5e5..04af5e40c9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -346,25 +346,21 @@
  */
 #if ENABLED(SDSUPPORT)
 
   #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE) && !defined(ARDUINO_GRAND_CENTRAL_M4)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
-    #define SHARED_SD_CARD
-  #endif
-
-  #if DISABLED(SHARED_SD_CARD)
-    #define INIT_SDCARD_ON_BOOT
+    #define HAS_SHARED_MEDIA 1
   #endif
 
   #if PIN_EXISTS(SD_DETECT)
     #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
       #undef SD_DETECT_STATE
       #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE

commit 39105384ba1acfc387a687d053450b4b645cbb94
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Wed Jul 1 13:22:34 2020 +0700

    Permit independent X2,Y2,Z2,Z3,Z4 endstop inverting (#18481)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index be63d3ec36..8eaa02b5e5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -653,34 +653,36 @@
 
 #define HOTEND_USES_THERMISTOR ANY( \
   HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, HEATER_3_USES_THERMISTOR, \
   HEATER_4_USES_THERMISTOR, HEATER_5_USES_THERMISTOR, HEATER_6_USES_THERMISTOR, HEATER_7_USES_THERMISTOR )
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_DIR > 0
-    #if X2_USE_ENDSTOP == _XMIN_
-      #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _XMAX_
-      #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _YMIN_
-      #define X2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _YMAX_
-      #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _ZMIN_
-      #define X2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _ZMAX_
-      #define X2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-    #else
-      #define X2_MAX_ENDSTOP_INVERTING false
+    #ifndef X2_MAX_ENDSTOP_INVERTING
+      #if X2_USE_ENDSTOP == _XMIN_
+        #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _XMAX_
+        #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _YMIN_
+        #define X2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _YMAX_
+        #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _ZMIN_
+        #define X2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _ZMAX_
+        #define X2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #else
+        #define X2_MAX_ENDSTOP_INVERTING false
+      #endif
     #endif
     #ifndef X2_MAX_PIN
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MAX_PIN X_MIN_PIN
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MAX_PIN X_MAX_PIN
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MAX_PIN Y_MIN_PIN
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MAX_PIN Y_MAX_PIN
@@ -705,37 +707,41 @@
       #elif X2_USE_ENDSTOP == _E4DIAG_
         #define X2_MAX_PIN E4_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E5DIAG_
         #define X2_MAX_PIN E5_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E6DIAG_
         #define X2_MAX_PIN E6_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E7DIAG_
         #define X2_MAX_PIN E7_DIAG_PIN
       #endif
     #endif
-    #define X2_MIN_ENDSTOP_INVERTING false
-  #else
-    #if X2_USE_ENDSTOP == _XMIN_
-      #define X2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _XMAX_
-      #define X2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _YMIN_
-      #define X2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _YMAX_
-      #define X2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _ZMIN_
-      #define X2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-    #elif X2_USE_ENDSTOP == _ZMAX_
-      #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-    #else
+    #ifndef X2_MIN_ENDSTOP_INVERTING
       #define X2_MIN_ENDSTOP_INVERTING false
     #endif
+  #else
+    #ifndef X2_MIN_ENDSTOP_INVERTING
+      #if X2_USE_ENDSTOP == _XMIN_
+        #define X2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _XMAX_
+        #define X2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _YMIN_
+        #define X2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _YMAX_
+        #define X2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _ZMIN_
+        #define X2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #elif X2_USE_ENDSTOP == _ZMAX_
+        #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #else
+        #define X2_MIN_ENDSTOP_INVERTING false
+      #endif
+    #endif
     #ifndef X2_MIN_PIN
       #if X2_USE_ENDSTOP == _XMIN_
         #define X2_MIN_PIN X_MIN_PIN
       #elif X2_USE_ENDSTOP == _XMAX_
         #define X2_MIN_PIN X_MAX_PIN
       #elif X2_USE_ENDSTOP == _YMIN_
         #define X2_MIN_PIN Y_MIN_PIN
       #elif X2_USE_ENDSTOP == _YMAX_
         #define X2_MIN_PIN Y_MAX_PIN
       #elif X2_USE_ENDSTOP == _ZMIN_
@@ -759,43 +765,47 @@
       #elif X2_USE_ENDSTOP == _E4DIAG_
         #define X2_MIN_PIN E4_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E5DIAG_
         #define X2_MIN_PIN E5_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E6DIAG_
         #define X2_MIN_PIN E6_DIAG_PIN
       #elif X2_USE_ENDSTOP == _E7DIAG_
         #define X2_MIN_PIN E7_DIAG_PIN
       #endif
     #endif
-    #define X2_MAX_ENDSTOP_INVERTING false
+    #ifndef X2_MAX_ENDSTOP_INVERTING
+      #define X2_MAX_ENDSTOP_INVERTING false
+    #endif
   #endif
 #endif
 
 /**
  * Y_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Y_DUAL_ENDSTOPS)
   #if Y_HOME_DIR > 0
-    #if Y2_USE_ENDSTOP == _XMIN_
-      #define Y2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _XMAX_
-      #define Y2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _YMIN_
-      #define Y2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _YMAX_
-      #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _ZMIN_
-      #define Y2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _ZMAX_
-      #define Y2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-    #else
-      #define Y2_MAX_ENDSTOP_INVERTING false
+    #ifndef Y2_MAX_ENDSTOP_INVERTING
+      #if Y2_USE_ENDSTOP == _XMIN_
+        #define Y2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _XMAX_
+        #define Y2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _YMIN_
+        #define Y2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _YMAX_
+        #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _ZMIN_
+        #define Y2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _ZMAX_
+        #define Y2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #else
+        #define Y2_MAX_ENDSTOP_INVERTING false
+      #endif
     #endif
     #ifndef Y2_MAX_PIN
       #if Y2_USE_ENDSTOP == _XMIN_
         #define Y2_MAX_PIN X_MIN_PIN
       #elif Y2_USE_ENDSTOP == _XMAX_
         #define Y2_MAX_PIN X_MAX_PIN
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MAX_PIN Y_MIN_PIN
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MAX_PIN Y_MAX_PIN
@@ -820,37 +830,41 @@
       #elif Y2_USE_ENDSTOP == _E4DIAG_
         #define Y2_MAX_PIN E4_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E5DIAG_
         #define Y2_MAX_PIN E5_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E6DIAG_
         #define Y2_MAX_PIN E6_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E7DIAG_
         #define Y2_MAX_PIN E7_DIAG_PIN
       #endif
     #endif
-    #define Y2_MIN_ENDSTOP_INVERTING false
-  #else
-    #if Y2_USE_ENDSTOP == _XMIN_
-      #define Y2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _XMAX_
-      #define Y2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _YMIN_
-      #define Y2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _YMAX_
-      #define Y2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _ZMIN_
-      #define Y2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-    #elif Y2_USE_ENDSTOP == _ZMAX_
-      #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-    #else
+    #ifndef Y2_MIN_ENDSTOP_INVERTING
       #define Y2_MIN_ENDSTOP_INVERTING false
     #endif
+  #else
+    #ifndef Y2_MIN_ENDSTOP_INVERTING
+      #if Y2_USE_ENDSTOP == _XMIN_
+        #define Y2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _XMAX_
+        #define Y2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _YMIN_
+        #define Y2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _YMAX_
+        #define Y2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _ZMIN_
+        #define Y2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #elif Y2_USE_ENDSTOP == _ZMAX_
+        #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #else
+        #define Y2_MIN_ENDSTOP_INVERTING false
+      #endif
+    #endif
     #ifndef Y2_MIN_PIN
       #if Y2_USE_ENDSTOP == _XMIN_
         #define Y2_MIN_PIN X_MIN_PIN
       #elif Y2_USE_ENDSTOP == _XMAX_
         #define Y2_MIN_PIN X_MAX_PIN
       #elif Y2_USE_ENDSTOP == _YMIN_
         #define Y2_MIN_PIN Y_MIN_PIN
       #elif Y2_USE_ENDSTOP == _YMAX_
         #define Y2_MIN_PIN Y_MAX_PIN
       #elif Y2_USE_ENDSTOP == _ZMIN_
@@ -874,44 +888,48 @@
       #elif Y2_USE_ENDSTOP == _E4DIAG_
         #define Y2_MIN_PIN E4_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E5DIAG_
         #define Y2_MIN_PIN E5_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E6DIAG_
         #define Y2_MIN_PIN E6_DIAG_PIN
       #elif Y2_USE_ENDSTOP == _E7DIAG_
         #define Y2_MIN_PIN E7_DIAG_PIN
       #endif
     #endif
-    #define Y2_MAX_ENDSTOP_INVERTING false
+    #ifndef Y2_MAX_ENDSTOP_INVERTING
+      #define Y2_MAX_ENDSTOP_INVERTING false
+    #endif
   #endif
 #endif
 
 /**
  * Z_MULTI_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Z_MULTI_ENDSTOPS)
 
   #if Z_HOME_DIR > 0
-    #if Z2_USE_ENDSTOP == _XMIN_
-      #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _XMAX_
-      #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _YMIN_
-      #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _YMAX_
-      #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _ZMIN_
-      #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _ZMAX_
-      #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-    #else
-      #define Z2_MAX_ENDSTOP_INVERTING false
+    #ifndef Z2_MAX_ENDSTOP_INVERTING
+      #if Z2_USE_ENDSTOP == _XMIN_
+        #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _XMAX_
+        #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _YMIN_
+        #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _YMAX_
+        #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _ZMIN_
+        #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _ZMAX_
+        #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #else
+        #define Z2_MAX_ENDSTOP_INVERTING false
+      #endif
     #endif
     #ifndef Z2_MAX_PIN
       #if Z2_USE_ENDSTOP == _XMIN_
         #define Z2_MAX_PIN X_MIN_PIN
       #elif Z2_USE_ENDSTOP == _XMAX_
         #define Z2_MAX_PIN X_MAX_PIN
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MAX_PIN Y_MIN_PIN
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MAX_PIN Y_MAX_PIN
@@ -936,37 +954,41 @@
       #elif Z2_USE_ENDSTOP == _E4DIAG_
         #define Z2_MAX_PIN E4_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E5DIAG_
         #define Z2_MAX_PIN E5_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E6DIAG_
         #define Z2_MAX_PIN E6_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E7DIAG_
         #define Z2_MAX_PIN E7_DIAG_PIN
       #endif
     #endif
-    #define Z2_MIN_ENDSTOP_INVERTING false
-  #else
-    #if Z2_USE_ENDSTOP == _XMIN_
-      #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _XMAX_
-      #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _YMIN_
-      #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _YMAX_
-      #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _ZMIN_
-      #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-    #elif Z2_USE_ENDSTOP == _ZMAX_
-      #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-    #else
+    #ifndef Z2_MIN_ENDSTOP_INVERTING
       #define Z2_MIN_ENDSTOP_INVERTING false
     #endif
+  #else
+    #ifndef Z2_MIN_ENDSTOP_INVERTING
+      #if Z2_USE_ENDSTOP == _XMIN_
+        #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _XMAX_
+        #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _YMIN_
+        #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _YMAX_
+        #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _ZMIN_
+        #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #elif Z2_USE_ENDSTOP == _ZMAX_
+        #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #else
+        #define Z2_MIN_ENDSTOP_INVERTING false
+      #endif
+    #endif
     #ifndef Z2_MIN_PIN
       #if Z2_USE_ENDSTOP == _XMIN_
         #define Z2_MIN_PIN X_MIN_PIN
       #elif Z2_USE_ENDSTOP == _XMAX_
         #define Z2_MIN_PIN X_MAX_PIN
       #elif Z2_USE_ENDSTOP == _YMIN_
         #define Z2_MIN_PIN Y_MIN_PIN
       #elif Z2_USE_ENDSTOP == _YMAX_
         #define Z2_MIN_PIN Y_MAX_PIN
       #elif Z2_USE_ENDSTOP == _ZMIN_
@@ -990,39 +1012,43 @@
       #elif Z2_USE_ENDSTOP == _E4DIAG_
         #define Z2_MIN_PIN E4_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E5DIAG_
         #define Z2_MIN_PIN E5_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E6DIAG_
         #define Z2_MIN_PIN E6_DIAG_PIN
       #elif Z2_USE_ENDSTOP == _E7DIAG_
         #define Z2_MIN_PIN E7_DIAG_PIN
       #endif
     #endif
-    #define Z2_MAX_ENDSTOP_INVERTING false
+    #ifndef Z2_MAX_ENDSTOP_INVERTING
+      #define Z2_MAX_ENDSTOP_INVERTING false
+    #endif
   #endif
 
   #if NUM_Z_STEPPER_DRIVERS >= 3
     #if Z_HOME_DIR > 0
-      #if Z3_USE_ENDSTOP == _XMIN_
-        #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _XMAX_
-        #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _YMIN_
-        #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _YMAX_
-        #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _ZMIN_
-        #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _ZMAX_
-        #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
-        #define Z3_MAX_ENDSTOP_INVERTING false
+      #ifndef Z3_MAX_ENDSTOP_INVERTING
+        #if Z3_USE_ENDSTOP == _XMIN_
+          #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _XMAX_
+          #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _YMIN_
+          #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _YMAX_
+          #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _ZMIN_
+          #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _ZMAX_
+          #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #else
+          #define Z3_MAX_ENDSTOP_INVERTING false
+        #endif
       #endif
       #ifndef Z3_MAX_PIN
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MAX_PIN X_MIN_PIN
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MAX_PIN X_MAX_PIN
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MAX_PIN Y_MIN_PIN
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MAX_PIN Y_MAX_PIN
@@ -1047,37 +1073,41 @@
         #elif Z3_USE_ENDSTOP == _E4DIAG_
           #define Z3_MAX_PIN E4_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E5DIAG_
           #define Z3_MAX_PIN E5_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E6DIAG_
           #define Z3_MAX_PIN E6_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E7DIAG_
           #define Z3_MAX_PIN E7_DIAG_PIN
         #endif
       #endif
-      #define Z3_MIN_ENDSTOP_INVERTING false
-    #else
-      #if Z3_USE_ENDSTOP == _XMIN_
-        #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _XMAX_
-        #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _YMIN_
-        #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _YMAX_
-        #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _ZMIN_
-        #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #elif Z3_USE_ENDSTOP == _ZMAX_
-        #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
+      #ifndef Z3_MIN_ENDSTOP_INVERTING
         #define Z3_MIN_ENDSTOP_INVERTING false
       #endif
+    #else
+      #ifndef Z3_MIN_ENDSTOP_INVERTING
+        #if Z3_USE_ENDSTOP == _XMIN_
+          #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _XMAX_
+          #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _YMIN_
+          #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _YMAX_
+          #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _ZMIN_
+          #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #elif Z3_USE_ENDSTOP == _ZMAX_
+          #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #else
+          #define Z3_MIN_ENDSTOP_INVERTING false
+        #endif
+      #endif
       #ifndef Z3_MIN_PIN
         #if Z3_USE_ENDSTOP == _XMIN_
           #define Z3_MIN_PIN X_MIN_PIN
         #elif Z3_USE_ENDSTOP == _XMAX_
           #define Z3_MIN_PIN X_MAX_PIN
         #elif Z3_USE_ENDSTOP == _YMIN_
           #define Z3_MIN_PIN Y_MIN_PIN
         #elif Z3_USE_ENDSTOP == _YMAX_
           #define Z3_MIN_PIN Y_MAX_PIN
         #elif Z3_USE_ENDSTOP == _ZMIN_
@@ -1101,40 +1131,44 @@
         #elif Z3_USE_ENDSTOP == _E4DIAG_
           #define Z3_MIN_PIN E4_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E5DIAG_
           #define Z3_MIN_PIN E5_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E6DIAG_
           #define Z3_MIN_PIN E6_DIAG_PIN
         #elif Z3_USE_ENDSTOP == _E7DIAG_
           #define Z3_MIN_PIN E7_DIAG_PIN
         #endif
       #endif
-      #define Z3_MAX_ENDSTOP_INVERTING false
+      #ifndef Z3_MAX_ENDSTOP_INVERTING
+        #define Z3_MAX_ENDSTOP_INVERTING false
+      #endif
     #endif
   #endif
 
   #if NUM_Z_STEPPER_DRIVERS >= 4
     #if Z_HOME_DIR > 0
-      #if Z4_USE_ENDSTOP == _XMIN_
-        #define Z4_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _XMAX_
-        #define Z4_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _YMIN_
-        #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _YMAX_
-        #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _ZMIN_
-        #define Z4_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _ZMAX_
-        #define Z4_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
-        #define Z4_MAX_ENDSTOP_INVERTING false
+      #ifndef Z4_MAX_ENDSTOP_INVERTING
+        #if Z4_USE_ENDSTOP == _XMIN_
+          #define Z4_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _XMAX_
+          #define Z4_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _YMIN_
+          #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _YMAX_
+          #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _ZMIN_
+          #define Z4_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _ZMAX_
+          #define Z4_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #else
+          #define Z4_MAX_ENDSTOP_INVERTING false
+        #endif
       #endif
       #ifndef Z4_MAX_PIN
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MAX_PIN X_MIN_PIN
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MAX_PIN X_MAX_PIN
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MAX_PIN Y_MIN_PIN
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MAX_PIN Y_MAX_PIN
@@ -1159,37 +1193,41 @@
         #elif Z4_USE_ENDSTOP == _E4DIAG_
           #define Z4_MAX_PIN E4_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E5DIAG_
           #define Z4_MAX_PIN E5_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E6DIAG_
           #define Z4_MAX_PIN E6_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E7DIAG_
           #define Z4_MAX_PIN E7_DIAG_PIN
         #endif
       #endif
-      #define Z4_MIN_ENDSTOP_INVERTING false
-    #else
-      #if Z4_USE_ENDSTOP == _XMIN_
-        #define Z4_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _XMAX_
-        #define Z4_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _YMIN_
-        #define Z4_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _YMAX_
-        #define Z4_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _ZMIN_
-        #define Z4_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #elif Z4_USE_ENDSTOP == _ZMAX_
-        #define Z4_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #else
+      #ifndef Z4_MIN_ENDSTOP_INVERTING
         #define Z4_MIN_ENDSTOP_INVERTING false
       #endif
+    #else
+      #ifndef Z4_MIN_ENDSTOP_INVERTING
+        #if Z4_USE_ENDSTOP == _XMIN_
+          #define Z4_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _XMAX_
+          #define Z4_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _YMIN_
+          #define Z4_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _YMAX_
+          #define Z4_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _ZMIN_
+          #define Z4_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #elif Z4_USE_ENDSTOP == _ZMAX_
+          #define Z4_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #else
+          #define Z4_MIN_ENDSTOP_INVERTING false
+        #endif
+      #endif
       #ifndef Z4_MIN_PIN
         #if Z4_USE_ENDSTOP == _XMIN_
           #define Z4_MIN_PIN X_MIN_PIN
         #elif Z4_USE_ENDSTOP == _XMAX_
           #define Z4_MIN_PIN X_MAX_PIN
         #elif Z4_USE_ENDSTOP == _YMIN_
           #define Z4_MIN_PIN Y_MIN_PIN
         #elif Z4_USE_ENDSTOP == _YMAX_
           #define Z4_MIN_PIN Y_MAX_PIN
         #elif Z4_USE_ENDSTOP == _ZMIN_
@@ -1213,21 +1251,23 @@
         #elif Z4_USE_ENDSTOP == _E4DIAG_
           #define Z4_MIN_PIN E4_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E5DIAG_
           #define Z4_MIN_PIN E5_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E6DIAG_
           #define Z4_MIN_PIN E6_DIAG_PIN
         #elif Z4_USE_ENDSTOP == _E7DIAG_
           #define Z4_MIN_PIN E7_DIAG_PIN
         #endif
       #endif
-      #define Z4_MAX_ENDSTOP_INVERTING false
+      #ifndef Z4_MAX_ENDSTOP_INVERTING
+        #define Z4_MAX_ENDSTOP_INVERTING false
+      #endif
     #endif
   #endif
 
 #endif // Z_MULTI_ENDSTOPS
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if ENABLED(USE_XMAX_PLUG)

commit 859ccd2e2893d4e6002b43dde0dd7b19f663d99b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 9 14:25:16 2020 -0500

    NO_LCD_REINIT for FSMC (or, no SD_DETECT_PIN)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e1e341d126..be63d3ec36 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -367,20 +367,24 @@
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE
       #define SD_DETECT_STATE LOW
     #endif
   #endif
 
 #endif
 
+#if EITHER(LCD_USE_DMA_FSMC, FSMC_GRAPHICAL_TFT) || !PIN_EXISTS(SD_DETECT)
+  #define NO_LCD_REINIT 1  // Suppress LCD re-initialization
+#endif
+
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y
   #define DISABLE_INACTIVE_Y DISABLE_Y
 #endif
 #ifndef DISABLE_INACTIVE_Z

commit 4275466f4930ce554419f5f03f07119b8a9aec04
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 24 19:44:50 2020 -0500

    Fix issues with no hotend / bed / fan (#18395)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b98f16f348..e1e341d126 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1852,20 +1852,24 @@
 #endif
 #if _HAS_FAN(7)
   #define HAS_FAN7 1
 #endif
 #undef _NOT_E_AUTO
 #undef _HAS_FAN
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define HAS_CONTROLLER_FAN 1
 #endif
 
+#if BED_OR_CHAMBER || HAS_FAN0
+  #define BED_OR_CHAMBER_OR_FAN 1
+#endif
+
 // Servos
 #if PIN_EXISTS(SERVO0) && NUM_SERVOS > 0
   #define HAS_SERVO_0 1
 #endif
 #if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
   #define HAS_SERVO_1 1
 #endif
 #if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
   #define HAS_SERVO_2 1
 #endif
@@ -2073,20 +2077,30 @@
 #if HAS_HEATED_CHAMBER
   #ifndef MAX_CHAMBER_POWER
     #define MAX_CHAMBER_POWER 255
   #endif
   #ifndef HEATER_CHAMBER_INVERTING
     #define HEATER_CHAMBER_INVERTING false
   #endif
   #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ HEATER_CHAMBER_INVERTING)
 #endif
 
+#if HAS_HOTEND || HAS_HEATED_BED || HAS_HEATED_CHAMBER
+  #define HAS_TEMPERATURE 1
+#endif
+
+#if HAS_TEMPERATURE && EITHER(HAS_LCD_MENU, DWIN_CREALITY_LCD)
+  #define PREHEAT_COUNT 2
+#else
+  #undef PREHEAT_COUNT
+#endif
+
 /**
  * Up to 3 PWM fans
  */
 #ifndef FAN_INVERTING
   #define FAN_INVERTING false
 #endif
 
 #if HAS_FAN7
   #define FAN_COUNT 8
 #elif HAS_FAN6

commit d8c3aed0383202341a29e65fa556a55c5af47185
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jun 19 14:01:15 2020 -0500

    Sanity-check the chamber thermistor pin

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 228b21516b..b98f16f348 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1685,30 +1685,30 @@
 #if HAS_HOTEND && EITHER(HAS_TEMP_ADC_0, HEATER_0_USES_MAX6675)
   #define HAS_TEMP_HOTEND 1
 #endif
 #define HAS_TEMP_BED        HAS_TEMP_ADC_BED
 #define HAS_TEMP_PROBE      HAS_TEMP_ADC_PROBE
 #define HAS_TEMP_CHAMBER    HAS_TEMP_ADC_CHAMBER
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
-#endif
+  #endif
   #if PIN_EXISTS(JOY_Y)
     #define HAS_JOY_ADC_Y 1
-#endif
+  #endif
   #if PIN_EXISTS(JOY_Z)
     #define HAS_JOY_ADC_Z 1
-#endif
+  #endif
   #if PIN_EXISTS(JOY_EN)
     #define HAS_JOY_ADC_EN 1
-#endif
+  #endif
 #endif
 
 // Heaters
 #if PIN_EXISTS(HEATER_0)
   #define HAS_HEATER_0 1
 #endif
 #if PIN_EXISTS(HEATER_1)
   #define HAS_HEATER_1 1
 #endif
 #if PIN_EXISTS(HEATER_2)

commit 424569b4c4bf112a3939724b30bad528a76a2b08
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 18 15:23:03 2020 -0500

    Power monitor and display (#17437)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 73d878de22..228b21516b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -23,20 +23,27 @@
 
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
+// ADC
+#ifdef BOARD_ADC_VREF
+  #define ADC_VREF BOARD_ADC_VREF
+#else
+  #define ADC_VREF HAL_ADC_VREF
+#endif
+
 // Linear advance uses Jerk since E is an isolated axis
 #if BOTH(HAS_JUNCTION_DEVIATION, LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
   #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION, QSPI_EEPROM)

commit 2603a237f9553fe55262e4612a7a78fb98f030a4
Author: thisiskeithb <13375512+thisiskeithb@users.noreply.github.com>
Date:   Tue Jun 16 00:43:09 2020 -0700

    Add MKS LCD12864 A/B Controller Support (#18120)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9fe25e8778..73d878de22 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -280,21 +280,21 @@
   #define _LCD_CONTRAST_MAX  115
 #elif ENABLED(VIKI2)
   #define _LCD_CONTRAST_INIT 140
 #elif ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #define _LCD_CONTRAST_MIN   90
   #define _LCD_CONTRAST_INIT 110
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
-#elif ENABLED(MKS_LCD12864B)
+#elif ENABLED(MKS_LCD12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254

commit f4c258dc2355fee871bec6e11095c7c4777b160d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 16 01:45:27 2020 -0500

    Creality Ender 3 v2 (#17719)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ff4f7989db..9fe25e8778 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2458,21 +2458,25 @@
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
-#define MAX_VFAT_ENTRIES TERN(SCROLL_LONG_FILENAMES, 5, 2)
+#if EITHER(SCROLL_LONG_FILENAMES, DWIN_CREALITY_LCD)
+  #define MAX_VFAT_ENTRIES (5)
+#else
+  #define MAX_VFAT_ENTRIES (2)
+#endif
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)

commit bac760207c3e85b9ac97a36c37aeb4ad601102a3
Author: MoellerDi <MoellerDi@users.noreply.github.com>
Date:   Mon Jun 8 10:24:46 2020 +0200

    Add volumetric extrusion limit (#17017)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6fb546822b..ff4f7989db 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -253,20 +253,27 @@
   #define DEFAULT_KEEPALIVE_INTERVAL 2
 #endif
 
 /**
  * Provide a MAX_AUTORETRACT for older configs
  */
 #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
   #define MAX_AUTORETRACT 99
 #endif
 
+/**
+ * Provide a DEFAULT_VOLUMETRIC_EXTRUDER_LIMIT in case NO_VOLUMETRICS is enabled
+ */
+#ifndef DEFAULT_VOLUMETRIC_EXTRUDER_LIMIT
+  #define DEFAULT_VOLUMETRIC_EXTRUDER_LIMIT 0.00
+#endif
+
 /**
  * LCD Contrast for Graphical Displays
  */
 #if ENABLED(CARTESIO_UI)
   #define _LCD_CONTRAST_MIN   60
   #define _LCD_CONTRAST_INIT  90
   #define _LCD_CONTRAST_MAX  140
 #elif ENABLED(miniVIKI)
   #define _LCD_CONTRAST_MIN   75
   #define _LCD_CONTRAST_INIT  95

commit 63717822637064b347d046f8f39be824eff51785
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 12 05:50:28 2020 -0500

    Add HAS_MULTI_SERIAL conditional

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index edc981520d..6fb546822b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2512,11 +2512,13 @@
     #if HAS_GRAPHICAL_LCD
       #define LCD_HEIGHT 5
     #else
       #define LCD_HEIGHT TERN(ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
+#elif NUM_SERIAL > 1
+  #define HAS_MULTI_SERIAL 1
 #endif

commit ce62209bce9a1bd64cda1e72d5982a4ff0b593a2
Author: ellensp <ellensp@hotmail.com>
Date:   Wed Jun 3 13:41:50 2020 +1200

    Probe margin. Bump config version (#18140)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 97f4d1eb88..edc981520d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2244,45 +2244,45 @@
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
  * Bed Probing bounds
  */
 
-#ifndef MIN_PROBE_EDGE
-  #define MIN_PROBE_EDGE 0
+#ifndef PROBING_MARGIN
+  #define PROBING_MARGIN 0
 #endif
 
 #if IS_KINEMATIC
-  #undef MIN_PROBE_EDGE_LEFT
-  #undef MIN_PROBE_EDGE_RIGHT
-  #undef MIN_PROBE_EDGE_FRONT
-  #undef MIN_PROBE_EDGE_BACK
-  #define MIN_PROBE_EDGE_LEFT 0
-  #define MIN_PROBE_EDGE_RIGHT 0
-  #define MIN_PROBE_EDGE_FRONT 0
-  #define MIN_PROBE_EDGE_BACK 0
+  #undef PROBING_MARGIN_LEFT
+  #undef PROBING_MARGIN_RIGHT
+  #undef PROBING_MARGIN_FRONT
+  #undef PROBING_MARGIN_BACK
+  #define PROBING_MARGIN_LEFT 0
+  #define PROBING_MARGIN_RIGHT 0
+  #define PROBING_MARGIN_FRONT 0
+  #define PROBING_MARGIN_BACK 0
 #else
-  #ifndef MIN_PROBE_EDGE_LEFT
-    #define MIN_PROBE_EDGE_LEFT MIN_PROBE_EDGE
+  #ifndef PROBING_MARGIN_LEFT
+    #define PROBING_MARGIN_LEFT PROBING_MARGIN
   #endif
-  #ifndef MIN_PROBE_EDGE_RIGHT
-    #define MIN_PROBE_EDGE_RIGHT MIN_PROBE_EDGE
+  #ifndef PROBING_MARGIN_RIGHT
+    #define PROBING_MARGIN_RIGHT PROBING_MARGIN
   #endif
-  #ifndef MIN_PROBE_EDGE_FRONT
-    #define MIN_PROBE_EDGE_FRONT MIN_PROBE_EDGE
+  #ifndef PROBING_MARGIN_FRONT
+    #define PROBING_MARGIN_FRONT PROBING_MARGIN
   #endif
-  #ifndef MIN_PROBE_EDGE_BACK
-    #define MIN_PROBE_EDGE_BACK MIN_PROBE_EDGE
+  #ifndef PROBING_MARGIN_BACK
+    #define PROBING_MARGIN_BACK PROBING_MARGIN
   #endif
 #endif
 
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif

commit ad08722d0de51e3bda05985416800818e7f0d310
Author: thisiskeithb <13375512+thisiskeithb@users.noreply.github.com>
Date:   Mon Jun 1 20:40:51 2020 -0700

    Chirp followup 2 (#18176)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 57295f84b9..97f4d1eb88 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2345,44 +2345,45 @@
 #if _POINT_COUNT == 6
   #define HAS_FIXED_3POINT 1
 #elif _POINT_COUNT > 0
   #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
 #undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
+#if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+  #define HAS_BUZZER 1
+  #if DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+    #define USE_BEEPER 1
+  #endif
+#endif
+
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif
 #elif HAS_BUZZER
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 5000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
 #endif
 
-#if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
-  #define HAS_BUZZER 1
-  #if LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
-    #define HAS_CHIRP 1
-  #endif
-#endif
-#if HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
-  #define USE_BEEPER 1
+#if HAS_BUZZER && LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
+  #define HAS_CHIRP 1
 #endif
 
 /**
  * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
  */
 #if HAS_GRAPHICAL_LCD
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI

commit 48d9a5367b6b52f16ed8a38c71905a33a5c8473b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jun 1 17:06:27 2020 -0500

    Chirp followup

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3a8bee4087..57295f84b9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1873,29 +1873,20 @@
 #endif
 #if PIN_EXISTS(KILL)
   #define HAS_KILL 1
 #endif
 #if PIN_EXISTS(SUICIDE)
   #define HAS_SUICIDE 1
 #endif
 #if PIN_EXISTS(PHOTOGRAPH)
   #define HAS_PHOTOGRAPH 1
 #endif
-#if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
-  #define HAS_BUZZER 1
-  #if LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
-    #define HAS_CHIRP 1
-  #endif
-#endif
-#if HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
-  #define USE_BEEPER 1
-#endif
 #if PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE)
   #define HAS_CASE_LIGHT 1
 #endif
 
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_DIGIPOTSS 1
@@ -2370,20 +2361,30 @@
   #endif
 #elif HAS_BUZZER
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 5000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
 #endif
 
+#if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+  #define HAS_BUZZER 1
+  #if LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
+    #define HAS_CHIRP 1
+  #endif
+#endif
+#if HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+  #define USE_BEEPER 1
+#endif
+
 /**
  * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
  */
 #if HAS_GRAPHICAL_LCD
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI
     #define DOGLCD_MOSI MOSI_PIN
   #endif

commit 3bf0d8d1617cd2cf088499963e49662a3fd9c2fd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 27 13:12:08 2020 -0500

    Allow disable of LCD click

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 70601c3158..3a8bee4087 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1875,20 +1875,23 @@
   #define HAS_KILL 1
 #endif
 #if PIN_EXISTS(SUICIDE)
   #define HAS_SUICIDE 1
 #endif
 #if PIN_EXISTS(PHOTOGRAPH)
   #define HAS_PHOTOGRAPH 1
 #endif
 #if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
   #define HAS_BUZZER 1
+  #if LCD_FEEDBACK_FREQUENCY_DURATION_MS && LCD_FEEDBACK_FREQUENCY_HZ
+    #define HAS_CHIRP 1
+  #endif
 #endif
 #if HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
   #define USE_BEEPER 1
 #endif
 #if PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE)
   #define HAS_CASE_LIGHT 1
 #endif
 
 // Digital control
 #if PIN_EXISTS(STEPPER_RESET)

commit 6ae7a40f994ffb2d2be10a041bdfe89f4585db91
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 14 13:00:47 2020 -0500

    CoreXY sensorless homing (#17972)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7d5cb060b9..70601c3158 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1580,20 +1580,29 @@
 #endif
 #if _HAS_STOP(Y,MAX)
   #define HAS_Y_MAX 1
 #endif
 #if _HAS_STOP(Z,MIN)
   #define HAS_Z_MIN 1
 #endif
 #if _HAS_STOP(Z,MAX)
   #define HAS_Z_MAX 1
 #endif
+#if _HAS_STOP(X,STOP)
+  #define HAS_X_STOP 1
+#endif
+#if _HAS_STOP(Y,STOP)
+  #define HAS_Y_STOP 1
+#endif
+#if _HAS_STOP(Z,STOP)
+  #define HAS_Z_STOP 1
+#endif
 #if PIN_EXISTS(X2_MIN)
   #define HAS_X2_MIN 1
 #endif
 #if PIN_EXISTS(X2_MAX)
   #define HAS_X2_MAX 1
 #endif
 #if PIN_EXISTS(Y2_MIN)
   #define HAS_Y2_MIN 1
 #endif
 #if PIN_EXISTS(Y2_MAX)

commit 73e0937f499e10db35e8735749a1549128a8832d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 12 01:59:39 2020 -0500

    Fix HAS_MICROSTEPS if only Z

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f81577436b..7d5cb060b9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1891,21 +1891,21 @@
 #if  ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
 #if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
 #if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
-#if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MICROSTEPS, HAS_SOME_E_MS_PINS)
+#if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MS_PINS, HAS_SOME_E_MS_PINS)
   #define HAS_MICROSTEPS 1
 #endif
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)

commit 798dc688473fe1d8c3faaec47b171ff8778d03c7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon May 11 23:25:39 2020 -0500

    Combine some conditions

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index fe8778590a..f81577436b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1777,21 +1777,21 @@
 #if HOTENDS > 6 && PIN_EXISTS(E6_AUTO_FAN)
   #define HAS_AUTO_FAN_6 1
 #endif
 #if HOTENDS > 7 && PIN_EXISTS(E7_AUTO_FAN)
   #define HAS_AUTO_FAN_7 1
 #endif
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN)
   #define HAS_AUTO_CHAMBER_FAN 1
 #endif
 
-#if HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_FAN_6 || HAS_AUTO_FAN_7 || HAS_AUTO_CHAMBER_FAN
+#if ANY(HAS_AUTO_FAN_0, HAS_AUTO_FAN_1, HAS_AUTO_FAN_2, HAS_AUTO_FAN_3, HAS_AUTO_FAN_4, HAS_AUTO_FAN_5, HAS_AUTO_FAN_6, HAS_AUTO_FAN_7, HAS_AUTO_CHAMBER_FAN)
   #define HAS_AUTO_FAN 1
 #endif
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN && (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
   #define AUTO_CHAMBER_IS_E 1
 #endif
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
@@ -1885,27 +1885,27 @@
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_DIGIPOTSS 1
 #endif
 #if  ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
-#if HAS_Z_MS_PINS || HAS_Z2_MS_PINS || HAS_Z3_MS_PINS || HAS_Z4_MS_PINS
+#if ANY(HAS_Z_MS_PINS, HAS_Z2_MS_PINS, HAS_Z3_MS_PINS, HAS_Z4_MS_PINS)
   #define HAS_SOME_Z_MS_PINS 1
 #endif
-#if HAS_E0_MS_PINS || HAS_E1_MS_PINS || HAS_E2_MS_PINS || HAS_E3_MS_PINS || HAS_E4_MS_PINS || HAS_E5_MS_PINS || HAS_E6_MS_PINS || HAS_E7_MS_PINS
+#if ANY(HAS_E0_MS_PINS, HAS_E1_MS_PINS, HAS_E2_MS_PINS, HAS_E3_MS_PINS, HAS_E4_MS_PINS, HAS_E5_MS_PINS, HAS_E6_MS_PINS, HAS_E7_MS_PINS)
   #define HAS_SOME_E_MS_PINS 1
 #endif
-#if HAS_X_MS_PINS || HAS_X2_MS_PINS || HAS_Y_MS_PINS || HAS_Y2_MS_PINS || HAS_SOME_Z_MICROSTEPS || HAS_SOME_E_MS_PINS
+#if ANY(HAS_X_MS_PINS, HAS_X2_MS_PINS, HAS_Y_MS_PINS, HAS_Y2_MS_PINS, HAS_SOME_Z_MICROSTEPS, HAS_SOME_E_MS_PINS)
   #define HAS_MICROSTEPS 1
 #endif
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)

commit 86c112538084f7718252966f5f9d9278c4837fb2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun May 10 04:52:51 2020 -0500

    Sanity check 3-point defines
    
    Fixes #17870

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 26cad87979..fe8778590a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2331,23 +2331,27 @@
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
 #else
   #undef MESH_MIN_X
   #undef MESH_MIN_Y
   #undef MESH_MAX_X
   #undef MESH_MAX_Y
 #endif
 
-#if defined(PROBE_PT_1_X) && defined(PROBE_PT_2_X) && defined(PROBE_PT_3_X) && defined(PROBE_PT_1_Y) && defined(PROBE_PT_2_Y) && defined(PROBE_PT_3_Y)
+#define _POINT_COUNT (defined(PROBE_PT_1_X) + defined(PROBE_PT_2_X) + defined(PROBE_PT_3_X) + defined(PROBE_PT_1_Y) + defined(PROBE_PT_2_Y) + defined(PROBE_PT_3_Y))
+#if _POINT_COUNT == 6
   #define HAS_FIXED_3POINT 1
+#elif _POINT_COUNT > 0
+  #error "For 3-Point Leveling all XY points must be defined (or none for the defaults)."
 #endif
+#undef _POINT_COUNT
 
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100

commit a2153c15eef903181afe522dfd719dc6aed90316
Author: Jason Smith <jason.inet@gmail.com>
Date:   Thu May 7 23:15:12 2020 -0700

    Add TMC driver HW serial defines (#17909)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f66c2f16ad..26cad87979 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1542,20 +1542,23 @@
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
 #endif
 
 #if (HAS_E_DRIVER(TMC2660) \
   || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
     && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) )
   #define HAS_E_STEPPER_ENABLE 1
 #endif
 
+#if ANY_AXIS_HAS(HW_SERIAL)
+  #define HAS_TMC_HW_SERIAL 1
+#endif
 #if ANY_AXIS_HAS(SW_SERIAL)
   #define HAS_TMC_SW_SERIAL 1
 #endif
 
 //
 // Endstops and bed probe
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == P)

commit 9b820d71a62a6f826beff0b230b1aefc4c350212
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 30 18:15:52 2020 -0500

    Remove QSPI from "wired" EEPROM type

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 844b291429..f66c2f16ad 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -32,23 +32,23 @@
 
 // Linear advance uses Jerk since E is an isolated axis
 #if BOTH(HAS_JUNCTION_DEVIATION, LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
-  #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION)
+  #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION, QSPI_EEPROM)
     #define USE_EMULATED_EEPROM 1
-  #elif ANY(I2C_EEPROM, SPI_EEPROM, QSPI_EEPROM)
+  #elif ANY(I2C_EEPROM, SPI_EEPROM)
     #define USE_WIRED_EEPROM    1
   #else
     #define USE_FALLBACK_EEPROM 1
   #endif
 #else
   #undef I2C_EEPROM
   #undef SPI_EEPROM
   #undef QSPI_EEPROM
   #undef SDCARD_EEPROM_EMULATION
   #undef SRAM_EEPROM_EMULATION

commit 1d714512f088a3f5afb8ffd1d946cdb03b4b11bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Apr 28 18:42:31 2020 -0500

    Fix undefined Z stall

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5d5d4321a9..844b291429 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1501,20 +1501,23 @@
 #if HAS_TRINAMIC_CONFIG
   #if ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
     #define STEALTHCHOP_ENABLED 1
   #endif
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1
   #endif
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
+    #undef Z2_STALL_SENSITIVITY
+    #undef Z3_STALL_SENSITIVITY
+    #undef Z4_STALL_SENSITIVITY
   #endif
   #if defined(X_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(X)
     #define X_SENSORLESS 1
   #endif
   #if defined(X2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(X2)
     #define X2_SENSORLESS 1
   #endif
   #if defined(Y_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(Y)
     #define Y_SENSORLESS 1
   #endif

commit 01c646a892c9cd36baf577ca9be344e3490a7727
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 22:35:25 2020 -0500

    Apply more HAS_HOTEND

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5635453b64..5d5d4321a9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1646,21 +1646,21 @@
 #if HAS_ADC_TEST(BED)
   #define HAS_TEMP_ADC_BED 1
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 
-#if HOTENDS && EITHER(HAS_TEMP_ADC_0, HEATER_0_USES_MAX6675)
+#if HAS_HOTEND && EITHER(HAS_TEMP_ADC_0, HEATER_0_USES_MAX6675)
   #define HAS_TEMP_HOTEND 1
 #endif
 #define HAS_TEMP_BED        HAS_TEMP_ADC_BED
 #define HAS_TEMP_PROBE      HAS_TEMP_ADC_PROBE
 #define HAS_TEMP_CHAMBER    HAS_TEMP_ADC_CHAMBER
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
 #endif

commit c4d57462dc96f7da5c9e46600a9c6c2da41f537e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 04:49:31 2020 -0500

    Apply HAS_MULTI_HOTEND

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b4f68fcf7b..5635453b64 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1746,21 +1746,21 @@
 #if  (ENABLED(THERMAL_PROTECTION_HOTENDS) || !EXTRUDERS) \
   && (ENABLED(THERMAL_PROTECTION_BED)     || !HAS_HEATED_BED) \
   && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER)
   #define THERMALLY_SAFE 1
 #endif
 
 // Auto fans
 #if HAS_HOTEND && PIN_EXISTS(E0_AUTO_FAN)
   #define HAS_AUTO_FAN_0 1
 #endif
-#if HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN)
+#if HAS_MULTI_HOTEND && PIN_EXISTS(E1_AUTO_FAN)
   #define HAS_AUTO_FAN_1 1
 #endif
 #if HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN)
   #define HAS_AUTO_FAN_2 1
 #endif
 #if HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN)
   #define HAS_AUTO_FAN_3 1
 #endif
 #if HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN)
   #define HAS_AUTO_FAN_4 1
@@ -1990,41 +1990,41 @@
 #endif
 #if HAS_HEATER_7 && !defined(HEATER_7_INVERTING)
   #define HEATER_7_INVERTING false
 #endif
 
 /**
  * Helper Macros for heaters and extruder fan
  */
 
 #define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, (v) ^ HEATER_0_INVERTING)
-#if HOTENDS > 1 || ENABLED(HEATERS_PARALLEL)
+#if EITHER(HAS_MULTI_HOTEND, HEATERS_PARALLEL)
   #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, (v) ^ HEATER_1_INVERTING)
   #if HOTENDS > 2
     #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, (v) ^ HEATER_2_INVERTING)
     #if HOTENDS > 3
       #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, (v) ^ HEATER_3_INVERTING)
       #if HOTENDS > 4
         #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, (v) ^ HEATER_4_INVERTING)
         #if HOTENDS > 5
           #define WRITE_HEATER_5(v) WRITE(HEATER_5_PIN, (v) ^ HEATER_5_INVERTING)
           #if HOTENDS > 6
             #define WRITE_HEATER_6(v) WRITE(HEATER_6_PIN, (v) ^ HEATER_6_INVERTING)
             #if HOTENDS > 7
               #define WRITE_HEATER_7(v) WRITE(HEATER_7_PIN, (v) ^ HEATER_7_INVERTING)
             #endif // HOTENDS > 7
           #endif // HOTENDS > 6
         #endif // HOTENDS > 5
       #endif // HOTENDS > 4
     #endif // HOTENDS > 3
   #endif // HOTENDS > 2
-#endif // HOTENDS > 1
+#endif // HAS_MULTI_HOTEND || HEATERS_PARALLEL
 #if ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
 #else
   #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
 #endif
 
 #ifndef MIN_POWER
   #define MIN_POWER 0
 #endif
 

commit 8b3c7dda755ebce5bd57a7ce52891a137ea12b35
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 04:41:18 2020 -0500

    Add HAS_FAN and others

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 67116f662c..b4f68fcf7b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1700,20 +1700,21 @@
 #if PIN_EXISTS(HEATER_7)
   #define HAS_HEATER_7 1
 #endif
 #if PIN_EXISTS(HEATER_BED)
   #define HAS_HEATER_BED 1
 #endif
 
 // Shorthand for common combinations
 #if HAS_TEMP_BED && HAS_HEATER_BED
   #define HAS_HEATED_BED 1
+  #define BED_MAX_TARGET (BED_MAXTEMP - 10)
 #endif
 #if HAS_HEATED_BED || HAS_TEMP_CHAMBER
   #define BED_OR_CHAMBER 1
 #endif
 #if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE
   #define HAS_TEMP_SENSOR 1
 #endif
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
   #define HAS_HEATED_CHAMBER 1
 #endif
@@ -2077,20 +2078,21 @@
   #define FAN_COUNT 3
 #elif HAS_FAN1
   #define FAN_COUNT 2
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else
   #define FAN_COUNT 0
 #endif
 
 #if FAN_COUNT > 0
+  #define HAS_FAN 1
   #define WRITE_FAN(n, v) WRITE(FAN##n##_PIN, (v) ^ FAN_INVERTING)
 #endif
 
 /**
  * Part Cooling fan multipliexer
  */
 #if PIN_EXISTS(FANMUX0)
   #define HAS_FANMUX 1
 #endif
 

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4cefe82008..67116f662c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -24,21 +24,21 @@
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
 // Linear advance uses Jerk since E is an isolated axis
-#if HAS_JUNCTION_DEVIATION && ENABLED(LIN_ADVANCE)
+#if BOTH(HAS_JUNCTION_DEVIATION, LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
   #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION)
     #define USE_EMULATED_EEPROM 1
   #elif ANY(I2C_EEPROM, SPI_EEPROM, QSPI_EEPROM)
@@ -1646,21 +1646,21 @@
 #if HAS_ADC_TEST(BED)
   #define HAS_TEMP_ADC_BED 1
 #endif
 #if HAS_ADC_TEST(PROBE)
   #define HAS_TEMP_ADC_PROBE 1
 #endif
 #if HAS_ADC_TEST(CHAMBER)
   #define HAS_TEMP_ADC_CHAMBER 1
 #endif
 
-#if HOTENDS && (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
+#if HOTENDS && EITHER(HAS_TEMP_ADC_0, HEATER_0_USES_MAX6675)
   #define HAS_TEMP_HOTEND 1
 #endif
 #define HAS_TEMP_BED        HAS_TEMP_ADC_BED
 #define HAS_TEMP_PROBE      HAS_TEMP_ADC_PROBE
 #define HAS_TEMP_CHAMBER    HAS_TEMP_ADC_CHAMBER
 
 #if ENABLED(JOYSTICK)
   #if PIN_EXISTS(JOY_X)
     #define HAS_JOY_ADC_X 1
 #endif
@@ -1723,30 +1723,30 @@
   #undef PIDTEMPBED
 #endif
 #if EITHER(PIDTEMP, PIDTEMPBED)
   #define HAS_PID_HEATING 1
 #endif
 #if BOTH(PIDTEMP, PIDTEMPBED)
   #define HAS_PID_FOR_BOTH 1
 #endif
 
 // Thermal protection
-#if HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED)
+#if BOTH(HAS_HEATED_BED, THERMAL_PROTECTION_BED)
   #define HAS_THERMALLY_PROTECTED_BED 1
 #endif
 #if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
   #define WATCH_HOTENDS 1
 #endif
 #if HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0
   #define WATCH_BED 1
 #endif
-#if HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
+#if BOTH(HAS_HEATED_CHAMBER, THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
   #define WATCH_CHAMBER 1
 #endif
 #if  (ENABLED(THERMAL_PROTECTION_HOTENDS) || !EXTRUDERS) \
   && (ENABLED(THERMAL_PROTECTION_BED)     || !HAS_HEATED_BED) \
   && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER)
   #define THERMALLY_SAFE 1
 #endif
 
 // Auto fans
 #if HAS_HOTEND && PIN_EXISTS(E0_AUTO_FAN)
@@ -2135,21 +2135,21 @@
     #define CASE_LIGHT_MAX_PWM 255
   #elif !WITHIN(CASE_LIGHT_MAX_PWM, 1, 255)
     #error "CASE_LIGHT_MAX_PWM must be a value from 1 to 255."
   #endif
 #endif
 
 /**
  * Bed Probe dependencies
  */
 #if HAS_BED_PROBE
-  #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN
+  #if BOTH(ENDSTOPPULLUPS, HAS_Z_MIN_PROBE_PIN)
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MAX
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
   #ifndef XY_PROBE_SPEED
     #ifdef HOMING_FEEDRATE_XY

commit 55d66fb8971d9e5dbfb15e7ae5c952839b488f59
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 20:49:11 2020 -0500

    Add HAS_JUNCTION_DEVIATION

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9269c76b7d..4cefe82008 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -24,21 +24,21 @@
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
 // Linear advance uses Jerk since E is an isolated axis
-#if DISABLED(CLASSIC_JERK) && ENABLED(LIN_ADVANCE)
+#if HAS_JUNCTION_DEVIATION && ENABLED(LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
   #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION)
     #define USE_EMULATED_EEPROM 1
   #elif ANY(I2C_EEPROM, SPI_EEPROM, QSPI_EEPROM)

commit 2f6262c27b11598293839f6d46f3b340ee6a1f4c
Author: studiodyne <42887851+studiodyne@users.noreply.github.com>
Date:   Thu Apr 23 04:03:28 2020 +0200

    Automatic Tool Migration feature (#17248)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bb42c39665..9269c76b7d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2215,22 +2215,22 @@
   #define QUIET_PROBING 1
 #endif
 #if EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
   #define HEATER_IDLE_HANDLER 1
 #endif
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
   #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
 #endif
 
-#if EXTRUDERS > 1 && !defined(TOOLCHANGE_FIL_EXTRA_PRIME)
-  #define TOOLCHANGE_FIL_EXTRA_PRIME 0
+#if EXTRUDERS > 1 && !defined(TOOLCHANGE_FS_EXTRA_PRIME)
+  #define TOOLCHANGE_FS_EXTRA_PRIME 0
 #endif
 
 /**
  * Only constrain Z on DELTA / SCARA machines
  */
 #if IS_KINEMATIC
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e8279475c7..bb42c39665 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -392,21 +392,23 @@
 #if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL)
   #define PSU_POWERUP_DELAY 250
 #endif
 
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
 
-#define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
+#if ANY_TEMP_SENSOR_IS(1000)
+  #define HAS_USER_THERMISTORS 1
+#endif
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675
   #if TEMP_SENSOR_0 == -3
     #define HEATER_0_MAX6675_TMIN -270
     #define HEATER_0_MAX6675_TMAX 1800
   #else
     #define HEATER_0_MAX6675_TMIN    0
     #define HEATER_0_MAX6675_TMAX 1024
   #endif
@@ -1262,244 +1264,247 @@
 #if PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X))
   #define HAS_X_ENABLE 1
 #endif
 #if PIN_EXISTS(X_DIR)
   #define HAS_X_DIR 1
 #endif
 #if PIN_EXISTS(X_STEP)
   #define HAS_X_STEP 1
 #endif
 #if PIN_EXISTS(X_MS1)
-  #define HAS_X_MICROSTEPS 1
+  #define HAS_X_MS_PINS 1
 #endif
 
 #if PIN_EXISTS(X2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2))
   #define HAS_X2_ENABLE 1
 #endif
 #if PIN_EXISTS(X2_DIR)
   #define HAS_X2_DIR 1
 #endif
 #if PIN_EXISTS(X2_STEP)
   #define HAS_X2_STEP 1
 #endif
 #if PIN_EXISTS(X2_MS1)
-  #define HAS_X2_MICROSTEPS 1
+  #define HAS_X2_MS_PINS 1
 #endif
 
 #if PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
   #define HAS_Y_ENABLE 1
 #endif
 #if PIN_EXISTS(Y_DIR)
   #define HAS_Y_DIR 1
 #endif
 #if PIN_EXISTS(Y_STEP)
   #define HAS_Y_STEP 1
 #endif
 #if PIN_EXISTS(Y_MS1)
-  #define HAS_Y_MICROSTEPS 1
+  #define HAS_Y_MS_PINS 1
 #endif
 
 #if PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
   #define HAS_Y2_ENABLE 1
 #endif
 #if PIN_EXISTS(Y2_DIR)
   #define HAS_Y2_DIR 1
 #endif
 #if PIN_EXISTS(Y2_STEP)
   #define HAS_Y2_STEP 1
 #endif
 #if PIN_EXISTS(Y2_MS1)
-  #define HAS_Y2_MICROSTEPS 1
+  #define HAS_Y2_MS_PINS 1
 #endif
 
 #if PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
   #define HAS_Z_ENABLE 1
 #endif
 #if PIN_EXISTS(Z_DIR)
   #define HAS_Z_DIR 1
 #endif
 #if PIN_EXISTS(Z_STEP)
   #define HAS_Z_STEP 1
 #endif
 #if PIN_EXISTS(Z_MS1)
-  #define HAS_Z_MICROSTEPS 1
+  #define HAS_Z_MS_PINS 1
 #endif
 
 #if PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
   #define HAS_Z2_ENABLE 1
 #endif
 #if PIN_EXISTS(Z2_DIR)
   #define HAS_Z2_DIR 1
 #endif
 #if PIN_EXISTS(Z2_STEP)
   #define HAS_Z2_STEP 1
 #endif
 #if PIN_EXISTS(Z2_MS1)
-  #define HAS_Z2_MICROSTEPS 1
+  #define HAS_Z2_MS_PINS 1
 #endif
 
 #if PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
   #define HAS_Z3_ENABLE 1
 #endif
 #if PIN_EXISTS(Z3_DIR)
   #define HAS_Z3_DIR 1
 #endif
 #if PIN_EXISTS(Z3_STEP)
   #define HAS_Z3_STEP 1
 #endif
 #if PIN_EXISTS(Z3_MS1)
-  #define HAS_Z3_MICROSTEPS 1
+  #define HAS_Z3_MS_PINS 1
 #endif
 
 #if PIN_EXISTS(Z4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
   #define HAS_Z4_ENABLE 1
 #endif
 #if PIN_EXISTS(Z4_DIR)
   #define HAS_Z4_DIR 1
 #endif
 #if PIN_EXISTS(Z4_STEP)
   #define HAS_Z4_STEP 1
 #endif
 #if PIN_EXISTS(Z4_MS1)
-  #define HAS_Z4_MICROSTEPS 1
+  #define HAS_Z4_MS_PINS 1
 #endif
 
 // Extruder steppers and solenoids
 #if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
   #define HAS_E0_ENABLE 1
 #endif
 #if PIN_EXISTS(E0_DIR)
   #define HAS_E0_DIR 1
 #endif
 #if PIN_EXISTS(E0_STEP)
   #define HAS_E0_STEP 1
 #endif
 #if PIN_EXISTS(E0_MS1)
-  #define HAS_E0_MICROSTEPS 1
+  #define HAS_E0_MS_PINS 1
 #endif
 #if PIN_EXISTS(SOL0)
   #define HAS_SOLENOID_0 1
 #endif
 
 #if PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
   #define HAS_E1_ENABLE 1
 #endif
 #if PIN_EXISTS(E1_DIR)
   #define HAS_E1_DIR 1
 #endif
 #if PIN_EXISTS(E1_STEP)
   #define HAS_E1_STEP 1
 #endif
 #if PIN_EXISTS(E1_MS1)
-  #define HAS_E1_MICROSTEPS 1
+  #define HAS_E1_MS_PINS 1
 #endif
 #if PIN_EXISTS(SOL1)
   #define HAS_SOLENOID_1 1
 #endif
 
 #if PIN_EXISTS(E2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
   #define HAS_E2_ENABLE 1
 #endif
 #if PIN_EXISTS(E2_DIR)
   #define HAS_E2_DIR 1
 #endif
 #if PIN_EXISTS(E2_STEP)
   #define HAS_E2_STEP 1
 #endif
 #if PIN_EXISTS(E2_MS1)
-  #define HAS_E2_MICROSTEPS 1
+  #define HAS_E2_MS_PINS 1
 #endif
 #if PIN_EXISTS(SOL2)
   #define HAS_SOLENOID_2 1
 #endif
 
 #if PIN_EXISTS(E3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
   #define HAS_E3_ENABLE 1
 #endif
 #if PIN_EXISTS(E3_DIR)
   #define HAS_E3_DIR 1
 #endif
 #if PIN_EXISTS(E3_STEP)
   #define HAS_E3_STEP 1
 #endif
 #if PIN_EXISTS(E3_MS1)
-  #define HAS_E3_MICROSTEPS 1
+  #define HAS_E3_MS_PINS 1
 #endif
 #if PIN_EXISTS(SOL3)
   #define HAS_SOLENOID_3 1
 #endif
 
 #if PIN_EXISTS(E4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
   #define HAS_E4_ENABLE 1
 #endif
 #if PIN_EXISTS(E4_DIR)
   #define HAS_E4_DIR 1
 #endif
 #if PIN_EXISTS(E4_STEP)
   #define HAS_E4_STEP 1
 #endif
 #if PIN_EXISTS(E4_MS1)
-  #define HAS_E4_MICROSTEPS 1
+  #define HAS_E4_MS_PINS 1
 #endif
 #if PIN_EXISTS(SOL4)
   #define HAS_SOLENOID_4 1
 #endif
 
 #if PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
   #define HAS_E5_ENABLE 1
 #endif
 #if PIN_EXISTS(E5_DIR)
   #define HAS_E5_DIR 1
 #endif
 #if PIN_EXISTS(E5_STEP)
   #define HAS_E5_STEP 1
 #endif
 #if PIN_EXISTS(E5_MS1)
-  #define HAS_E5_MICROSTEPS 1
+  #define HAS_E5_MS_PINS 1
 #endif
 #if PIN_EXISTS(SOL5)
   #define HAS_SOLENOID_5 1
 #endif
 
 #if PIN_EXISTS(E6_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
   #define HAS_E6_ENABLE 1
 #endif
 #if PIN_EXISTS(E6_DIR)
   #define HAS_E6_DIR 1
 #endif
 #if PIN_EXISTS(E6_STEP)
   #define HAS_E6_STEP 1
 #endif
 #if PIN_EXISTS(E6_MS1)
-  #define HAS_E6_MICROSTEPS 1
+  #define HAS_E6_MS_PINS 1
 #endif
 #if PIN_EXISTS(SOL6)
   #define HAS_SOLENOID_6 1
 #endif
 
 #if PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
   #define HAS_E7_ENABLE 1
 #endif
 #if PIN_EXISTS(E7_DIR)
   #define HAS_E7_DIR 1
 #endif
 #if PIN_EXISTS(E7_STEP)
   #define HAS_E7_STEP 1
 #endif
 #if PIN_EXISTS(E7_MS1)
-  #define HAS_E7_MICROSTEPS 1
+  #define HAS_E7_MS_PINS 1
 #endif
 #if PIN_EXISTS(SOL7)
   #define HAS_SOLENOID_7 1
 #endif
 
+//
 // Trinamic Stepper Drivers
+//
+
 #if HAS_TRINAMIC_CONFIG
   #if ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
     #define STEALTHCHOP_ENABLED 1
   #endif
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1
   #endif
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
@@ -1528,24 +1533,29 @@
   #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
     #define Z4_SENSORLESS 1
   #endif
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
     #define Y_SPI_SENSORLESS Y_SENSORLESS
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
 #endif
 
-#define HAS_E_STEPPER_ENABLE (HAS_E_DRIVER(TMC2660) \
+#if (HAS_E_DRIVER(TMC2660) \
   || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
-    && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) \
-)
+    && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) )
+  #define HAS_E_STEPPER_ENABLE 1
+#endif
+
+#if ANY_AXIS_HAS(SW_SERIAL)
+  #define HAS_TMC_SW_SERIAL 1
+#endif
 
 //
 // Endstops and bed probe
 //
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == P)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
@@ -1760,38 +1770,45 @@
 #if HOTENDS > 6 && PIN_EXISTS(E6_AUTO_FAN)
   #define HAS_AUTO_FAN_6 1
 #endif
 #if HOTENDS > 7 && PIN_EXISTS(E7_AUTO_FAN)
   #define HAS_AUTO_FAN_7 1
 #endif
 #if HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN)
   #define HAS_AUTO_CHAMBER_FAN 1
 #endif
 
-#define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_FAN_6 || HAS_AUTO_FAN_7 || HAS_AUTO_CHAMBER_FAN)
+#if HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_FAN_6 || HAS_AUTO_FAN_7 || HAS_AUTO_CHAMBER_FAN
+  #define HAS_AUTO_FAN 1
+#endif
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
-#if HAS_AUTO_FAN
-  #define AUTO_CHAMBER_IS_E (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
+#if HAS_AUTO_FAN && (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
+  #define AUTO_CHAMBER_IS_E 1
 #endif
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
-#define HAS_AUTO_REPORTING EITHER(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS)
+#if EITHER(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS)
+  #define HAS_AUTO_REPORTING 1
+#endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Other fans
-#define HAS_FAN0 (PIN_EXISTS(FAN))
-#define _HAS_FAN(P) (PIN_EXISTS(FAN##P) && CONTROLLER_FAN_PIN != FAN##P##_PIN && E0_AUTO_FAN_PIN != FAN##P##_PIN && E1_AUTO_FAN_PIN != FAN##P##_PIN && E2_AUTO_FAN_PIN != FAN##P##_PIN && E3_AUTO_FAN_PIN != FAN##P##_PIN && E4_AUTO_FAN_PIN != FAN##P##_PIN && E5_AUTO_FAN_PIN != FAN##P##_PIN && E6_AUTO_FAN_PIN != FAN##P##_PIN && E7_AUTO_FAN_PIN != FAN##P##_PIN)
+#if PIN_EXISTS(FAN)
+  #define HAS_FAN0 1
+#endif
+#define _NOT_E_AUTO(N,F) (E##N##_AUTO_FAN_PIN != FAN##F##_PIN)
+#define _HAS_FAN(F) (PIN_EXISTS(FAN##F) && CONTROLLER_FAN_PIN != FAN##F##_PIN && _NOT_E_AUTO(0,F) && _NOT_E_AUTO(1,F) && _NOT_E_AUTO(2,F) && _NOT_E_AUTO(3,F) && _NOT_E_AUTO(4,F) && _NOT_E_AUTO(5,F) && _NOT_E_AUTO(6,F) && _NOT_E_AUTO(7,F))
 #if _HAS_FAN(1)
   #define HAS_FAN1 1
 #endif
 #if _HAS_FAN(2)
   #define HAS_FAN2 1
 #endif
 #if _HAS_FAN(3)
   #define HAS_FAN3 1
 #endif
 #if _HAS_FAN(4)
@@ -1799,20 +1816,22 @@
 #endif
 #if _HAS_FAN(5)
   #define HAS_FAN5 1
 #endif
 #if _HAS_FAN(6)
   #define HAS_FAN6 1
 #endif
 #if _HAS_FAN(7)
   #define HAS_FAN7 1
 #endif
+#undef _NOT_E_AUTO
+#undef _HAS_FAN
 #if PIN_EXISTS(CONTROLLER_FAN)
   #define HAS_CONTROLLER_FAN 1
 #endif
 
 // Servos
 #if PIN_EXISTS(SERVO0) && NUM_SERVOS > 0
   #define HAS_SERVO_0 1
 #endif
 #if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
   #define HAS_SERVO_1 1
@@ -1859,27 +1878,27 @@
 #if PIN_EXISTS(STEPPER_RESET)
   #define HAS_STEPPER_RESET 1
 #endif
 #if PIN_EXISTS(DIGIPOTSS)
   #define HAS_DIGIPOTSS 1
 #endif
 #if  ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
   #define HAS_MOTOR_CURRENT_PWM 1
 #endif
 
-#if HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_Z4_MICROSTEPS
-  #define HAS_SOME_Z_MICROSTEPS 1
+#if HAS_Z_MS_PINS || HAS_Z2_MS_PINS || HAS_Z3_MS_PINS || HAS_Z4_MS_PINS
+  #define HAS_SOME_Z_MS_PINS 1
 #endif
-#if HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS || HAS_E6_MICROSTEPS || HAS_E7_MICROSTEPS
-  #define HAS_SOME_E_MICROSTEPS 1
+#if HAS_E0_MS_PINS || HAS_E1_MS_PINS || HAS_E2_MS_PINS || HAS_E3_MS_PINS || HAS_E4_MS_PINS || HAS_E5_MS_PINS || HAS_E6_MS_PINS || HAS_E7_MS_PINS
+  #define HAS_SOME_E_MS_PINS 1
 #endif
-#if HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_SOME_Z_MICROSTEPS || HAS_SOME_E_MICROSTEPS
+#if HAS_X_MS_PINS || HAS_X2_MS_PINS || HAS_Y_MS_PINS || HAS_Y2_MS_PINS || HAS_SOME_Z_MICROSTEPS || HAS_SOME_E_MS_PINS
   #define HAS_MICROSTEPS 1
 #endif
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)
@@ -2064,21 +2083,23 @@
   #define FAN_COUNT 0
 #endif
 
 #if FAN_COUNT > 0
   #define WRITE_FAN(n, v) WRITE(FAN##n##_PIN, (v) ^ FAN_INVERTING)
 #endif
 
 /**
  * Part Cooling fan multipliexer
  */
-#define HAS_FANMUX PIN_EXISTS(FANMUX0)
+#if PIN_EXISTS(FANMUX0)
+  #define HAS_FANMUX 1
+#endif
 
 /**
  * MIN/MAX fan PWM scaling
  */
 #ifndef FAN_OFF_PWM
   #define FAN_OFF_PWM 0
 #endif
 #ifndef FAN_MIN_PWM
   #if FAN_OFF_PWM > 0
     #define FAN_MIN_PWM (FAN_OFF_PWM + 1)

commit 0fec478562c4fb0959831aa169c24dec90e9e74e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Apr 21 21:26:25 2020 -0500

    Wrangle HAL EEPROM types

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ac4de5df10..e8279475c7 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -32,21 +32,23 @@
 
 // Linear advance uses Jerk since E is an isolated axis
 #if DISABLED(CLASSIC_JERK) && ENABLED(LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
 // Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
   // EEPROM type may be defined by compile flags, configs, HALs, or pins
   // Set additional flags to let HALs choose in their Conditionals_post.h
-  #if NONE(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION) && ANY(I2C_EEPROM, SPI_EEPROM, QSPI_EEPROM)
+  #if ANY(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION)
+    #define USE_EMULATED_EEPROM 1
+  #elif ANY(I2C_EEPROM, SPI_EEPROM, QSPI_EEPROM)
     #define USE_WIRED_EEPROM    1
   #else
     #define USE_FALLBACK_EEPROM 1
   #endif
 #else
   #undef I2C_EEPROM
   #undef SPI_EEPROM
   #undef QSPI_EEPROM
   #undef SDCARD_EEPROM_EMULATION
   #undef SRAM_EEPROM_EMULATION

commit b55dd2cb82cbee78325f6a2e42458a2d48c06114
Author: Thomas Hollstegge <Tho85@users.noreply.github.com>
Date:   Mon Apr 20 14:07:23 2020 +0200

    Fix low contrast on Minipanel display (#17601)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 48490b75a5..ac4de5df10 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -282,22 +282,24 @@
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
-#elif EITHER(MAKRPANEL, MINIPANEL)
+#elif ENABLED(MAKRPANEL)
   #define _LCD_CONTRAST_INIT  17
+#elif ENABLED(MINIPANEL)
+  #define _LCD_CONTRAST_INIT  150
 #endif
 
 #ifdef _LCD_CONTRAST_INIT
   #define HAS_LCD_CONTRAST 1
 #endif
 
 #if HAS_LCD_CONTRAST
   #ifndef LCD_CONTRAST_MIN
     #ifdef _LCD_CONTRAST_MIN
       #define LCD_CONTRAST_MIN _LCD_CONTRAST_MIN

commit 15f6f53638a6778d22a17e1900fb3a9fdc92dade
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 19 23:56:55 2020 -0500

    Add HAS_HOTEND, etc.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ee41c4af67..48490b75a5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -379,21 +379,21 @@
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_HIGH
     #define PSU_NAME "XBox"     // X-Box 360 (203W)
   #else
     #define PSU_NAME "ATX"      // ATX style
   #endif
 #endif
 
 #if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL)
-  #define PSU_POWERUP_DELAY 100
+  #define PSU_POWERUP_DELAY 250
 #endif
 
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
 
@@ -1248,108 +1248,252 @@
   #if ENABLED(USE_ZMIN_PLUG)
     #define ENDSTOPPULLDOWN_ZMIN
   #endif
 #endif
 
 /**
  * Shorthand for pin tests, used wherever needed
  */
 
 // Steppers
-#define HAS_X_ENABLE      (PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X)))
-#define HAS_X_DIR         (PIN_EXISTS(X_DIR))
-#define HAS_X_STEP        (PIN_EXISTS(X_STEP))
-#define HAS_X_MICROSTEPS  (PIN_EXISTS(X_MS1))
-
-#define HAS_X2_ENABLE     (PIN_EXISTS(X2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2)))
-#define HAS_X2_DIR        (PIN_EXISTS(X2_DIR))
-#define HAS_X2_STEP       (PIN_EXISTS(X2_STEP))
-#define HAS_X2_MICROSTEPS (PIN_EXISTS(X2_MS1))
-
-#define HAS_Y_ENABLE      (PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y)))
-#define HAS_Y_DIR         (PIN_EXISTS(Y_DIR))
-#define HAS_Y_STEP        (PIN_EXISTS(Y_STEP))
-#define HAS_Y_MICROSTEPS  (PIN_EXISTS(Y_MS1))
-
-#define HAS_Y2_ENABLE     (PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2)))
-#define HAS_Y2_DIR        (PIN_EXISTS(Y2_DIR))
-#define HAS_Y2_STEP       (PIN_EXISTS(Y2_STEP))
-#define HAS_Y2_MICROSTEPS (PIN_EXISTS(Y2_MS1))
-
-#define HAS_Z_ENABLE      (PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z)))
-#define HAS_Z_DIR         (PIN_EXISTS(Z_DIR))
-#define HAS_Z_STEP        (PIN_EXISTS(Z_STEP))
-#define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
-
-#define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2)))
-#define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
-#define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
-#define HAS_Z2_MICROSTEPS (PIN_EXISTS(Z2_MS1))
-
-#define HAS_Z3_ENABLE     (PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3)))
-#define HAS_Z3_DIR        (PIN_EXISTS(Z3_DIR))
-#define HAS_Z3_STEP       (PIN_EXISTS(Z3_STEP))
-#define HAS_Z3_MICROSTEPS (PIN_EXISTS(Z3_MS1))
-
-#define HAS_Z4_ENABLE     (PIN_EXISTS(Z4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4)))
-#define HAS_Z4_DIR        (PIN_EXISTS(Z4_DIR))
-#define HAS_Z4_STEP       (PIN_EXISTS(Z4_STEP))
-#define HAS_Z4_MICROSTEPS (PIN_EXISTS(Z4_MS1))
+#if PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X))
+  #define HAS_X_ENABLE 1
+#endif
+#if PIN_EXISTS(X_DIR)
+  #define HAS_X_DIR 1
+#endif
+#if PIN_EXISTS(X_STEP)
+  #define HAS_X_STEP 1
+#endif
+#if PIN_EXISTS(X_MS1)
+  #define HAS_X_MICROSTEPS 1
+#endif
+
+#if PIN_EXISTS(X2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2))
+  #define HAS_X2_ENABLE 1
+#endif
+#if PIN_EXISTS(X2_DIR)
+  #define HAS_X2_DIR 1
+#endif
+#if PIN_EXISTS(X2_STEP)
+  #define HAS_X2_STEP 1
+#endif
+#if PIN_EXISTS(X2_MS1)
+  #define HAS_X2_MICROSTEPS 1
+#endif
+
+#if PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y))
+  #define HAS_Y_ENABLE 1
+#endif
+#if PIN_EXISTS(Y_DIR)
+  #define HAS_Y_DIR 1
+#endif
+#if PIN_EXISTS(Y_STEP)
+  #define HAS_Y_STEP 1
+#endif
+#if PIN_EXISTS(Y_MS1)
+  #define HAS_Y_MICROSTEPS 1
+#endif
+
+#if PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2))
+  #define HAS_Y2_ENABLE 1
+#endif
+#if PIN_EXISTS(Y2_DIR)
+  #define HAS_Y2_DIR 1
+#endif
+#if PIN_EXISTS(Y2_STEP)
+  #define HAS_Y2_STEP 1
+#endif
+#if PIN_EXISTS(Y2_MS1)
+  #define HAS_Y2_MICROSTEPS 1
+#endif
+
+#if PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z))
+  #define HAS_Z_ENABLE 1
+#endif
+#if PIN_EXISTS(Z_DIR)
+  #define HAS_Z_DIR 1
+#endif
+#if PIN_EXISTS(Z_STEP)
+  #define HAS_Z_STEP 1
+#endif
+#if PIN_EXISTS(Z_MS1)
+  #define HAS_Z_MICROSTEPS 1
+#endif
+
+#if PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2))
+  #define HAS_Z2_ENABLE 1
+#endif
+#if PIN_EXISTS(Z2_DIR)
+  #define HAS_Z2_DIR 1
+#endif
+#if PIN_EXISTS(Z2_STEP)
+  #define HAS_Z2_STEP 1
+#endif
+#if PIN_EXISTS(Z2_MS1)
+  #define HAS_Z2_MICROSTEPS 1
+#endif
+
+#if PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3))
+  #define HAS_Z3_ENABLE 1
+#endif
+#if PIN_EXISTS(Z3_DIR)
+  #define HAS_Z3_DIR 1
+#endif
+#if PIN_EXISTS(Z3_STEP)
+  #define HAS_Z3_STEP 1
+#endif
+#if PIN_EXISTS(Z3_MS1)
+  #define HAS_Z3_MICROSTEPS 1
+#endif
+
+#if PIN_EXISTS(Z4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4))
+  #define HAS_Z4_ENABLE 1
+#endif
+#if PIN_EXISTS(Z4_DIR)
+  #define HAS_Z4_DIR 1
+#endif
+#if PIN_EXISTS(Z4_STEP)
+  #define HAS_Z4_STEP 1
+#endif
+#if PIN_EXISTS(Z4_MS1)
+  #define HAS_Z4_MICROSTEPS 1
+#endif
 
 // Extruder steppers and solenoids
-#define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0)))
-#define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
-#define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
-#define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
-#define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
-
-#define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1)))
-#define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))
-#define HAS_E1_STEP       (PIN_EXISTS(E1_STEP))
-#define HAS_E1_MICROSTEPS (PIN_EXISTS(E1_MS1))
-#define HAS_SOLENOID_1    (PIN_EXISTS(SOL1))
-
-#define HAS_E2_ENABLE     (PIN_EXISTS(E2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2)))
-#define HAS_E2_DIR        (PIN_EXISTS(E2_DIR))
-#define HAS_E2_STEP       (PIN_EXISTS(E2_STEP))
-#define HAS_E2_MICROSTEPS (PIN_EXISTS(E2_MS1))
-#define HAS_SOLENOID_2    (PIN_EXISTS(SOL2))
-
-#define HAS_E3_ENABLE     (PIN_EXISTS(E3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3)))
-#define HAS_E3_DIR        (PIN_EXISTS(E3_DIR))
-#define HAS_E3_STEP       (PIN_EXISTS(E3_STEP))
-#define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
-#define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
-
-#define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4)))
-#define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
-#define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
-#define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
-#define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
-
-#define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5)))
-#define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
-#define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
-#define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
-#define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
-
-#define HAS_E6_ENABLE     (PIN_EXISTS(E6_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6)))
-#define HAS_E6_DIR        (PIN_EXISTS(E6_DIR))
-#define HAS_E6_STEP       (PIN_EXISTS(E6_STEP))
-#define HAS_E6_MICROSTEPS (PIN_EXISTS(E6_MS1))
-#define HAS_SOLENOID_6    (PIN_EXISTS(SOL6))
-
-#define HAS_E7_ENABLE     (PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7)))
-#define HAS_E7_DIR        (PIN_EXISTS(E7_DIR))
-#define HAS_E7_STEP       (PIN_EXISTS(E7_STEP))
-#define HAS_E7_MICROSTEPS (PIN_EXISTS(E7_MS1))
-#define HAS_SOLENOID_7    (PIN_EXISTS(SOL7))
+#if PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0))
+  #define HAS_E0_ENABLE 1
+#endif
+#if PIN_EXISTS(E0_DIR)
+  #define HAS_E0_DIR 1
+#endif
+#if PIN_EXISTS(E0_STEP)
+  #define HAS_E0_STEP 1
+#endif
+#if PIN_EXISTS(E0_MS1)
+  #define HAS_E0_MICROSTEPS 1
+#endif
+#if PIN_EXISTS(SOL0)
+  #define HAS_SOLENOID_0 1
+#endif
+
+#if PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1))
+  #define HAS_E1_ENABLE 1
+#endif
+#if PIN_EXISTS(E1_DIR)
+  #define HAS_E1_DIR 1
+#endif
+#if PIN_EXISTS(E1_STEP)
+  #define HAS_E1_STEP 1
+#endif
+#if PIN_EXISTS(E1_MS1)
+  #define HAS_E1_MICROSTEPS 1
+#endif
+#if PIN_EXISTS(SOL1)
+  #define HAS_SOLENOID_1 1
+#endif
+
+#if PIN_EXISTS(E2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2))
+  #define HAS_E2_ENABLE 1
+#endif
+#if PIN_EXISTS(E2_DIR)
+  #define HAS_E2_DIR 1
+#endif
+#if PIN_EXISTS(E2_STEP)
+  #define HAS_E2_STEP 1
+#endif
+#if PIN_EXISTS(E2_MS1)
+  #define HAS_E2_MICROSTEPS 1
+#endif
+#if PIN_EXISTS(SOL2)
+  #define HAS_SOLENOID_2 1
+#endif
+
+#if PIN_EXISTS(E3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3))
+  #define HAS_E3_ENABLE 1
+#endif
+#if PIN_EXISTS(E3_DIR)
+  #define HAS_E3_DIR 1
+#endif
+#if PIN_EXISTS(E3_STEP)
+  #define HAS_E3_STEP 1
+#endif
+#if PIN_EXISTS(E3_MS1)
+  #define HAS_E3_MICROSTEPS 1
+#endif
+#if PIN_EXISTS(SOL3)
+  #define HAS_SOLENOID_3 1
+#endif
+
+#if PIN_EXISTS(E4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4))
+  #define HAS_E4_ENABLE 1
+#endif
+#if PIN_EXISTS(E4_DIR)
+  #define HAS_E4_DIR 1
+#endif
+#if PIN_EXISTS(E4_STEP)
+  #define HAS_E4_STEP 1
+#endif
+#if PIN_EXISTS(E4_MS1)
+  #define HAS_E4_MICROSTEPS 1
+#endif
+#if PIN_EXISTS(SOL4)
+  #define HAS_SOLENOID_4 1
+#endif
+
+#if PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5))
+  #define HAS_E5_ENABLE 1
+#endif
+#if PIN_EXISTS(E5_DIR)
+  #define HAS_E5_DIR 1
+#endif
+#if PIN_EXISTS(E5_STEP)
+  #define HAS_E5_STEP 1
+#endif
+#if PIN_EXISTS(E5_MS1)
+  #define HAS_E5_MICROSTEPS 1
+#endif
+#if PIN_EXISTS(SOL5)
+  #define HAS_SOLENOID_5 1
+#endif
+
+#if PIN_EXISTS(E6_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6))
+  #define HAS_E6_ENABLE 1
+#endif
+#if PIN_EXISTS(E6_DIR)
+  #define HAS_E6_DIR 1
+#endif
+#if PIN_EXISTS(E6_STEP)
+  #define HAS_E6_STEP 1
+#endif
+#if PIN_EXISTS(E6_MS1)
+  #define HAS_E6_MICROSTEPS 1
+#endif
+#if PIN_EXISTS(SOL6)
+  #define HAS_SOLENOID_6 1
+#endif
+
+#if PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7))
+  #define HAS_E7_ENABLE 1
+#endif
+#if PIN_EXISTS(E7_DIR)
+  #define HAS_E7_DIR 1
+#endif
+#if PIN_EXISTS(E7_STEP)
+  #define HAS_E7_STEP 1
+#endif
+#if PIN_EXISTS(E7_MS1)
+  #define HAS_E7_MICROSTEPS 1
+#endif
+#if PIN_EXISTS(SOL7)
+  #define HAS_SOLENOID_7 1
+#endif
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC_CONFIG
   #if ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
     #define STEALTHCHOP_ENABLED 1
   #endif
   #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
     #define USE_SENSORLESS 1
   #endif
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
@@ -1398,76 +1542,160 @@
 
 // Is an endstop plug used for extra Z endstops or the probe?
 #define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == P)
 #define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
 #define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
 #define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
 
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
-#define HAS_X_MIN _HAS_STOP(X,MIN)
-#define HAS_X_MAX _HAS_STOP(X,MAX)
-#define HAS_Y_MIN _HAS_STOP(Y,MIN)
-#define HAS_Y_MAX _HAS_STOP(Y,MAX)
-#define HAS_Z_MIN _HAS_STOP(Z,MIN)
-#define HAS_Z_MAX _HAS_STOP(Z,MAX)
-#define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
-#define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
-#define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
-#define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
-#define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
-#define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
-#define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
-#define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
-#define HAS_Z4_MIN (PIN_EXISTS(Z4_MIN))
-#define HAS_Z4_MAX (PIN_EXISTS(Z4_MAX))
-#define HAS_Z_MIN_PROBE_PIN (HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE))
+#if _HAS_STOP(X,MIN)
+  #define HAS_X_MIN 1
+#endif
+#if _HAS_STOP(X,MAX)
+  #define HAS_X_MAX 1
+#endif
+#if _HAS_STOP(Y,MIN)
+  #define HAS_Y_MIN 1
+#endif
+#if _HAS_STOP(Y,MAX)
+  #define HAS_Y_MAX 1
+#endif
+#if _HAS_STOP(Z,MIN)
+  #define HAS_Z_MIN 1
+#endif
+#if _HAS_STOP(Z,MAX)
+  #define HAS_Z_MAX 1
+#endif
+#if PIN_EXISTS(X2_MIN)
+  #define HAS_X2_MIN 1
+#endif
+#if PIN_EXISTS(X2_MAX)
+  #define HAS_X2_MAX 1
+#endif
+#if PIN_EXISTS(Y2_MIN)
+  #define HAS_Y2_MIN 1
+#endif
+#if PIN_EXISTS(Y2_MAX)
+  #define HAS_Y2_MAX 1
+#endif
+#if PIN_EXISTS(Z2_MIN)
+  #define HAS_Z2_MIN 1
+#endif
+#if PIN_EXISTS(Z2_MAX)
+  #define HAS_Z2_MAX 1
+#endif
+#if PIN_EXISTS(Z3_MIN)
+  #define HAS_Z3_MIN 1
+#endif
+#if PIN_EXISTS(Z3_MAX)
+  #define HAS_Z3_MAX 1
+#endif
+#if PIN_EXISTS(Z4_MIN)
+  #define HAS_Z4_MIN 1
+#endif
+#if PIN_EXISTS(Z4_MAX)
+  #define HAS_Z4_MAX 1
+#endif
+#if HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE)
+  #define HAS_Z_MIN_PROBE_PIN 1
+#endif
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
-#define HAS_TEMP_ADC_0        HAS_ADC_TEST(0)
-#define HAS_TEMP_ADC_1        HAS_ADC_TEST(1)
-#define HAS_TEMP_ADC_2        HAS_ADC_TEST(2)
-#define HAS_TEMP_ADC_3        HAS_ADC_TEST(3)
-#define HAS_TEMP_ADC_4        HAS_ADC_TEST(4)
-#define HAS_TEMP_ADC_5        HAS_ADC_TEST(5)
-#define HAS_TEMP_ADC_6        HAS_ADC_TEST(6)
-#define HAS_TEMP_ADC_7        HAS_ADC_TEST(7)
-#define HAS_TEMP_ADC_BED      HAS_ADC_TEST(BED)
-#define HAS_TEMP_ADC_PROBE    HAS_ADC_TEST(PROBE)
-#define HAS_TEMP_ADC_CHAMBER  HAS_ADC_TEST(CHAMBER)
-
-#define HAS_TEMP_HOTEND   ((HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675)) && HOTENDS)
+#if HAS_ADC_TEST(0)
+  #define HAS_TEMP_ADC_0 1
+#endif
+#if HAS_ADC_TEST(1)
+  #define HAS_TEMP_ADC_1 1
+#endif
+#if HAS_ADC_TEST(2)
+  #define HAS_TEMP_ADC_2 1
+#endif
+#if HAS_ADC_TEST(3)
+  #define HAS_TEMP_ADC_3 1
+#endif
+#if HAS_ADC_TEST(4)
+  #define HAS_TEMP_ADC_4 1
+#endif
+#if HAS_ADC_TEST(5)
+  #define HAS_TEMP_ADC_5 1
+#endif
+#if HAS_ADC_TEST(6)
+  #define HAS_TEMP_ADC_6 1
+#endif
+#if HAS_ADC_TEST(7)
+  #define HAS_TEMP_ADC_7 1
+#endif
+#if HAS_ADC_TEST(BED)
+  #define HAS_TEMP_ADC_BED 1
+#endif
+#if HAS_ADC_TEST(PROBE)
+  #define HAS_TEMP_ADC_PROBE 1
+#endif
+#if HAS_ADC_TEST(CHAMBER)
+  #define HAS_TEMP_ADC_CHAMBER 1
+#endif
+
+#if HOTENDS && (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
+  #define HAS_TEMP_HOTEND 1
+#endif
 #define HAS_TEMP_BED        HAS_TEMP_ADC_BED
 #define HAS_TEMP_PROBE      HAS_TEMP_ADC_PROBE
 #define HAS_TEMP_CHAMBER    HAS_TEMP_ADC_CHAMBER
 
 #if ENABLED(JOYSTICK)
-  #define HAS_JOY_ADC_X  PIN_EXISTS(JOY_X)
-  #define HAS_JOY_ADC_Y  PIN_EXISTS(JOY_Y)
-  #define HAS_JOY_ADC_Z  PIN_EXISTS(JOY_Z)
-  #define HAS_JOY_ADC_EN PIN_EXISTS(JOY_EN)
+  #if PIN_EXISTS(JOY_X)
+    #define HAS_JOY_ADC_X 1
+#endif
+  #if PIN_EXISTS(JOY_Y)
+    #define HAS_JOY_ADC_Y 1
+#endif
+  #if PIN_EXISTS(JOY_Z)
+    #define HAS_JOY_ADC_Z 1
+#endif
+  #if PIN_EXISTS(JOY_EN)
+    #define HAS_JOY_ADC_EN 1
+#endif
 #endif
 
 // Heaters
-#define HAS_HEATER_0    (PIN_EXISTS(HEATER_0))
-#define HAS_HEATER_1    (PIN_EXISTS(HEATER_1))
-#define HAS_HEATER_2    (PIN_EXISTS(HEATER_2))
-#define HAS_HEATER_3    (PIN_EXISTS(HEATER_3))
-#define HAS_HEATER_4    (PIN_EXISTS(HEATER_4))
-#define HAS_HEATER_5    (PIN_EXISTS(HEATER_5))
-#define HAS_HEATER_6    (PIN_EXISTS(HEATER_6))
-#define HAS_HEATER_7    (PIN_EXISTS(HEATER_7))
-#define HAS_HEATER_BED  (PIN_EXISTS(HEATER_BED))
+#if PIN_EXISTS(HEATER_0)
+  #define HAS_HEATER_0 1
+#endif
+#if PIN_EXISTS(HEATER_1)
+  #define HAS_HEATER_1 1
+#endif
+#if PIN_EXISTS(HEATER_2)
+  #define HAS_HEATER_2 1
+#endif
+#if PIN_EXISTS(HEATER_3)
+  #define HAS_HEATER_3 1
+#endif
+#if PIN_EXISTS(HEATER_4)
+  #define HAS_HEATER_4 1
+#endif
+#if PIN_EXISTS(HEATER_5)
+  #define HAS_HEATER_5 1
+#endif
+#if PIN_EXISTS(HEATER_6)
+  #define HAS_HEATER_6 1
+#endif
+#if PIN_EXISTS(HEATER_7)
+  #define HAS_HEATER_7 1
+#endif
+#if PIN_EXISTS(HEATER_BED)
+  #define HAS_HEATER_BED 1
+#endif
 
 // Shorthand for common combinations
 #if HAS_TEMP_BED && HAS_HEATER_BED
   #define HAS_HEATED_BED 1
 #endif
 #if HAS_HEATED_BED || HAS_TEMP_CHAMBER
   #define BED_OR_CHAMBER 1
 #endif
 #if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE
   #define HAS_TEMP_SENSOR 1
@@ -1500,66 +1728,112 @@
 #if HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
   #define WATCH_CHAMBER 1
 #endif
 #if  (ENABLED(THERMAL_PROTECTION_HOTENDS) || !EXTRUDERS) \
   && (ENABLED(THERMAL_PROTECTION_BED)     || !HAS_HEATED_BED) \
   && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER)
   #define THERMALLY_SAFE 1
 #endif
 
 // Auto fans
-#define HAS_AUTO_FAN_0 (HOTENDS > 0 && PIN_EXISTS(E0_AUTO_FAN))
-#define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
-#define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
-#define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
-#define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
-#define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
-#define HAS_AUTO_FAN_6 (HOTENDS > 6 && PIN_EXISTS(E6_AUTO_FAN))
-#define HAS_AUTO_FAN_7 (HOTENDS > 7 && PIN_EXISTS(E7_AUTO_FAN))
-#define HAS_AUTO_CHAMBER_FAN (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN))
+#if HAS_HOTEND && PIN_EXISTS(E0_AUTO_FAN)
+  #define HAS_AUTO_FAN_0 1
+#endif
+#if HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN)
+  #define HAS_AUTO_FAN_1 1
+#endif
+#if HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN)
+  #define HAS_AUTO_FAN_2 1
+#endif
+#if HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN)
+  #define HAS_AUTO_FAN_3 1
+#endif
+#if HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN)
+  #define HAS_AUTO_FAN_4 1
+#endif
+#if HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN)
+  #define HAS_AUTO_FAN_5 1
+#endif
+#if HOTENDS > 6 && PIN_EXISTS(E6_AUTO_FAN)
+  #define HAS_AUTO_FAN_6 1
+#endif
+#if HOTENDS > 7 && PIN_EXISTS(E7_AUTO_FAN)
+  #define HAS_AUTO_FAN_7 1
+#endif
+#if HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN)
+  #define HAS_AUTO_CHAMBER_FAN 1
+#endif
 
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_FAN_6 || HAS_AUTO_FAN_7 || HAS_AUTO_CHAMBER_FAN)
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN
   #define AUTO_CHAMBER_IS_E (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
 #endif
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 #define HAS_AUTO_REPORTING EITHER(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS)
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define _HAS_FAN(P) (PIN_EXISTS(FAN##P) && CONTROLLER_FAN_PIN != FAN##P##_PIN && E0_AUTO_FAN_PIN != FAN##P##_PIN && E1_AUTO_FAN_PIN != FAN##P##_PIN && E2_AUTO_FAN_PIN != FAN##P##_PIN && E3_AUTO_FAN_PIN != FAN##P##_PIN && E4_AUTO_FAN_PIN != FAN##P##_PIN && E5_AUTO_FAN_PIN != FAN##P##_PIN && E6_AUTO_FAN_PIN != FAN##P##_PIN && E7_AUTO_FAN_PIN != FAN##P##_PIN)
-#define HAS_FAN1 _HAS_FAN(1)
-#define HAS_FAN2 _HAS_FAN(2)
-#define HAS_FAN3 _HAS_FAN(3)
-#define HAS_FAN4 _HAS_FAN(4)
-#define HAS_FAN5 _HAS_FAN(5)
-#define HAS_FAN6 _HAS_FAN(6)
-#define HAS_FAN7 _HAS_FAN(7)
-#define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
+#if _HAS_FAN(1)
+  #define HAS_FAN1 1
+#endif
+#if _HAS_FAN(2)
+  #define HAS_FAN2 1
+#endif
+#if _HAS_FAN(3)
+  #define HAS_FAN3 1
+#endif
+#if _HAS_FAN(4)
+  #define HAS_FAN4 1
+#endif
+#if _HAS_FAN(5)
+  #define HAS_FAN5 1
+#endif
+#if _HAS_FAN(6)
+  #define HAS_FAN6 1
+#endif
+#if _HAS_FAN(7)
+  #define HAS_FAN7 1
+#endif
+#if PIN_EXISTS(CONTROLLER_FAN)
+  #define HAS_CONTROLLER_FAN 1
+#endif
 
 // Servos
-#define HAS_SERVO_0 (PIN_EXISTS(SERVO0) && NUM_SERVOS > 0)
-#define HAS_SERVO_1 (PIN_EXISTS(SERVO1) && NUM_SERVOS > 1)
-#define HAS_SERVO_2 (PIN_EXISTS(SERVO2) && NUM_SERVOS > 2)
-#define HAS_SERVO_3 (PIN_EXISTS(SERVO3) && NUM_SERVOS > 3)
-#define HAS_SERVOS  (NUM_SERVOS > 0)
+#if PIN_EXISTS(SERVO0) && NUM_SERVOS > 0
+  #define HAS_SERVO_0 1
+#endif
+#if PIN_EXISTS(SERVO1) && NUM_SERVOS > 1
+  #define HAS_SERVO_1 1
+#endif
+#if PIN_EXISTS(SERVO2) && NUM_SERVOS > 2
+  #define HAS_SERVO_2 1
+#endif
+#if PIN_EXISTS(SERVO3) && NUM_SERVOS > 3
+  #define HAS_SERVO_3 1
+#endif
+#if NUM_SERVOS > 0
+  #define HAS_SERVOS 1
+#endif
 
 // Sensors
-#define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
+#if PIN_EXISTS(FILWIDTH)
+  #define HAS_FILAMENT_WIDTH_SENSOR 1
+#endif
 
 // User Interface
 #if PIN_EXISTS(HOME)
   #define HAS_HOME 1
 #endif
 #if PIN_EXISTS(KILL)
   #define HAS_KILL 1
 #endif
 #if PIN_EXISTS(SUICIDE)
   #define HAS_SUICIDE 1
@@ -1631,28 +1905,44 @@
       #ifndef MICROSTEP16
         #define MICROSTEP16 HIGH,HIGH,LOW
       #endif
     #endif
   #else
     #ifndef MICROSTEP16
       #define MICROSTEP16 HIGH,HIGH,LOW
     #endif
   #endif
 
-  #define HAS_MICROSTEP1 defined(MICROSTEP1)
-  #define HAS_MICROSTEP2 defined(MICROSTEP2)
-  #define HAS_MICROSTEP4 defined(MICROSTEP4)
-  #define HAS_MICROSTEP8 defined(MICROSTEP8)
-  #define HAS_MICROSTEP16 defined(MICROSTEP16)
-  #define HAS_MICROSTEP32 defined(MICROSTEP32)
-  #define HAS_MICROSTEP64 defined(MICROSTEP64)
-  #define HAS_MICROSTEP128 defined(MICROSTEP128)
+  #ifdef MICROSTEP1
+    #define HAS_MICROSTEP1 1
+  #endif
+  #ifdef MICROSTEP2
+    #define HAS_MICROSTEP2 1
+  #endif
+  #ifdef MICROSTEP4
+    #define HAS_MICROSTEP4 1
+  #endif
+  #ifdef MICROSTEP8
+    #define HAS_MICROSTEP8 1
+  #endif
+  #ifdef MICROSTEP16
+    #define HAS_MICROSTEP16 1
+  #endif
+  #ifdef MICROSTEP32
+    #define HAS_MICROSTEP32 1
+  #endif
+  #ifdef MICROSTEP64
+    #define HAS_MICROSTEP64 1
+  #endif
+  #ifdef MICROSTEP128
+    #define HAS_MICROSTEP128 1
+  #endif
 
 #endif // HAS_MICROSTEPS
 
 /**
  * Heater signal inversion defaults
  */
 
 #if HAS_HEATER_0 && !defined(HEATER_0_INVERTING)
   #define HEATER_0_INVERTING false
 #endif
@@ -1889,22 +2179,26 @@
 
 /**
  * Heater, Fan, and Probe interactions
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
   #undef ADAPTIVE_FAN_SLOWING
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
 
-#define QUIET_PROBING (HAS_BED_PROBE && (EITHER(PROBING_HEATERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
-#define HEATER_IDLE_HANDLER EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
+#if HAS_BED_PROBE && (EITHER(PROBING_HEATERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0)
+  #define QUIET_PROBING 1
+#endif
+#if EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
+  #define HEATER_IDLE_HANDLER 1
+#endif
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
   #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
 #endif
 
 #if EXTRUDERS > 1 && !defined(TOOLCHANGE_FIL_EXTRA_PRIME)
   #define TOOLCHANGE_FIL_EXTRA_PRIME 0
 #endif
 
 /**

commit 3a42b6c5c60b98d38f1acd353f5bbae4e15857e5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Apr 17 10:24:20 2020 -0500

    Patch M425 for CAN_CALIBRATE
    
    Fixes #17430

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b28b27792d..ee41c4af67 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -140,21 +140,21 @@
 #endif
 
 // Calibration codes only for non-core axes
 #if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
   #if IS_CORE
     #define X_AXIS_INDEX 0
     #define Y_AXIS_INDEX 1
     #define Z_AXIS_INDEX 2
     #define CAN_CALIBRATE(A,B) (A##_AXIS_INDEX == B##_INDEX)
   #else
-    #define CAN_CALIBRATE(...) 1
+    #define CAN_CALIBRATE(A,B) 1
   #endif
 #endif
 #define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
   #undef LEVEL_BED_CORNERS
 #endif

commit 880f63b008d13f0df89ebe62e6c11193748ae828
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 16 01:56:37 2020 -0500

    It looks like HAS_ONBOARD_SD is obsolete

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b38aaa1332..b28b27792d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -332,21 +332,21 @@
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
 
   #if DISABLED(SHARED_SD_CARD)
-    #define INIT_SDCARD_ON_BOOT 1
+    #define INIT_SDCARD_ON_BOOT
   #endif
 
   #if PIN_EXISTS(SD_DETECT)
     #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
       #undef SD_DETECT_STATE
       #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
         #define SD_DETECT_STATE HIGH
       #endif
     #endif
     #ifndef SD_DETECT_STATE

commit df8b7dfc406be095a62b5445b69c40034d418823
Author: Ben <jediminer543@users.noreply.github.com>
Date:   Fri Apr 3 01:31:08 2020 +0100

    Various Laser / Spindle improvements (#15335)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 20867b4fea..b38aaa1332 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -317,31 +317,50 @@
       #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override the SD_DETECT_STATE set in Configuration_adv.h
+ * and enable sharing of onboard SD host drives (all platforms but AGCM4)
  */
 #if ENABLED(SDSUPPORT)
-  #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
-    #undef SD_DETECT_STATE
-    #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
-      #define SD_DETECT_STATE HIGH
-    #endif
+
+  #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE) && !defined(ARDUINO_GRAND_CENTRAL_M4)
+    //
+    // The external SD card is not used. Hardware SPI is used to access the card.
+    // When sharing the SD card with a PC we want the menu options to
+    // mount/unmount the card and refresh it. So we disable card detect.
+    //
+    #undef SD_DETECT_PIN
+    #define SHARED_SD_CARD
+  #endif
+
+  #if DISABLED(SHARED_SD_CARD)
+    #define INIT_SDCARD_ON_BOOT 1
   #endif
-  #ifndef SD_DETECT_STATE
-    #define SD_DETECT_STATE LOW
+
+  #if PIN_EXISTS(SD_DETECT)
+    #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
+      #undef SD_DETECT_STATE
+      #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
+        #define SD_DETECT_STATE HIGH
+      #endif
+    #endif
+    #ifndef SD_DETECT_STATE
+      #define SD_DETECT_STATE LOW
+    #endif
   #endif
+
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y
   #define DISABLE_INACTIVE_Y DISABLE_Y
@@ -2146,28 +2165,13 @@
   #endif
   #ifndef LCD_HEIGHT
     #if HAS_GRAPHICAL_LCD
       #define LCD_HEIGHT 5
     #else
       #define LCD_HEIGHT TERN(ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
-#if ENABLED(SDSUPPORT)
-  #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE) && !defined(ARDUINO_GRAND_CENTRAL_M4)
-    //
-    // The external SD card is not used. Hardware SPI is used to access the card.
-    // When sharing the SD card with a PC we want the menu options to
-    // mount/unmount the card and refresh it. So we disable card detect.
-    //
-    #undef SD_DETECT_PIN
-    #define SHARED_SD_CARD
-  #endif
-  #if DISABLED(SHARED_SD_CARD)
-    #define INIT_SDCARD_ON_BOOT 1
-  #endif
-#endif
-
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
 #endif

commit 514afddeb4b3a7ede9ff481504aae69219a95f68
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Apr 1 18:53:58 2020 -0500

    Minor code cleanup

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9ea298f02d..20867b4fea 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2157,17 +2157,17 @@
   #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE) && !defined(ARDUINO_GRAND_CENTRAL_M4)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
-    #define INIT_SDCARD_ON_BOOT
+    #define INIT_SDCARD_ON_BOOT 1
   #endif
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
 #endif

commit 53fe572bbdfe4d51e420f6d002197cee533e17fd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 27 22:00:27 2020 -0500

    Limited backlash editing with Core kinematics (#17281)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d9db986466..9ea298f02d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -132,20 +132,33 @@
     #define NORMAL_AXIS Y_AXIS
     #define CORE_AXIS_2 C_AXIS
   #elif CORE_IS_YZ
     #define NORMAL_AXIS X_AXIS
     #define CORE_AXIS_1 B_AXIS
     #define CORE_AXIS_2 C_AXIS
   #endif
   #define CORESIGN(n) (ANY(COREYX, COREZX, COREZY) ? (-(n)) : (n))
 #endif
 
+// Calibration codes only for non-core axes
+#if EITHER(BACKLASH_GCODE, CALIBRATION_GCODE)
+  #if IS_CORE
+    #define X_AXIS_INDEX 0
+    #define Y_AXIS_INDEX 1
+    #define Z_AXIS_INDEX 2
+    #define CAN_CALIBRATE(A,B) (A##_AXIS_INDEX == B##_INDEX)
+  #else
+    #define CAN_CALIBRATE(...) 1
+  #endif
+#endif
+#define AXIS_CAN_CALIBRATE(A) CAN_CALIBRATE(A,NORMAL_AXIS)
+
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
   #undef LEVEL_BED_CORNERS
 #endif
 
 /**
  * SCARA cannot use SLOWDOWN and requires QUICKHOME
  * Printable radius assumes joints can fully extend

commit 129b270628781eae776764e63fd514553e6c2204
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Fri Mar 27 23:29:17 2020 +0100

    QSPI EEPROM for SAMD51 (#17292)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ebc77b9383..d9db986466 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -28,30 +28,33 @@
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
 // Linear advance uses Jerk since E is an isolated axis
 #if DISABLED(CLASSIC_JERK) && ENABLED(LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
-// If no real EEPROM, Flash emulation, or SRAM emulation is available fall back to SD emulation
+// Determine which type of 'EEPROM' is in use
 #if ENABLED(EEPROM_SETTINGS)
-  #if NONE(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION) && EITHER(I2C_EEPROM, SPI_EEPROM)
-    #define USE_REAL_EEPROM 1
+  // EEPROM type may be defined by compile flags, configs, HALs, or pins
+  // Set additional flags to let HALs choose in their Conditionals_post.h
+  #if NONE(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION) && ANY(I2C_EEPROM, SPI_EEPROM, QSPI_EEPROM)
+    #define USE_WIRED_EEPROM    1
   #else
-    #define USE_EMULATED_EEPROM 1
+    #define USE_FALLBACK_EEPROM 1
   #endif
 #else
   #undef I2C_EEPROM
   #undef SPI_EEPROM
+  #undef QSPI_EEPROM
   #undef SDCARD_EEPROM_EMULATION
   #undef SRAM_EEPROM_EMULATION
   #undef FLASH_EEPROM_EMULATION
 #endif
 
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))

commit b14c933171b50c87808367bf14872fb7acced92d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Mar 16 15:59:05 2020 -0500

    LPC1768 EEPROM fallback to flash, add overrides (#17184)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 97090d4775..ebc77b9383 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -28,29 +28,27 @@
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
 // Linear advance uses Jerk since E is an isolated axis
 #if DISABLED(CLASSIC_JERK) && ENABLED(LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
+// If no real EEPROM, Flash emulation, or SRAM emulation is available fall back to SD emulation
 #if ENABLED(EEPROM_SETTINGS)
   #if NONE(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION) && EITHER(I2C_EEPROM, SPI_EEPROM)
     #define USE_REAL_EEPROM 1
   #else
     #define USE_EMULATED_EEPROM 1
   #endif
-  #if NONE(USE_REAL_EEPROM, FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION)
-    #define SDCARD_EEPROM_EMULATION 1
-  #endif
 #else
   #undef I2C_EEPROM
   #undef SPI_EEPROM
   #undef SDCARD_EEPROM_EMULATION
   #undef SRAM_EEPROM_EMULATION
   #undef FLASH_EEPROM_EMULATION
 #endif
 
 #ifdef TEENSYDUINO
   #undef max

commit 118bd2f8b2a1f81884cb55a8fc00b708a51aa15b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 23:18:16 2020 -0500

    Apply loop shorthand macros (#17159)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3f96fad083..97090d4775 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1847,67 +1847,20 @@
   #endif
   #ifndef YZ_SKEW_FACTOR
     #if defined(YZ_DIAG_AC) && defined(YZ_DIAG_BD) && defined(YZ_SIDE_AD)
       #define YZ_SKEW_FACTOR _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
     #else
       #define YZ_SKEW_FACTOR 0.0
     #endif
   #endif
 #endif // SKEW_CORRECTION
 
-/**
- * Set granular options based on the specific type of leveling
- */
-#if ENABLED(AUTO_BED_LEVELING_UBL)
-  #undef LCD_BED_LEVELING
-  #if ENABLED(DELTA)
-    #define UBL_SEGMENTED 1
-  #endif
-#endif
-#if EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_3POINT)
-  #define ABL_PLANAR 1
-#endif
-#if EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR)
-  #define ABL_GRID 1
-#endif
-#if ANY(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR, AUTO_BED_LEVELING_3POINT)
-  #define HAS_ABL_NOT_UBL 1
-#endif
-#if ANY(AUTO_BED_LEVELING_BILINEAR, AUTO_BED_LEVELING_UBL, MESH_BED_LEVELING)
-  #define HAS_MESH 1
-#endif
-#if EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT)
-  #define NEEDS_THREE_PROBE_POINTS 1
-#endif
-#if EITHER(HAS_ABL_NOT_UBL, AUTO_BED_LEVELING_UBL)
-  #define HAS_ABL_OR_UBL 1
-  #if DISABLED(PROBE_MANUALLY)
-    #define HAS_AUTOLEVEL 1
-  #endif
-#endif
-#if EITHER(HAS_ABL_OR_UBL, MESH_BED_LEVELING)
-  #define HAS_LEVELING 1
-  #if DISABLED(AUTO_BED_LEVELING_UBL)
-    #define PLANNER_LEVELING 1
-  #endif
-#endif
-#if EITHER(HAS_ABL_OR_UBL, Z_MIN_PROBE_REPEATABILITY_TEST)
-  #define HAS_PROBING_PROCEDURE 1
-#endif
-#if ANY(FWRETRACT, HAS_LEVELING, SKEW_CORRECTION)
-  #define HAS_POSITION_MODIFIERS 1
-#endif
-
-#if !HAS_LEVELING
-  #undef RESTORE_LEVELING_AFTER_G28
-#endif
-
 /**
  * Heater, Fan, and Probe interactions
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
   #undef ADAPTIVE_FAN_SLOWING
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
 
 #define QUIET_PROBING (HAS_BED_PROBE && (EITHER(PROBING_HEATERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))

commit 9c759e5f74ca69a7cb5169ea217dd179d65b1f44
Author: Jason Smith <jason.inet@gmail.com>
Date:   Thu Mar 12 17:26:09 2020 -0700

    Fix BAUD_RATE_GCODE, etc. (#17135)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e5dc7262a1..3f96fad083 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2193,10 +2193,14 @@
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
     #define INIT_SDCARD_ON_BOOT
   #endif
 #endif
+
+#if !NUM_SERIAL
+  #undef BAUD_RATE_GCODE
+#endif

commit 112245ee48eff38231ac9732fa0f4d2c5317e0e9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 11 16:41:18 2020 -0500

    More explicit EEPROM types (#17127)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8b2cd0efd1..e5dc7262a1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -28,20 +28,37 @@
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
 // Linear advance uses Jerk since E is an isolated axis
 #if DISABLED(CLASSIC_JERK) && ENABLED(LIN_ADVANCE)
   #define HAS_LINEAR_E_JERK 1
 #endif
 
+#if ENABLED(EEPROM_SETTINGS)
+  #if NONE(FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION, SDCARD_EEPROM_EMULATION) && EITHER(I2C_EEPROM, SPI_EEPROM)
+    #define USE_REAL_EEPROM 1
+  #else
+    #define USE_EMULATED_EEPROM 1
+  #endif
+  #if NONE(USE_REAL_EEPROM, FLASH_EEPROM_EMULATION, SRAM_EEPROM_EMULATION)
+    #define SDCARD_EEPROM_EMULATION 1
+  #endif
+#else
+  #undef I2C_EEPROM
+  #undef SPI_EEPROM
+  #undef SDCARD_EEPROM_EMULATION
+  #undef SRAM_EEPROM_EMULATION
+  #undef FLASH_EEPROM_EMULATION
+#endif
+
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 

commit 8f66dbfcd51aeae4f6168cfce971964bb46c9454
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 10 15:43:06 2020 -0500

    SD_DETECT_INVERTED => SD_DETECT_STATE (#17112)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e2c7093bb1..8b2cd0efd1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -285,24 +285,32 @@
     #else
       #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
- * Override here because this is set in Configuration_adv.h
+ * Override the SD_DETECT_STATE set in Configuration_adv.h
  */
-#if HAS_LCD_MENU && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER) && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
-  #undef SD_DETECT_INVERTED
+#if ENABLED(SDSUPPORT)
+  #if HAS_LCD_MENU && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
+    #undef SD_DETECT_STATE
+    #if ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
+      #define SD_DETECT_STATE HIGH
+    #endif
+  #endif
+  #ifndef SD_DETECT_STATE
+    #define SD_DETECT_STATE LOW
+  #endif
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y
   #define DISABLE_INACTIVE_Y DISABLE_Y

commit b21edce943f16439162febbcc7571e1a0ed4492b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Mar 8 14:47:04 2020 -0500

    More general SD_DETECT_INVERTED override

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0a7d7aa52d..e2c7093bb1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -287,21 +287,21 @@
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override here because this is set in Configuration_adv.h
  */
-#if HAS_LCD_MENU && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER) && !(defined(ARDUINO_GRAND_CENTRAL_M4) && SD_CONNECTION_IS(ONBOARD))
+#if HAS_LCD_MENU && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER) && (SD_CONNECTION_IS(LCD) || !defined(SDCARD_CONNECTION))
   #undef SD_DETECT_INVERTED
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y

commit 64d092935b27ff89955f0430eef5815b15e5a92d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 7 22:20:41 2020 -0600

    More useful ENABLED / DISABLED macros (#17054)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 32243afc37..0a7d7aa52d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -23,20 +23,25 @@
 
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
 #ifdef GITHUB_ACTIONS
   // Extras for CI testing
 #endif
 
+// Linear advance uses Jerk since E is an isolated axis
+#if DISABLED(CLASSIC_JERK) && ENABLED(LIN_ADVANCE)
+  #define HAS_LINEAR_E_JERK 1
+#endif
+
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
@@ -56,27 +61,22 @@
 #endif
 
 // Require 0,0 bed center for Delta and SCARA
 #if IS_KINEMATIC
   #define BED_CENTER_AT_0_0
 #endif
 
 // Define center values for future use
 #define _X_HALF_BED ((X_BED_SIZE) / 2)
 #define _Y_HALF_BED ((Y_BED_SIZE) / 2)
-#if ENABLED(BED_CENTER_AT_0_0)
-  #define X_CENTER 0
-  #define Y_CENTER 0
-#else
-  #define X_CENTER _X_HALF_BED
-  #define Y_CENTER _Y_HALF_BED
-#endif
+#define X_CENTER TERN(BED_CENTER_AT_0_0, 0, _X_HALF_BED)
+#define Y_CENTER TERN(BED_CENTER_AT_0_0, 0, _Y_HALF_BED)
 
 // Get the linear boundaries of the bed
 #define X_MIN_BED (X_CENTER - _X_HALF_BED)
 #define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
 #define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
 #define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
 
 /**
  * Dual X Carriage
  */
@@ -85,43 +85,47 @@
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
   #endif
 #endif
 
 /**
  * CoreXY, CoreXZ, and CoreYZ - and their reverse
  */
-#define CORE_IS_XY EITHER(COREXY, COREYX)
-#define CORE_IS_XZ EITHER(COREXZ, COREZX)
-#define CORE_IS_YZ EITHER(COREYZ, COREZY)
-#define IS_CORE (CORE_IS_XY || CORE_IS_XZ || CORE_IS_YZ)
+#if EITHER(COREXY, COREYX)
+  #define CORE_IS_XY 1
+#endif
+#if EITHER(COREXZ, COREZX)
+  #define CORE_IS_XZ 1
+#endif
+#if EITHER(COREYZ, COREZY)
+  #define CORE_IS_YZ 1
+#endif
+#if CORE_IS_XY || CORE_IS_XZ || CORE_IS_YZ
+  #define IS_CORE 1
+#endif
 #if IS_CORE
   #if CORE_IS_XY
     #define CORE_AXIS_1 A_AXIS
     #define CORE_AXIS_2 B_AXIS
     #define NORMAL_AXIS Z_AXIS
   #elif CORE_IS_XZ
     #define CORE_AXIS_1 A_AXIS
     #define NORMAL_AXIS Y_AXIS
     #define CORE_AXIS_2 C_AXIS
   #elif CORE_IS_YZ
     #define NORMAL_AXIS X_AXIS
     #define CORE_AXIS_1 B_AXIS
     #define CORE_AXIS_2 C_AXIS
   #endif
-  #if ANY(COREYX, COREZX, COREZY)
-    #define CORESIGN(n) (-(n))
-  #else
-    #define CORESIGN(n) (n)
-  #endif
+  #define CORESIGN(n) (ANY(COREYX, COREZX, COREZY) ? (-(n)) : (n))
 #endif
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
   #undef LEVEL_BED_CORNERS
 #endif
 
 /**
@@ -132,47 +136,37 @@
   #undef SLOWDOWN
   #define QUICK_HOME
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
 #endif
 
 /**
  * Set the home position based on settings or manual overrides
  */
 #ifdef MANUAL_X_HOME_POS
   #define X_HOME_POS MANUAL_X_HOME_POS
-#elif ENABLED(BED_CENTER_AT_0_0)
-  #if ENABLED(DELTA)
-    #define X_HOME_POS 0
-  #else
-    #define X_HOME_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
-  #endif
 #else
-  #if ENABLED(DELTA)
-    #define X_HOME_POS (X_MIN_POS + (X_BED_SIZE) * 0.5)
+  #define X_END_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
+  #if ENABLED(BED_CENTER_AT_0_0)
+    #define X_HOME_POS TERN(DELTA, 0, X_END_POS)
   #else
-    #define X_HOME_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
+    #define X_HOME_POS TERN(DELTA, X_MIN_POS + (X_BED_SIZE) * 0.5, X_END_POS)
   #endif
 #endif
 
 #ifdef MANUAL_Y_HOME_POS
   #define Y_HOME_POS MANUAL_Y_HOME_POS
-#elif ENABLED(BED_CENTER_AT_0_0)
-  #if ENABLED(DELTA)
-    #define Y_HOME_POS 0
-  #else
-    #define Y_HOME_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
-  #endif
 #else
-  #if ENABLED(DELTA)
-    #define Y_HOME_POS (Y_MIN_POS + (Y_BED_SIZE) * 0.5)
+  #define Y_END_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
+  #if ENABLED(BED_CENTER_AT_0_0)
+    #define Y_HOME_POS TERN(DELTA, 0, Y_END_POS)
   #else
-    #define Y_HOME_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
+    #define Y_HOME_POS TERN(DELTA, Y_MIN_POS + (Y_BED_SIZE) * 0.5, Y_END_POS)
   #endif
 #endif
 
 #ifdef MANUAL_Z_HOME_POS
   #define Z_HOME_POS MANUAL_Z_HOME_POS
 #else
   #define Z_HOME_POS (Z_HOME_DIR < 0 ? Z_MIN_POS : Z_MAX_POS)
 #endif
 
 /**
@@ -261,21 +255,24 @@
   #define _LCD_CONTRAST_INIT 195
 #elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif EITHER(MAKRPANEL, MINIPANEL)
   #define _LCD_CONTRAST_INIT  17
 #endif
 
-#define HAS_LCD_CONTRAST defined(_LCD_CONTRAST_INIT)
+#ifdef _LCD_CONTRAST_INIT
+  #define HAS_LCD_CONTRAST 1
+#endif
+
 #if HAS_LCD_CONTRAST
   #ifndef LCD_CONTRAST_MIN
     #ifdef _LCD_CONTRAST_MIN
       #define LCD_CONTRAST_MIN _LCD_CONTRAST_MIN
     #else
       #define LCD_CONTRAST_MIN 0
     #endif
   #endif
   #ifndef LCD_CONTRAST_INIT
     #define LCD_CONTRAST_INIT _LCD_CONTRAST_INIT
@@ -1284,34 +1281,54 @@
 #define HAS_SOLENOID_6    (PIN_EXISTS(SOL6))
 
 #define HAS_E7_ENABLE     (PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7)))
 #define HAS_E7_DIR        (PIN_EXISTS(E7_DIR))
 #define HAS_E7_STEP       (PIN_EXISTS(E7_STEP))
 #define HAS_E7_MICROSTEPS (PIN_EXISTS(E7_MS1))
 #define HAS_SOLENOID_7    (PIN_EXISTS(SOL7))
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC_CONFIG
-  #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
-  #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
+  #if ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
+    #define STEALTHCHOP_ENABLED 1
+  #endif
+  #if EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
+    #define USE_SENSORLESS 1
+  #endif
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
-  #define X_SENSORLESS  (AXIS_HAS_STALLGUARD(X)  && defined(X_STALL_SENSITIVITY))
-  #define X2_SENSORLESS (AXIS_HAS_STALLGUARD(X2) && defined(X2_STALL_SENSITIVITY))
-  #define Y_SENSORLESS  (AXIS_HAS_STALLGUARD(Y)  && defined(Y_STALL_SENSITIVITY))
-  #define Y2_SENSORLESS (AXIS_HAS_STALLGUARD(Y2) && defined(Y2_STALL_SENSITIVITY))
-  #define Z_SENSORLESS  (AXIS_HAS_STALLGUARD(Z)  && defined(Z_STALL_SENSITIVITY))
-  #define Z2_SENSORLESS (AXIS_HAS_STALLGUARD(Z2) && defined(Z2_STALL_SENSITIVITY))
-  #define Z3_SENSORLESS (AXIS_HAS_STALLGUARD(Z3) && defined(Z3_STALL_SENSITIVITY))
-  #define Z4_SENSORLESS (AXIS_HAS_STALLGUARD(Z4) && defined(Z4_STALL_SENSITIVITY))
+  #if defined(X_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(X)
+    #define X_SENSORLESS 1
+  #endif
+  #if defined(X2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(X2)
+    #define X2_SENSORLESS 1
+  #endif
+  #if defined(Y_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(Y)
+    #define Y_SENSORLESS 1
+  #endif
+  #if defined(Y2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Y2)
+    #define Y2_SENSORLESS 1
+  #endif
+  #if defined(Z_STALL_SENSITIVITY)  && AXIS_HAS_STALLGUARD(Z)
+    #define Z_SENSORLESS 1
+  #endif
+  #if defined(Z2_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z2)
+    #define Z2_SENSORLESS 1
+  #endif
+  #if defined(Z3_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z3)
+    #define Z3_SENSORLESS 1
+  #endif
+  #if defined(Z4_STALL_SENSITIVITY) && AXIS_HAS_STALLGUARD(Z4)
+    #define Z4_SENSORLESS 1
+  #endif
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
     #define Y_SPI_SENSORLESS Y_SENSORLESS
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
 #endif
 
 #define HAS_E_STEPPER_ENABLE (HAS_E_DRIVER(TMC2660) \
   || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
     && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) \
@@ -1381,37 +1398,62 @@
 #define HAS_HEATER_1    (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2    (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3    (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4    (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_5    (PIN_EXISTS(HEATER_5))
 #define HAS_HEATER_6    (PIN_EXISTS(HEATER_6))
 #define HAS_HEATER_7    (PIN_EXISTS(HEATER_7))
 #define HAS_HEATER_BED  (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations
-#define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
-#define BED_OR_CHAMBER (HAS_HEATED_BED || HAS_TEMP_CHAMBER)
-#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE)
-#define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER))
+#if HAS_TEMP_BED && HAS_HEATER_BED
+  #define HAS_HEATED_BED 1
+#endif
+#if HAS_HEATED_BED || HAS_TEMP_CHAMBER
+  #define BED_OR_CHAMBER 1
+#endif
+#if HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE
+  #define HAS_TEMP_SENSOR 1
+#endif
+#if HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER)
+  #define HAS_HEATED_CHAMBER 1
+#endif
 
 // PID heating
 #if !HAS_HEATED_BED
   #undef PIDTEMPBED
 #endif
-#define HAS_PID_HEATING EITHER(PIDTEMP, PIDTEMPBED)
-#define HAS_PID_FOR_BOTH BOTH(PIDTEMP, PIDTEMPBED)
+#if EITHER(PIDTEMP, PIDTEMPBED)
+  #define HAS_PID_HEATING 1
+#endif
+#if BOTH(PIDTEMP, PIDTEMPBED)
+  #define HAS_PID_FOR_BOTH 1
+#endif
 
 // Thermal protection
-#define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
-#define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
-#define WATCH_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
-#define WATCH_CHAMBER (HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0)
+#if HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED)
+  #define HAS_THERMALLY_PROTECTED_BED 1
+#endif
+#if ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0
+  #define WATCH_HOTENDS 1
+#endif
+#if HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0
+  #define WATCH_BED 1
+#endif
+#if HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0
+  #define WATCH_CHAMBER 1
+#endif
+#if  (ENABLED(THERMAL_PROTECTION_HOTENDS) || !EXTRUDERS) \
+  && (ENABLED(THERMAL_PROTECTION_BED)     || !HAS_HEATED_BED) \
+  && (ENABLED(THERMAL_PROTECTION_CHAMBER) || !HAS_HEATED_CHAMBER)
+  #define THERMALLY_SAFE 1
+#endif
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (HOTENDS > 0 && PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
 #define HAS_AUTO_FAN_6 (HOTENDS > 6 && PIN_EXISTS(E6_AUTO_FAN))
 #define HAS_AUTO_FAN_7 (HOTENDS > 7 && PIN_EXISTS(E7_AUTO_FAN))
@@ -1448,36 +1490,62 @@
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0) && NUM_SERVOS > 0)
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1) && NUM_SERVOS > 1)
 #define HAS_SERVO_2 (PIN_EXISTS(SERVO2) && NUM_SERVOS > 2)
 #define HAS_SERVO_3 (PIN_EXISTS(SERVO3) && NUM_SERVOS > 3)
 #define HAS_SERVOS  (NUM_SERVOS > 0)
 
 // Sensors
 #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
 
 // User Interface
-#define HAS_HOME        (PIN_EXISTS(HOME))
-#define HAS_KILL        (PIN_EXISTS(KILL))
-#define HAS_SUICIDE     (PIN_EXISTS(SUICIDE))
-#define HAS_PHOTOGRAPH  (PIN_EXISTS(PHOTOGRAPH))
-#define HAS_BUZZER      (PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
-#define USE_BEEPER      (HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
-#define HAS_CASE_LIGHT  (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
+#if PIN_EXISTS(HOME)
+  #define HAS_HOME 1
+#endif
+#if PIN_EXISTS(KILL)
+  #define HAS_KILL 1
+#endif
+#if PIN_EXISTS(SUICIDE)
+  #define HAS_SUICIDE 1
+#endif
+#if PIN_EXISTS(PHOTOGRAPH)
+  #define HAS_PHOTOGRAPH 1
+#endif
+#if PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+  #define HAS_BUZZER 1
+#endif
+#if HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER)
+  #define USE_BEEPER 1
+#endif
+#if PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE)
+  #define HAS_CASE_LIGHT 1
+#endif
 
 // Digital control
-#define HAS_STEPPER_RESET     (PIN_EXISTS(STEPPER_RESET))
-#define HAS_DIGIPOTSS         (PIN_EXISTS(DIGIPOTSS))
-#define HAS_MOTOR_CURRENT_PWM ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
+#if PIN_EXISTS(STEPPER_RESET)
+  #define HAS_STEPPER_RESET 1
+#endif
+#if PIN_EXISTS(DIGIPOTSS)
+  #define HAS_DIGIPOTSS 1
+#endif
+#if  ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
+  #define HAS_MOTOR_CURRENT_PWM 1
+#endif
 
-#define HAS_SOME_Z_MICROSTEPS (HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_Z4_MICROSTEPS)
-#define HAS_SOME_E_MICROSTEPS (HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS || HAS_E6_MICROSTEPS || HAS_E7_MICROSTEPS)
-#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_SOME_Z_MICROSTEPS || HAS_SOME_E_MICROSTEPS)
+#if HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_Z4_MICROSTEPS
+  #define HAS_SOME_Z_MICROSTEPS 1
+#endif
+#if HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS || HAS_E6_MICROSTEPS || HAS_E7_MICROSTEPS
+  #define HAS_SOME_E_MICROSTEPS 1
+#endif
+#if HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_SOME_Z_MICROSTEPS || HAS_SOME_E_MICROSTEPS
+  #define HAS_MICROSTEPS 1
+#endif
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)
     #ifndef MICROSTEP128
       #define MICROSTEP128 LOW,HIGH,LOW
@@ -1757,35 +1825,62 @@
       #define YZ_SKEW_FACTOR _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
     #else
       #define YZ_SKEW_FACTOR 0.0
     #endif
   #endif
 #endif // SKEW_CORRECTION
 
 /**
  * Set granular options based on the specific type of leveling
  */
-#define UBL_SEGMENTED   BOTH(AUTO_BED_LEVELING_UBL, DELTA)
-#define ABL_PLANAR      EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_3POINT)
-#define ABL_GRID        EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR)
-#define HAS_ABL_NOT_UBL (ABL_PLANAR || ABL_GRID)
-#define HAS_ABL_OR_UBL  (HAS_ABL_NOT_UBL || ENABLED(AUTO_BED_LEVELING_UBL))
-#define HAS_LEVELING    (HAS_ABL_OR_UBL || ENABLED(MESH_BED_LEVELING))
-#define HAS_AUTOLEVEL   (HAS_ABL_OR_UBL && DISABLED(PROBE_MANUALLY))
-#define HAS_MESH        ANY(AUTO_BED_LEVELING_BILINEAR, AUTO_BED_LEVELING_UBL, MESH_BED_LEVELING)
-#define PLANNER_LEVELING      (HAS_LEVELING && DISABLED(AUTO_BED_LEVELING_UBL))
-#define HAS_PROBING_PROCEDURE (HAS_ABL_OR_UBL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
-#define HAS_POSITION_MODIFIERS (ENABLED(FWRETRACT) || HAS_LEVELING || ENABLED(SKEW_CORRECTION))
-#define NEEDS_THREE_PROBE_POINTS EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT)
-
 #if ENABLED(AUTO_BED_LEVELING_UBL)
   #undef LCD_BED_LEVELING
+  #if ENABLED(DELTA)
+    #define UBL_SEGMENTED 1
+  #endif
+#endif
+#if EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_3POINT)
+  #define ABL_PLANAR 1
+#endif
+#if EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR)
+  #define ABL_GRID 1
+#endif
+#if ANY(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR, AUTO_BED_LEVELING_3POINT)
+  #define HAS_ABL_NOT_UBL 1
+#endif
+#if ANY(AUTO_BED_LEVELING_BILINEAR, AUTO_BED_LEVELING_UBL, MESH_BED_LEVELING)
+  #define HAS_MESH 1
+#endif
+#if EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT)
+  #define NEEDS_THREE_PROBE_POINTS 1
+#endif
+#if EITHER(HAS_ABL_NOT_UBL, AUTO_BED_LEVELING_UBL)
+  #define HAS_ABL_OR_UBL 1
+  #if DISABLED(PROBE_MANUALLY)
+    #define HAS_AUTOLEVEL 1
+  #endif
+#endif
+#if EITHER(HAS_ABL_OR_UBL, MESH_BED_LEVELING)
+  #define HAS_LEVELING 1
+  #if DISABLED(AUTO_BED_LEVELING_UBL)
+    #define PLANNER_LEVELING 1
+  #endif
+#endif
+#if EITHER(HAS_ABL_OR_UBL, Z_MIN_PROBE_REPEATABILITY_TEST)
+  #define HAS_PROBING_PROCEDURE 1
+#endif
+#if ANY(FWRETRACT, HAS_LEVELING, SKEW_CORRECTION)
+  #define HAS_POSITION_MODIFIERS 1
+#endif
+
+#if !HAS_LEVELING
+  #undef RESTORE_LEVELING_AFTER_G28
 #endif
 
 /**
  * Heater, Fan, and Probe interactions
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
   #undef ADAPTIVE_FAN_SLOWING
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
@@ -1898,22 +1993,22 @@
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
 #else
   #undef MESH_MIN_X
   #undef MESH_MIN_Y
   #undef MESH_MAX_X
   #undef MESH_MAX_Y
 #endif
 
-#if (defined(PROBE_PT_1_X) && defined(PROBE_PT_2_X) && defined(PROBE_PT_3_X) && defined(PROBE_PT_1_Y) && defined(PROBE_PT_2_Y) && defined(PROBE_PT_3_Y))
-  #define HAS_FIXED_3POINT
+#if defined(PROBE_PT_1_X) && defined(PROBE_PT_2_X) && defined(PROBE_PT_3_X) && defined(PROBE_PT_1_Y) && defined(PROBE_PT_2_Y) && defined(PROBE_PT_3_Y)
+  #define HAS_FIXED_3POINT 1
 #endif
 
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
@@ -1937,24 +2032,24 @@
   #endif
   #ifndef DOGLCD_MOSI
     #define DOGLCD_MOSI MOSI_PIN
   #endif
 #endif
 
 /**
  * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
  */
 #ifndef Z_HOMING_HEIGHT
-  #ifndef Z_CLEARANCE_BETWEEN_PROBES
-    #define Z_HOMING_HEIGHT 0
-  #else
+  #ifdef Z_CLEARANCE_BETWEEN_PROBES
     #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+  #else
+    #define Z_HOMING_HEIGHT 0
   #endif
 #endif
 
 #if PROBE_SELECTED
   #ifndef Z_CLEARANCE_BETWEEN_PROBES
     #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
   #endif
   #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
     #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
   #else
@@ -1968,29 +2063,30 @@
   #endif
 #endif
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
-#define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
-// The home offset also shifts the coordinate space
-#define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && IS_CARTESIAN)
-// The SCARA home offset applies only on G28
-#define HAS_SCARA_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && IS_SCARA)
-// Cumulative offset to workspace to save some calculation
-#define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT && HAS_HOME_OFFSET)
-// M206 sets the home offset for Cartesian machines
-#define HAS_M206_COMMAND (HAS_HOME_OFFSET && !IS_SCARA)
+#if DISABLED(NO_WORKSPACE_OFFSETS)
+  #define HAS_POSITION_SHIFT 1
+  #if IS_CARTESIAN
+    #define HAS_HOME_OFFSET 1       // The home offset also shifts the coordinate space
+    #define HAS_WORKSPACE_OFFSET 1  // Cumulative offset to workspace to save some calculation
+    #define HAS_M206_COMMAND 1      // M206 sets the home offset for Cartesian machines
+  #elif IS_SCARA
+    #define HAS_SCARA_OFFSET 1      // The SCARA home offset applies only on G28
+  #endif
+#endif
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
 // Add commands that need sub-codes to this list
 #if ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY)
   #define USE_GCODE_SUBCODES
 #endif
@@ -1999,39 +2095,34 @@
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
-#if ENABLED(SCROLL_LONG_FILENAMES)
-  #define MAX_VFAT_ENTRIES (5)
-#else
-  #define MAX_VFAT_ENTRIES (2)
-#endif
+#define MAX_VFAT_ENTRIES TERN(SCROLL_LONG_FILENAMES, 5, 2)
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER) && (SCK_PIN == LCD_PINS_D4)
-  #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
-                                    // directory levels still glitches the screen,
-                                    // but the following LCD update cleans it up.
+  #define SDCARD_SORT_ALPHA         // Keep one directory level in RAM. Changing directory levels
+                                    // may still glitch the screen, but LCD updates clean it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK
   #undef SDSORT_CACHE_NAMES
   #define SDSORT_LIMIT       64
   #define SDSORT_USES_RAM    true
   #define SDSORT_USES_STACK  false
   #define SDSORT_CACHE_NAMES true
   #ifndef FOLDER_SORTING
     #define FOLDER_SORTING     -1
@@ -2050,33 +2141,29 @@
 // Defined here to catch the above defines
 #if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
   #define HAS_FOLDER_SORTING 1
 #endif
 
 #if HAS_SPI_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_GRAPHICAL_LCD
       #define LCD_WIDTH 21
-    #elif ENABLED(ULTIPANEL)
-      #define LCD_WIDTH 20
     #else
-      #define LCD_WIDTH 16
+      #define LCD_WIDTH TERN(ULTIPANEL, 20, 16)
     #endif
   #endif
   #ifndef LCD_HEIGHT
     #if HAS_GRAPHICAL_LCD
       #define LCD_HEIGHT 5
-    #elif ENABLED(ULTIPANEL)
-      #define LCD_HEIGHT 4
     #else
-      #define LCD_HEIGHT 2
+      #define LCD_HEIGHT TERN(ULTIPANEL, 4, 2)
     #endif
   #endif
 #endif
 
 #if ENABLED(SDSUPPORT)
   #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE) && !defined(ARDUINO_GRAND_CENTRAL_M4)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.

commit b1a50d54e2a6f8e415a72e0e2d275304029d8ada
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 2 12:03:43 2020 -0600

    HAS_TRINAMIC => HAS_TRINAMIC_CONFIG

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d40e928693..32243afc37 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1283,21 +1283,21 @@
 #define HAS_E6_MICROSTEPS (PIN_EXISTS(E6_MS1))
 #define HAS_SOLENOID_6    (PIN_EXISTS(SOL6))
 
 #define HAS_E7_ENABLE     (PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7)))
 #define HAS_E7_DIR        (PIN_EXISTS(E7_DIR))
 #define HAS_E7_STEP       (PIN_EXISTS(E7_STEP))
 #define HAS_E7_MICROSTEPS (PIN_EXISTS(E7_MS1))
 #define HAS_SOLENOID_7    (PIN_EXISTS(SOL7))
 
 // Trinamic Stepper Drivers
-#if HAS_TRINAMIC
+#if HAS_TRINAMIC_CONFIG
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS  (AXIS_HAS_STALLGUARD(X)  && defined(X_STALL_SENSITIVITY))
   #define X2_SENSORLESS (AXIS_HAS_STALLGUARD(X2) && defined(X2_STALL_SENSITIVITY))
   #define Y_SENSORLESS  (AXIS_HAS_STALLGUARD(Y)  && defined(Y_STALL_SENSITIVITY))
   #define Y2_SENSORLESS (AXIS_HAS_STALLGUARD(Y2) && defined(Y2_STALL_SENSITIVITY))

commit 730804289c3134102aa0c1db4f5845b088531f85
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 29 04:14:40 2020 -0600

    Catch more LPC1768 pin conflicts (#17019)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 159aefa5d5..d40e928693 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -33,23 +33,20 @@
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
-#define HAS_CLASSIC_JERK (ENABLED(CLASSIC_JERK) || IS_KINEMATIC)
-#define HAS_CLASSIC_E_JERK (ENABLED(CLASSIC_JERK) || DISABLED(LIN_ADVANCE))
-
 /**
  * Axis lengths and center
  */
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 
 // Defined only if the sanity-check is bypassed
 #ifndef X_BED_SIZE
   #define X_BED_SIZE X_MAX_LENGTH
@@ -572,113 +569,20 @@
   #define PROBE_USES_THERMISTOR
   #if TEMP_SENSOR_PROBE == 1000
     #define PROBE_USER_THERMISTOR
   #endif
 #endif
 
 #define HOTEND_USES_THERMISTOR ANY( \
   HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, HEATER_3_USES_THERMISTOR, \
   HEATER_4_USES_THERMISTOR, HEATER_5_USES_THERMISTOR, HEATER_6_USES_THERMISTOR, HEATER_7_USES_THERMISTOR )
 
-/**
- * Default hotend offsets, if not defined
- */
-#if HAS_HOTEND_OFFSET
-  #ifndef HOTEND_OFFSET_X
-    #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
-  #endif
-  #ifndef HOTEND_OFFSET_Y
-    #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
-  #endif
-  #ifndef HOTEND_OFFSET_Z
-    #define HOTEND_OFFSET_Z { 0 } // Z offsets for each extruder
-  #endif
-#endif
-
-/**
- * ARRAY_BY_EXTRUDERS based on EXTRUDERS
- */
-#define ARRAY_BY_EXTRUDERS(V...) ARRAY_N(EXTRUDERS, V)
-#define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
-
-/**
- * ARRAY_BY_HOTENDS based on HOTENDS
- */
-#define ARRAY_BY_HOTENDS(V...) ARRAY_N(HOTENDS, V)
-#define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
-
-/**
- * Driver Timings
- * NOTE: Driver timing order is longest-to-shortest duration.
- *       Preserve this ordering when adding new drivers.
- */
-
-#ifndef MINIMUM_STEPPER_POST_DIR_DELAY
-  #if HAS_DRIVER(TB6560)
-    #define MINIMUM_STEPPER_POST_DIR_DELAY 15000
-  #elif HAS_DRIVER(TB6600)
-    #define MINIMUM_STEPPER_POST_DIR_DELAY 1500
-  #elif HAS_DRIVER(DRV8825)
-    #define MINIMUM_STEPPER_POST_DIR_DELAY 650
-  #elif HAS_DRIVER(LV8729)
-    #define MINIMUM_STEPPER_POST_DIR_DELAY 500
-  #elif HAS_DRIVER(A5984)
-    #define MINIMUM_STEPPER_POST_DIR_DELAY 400
-  #elif HAS_DRIVER(A4988)
-    #define MINIMUM_STEPPER_POST_DIR_DELAY 200
-  #elif HAS_TRINAMIC || HAS_TRINAMIC_STANDALONE
-    #define MINIMUM_STEPPER_POST_DIR_DELAY 20
-  #else
-    #define MINIMUM_STEPPER_POST_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
-  #endif
-#endif
-
-#ifndef MINIMUM_STEPPER_PRE_DIR_DELAY
-  #define MINIMUM_STEPPER_PRE_DIR_DELAY MINIMUM_STEPPER_POST_DIR_DELAY
-#endif
-
-#ifndef MINIMUM_STEPPER_PULSE
-  #if HAS_DRIVER(TB6560)
-    #define MINIMUM_STEPPER_PULSE 30
-  #elif HAS_DRIVER(TB6600)
-    #define MINIMUM_STEPPER_PULSE 3
-  #elif HAS_DRIVER(DRV8825)
-    #define MINIMUM_STEPPER_PULSE 2
-  #elif HAS_DRIVER(A4988) || HAS_DRIVER(A5984)
-    #define MINIMUM_STEPPER_PULSE 1
-  #elif HAS_TRINAMIC || HAS_TRINAMIC_STANDALONE
-    #define MINIMUM_STEPPER_PULSE 0
-  #elif HAS_DRIVER(LV8729)
-    #define MINIMUM_STEPPER_PULSE 0
-  #else
-    #define MINIMUM_STEPPER_PULSE 2
-  #endif
-#endif
-
-#ifndef MAXIMUM_STEPPER_RATE
-  #if HAS_DRIVER(TB6560)
-    #define MAXIMUM_STEPPER_RATE 15000
-  #elif HAS_DRIVER(TB6600)
-    #define MAXIMUM_STEPPER_RATE 150000
-  #elif HAS_DRIVER(DRV8825)
-    #define MAXIMUM_STEPPER_RATE 250000
-  #elif HAS_DRIVER(A4988)
-    #define MAXIMUM_STEPPER_RATE 500000
-  #elif HAS_DRIVER(LV8729)
-    #define MAXIMUM_STEPPER_RATE 1000000
-  #elif HAS_TRINAMIC || HAS_TRINAMIC_STANDALONE
-    #define MAXIMUM_STEPPER_RATE 5000000
-  #else
-    #define MAXIMUM_STEPPER_RATE 250000
-  #endif
-#endif
-
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_DIR > 0
     #if X2_USE_ENDSTOP == _XMIN_
       #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
     #elif X2_USE_ENDSTOP == _XMAX_
       #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
     #elif X2_USE_ENDSTOP == _YMIN_
@@ -1515,20 +1419,21 @@
 
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_FAN_6 || HAS_AUTO_FAN_7 || HAS_AUTO_CHAMBER_FAN)
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN
   #define AUTO_CHAMBER_IS_E (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
 #endif
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
+#define HAS_AUTO_REPORTING EITHER(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS)
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define _HAS_FAN(P) (PIN_EXISTS(FAN##P) && CONTROLLER_FAN_PIN != FAN##P##_PIN && E0_AUTO_FAN_PIN != FAN##P##_PIN && E1_AUTO_FAN_PIN != FAN##P##_PIN && E2_AUTO_FAN_PIN != FAN##P##_PIN && E3_AUTO_FAN_PIN != FAN##P##_PIN && E4_AUTO_FAN_PIN != FAN##P##_PIN && E5_AUTO_FAN_PIN != FAN##P##_PIN && E6_AUTO_FAN_PIN != FAN##P##_PIN && E7_AUTO_FAN_PIN != FAN##P##_PIN)
 #define HAS_FAN1 _HAS_FAN(1)
 #define HAS_FAN2 _HAS_FAN(2)
@@ -1611,34 +1516,20 @@
   #define HAS_MICROSTEP2 defined(MICROSTEP2)
   #define HAS_MICROSTEP4 defined(MICROSTEP4)
   #define HAS_MICROSTEP8 defined(MICROSTEP8)
   #define HAS_MICROSTEP16 defined(MICROSTEP16)
   #define HAS_MICROSTEP32 defined(MICROSTEP32)
   #define HAS_MICROSTEP64 defined(MICROSTEP64)
   #define HAS_MICROSTEP128 defined(MICROSTEP128)
 
 #endif // HAS_MICROSTEPS
 
-#if !HAS_TEMP_SENSOR
-  #undef AUTO_REPORT_TEMPERATURES
-#endif
-
-#define HAS_AUTO_REPORTING EITHER(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS)
-
-/**
- * This setting is also used by M109 when trying to calculate
- * a ballpark safe margin to prevent wait-forever situation.
- */
-#ifndef EXTRUDE_MINTEMP
-  #define EXTRUDE_MINTEMP 170
-#endif
-
 /**
  * Heater signal inversion defaults
  */
 
 #if HAS_HEATER_0 && !defined(HEATER_0_INVERTING)
   #define HEATER_0_INVERTING false
 #endif
 #if HAS_HEATER_1 && !defined(HEATER_1_INVERTING)
   #define HEATER_1_INVERTING false
 #endif
@@ -2114,43 +2005,20 @@
   #endif
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ENABLED(SCROLL_LONG_FILENAMES)
   #define MAX_VFAT_ENTRIES (5)
 #else
   #define MAX_VFAT_ENTRIES (2)
 #endif
 
-// Set defaults for unspecified LED user colors
-#if ENABLED(LED_CONTROL_MENU)
-  #ifndef LED_USER_PRESET_RED
-    #define LED_USER_PRESET_RED       255
-  #endif
-  #ifndef LED_USER_PRESET_GREEN
-    #define LED_USER_PRESET_GREEN     255
-  #endif
-  #ifndef LED_USER_PRESET_BLUE
-    #define LED_USER_PRESET_BLUE      255
-  #endif
-  #ifndef LED_USER_PRESET_WHITE
-    #define LED_USER_PRESET_WHITE     0
-  #endif
-  #ifndef LED_USER_PRESET_BRIGHTNESS
-    #ifdef NEOPIXEL_BRIGHTNESS
-      #define LED_USER_PRESET_BRIGHTNESS NEOPIXEL_BRIGHTNESS
-    #else
-      #define LED_USER_PRESET_BRIGHTNESS 255
-    #endif
-  #endif
-#endif
-
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER) && (SCK_PIN == LCD_PINS_D4)
@@ -2173,27 +2041,24 @@
   #endif
   #ifndef SDSORT_DYNAMIC_RAM
     #define SDSORT_DYNAMIC_RAM false
   #endif
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif
 #endif
 
 // Defined here to catch the above defines
-#if ENABLED(SDCARD_SORT_ALPHA)
-  #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
+#if ENABLED(SDCARD_SORT_ALPHA) && (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
+  #define HAS_FOLDER_SORTING 1
 #endif
 
-// If platform requires early initialization of watchdog to properly boot
-#define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
-
 #if HAS_SPI_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_GRAPHICAL_LCD
       #define LCD_WIDTH 21
     #elif ENABLED(ULTIPANEL)
       #define LCD_WIDTH 20
     #else
       #define LCD_WIDTH 16
     #endif
@@ -2216,21 +2081,10 @@
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
     #define INIT_SDCARD_ON_BOOT
   #endif
 #endif
-
-#if !NUM_SERIAL
-  #undef BAUD_RATE_GCODE
-#endif
-
-#if ENABLED(Z_STEPPER_ALIGN_KNOWN_STEPPER_POSITIONS)
-  #undef Z_STEPPER_ALIGN_AMP
-#endif
-#ifndef Z_STEPPER_ALIGN_AMP
-  #define Z_STEPPER_ALIGN_AMP 1.0
-#endif

commit 0a7e7a6fa59172f61d3d6ed94d9ccf055c85bf27
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 26 06:26:54 2020 -0600

    Allow servo features in combination (#16960)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 31497c9e8a..159aefa5d5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1539,30 +1539,20 @@
 #define HAS_FAN7 _HAS_FAN(7)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0) && NUM_SERVOS > 0)
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1) && NUM_SERVOS > 1)
 #define HAS_SERVO_2 (PIN_EXISTS(SERVO2) && NUM_SERVOS > 2)
 #define HAS_SERVO_3 (PIN_EXISTS(SERVO3) && NUM_SERVOS > 3)
 #define HAS_SERVOS  (NUM_SERVOS > 0)
 
-#if HAS_SERVOS && !defined(Z_PROBE_SERVO_NR)
-  #define Z_PROBE_SERVO_NR -1
-#endif
-
-#define HAS_SERVO_ANGLES (EITHER(SWITCHING_EXTRUDER, SWITCHING_NOZZLE) || (HAS_Z_SERVO_PROBE && defined(Z_PROBE_SERVO_NR)))
-
-#if !HAS_SERVO_ANGLES || ENABLED(BLTOUCH)
-  #undef EDITABLE_SERVO_ANGLES
-#endif
-
 // Sensors
 #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
 
 // User Interface
 #define HAS_HOME        (PIN_EXISTS(HOME))
 #define HAS_KILL        (PIN_EXISTS(KILL))
 #define HAS_SUICIDE     (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH  (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER      (PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
 #define USE_BEEPER      (HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))

commit e76f2ed4cb18ab3527c3334f5997878dc84206f8
Author: ellensp <ellensp@hotmail.com>
Date:   Wed Feb 26 23:34:21 2020 +1300

    Fix Trinamic pulse rate auto-assignment (#16966)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6785ea01e8..31497c9e8a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -638,41 +638,41 @@
 
 #ifndef MINIMUM_STEPPER_PULSE
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_PULSE 30
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_PULSE 3
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_PULSE 2
   #elif HAS_DRIVER(A4988) || HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_PULSE 1
-  #elif TRINAMICS
+  #elif HAS_TRINAMIC || HAS_TRINAMIC_STANDALONE
     #define MINIMUM_STEPPER_PULSE 0
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_PULSE 0
   #else
     #define MINIMUM_STEPPER_PULSE 2
   #endif
 #endif
 
 #ifndef MAXIMUM_STEPPER_RATE
   #if HAS_DRIVER(TB6560)
     #define MAXIMUM_STEPPER_RATE 15000
   #elif HAS_DRIVER(TB6600)
     #define MAXIMUM_STEPPER_RATE 150000
   #elif HAS_DRIVER(DRV8825)
     #define MAXIMUM_STEPPER_RATE 250000
   #elif HAS_DRIVER(A4988)
     #define MAXIMUM_STEPPER_RATE 500000
   #elif HAS_DRIVER(LV8729)
     #define MAXIMUM_STEPPER_RATE 1000000
-  #elif TRINAMICS
+  #elif HAS_TRINAMIC || HAS_TRINAMIC_STANDALONE
     #define MAXIMUM_STEPPER_RATE 5000000
   #else
     #define MAXIMUM_STEPPER_RATE 250000
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)

commit 9a51f29efad894eb96bc86d6bb9b274700d0a816
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 23 23:55:05 2020 -0600

    Simplified E_AXIS_HAS macro

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 55058a4d11..6785ea01e8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1437,73 +1437,20 @@
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
 #define HAS_Z4_MIN (PIN_EXISTS(Z4_MIN))
 #define HAS_Z4_MAX (PIN_EXISTS(Z4_MAX))
 #define HAS_Z_MIN_PROBE_PIN (HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE))
 
-// Cannot use a macro with a defined() statement inside REPEAT macros.
-// [AXIS]_HARDWARE_SERIAL definitions are typically strings which cannot be
-// tested directly, as they will evaluate to 0.
-#ifdef X_HARDWARE_SERIAL
-  #define HAS_X_HARDWARE_SERIAL 1
-#endif
-#ifdef X2_HARDWARE_SERIAL
-  #define HAS_X2_HARDWARE_SERIAL 1
-#endif
-#ifdef Y_HARDWARE_SERIAL
-  #define HAS_Y_HARDWARE_SERIAL 1
-#endif
-#ifdef Y2_HARDWARE_SERIAL
-  #define HAS_Y2_HARDWARE_SERIAL 1
-#endif
-#ifdef Z_HARDWARE_SERIAL
-  #define HAS_Z_HARDWARE_SERIAL 1
-#endif
-#ifdef Z2_HARDWARE_SERIAL
-  #define HAS_Z2_HARDWARE_SERIAL 1
-#endif
-#ifdef Z3_HARDWARE_SERIAL
-  #define HAS_Z3_HARDWARE_SERIAL 1
-#endif
-#ifdef Z4_HARDWARE_SERIAL
-  #define HAS_Z4_HARDWARE_SERIAL 1
-#endif
-#ifdef E0_HARDWARE_SERIAL
-  #define HAS_E0_HARDWARE_SERIAL 1
-#endif
-#ifdef E1_HARDWARE_SERIAL
-  #define HAS_E1_HARDWARE_SERIAL 1
-#endif
-#ifdef E2_HARDWARE_SERIAL
-  #define HAS_E2_HARDWARE_SERIAL 1
-#endif
-#ifdef E3_HARDWARE_SERIAL
-  #define HAS_E3_HARDWARE_SERIAL 1
-#endif
-#ifdef E4_HARDWARE_SERIAL
-  #define HAS_E4_HARDWARE_SERIAL 1
-#endif
-#ifdef E5_HARDWARE_SERIAL
-  #define HAS_E5_HARDWARE_SERIAL 1
-#endif
-#ifdef E6_HARDWARE_SERIAL
-  #define HAS_E6_HARDWARE_SERIAL 1
-#endif
-#ifdef E7_HARDWARE_SERIAL
-  #define HAS_E7_HARDWARE_SERIAL 1
-#endif
-
-
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0        HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1        HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2        HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3        HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4        HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5        HAS_ADC_TEST(5)

commit ebd2bcc177640ad0a272426675bc1322272e7bc2
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sun Feb 23 11:55:24 2020 -0800

    Fix AXIS_HAS_SW_SERIAL

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6785ea01e8..55058a4d11 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1437,20 +1437,73 @@
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
 #define HAS_Z4_MIN (PIN_EXISTS(Z4_MIN))
 #define HAS_Z4_MAX (PIN_EXISTS(Z4_MAX))
 #define HAS_Z_MIN_PROBE_PIN (HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE))
 
+// Cannot use a macro with a defined() statement inside REPEAT macros.
+// [AXIS]_HARDWARE_SERIAL definitions are typically strings which cannot be
+// tested directly, as they will evaluate to 0.
+#ifdef X_HARDWARE_SERIAL
+  #define HAS_X_HARDWARE_SERIAL 1
+#endif
+#ifdef X2_HARDWARE_SERIAL
+  #define HAS_X2_HARDWARE_SERIAL 1
+#endif
+#ifdef Y_HARDWARE_SERIAL
+  #define HAS_Y_HARDWARE_SERIAL 1
+#endif
+#ifdef Y2_HARDWARE_SERIAL
+  #define HAS_Y2_HARDWARE_SERIAL 1
+#endif
+#ifdef Z_HARDWARE_SERIAL
+  #define HAS_Z_HARDWARE_SERIAL 1
+#endif
+#ifdef Z2_HARDWARE_SERIAL
+  #define HAS_Z2_HARDWARE_SERIAL 1
+#endif
+#ifdef Z3_HARDWARE_SERIAL
+  #define HAS_Z3_HARDWARE_SERIAL 1
+#endif
+#ifdef Z4_HARDWARE_SERIAL
+  #define HAS_Z4_HARDWARE_SERIAL 1
+#endif
+#ifdef E0_HARDWARE_SERIAL
+  #define HAS_E0_HARDWARE_SERIAL 1
+#endif
+#ifdef E1_HARDWARE_SERIAL
+  #define HAS_E1_HARDWARE_SERIAL 1
+#endif
+#ifdef E2_HARDWARE_SERIAL
+  #define HAS_E2_HARDWARE_SERIAL 1
+#endif
+#ifdef E3_HARDWARE_SERIAL
+  #define HAS_E3_HARDWARE_SERIAL 1
+#endif
+#ifdef E4_HARDWARE_SERIAL
+  #define HAS_E4_HARDWARE_SERIAL 1
+#endif
+#ifdef E5_HARDWARE_SERIAL
+  #define HAS_E5_HARDWARE_SERIAL 1
+#endif
+#ifdef E6_HARDWARE_SERIAL
+  #define HAS_E6_HARDWARE_SERIAL 1
+#endif
+#ifdef E7_HARDWARE_SERIAL
+  #define HAS_E7_HARDWARE_SERIAL 1
+#endif
+
+
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0        HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1        HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2        HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3        HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4        HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5        HAS_ADC_TEST(5)

commit 0ba18848af83d66aa14ca8f5d387ab9f630d450e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 10 16:22:38 2020 -0600

    Allow USE_GCODE_SUBCODES for debugging

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 624de26a0b..6785ea01e8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -2103,21 +2103,23 @@
 #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT && HAS_HOME_OFFSET)
 // M206 sets the home offset for Cartesian machines
 #define HAS_M206_COMMAND (HAS_HOME_OFFSET && !IS_SCARA)
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
 // Add commands that need sub-codes to this list
-#define USE_GCODE_SUBCODES ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY)
+#if ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY)
+  #define USE_GCODE_SUBCODES
+#endif
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif

commit 90e2c420312675521ce10def0a8c16a2d4b2c6bf
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sun Feb 9 16:57:22 2020 +0100

    Adafruit Grand Central M4 fixes (#16812)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ef7df41a1c..624de26a0b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -293,21 +293,21 @@
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override here because this is set in Configuration_adv.h
  */
-#if HAS_LCD_MENU && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
+#if HAS_LCD_MENU && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER) && !(defined(ARDUINO_GRAND_CENTRAL_M4) && SD_CONNECTION_IS(ONBOARD))
   #undef SD_DETECT_INVERTED
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y
@@ -2211,21 +2211,21 @@
       #define LCD_HEIGHT 5
     #elif ENABLED(ULTIPANEL)
       #define LCD_HEIGHT 4
     #else
       #define LCD_HEIGHT 2
     #endif
   #endif
 #endif
 
 #if ENABLED(SDSUPPORT)
-  #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE)
+  #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE) && !defined(ARDUINO_GRAND_CENTRAL_M4)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
     #define INIT_SDCARD_ON_BOOT

commit 7bf2190f03228666fdec3e1f8f0d8548a1ab2e95
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 4 08:32:43 2020 -0600

    Fix CALIBRATION_GCODE pin handling

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3b8393dafe..ef7df41a1c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1436,21 +1436,20 @@
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
 #define HAS_Z4_MIN (PIN_EXISTS(Z4_MIN))
 #define HAS_Z4_MAX (PIN_EXISTS(Z4_MAX))
 #define HAS_Z_MIN_PROBE_PIN (HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE))
-#define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0        HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1        HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2        HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3        HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4        HAS_ADC_TEST(4)

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 85d2557f93..3b8393dafe 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 5b12627e146cc8b2a61d347ae6608b5c4d4497df
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jan 30 03:24:57 2020 -0600

    Auto assign DIAG pins for multi-endstop (#16723)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5b9ba7c683..85d2557f93 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -672,268 +672,578 @@
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_DIR > 0
     #if X2_USE_ENDSTOP == _XMIN_
       #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #define X2_MAX_PIN X_MIN_PIN
     #elif X2_USE_ENDSTOP == _XMAX_
       #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #define X2_MAX_PIN X_MAX_PIN
     #elif X2_USE_ENDSTOP == _YMIN_
       #define X2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #define X2_MAX_PIN Y_MIN_PIN
     #elif X2_USE_ENDSTOP == _YMAX_
       #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #define X2_MAX_PIN Y_MAX_PIN
     #elif X2_USE_ENDSTOP == _ZMIN_
       #define X2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #define X2_MAX_PIN Z_MIN_PIN
     #elif X2_USE_ENDSTOP == _ZMAX_
       #define X2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #define X2_MAX_PIN Z_MAX_PIN
     #else
       #define X2_MAX_ENDSTOP_INVERTING false
     #endif
+    #ifndef X2_MAX_PIN
+      #if X2_USE_ENDSTOP == _XMIN_
+        #define X2_MAX_PIN X_MIN_PIN
+      #elif X2_USE_ENDSTOP == _XMAX_
+        #define X2_MAX_PIN X_MAX_PIN
+      #elif X2_USE_ENDSTOP == _YMIN_
+        #define X2_MAX_PIN Y_MIN_PIN
+      #elif X2_USE_ENDSTOP == _YMAX_
+        #define X2_MAX_PIN Y_MAX_PIN
+      #elif X2_USE_ENDSTOP == _ZMIN_
+        #define X2_MAX_PIN Z_MIN_PIN
+      #elif X2_USE_ENDSTOP == _ZMAX_
+        #define X2_MAX_PIN Z_MAX_PIN
+      #elif X2_USE_ENDSTOP == _XDIAG_
+        #define X2_MAX_PIN X_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _YDIAG_
+        #define X2_MAX_PIN Y_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _ZDIAG_
+        #define X2_MAX_PIN Z_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E0DIAG_
+        #define X2_MAX_PIN E0_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E1DIAG_
+        #define X2_MAX_PIN E1_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E2DIAG_
+        #define X2_MAX_PIN E2_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E3DIAG_
+        #define X2_MAX_PIN E3_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E4DIAG_
+        #define X2_MAX_PIN E4_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E5DIAG_
+        #define X2_MAX_PIN E5_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E6DIAG_
+        #define X2_MAX_PIN E6_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E7DIAG_
+        #define X2_MAX_PIN E7_DIAG_PIN
+      #endif
+    #endif
     #define X2_MIN_ENDSTOP_INVERTING false
   #else
     #if X2_USE_ENDSTOP == _XMIN_
       #define X2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #define X2_MIN_PIN X_MIN_PIN
     #elif X2_USE_ENDSTOP == _XMAX_
       #define X2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #define X2_MIN_PIN X_MAX_PIN
     #elif X2_USE_ENDSTOP == _YMIN_
       #define X2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #define X2_MIN_PIN Y_MIN_PIN
     #elif X2_USE_ENDSTOP == _YMAX_
       #define X2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #define X2_MIN_PIN Y_MAX_PIN
     #elif X2_USE_ENDSTOP == _ZMIN_
       #define X2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #define X2_MIN_PIN Z_MIN_PIN
     #elif X2_USE_ENDSTOP == _ZMAX_
       #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #define X2_MIN_PIN Z_MAX_PIN
     #else
       #define X2_MIN_ENDSTOP_INVERTING false
     #endif
+    #ifndef X2_MIN_PIN
+      #if X2_USE_ENDSTOP == _XMIN_
+        #define X2_MIN_PIN X_MIN_PIN
+      #elif X2_USE_ENDSTOP == _XMAX_
+        #define X2_MIN_PIN X_MAX_PIN
+      #elif X2_USE_ENDSTOP == _YMIN_
+        #define X2_MIN_PIN Y_MIN_PIN
+      #elif X2_USE_ENDSTOP == _YMAX_
+        #define X2_MIN_PIN Y_MAX_PIN
+      #elif X2_USE_ENDSTOP == _ZMIN_
+        #define X2_MIN_PIN Z_MIN_PIN
+      #elif X2_USE_ENDSTOP == _ZMAX_
+        #define X2_MIN_PIN Z_MAX_PIN
+      #elif X2_USE_ENDSTOP == _XDIAG_
+        #define X2_MIN_PIN X_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _YDIAG_
+        #define X2_MIN_PIN Y_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _ZDIAG_
+        #define X2_MIN_PIN Z_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E0DIAG_
+        #define X2_MIN_PIN E0_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E1DIAG_
+        #define X2_MIN_PIN E1_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E2DIAG_
+        #define X2_MIN_PIN E2_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E3DIAG_
+        #define X2_MIN_PIN E3_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E4DIAG_
+        #define X2_MIN_PIN E4_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E5DIAG_
+        #define X2_MIN_PIN E5_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E6DIAG_
+        #define X2_MIN_PIN E6_DIAG_PIN
+      #elif X2_USE_ENDSTOP == _E7DIAG_
+        #define X2_MIN_PIN E7_DIAG_PIN
+      #endif
+    #endif
     #define X2_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
 /**
  * Y_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Y_DUAL_ENDSTOPS)
   #if Y_HOME_DIR > 0
     #if Y2_USE_ENDSTOP == _XMIN_
       #define Y2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #define Y2_MAX_PIN X_MIN_PIN
     #elif Y2_USE_ENDSTOP == _XMAX_
       #define Y2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #define Y2_MAX_PIN X_MAX_PIN
     #elif Y2_USE_ENDSTOP == _YMIN_
       #define Y2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #define Y2_MAX_PIN Y_MIN_PIN
     #elif Y2_USE_ENDSTOP == _YMAX_
       #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #define Y2_MAX_PIN Y_MAX_PIN
     #elif Y2_USE_ENDSTOP == _ZMIN_
       #define Y2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #define Y2_MAX_PIN Z_MIN_PIN
     #elif Y2_USE_ENDSTOP == _ZMAX_
       #define Y2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #define Y2_MAX_PIN Z_MAX_PIN
     #else
       #define Y2_MAX_ENDSTOP_INVERTING false
     #endif
+    #ifndef Y2_MAX_PIN
+      #if Y2_USE_ENDSTOP == _XMIN_
+        #define Y2_MAX_PIN X_MIN_PIN
+      #elif Y2_USE_ENDSTOP == _XMAX_
+        #define Y2_MAX_PIN X_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _YMIN_
+        #define Y2_MAX_PIN Y_MIN_PIN
+      #elif Y2_USE_ENDSTOP == _YMAX_
+        #define Y2_MAX_PIN Y_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _ZMIN_
+        #define Y2_MAX_PIN Z_MIN_PIN
+      #elif Y2_USE_ENDSTOP == _ZMAX_
+        #define Y2_MAX_PIN Z_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _XDIAG_
+        #define Y2_MAX_PIN X_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _YDIAG_
+        #define Y2_MAX_PIN Y_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _ZDIAG_
+        #define Y2_MAX_PIN Z_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E0DIAG_
+        #define Y2_MAX_PIN E0_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E1DIAG_
+        #define Y2_MAX_PIN E1_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E2DIAG_
+        #define Y2_MAX_PIN E2_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E3DIAG_
+        #define Y2_MAX_PIN E3_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E4DIAG_
+        #define Y2_MAX_PIN E4_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E5DIAG_
+        #define Y2_MAX_PIN E5_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E6DIAG_
+        #define Y2_MAX_PIN E6_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E7DIAG_
+        #define Y2_MAX_PIN E7_DIAG_PIN
+      #endif
+    #endif
     #define Y2_MIN_ENDSTOP_INVERTING false
   #else
     #if Y2_USE_ENDSTOP == _XMIN_
       #define Y2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #define Y2_MIN_PIN X_MIN_PIN
     #elif Y2_USE_ENDSTOP == _XMAX_
       #define Y2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #define Y2_MIN_PIN X_MAX_PIN
     #elif Y2_USE_ENDSTOP == _YMIN_
       #define Y2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #define Y2_MIN_PIN Y_MIN_PIN
     #elif Y2_USE_ENDSTOP == _YMAX_
       #define Y2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #define Y2_MIN_PIN Y_MAX_PIN
     #elif Y2_USE_ENDSTOP == _ZMIN_
       #define Y2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #define Y2_MIN_PIN Z_MIN_PIN
     #elif Y2_USE_ENDSTOP == _ZMAX_
       #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #define Y2_MIN_PIN Z_MAX_PIN
     #else
       #define Y2_MIN_ENDSTOP_INVERTING false
     #endif
+    #ifndef Y2_MIN_PIN
+      #if Y2_USE_ENDSTOP == _XMIN_
+        #define Y2_MIN_PIN X_MIN_PIN
+      #elif Y2_USE_ENDSTOP == _XMAX_
+        #define Y2_MIN_PIN X_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _YMIN_
+        #define Y2_MIN_PIN Y_MIN_PIN
+      #elif Y2_USE_ENDSTOP == _YMAX_
+        #define Y2_MIN_PIN Y_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _ZMIN_
+        #define Y2_MIN_PIN Z_MIN_PIN
+      #elif Y2_USE_ENDSTOP == _ZMAX_
+        #define Y2_MIN_PIN Z_MAX_PIN
+      #elif Y2_USE_ENDSTOP == _XDIAG_
+        #define Y2_MIN_PIN X_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _YDIAG_
+        #define Y2_MIN_PIN Y_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _ZDIAG_
+        #define Y2_MIN_PIN Z_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E0DIAG_
+        #define Y2_MIN_PIN E0_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E1DIAG_
+        #define Y2_MIN_PIN E1_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E2DIAG_
+        #define Y2_MIN_PIN E2_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E3DIAG_
+        #define Y2_MIN_PIN E3_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E4DIAG_
+        #define Y2_MIN_PIN E4_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E5DIAG_
+        #define Y2_MIN_PIN E5_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E6DIAG_
+        #define Y2_MIN_PIN E6_DIAG_PIN
+      #elif Y2_USE_ENDSTOP == _E7DIAG_
+        #define Y2_MIN_PIN E7_DIAG_PIN
+      #endif
+    #endif
     #define Y2_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
 /**
  * Z_MULTI_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Z_MULTI_ENDSTOPS)
 
   #if Z_HOME_DIR > 0
     #if Z2_USE_ENDSTOP == _XMIN_
       #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #define Z2_MAX_PIN X_MIN_PIN
     #elif Z2_USE_ENDSTOP == _XMAX_
       #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #define Z2_MAX_PIN X_MAX_PIN
     #elif Z2_USE_ENDSTOP == _YMIN_
       #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #define Z2_MAX_PIN Y_MIN_PIN
     #elif Z2_USE_ENDSTOP == _YMAX_
       #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #define Z2_MAX_PIN Y_MAX_PIN
     #elif Z2_USE_ENDSTOP == _ZMIN_
       #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #define Z2_MAX_PIN Z_MIN_PIN
     #elif Z2_USE_ENDSTOP == _ZMAX_
       #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #define Z2_MAX_PIN Z_MAX_PIN
     #else
       #define Z2_MAX_ENDSTOP_INVERTING false
     #endif
+    #ifndef Z2_MAX_PIN
+      #if Z2_USE_ENDSTOP == _XMIN_
+        #define Z2_MAX_PIN X_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _XMAX_
+        #define Z2_MAX_PIN X_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _YMIN_
+        #define Z2_MAX_PIN Y_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _YMAX_
+        #define Z2_MAX_PIN Y_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _ZMIN_
+        #define Z2_MAX_PIN Z_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _ZMAX_
+        #define Z2_MAX_PIN Z_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _XDIAG_
+        #define Z2_MAX_PIN X_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _YDIAG_
+        #define Z2_MAX_PIN Y_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _ZDIAG_
+        #define Z2_MAX_PIN Z_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E0DIAG_
+        #define Z2_MAX_PIN E0_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E1DIAG_
+        #define Z2_MAX_PIN E1_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E2DIAG_
+        #define Z2_MAX_PIN E2_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E3DIAG_
+        #define Z2_MAX_PIN E3_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E4DIAG_
+        #define Z2_MAX_PIN E4_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E5DIAG_
+        #define Z2_MAX_PIN E5_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E6DIAG_
+        #define Z2_MAX_PIN E6_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E7DIAG_
+        #define Z2_MAX_PIN E7_DIAG_PIN
+      #endif
+    #endif
     #define Z2_MIN_ENDSTOP_INVERTING false
   #else
     #if Z2_USE_ENDSTOP == _XMIN_
       #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #define Z2_MIN_PIN X_MIN_PIN
     #elif Z2_USE_ENDSTOP == _XMAX_
       #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #define Z2_MIN_PIN X_MAX_PIN
     #elif Z2_USE_ENDSTOP == _YMIN_
       #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #define Z2_MIN_PIN Y_MIN_PIN
     #elif Z2_USE_ENDSTOP == _YMAX_
       #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #define Z2_MIN_PIN Y_MAX_PIN
     #elif Z2_USE_ENDSTOP == _ZMIN_
       #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #define Z2_MIN_PIN Z_MIN_PIN
     #elif Z2_USE_ENDSTOP == _ZMAX_
       #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #define Z2_MIN_PIN Z_MAX_PIN
     #else
       #define Z2_MIN_ENDSTOP_INVERTING false
     #endif
+    #ifndef Z2_MIN_PIN
+      #if Z2_USE_ENDSTOP == _XMIN_
+        #define Z2_MIN_PIN X_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _XMAX_
+        #define Z2_MIN_PIN X_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _YMIN_
+        #define Z2_MIN_PIN Y_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _YMAX_
+        #define Z2_MIN_PIN Y_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _ZMIN_
+        #define Z2_MIN_PIN Z_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _ZMAX_
+        #define Z2_MIN_PIN Z_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _XDIAG_
+        #define Z2_MIN_PIN X_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _YDIAG_
+        #define Z2_MIN_PIN Y_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _ZDIAG_
+        #define Z2_MIN_PIN Z_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E0DIAG_
+        #define Z2_MIN_PIN E0_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E1DIAG_
+        #define Z2_MIN_PIN E1_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E2DIAG_
+        #define Z2_MIN_PIN E2_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E3DIAG_
+        #define Z2_MIN_PIN E3_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E4DIAG_
+        #define Z2_MIN_PIN E4_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E5DIAG_
+        #define Z2_MIN_PIN E5_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E6DIAG_
+        #define Z2_MIN_PIN E6_DIAG_PIN
+      #elif Z2_USE_ENDSTOP == _E7DIAG_
+        #define Z2_MIN_PIN E7_DIAG_PIN
+      #endif
+    #endif
     #define Z2_MAX_ENDSTOP_INVERTING false
   #endif
 
   #if NUM_Z_STEPPER_DRIVERS >= 3
     #if Z_HOME_DIR > 0
       #if Z3_USE_ENDSTOP == _XMIN_
         #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-        #define Z3_MAX_PIN X_MIN_PIN
       #elif Z3_USE_ENDSTOP == _XMAX_
         #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-        #define Z3_MAX_PIN X_MAX_PIN
       #elif Z3_USE_ENDSTOP == _YMIN_
         #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-        #define Z3_MAX_PIN Y_MIN_PIN
       #elif Z3_USE_ENDSTOP == _YMAX_
         #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-        #define Z3_MAX_PIN Y_MAX_PIN
       #elif Z3_USE_ENDSTOP == _ZMIN_
         #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-        #define Z3_MAX_PIN Z_MIN_PIN
       #elif Z3_USE_ENDSTOP == _ZMAX_
         #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #define Z3_MAX_PIN Z_MAX_PIN
       #else
         #define Z3_MAX_ENDSTOP_INVERTING false
       #endif
+      #ifndef Z3_MAX_PIN
+        #if Z3_USE_ENDSTOP == _XMIN_
+          #define Z3_MAX_PIN X_MIN_PIN
+        #elif Z3_USE_ENDSTOP == _XMAX_
+          #define Z3_MAX_PIN X_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _YMIN_
+          #define Z3_MAX_PIN Y_MIN_PIN
+        #elif Z3_USE_ENDSTOP == _YMAX_
+          #define Z3_MAX_PIN Y_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _ZMIN_
+          #define Z3_MAX_PIN Z_MIN_PIN
+        #elif Z3_USE_ENDSTOP == _ZMAX_
+          #define Z3_MAX_PIN Z_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _XDIAG_
+          #define Z3_MAX_PIN X_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _YDIAG_
+          #define Z3_MAX_PIN Y_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _ZDIAG_
+          #define Z3_MAX_PIN Z_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E0DIAG_
+          #define Z3_MAX_PIN E0_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E1DIAG_
+          #define Z3_MAX_PIN E1_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E2DIAG_
+          #define Z3_MAX_PIN E2_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E3DIAG_
+          #define Z3_MAX_PIN E3_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E4DIAG_
+          #define Z3_MAX_PIN E4_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E5DIAG_
+          #define Z3_MAX_PIN E5_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E6DIAG_
+          #define Z3_MAX_PIN E6_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E7DIAG_
+          #define Z3_MAX_PIN E7_DIAG_PIN
+        #endif
+      #endif
       #define Z3_MIN_ENDSTOP_INVERTING false
     #else
       #if Z3_USE_ENDSTOP == _XMIN_
         #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-        #define Z3_MIN_PIN X_MIN_PIN
       #elif Z3_USE_ENDSTOP == _XMAX_
         #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-        #define Z3_MIN_PIN X_MAX_PIN
       #elif Z3_USE_ENDSTOP == _YMIN_
         #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-        #define Z3_MIN_PIN Y_MIN_PIN
       #elif Z3_USE_ENDSTOP == _YMAX_
         #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-        #define Z3_MIN_PIN Y_MAX_PIN
       #elif Z3_USE_ENDSTOP == _ZMIN_
         #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-        #define Z3_MIN_PIN Z_MIN_PIN
       #elif Z3_USE_ENDSTOP == _ZMAX_
         #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #define Z3_MIN_PIN Z_MAX_PIN
       #else
         #define Z3_MIN_ENDSTOP_INVERTING false
       #endif
+      #ifndef Z3_MIN_PIN
+        #if Z3_USE_ENDSTOP == _XMIN_
+          #define Z3_MIN_PIN X_MIN_PIN
+        #elif Z3_USE_ENDSTOP == _XMAX_
+          #define Z3_MIN_PIN X_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _YMIN_
+          #define Z3_MIN_PIN Y_MIN_PIN
+        #elif Z3_USE_ENDSTOP == _YMAX_
+          #define Z3_MIN_PIN Y_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _ZMIN_
+          #define Z3_MIN_PIN Z_MIN_PIN
+        #elif Z3_USE_ENDSTOP == _ZMAX_
+          #define Z3_MIN_PIN Z_MAX_PIN
+        #elif Z3_USE_ENDSTOP == _XDIAG_
+          #define Z3_MIN_PIN X_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _YDIAG_
+          #define Z3_MIN_PIN Y_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _ZDIAG_
+          #define Z3_MIN_PIN Z_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E0DIAG_
+          #define Z3_MIN_PIN E0_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E1DIAG_
+          #define Z3_MIN_PIN E1_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E2DIAG_
+          #define Z3_MIN_PIN E2_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E3DIAG_
+          #define Z3_MIN_PIN E3_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E4DIAG_
+          #define Z3_MIN_PIN E4_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E5DIAG_
+          #define Z3_MIN_PIN E5_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E6DIAG_
+          #define Z3_MIN_PIN E6_DIAG_PIN
+        #elif Z3_USE_ENDSTOP == _E7DIAG_
+          #define Z3_MIN_PIN E7_DIAG_PIN
+        #endif
+      #endif
       #define Z3_MAX_ENDSTOP_INVERTING false
     #endif
   #endif
 
   #if NUM_Z_STEPPER_DRIVERS >= 4
     #if Z_HOME_DIR > 0
       #if Z4_USE_ENDSTOP == _XMIN_
         #define Z4_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-        #define Z4_MAX_PIN X_MIN_PIN
       #elif Z4_USE_ENDSTOP == _XMAX_
         #define Z4_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-        #define Z4_MAX_PIN X_MAX_PIN
       #elif Z4_USE_ENDSTOP == _YMIN_
         #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-        #define Z4_MAX_PIN Y_MIN_PIN
       #elif Z4_USE_ENDSTOP == _YMAX_
         #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-        #define Z4_MAX_PIN Y_MAX_PIN
       #elif Z4_USE_ENDSTOP == _ZMIN_
         #define Z4_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-        #define Z4_MAX_PIN Z_MIN_PIN
       #elif Z4_USE_ENDSTOP == _ZMAX_
         #define Z4_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #define Z4_MAX_PIN Z_MAX_PIN
       #else
         #define Z4_MAX_ENDSTOP_INVERTING false
       #endif
+      #ifndef Z4_MAX_PIN
+        #if Z4_USE_ENDSTOP == _XMIN_
+          #define Z4_MAX_PIN X_MIN_PIN
+        #elif Z4_USE_ENDSTOP == _XMAX_
+          #define Z4_MAX_PIN X_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _YMIN_
+          #define Z4_MAX_PIN Y_MIN_PIN
+        #elif Z4_USE_ENDSTOP == _YMAX_
+          #define Z4_MAX_PIN Y_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _ZMIN_
+          #define Z4_MAX_PIN Z_MIN_PIN
+        #elif Z4_USE_ENDSTOP == _ZMAX_
+          #define Z4_MAX_PIN Z_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _XDIAG_
+          #define Z4_MAX_PIN X_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _YDIAG_
+          #define Z4_MAX_PIN Y_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _ZDIAG_
+          #define Z4_MAX_PIN Z_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E0DIAG_
+          #define Z4_MAX_PIN E0_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E1DIAG_
+          #define Z4_MAX_PIN E1_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E2DIAG_
+          #define Z4_MAX_PIN E2_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E3DIAG_
+          #define Z4_MAX_PIN E3_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E4DIAG_
+          #define Z4_MAX_PIN E4_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E5DIAG_
+          #define Z4_MAX_PIN E5_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E6DIAG_
+          #define Z4_MAX_PIN E6_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E7DIAG_
+          #define Z4_MAX_PIN E7_DIAG_PIN
+        #endif
+      #endif
       #define Z4_MIN_ENDSTOP_INVERTING false
     #else
       #if Z4_USE_ENDSTOP == _XMIN_
         #define Z4_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-        #define Z4_MIN_PIN X_MIN_PIN
       #elif Z4_USE_ENDSTOP == _XMAX_
         #define Z4_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-        #define Z4_MIN_PIN X_MAX_PIN
       #elif Z4_USE_ENDSTOP == _YMIN_
         #define Z4_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-        #define Z4_MIN_PIN Y_MIN_PIN
       #elif Z4_USE_ENDSTOP == _YMAX_
         #define Z4_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-        #define Z4_MIN_PIN Y_MAX_PIN
       #elif Z4_USE_ENDSTOP == _ZMIN_
         #define Z4_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-        #define Z4_MIN_PIN Z_MIN_PIN
       #elif Z4_USE_ENDSTOP == _ZMAX_
         #define Z4_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #define Z4_MIN_PIN Z_MAX_PIN
       #else
         #define Z4_MIN_ENDSTOP_INVERTING false
       #endif
+      #ifndef Z4_MIN_PIN
+        #if Z4_USE_ENDSTOP == _XMIN_
+          #define Z4_MIN_PIN X_MIN_PIN
+        #elif Z4_USE_ENDSTOP == _XMAX_
+          #define Z4_MIN_PIN X_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _YMIN_
+          #define Z4_MIN_PIN Y_MIN_PIN
+        #elif Z4_USE_ENDSTOP == _YMAX_
+          #define Z4_MIN_PIN Y_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _ZMIN_
+          #define Z4_MIN_PIN Z_MIN_PIN
+        #elif Z4_USE_ENDSTOP == _ZMAX_
+          #define Z4_MIN_PIN Z_MAX_PIN
+        #elif Z4_USE_ENDSTOP == _XDIAG_
+          #define Z4_MIN_PIN X_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _YDIAG_
+          #define Z4_MIN_PIN Y_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _ZDIAG_
+          #define Z4_MIN_PIN Z_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E0DIAG_
+          #define Z4_MIN_PIN E0_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E1DIAG_
+          #define Z4_MIN_PIN E1_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E2DIAG_
+          #define Z4_MIN_PIN E2_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E3DIAG_
+          #define Z4_MIN_PIN E3_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E4DIAG_
+          #define Z4_MIN_PIN E4_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E5DIAG_
+          #define Z4_MIN_PIN E5_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E6DIAG_
+          #define Z4_MIN_PIN E6_DIAG_PIN
+        #elif Z4_USE_ENDSTOP == _E7DIAG_
+          #define Z4_MIN_PIN E7_DIAG_PIN
+        #endif
+      #endif
       #define Z4_MAX_ENDSTOP_INVERTING false
     #endif
   #endif
 
 #endif // Z_MULTI_ENDSTOPS
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)

commit 8737c35ded48c639ffded58a587f555da65d6f1a
Author: 0r31 <37673727+0r31@users.noreply.github.com>
Date:   Thu Jan 30 05:48:26 2020 +0100

    Fix HAS_FAN macro (#16717)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1a2c39ec25..5b9ba7c683 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1213,21 +1213,21 @@
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
-#define _HAS_FAN(P) (PIN_EXISTS(FAN_##P) && CONTROLLER_FAN_PIN != FAN_##P##_PIN && E0_AUTO_FAN_PIN != FAN_##P##_PIN && E1_AUTO_FAN_PIN != FAN_##P##_PIN && E2_AUTO_FAN_PIN != FAN_##P##_PIN && E3_AUTO_FAN_PIN != FAN_##P##_PIN && E4_AUTO_FAN_PIN != FAN_##P##_PIN && E5_AUTO_FAN_PIN != FAN_##P##_PIN && E6_AUTO_FAN_PIN != FAN_##P##_PIN && E7_AUTO_FAN_PIN != FAN_##P##_PIN)
+#define _HAS_FAN(P) (PIN_EXISTS(FAN##P) && CONTROLLER_FAN_PIN != FAN##P##_PIN && E0_AUTO_FAN_PIN != FAN##P##_PIN && E1_AUTO_FAN_PIN != FAN##P##_PIN && E2_AUTO_FAN_PIN != FAN##P##_PIN && E3_AUTO_FAN_PIN != FAN##P##_PIN && E4_AUTO_FAN_PIN != FAN##P##_PIN && E5_AUTO_FAN_PIN != FAN##P##_PIN && E6_AUTO_FAN_PIN != FAN##P##_PIN && E7_AUTO_FAN_PIN != FAN##P##_PIN)
 #define HAS_FAN1 _HAS_FAN(1)
 #define HAS_FAN2 _HAS_FAN(2)
 #define HAS_FAN3 _HAS_FAN(3)
 #define HAS_FAN4 _HAS_FAN(4)
 #define HAS_FAN5 _HAS_FAN(5)
 #define HAS_FAN6 _HAS_FAN(6)
 #define HAS_FAN7 _HAS_FAN(7)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos

commit 248b7dfa591a34a8aa1c6960944e1a3a468ad1de
Author: yangwenxiong <46896566+yangwenxiong@users.noreply.github.com>
Date:   Sat Jan 25 16:13:39 2020 +0800

    BigTreeTech GTR V1.0 / Support 8 extruders, heaters, temp sensors, fans (#16595)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 02e20cdd6e..1a2c39ec25 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -334,21 +334,21 @@
 #endif
 
 #if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL)
   #define PSU_POWERUP_DELAY 100
 #endif
 
 /**
  * Temp Sensor defines
  */
 
-#define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
+#define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_6 == (n) || TEMP_SENSOR_7 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675
   #if TEMP_SENSOR_0 == -3
     #define HEATER_0_MAX6675_TMIN -270
     #define HEATER_0_MAX6675_TMAX 1800
   #else
     #define HEATER_0_MAX6675_TMIN    0
@@ -476,20 +476,58 @@
   #define THERMISTOR_HEATER_5 TEMP_SENSOR_5
   #define HEATER_5_USES_THERMISTOR
   #if TEMP_SENSOR_5 == 1000
     #define HEATER_5_USER_THERMISTOR
   #endif
 #else
   #undef HEATER_5_MINTEMP
   #undef HEATER_5_MAXTEMP
 #endif
 
+#if TEMP_SENSOR_6 == -4
+  #define HEATER_6_USES_AD8495
+#elif TEMP_SENSOR_6 == -3
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_6."
+#elif TEMP_SENSOR_6 == -2
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_6."
+#elif TEMP_SENSOR_6 == -1
+  #define HEATER_6_USES_AD595
+#elif TEMP_SENSOR_6 > 0
+  #define THERMISTOR_HEATER_6 TEMP_SENSOR_6
+  #define HEATER_6_USES_THERMISTOR
+  #if TEMP_SENSOR_6 == 1000
+    #define HEATER_6_USER_THERMISTOR
+  #endif
+#else
+  #undef HEATER_6_MINTEMP
+  #undef HEATER_6_MAXTEMP
+#endif
+
+#if TEMP_SENSOR_7 == -4
+  #define HEATER_7_USES_AD8495
+#elif TEMP_SENSOR_7 == -3
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_7."
+#elif TEMP_SENSOR_7 == -2
+  #error "MAX7775 Thermocouples (-2) not supported for TEMP_SENSOR_7."
+#elif TEMP_SENSOR_7 == -1
+  #define HEATER_7_USES_AD595
+#elif TEMP_SENSOR_7 > 0
+  #define THERMISTOR_HEATER_7 TEMP_SENSOR_7
+  #define HEATER_7_USES_THERMISTOR
+  #if TEMP_SENSOR_7 == 1000
+    #define HEATER_7_USER_THERMISTOR
+  #endif
+#else
+  #undef HEATER_7_MINTEMP
+  #undef HEATER_7_MAXTEMP
+#endif
+
 #if TEMP_SENSOR_BED == -4
   #define HEATER_BED_USES_AD8495
 #elif TEMP_SENSOR_BED == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
   #define HEATER_BED_USES_AD595
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
@@ -531,22 +569,22 @@
   #define HEATER_PROBE_USES_AD595
 #elif TEMP_SENSOR_PROBE > 0
   #define THERMISTORPROBE TEMP_SENSOR_PROBE
   #define PROBE_USES_THERMISTOR
   #if TEMP_SENSOR_PROBE == 1000
     #define PROBE_USER_THERMISTOR
   #endif
 #endif
 
 #define HOTEND_USES_THERMISTOR ANY( \
-  HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, \
-  HEATER_3_USES_THERMISTOR, HEATER_4_USES_THERMISTOR, HEATER_5_USES_THERMISTOR)
+  HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, HEATER_3_USES_THERMISTOR, \
+  HEATER_4_USES_THERMISTOR, HEATER_5_USES_THERMISTOR, HEATER_6_USES_THERMISTOR, HEATER_7_USES_THERMISTOR )
 
 /**
  * Default hotend offsets, if not defined
  */
 #if HAS_HOTEND_OFFSET
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
@@ -1018,20 +1056,32 @@
 #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
 #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
 #define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5)))
 #define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
+#define HAS_E6_ENABLE     (PIN_EXISTS(E6_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E6)))
+#define HAS_E6_DIR        (PIN_EXISTS(E6_DIR))
+#define HAS_E6_STEP       (PIN_EXISTS(E6_STEP))
+#define HAS_E6_MICROSTEPS (PIN_EXISTS(E6_MS1))
+#define HAS_SOLENOID_6    (PIN_EXISTS(SOL6))
+
+#define HAS_E7_ENABLE     (PIN_EXISTS(E7_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E7)))
+#define HAS_E7_DIR        (PIN_EXISTS(E7_DIR))
+#define HAS_E7_STEP       (PIN_EXISTS(E7_STEP))
+#define HAS_E7_MICROSTEPS (PIN_EXISTS(E7_MS1))
+#define HAS_SOLENOID_7    (PIN_EXISTS(SOL7))
+
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS  (AXIS_HAS_STALLGUARD(X)  && defined(X_STALL_SENSITIVITY))
   #define X2_SENSORLESS (AXIS_HAS_STALLGUARD(X2) && defined(X2_STALL_SENSITIVITY))
@@ -1088,20 +1138,22 @@
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0        HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1        HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2        HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3        HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4        HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5        HAS_ADC_TEST(5)
+#define HAS_TEMP_ADC_6        HAS_ADC_TEST(6)
+#define HAS_TEMP_ADC_7        HAS_ADC_TEST(7)
 #define HAS_TEMP_ADC_BED      HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_PROBE    HAS_ADC_TEST(PROBE)
 #define HAS_TEMP_ADC_CHAMBER  HAS_ADC_TEST(CHAMBER)
 
 #define HAS_TEMP_HOTEND   ((HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675)) && HOTENDS)
 #define HAS_TEMP_BED        HAS_TEMP_ADC_BED
 #define HAS_TEMP_PROBE      HAS_TEMP_ADC_PROBE
 #define HAS_TEMP_CHAMBER    HAS_TEMP_ADC_CHAMBER
 
 #if ENABLED(JOYSTICK)
@@ -1111,20 +1163,22 @@
   #define HAS_JOY_ADC_EN PIN_EXISTS(JOY_EN)
 #endif
 
 // Heaters
 #define HAS_HEATER_0    (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1    (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2    (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3    (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4    (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_5    (PIN_EXISTS(HEATER_5))
+#define HAS_HEATER_6    (PIN_EXISTS(HEATER_6))
+#define HAS_HEATER_7    (PIN_EXISTS(HEATER_7))
 #define HAS_HEATER_BED  (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations
 #define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
 #define BED_OR_CHAMBER (HAS_HEATED_BED || HAS_TEMP_CHAMBER)
 #define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE)
 #define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER))
 
 // PID heating
 #if !HAS_HEATED_BED
@@ -1139,40 +1193,48 @@
 #define WATCH_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
 #define WATCH_CHAMBER (HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (HOTENDS > 0 && PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
+#define HAS_AUTO_FAN_6 (HOTENDS > 6 && PIN_EXISTS(E6_AUTO_FAN))
+#define HAS_AUTO_FAN_7 (HOTENDS > 7 && PIN_EXISTS(E7_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN))
 
-#define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
+#define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_FAN_6 || HAS_AUTO_FAN_7 || HAS_AUTO_CHAMBER_FAN)
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN
-  #define AUTO_CHAMBER_IS_E (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5))
+  #define AUTO_CHAMBER_IS_E (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5) || _FANOVERLAP(CHAMBER,6) || _FANOVERLAP(CHAMBER,7))
 #endif
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
-#define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN && E4_AUTO_FAN_PIN != FAN1_PIN && E5_AUTO_FAN_PIN != FAN1_PIN)
-#define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN && E4_AUTO_FAN_PIN != FAN2_PIN && E5_AUTO_FAN_PIN != FAN2_PIN)
+#define _HAS_FAN(P) (PIN_EXISTS(FAN_##P) && CONTROLLER_FAN_PIN != FAN_##P##_PIN && E0_AUTO_FAN_PIN != FAN_##P##_PIN && E1_AUTO_FAN_PIN != FAN_##P##_PIN && E2_AUTO_FAN_PIN != FAN_##P##_PIN && E3_AUTO_FAN_PIN != FAN_##P##_PIN && E4_AUTO_FAN_PIN != FAN_##P##_PIN && E5_AUTO_FAN_PIN != FAN_##P##_PIN && E6_AUTO_FAN_PIN != FAN_##P##_PIN && E7_AUTO_FAN_PIN != FAN_##P##_PIN)
+#define HAS_FAN1 _HAS_FAN(1)
+#define HAS_FAN2 _HAS_FAN(2)
+#define HAS_FAN3 _HAS_FAN(3)
+#define HAS_FAN4 _HAS_FAN(4)
+#define HAS_FAN5 _HAS_FAN(5)
+#define HAS_FAN6 _HAS_FAN(6)
+#define HAS_FAN7 _HAS_FAN(7)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0) && NUM_SERVOS > 0)
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1) && NUM_SERVOS > 1)
 #define HAS_SERVO_2 (PIN_EXISTS(SERVO2) && NUM_SERVOS > 2)
 #define HAS_SERVO_3 (PIN_EXISTS(SERVO3) && NUM_SERVOS > 3)
 #define HAS_SERVOS  (NUM_SERVOS > 0)
 
 #if HAS_SERVOS && !defined(Z_PROBE_SERVO_NR)
@@ -1196,21 +1258,21 @@
 #define HAS_BUZZER      (PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
 #define USE_BEEPER      (HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
 #define HAS_CASE_LIGHT  (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
 #define HAS_STEPPER_RESET     (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS         (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
 
 #define HAS_SOME_Z_MICROSTEPS (HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_Z4_MICROSTEPS)
-#define HAS_SOME_E_MICROSTEPS (HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
+#define HAS_SOME_E_MICROSTEPS (HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS || HAS_E6_MICROSTEPS || HAS_E7_MICROSTEPS)
 #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_SOME_Z_MICROSTEPS || HAS_SOME_E_MICROSTEPS)
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)
     #ifndef MICROSTEP128
@@ -1271,56 +1333,63 @@
   #define EXTRUDE_MINTEMP 170
 #endif
 
 /**
  * Heater signal inversion defaults
  */
 
 #if HAS_HEATER_0 && !defined(HEATER_0_INVERTING)
   #define HEATER_0_INVERTING false
 #endif
-
 #if HAS_HEATER_1 && !defined(HEATER_1_INVERTING)
   #define HEATER_1_INVERTING false
 #endif
-
 #if HAS_HEATER_2 && !defined(HEATER_2_INVERTING)
   #define HEATER_2_INVERTING false
 #endif
-
 #if HAS_HEATER_3 && !defined(HEATER_3_INVERTING)
   #define HEATER_3_INVERTING false
 #endif
-
 #if HAS_HEATER_4 && !defined(HEATER_4_INVERTING)
   #define HEATER_4_INVERTING false
 #endif
-
 #if HAS_HEATER_5 && !defined(HEATER_5_INVERTING)
   #define HEATER_5_INVERTING false
 #endif
+#if HAS_HEATER_6 && !defined(HEATER_6_INVERTING)
+  #define HEATER_6_INVERTING false
+#endif
+#if HAS_HEATER_7 && !defined(HEATER_7_INVERTING)
+  #define HEATER_7_INVERTING false
+#endif
 
 /**
  * Helper Macros for heaters and extruder fan
  */
 
 #define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, (v) ^ HEATER_0_INVERTING)
 #if HOTENDS > 1 || ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, (v) ^ HEATER_1_INVERTING)
   #if HOTENDS > 2
     #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, (v) ^ HEATER_2_INVERTING)
     #if HOTENDS > 3
       #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, (v) ^ HEATER_3_INVERTING)
       #if HOTENDS > 4
         #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, (v) ^ HEATER_4_INVERTING)
         #if HOTENDS > 5
           #define WRITE_HEATER_5(v) WRITE(HEATER_5_PIN, (v) ^ HEATER_5_INVERTING)
+          #if HOTENDS > 6
+            #define WRITE_HEATER_6(v) WRITE(HEATER_6_PIN, (v) ^ HEATER_6_INVERTING)
+            #if HOTENDS > 7
+              #define WRITE_HEATER_7(v) WRITE(HEATER_7_PIN, (v) ^ HEATER_7_INVERTING)
+            #endif // HOTENDS > 7
+          #endif // HOTENDS > 6
         #endif // HOTENDS > 5
       #endif // HOTENDS > 4
     #endif // HOTENDS > 3
   #endif // HOTENDS > 2
 #endif // HOTENDS > 1
 #if ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
 #else
   #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
 #endif
@@ -1358,21 +1427,31 @@
   #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ HEATER_CHAMBER_INVERTING)
 #endif
 
 /**
  * Up to 3 PWM fans
  */
 #ifndef FAN_INVERTING
   #define FAN_INVERTING false
 #endif
 
-#if HAS_FAN2
+#if HAS_FAN7
+  #define FAN_COUNT 8
+#elif HAS_FAN6
+  #define FAN_COUNT 7
+#elif HAS_FAN5
+  #define FAN_COUNT 6
+#elif HAS_FAN4
+  #define FAN_COUNT 5
+#elif HAS_FAN3
+  #define FAN_COUNT 4
+#elif HAS_FAN2
   #define FAN_COUNT 3
 #elif HAS_FAN1
   #define FAN_COUNT 2
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else
   #define FAN_COUNT 0
 #endif
 
 #if FAN_COUNT > 0
@@ -1633,21 +1712,20 @@
   #undef MESH_MIN_X
   #undef MESH_MIN_Y
   #undef MESH_MAX_X
   #undef MESH_MAX_Y
 #endif
 
 #if (defined(PROBE_PT_1_X) && defined(PROBE_PT_2_X) && defined(PROBE_PT_3_X) && defined(PROBE_PT_1_Y) && defined(PROBE_PT_2_Y) && defined(PROBE_PT_3_Y))
   #define HAS_FIXED_3POINT
 #endif
 
-
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif

commit 0fcf2b1110d9f0d362e5aab9cc73d963710e9865
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Jan 20 00:35:07 2020 -0500

    Quad Z stepper support (#16277)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index acadd234e2..02e20cdd6e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -680,23 +680,20 @@
     #elif X2_USE_ENDSTOP == _ZMAX_
       #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #define X2_MIN_PIN Z_MAX_PIN
     #else
       #define X2_MIN_ENDSTOP_INVERTING false
     #endif
     #define X2_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
-// Is an endstop plug used for the X2 endstop?
-#define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
-
 /**
  * Y_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Y_DUAL_ENDSTOPS)
   #if Y_HOME_DIR > 0
     #if Y2_USE_ENDSTOP == _XMIN_
       #define Y2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #define Y2_MAX_PIN X_MIN_PIN
     #elif Y2_USE_ENDSTOP == _XMAX_
       #define Y2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
@@ -736,27 +733,25 @@
     #elif Y2_USE_ENDSTOP == _ZMAX_
       #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #define Y2_MIN_PIN Z_MAX_PIN
     #else
       #define Y2_MIN_ENDSTOP_INVERTING false
     #endif
     #define Y2_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
-// Is an endstop plug used for the Y2 endstop or the bed probe?
-#define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
-
 /**
- * Z_DUAL_ENDSTOPS endstop reassignment
+ * Z_MULTI_ENDSTOPS endstop reassignment
  */
-#if Z_MULTI_ENDSTOPS
+#if ENABLED(Z_MULTI_ENDSTOPS)
+
   #if Z_HOME_DIR > 0
     #if Z2_USE_ENDSTOP == _XMIN_
       #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #define Z2_MAX_PIN X_MIN_PIN
     #elif Z2_USE_ENDSTOP == _XMAX_
       #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #define Z2_MAX_PIN X_MAX_PIN
     #elif Z2_USE_ENDSTOP == _YMIN_
       #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #define Z2_MAX_PIN Y_MIN_PIN
@@ -790,81 +785,122 @@
       #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #define Z2_MIN_PIN Z_MIN_PIN
     #elif Z2_USE_ENDSTOP == _ZMAX_
       #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #define Z2_MIN_PIN Z_MAX_PIN
     #else
       #define Z2_MIN_ENDSTOP_INVERTING false
     #endif
     #define Z2_MAX_ENDSTOP_INVERTING false
   #endif
-#endif
 
-#if ENABLED(Z_TRIPLE_ENDSTOPS)
-  #if Z_HOME_DIR > 0
-    #if Z3_USE_ENDSTOP == _XMIN_
-      #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #define Z3_MAX_PIN X_MIN_PIN
-    #elif Z3_USE_ENDSTOP == _XMAX_
-      #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #define Z3_MAX_PIN X_MAX_PIN
-    #elif Z3_USE_ENDSTOP == _YMIN_
-      #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #define Z3_MAX_PIN Y_MIN_PIN
-    #elif Z3_USE_ENDSTOP == _YMAX_
-      #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #define Z3_MAX_PIN Y_MAX_PIN
-    #elif Z3_USE_ENDSTOP == _ZMIN_
-      #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #define Z3_MAX_PIN Z_MIN_PIN
-    #elif Z3_USE_ENDSTOP == _ZMAX_
-      #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #define Z3_MAX_PIN Z_MAX_PIN
+  #if NUM_Z_STEPPER_DRIVERS >= 3
+    #if Z_HOME_DIR > 0
+      #if Z3_USE_ENDSTOP == _XMIN_
+        #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Z3_MAX_PIN X_MIN_PIN
+      #elif Z3_USE_ENDSTOP == _XMAX_
+        #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Z3_MAX_PIN X_MAX_PIN
+      #elif Z3_USE_ENDSTOP == _YMIN_
+        #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Z3_MAX_PIN Y_MIN_PIN
+      #elif Z3_USE_ENDSTOP == _YMAX_
+        #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Z3_MAX_PIN Y_MAX_PIN
+      #elif Z3_USE_ENDSTOP == _ZMIN_
+        #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Z3_MAX_PIN Z_MIN_PIN
+      #elif Z3_USE_ENDSTOP == _ZMAX_
+        #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Z3_MAX_PIN Z_MAX_PIN
+      #else
+        #define Z3_MAX_ENDSTOP_INVERTING false
+      #endif
+      #define Z3_MIN_ENDSTOP_INVERTING false
     #else
+      #if Z3_USE_ENDSTOP == _XMIN_
+        #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Z3_MIN_PIN X_MIN_PIN
+      #elif Z3_USE_ENDSTOP == _XMAX_
+        #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Z3_MIN_PIN X_MAX_PIN
+      #elif Z3_USE_ENDSTOP == _YMIN_
+        #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Z3_MIN_PIN Y_MIN_PIN
+      #elif Z3_USE_ENDSTOP == _YMAX_
+        #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Z3_MIN_PIN Y_MAX_PIN
+      #elif Z3_USE_ENDSTOP == _ZMIN_
+        #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Z3_MIN_PIN Z_MIN_PIN
+      #elif Z3_USE_ENDSTOP == _ZMAX_
+        #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Z3_MIN_PIN Z_MAX_PIN
+      #else
+        #define Z3_MIN_ENDSTOP_INVERTING false
+      #endif
       #define Z3_MAX_ENDSTOP_INVERTING false
     #endif
-    #define Z3_MIN_ENDSTOP_INVERTING false
-  #else
-    #if Z3_USE_ENDSTOP == _XMIN_
-      #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-      #define Z3_MIN_PIN X_MIN_PIN
-    #elif Z3_USE_ENDSTOP == _XMAX_
-      #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-      #define Z3_MIN_PIN X_MAX_PIN
-    #elif Z3_USE_ENDSTOP == _YMIN_
-      #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-      #define Z3_MIN_PIN Y_MIN_PIN
-    #elif Z3_USE_ENDSTOP == _YMAX_
-      #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-      #define Z3_MIN_PIN Y_MAX_PIN
-    #elif Z3_USE_ENDSTOP == _ZMIN_
-      #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-      #define Z3_MIN_PIN Z_MIN_PIN
-    #elif Z3_USE_ENDSTOP == _ZMAX_
-      #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-      #define Z3_MIN_PIN Z_MAX_PIN
+  #endif
+
+  #if NUM_Z_STEPPER_DRIVERS >= 4
+    #if Z_HOME_DIR > 0
+      #if Z4_USE_ENDSTOP == _XMIN_
+        #define Z4_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Z4_MAX_PIN X_MIN_PIN
+      #elif Z4_USE_ENDSTOP == _XMAX_
+        #define Z4_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Z4_MAX_PIN X_MAX_PIN
+      #elif Z4_USE_ENDSTOP == _YMIN_
+        #define Z4_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Z4_MAX_PIN Y_MIN_PIN
+      #elif Z4_USE_ENDSTOP == _YMAX_
+        #define Z4_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Z4_MAX_PIN Y_MAX_PIN
+      #elif Z4_USE_ENDSTOP == _ZMIN_
+        #define Z4_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Z4_MAX_PIN Z_MIN_PIN
+      #elif Z4_USE_ENDSTOP == _ZMAX_
+        #define Z4_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Z4_MAX_PIN Z_MAX_PIN
+      #else
+        #define Z4_MAX_ENDSTOP_INVERTING false
+      #endif
+      #define Z4_MIN_ENDSTOP_INVERTING false
     #else
-      #define Z3_MIN_ENDSTOP_INVERTING false
+      #if Z4_USE_ENDSTOP == _XMIN_
+        #define Z4_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Z4_MIN_PIN X_MIN_PIN
+      #elif Z4_USE_ENDSTOP == _XMAX_
+        #define Z4_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Z4_MIN_PIN X_MAX_PIN
+      #elif Z4_USE_ENDSTOP == _YMIN_
+        #define Z4_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Z4_MIN_PIN Y_MIN_PIN
+      #elif Z4_USE_ENDSTOP == _YMAX_
+        #define Z4_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Z4_MIN_PIN Y_MAX_PIN
+      #elif Z4_USE_ENDSTOP == _ZMIN_
+        #define Z4_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Z4_MIN_PIN Z_MIN_PIN
+      #elif Z4_USE_ENDSTOP == _ZMAX_
+        #define Z4_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Z4_MIN_PIN Z_MAX_PIN
+      #else
+        #define Z4_MIN_ENDSTOP_INVERTING false
+      #endif
+      #define Z4_MAX_ENDSTOP_INVERTING false
     #endif
-    #define Z3_MAX_ENDSTOP_INVERTING false
   #endif
-#endif
-
-// Is an endstop plug used for the Z2 endstop or the bed probe?
-#define IS_Z2_OR_PROBE(A,M) ( \
-     (Z_MULTI_ENDSTOPS && Z2_USE_ENDSTOP == _##A##M##_) \
-  || (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
 
-// Is an endstop plug used for the Z3 endstop or the bed probe?
-#define IS_Z3_OR_PROBE(A,M) ( \
-     (ENABLED(Z_TRIPLE_ENDSTOPS) && Z3_USE_ENDSTOP == _##A##M##_) \
-  || (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
+#endif // Z_MULTI_ENDSTOPS
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if ENABLED(USE_XMAX_PLUG)
     #define ENDSTOPPULLUP_XMAX
   #endif
   #if ENABLED(USE_YMAX_PLUG)
     #define ENDSTOPPULLUP_YMAX
@@ -940,20 +976,25 @@
 #define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2)))
 #define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
 #define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
 #define HAS_Z2_MICROSTEPS (PIN_EXISTS(Z2_MS1))
 
 #define HAS_Z3_ENABLE     (PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3)))
 #define HAS_Z3_DIR        (PIN_EXISTS(Z3_DIR))
 #define HAS_Z3_STEP       (PIN_EXISTS(Z3_STEP))
 #define HAS_Z3_MICROSTEPS (PIN_EXISTS(Z3_MS1))
 
+#define HAS_Z4_ENABLE     (PIN_EXISTS(Z4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z4)))
+#define HAS_Z4_DIR        (PIN_EXISTS(Z4_DIR))
+#define HAS_Z4_STEP       (PIN_EXISTS(Z4_STEP))
+#define HAS_Z4_MICROSTEPS (PIN_EXISTS(Z4_MS1))
+
 // Extruder steppers and solenoids
 #define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0)))
 #define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
 #define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
 #define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
 #define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
 
 #define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1)))
 #define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))
 #define HAS_E1_STEP       (PIN_EXISTS(E1_STEP))
@@ -992,48 +1033,62 @@
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS  (AXIS_HAS_STALLGUARD(X)  && defined(X_STALL_SENSITIVITY))
   #define X2_SENSORLESS (AXIS_HAS_STALLGUARD(X2) && defined(X2_STALL_SENSITIVITY))
   #define Y_SENSORLESS  (AXIS_HAS_STALLGUARD(Y)  && defined(Y_STALL_SENSITIVITY))
   #define Y2_SENSORLESS (AXIS_HAS_STALLGUARD(Y2) && defined(Y2_STALL_SENSITIVITY))
   #define Z_SENSORLESS  (AXIS_HAS_STALLGUARD(Z)  && defined(Z_STALL_SENSITIVITY))
   #define Z2_SENSORLESS (AXIS_HAS_STALLGUARD(Z2) && defined(Z2_STALL_SENSITIVITY))
   #define Z3_SENSORLESS (AXIS_HAS_STALLGUARD(Z3) && defined(Z3_STALL_SENSITIVITY))
+  #define Z4_SENSORLESS (AXIS_HAS_STALLGUARD(Z4) && defined(Z4_STALL_SENSITIVITY))
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
     #define Y_SPI_SENSORLESS Y_SENSORLESS
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
 #endif
 
 #define HAS_E_STEPPER_ENABLE (HAS_E_DRIVER(TMC2660) \
   || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
     && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) \
 )
 
+//
 // Endstops and bed probe
-#define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
+//
+
+// Is an endstop plug used for extra Z endstops or the probe?
+#define IS_PROBE_PIN(A,M) (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == P)
+#define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
+#define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
+#define IS_Z2_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_)
+#define IS_Z3_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 3 && Z3_USE_ENDSTOP == _##A##M##_)
+#define IS_Z4_ENDSTOP(A,M) (ENABLED(Z_MULTI_ENDSTOPS) && NUM_Z_STEPPER_DRIVERS >= 4 && Z4_USE_ENDSTOP == _##A##M##_)
+
+#define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_PROBE_PIN(A,M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_ENDSTOP(A,M) && !IS_Z3_ENDSTOP(A,M) && !IS_Z4_ENDSTOP(A,M))
 #define HAS_X_MIN _HAS_STOP(X,MIN)
 #define HAS_X_MAX _HAS_STOP(X,MAX)
 #define HAS_Y_MIN _HAS_STOP(Y,MIN)
 #define HAS_Y_MAX _HAS_STOP(Y,MAX)
 #define HAS_Z_MIN _HAS_STOP(Z,MIN)
 #define HAS_Z_MAX _HAS_STOP(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
+#define HAS_Z4_MIN (PIN_EXISTS(Z4_MIN))
+#define HAS_Z4_MAX (PIN_EXISTS(Z4_MAX))
 #define HAS_Z_MIN_PROBE_PIN (HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE))
 #define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))
 
 //
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 //
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0        HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1        HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2        HAS_ADC_TEST(2)
@@ -1140,21 +1195,21 @@
 #define HAS_PHOTOGRAPH  (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER      (PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
 #define USE_BEEPER      (HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
 #define HAS_CASE_LIGHT  (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
 #define HAS_STEPPER_RESET     (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS         (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
 
-#define HAS_SOME_Z_MICROSTEPS (HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS)
+#define HAS_SOME_Z_MICROSTEPS (HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_Z4_MICROSTEPS)
 #define HAS_SOME_E_MICROSTEPS (HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
 #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_SOME_Z_MICROSTEPS || HAS_SOME_E_MICROSTEPS)
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)
@@ -1746,28 +1801,20 @@
 #endif
 
 // Defined here to catch the above defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
-#if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
-  #define Z_STEPPER_COUNT 3
-#elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
-  #define Z_STEPPER_COUNT 2
-#else
-  #define Z_STEPPER_COUNT 1
-#endif
-
 #if HAS_SPI_LCD
   // Get LCD character width/height, which may be overridden by pins, configs, etc.
   #ifndef LCD_WIDTH
     #if HAS_GRAPHICAL_LCD
       #define LCD_WIDTH 21
     #elif ENABLED(ULTIPANEL)
       #define LCD_WIDTH 20
     #else
       #define LCD_WIDTH 16
     #endif

commit 707349d492c2544d32af7287aca4ddbaf1473542
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jan 19 19:52:01 2020 -0600

    Updates for L64XX

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 47de43cc46..acadd234e2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1023,21 +1023,23 @@
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
 #define HAS_Z_MIN_PROBE_PIN (HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE))
 #define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))
 
+//
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
+//
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0        HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1        HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2        HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3        HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4        HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5        HAS_ADC_TEST(5)
 #define HAS_TEMP_ADC_BED      HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_PROBE    HAS_ADC_TEST(PROBE)
 #define HAS_TEMP_ADC_CHAMBER  HAS_ADC_TEST(CHAMBER)
@@ -1138,21 +1140,23 @@
 #define HAS_PHOTOGRAPH  (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER      (PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
 #define USE_BEEPER      (HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
 #define HAS_CASE_LIGHT  (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
 #define HAS_STEPPER_RESET     (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS         (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
 
-#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
+#define HAS_SOME_Z_MICROSTEPS (HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS)
+#define HAS_SOME_E_MICROSTEPS (HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
+#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_SOME_Z_MICROSTEPS || HAS_SOME_E_MICROSTEPS)
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)
     #ifndef MICROSTEP128
       #define MICROSTEP128 LOW,HIGH,LOW

commit a338dce83f6f3b3348a8422ad8acd7b81cc1cefe
Author: tompe-proj <59094873+tompe-proj@users.noreply.github.com>
Date:   Sat Jan 18 00:16:45 2020 +0100

    PINDA v2 temperature sensor / compensation (#16293)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4ad08ffa82..47de43cc46 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -334,21 +334,21 @@
 #endif
 
 #if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL)
   #define PSU_POWERUP_DELAY 100
 #endif
 
 /**
  * Temp Sensor defines
  */
 
-#define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_CHAMBER == (n))
+#define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_PROBE == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675
   #if TEMP_SENSOR_0 == -3
     #define HEATER_0_MAX6675_TMIN -270
     #define HEATER_0_MAX6675_TMAX 1800
   #else
     #define HEATER_0_MAX6675_TMIN    0
@@ -514,21 +514,39 @@
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define HEATER_CHAMBER_USES_THERMISTOR
   #if TEMP_SENSOR_CHAMBER == 1000
     #define HEATER_CHAMBER_USER_THERMISTOR
   #endif
 #else
   #undef CHAMBER_MINTEMP
   #undef CHAMBER_MAXTEMP
 #endif
 
-#define HOTEND_USES_THERMISTOR ANY(HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, HEATER_3_USES_THERMISTOR, HEATER_4_USES_THERMISTOR)
+#if TEMP_SENSOR_PROBE == -4
+  #define HEATER_PROBE_USES_AD8495
+#elif TEMP_SENSOR_PROBE == -3
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_PROBE."
+#elif TEMP_SENSOR_PROBE == -2
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_PROBE."
+#elif TEMP_SENSOR_PROBE == -1
+  #define HEATER_PROBE_USES_AD595
+#elif TEMP_SENSOR_PROBE > 0
+  #define THERMISTORPROBE TEMP_SENSOR_PROBE
+  #define PROBE_USES_THERMISTOR
+  #if TEMP_SENSOR_PROBE == 1000
+    #define PROBE_USER_THERMISTOR
+  #endif
+#endif
+
+#define HOTEND_USES_THERMISTOR ANY( \
+  HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, \
+  HEATER_3_USES_THERMISTOR, HEATER_4_USES_THERMISTOR, HEATER_5_USES_THERMISTOR)
 
 /**
  * Default hotend offsets, if not defined
  */
 #if HAS_HOTEND_OFFSET
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
@@ -1007,58 +1025,56 @@
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
 #define HAS_Z_MIN_PROBE_PIN (HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE))
 #define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))
 
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
-#define HAS_TEMP_ADC_0 HAS_ADC_TEST(0)
-#define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
-#define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
-#define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
-#define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
-#define HAS_TEMP_ADC_5 HAS_ADC_TEST(5)
-#define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
-#define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)
-
-#define HAS_TEMP_HOTEND (HOTENDS > 0 && (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675)))
-#define HAS_TEMP_BED HAS_TEMP_ADC_BED
-#define HAS_TEMP_CHAMBER HAS_TEMP_ADC_CHAMBER
-#define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER))
+#define HAS_TEMP_ADC_0        HAS_ADC_TEST(0)
+#define HAS_TEMP_ADC_1        HAS_ADC_TEST(1)
+#define HAS_TEMP_ADC_2        HAS_ADC_TEST(2)
+#define HAS_TEMP_ADC_3        HAS_ADC_TEST(3)
+#define HAS_TEMP_ADC_4        HAS_ADC_TEST(4)
+#define HAS_TEMP_ADC_5        HAS_ADC_TEST(5)
+#define HAS_TEMP_ADC_BED      HAS_ADC_TEST(BED)
+#define HAS_TEMP_ADC_PROBE    HAS_ADC_TEST(PROBE)
+#define HAS_TEMP_ADC_CHAMBER  HAS_ADC_TEST(CHAMBER)
+
+#define HAS_TEMP_HOTEND   ((HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675)) && HOTENDS)
+#define HAS_TEMP_BED        HAS_TEMP_ADC_BED
+#define HAS_TEMP_PROBE      HAS_TEMP_ADC_PROBE
+#define HAS_TEMP_CHAMBER    HAS_TEMP_ADC_CHAMBER
 
 #if ENABLED(JOYSTICK)
   #define HAS_JOY_ADC_X  PIN_EXISTS(JOY_X)
   #define HAS_JOY_ADC_Y  PIN_EXISTS(JOY_Y)
   #define HAS_JOY_ADC_Z  PIN_EXISTS(JOY_Z)
   #define HAS_JOY_ADC_EN PIN_EXISTS(JOY_EN)
 #endif
 
 // Heaters
-#define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
-#define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
-#define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
-#define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
-#define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
-#define HAS_HEATER_5 (PIN_EXISTS(HEATER_5))
-#define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
+#define HAS_HEATER_0    (PIN_EXISTS(HEATER_0))
+#define HAS_HEATER_1    (PIN_EXISTS(HEATER_1))
+#define HAS_HEATER_2    (PIN_EXISTS(HEATER_2))
+#define HAS_HEATER_3    (PIN_EXISTS(HEATER_3))
+#define HAS_HEATER_4    (PIN_EXISTS(HEATER_4))
+#define HAS_HEATER_5    (PIN_EXISTS(HEATER_5))
+#define HAS_HEATER_BED  (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations
 #define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
 #define BED_OR_CHAMBER (HAS_HEATED_BED || HAS_TEMP_CHAMBER)
-#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || BED_OR_CHAMBER)
-
-#if !HAS_TEMP_SENSOR
-  #undef AUTO_REPORT_TEMPERATURES
-#endif
+#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || BED_OR_CHAMBER || HAS_TEMP_PROBE)
+#define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER))
 
 // PID heating
 #if !HAS_HEATED_BED
   #undef PIDTEMPBED
 #endif
 #define HAS_PID_HEATING EITHER(PIDTEMP, PIDTEMPBED)
 #define HAS_PID_FOR_BOTH BOTH(PIDTEMP, PIDTEMPBED)
 
 // Thermal protection
 #define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
@@ -1074,20 +1090,24 @@
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN))
 
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
 #define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN
   #define AUTO_CHAMBER_IS_E (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5))
 #endif
 
+#if !HAS_TEMP_SENSOR
+  #undef AUTO_REPORT_TEMPERATURES
+#endif
+
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN && E4_AUTO_FAN_PIN != FAN1_PIN && E5_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN && E4_AUTO_FAN_PIN != FAN2_PIN && E5_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 

commit 4108c5d01fe56c4cb06bffdd926cbaf879e34f11
Author: George Fu <nailao_5918@163.com>
Date:   Sat Jan 18 03:16:05 2020 +0800

    Update FYSETC S6 pins (#16559)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ec0b06f660..4ad08ffa82 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -255,21 +255,21 @@
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
 #elif ENABLED(MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
 #elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
-#elif ANY(FYSETC_MINI_12864_X_X, FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0, FYSETC_MINI_12864_2_1)
+#elif ENABLED(FYSETC_MINI_12864)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif EITHER(MAKRPANEL, MINIPANEL)
   #define _LCD_CONTRAST_INIT  17
 #endif
 
 #define HAS_LCD_CONTRAST defined(_LCD_CONTRAST_INIT)
 #if HAS_LCD_CONTRAST

commit 7f87a044cdb7c4ca3fca81d4d175987484710a1f
Author: greppp <gregory.perrin87@gmail.com>
Date:   Fri Jan 3 21:44:16 2020 -0500

    Fix Ender-2 display pins, add BTN_ENC (#16349)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 28c1c93a0f..ec0b06f660 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -252,21 +252,21 @@
 #elif ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #define _LCD_CONTRAST_MIN   90
   #define _LCD_CONTRAST_INIT 110
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
 #elif ENABLED(MKS_LCD12864B)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 205
-#elif ENABLED(MKS_MINI_12864)
+#elif EITHER(MKS_MINI_12864, ENDER2_STOCKDISPLAY)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif ANY(FYSETC_MINI_12864_X_X, FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0, FYSETC_MINI_12864_2_1)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif EITHER(MAKRPANEL, MINIPANEL)
   #define _LCD_CONTRAST_INIT  17
 #endif

commit 4e1f2f89f6bf8456bbf06f98d8de78410db850e3
Author: Jason Smith <jason.inet@gmail.com>
Date:   Wed Jan 1 19:51:15 2020 -0800

    Refactor TMC-related macros and sanity checks (#16384)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9c1393578c..28c1c93a0f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -549,36 +549,34 @@
  */
 #define ARRAY_BY_HOTENDS(V...) ARRAY_N(HOTENDS, V)
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
 /**
  * Driver Timings
  * NOTE: Driver timing order is longest-to-shortest duration.
  *       Preserve this ordering when adding new drivers.
  */
 
-#define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC2209_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE) || HAS_DRIVER(TMC5130_STANDALONE) || HAS_DRIVER(TMC5160_STANDALONE) || HAS_DRIVER(TMC2160_STANDALONE))
-
 #ifndef MINIMUM_STEPPER_POST_DIR_DELAY
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_POST_DIR_DELAY 15000
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_POST_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_POST_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_POST_DIR_DELAY 500
   #elif HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_POST_DIR_DELAY 400
   #elif HAS_DRIVER(A4988)
     #define MINIMUM_STEPPER_POST_DIR_DELAY 200
-  #elif TRINAMICS
+  #elif HAS_TRINAMIC || HAS_TRINAMIC_STANDALONE
     #define MINIMUM_STEPPER_POST_DIR_DELAY 20
   #else
     #define MINIMUM_STEPPER_POST_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
   #endif
 #endif
 
 #ifndef MINIMUM_STEPPER_PRE_DIR_DELAY
   #define MINIMUM_STEPPER_PRE_DIR_DELAY MINIMUM_STEPPER_POST_DIR_DELAY
 #endif
 
@@ -963,25 +961,20 @@
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
 #define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5)))
 #define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
-  #define HAS_TMCX1X0       (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
-  #define TMC_HAS_SPI       (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
-  #define HAS_STALLGUARD    (HAS_TMCX1X0 || HAS_DRIVER(TMC2209) || HAS_DRIVER(TMC2660))
-  #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_TMC220x)
-
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS  (AXIS_HAS_STALLGUARD(X)  && defined(X_STALL_SENSITIVITY))
   #define X2_SENSORLESS (AXIS_HAS_STALLGUARD(X2) && defined(X2_STALL_SENSITIVITY))
   #define Y_SENSORLESS  (AXIS_HAS_STALLGUARD(Y)  && defined(Y_STALL_SENSITIVITY))
   #define Y2_SENSORLESS (AXIS_HAS_STALLGUARD(Y2) && defined(Y2_STALL_SENSITIVITY))

commit 1c9ccce5209cd1727bf80e632f4f781c651e0c35
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Dec 24 01:03:08 2019 -0500

    Add NOZZLE_AS_PROBE (no probe offsets) (#15929)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index eb9692ab62..9c1393578c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1476,20 +1476,24 @@
 
 #ifndef MIN_PROBE_EDGE
   #define MIN_PROBE_EDGE 0
 #endif
 
 #if IS_KINEMATIC
   #undef MIN_PROBE_EDGE_LEFT
   #undef MIN_PROBE_EDGE_RIGHT
   #undef MIN_PROBE_EDGE_FRONT
   #undef MIN_PROBE_EDGE_BACK
+  #define MIN_PROBE_EDGE_LEFT 0
+  #define MIN_PROBE_EDGE_RIGHT 0
+  #define MIN_PROBE_EDGE_FRONT 0
+  #define MIN_PROBE_EDGE_BACK 0
 #else
   #ifndef MIN_PROBE_EDGE_LEFT
     #define MIN_PROBE_EDGE_LEFT MIN_PROBE_EDGE
   #endif
   #ifndef MIN_PROBE_EDGE_RIGHT
     #define MIN_PROBE_EDGE_RIGHT MIN_PROBE_EDGE
   #endif
   #ifndef MIN_PROBE_EDGE_FRONT
     #define MIN_PROBE_EDGE_FRONT MIN_PROBE_EDGE
   #endif

commit 87992f3669c77a808d4d34681192adec22e2556f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Dec 20 19:11:53 2019 -0600

    Use Github Actions for CI, date bump (#16269)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b06523caee..eb9692ab62 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -19,20 +19,23 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
+#ifdef GITHUB_ACTIONS
+  // Extras for CI testing
+#endif
 
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif

commit 64ebec50dc9dda0615a81d555e78bdf5194f0f78
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 20 10:19:41 2019 -0600

    Move pins debug condition

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ced854afae..b06523caee 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -19,26 +19,20 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
-#define AVR_ATmega2560_FAMILY_PLUS_70 ( \
-     MB(BQ_ZUM_MEGA_3D)                 \
-  || MB(MIGHTYBOARD_REVE)               \
-  || MB(MINIRAMBO)                      \
-  || MB(SCOOVO_X9H)                     \
-)
 
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif

commit 1bad8f1b172d8074272e5bae78a356e3671f7b50
Author: Jason Smith <jason.inet@gmail.com>
Date:   Thu Dec 19 00:38:48 2019 -0800

    Improve pulse timing and step reliability (#16128)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 717204768c..ced854afae 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -588,45 +588,41 @@
 #ifndef MINIMUM_STEPPER_PULSE
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_PULSE 30
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_PULSE 3
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_PULSE 2
   #elif HAS_DRIVER(A4988) || HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_PULSE 1
   #elif TRINAMICS
-    #if ENABLED(LIN_ADVANCE) && (HAS_TMC_STANDALONE_E_DRIVER || (HAS_TMC_E_DRIVER && DISABLED(SQUARE_WAVE_STEPPING)))
-      #define MINIMUM_STEPPER_PULSE 1
-    #else
-      #define MINIMUM_STEPPER_PULSE 0
-    #endif
+    #define MINIMUM_STEPPER_PULSE 0
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_PULSE 0
   #else
     #define MINIMUM_STEPPER_PULSE 2
   #endif
 #endif
 
 #ifndef MAXIMUM_STEPPER_RATE
   #if HAS_DRIVER(TB6560)
     #define MAXIMUM_STEPPER_RATE 15000
   #elif HAS_DRIVER(TB6600)
     #define MAXIMUM_STEPPER_RATE 150000
-  #elif HAS_DRIVER(LV8729)
-    #define MAXIMUM_STEPPER_RATE 200000
   #elif HAS_DRIVER(DRV8825)
     #define MAXIMUM_STEPPER_RATE 250000
-  #elif TRINAMICS
-    #define MAXIMUM_STEPPER_RATE 400000
   #elif HAS_DRIVER(A4988)
     #define MAXIMUM_STEPPER_RATE 500000
+  #elif HAS_DRIVER(LV8729)
+    #define MAXIMUM_STEPPER_RATE 1000000
+  #elif TRINAMICS
+    #define MAXIMUM_STEPPER_RATE 5000000
   #else
     #define MAXIMUM_STEPPER_RATE 250000
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_DIR > 0

commit 31fdaea26910e174dd6c2c12f8073aba74057e7e
Author: MS1987 <lms228@163.com>
Date:   Wed Dec 11 14:23:47 2019 +0800

    Add MKS Robin Pro, MKS Robin Lite3 (#16163)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1a6a33d387..717204768c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -252,20 +252,23 @@
   #define _LCD_CONTRAST_MAX  115
 #elif ENABLED(VIKI2)
   #define _LCD_CONTRAST_INIT 140
 #elif ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #define _LCD_CONTRAST_MIN   90
   #define _LCD_CONTRAST_INIT 110
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
+#elif ENABLED(MKS_LCD12864B)
+  #define _LCD_CONTRAST_MIN  120
+  #define _LCD_CONTRAST_INIT 205
 #elif ENABLED(MKS_MINI_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 195
 #elif ANY(FYSETC_MINI_12864_X_X, FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0, FYSETC_MINI_12864_2_1)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif EITHER(MAKRPANEL, MINIPANEL)
   #define _LCD_CONTRAST_INIT  17

commit c0616566591149eb7b2d8be1a29cb18802107163
Author: ManuelMcLure <manuel@mclure.org>
Date:   Sun Dec 1 15:36:49 2019 -0800

    Use PSU powerup delay for all powerups (#16065)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 13ae3511cd..1a6a33d387 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -326,21 +326,21 @@
 #ifndef PSU_NAME
   #if DISABLED(PSU_CONTROL)
     #define PSU_NAME "Generic"  // No control
   #elif PSU_ACTIVE_HIGH
     #define PSU_NAME "XBox"     // X-Box 360 (203W)
   #else
     #define PSU_NAME "ATX"      // ATX style
   #endif
 #endif
 
-#if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL) && DISABLED(AUTO_POWER_CONTROL)
+#if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL)
   #define PSU_POWERUP_DELAY 100
 #endif
 
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)

commit 6c2438deaea7732f018dccc1c683fe71fbe57c68
Author: Felicia Hummel <felicia@drachenkatze.org>
Date:   Sun Dec 1 19:55:28 2019 +0100

    Fix PSU_POWERUP_DELAY compile error (#16064)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3278e22c14..13ae3511cd 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -314,41 +314,36 @@
   #define DISABLE_INACTIVE_Y DISABLE_Y
 #endif
 #ifndef DISABLE_INACTIVE_Z
   #define DISABLE_INACTIVE_Z DISABLE_Z
 #endif
 #ifndef DISABLE_INACTIVE_E
   #define DISABLE_INACTIVE_E DISABLE_E
 #endif
 
 /**
- * Power Supply Control
+ * Power Supply
  */
 #ifndef PSU_NAME
-  #if ENABLED(PSU_CONTROL)
-    #if PSU_ACTIVE_HIGH
-      #define PSU_NAME "XBox"     // X-Box 360 (203W)
-    #else
-      #define PSU_NAME "ATX"      // ATX style
-    #endif
-    #if DISABLED(AUTO_POWER_CONTROL)
-      #ifndef PSU_POWERUP_DELAY
-        #define PSU_POWERUP_DELAY 100
-      #endif
-    #elif defined(PSU_POWERUP_DELAY)
-      #error "PSU_POWERUP_DELAY has no effect if AUTO_POWER_CONTROL is enabled."
-    #endif
+  #if DISABLED(PSU_CONTROL)
+    #define PSU_NAME "Generic"  // No control
+  #elif PSU_ACTIVE_HIGH
+    #define PSU_NAME "XBox"     // X-Box 360 (203W)
   #else
-    #define PSU_NAME "Generic"    // No control
+    #define PSU_NAME "ATX"      // ATX style
   #endif
 #endif
 
+#if !defined(PSU_POWERUP_DELAY) && ENABLED(PSU_CONTROL) && DISABLED(AUTO_POWER_CONTROL)
+  #define PSU_POWERUP_DELAY 100
+#endif
+
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
 
 #if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675

commit 690ed531b6e404bbc3fe85bdc4653484e5a4f3d0
Author: Felicia Hummel <felicia@drachenkatze.org>
Date:   Sat Nov 30 14:17:24 2019 +0100

    Configurable PSU power-on delay (#16050)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index eac1de60a0..3278e22c14 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -323,20 +323,27 @@
 /**
  * Power Supply Control
  */
 #ifndef PSU_NAME
   #if ENABLED(PSU_CONTROL)
     #if PSU_ACTIVE_HIGH
       #define PSU_NAME "XBox"     // X-Box 360 (203W)
     #else
       #define PSU_NAME "ATX"      // ATX style
     #endif
+    #if DISABLED(AUTO_POWER_CONTROL)
+      #ifndef PSU_POWERUP_DELAY
+        #define PSU_POWERUP_DELAY 100
+      #endif
+    #elif defined(PSU_POWERUP_DELAY)
+      #error "PSU_POWERUP_DELAY has no effect if AUTO_POWER_CONTROL is enabled."
+    #endif
   #else
     #define PSU_NAME "Generic"    // No control
   #endif
 #endif
 
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_CHAMBER == (n))

commit 0fcd1f4a49ea62136419f47b0f06606e40066124
Author: Denis Semenov <54120569+DenisSemenov1970@users.noreply.github.com>
Date:   Sun Nov 24 00:56:07 2019 +0300

    Fix HAS_CLASSIC_E_JERK and related issues (#15968)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4b1ad8a9d0..eac1de60a0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -37,21 +37,21 @@
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
 #define HAS_CLASSIC_JERK (ENABLED(CLASSIC_JERK) || IS_KINEMATIC)
-#define HAS_CLASSIC_E_JERK (HAS_CLASSIC_JERK && DISABLED(LIN_ADVANCE))
+#define HAS_CLASSIC_E_JERK (ENABLED(CLASSIC_JERK) || DISABLED(LIN_ADVANCE))
 
 /**
  * Axis lengths and center
  */
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 
 // Defined only if the sanity-check is bypassed
 #ifndef X_BED_SIZE

commit b904ba0f291cdcb9759464f064f85ba066b778ce
Author: Jason Smith <jason.inet@gmail.com>
Date:   Thu Nov 21 01:26:00 2019 -0800

    Improve Delta probing / calibration (#15887)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index df728ab07a..4b1ad8a9d0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -125,24 +125,26 @@
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
   #undef LEVEL_BED_CORNERS
 #endif
 
 /**
  * SCARA cannot use SLOWDOWN and requires QUICKHOME
+ * Printable radius assumes joints can fully extend
  */
 #if IS_SCARA
   #undef SLOWDOWN
   #define QUICK_HOME
+  #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
 #endif
 
 /**
  * Set the home position based on settings or manual overrides
  */
 #ifdef MANUAL_X_HOME_POS
   #define X_HOME_POS MANUAL_X_HOME_POS
 #elif ENABLED(BED_CENTER_AT_0_0)
   #if ENABLED(DELTA)
     #define X_HOME_POS 0
@@ -1427,20 +1429,21 @@
 #define ABL_PLANAR      EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_3POINT)
 #define ABL_GRID        EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR)
 #define HAS_ABL_NOT_UBL (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL_OR_UBL  (HAS_ABL_NOT_UBL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING    (HAS_ABL_OR_UBL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL   (HAS_ABL_OR_UBL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH        ANY(AUTO_BED_LEVELING_BILINEAR, AUTO_BED_LEVELING_UBL, MESH_BED_LEVELING)
 #define PLANNER_LEVELING      (HAS_LEVELING && DISABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_PROBING_PROCEDURE (HAS_ABL_OR_UBL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #define HAS_POSITION_MODIFIERS (ENABLED(FWRETRACT) || HAS_LEVELING || ENABLED(SKEW_CORRECTION))
+#define NEEDS_THREE_PROBE_POINTS EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT)
 
 #if ENABLED(AUTO_BED_LEVELING_UBL)
   #undef LCD_BED_LEVELING
 #endif
 
 /**
  * Heater, Fan, and Probe interactions
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
@@ -1463,161 +1466,113 @@
  * Only constrain Z on DELTA / SCARA machines
  */
 #if IS_KINEMATIC
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
- * Bed Probing rectangular bounds
- * These can be further constrained in code for Delta and SCARA
+ * Bed Probing bounds
  */
+
 #ifndef MIN_PROBE_EDGE
   #define MIN_PROBE_EDGE 0
 #endif
-#ifndef MIN_PROBE_EDGE_LEFT
-  #define MIN_PROBE_EDGE_LEFT MIN_PROBE_EDGE
-#endif
-#ifndef MIN_PROBE_EDGE_RIGHT
-  #define MIN_PROBE_EDGE_RIGHT MIN_PROBE_EDGE
-#endif
-#ifndef MIN_PROBE_EDGE_FRONT
-  #define MIN_PROBE_EDGE_FRONT MIN_PROBE_EDGE
-#endif
-#ifndef MIN_PROBE_EDGE_BACK
-  #define MIN_PROBE_EDGE_BACK MIN_PROBE_EDGE
+
+#if IS_KINEMATIC
+  #undef MIN_PROBE_EDGE_LEFT
+  #undef MIN_PROBE_EDGE_RIGHT
+  #undef MIN_PROBE_EDGE_FRONT
+  #undef MIN_PROBE_EDGE_BACK
+#else
+  #ifndef MIN_PROBE_EDGE_LEFT
+    #define MIN_PROBE_EDGE_LEFT MIN_PROBE_EDGE
+  #endif
+  #ifndef MIN_PROBE_EDGE_RIGHT
+    #define MIN_PROBE_EDGE_RIGHT MIN_PROBE_EDGE
+  #endif
+  #ifndef MIN_PROBE_EDGE_FRONT
+    #define MIN_PROBE_EDGE_FRONT MIN_PROBE_EDGE
+  #endif
+  #ifndef MIN_PROBE_EDGE_BACK
+    #define MIN_PROBE_EDGE_BACK MIN_PROBE_EDGE
+  #endif
 #endif
 
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
-  #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
-  #ifndef DELTA_CALIBRATION_RADIUS
-    #if HAS_BED_PROBE
-      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(probe_offset.x), ABS(probe_offset.y), ABS(MIN_PROBE_EDGE)))
-    #else
-      #define DELTA_CALIBRATION_RADIUS _PROBE_RADIUS
-    #endif
-  #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
     #define DELTA_TOWER_ANGLE_TRIM { 0, 0, 0 }
   #endif
   #ifndef DELTA_RADIUS_TRIM_TOWER
     #define DELTA_RADIUS_TRIM_TOWER { 0, 0, 0 }
   #endif
   #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
     #define DELTA_DIAGONAL_ROD_TRIM_TOWER { 0, 0, 0 }
   #endif
-
-  // Probing points may be verified at compile time within the radius
-  // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
-  // so that may be added to SanityCheck.h in the future.
-  #define PROBE_X_MIN (X_CENTER - (_PROBE_RADIUS))
-  #define PROBE_Y_MIN (Y_CENTER - (_PROBE_RADIUS))
-  #define PROBE_X_MAX (X_CENTER + _PROBE_RADIUS)
-  #define PROBE_Y_MAX (Y_CENTER + _PROBE_RADIUS)
-
-#elif IS_SCARA
-
-  #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
-  #define _PROBE_RADIUS (SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
-  #define PROBE_X_MIN (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE_LEFT)
-  #define PROBE_Y_MIN (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE_FRONT)
-  #define PROBE_X_MAX (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE_RIGHT))
-  #define PROBE_Y_MAX (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE_BACK))
-
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
-#if HAS_LEVELING
+#if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
-    #if ANY(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL, PROBE_MANUALLY)
-      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
-      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions
-      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
-      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
-    #else
-      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + probe_offset.x))
-      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + probe_offset.y))
-      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + probe_offset.x))
-      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + probe_offset.y))
-    #endif
+    #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
+    #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions
+    #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
+    #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
   #endif
 
   // These may be overridden in Configuration.h if a smaller area is desired
   #ifndef MESH_MIN_X
     #define MESH_MIN_X _MESH_MIN_X
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
-
-#endif // MESH_BED_LEVELING || AUTO_BED_LEVELING_UBL
+#else
+  #undef MESH_MIN_X
+  #undef MESH_MIN_Y
+  #undef MESH_MAX_X
+  #undef MESH_MAX_Y
+#endif
 
 #if (defined(PROBE_PT_1_X) && defined(PROBE_PT_2_X) && defined(PROBE_PT_3_X) && defined(PROBE_PT_1_Y) && defined(PROBE_PT_2_Y) && defined(PROBE_PT_3_Y))
   #define HAS_FIXED_3POINT
 #endif
 
-#if EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT) && IS_KINEMATIC
-    #define HAS_FIXED_3POINT
-    #define SIN0    0.0
-    #define SIN120  0.866025
-    #define SIN240 -0.866025
-    #define COS0    1.0
-    #define COS120 -0.5
-    #define COS240 -0.5
-    #ifndef PROBE_PT_1_X
-      #define PROBE_PT_1_X (X_CENTER + (_PROBE_RADIUS) * COS0)
-    #endif
-    #ifndef PROBE_PT_1_Y
-      #define PROBE_PT_1_Y (Y_CENTER + (_PROBE_RADIUS) * SIN0)
-    #endif
-    #ifndef PROBE_PT_2_X
-      #define PROBE_PT_2_X (X_CENTER + (_PROBE_RADIUS) * COS120)
-    #endif
-    #ifndef PROBE_PT_2_Y
-      #define PROBE_PT_2_Y (Y_CENTER + (_PROBE_RADIUS) * SIN120)
-    #endif
-    #ifndef PROBE_PT_3_X
-      #define PROBE_PT_3_X (X_CENTER + (_PROBE_RADIUS) * COS240)
-    #endif
-    #ifndef PROBE_PT_3_Y
-      #define PROBE_PT_3_Y (Y_CENTER + (_PROBE_RADIUS) * SIN240)
-    #endif
-#endif
 
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100

commit 751cd1f53306cdbdd98e108af144201a6624a14b
Author: Bob <bob808@users.noreply.github.com>
Date:   Thu Nov 21 11:15:10 2019 +0200

    MAX31865 temperature sensor (#15930)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f328775126..df728ab07a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -334,60 +334,69 @@
 #endif
 
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
 
-#if TEMP_SENSOR_0 == -4
-  #define HEATER_0_USES_AD8495
-#elif TEMP_SENSOR_0 == -3
-  #define HEATER_0_USES_MAX6675
-  #define MAX6675_IS_MAX31855
-  #define HEATER_0_MAX6675_TMIN -270
-  #define HEATER_0_MAX6675_TMAX 1800
-#elif TEMP_SENSOR_0 == -2
+#if TEMP_SENSOR_0 == -5 || TEMP_SENSOR_0 == -3 || TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675
-  #define HEATER_0_MAX6675_TMIN 0
-  #define HEATER_0_MAX6675_TMAX 1024
+  #if TEMP_SENSOR_0 == -3
+    #define HEATER_0_MAX6675_TMIN -270
+    #define HEATER_0_MAX6675_TMAX 1800
+  #else
+    #define HEATER_0_MAX6675_TMIN    0
+    #define HEATER_0_MAX6675_TMAX 1024
+  #endif
+  #if TEMP_SENSOR_0 == -5
+    #define MAX6675_IS_MAX31865
+  #elif TEMP_SENSOR_0 == -3
+    #define MAX6675_IS_MAX31855
+  #endif
+#elif TEMP_SENSOR_0 == -4
+  #define HEATER_0_USES_AD8495
 #elif TEMP_SENSOR_0 == -1
   #define HEATER_0_USES_AD595
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTOR_HEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR
   #if TEMP_SENSOR_0 == 1000
     #define HEATER_0_USER_THERMISTOR
   #endif
 #else
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #endif
 
-#if TEMP_SENSOR_1 == -4
-  #define HEATER_1_USES_AD8495
-#elif TEMP_SENSOR_1 == -3
-  #if TEMP_SENSOR_0 == -2
-    #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
-  #endif
+#if TEMP_SENSOR_1 == -5 || TEMP_SENSOR_1 == -3 || TEMP_SENSOR_1 == -2
   #define HEATER_1_USES_MAX6675
-  #define HEATER_1_MAX6675_TMIN -270
-  #define HEATER_1_MAX6675_TMAX 1800
-#elif TEMP_SENSOR_1 == -2
-  #if TEMP_SENSOR_0 == -3
-    #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_0 then TEMP_SENSOR_1 must match."
+  #if TEMP_SENSOR_1 == -3
+    #define HEATER_1_MAX6675_TMIN -270
+    #define HEATER_1_MAX6675_TMAX 1800
+  #else
+    #define HEATER_1_MAX6675_TMIN    0
+    #define HEATER_1_MAX6675_TMAX 1024
+  #endif
+  #if TEMP_SENSOR_1 != TEMP_SENSOR_0
+    #if   TEMP_SENSOR_1 == -5
+      #error "If MAX31865 Thermocouple (-5) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
+    #elif TEMP_SENSOR_1 == -3
+      #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
+    #elif TEMP_SENSOR_1 == -2
+      #error "If MAX6675 Thermocouple (-2) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
+    #endif
   #endif
-  #define HEATER_1_USES_MAX6675
-  #define HEATER_1_MAX6675_TMIN 0
-  #define HEATER_1_MAX6675_TMAX 1024
+#elif TEMP_SENSOR_1 == -4
+  #define HEATER_1_USES_AD8495
 #elif TEMP_SENSOR_1 == -1
   #define HEATER_1_USES_AD595
 #elif TEMP_SENSOR_1 > 0
   #define THERMISTOR_HEATER_1 TEMP_SENSOR_1
   #define HEATER_1_USES_THERMISTOR
   #if TEMP_SENSOR_1 == 1000
     #define HEATER_1_USER_THERMISTOR
   #endif
 #else
   #undef HEATER_1_MINTEMP

commit 3f4636e916f0c2635f83f457fa662b90fc3a8809
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 13 02:53:11 2019 -0600

    "nozzle_to_probe_offset" is obsolete

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0cbb35776e..f328775126 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1360,20 +1360,23 @@
   #ifndef Z_PROBE_OFFSET_RANGE_MAX
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
   #ifndef XY_PROBE_SPEED
     #ifdef HOMING_FEEDRATE_XY
       #define XY_PROBE_SPEED HOMING_FEEDRATE_XY
     #else
       #define XY_PROBE_SPEED 4000
     #endif
   #endif
+  #ifndef NOZZLE_TO_PROBE_OFFSET
+    #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
+  #endif
 #else
   #undef NOZZLE_TO_PROBE_OFFSET
 #endif
 
 /**
  * XYZ Bed Skew Correction
  */
 #if ENABLED(SKEW_CORRECTION)
   #define SKEW_FACTOR_MIN -1
   #define SKEW_FACTOR_MAX 1
@@ -1470,32 +1473,28 @@
 #ifndef MIN_PROBE_EDGE_RIGHT
   #define MIN_PROBE_EDGE_RIGHT MIN_PROBE_EDGE
 #endif
 #ifndef MIN_PROBE_EDGE_FRONT
   #define MIN_PROBE_EDGE_FRONT MIN_PROBE_EDGE
 #endif
 #ifndef MIN_PROBE_EDGE_BACK
   #define MIN_PROBE_EDGE_BACK MIN_PROBE_EDGE
 #endif
 
-#ifndef NOZZLE_TO_PROBE_OFFSET
-  #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
-#endif
-
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
   #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #ifndef DELTA_CALIBRATION_RADIUS
-    #ifdef NOZZLE_TO_PROBE_OFFSET
-      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(nozzle_to_probe_offset.x), ABS(nozzle_to_probe_offset.y), ABS(MIN_PROBE_EDGE)))
+    #if HAS_BED_PROBE
+      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(probe_offset.x), ABS(probe_offset.y), ABS(MIN_PROBE_EDGE)))
     #else
       #define DELTA_CALIBRATION_RADIUS _PROBE_RADIUS
     #endif
   #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
     #define DELTA_TOWER_ANGLE_TRIM { 0, 0, 0 }
   #endif
@@ -1536,30 +1535,30 @@
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
-    #if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
+    #if ANY(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL, PROBE_MANUALLY)
       #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
       #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions
       #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
       #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
-      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + nozzle_to_probe_offset.x))
-      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + nozzle_to_probe_offset.y))
-      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + nozzle_to_probe_offset.x))
-      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + nozzle_to_probe_offset.y))
+      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + probe_offset.x))
+      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + probe_offset.y))
+      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + probe_offset.x))
+      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + probe_offset.y))
     #endif
   #endif
 
   // These may be overridden in Configuration.h if a smaller area is desired
   #ifndef MESH_MIN_X
     #define MESH_MIN_X _MESH_MIN_X
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif

commit b9703fdf3666f14c8a7754e10e9f5517a7ac8e2c
Author: ManuelMcLure <manuel@mclure.org>
Date:   Sun Nov 10 17:04:28 2019 -0800

    Ensure TMC + LIN_ADVANCE pulse length (#15807)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7510e22d5b..0cbb35776e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -571,23 +571,27 @@
 
 #ifndef MINIMUM_STEPPER_PULSE
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_PULSE 30
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_PULSE 3
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_PULSE 2
   #elif HAS_DRIVER(A4988) || HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_PULSE 1
-  #elif HAS_DRIVER(LV8729)
-    #define MINIMUM_STEPPER_PULSE 0
   #elif TRINAMICS
+    #if ENABLED(LIN_ADVANCE) && (HAS_TMC_STANDALONE_E_DRIVER || (HAS_TMC_E_DRIVER && DISABLED(SQUARE_WAVE_STEPPING)))
+      #define MINIMUM_STEPPER_PULSE 1
+    #else
+      #define MINIMUM_STEPPER_PULSE 0
+    #endif
+  #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_PULSE 0
   #else
     #define MINIMUM_STEPPER_PULSE 2
   #endif
 #endif
 
 #ifndef MAXIMUM_STEPPER_RATE
   #if HAS_DRIVER(TB6560)
     #define MAXIMUM_STEPPER_RATE 15000
   #elif HAS_DRIVER(TB6600)

commit 48b7a1e66e9aa96ce2c915843df0ba9e824f783c
Author: LinFor <linfor@gmail.com>
Date:   Mon Nov 11 01:33:56 2019 +0300

    Allow non-zero "fan off" PWM value (#15709)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index cfe67e785a..7510e22d5b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1295,32 +1295,41 @@
 #endif
 
 /**
  * Part Cooling fan multipliexer
  */
 #define HAS_FANMUX PIN_EXISTS(FANMUX0)
 
 /**
  * MIN/MAX fan PWM scaling
  */
+#ifndef FAN_OFF_PWM
+  #define FAN_OFF_PWM 0
+#endif
 #ifndef FAN_MIN_PWM
-  #define FAN_MIN_PWM 0
+  #if FAN_OFF_PWM > 0
+    #define FAN_MIN_PWM (FAN_OFF_PWM + 1)
+  #else
+    #define FAN_MIN_PWM 0
+  #endif
 #endif
 #ifndef FAN_MAX_PWM
   #define FAN_MAX_PWM 255
 #endif
 #if FAN_MIN_PWM < 0 || FAN_MIN_PWM > 255
   #error "FAN_MIN_PWM must be a value from 0 to 255."
 #elif FAN_MAX_PWM < 0 || FAN_MAX_PWM > 255
   #error "FAN_MAX_PWM must be a value from 0 to 255."
 #elif FAN_MIN_PWM > FAN_MAX_PWM
   #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
+#elif FAN_OFF_PWM > FAN_MIN_PWM
+  #error "FAN_OFF_PWM must be less than or equal to FAN_MIN_PWM."
 #endif
 
 /**
  * FAST PWM FAN Settings
  */
 #if ENABLED(FAST_PWM_FAN) && !defined(FAST_PWM_FAN_FREQUENCY)
   #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1)) // Fan frequency default
 #endif
 
 /**

commit 776632c503540c3bd2061b1b0812c091b3a4f6b4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Nov 9 17:59:04 2019 -0600

    Add and apply REPEAT macro (#15829)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index df13f55fc5..cfe67e785a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1010,21 +1010,21 @@
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0 HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5 HAS_ADC_TEST(5)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)
 
-#define HAS_TEMP_HOTEND (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
+#define HAS_TEMP_HOTEND (HOTENDS > 0 && (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675)))
 #define HAS_TEMP_BED HAS_TEMP_ADC_BED
 #define HAS_TEMP_CHAMBER HAS_TEMP_ADC_CHAMBER
 #define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER))
 
 #if ENABLED(JOYSTICK)
   #define HAS_JOY_ADC_X  PIN_EXISTS(JOY_X)
   #define HAS_JOY_ADC_Y  PIN_EXISTS(JOY_Y)
   #define HAS_JOY_ADC_Z  PIN_EXISTS(JOY_Z)
   #define HAS_JOY_ADC_EN PIN_EXISTS(JOY_EN)
 #endif

commit d4f5821cd656c6c4c01d1d43ee791b3dbb0e1ed6
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Oct 28 16:46:59 2019 -0400

    Fix 3-point sanity check (#15696)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f5091aae29..df13f55fc5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1552,22 +1552,22 @@
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
 
 #endif // MESH_BED_LEVELING || AUTO_BED_LEVELING_UBL
 
-#if ALL(PROBE_PT_1_X, PROBE_PT_2_X, PROBE_PT_3_X, PROBE_PT_1_Y, PROBE_PT_2_Y, PROBE_PT_3_Y)
-  #define HAS_FIXED_3POINT;
+#if (defined(PROBE_PT_1_X) && defined(PROBE_PT_2_X) && defined(PROBE_PT_3_X) && defined(PROBE_PT_1_Y) && defined(PROBE_PT_2_Y) && defined(PROBE_PT_3_Y))
+  #define HAS_FIXED_3POINT
 #endif
 
 #if EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT) && IS_KINEMATIC
     #define HAS_FIXED_3POINT
     #define SIN0    0.0
     #define SIN120  0.866025
     #define SIN240 -0.866025
     #define COS0    1.0
     #define COS120 -0.5
     #define COS240 -0.5

commit af214ff121dd977b002c9a9065f84b7ae1a66247
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 22 15:43:37 2019 -0500

    Fix up PSU_CONTROL checks

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a782d45904..f5091aae29 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -326,22 +326,20 @@
     #if PSU_ACTIVE_HIGH
       #define PSU_NAME "XBox"     // X-Box 360 (203W)
     #else
       #define PSU_NAME "ATX"      // ATX style
     #endif
   #else
     #define PSU_NAME "Generic"    // No control
   #endif
 #endif
 
-#define HAS_POWER_SWITCH (ENABLED(PSU_CONTROL) && PIN_EXISTS(PS_ON))
-
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
 
 #if TEMP_SENSOR_0 == -4
   #define HEATER_0_USES_AD8495

commit 832cb7e1ac33663834a69f2d377fbf47451d73d4
Author: Jason Smith <jason.inet@gmail.com>
Date:   Wed Oct 16 11:39:58 2019 -0700

    Z_STEPPER_AUTO_ALIGN ‚Äî To align with Z stepper points (#15195)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5f4744e4a8..a782d45904 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1801,10 +1801,17 @@
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
     #define INIT_SDCARD_ON_BOOT
   #endif
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE
 #endif
+
+#if ENABLED(Z_STEPPER_ALIGN_KNOWN_STEPPER_POSITIONS)
+  #undef Z_STEPPER_ALIGN_AMP
+#endif
+#ifndef Z_STEPPER_ALIGN_AMP
+  #define Z_STEPPER_ALIGN_AMP 1.0
+#endif

commit fe4c69b64abc74bc1ee1eb16d3d3771e3afbf25d
Author: Piotr <peter_k@tut.by>
Date:   Tue Oct 15 21:28:04 2019 +0300

    Poll *all* enabled endstop pins (#15525)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5214ac607c..5f4744e4a8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -818,26 +818,26 @@
     #else
       #define Z3_MIN_ENDSTOP_INVERTING false
     #endif
     #define Z3_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
 // Is an endstop plug used for the Z2 endstop or the bed probe?
 #define IS_Z2_OR_PROBE(A,M) ( \
      (Z_MULTI_ENDSTOPS && Z2_USE_ENDSTOP == _##A##M##_) \
-  || (USES_Z_MIN_PROBE_ENDSTOP && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
+  || (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
 
 // Is an endstop plug used for the Z3 endstop or the bed probe?
 #define IS_Z3_OR_PROBE(A,M) ( \
      (ENABLED(Z_TRIPLE_ENDSTOPS) && Z3_USE_ENDSTOP == _##A##M##_) \
-  || (USES_Z_MIN_PROBE_ENDSTOP && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
+  || (HAS_CUSTOM_PROBE_PIN && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if ENABLED(USE_XMAX_PLUG)
     #define ENDSTOPPULLUP_XMAX
   #endif
   #if ENABLED(USE_YMAX_PLUG)
     #define ENDSTOPPULLUP_YMAX
@@ -998,21 +998,21 @@
 #define HAS_Z_MIN _HAS_STOP(Z,MIN)
 #define HAS_Z_MAX _HAS_STOP(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
-#define HAS_Z_MIN_PROBE_PIN (USES_Z_MIN_PROBE_ENDSTOP && PIN_EXISTS(Z_MIN_PROBE))
+#define HAS_Z_MIN_PROBE_PIN (HAS_CUSTOM_PROBE_PIN && PIN_EXISTS(Z_MIN_PROBE))
 #define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))
 
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0 HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5 HAS_ADC_TEST(5)

commit 0074d63962f54372dc718074481231d7bf7db174
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Oct 15 13:32:44 2019 -0400

    Vendor version override (#14189)
    
    Co-Authored-By: InsanityAutomation <insanityautomation@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index fcc361ad4b..5214ac607c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1761,37 +1761,39 @@
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
-// Get LCD character width/height, which may be overridden by pins, configs, etc.
-#ifndef LCD_WIDTH
-  #if HAS_GRAPHICAL_LCD
-    #define LCD_WIDTH 21
-  #elif ENABLED(ULTIPANEL)
-    #define LCD_WIDTH 20
-  #elif HAS_SPI_LCD
-    #define LCD_WIDTH 16
-  #endif
-#endif
-#ifndef LCD_HEIGHT
-  #if HAS_GRAPHICAL_LCD
-    #define LCD_HEIGHT 5
-  #elif ENABLED(ULTIPANEL)
-    #define LCD_HEIGHT 4
-  #elif HAS_SPI_LCD
-    #define LCD_HEIGHT 2
+#if HAS_SPI_LCD
+  // Get LCD character width/height, which may be overridden by pins, configs, etc.
+  #ifndef LCD_WIDTH
+    #if HAS_GRAPHICAL_LCD
+      #define LCD_WIDTH 21
+    #elif ENABLED(ULTIPANEL)
+      #define LCD_WIDTH 20
+    #else
+      #define LCD_WIDTH 16
+    #endif
+  #endif
+  #ifndef LCD_HEIGHT
+    #if HAS_GRAPHICAL_LCD
+      #define LCD_HEIGHT 5
+    #elif ENABLED(ULTIPANEL)
+      #define LCD_HEIGHT 4
+    #else
+      #define LCD_HEIGHT 2
+    #endif
   #endif
 #endif
 
 #if ENABLED(SDSUPPORT)
   #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE)
     //
     // The external SD card is not used. Hardware SPI is used to access the card.
     // When sharing the SD card with a PC we want the menu options to
     // mount/unmount the card and refresh it. So we disable card detect.
     //

commit 6a865a614620d71521bd3dc032adffe0bf82378c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Oct 9 18:46:10 2019 -0600

    Multi-language support (#15453)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 627fd0be38..fcc361ad4b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1065,28 +1065,23 @@
 // Auto fans
 #define HAS_AUTO_FAN_0 (HOTENDS > 0 && PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN))
 
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
+#define _FANOVERLAP(A,B) (A##_AUTO_FAN_PIN == E##B##_AUTO_FAN_PIN)
 #if HAS_AUTO_FAN
-  #define AUTO_CHAMBER_IS_0 (CHAMBER_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-  #define AUTO_CHAMBER_IS_1 (CHAMBER_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-  #define AUTO_CHAMBER_IS_2 (CHAMBER_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
-  #define AUTO_CHAMBER_IS_3 (CHAMBER_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
-  #define AUTO_CHAMBER_IS_4 (CHAMBER_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
-  #define AUTO_CHAMBER_IS_5 (CHAMBER_AUTO_FAN_PIN == E5_AUTO_FAN_PIN)
-  #define AUTO_CHAMBER_IS_E (AUTO_CHAMBER_IS_0 || AUTO_CHAMBER_IS_1 || AUTO_CHAMBER_IS_2 || AUTO_CHAMBER_IS_3 || AUTO_CHAMBER_IS_4 || AUTO_CHAMBER_IS_5)
+  #define AUTO_CHAMBER_IS_E (_FANOVERLAP(CHAMBER,0) || _FANOVERLAP(CHAMBER,1) || _FANOVERLAP(CHAMBER,2) || _FANOVERLAP(CHAMBER,3) || _FANOVERLAP(CHAMBER,4) || _FANOVERLAP(CHAMBER,5))
 #endif
 
 #if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
   #undef AUTO_POWER_CHAMBER_FAN
 #endif
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN && E4_AUTO_FAN_PIN != FAN1_PIN && E5_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN && E4_AUTO_FAN_PIN != FAN2_PIN && E5_AUTO_FAN_PIN != FAN2_PIN)

commit c0005e939cf9c1d9db16f20e605c3228bc41a758
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Oct 8 19:42:18 2019 -0500

    Enable junction deviation by default (#15481)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 631bba887e..627fd0be38 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -36,21 +36,22 @@
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
-#define HAS_CLASSIC_JERK (IS_KINEMATIC || DISABLED(JUNCTION_DEVIATION))
+#define HAS_CLASSIC_JERK (ENABLED(CLASSIC_JERK) || IS_KINEMATIC)
+#define HAS_CLASSIC_E_JERK (HAS_CLASSIC_JERK && DISABLED(LIN_ADVANCE))
 
 /**
  * Axis lengths and center
  */
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 
 // Defined only if the sanity-check is bypassed
 #ifndef X_BED_SIZE

commit 1df6c7a46c3be610377ee2fe33cef36cad5ef255
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 8 19:27:03 2019 -0500

    Work around a compiler bug
    
    See #15478

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6c1f173f94..631bba887e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -213,25 +213,20 @@
     #define _SAFE_POINT(A) (((GRID_MAX_POINTS_##A) / 2) * (A##_BED_SIZE - 2 * (MESH_INSET)) / (GRID_MAX_POINTS_##A - 1) + MESH_INSET)
   #else
     #define _SAFE_POINT(A) A##_CENTER
   #endif
   #ifndef Z_SAFE_HOMING_X_POINT
     #define Z_SAFE_HOMING_X_POINT _SAFE_POINT(X)
   #endif
   #ifndef Z_SAFE_HOMING_Y_POINT
     #define Z_SAFE_HOMING_Y_POINT _SAFE_POINT(Y)
   #endif
-  #define X_TILT_FULCRUM Z_SAFE_HOMING_X_POINT
-  #define Y_TILT_FULCRUM Z_SAFE_HOMING_Y_POINT
-#else
-  #define X_TILT_FULCRUM X_HOME_POS
-  #define Y_TILT_FULCRUM Y_HOME_POS
 #endif
 
 /**
  * Host keep alive
  */
 #ifndef DEFAULT_KEEPALIVE_INTERVAL
   #define DEFAULT_KEEPALIVE_INTERVAL 2
 #endif
 
 /**

commit 519cc1bc67b8762d94cd47e91bfe8a78a7319342
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 6 22:18:03 2019 -0500

    NUM_AXIS is now obsolete

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ecc1404a82..6c1f173f94 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1060,21 +1060,21 @@
 #define HAS_PID_HEATING EITHER(PIDTEMP, PIDTEMPBED)
 #define HAS_PID_FOR_BOTH BOTH(PIDTEMP, PIDTEMPBED)
 
 // Thermal protection
 #define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
 #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
 #define WATCH_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
 #define WATCH_CHAMBER (HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0)
 
 // Auto fans
-#define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
+#define HAS_AUTO_FAN_0 (HOTENDS > 0 && PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN))
 
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
 #if HAS_AUTO_FAN
   #define AUTO_CHAMBER_IS_0 (CHAMBER_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)

commit a1ad01e4abb096167e66d05b473c7e4c4fe9475e
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sun Oct 6 05:32:50 2019 +0200

    Limit Case Light PWM (#15459)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b05614a2c9..ecc1404a82 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1327,20 +1327,31 @@
   #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
 #endif
 
 /**
  * FAST PWM FAN Settings
  */
 #if ENABLED(FAST_PWM_FAN) && !defined(FAST_PWM_FAN_FREQUENCY)
   #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1)) // Fan frequency default
 #endif
 
+/**
+ * MIN/MAX case light PWM scaling
+ */
+#if HAS_CASE_LIGHT
+  #ifndef CASE_LIGHT_MAX_PWM
+    #define CASE_LIGHT_MAX_PWM 255
+  #elif !WITHIN(CASE_LIGHT_MAX_PWM, 1, 255)
+    #error "CASE_LIGHT_MAX_PWM must be a value from 1 to 255."
+  #endif
+#endif
+
 /**
  * Bed Probe dependencies
  */
 #if HAS_BED_PROBE
   #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif

commit 806d64e1bf5a838a88e8a473bcb2b0f353b90c30
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 30 21:45:00 2019 -0500

    X_SENSORLESS includes AXIS_HAS_STALLGUARD

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8b7e393bd9..b05614a2c9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -970,21 +970,24 @@
 
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS  (AXIS_HAS_STALLGUARD(X)  && defined(X_STALL_SENSITIVITY))
   #define X2_SENSORLESS (AXIS_HAS_STALLGUARD(X2) && defined(X2_STALL_SENSITIVITY))
   #define Y_SENSORLESS  (AXIS_HAS_STALLGUARD(Y)  && defined(Y_STALL_SENSITIVITY))
+  #define Y2_SENSORLESS (AXIS_HAS_STALLGUARD(Y2) && defined(Y2_STALL_SENSITIVITY))
   #define Z_SENSORLESS  (AXIS_HAS_STALLGUARD(Z)  && defined(Z_STALL_SENSITIVITY))
+  #define Z2_SENSORLESS (AXIS_HAS_STALLGUARD(Z2) && defined(Z2_STALL_SENSITIVITY))
+  #define Z3_SENSORLESS (AXIS_HAS_STALLGUARD(Z3) && defined(Z3_STALL_SENSITIVITY))
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
     #define Y_SPI_SENSORLESS Y_SENSORLESS
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
 #endif
 
 #define HAS_E_STEPPER_ENABLE (HAS_E_DRIVER(TMC2660) \
   || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
     && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) \

commit 50e4545255605eb506c20eb107270038b0fe7bdb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 29 04:25:39 2019 -0500

    Add custom types for position (#15204)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d5aae1e0f8..8b7e393bd9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1465,21 +1465,21 @@
   #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
 #endif
 
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
   #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #ifndef DELTA_CALIBRATION_RADIUS
     #ifdef NOZZLE_TO_PROBE_OFFSET
-      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(nozzle_to_probe_offset[X_AXIS]), ABS(nozzle_to_probe_offset[Y_AXIS]), ABS(MIN_PROBE_EDGE)))
+      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(nozzle_to_probe_offset.x), ABS(nozzle_to_probe_offset.y), ABS(MIN_PROBE_EDGE)))
     #else
       #define DELTA_CALIBRATION_RADIUS _PROBE_RADIUS
     #endif
   #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
     #define DELTA_TOWER_ANGLE_TRIM { 0, 0, 0 }
   #endif
@@ -1499,20 +1499,21 @@
   #define PROBE_Y_MAX (Y_CENTER + _PROBE_RADIUS)
 
 #elif IS_SCARA
 
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #define _PROBE_RADIUS (SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define PROBE_X_MIN (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE_LEFT)
   #define PROBE_Y_MIN (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE_FRONT)
   #define PROBE_X_MAX (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE_RIGHT))
   #define PROBE_Y_MAX (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE_BACK))
+
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
 #if HAS_LEVELING
@@ -1525,24 +1526,24 @@
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
     #if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
       #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
       #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions
       #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
       #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
-      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + nozzle_to_probe_offset[X_AXIS]))
-      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + nozzle_to_probe_offset[Y_AXIS]))
-      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + nozzle_to_probe_offset[X_AXIS]))
-      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + nozzle_to_probe_offset[Y_AXIS]))
+      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + nozzle_to_probe_offset.x))
+      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + nozzle_to_probe_offset.y))
+      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + nozzle_to_probe_offset.x))
+      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + nozzle_to_probe_offset.y))
     #endif
   #endif
 
   // These may be overridden in Configuration.h if a smaller area is desired
   #ifndef MESH_MIN_X
     #define MESH_MIN_X _MESH_MIN_X
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif

commit a6b0223eead964237e7920c35bb3c7757b722139
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sat Sep 28 02:19:11 2019 -0400

    Revive and improve DELTA probe bounds, LRFB options (#15372)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 829fb7c5fb..d5aae1e0f8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1441,20 +1441,32 @@
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
  * Bed Probing rectangular bounds
  * These can be further constrained in code for Delta and SCARA
  */
 #ifndef MIN_PROBE_EDGE
   #define MIN_PROBE_EDGE 0
 #endif
+#ifndef MIN_PROBE_EDGE_LEFT
+  #define MIN_PROBE_EDGE_LEFT MIN_PROBE_EDGE
+#endif
+#ifndef MIN_PROBE_EDGE_RIGHT
+  #define MIN_PROBE_EDGE_RIGHT MIN_PROBE_EDGE
+#endif
+#ifndef MIN_PROBE_EDGE_FRONT
+  #define MIN_PROBE_EDGE_FRONT MIN_PROBE_EDGE
+#endif
+#ifndef MIN_PROBE_EDGE_BACK
+  #define MIN_PROBE_EDGE_BACK MIN_PROBE_EDGE
+#endif
 
 #ifndef NOZZLE_TO_PROBE_OFFSET
   #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
 #endif
 
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
   #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
@@ -1483,34 +1495,34 @@
   // so that may be added to SanityCheck.h in the future.
   #define PROBE_X_MIN (X_CENTER - (_PROBE_RADIUS))
   #define PROBE_Y_MIN (Y_CENTER - (_PROBE_RADIUS))
   #define PROBE_X_MAX (X_CENTER + _PROBE_RADIUS)
   #define PROBE_Y_MAX (Y_CENTER + _PROBE_RADIUS)
 
 #elif IS_SCARA
 
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #define _PROBE_RADIUS (SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
-  #define PROBE_X_MIN (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
-  #define PROBE_Y_MIN (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
-  #define PROBE_X_MAX (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
-  #define PROBE_Y_MAX (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
+  #define PROBE_X_MIN (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE_LEFT)
+  #define PROBE_Y_MIN (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE_FRONT)
+  #define PROBE_X_MAX (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE_RIGHT))
+  #define PROBE_Y_MAX (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE_BACK))
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
-#if ANY(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_BILINEAR)
+#if HAS_LEVELING
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
@@ -1536,20 +1548,52 @@
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
 
 #endif // MESH_BED_LEVELING || AUTO_BED_LEVELING_UBL
 
+#if ALL(PROBE_PT_1_X, PROBE_PT_2_X, PROBE_PT_3_X, PROBE_PT_1_Y, PROBE_PT_2_Y, PROBE_PT_3_Y)
+  #define HAS_FIXED_3POINT;
+#endif
+
+#if EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT) && IS_KINEMATIC
+    #define HAS_FIXED_3POINT
+    #define SIN0    0.0
+    #define SIN120  0.866025
+    #define SIN240 -0.866025
+    #define COS0    1.0
+    #define COS120 -0.5
+    #define COS240 -0.5
+    #ifndef PROBE_PT_1_X
+      #define PROBE_PT_1_X (X_CENTER + (_PROBE_RADIUS) * COS0)
+    #endif
+    #ifndef PROBE_PT_1_Y
+      #define PROBE_PT_1_Y (Y_CENTER + (_PROBE_RADIUS) * SIN0)
+    #endif
+    #ifndef PROBE_PT_2_X
+      #define PROBE_PT_2_X (X_CENTER + (_PROBE_RADIUS) * COS120)
+    #endif
+    #ifndef PROBE_PT_2_Y
+      #define PROBE_PT_2_Y (Y_CENTER + (_PROBE_RADIUS) * SIN120)
+    #endif
+    #ifndef PROBE_PT_3_X
+      #define PROBE_PT_3_X (X_CENTER + (_PROBE_RADIUS) * COS240)
+    #endif
+    #ifndef PROBE_PT_3_Y
+      #define PROBE_PT_3_Y (Y_CENTER + (_PROBE_RADIUS) * SIN240)
+    #endif
+#endif
+
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif

commit dc65788511e2baa888e8b8813d96cae5ca3aea81
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 27 04:30:48 2019 -0500

    Shorthand for __VA_ARGS__

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1231bc0b91..829fb7c5fb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -527,27 +527,27 @@
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Z
     #define HOTEND_OFFSET_Z { 0 } // Z offsets for each extruder
   #endif
 #endif
 
 /**
  * ARRAY_BY_EXTRUDERS based on EXTRUDERS
  */
-#define ARRAY_BY_EXTRUDERS(...) ARRAY_N(EXTRUDERS, __VA_ARGS__)
+#define ARRAY_BY_EXTRUDERS(V...) ARRAY_N(EXTRUDERS, V)
 #define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
 
 /**
  * ARRAY_BY_HOTENDS based on HOTENDS
  */
-#define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
+#define ARRAY_BY_HOTENDS(V...) ARRAY_N(HOTENDS, V)
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
 /**
  * Driver Timings
  * NOTE: Driver timing order is longest-to-shortest duration.
  *       Preserve this ordering when adding new drivers.
  */
 
 #define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC2209_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE) || HAS_DRIVER(TMC5130_STANDALONE) || HAS_DRIVER(TMC5160_STANDALONE) || HAS_DRIVER(TMC2160_STANDALONE))
 

commit 661c3cfc99c57d438aa270fc97e8e88f43fec1dc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 25 08:58:27 2019 -0500

    Fix mesh bounds for MBL

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 440ff4e6a9..1231bc0b91 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1441,24 +1441,24 @@
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
  * Bed Probing rectangular bounds
  * These can be further constrained in code for Delta and SCARA
  */
 #ifndef MIN_PROBE_EDGE
   #define MIN_PROBE_EDGE 0
 #endif
+
 #ifndef NOZZLE_TO_PROBE_OFFSET
   #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
 #endif
-constexpr float nozzle_to_probe_offset[XYZ] = NOZZLE_TO_PROBE_OFFSET;
 
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
   #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #ifndef DELTA_CALIBRATION_RADIUS
     #ifdef NOZZLE_TO_PROBE_OFFSET
       #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(nozzle_to_probe_offset[X_AXIS]), ABS(nozzle_to_probe_offset[Y_AXIS]), ABS(MIN_PROBE_EDGE)))
     #else
@@ -1507,21 +1507,21 @@ constexpr float nozzle_to_probe_offset[XYZ] = NOZZLE_TO_PROBE_OFFSET;
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
-    #if ENABLED(AUTO_BED_LEVELING_UBL)
+    #if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
       #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
       #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions
       #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
       #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
       #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + nozzle_to_probe_offset[X_AXIS]))
       #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + nozzle_to_probe_offset[Y_AXIS]))
       #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + nozzle_to_probe_offset[X_AXIS]))
       #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + nozzle_to_probe_offset[Y_AXIS]))
     #endif

commit e9cf46a9a5d0f6aa5521497d25aab5ff4e12399c
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Sep 25 03:43:41 2019 -0400

    M851 XY 3 point followup (incomplete) (#15361)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index fb76914953..440ff4e6a9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -193,20 +193,24 @@
 #endif
 
 /**
  * DELTA should ignore Z_SAFE_HOMING and SLOWDOWN
  */
 #if ENABLED(DELTA)
   #undef Z_SAFE_HOMING
   #undef SLOWDOWN
 #endif
 
+#ifndef MESH_INSET
+  #define MESH_INSET 0
+#endif
+
 /**
  * Safe Homing Options
  */
 #if ENABLED(Z_SAFE_HOMING)
   #if ENABLED(AUTO_BED_LEVELING_UBL)
     // Home close to center so grid points have z heights very close to 0
     #define _SAFE_POINT(A) (((GRID_MAX_POINTS_##A) / 2) * (A##_BED_SIZE - 2 * (MESH_INSET)) / (GRID_MAX_POINTS_##A - 1) + MESH_INSET)
   #else
     #define _SAFE_POINT(A) A##_CENTER
   #endif
@@ -1483,39 +1487,30 @@ constexpr float nozzle_to_probe_offset[XYZ] = NOZZLE_TO_PROBE_OFFSET;
   #define PROBE_Y_MAX (Y_CENTER + _PROBE_RADIUS)
 
 #elif IS_SCARA
 
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #define _PROBE_RADIUS (SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define PROBE_X_MIN (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
   #define PROBE_Y_MIN (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
   #define PROBE_X_MAX (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define PROBE_Y_MAX (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
-
-#else
-
-  // Boundaries for Cartesian probing based on bed limits
-  #define PROBE_X_MIN (_MAX(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + nozzle_to_probe_offset[X_AXIS]))
-  #define PROBE_Y_MIN (_MAX(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + nozzle_to_probe_offset[Y_AXIS]))
-  #define PROBE_X_MAX (_MIN(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + nozzle_to_probe_offset[X_AXIS]))
-  #define PROBE_Y_MAX (_MIN(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + nozzle_to_probe_offset[Y_AXIS]))
-
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
-#if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
+#if ANY(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_BILINEAR)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
@@ -1541,68 +1536,20 @@ constexpr float nozzle_to_probe_offset[XYZ] = NOZZLE_TO_PROBE_OFFSET;
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
 
 #endif // MESH_BED_LEVELING || AUTO_BED_LEVELING_UBL
 
-#if EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT)
-  #if IS_KINEMATIC
-    #define SIN0    0.0
-    #define SIN120  0.866025
-    #define SIN240 -0.866025
-    #define COS0    1.0
-    #define COS120 -0.5
-    #define COS240 -0.5
-    #ifndef PROBE_PT_1_X
-      #define PROBE_PT_1_X (X_CENTER + (_PROBE_RADIUS) * COS0)
-    #endif
-    #ifndef PROBE_PT_1_Y
-      #define PROBE_PT_1_Y (Y_CENTER + (_PROBE_RADIUS) * SIN0)
-    #endif
-    #ifndef PROBE_PT_2_X
-      #define PROBE_PT_2_X (X_CENTER + (_PROBE_RADIUS) * COS120)
-    #endif
-    #ifndef PROBE_PT_2_Y
-      #define PROBE_PT_2_Y (Y_CENTER + (_PROBE_RADIUS) * SIN120)
-    #endif
-    #ifndef PROBE_PT_3_X
-      #define PROBE_PT_3_X (X_CENTER + (_PROBE_RADIUS) * COS240)
-    #endif
-    #ifndef PROBE_PT_3_Y
-      #define PROBE_PT_3_Y (Y_CENTER + (_PROBE_RADIUS) * SIN240)
-    #endif
-  #else
-    #ifndef PROBE_PT_1_X
-      #define PROBE_PT_1_X PROBE_X_MIN
-    #endif
-    #ifndef PROBE_PT_1_Y
-      #define PROBE_PT_1_Y PROBE_Y_MIN
-    #endif
-    #ifndef PROBE_PT_2_X
-      #define PROBE_PT_2_X PROBE_X_MAX
-    #endif
-    #ifndef PROBE_PT_2_Y
-      #define PROBE_PT_2_Y PROBE_Y_MIN
-    #endif
-    #ifndef PROBE_PT_3_X
-      #define PROBE_PT_3_X X_CENTER
-    #endif
-    #ifndef PROBE_PT_3_Y
-      #define PROBE_PT_3_Y PROBE_Y_MAX
-    #endif
-  #endif
-#endif
-
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif

commit df1e51258a8bcc432deed9f5bd60df41a75b2c32
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Sep 24 22:29:21 2019 -0400

    Add M851 X Y probe offsets (#15202)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e9a4f1f382..fb76914953 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1341,26 +1341,21 @@
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
   #ifndef XY_PROBE_SPEED
     #ifdef HOMING_FEEDRATE_XY
       #define XY_PROBE_SPEED HOMING_FEEDRATE_XY
     #else
       #define XY_PROBE_SPEED 4000
     #endif
   #endif
 #else
-  #undef X_PROBE_OFFSET_FROM_EXTRUDER
-  #undef Y_PROBE_OFFSET_FROM_EXTRUDER
-  #undef Z_PROBE_OFFSET_FROM_EXTRUDER
-  #define X_PROBE_OFFSET_FROM_EXTRUDER 0
-  #define Y_PROBE_OFFSET_FROM_EXTRUDER 0
-  #define Z_PROBE_OFFSET_FROM_EXTRUDER 0
+  #undef NOZZLE_TO_PROBE_OFFSET
 #endif
 
 /**
  * XYZ Bed Skew Correction
  */
 #if ENABLED(SKEW_CORRECTION)
   #define SKEW_FACTOR_MIN -1
   #define SKEW_FACTOR_MAX 1
 
   #define _GET_SIDE(a,b,c) (SQRT(2*sq(a)+2*sq(b)-4*sq(c))*0.5)
@@ -1439,119 +1434,108 @@
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
  * Bed Probing rectangular bounds
  * These can be further constrained in code for Delta and SCARA
  */
-
 #ifndef MIN_PROBE_EDGE
   #define MIN_PROBE_EDGE 0
 #endif
+#ifndef NOZZLE_TO_PROBE_OFFSET
+  #define NOZZLE_TO_PROBE_OFFSET { 0, 0, 0 }
+#endif
+constexpr float nozzle_to_probe_offset[XYZ] = NOZZLE_TO_PROBE_OFFSET;
 
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
   #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #ifndef DELTA_CALIBRATION_RADIUS
-    #ifdef X_PROBE_OFFSET_FROM_EXTRUDER
-      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(X_PROBE_OFFSET_FROM_EXTRUDER), ABS(Y_PROBE_OFFSET_FROM_EXTRUDER), ABS(MIN_PROBE_EDGE)))
+    #ifdef NOZZLE_TO_PROBE_OFFSET
+      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(nozzle_to_probe_offset[X_AXIS]), ABS(nozzle_to_probe_offset[Y_AXIS]), ABS(MIN_PROBE_EDGE)))
     #else
       #define DELTA_CALIBRATION_RADIUS _PROBE_RADIUS
     #endif
   #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
-    #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
+    #define DELTA_TOWER_ANGLE_TRIM { 0, 0, 0 }
   #endif
   #ifndef DELTA_RADIUS_TRIM_TOWER
-    #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
+    #define DELTA_RADIUS_TRIM_TOWER { 0, 0, 0 }
   #endif
   #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
-    #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
+    #define DELTA_DIAGONAL_ROD_TRIM_TOWER { 0, 0, 0 }
   #endif
 
   // Probing points may be verified at compile time within the radius
   // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
   // so that may be added to SanityCheck.h in the future.
-  #define _MIN_PROBE_X (X_CENTER - (_PROBE_RADIUS))
-  #define _MIN_PROBE_Y (Y_CENTER - (_PROBE_RADIUS))
-  #define _MAX_PROBE_X (X_CENTER + _PROBE_RADIUS)
-  #define _MAX_PROBE_Y (Y_CENTER + _PROBE_RADIUS)
+  #define PROBE_X_MIN (X_CENTER - (_PROBE_RADIUS))
+  #define PROBE_Y_MIN (Y_CENTER - (_PROBE_RADIUS))
+  #define PROBE_X_MAX (X_CENTER + _PROBE_RADIUS)
+  #define PROBE_Y_MAX (Y_CENTER + _PROBE_RADIUS)
 
 #elif IS_SCARA
 
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #define _PROBE_RADIUS (SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
-  #define _MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
-  #define _MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
-  #define _MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
-  #define _MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
+  #define PROBE_X_MIN (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
+  #define PROBE_Y_MIN (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
+  #define PROBE_X_MAX (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
+  #define PROBE_Y_MAX (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
 
 #else
 
   // Boundaries for Cartesian probing based on bed limits
-  #define _MIN_PROBE_X (_MAX(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MIN_PROBE_Y (_MAX(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MAX_PROBE_X (_MIN(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MAX_PROBE_Y (_MIN(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define PROBE_X_MIN (_MAX(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + nozzle_to_probe_offset[X_AXIS]))
+  #define PROBE_Y_MIN (_MAX(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + nozzle_to_probe_offset[Y_AXIS]))
+  #define PROBE_X_MAX (_MIN(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + nozzle_to_probe_offset[X_AXIS]))
+  #define PROBE_Y_MAX (_MIN(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + nozzle_to_probe_offset[Y_AXIS]))
 
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
-// These may be overridden in Configuration.h if a smaller area is desired
-#ifndef MIN_PROBE_X
-  #define MIN_PROBE_X _MIN_PROBE_X
-#endif
-#ifndef MIN_PROBE_Y
-  #define MIN_PROBE_Y _MIN_PROBE_Y
-#endif
-#ifndef MAX_PROBE_X
-  #define MAX_PROBE_X _MAX_PROBE_X
-#endif
-#ifndef MAX_PROBE_Y
-  #define MAX_PROBE_Y _MAX_PROBE_Y
-#endif
-
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
 #if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
-      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
+      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need NOZZLE_TO_PROBE_OFFSET in the mesh dimensions
       #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
       #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
-      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + nozzle_to_probe_offset[X_AXIS]))
+      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + nozzle_to_probe_offset[Y_AXIS]))
+      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + nozzle_to_probe_offset[X_AXIS]))
+      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + nozzle_to_probe_offset[Y_AXIS]))
     #endif
   #endif
 
   // These may be overridden in Configuration.h if a smaller area is desired
   #ifndef MESH_MIN_X
     #define MESH_MIN_X _MESH_MIN_X
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif
@@ -1585,55 +1569,40 @@
       #define PROBE_PT_2_Y (Y_CENTER + (_PROBE_RADIUS) * SIN120)
     #endif
     #ifndef PROBE_PT_3_X
       #define PROBE_PT_3_X (X_CENTER + (_PROBE_RADIUS) * COS240)
     #endif
     #ifndef PROBE_PT_3_Y
       #define PROBE_PT_3_Y (Y_CENTER + (_PROBE_RADIUS) * SIN240)
     #endif
   #else
     #ifndef PROBE_PT_1_X
-      #define PROBE_PT_1_X MIN_PROBE_X
+      #define PROBE_PT_1_X PROBE_X_MIN
     #endif
     #ifndef PROBE_PT_1_Y
-      #define PROBE_PT_1_Y MIN_PROBE_Y
+      #define PROBE_PT_1_Y PROBE_Y_MIN
     #endif
     #ifndef PROBE_PT_2_X
-      #define PROBE_PT_2_X MAX_PROBE_X
+      #define PROBE_PT_2_X PROBE_X_MAX
     #endif
     #ifndef PROBE_PT_2_Y
-      #define PROBE_PT_2_Y MIN_PROBE_Y
+      #define PROBE_PT_2_Y PROBE_Y_MIN
     #endif
     #ifndef PROBE_PT_3_X
       #define PROBE_PT_3_X X_CENTER
     #endif
     #ifndef PROBE_PT_3_Y
-      #define PROBE_PT_3_Y MAX_PROBE_Y
+      #define PROBE_PT_3_Y PROBE_Y_MAX
     #endif
   #endif
 #endif
 
-#if EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR)
-  #ifndef LEFT_PROBE_BED_POSITION
-    #define LEFT_PROBE_BED_POSITION MIN_PROBE_X
-  #endif
-  #ifndef RIGHT_PROBE_BED_POSITION
-    #define RIGHT_PROBE_BED_POSITION MAX_PROBE_X
-  #endif
-  #ifndef FRONT_PROBE_BED_POSITION
-    #define FRONT_PROBE_BED_POSITION MIN_PROBE_Y
-  #endif
-  #ifndef BACK_PROBE_BED_POSITION
-    #define BACK_PROBE_BED_POSITION MAX_PROBE_Y
-  #endif
-#endif
-
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif

commit 6a312fae8066788466cf129f048be53b59ab17f6
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Thu Sep 19 19:44:07 2019 -0400

    Add before/after dir change delays (#15314)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1d97240943..e9a4f1f382 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -540,40 +540,44 @@
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
 /**
  * Driver Timings
  * NOTE: Driver timing order is longest-to-shortest duration.
  *       Preserve this ordering when adding new drivers.
  */
 
 #define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC2209_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE) || HAS_DRIVER(TMC5130_STANDALONE) || HAS_DRIVER(TMC5160_STANDALONE) || HAS_DRIVER(TMC2160_STANDALONE))
 
-#ifndef MINIMUM_STEPPER_DIR_DELAY
+#ifndef MINIMUM_STEPPER_POST_DIR_DELAY
   #if HAS_DRIVER(TB6560)
-    #define MINIMUM_STEPPER_DIR_DELAY 15000
+    #define MINIMUM_STEPPER_POST_DIR_DELAY 15000
   #elif HAS_DRIVER(TB6600)
-    #define MINIMUM_STEPPER_DIR_DELAY 1500
+    #define MINIMUM_STEPPER_POST_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
-    #define MINIMUM_STEPPER_DIR_DELAY 650
+    #define MINIMUM_STEPPER_POST_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
-    #define MINIMUM_STEPPER_DIR_DELAY 500
+    #define MINIMUM_STEPPER_POST_DIR_DELAY 500
   #elif HAS_DRIVER(A5984)
-    #define MINIMUM_STEPPER_DIR_DELAY 400
+    #define MINIMUM_STEPPER_POST_DIR_DELAY 400
   #elif HAS_DRIVER(A4988)
-    #define MINIMUM_STEPPER_DIR_DELAY 200
+    #define MINIMUM_STEPPER_POST_DIR_DELAY 200
   #elif TRINAMICS
-    #define MINIMUM_STEPPER_DIR_DELAY 20
+    #define MINIMUM_STEPPER_POST_DIR_DELAY 20
   #else
-    #define MINIMUM_STEPPER_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
+    #define MINIMUM_STEPPER_POST_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
   #endif
 #endif
 
+#ifndef MINIMUM_STEPPER_PRE_DIR_DELAY
+  #define MINIMUM_STEPPER_PRE_DIR_DELAY MINIMUM_STEPPER_POST_DIR_DELAY
+#endif
+
 #ifndef MINIMUM_STEPPER_PULSE
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_PULSE 30
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_PULSE 3
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_PULSE 2
   #elif HAS_DRIVER(A4988) || HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_PULSE 1
   #elif HAS_DRIVER(LV8729)

commit ffb418b226fdef98316a07365e869dfbf13d0210
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 14 02:30:29 2019 -0500

    Move some SD comments

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 55a1896092..1d97240943 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1811,27 +1811,27 @@
 #ifndef LCD_HEIGHT
   #if HAS_GRAPHICAL_LCD
     #define LCD_HEIGHT 5
   #elif ENABLED(ULTIPANEL)
     #define LCD_HEIGHT 4
   #elif HAS_SPI_LCD
     #define LCD_HEIGHT 2
   #endif
 #endif
 
-//
-// The external SD card is not used. Hardware SPI is used to access the card.
-// When sharing the SD card with a PC we want the menu options to
-// mount/unmount the card and refresh it. So we disable card detect.
-//
 #if ENABLED(SDSUPPORT)
   #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE)
+    //
+    // The external SD card is not used. Hardware SPI is used to access the card.
+    // When sharing the SD card with a PC we want the menu options to
+    // mount/unmount the card and refresh it. So we disable card detect.
+    //
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
     #define INIT_SDCARD_ON_BOOT
   #endif
 #endif
 
 #if !NUM_SERIAL
   #undef BAUD_RATE_GCODE

commit acd76e860908bcc5987a93644c290a3d2ae76d34
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Sat Sep 14 13:26:14 2019 +0700

    Allow odd mm bed sizes (#15258)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4971a74107..55a1896092 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -59,34 +59,35 @@
 #ifndef Y_BED_SIZE
   #define Y_BED_SIZE Y_MAX_LENGTH
 #endif
 
 // Require 0,0 bed center for Delta and SCARA
 #if IS_KINEMATIC
   #define BED_CENTER_AT_0_0
 #endif
 
 // Define center values for future use
+#define _X_HALF_BED ((X_BED_SIZE) / 2)
+#define _Y_HALF_BED ((Y_BED_SIZE) / 2)
 #if ENABLED(BED_CENTER_AT_0_0)
   #define X_CENTER 0
   #define Y_CENTER 0
 #else
-  #define X_CENTER ((X_BED_SIZE) / 2)
-  #define Y_CENTER ((Y_BED_SIZE) / 2)
+  #define X_CENTER _X_HALF_BED
+  #define Y_CENTER _Y_HALF_BED
 #endif
-#define Z_CENTER ((Z_MIN_POS + Z_MAX_POS) / 2)
 
 // Get the linear boundaries of the bed
-#define X_MIN_BED (X_CENTER - (X_BED_SIZE) / 2)
-#define X_MAX_BED (X_CENTER + (X_BED_SIZE) / 2)
-#define Y_MIN_BED (Y_CENTER - (Y_BED_SIZE) / 2)
-#define Y_MAX_BED (Y_CENTER + (Y_BED_SIZE) / 2)
+#define X_MIN_BED (X_CENTER - _X_HALF_BED)
+#define X_MAX_BED (X_MIN_BED + X_BED_SIZE)
+#define Y_MIN_BED (Y_CENTER - _Y_HALF_BED)
+#define Y_MAX_BED (Y_MIN_BED + Y_BED_SIZE)
 
 /**
  * Dual X Carriage
  */
 #if ENABLED(DUAL_X_CARRIAGE)
   #ifndef X1_MIN_POS
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE

commit 584c86bed1d81548da03681bd3b3c6bd54ae0fe3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 10 02:20:49 2019 -0500

    More "zero extruders" changes (#15213)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3731b14512..4971a74107 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -36,30 +36,20 @@
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
-#if EXTRUDERS == 0
-  #define NO_VOLUMETRICS
-  #undef FWRETRACT
-  #undef LIN_ADVANCE
-  #undef ADVANCED_PAUSE_FEATURE
-  #undef DISABLE_INACTIVE_EXTRUDER
-  #undef EXTRUDER_RUNOUT_PREVENT
-  #undef FILAMENT_LOAD_UNLOAD_GCODES
-#endif
-
 #define HAS_CLASSIC_JERK (IS_KINEMATIC || DISABLED(JUNCTION_DEVIATION))
 
 /**
  * Axis lengths and center
  */
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 
 // Defined only if the sanity-check is bypassed
@@ -1040,20 +1030,24 @@
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_5 (PIN_EXISTS(HEATER_5))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations
 #define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
 #define BED_OR_CHAMBER (HAS_HEATED_BED || HAS_TEMP_CHAMBER)
 #define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || BED_OR_CHAMBER)
 
+#if !HAS_TEMP_SENSOR
+  #undef AUTO_REPORT_TEMPERATURES
+#endif
+
 // PID heating
 #if !HAS_HEATED_BED
   #undef PIDTEMPBED
 #endif
 #define HAS_PID_HEATING EITHER(PIDTEMP, PIDTEMPBED)
 #define HAS_PID_FOR_BOTH BOTH(PIDTEMP, PIDTEMPBED)
 
 // Thermal protection
 #define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
 #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)

commit 8bca3fcf2c4be3ea707860ebb9a1bfa1c03e2d7e
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Sun Sep 8 02:20:18 2019 -0500

    Display chamber with HAS_TEMP_CHAMBER (#15194)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4e8f0ea4ff..3731b14512 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1037,21 +1037,22 @@
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_5 (PIN_EXISTS(HEATER_5))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations
 #define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
-#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_HEATED_BED || HAS_TEMP_CHAMBER)
+#define BED_OR_CHAMBER (HAS_HEATED_BED || HAS_TEMP_CHAMBER)
+#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || BED_OR_CHAMBER)
 
 // PID heating
 #if !HAS_HEATED_BED
   #undef PIDTEMPBED
 #endif
 #define HAS_PID_HEATING EITHER(PIDTEMP, PIDTEMPBED)
 #define HAS_PID_FOR_BOTH BOTH(PIDTEMP, PIDTEMPBED)
 
 // Thermal protection
 #define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))

commit dbee0e9c5424770b9abf8815c0cb8b49de7db77f
Author: Jamie <vector76@users.noreply.github.com>
Date:   Sun Sep 8 00:55:34 2019 -0500

    Analog joystick jogging control (#14648)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4aa411e281..4e8f0ea4ff 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1019,20 +1019,27 @@
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5 HAS_ADC_TEST(5)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)
 
 #define HAS_TEMP_HOTEND (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
 #define HAS_TEMP_BED HAS_TEMP_ADC_BED
 #define HAS_TEMP_CHAMBER HAS_TEMP_ADC_CHAMBER
 #define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER))
 
+#if ENABLED(JOYSTICK)
+  #define HAS_JOY_ADC_X  PIN_EXISTS(JOY_X)
+  #define HAS_JOY_ADC_Y  PIN_EXISTS(JOY_Y)
+  #define HAS_JOY_ADC_Z  PIN_EXISTS(JOY_Z)
+  #define HAS_JOY_ADC_EN PIN_EXISTS(JOY_EN)
+#endif
+
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_5 (PIN_EXISTS(HEATER_5))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations

commit cdd5056aba37e7490d5a10d88b2c6d69131c8df3
Author: thisiskeithb <13375512+thisiskeithb@users.noreply.github.com>
Date:   Mon Sep 2 17:40:58 2019 -0700

    Increase MKS MINI 12864 default contrast (#15139)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d9f4855ecb..4aa411e281 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -260,21 +260,22 @@
 #elif ENABLED(VIKI2)
   #define _LCD_CONTRAST_INIT 140
 #elif ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #define _LCD_CONTRAST_MIN   90
   #define _LCD_CONTRAST_INIT 110
   #define _LCD_CONTRAST_MAX  130
 #elif ENABLED(AZSMZ_12864)
   #define _LCD_CONTRAST_MIN  120
   #define _LCD_CONTRAST_INIT 190
 #elif ENABLED(MKS_MINI_12864)
-  #define _LCD_CONTRAST_INIT 150
+  #define _LCD_CONTRAST_MIN  120
+  #define _LCD_CONTRAST_INIT 195
 #elif ANY(FYSETC_MINI_12864_X_X, FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0, FYSETC_MINI_12864_2_1)
   #define _LCD_CONTRAST_INIT 220
 #elif ENABLED(ULTI_CONTROLLER)
   #define _LCD_CONTRAST_INIT 127
   #define _LCD_CONTRAST_MAX  254
 #elif EITHER(MAKRPANEL, MINIPANEL)
   #define _LCD_CONTRAST_INIT  17
 #endif
 
 #define HAS_LCD_CONTRAST defined(_LCD_CONTRAST_INIT)

commit 0ebaea94be98b7ae27f9e2daf34e59f65436bd26
Author: AlexandrZloy <49792082+AlexandrZloy@users.noreply.github.com>
Date:   Thu Aug 29 12:15:31 2019 +0700

    Add stallGuard threshold for X2 (#15042)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a8f251164c..d9f4855ecb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -967,23 +967,24 @@
   #define TMC_HAS_SPI       (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
   #define HAS_STALLGUARD    (HAS_TMCX1X0 || HAS_DRIVER(TMC2209) || HAS_DRIVER(TMC2660))
   #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_TMC220x)
 
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
-  #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
-  #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
-  #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
+  #define X_SENSORLESS  (AXIS_HAS_STALLGUARD(X)  && defined(X_STALL_SENSITIVITY))
+  #define X2_SENSORLESS (AXIS_HAS_STALLGUARD(X2) && defined(X2_STALL_SENSITIVITY))
+  #define Y_SENSORLESS  (AXIS_HAS_STALLGUARD(Y)  && defined(Y_STALL_SENSITIVITY))
+  #define Z_SENSORLESS  (AXIS_HAS_STALLGUARD(Z)  && defined(Z_STALL_SENSITIVITY))
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
     #define Y_SPI_SENSORLESS Y_SENSORLESS
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
 #endif
 
 #define HAS_E_STEPPER_ENABLE (HAS_E_DRIVER(TMC2660) \
   || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
     && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) \

commit c7825e6719361c669a6f9a837b6e8e76f4babb01
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Aug 25 04:30:02 2019 -0500

    Contrast over 63 assume 255 max
    
    This is closer to the prior behavior.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f20d885690..a8f251164c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -286,21 +286,21 @@
       #define LCD_CONTRAST_MIN 0
     #endif
   #endif
   #ifndef LCD_CONTRAST_INIT
     #define LCD_CONTRAST_INIT _LCD_CONTRAST_INIT
   #endif
   #ifndef LCD_CONTRAST_MAX
     #ifdef _LCD_CONTRAST_MAX
       #define LCD_CONTRAST_MAX _LCD_CONTRAST_MAX
     #elif _LCD_CONTRAST_INIT > 63
-      #define LCD_CONTRAST_MAX _LCD_CONTRAST_INIT
+      #define LCD_CONTRAST_MAX 255
     #else
       #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**

commit 1461ee4d3635a94ceac01da39449e960215a3fe5
Author: Tim Moore <tim@youngmoores.com>
Date:   Sun Aug 25 02:25:07 2019 -0700

    Make LCD_CONTRAST_MAX >= _LCD_CONTRAST_INIT (#15046)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6067b35688..f20d885690 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -285,22 +285,24 @@
     #else
       #define LCD_CONTRAST_MIN 0
     #endif
   #endif
   #ifndef LCD_CONTRAST_INIT
     #define LCD_CONTRAST_INIT _LCD_CONTRAST_INIT
   #endif
   #ifndef LCD_CONTRAST_MAX
     #ifdef _LCD_CONTRAST_MAX
       #define LCD_CONTRAST_MAX _LCD_CONTRAST_MAX
+    #elif _LCD_CONTRAST_INIT > 63
+      #define LCD_CONTRAST_MAX _LCD_CONTRAST_INIT
     #else
-      #define LCD_CONTRAST_MAX 63
+      #define LCD_CONTRAST_MAX 63   // ST7567 6-bits contrast
     #endif
   #endif
   #ifndef DEFAULT_LCD_CONTRAST
     #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override here because this is set in Configuration_adv.h
  */

commit 04a9962cb5e7e14759ae8189d3f082060b5b8961
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Aug 24 00:57:50 2019 -0500

    Fix: Contrast override in pins files
    
    Move contrast handling to `Conditionals_post.h` so pins files can override the LCD defaults.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 662ab80045..6067b35688 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -240,32 +240,71 @@
 #endif
 
 /**
  * Provide a MAX_AUTORETRACT for older configs
  */
 #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
   #define MAX_AUTORETRACT 99
 #endif
 
 /**
- * Default LCD contrast for Graphical LCD displays
+ * LCD Contrast for Graphical Displays
  */
-#define HAS_LCD_CONTRAST defined(LCD_CONTRAST_INIT)
+#if ENABLED(CARTESIO_UI)
+  #define _LCD_CONTRAST_MIN   60
+  #define _LCD_CONTRAST_INIT  90
+  #define _LCD_CONTRAST_MAX  140
+#elif ENABLED(miniVIKI)
+  #define _LCD_CONTRAST_MIN   75
+  #define _LCD_CONTRAST_INIT  95
+  #define _LCD_CONTRAST_MAX  115
+#elif ENABLED(VIKI2)
+  #define _LCD_CONTRAST_INIT 140
+#elif ENABLED(ELB_FULL_GRAPHIC_CONTROLLER)
+  #define _LCD_CONTRAST_MIN   90
+  #define _LCD_CONTRAST_INIT 110
+  #define _LCD_CONTRAST_MAX  130
+#elif ENABLED(AZSMZ_12864)
+  #define _LCD_CONTRAST_MIN  120
+  #define _LCD_CONTRAST_INIT 190
+#elif ENABLED(MKS_MINI_12864)
+  #define _LCD_CONTRAST_INIT 150
+#elif ANY(FYSETC_MINI_12864_X_X, FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0, FYSETC_MINI_12864_2_1)
+  #define _LCD_CONTRAST_INIT 220
+#elif ENABLED(ULTI_CONTROLLER)
+  #define _LCD_CONTRAST_INIT 127
+  #define _LCD_CONTRAST_MAX  254
+#elif EITHER(MAKRPANEL, MINIPANEL)
+  #define _LCD_CONTRAST_INIT  17
+#endif
+
+#define HAS_LCD_CONTRAST defined(_LCD_CONTRAST_INIT)
 #if HAS_LCD_CONTRAST
-  #ifndef DEFAULT_LCD_CONTRAST
-    #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
-  #endif
   #ifndef LCD_CONTRAST_MIN
-    #define LCD_CONTRAST_MIN 0
+    #ifdef _LCD_CONTRAST_MIN
+      #define LCD_CONTRAST_MIN _LCD_CONTRAST_MIN
+    #else
+      #define LCD_CONTRAST_MIN 0
+    #endif
+  #endif
+  #ifndef LCD_CONTRAST_INIT
+    #define LCD_CONTRAST_INIT _LCD_CONTRAST_INIT
   #endif
   #ifndef LCD_CONTRAST_MAX
-    #define LCD_CONTRAST_MAX MAX(63, LCD_CONTRAST_INIT)
+    #ifdef _LCD_CONTRAST_MAX
+      #define LCD_CONTRAST_MAX _LCD_CONTRAST_MAX
+    #else
+      #define LCD_CONTRAST_MAX 63
+    #endif
+  #endif
+  #ifndef DEFAULT_LCD_CONTRAST
+    #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
   #endif
 #endif
 
 /**
  * Override here because this is set in Configuration_adv.h
  */
 #if HAS_LCD_MENU && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #undef SD_DETECT_INVERTED
 #endif
 

commit e604f76703165027a22dc33c7875f4858e9f1c80
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Thu Aug 22 01:56:39 2019 +0200

    Enable contrast via LCD_CONTRAST_INIT (#15006)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 937db9ee6a..662ab80045 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -239,20 +239,36 @@
   #define DEFAULT_KEEPALIVE_INTERVAL 2
 #endif
 
 /**
  * Provide a MAX_AUTORETRACT for older configs
  */
 #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
   #define MAX_AUTORETRACT 99
 #endif
 
+/**
+ * Default LCD contrast for Graphical LCD displays
+ */
+#define HAS_LCD_CONTRAST defined(LCD_CONTRAST_INIT)
+#if HAS_LCD_CONTRAST
+  #ifndef DEFAULT_LCD_CONTRAST
+    #define DEFAULT_LCD_CONTRAST LCD_CONTRAST_INIT
+  #endif
+  #ifndef LCD_CONTRAST_MIN
+    #define LCD_CONTRAST_MIN 0
+  #endif
+  #ifndef LCD_CONTRAST_MAX
+    #define LCD_CONTRAST_MAX MAX(63, LCD_CONTRAST_INIT)
+  #endif
+#endif
+
 /**
  * Override here because this is set in Configuration_adv.h
  */
 #if HAS_LCD_MENU && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #undef SD_DETECT_INVERTED
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */

commit 05995d1fd6c3b85717d428ff5c0c269f7872857b
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Tue Aug 20 09:01:37 2019 +0200

    Unify buzz methods as MarlinUI::buzz (#14803)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f3d850aea1..937db9ee6a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1041,21 +1041,22 @@
 #endif
 
 // Sensors
 #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
 
 // User Interface
 #define HAS_HOME        (PIN_EXISTS(HOME))
 #define HAS_KILL        (PIN_EXISTS(KILL))
 #define HAS_SUICIDE     (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH  (PIN_EXISTS(PHOTOGRAPH))
-#define HAS_BUZZER      (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER) || ENABLED(PCA9632_BUZZER))
+#define HAS_BUZZER      (PIN_EXISTS(BEEPER) || EITHER(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
+#define USE_BEEPER      (HAS_BUZZER && DISABLED(LCD_USE_I2C_BUZZER, PCA9632_BUZZER))
 #define HAS_CASE_LIGHT  (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
 #define HAS_STEPPER_RESET     (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS         (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
 
 #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
 
 #if HAS_MICROSTEPS
@@ -1563,21 +1564,21 @@
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif
-#else
+#elif HAS_BUZZER
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 5000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
 #endif
 
 /**
  * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.

commit 4575978a1fc83853579ec85ebd1549fdeae0b03b
Author: Tim Moore <tim@youngmoores.com>
Date:   Fri Aug 16 16:42:24 2019 -0700

    Fix auto power for chamber fan (#14922)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 38e2ff59aa..f3d850aea1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -994,21 +994,35 @@
 #define WATCH_CHAMBER (HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN))
+
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
+#if HAS_AUTO_FAN
+  #define AUTO_CHAMBER_IS_0 (CHAMBER_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+  #define AUTO_CHAMBER_IS_1 (CHAMBER_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+  #define AUTO_CHAMBER_IS_2 (CHAMBER_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
+  #define AUTO_CHAMBER_IS_3 (CHAMBER_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
+  #define AUTO_CHAMBER_IS_4 (CHAMBER_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
+  #define AUTO_CHAMBER_IS_5 (CHAMBER_AUTO_FAN_PIN == E5_AUTO_FAN_PIN)
+  #define AUTO_CHAMBER_IS_E (AUTO_CHAMBER_IS_0 || AUTO_CHAMBER_IS_1 || AUTO_CHAMBER_IS_2 || AUTO_CHAMBER_IS_3 || AUTO_CHAMBER_IS_4 || AUTO_CHAMBER_IS_5)
+#endif
+
+#if !HAS_AUTO_CHAMBER_FAN || AUTO_CHAMBER_IS_E
+  #undef AUTO_POWER_CHAMBER_FAN
+#endif
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN && E4_AUTO_FAN_PIN != FAN1_PIN && E5_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN && E4_AUTO_FAN_PIN != FAN2_PIN && E5_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0) && NUM_SERVOS > 0)
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1) && NUM_SERVOS > 1)

commit 179d6c4ed115e67ae826b5738e0009c6be2d58ea
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Aug 14 20:05:15 2019 -0600

    Add STARTUP_SCRIPT option. M17 parity with M18. (#14953)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c6a2efbd59..38e2ff59aa 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -920,20 +920,25 @@
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
   #if ENABLED(SPI_ENDSTOPS)
     #define X_SPI_SENSORLESS X_SENSORLESS
     #define Y_SPI_SENSORLESS Y_SENSORLESS
     #define Z_SPI_SENSORLESS Z_SENSORLESS
   #endif
 #endif
 
+#define HAS_E_STEPPER_ENABLE (HAS_E_DRIVER(TMC2660) \
+  || ( E0_ENABLE_PIN != X_ENABLE_PIN && E1_ENABLE_PIN != X_ENABLE_PIN   \
+    && E0_ENABLE_PIN != Y_ENABLE_PIN && E1_ENABLE_PIN != Y_ENABLE_PIN ) \
+)
+
 // Endstops and bed probe
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
 #define HAS_X_MIN _HAS_STOP(X,MIN)
 #define HAS_X_MAX _HAS_STOP(X,MAX)
 #define HAS_Y_MIN _HAS_STOP(Y,MIN)
 #define HAS_Y_MAX _HAS_STOP(Y,MAX)
 #define HAS_Z_MIN _HAS_STOP(Z,MIN)
 #define HAS_Z_MAX _HAS_STOP(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))

commit d4974ea719ceba2d76a678f77942d0b92e8fecb8
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Mon Aug 5 06:22:58 2019 +0300

    TMC SPI Endstops and Improved Sensorless Homing (#14044)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b9216ddd0e..c6a2efbd59 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -913,20 +913,25 @@
 
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
+  #if ENABLED(SPI_ENDSTOPS)
+    #define X_SPI_SENSORLESS X_SENSORLESS
+    #define Y_SPI_SENSORLESS Y_SENSORLESS
+    #define Z_SPI_SENSORLESS Z_SENSORLESS
+  #endif
 #endif
 
 // Endstops and bed probe
 #define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
 #define HAS_X_MIN _HAS_STOP(X,MIN)
 #define HAS_X_MAX _HAS_STOP(X,MAX)
 #define HAS_Y_MIN _HAS_STOP(Y,MIN)
 #define HAS_Y_MAX _HAS_STOP(Y,MAX)
 #define HAS_Z_MIN _HAS_STOP(Z,MIN)
 #define HAS_Z_MAX _HAS_STOP(Z,MAX)

commit 940c59d9dad5af071052f5c0cd1ec98c48c2778c
Author: Tim Moore <tim@youngmoores.com>
Date:   Fri Aug 2 04:19:45 2019 -0700

    Overlord i2c LCD with LEDs and buzzer (#14801)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2543410a90..b9216ddd0e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1017,21 +1017,21 @@
 #endif
 
 // Sensors
 #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
 
 // User Interface
 #define HAS_HOME        (PIN_EXISTS(HOME))
 #define HAS_KILL        (PIN_EXISTS(KILL))
 #define HAS_SUICIDE     (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH  (PIN_EXISTS(PHOTOGRAPH))
-#define HAS_BUZZER      (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
+#define HAS_BUZZER      (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER) || ENABLED(PCA9632_BUZZER))
 #define HAS_CASE_LIGHT  (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
 #define HAS_STEPPER_RESET     (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS         (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
 
 #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
 
 #if HAS_MICROSTEPS

commit e44fccf3d25c6adae4347cf54b654b66a797f7b2
Author: rafaljot <rafal@jastrzebscy.org>
Date:   Tue Jul 30 08:30:00 2019 +0100

    Add support for M575 (#14757)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8efd38bcf4..2543410a90 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1738,10 +1738,14 @@
 //
 #if ENABLED(SDSUPPORT)
   #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE)
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
     #define INIT_SDCARD_ON_BOOT
   #endif
 #endif
+
+#if !NUM_SERIAL
+  #undef BAUD_RATE_GCODE
+#endif

commit 1579091c206c14bbf7c88186fae07ccddc001a36
Author: mikeshub <mikesbaker@gmail.com>
Date:   Sun Jul 28 15:50:25 2019 -0500

    PID loop improvements (#14746)
    
    * Fix macro evaluation in `temperature.cpp`
    * Improve bed PID, PID debug output
    * Add min PID power define

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7728d1c5b3..8efd38bcf4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1146,24 +1146,31 @@
       #endif // HOTENDS > 4
     #endif // HOTENDS > 3
   #endif // HOTENDS > 2
 #endif // HOTENDS > 1
 #if ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
 #else
   #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
 #endif
 
+#ifndef MIN_POWER
+  #define MIN_POWER 0
+#endif
+
 /**
  * Heated bed requires settings
  */
 #if HAS_HEATED_BED
+  #ifndef MIN_BED_POWER
+    #define MIN_BED_POWER 0
+  #endif
   #ifndef MAX_BED_POWER
     #define MAX_BED_POWER 255
   #endif
   #ifndef HEATER_BED_INVERTING
     #define HEATER_BED_INVERTING false
   #endif
   #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ HEATER_BED_INVERTING)
 #endif
 
 /**

commit d4be970c8bbae9c1e2a9ae23f02219d4518804b0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jul 14 09:29:53 2019 -0500

    Update DOGLCD conditions

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4399f7b184..7728d1c5b3 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1544,21 +1544,21 @@
     #define LCD_FEEDBACK_FREQUENCY_HZ 5000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
 #endif
 
 /**
  * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
  */
-#if ENABLED(DOGLCD)
+#if HAS_GRAPHICAL_LCD
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI
     #define DOGLCD_MOSI MOSI_PIN
   #endif
 #endif
 
 /**
  * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES

commit f1eaed7e98f7a91c84a91815954ca7862aafd5b6
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Fri Jul 12 05:30:15 2019 -0400

    Only init servo pins used for servos (#14589)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index afc22d260a..4399f7b184 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -993,25 +993,25 @@
 #define HAS_AUTO_CHAMBER_FAN (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN))
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN && E4_AUTO_FAN_PIN != FAN1_PIN && E5_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN && E4_AUTO_FAN_PIN != FAN2_PIN && E5_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
-#define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
-#define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
-#define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
-#define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
-#define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
+#define HAS_SERVO_0 (PIN_EXISTS(SERVO0) && NUM_SERVOS > 0)
+#define HAS_SERVO_1 (PIN_EXISTS(SERVO1) && NUM_SERVOS > 1)
+#define HAS_SERVO_2 (PIN_EXISTS(SERVO2) && NUM_SERVOS > 2)
+#define HAS_SERVO_3 (PIN_EXISTS(SERVO3) && NUM_SERVOS > 3)
+#define HAS_SERVOS  (NUM_SERVOS > 0)
 
 #if HAS_SERVOS && !defined(Z_PROBE_SERVO_NR)
   #define Z_PROBE_SERVO_NR -1
 #endif
 
 #define HAS_SERVO_ANGLES (EITHER(SWITCHING_EXTRUDER, SWITCHING_NOZZLE) || (HAS_Z_SERVO_PROBE && defined(Z_PROBE_SERVO_NR)))
 
 #if !HAS_SERVO_ANGLES || ENABLED(BLTOUCH)
   #undef EDITABLE_SERVO_ANGLES
 #endif

commit ab99a807938b7fd8c5eafe2018b23ff876e765e6
Author: gmarsh <garymarsh23@gmail.com>
Date:   Tue Jul 9 02:30:08 2019 -0300

    GMARSH X6 board support (#14550)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9619003184..afc22d260a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1653,22 +1653,23 @@
   #endif
 #endif
 
 // Nozzle park for Delta
 #if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
+// on boards where SD card and LCD display share the same SPI bus
 // because of a bug in the shared SPI implementation. (See #8122)
-#if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
+#if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER) && (SCK_PIN == LCD_PINS_D4)
   #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
                                     // directory levels still glitches the screen,
                                     // but the following LCD update cleans it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK
   #undef SDSORT_CACHE_NAMES
   #define SDSORT_LIMIT       64
   #define SDSORT_USES_RAM    true
   #define SDSORT_USES_STACK  false

commit 1a349c75229604c113c83d29c2ff06f61153b44a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jul 8 22:59:51 2019 -0500

    Add HAS_TMC220x

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8d6da94e8e..9619003184 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -902,21 +902,21 @@
 #define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
   #define HAS_TMCX1X0       (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
   #define TMC_HAS_SPI       (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
   #define HAS_STALLGUARD    (HAS_TMCX1X0 || HAS_DRIVER(TMC2209) || HAS_DRIVER(TMC2660))
-  #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_DRIVER(TMC2208) || HAS_DRIVER(TMC2209))
+  #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_TMC220x)
 
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))

commit 750a16ad385dca893d482cb51d8af2ac3f8a1da1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 5 18:01:21 2019 -0500

    Fix MIN/MAX function collision with macros

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5fc46fa0d5..8d6da94e8e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1353,21 +1353,21 @@
   #define MIN_PROBE_EDGE 0
 #endif
 
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
   #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #ifndef DELTA_CALIBRATION_RADIUS
     #ifdef X_PROBE_OFFSET_FROM_EXTRUDER
-      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - MAX(ABS(X_PROBE_OFFSET_FROM_EXTRUDER), ABS(Y_PROBE_OFFSET_FROM_EXTRUDER), ABS(MIN_PROBE_EDGE)))
+      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - _MAX(ABS(X_PROBE_OFFSET_FROM_EXTRUDER), ABS(Y_PROBE_OFFSET_FROM_EXTRUDER), ABS(MIN_PROBE_EDGE)))
     #else
       #define DELTA_CALIBRATION_RADIUS _PROBE_RADIUS
     #endif
   #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
     #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
   #endif
@@ -1391,24 +1391,24 @@
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #define _PROBE_RADIUS (SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define _MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
   #define _MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
   #define _MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define _MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
 
 #else
 
   // Boundaries for Cartesian probing based on bed limits
-  #define _MIN_PROBE_X (MAX(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MIN_PROBE_Y (MAX(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MAX_PROBE_X (MIN(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MAX_PROBE_Y (MIN(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MIN_PROBE_X (_MAX(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MIN_PROBE_Y (_MAX(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MAX_PROBE_X (_MIN(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MAX_PROBE_Y (_MIN(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
 
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 // These may be overridden in Configuration.h if a smaller area is desired
 #ifndef MIN_PROBE_X
   #define MIN_PROBE_X _MIN_PROBE_X
@@ -1431,29 +1431,29 @@
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
     #if ENABLED(AUTO_BED_LEVELING_UBL)
-      #define _MESH_MIN_X (MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
-      #define _MESH_MIN_Y (MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
-      #define _MESH_MAX_X (MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
-      #define _MESH_MAX_Y (MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
+      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
+      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
+      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
+      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
-      #define _MESH_MIN_X (MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MIN_Y (MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MAX_X (MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MAX_Y (MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MIN_X (_MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MIN_Y (_MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MAX_X (_MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MAX_Y (_MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
     #endif
   #endif
 
   // These may be overridden in Configuration.h if a smaller area is desired
   #ifndef MESH_MIN_X
     #define MESH_MIN_X _MESH_MIN_X
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif

commit eb6dec03bd8d5f6a99b594c933f0934c348f5034
Author: Tim Moore <tim@youngmoores.com>
Date:   Thu Jul 4 23:58:34 2019 -0700

    Simplify power supply naming logic (#14488)
    
    Co-Authored-By: Tim Moore <tim.moore@lightbend.com>
    Co-Authored-By: AnHardt <github@kitelab.de>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index af1a95138d..5fc46fa0d5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -262,33 +262,36 @@
 #ifndef DISABLE_INACTIVE_Y
   #define DISABLE_INACTIVE_Y DISABLE_Y
 #endif
 #ifndef DISABLE_INACTIVE_Z
   #define DISABLE_INACTIVE_Z DISABLE_Z
 #endif
 #ifndef DISABLE_INACTIVE_E
   #define DISABLE_INACTIVE_E DISABLE_E
 #endif
 
-// Power Signal Control Definitions
-// By default use ATX definition
-#ifndef POWER_SUPPLY
-  #define POWER_SUPPLY 1
-#endif
-#if (POWER_SUPPLY == 1)     // 1 = ATX
-  #define PS_ON_AWAKE  LOW
-  #define PS_ON_ASLEEP HIGH
-#elif (POWER_SUPPLY == 2)   // 2 = X-Box 360 203W
-  #define PS_ON_AWAKE  HIGH
-  #define PS_ON_ASLEEP LOW
-#endif
-#define HAS_POWER_SWITCH (POWER_SUPPLY > 0 && PIN_EXISTS(PS_ON))
+/**
+ * Power Supply Control
+ */
+#ifndef PSU_NAME
+  #if ENABLED(PSU_CONTROL)
+    #if PSU_ACTIVE_HIGH
+      #define PSU_NAME "XBox"     // X-Box 360 (203W)
+    #else
+      #define PSU_NAME "ATX"      // ATX style
+    #endif
+  #else
+    #define PSU_NAME "Generic"    // No control
+  #endif
+#endif
+
+#define HAS_POWER_SWITCH (ENABLED(PSU_CONTROL) && PIN_EXISTS(PS_ON))
 
 /**
  * Temp Sensor defines
  */
 
 #define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_CHAMBER == (n))
 
 #define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
 
 #if TEMP_SENSOR_0 == -4

commit de462f2b8a72716bf6e6558e63a1002658da7907
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jul 3 19:11:30 2019 -0500

    Revert "Sort out settings.load with SD EEPROM emulation (#14458)"
    
    This reverts commit 108d0df56532e4eb30467d36b0fb2aa5bf4f50be.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 36b4fd7e0c..af1a95138d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1727,14 +1727,10 @@
 //
 #if ENABLED(SDSUPPORT)
   #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE)
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
     #define INIT_SDCARD_ON_BOOT
   #endif
 #endif
-
-#if ENABLED(EEPROM_SETTINGS) && NONE(FLASH_EEPROM_EMULATION, SPI_EEPROM, I2C_EEPROM)
-  #define SD_EEPROM_EMULATION
-#endif

commit ce2b4bc20c20f5a85a7d3ac5942b1134695a9944
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jul 2 20:06:43 2019 -0500

    Conditionals tweak

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f6dac7ce49..36b4fd7e0c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -913,27 +913,27 @@
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
 #endif
 
 // Endstops and bed probe
-#define HAS_STOP_TEST(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
-#define HAS_X_MIN HAS_STOP_TEST(X,MIN)
-#define HAS_X_MAX HAS_STOP_TEST(X,MAX)
-#define HAS_Y_MIN HAS_STOP_TEST(Y,MIN)
-#define HAS_Y_MAX HAS_STOP_TEST(Y,MAX)
-#define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
-#define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)
+#define _HAS_STOP(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
+#define HAS_X_MIN _HAS_STOP(X,MIN)
+#define HAS_X_MAX _HAS_STOP(X,MAX)
+#define HAS_Y_MIN _HAS_STOP(Y,MIN)
+#define HAS_Y_MAX _HAS_STOP(Y,MAX)
+#define HAS_Z_MIN _HAS_STOP(Z,MIN)
+#define HAS_Z_MAX _HAS_STOP(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
 #define HAS_Z_MIN_PROBE_PIN (USES_Z_MIN_PROBE_ENDSTOP && PIN_EXISTS(Z_MIN_PROBE))
 #define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))

commit 108d0df56532e4eb30467d36b0fb2aa5bf4f50be
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Mon Jul 1 16:10:17 2019 +0200

    Sort out settings.load with SD EEPROM emulation (#14458)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1a17addbd2..f6dac7ce49 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1727,10 +1727,14 @@
 //
 #if ENABLED(SDSUPPORT)
   #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE)
     #undef SD_DETECT_PIN
     #define SHARED_SD_CARD
   #endif
   #if DISABLED(SHARED_SD_CARD)
     #define INIT_SDCARD_ON_BOOT
   #endif
 #endif
+
+#if ENABLED(EEPROM_SETTINGS) && NONE(FLASH_EEPROM_EMULATION, SPI_EEPROM, I2C_EEPROM)
+  #define SD_EEPROM_EMULATION
+#endif

commit 4d5a1984e216098b49cf1c590272b45d4177e86f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jun 28 17:03:43 2019 -0500

    Simplified fan handling code

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 169ceb9f45..1a17addbd2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1186,31 +1186,23 @@
 #if HAS_FAN2
   #define FAN_COUNT 3
 #elif HAS_FAN1
   #define FAN_COUNT 2
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else
   #define FAN_COUNT 0
 #endif
 
-#if HAS_FAN0
-  #define WRITE_FAN(v) WRITE(FAN_PIN, (v) ^ FAN_INVERTING)
-  #define WRITE_FAN0(v) WRITE_FAN(v)
+#if FAN_COUNT > 0
+  #define WRITE_FAN(n, v) WRITE(FAN##n##_PIN, (v) ^ FAN_INVERTING)
 #endif
-#if HAS_FAN1
-  #define WRITE_FAN1(v) WRITE(FAN1_PIN, (v) ^ FAN_INVERTING)
-#endif
-#if HAS_FAN2
-  #define WRITE_FAN2(v) WRITE(FAN2_PIN, (v) ^ FAN_INVERTING)
-#endif
-#define WRITE_FAN_N(n, v) WRITE_FAN##n(v)
 
 /**
  * Part Cooling fan multipliexer
  */
 #define HAS_FANMUX PIN_EXISTS(FANMUX0)
 
 /**
  * MIN/MAX fan PWM scaling
  */
 #ifndef FAN_MIN_PWM

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 06f51920f5..169ceb9f45 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit d7d80418aedad1c89e27fcba6aab9aa48187b5cc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 27 23:06:49 2019 -0500

    Singleton for cutting tools (#14429)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 83d081d932..06f51920f5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1685,21 +1685,21 @@
     #define SDSORT_GCODE       false
   #endif
   #ifndef SDSORT_DYNAMIC_RAM
     #define SDSORT_DYNAMIC_RAM false
   #endif
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif
 #endif
 
-// needs to be here so that we catch the above changes to our defines
+// Defined here to catch the above defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)

commit 064177154ce7912293efa67c7e0dfcaa4a7301ec
Author: Andy Shaw <andy-git@gloomy-place.com>
Date:   Wed Jun 26 09:55:57 2019 +0100

    Update SD card connection / sharing options (#14325)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d5d0e89994..83d081d932 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1720,10 +1720,25 @@
 #endif
 #ifndef LCD_HEIGHT
   #if HAS_GRAPHICAL_LCD
     #define LCD_HEIGHT 5
   #elif ENABLED(ULTIPANEL)
     #define LCD_HEIGHT 4
   #elif HAS_SPI_LCD
     #define LCD_HEIGHT 2
   #endif
 #endif
+
+//
+// The external SD card is not used. Hardware SPI is used to access the card.
+// When sharing the SD card with a PC we want the menu options to
+// mount/unmount the card and refresh it. So we disable card detect.
+//
+#if ENABLED(SDSUPPORT)
+  #if SD_CONNECTION_IS(ONBOARD) && DISABLED(NO_SD_HOST_DRIVE)
+    #undef SD_DETECT_PIN
+    #define SHARED_SD_CARD
+  #endif
+  #if DISABLED(SHARED_SD_CARD)
+    #define INIT_SDCARD_ON_BOOT
+  #endif
+#endif

commit 4df4c47994f248428ae30218800803e467327b6e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 20 15:47:50 2019 -0500

    Add TMC2209 support (#14249)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f046201c16..d5d0e89994 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -486,21 +486,21 @@
  */
 #define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
 /**
  * Driver Timings
  * NOTE: Driver timing order is longest-to-shortest duration.
  *       Preserve this ordering when adding new drivers.
  */
 
-#define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE) || HAS_DRIVER(TMC5130_STANDALONE) || HAS_DRIVER(TMC5160_STANDALONE) || HAS_DRIVER(TMC2160_STANDALONE))
+#define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC2209_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE) || HAS_DRIVER(TMC5130_STANDALONE) || HAS_DRIVER(TMC5160_STANDALONE) || HAS_DRIVER(TMC2160_STANDALONE))
 
 #ifndef MINIMUM_STEPPER_DIR_DELAY
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_DIR_DELAY 15000
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_DIR_DELAY 500
@@ -898,22 +898,22 @@
 #define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5)))
 #define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
   #define HAS_TMCX1X0       (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
   #define TMC_HAS_SPI       (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
-  #define HAS_STALLGUARD    (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
-  #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_DRIVER(TMC2208))
+  #define HAS_STALLGUARD    (HAS_TMCX1X0 || HAS_DRIVER(TMC2209) || HAS_DRIVER(TMC2660))
+  #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_DRIVER(TMC2208) || HAS_DRIVER(TMC2209))
 
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))

commit bf64dd4db6e28f3ab9cddabbcdec3a56abda03de
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Jun 18 08:02:18 2019 -0400

    Improve G34, M422 (Z alignment) (#14142)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a1f762193b..f046201c16 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1693,22 +1693,20 @@
 #endif
 
 // needs to be here so that we catch the above changes to our defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
-#define USE_EXECUTE_COMMANDS_IMMEDIATE (ANY(G29_RETRY_AND_RECOVER, GCODE_MACROS, POWER_LOSS_RECOVERY) || HAS_DRIVER(L6470))
-
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
 // Get LCD character width/height, which may be overridden by pins, configs, etc.
 #ifndef LCD_WIDTH

commit 90121047d971ea7bb85718dd1ec0c32d6cef54f7
Author: doggyfan <49303635+doggyfan@users.noreply.github.com>
Date:   Sun May 26 05:37:08 2019 +0100

    Fix thermal protection with user thermistor (#14130)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 47b86dae92..a1f762193b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -297,25 +297,26 @@
   #define HEATER_0_USES_MAX6675
   #define MAX6675_IS_MAX31855
   #define HEATER_0_MAX6675_TMIN -270
   #define HEATER_0_MAX6675_TMAX 1800
 #elif TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675
   #define HEATER_0_MAX6675_TMIN 0
   #define HEATER_0_MAX6675_TMAX 1024
 #elif TEMP_SENSOR_0 == -1
   #define HEATER_0_USES_AD595
-#elif TEMP_SENSOR_0 == 1000
-  #define HEATER_0_USER_THERMISTOR
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTOR_HEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR
+  #if TEMP_SENSOR_0 == 1000
+    #define HEATER_0_USER_THERMISTOR
+  #endif
 #else
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_1 == -4
   #define HEATER_1_USES_AD8495
 #elif TEMP_SENSOR_1 == -3
   #if TEMP_SENSOR_0 == -2
     #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
@@ -325,133 +326,140 @@
   #define HEATER_1_MAX6675_TMAX 1800
 #elif TEMP_SENSOR_1 == -2
   #if TEMP_SENSOR_0 == -3
     #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_0 then TEMP_SENSOR_1 must match."
   #endif
   #define HEATER_1_USES_MAX6675
   #define HEATER_1_MAX6675_TMIN 0
   #define HEATER_1_MAX6675_TMAX 1024
 #elif TEMP_SENSOR_1 == -1
   #define HEATER_1_USES_AD595
-#elif TEMP_SENSOR_1 == 1000
-  #define HEATER_1_USER_THERMISTOR
 #elif TEMP_SENSOR_1 > 0
   #define THERMISTOR_HEATER_1 TEMP_SENSOR_1
   #define HEATER_1_USES_THERMISTOR
+  #if TEMP_SENSOR_1 == 1000
+    #define HEATER_1_USER_THERMISTOR
+  #endif
 #else
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_2 == -4
   #define HEATER_2_USES_AD8495
 #elif TEMP_SENSOR_2 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
   #define HEATER_2_USES_AD595
-#elif TEMP_SENSOR_2 == 1000
-  #define HEATER_2_USER_THERMISTOR
 #elif TEMP_SENSOR_2 > 0
   #define THERMISTOR_HEATER_2 TEMP_SENSOR_2
   #define HEATER_2_USES_THERMISTOR
+  #if TEMP_SENSOR_2 == 1000
+    #define HEATER_2_USER_THERMISTOR
+  #endif
 #else
   #undef HEATER_2_MINTEMP
   #undef HEATER_2_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_3 == -4
   #define HEATER_3_USES_AD8495
 #elif TEMP_SENSOR_3 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -1
   #define HEATER_3_USES_AD595
-#elif TEMP_SENSOR_3 == 1000
-  #define HEATER_3_USER_THERMISTOR
 #elif TEMP_SENSOR_3 > 0
   #define THERMISTOR_HEATER_3 TEMP_SENSOR_3
   #define HEATER_3_USES_THERMISTOR
+  #if TEMP_SENSOR_3 == 1000
+    #define HEATER_3_USER_THERMISTOR
+  #endif
 #else
   #undef HEATER_3_MINTEMP
   #undef HEATER_3_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_4 == -4
   #define HEATER_4_USES_AD8495
 #elif TEMP_SENSOR_4 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -1
   #define HEATER_4_USES_AD595
-#elif TEMP_SENSOR_4 == 1000
-  #define HEATER_4_USER_THERMISTOR
 #elif TEMP_SENSOR_4 > 0
   #define THERMISTOR_HEATER_4 TEMP_SENSOR_4
   #define HEATER_4_USES_THERMISTOR
+  #if TEMP_SENSOR_4 == 1000
+    #define HEATER_4_USER_THERMISTOR
+  #endif
 #else
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_5 == -4
   #define HEATER_5_USES_AD8495
 #elif TEMP_SENSOR_5 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -1
   #define HEATER_5_USES_AD595
-#elif TEMP_SENSOR_5 == 1000
-  #define HEATER_5_USER_THERMISTOR
 #elif TEMP_SENSOR_5 > 0
   #define THERMISTOR_HEATER_5 TEMP_SENSOR_5
   #define HEATER_5_USES_THERMISTOR
+  #if TEMP_SENSOR_5 == 1000
+    #define HEATER_5_USER_THERMISTOR
+  #endif
 #else
   #undef HEATER_5_MINTEMP
   #undef HEATER_5_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_BED == -4
   #define HEATER_BED_USES_AD8495
 #elif TEMP_SENSOR_BED == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
   #define HEATER_BED_USES_AD595
-#elif TEMP_SENSOR_BED == 1000
-  #define BED_USER_THERMISTOR
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
   #define HEATER_BED_USES_THERMISTOR
+  #if TEMP_SENSOR_BED == 1000
+    #define HEATER_BED_USER_THERMISTOR
+  #endif
 #else
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_CHAMBER == -4
   #define HEATER_CHAMBER_USES_AD8495
 #elif TEMP_SENSOR_CHAMBER == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -1
   #define HEATER_CHAMBER_USES_AD595
-#elif TEMP_SENSOR_CHAMBER == 1000
-  #define CHAMBER_USER_THERMISTOR
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define HEATER_CHAMBER_USES_THERMISTOR
+  #if TEMP_SENSOR_CHAMBER == 1000
+    #define HEATER_CHAMBER_USER_THERMISTOR
+  #endif
 #else
   #undef CHAMBER_MINTEMP
   #undef CHAMBER_MAXTEMP
 #endif
 
 #define HOTEND_USES_THERMISTOR ANY(HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, HEATER_3_USES_THERMISTOR, HEATER_4_USES_THERMISTOR)
 
 /**
  * Default hotend offsets, if not defined
  */

commit 940ff8e7c8a5919681dcd6d6e87668381010151a
Author: chai-md <48555545+chai-md@users.noreply.github.com>
Date:   Sun May 12 09:02:19 2019 +0900

    Improve LV8729 stepping (#13776)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 11f1440b1a..47b86dae92 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -507,36 +507,38 @@
   #endif
 #endif
 
 #ifndef MINIMUM_STEPPER_PULSE
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_PULSE 30
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_PULSE 3
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_PULSE 2
-  #elif HAS_DRIVER(A4988) || HAS_DRIVER(LV8729) || HAS_DRIVER(A5984)
+  #elif HAS_DRIVER(A4988) || HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_PULSE 1
+  #elif HAS_DRIVER(LV8729)
+    #define MINIMUM_STEPPER_PULSE 0
   #elif TRINAMICS
     #define MINIMUM_STEPPER_PULSE 0
   #else
     #define MINIMUM_STEPPER_PULSE 2
   #endif
 #endif
 
 #ifndef MAXIMUM_STEPPER_RATE
   #if HAS_DRIVER(TB6560)
     #define MAXIMUM_STEPPER_RATE 15000
-  #elif HAS_DRIVER(LV8729)
-    #define MAXIMUM_STEPPER_RATE 130000
   #elif HAS_DRIVER(TB6600)
     #define MAXIMUM_STEPPER_RATE 150000
+  #elif HAS_DRIVER(LV8729)
+    #define MAXIMUM_STEPPER_RATE 200000
   #elif HAS_DRIVER(DRV8825)
     #define MAXIMUM_STEPPER_RATE 250000
   #elif TRINAMICS
     #define MAXIMUM_STEPPER_RATE 400000
   #elif HAS_DRIVER(A4988)
     #define MAXIMUM_STEPPER_RATE 500000
   #else
     #define MAXIMUM_STEPPER_RATE 250000
   #endif
 #endif

commit 6811e2921bcd272e7487e4f379b42a5a403a07c2
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue May 7 22:25:54 2019 -0400

    BLTouch v3 / 3DTouch Interoperability & performance (#13814)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 75f21a5606..11f1440b1a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1571,20 +1571,23 @@
     #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
   #endif
   #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
     #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
   #else
     #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
   #endif
   #ifndef Z_CLEARANCE_MULTI_PROBE
     #define Z_CLEARANCE_MULTI_PROBE Z_CLEARANCE_BETWEEN_PROBES
   #endif
+  #if ENABLED(BLTOUCH) && !defined(BLTOUCH_DELAY)
+    #define BLTOUCH_DELAY 500
+  #endif
 #endif
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
 #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)

commit 23a8707ef1969be3db28251ccee2287e1ea7b9e4
Author: doggyfan <49303635+doggyfan@users.noreply.github.com>
Date:   Tue May 7 00:51:06 2019 +0100

    Configurable Thermistor (#13888)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 63798a4322..75f21a5606 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -279,158 +279,182 @@
   #define PS_ON_ASLEEP HIGH
 #elif (POWER_SUPPLY == 2)   // 2 = X-Box 360 203W
   #define PS_ON_AWAKE  HIGH
   #define PS_ON_ASLEEP LOW
 #endif
 #define HAS_POWER_SWITCH (POWER_SUPPLY > 0 && PIN_EXISTS(PS_ON))
 
 /**
  * Temp Sensor defines
  */
+
+#define ANY_TEMP_SENSOR_IS(n) (TEMP_SENSOR_0 == (n) || TEMP_SENSOR_1 == (n) || TEMP_SENSOR_2 == (n) || TEMP_SENSOR_3 == (n) || TEMP_SENSOR_4 == (n) || TEMP_SENSOR_5 == (n) || TEMP_SENSOR_BED == (n) || TEMP_SENSOR_CHAMBER == (n))
+
+#define HAS_USER_THERMISTORS ANY_TEMP_SENSOR_IS(1000)
+
 #if TEMP_SENSOR_0 == -4
   #define HEATER_0_USES_AD8495
 #elif TEMP_SENSOR_0 == -3
   #define HEATER_0_USES_MAX6675
   #define MAX6675_IS_MAX31855
   #define HEATER_0_MAX6675_TMIN -270
   #define HEATER_0_MAX6675_TMAX 1800
 #elif TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675
   #define HEATER_0_MAX6675_TMIN 0
   #define HEATER_0_MAX6675_TMAX 1024
 #elif TEMP_SENSOR_0 == -1
   #define HEATER_0_USES_AD595
-#elif TEMP_SENSOR_0 == 0
-  #undef HEATER_0_MINTEMP
-  #undef HEATER_0_MAXTEMP
+#elif TEMP_SENSOR_0 == 1000
+  #define HEATER_0_USER_THERMISTOR
 #elif TEMP_SENSOR_0 > 0
-  #define THERMISTORHEATER_0 TEMP_SENSOR_0
+  #define THERMISTOR_HEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR
+#else
+  #undef HEATER_0_MINTEMP
+  #undef HEATER_0_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_1 == -4
   #define HEATER_1_USES_AD8495
 #elif TEMP_SENSOR_1 == -3
   #if TEMP_SENSOR_0 == -2
     #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
   #endif
   #define HEATER_1_USES_MAX6675
   #define HEATER_1_MAX6675_TMIN -270
   #define HEATER_1_MAX6675_TMAX 1800
 #elif TEMP_SENSOR_1 == -2
   #if TEMP_SENSOR_0 == -3
     #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_0 then TEMP_SENSOR_1 must match."
   #endif
   #define HEATER_1_USES_MAX6675
   #define HEATER_1_MAX6675_TMIN 0
   #define HEATER_1_MAX6675_TMAX 1024
 #elif TEMP_SENSOR_1 == -1
   #define HEATER_1_USES_AD595
-#elif TEMP_SENSOR_1 == 0
-  #undef HEATER_1_MINTEMP
-  #undef HEATER_1_MAXTEMP
+#elif TEMP_SENSOR_1 == 1000
+  #define HEATER_1_USER_THERMISTOR
 #elif TEMP_SENSOR_1 > 0
-  #define THERMISTORHEATER_1 TEMP_SENSOR_1
+  #define THERMISTOR_HEATER_1 TEMP_SENSOR_1
   #define HEATER_1_USES_THERMISTOR
+#else
+  #undef HEATER_1_MINTEMP
+  #undef HEATER_1_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_2 == -4
   #define HEATER_2_USES_AD8495
 #elif TEMP_SENSOR_2 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
   #define HEATER_2_USES_AD595
-#elif TEMP_SENSOR_2 == 0
-  #undef HEATER_2_MINTEMP
-  #undef HEATER_2_MAXTEMP
+#elif TEMP_SENSOR_2 == 1000
+  #define HEATER_2_USER_THERMISTOR
 #elif TEMP_SENSOR_2 > 0
-  #define THERMISTORHEATER_2 TEMP_SENSOR_2
+  #define THERMISTOR_HEATER_2 TEMP_SENSOR_2
   #define HEATER_2_USES_THERMISTOR
+#else
+  #undef HEATER_2_MINTEMP
+  #undef HEATER_2_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_3 == -4
   #define HEATER_3_USES_AD8495
 #elif TEMP_SENSOR_3 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -1
   #define HEATER_3_USES_AD595
-#elif TEMP_SENSOR_3 == 0
-  #undef HEATER_3_MINTEMP
-  #undef HEATER_3_MAXTEMP
+#elif TEMP_SENSOR_3 == 1000
+  #define HEATER_3_USER_THERMISTOR
 #elif TEMP_SENSOR_3 > 0
-  #define THERMISTORHEATER_3 TEMP_SENSOR_3
+  #define THERMISTOR_HEATER_3 TEMP_SENSOR_3
   #define HEATER_3_USES_THERMISTOR
+#else
+  #undef HEATER_3_MINTEMP
+  #undef HEATER_3_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_4 == -4
   #define HEATER_4_USES_AD8495
 #elif TEMP_SENSOR_4 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -1
   #define HEATER_4_USES_AD595
-#elif TEMP_SENSOR_4 == 0
-  #undef HEATER_4_MINTEMP
-  #undef HEATER_4_MAXTEMP
+#elif TEMP_SENSOR_4 == 1000
+  #define HEATER_4_USER_THERMISTOR
 #elif TEMP_SENSOR_4 > 0
-  #define THERMISTORHEATER_4 TEMP_SENSOR_4
+  #define THERMISTOR_HEATER_4 TEMP_SENSOR_4
   #define HEATER_4_USES_THERMISTOR
+#else
+  #undef HEATER_4_MINTEMP
+  #undef HEATER_4_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_5 == -4
   #define HEATER_5_USES_AD8495
 #elif TEMP_SENSOR_5 == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_5."
 #elif TEMP_SENSOR_5 == -1
   #define HEATER_5_USES_AD595
-#elif TEMP_SENSOR_5 == 0
-  #undef HEATER_5_MINTEMP
-  #undef HEATER_5_MAXTEMP
+#elif TEMP_SENSOR_5 == 1000
+  #define HEATER_5_USER_THERMISTOR
 #elif TEMP_SENSOR_5 > 0
-  #define THERMISTORHEATER_5 TEMP_SENSOR_5
+  #define THERMISTOR_HEATER_5 TEMP_SENSOR_5
   #define HEATER_5_USES_THERMISTOR
+#else
+  #undef HEATER_5_MINTEMP
+  #undef HEATER_5_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_BED == -4
   #define HEATER_BED_USES_AD8495
 #elif TEMP_SENSOR_BED == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
   #define HEATER_BED_USES_AD595
-#elif TEMP_SENSOR_BED == 0
-  #undef BED_MINTEMP
-  #undef BED_MAXTEMP
+#elif TEMP_SENSOR_BED == 1000
+  #define BED_USER_THERMISTOR
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
   #define HEATER_BED_USES_THERMISTOR
+#else
+  #undef BED_MINTEMP
+  #undef BED_MAXTEMP
 #endif
 
 #if TEMP_SENSOR_CHAMBER == -4
   #define HEATER_CHAMBER_USES_AD8495
 #elif TEMP_SENSOR_CHAMBER == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -1
   #define HEATER_CHAMBER_USES_AD595
+#elif TEMP_SENSOR_CHAMBER == 1000
+  #define CHAMBER_USER_THERMISTOR
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define HEATER_CHAMBER_USES_THERMISTOR
+#else
+  #undef CHAMBER_MINTEMP
+  #undef CHAMBER_MAXTEMP
 #endif
 
 #define HOTEND_USES_THERMISTOR ANY(HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, HEATER_3_USES_THERMISTOR, HEATER_4_USES_THERMISTOR)
 
 /**
  * Default hotend offsets, if not defined
  */
 #if HAS_HOTEND_OFFSET
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder

commit e2a77ed8813ebe33b75479bd43b9d1308da48b12
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sun May 5 05:51:47 2019 +0200

    Bring chamber temp to completion (#13837)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a4789f7d97..63798a4322 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -946,21 +946,21 @@
 #define WATCH_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
 #define WATCH_CHAMBER (HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
-#define HAS_AUTO_CHAMBER_FAN (PIN_EXISTS(CHAMBER_AUTO_FAN))
+#define HAS_AUTO_CHAMBER_FAN (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_AUTO_FAN))
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN && E4_AUTO_FAN_PIN != FAN1_PIN && E5_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN && E4_AUTO_FAN_PIN != FAN2_PIN && E5_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))

commit 84273557f9231c445ee30ee89dbcc66bc9c10e59
Author: Stephan <stephan.veigl@gmail.com>
Date:   Fri Apr 12 22:38:10 2019 +0200

    Move and update heated chamber settings (#13671)
    
    Co-Authored-By: the-real-orca <stephan.veigl@gmail.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b1e53c608a..a4789f7d97 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -911,21 +911,21 @@
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5 HAS_ADC_TEST(5)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)
 
 #define HAS_TEMP_HOTEND (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
 #define HAS_TEMP_BED HAS_TEMP_ADC_BED
 #define HAS_TEMP_CHAMBER HAS_TEMP_ADC_CHAMBER
-#define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_HEATER))
+#define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(HEATER_CHAMBER))
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_5 (PIN_EXISTS(HEATER_5))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 

commit 492883859e04f02d2c40bae131f9c83d0fac3557
Author: ManuelMcLure <manuel@mclure.org>
Date:   Wed Apr 10 19:57:57 2019 -0700

    Don't protect unused CS pins (#13647)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4db5da7afd..b1e53c608a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -866,23 +866,20 @@
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
   #define HAS_TMCX1X0       (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
   #define TMC_HAS_SPI       (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
   #define HAS_STALLGUARD    (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
   #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_DRIVER(TMC2208))
-  #define AXIS_HAS_SPI(ST)         (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2660))
-  #define AXIS_HAS_STALLGUARD(ST)  (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2660) || AXIS_DRIVER_TYPE(ST, TMC5130) || AXIS_DRIVER_TYPE(ST, TMC5160))
-  #define AXIS_HAS_STEALTHCHOP(ST) (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2208) || AXIS_DRIVER_TYPE(ST, TMC5130) || AXIS_DRIVER_TYPE(ST, TMC5160))
 
   #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
   #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))

commit 9abe9aff56d44d42c9dc52679cc9f17592cd0bd4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 8 13:44:35 2019 -0500

    Confirm before starting SD print (#13616)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d82f238097..4db5da7afd 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1672,21 +1672,21 @@
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
 // Get LCD character width/height, which may be overridden by pins, configs, etc.
 #ifndef LCD_WIDTH
   #if HAS_GRAPHICAL_LCD
-    #define LCD_WIDTH 22
+    #define LCD_WIDTH 21
   #elif ENABLED(ULTIPANEL)
     #define LCD_WIDTH 20
   #elif HAS_SPI_LCD
     #define LCD_WIDTH 16
   #endif
 #endif
 #ifndef LCD_HEIGHT
   #if HAS_GRAPHICAL_LCD
     #define LCD_HEIGHT 5
   #elif ENABLED(ULTIPANEL)

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 204c141d87..d82f238097 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -99,39 +99,39 @@
     #define X1_MIN_POS X_MIN_POS
   #endif
   #ifndef X1_MAX_POS
     #define X1_MAX_POS X_BED_SIZE
   #endif
 #endif
 
 /**
  * CoreXY, CoreXZ, and CoreYZ - and their reverse
  */
-#define CORE_IS_XY (ENABLED(COREXY) || ENABLED(COREYX))
-#define CORE_IS_XZ (ENABLED(COREXZ) || ENABLED(COREZX))
-#define CORE_IS_YZ (ENABLED(COREYZ) || ENABLED(COREZY))
+#define CORE_IS_XY EITHER(COREXY, COREYX)
+#define CORE_IS_XZ EITHER(COREXZ, COREZX)
+#define CORE_IS_YZ EITHER(COREYZ, COREZY)
 #define IS_CORE (CORE_IS_XY || CORE_IS_XZ || CORE_IS_YZ)
 #if IS_CORE
   #if CORE_IS_XY
     #define CORE_AXIS_1 A_AXIS
     #define CORE_AXIS_2 B_AXIS
     #define NORMAL_AXIS Z_AXIS
   #elif CORE_IS_XZ
     #define CORE_AXIS_1 A_AXIS
     #define NORMAL_AXIS Y_AXIS
     #define CORE_AXIS_2 C_AXIS
   #elif CORE_IS_YZ
     #define NORMAL_AXIS X_AXIS
     #define CORE_AXIS_1 B_AXIS
     #define CORE_AXIS_2 C_AXIS
   #endif
-  #if ENABLED(COREYX) || ENABLED(COREZX) || ENABLED(COREZY)
+  #if ANY(COREYX, COREZX, COREZY)
     #define CORESIGN(n) (-(n))
   #else
     #define CORESIGN(n) (n)
   #endif
 #endif
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
@@ -419,21 +419,21 @@
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -1
   #define HEATER_CHAMBER_USES_AD595
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define HEATER_CHAMBER_USES_THERMISTOR
 #endif
 
-#define HOTEND_USES_THERMISTOR (ENABLED(HEATER_0_USES_THERMISTOR) || ENABLED(HEATER_1_USES_THERMISTOR) || ENABLED(HEATER_2_USES_THERMISTOR) || ENABLED(HEATER_3_USES_THERMISTOR) || ENABLED(HEATER_4_USES_THERMISTOR))
+#define HOTEND_USES_THERMISTOR ANY(HEATER_0_USES_THERMISTOR, HEATER_1_USES_THERMISTOR, HEATER_2_USES_THERMISTOR, HEATER_3_USES_THERMISTOR, HEATER_4_USES_THERMISTOR)
 
 /**
  * Default hotend offsets, if not defined
  */
 #if HAS_HOTEND_OFFSET
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
@@ -870,22 +870,22 @@
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
   #define HAS_TMCX1X0       (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
   #define TMC_HAS_SPI       (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
   #define HAS_STALLGUARD    (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
   #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_DRIVER(TMC2208))
   #define AXIS_HAS_SPI(ST)         (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2660))
   #define AXIS_HAS_STALLGUARD(ST)  (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2660) || AXIS_DRIVER_TYPE(ST, TMC5130) || AXIS_DRIVER_TYPE(ST, TMC5160))
   #define AXIS_HAS_STEALTHCHOP(ST) (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2208) || AXIS_DRIVER_TYPE(ST, TMC5130) || AXIS_DRIVER_TYPE(ST, TMC5160))
 
-  #define STEALTHCHOP_ENABLED (ENABLED(STEALTHCHOP_XY) || ENABLED(STEALTHCHOP_Z) || ENABLED(STEALTHCHOP_E))
-  #define USE_SENSORLESS (ENABLED(SENSORLESS_HOMING) || ENABLED(SENSORLESS_PROBING))
+  #define STEALTHCHOP_ENABLED ANY(STEALTHCHOP_XY, STEALTHCHOP_Z, STEALTHCHOP_E)
+  #define USE_SENSORLESS EITHER(SENSORLESS_HOMING, SENSORLESS_PROBING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
 #endif
 
 // Endstops and bed probe
@@ -933,22 +933,22 @@
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations
 #define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
 #define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_HEATED_BED || HAS_TEMP_CHAMBER)
 
 // PID heating
 #if !HAS_HEATED_BED
   #undef PIDTEMPBED
 #endif
-#define HAS_PID_HEATING (ENABLED(PIDTEMP) || ENABLED(PIDTEMPBED))
-#define HAS_PID_FOR_BOTH (ENABLED(PIDTEMP) && ENABLED(PIDTEMPBED))
+#define HAS_PID_HEATING EITHER(PIDTEMP, PIDTEMPBED)
+#define HAS_PID_FOR_BOTH BOTH(PIDTEMP, PIDTEMPBED)
 
 // Thermal protection
 #define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
 #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
 #define WATCH_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
 #define WATCH_CHAMBER (HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
@@ -969,41 +969,41 @@
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
 #define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
 #define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
 #define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
 
 #if HAS_SERVOS && !defined(Z_PROBE_SERVO_NR)
   #define Z_PROBE_SERVO_NR -1
 #endif
 
-#define HAS_SERVO_ANGLES (ENABLED(SWITCHING_EXTRUDER) || ENABLED(SWITCHING_NOZZLE) || (HAS_Z_SERVO_PROBE && defined(Z_PROBE_SERVO_NR)))
+#define HAS_SERVO_ANGLES (EITHER(SWITCHING_EXTRUDER, SWITCHING_NOZZLE) || (HAS_Z_SERVO_PROBE && defined(Z_PROBE_SERVO_NR)))
 
-#if !HAS_SERVO_ANGLES
+#if !HAS_SERVO_ANGLES || ENABLED(BLTOUCH)
   #undef EDITABLE_SERVO_ANGLES
 #endif
 
 // Sensors
 #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
 
 // User Interface
-#define HAS_HOME (PIN_EXISTS(HOME))
-#define HAS_KILL (PIN_EXISTS(KILL))
-#define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
-#define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
-#define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
-#define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
+#define HAS_HOME        (PIN_EXISTS(HOME))
+#define HAS_KILL        (PIN_EXISTS(KILL))
+#define HAS_SUICIDE     (PIN_EXISTS(SUICIDE))
+#define HAS_PHOTOGRAPH  (PIN_EXISTS(PHOTOGRAPH))
+#define HAS_BUZZER      (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
+#define HAS_CASE_LIGHT  (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
-#define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
-#define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
-#define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_X) || PIN_EXISTS(MOTOR_CURRENT_PWM_Y) || PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
+#define HAS_STEPPER_RESET     (PIN_EXISTS(STEPPER_RESET))
+#define HAS_DIGIPOTSS         (PIN_EXISTS(DIGIPOTSS))
+#define HAS_MOTOR_CURRENT_PWM ANY_PIN(MOTOR_CURRENT_PWM_X, MOTOR_CURRENT_PWM_Y, MOTOR_CURRENT_PWM_XY, MOTOR_CURRENT_PWM_Z, MOTOR_CURRENT_PWM_E)
 
 #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)
@@ -1048,21 +1048,21 @@
   #define HAS_MICROSTEP32 defined(MICROSTEP32)
   #define HAS_MICROSTEP64 defined(MICROSTEP64)
   #define HAS_MICROSTEP128 defined(MICROSTEP128)
 
 #endif // HAS_MICROSTEPS
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 
-#define HAS_AUTO_REPORTING (ENABLED(AUTO_REPORT_TEMPERATURES) || ENABLED(AUTO_REPORT_SD_STATUS))
+#define HAS_AUTO_REPORTING EITHER(AUTO_REPORT_TEMPERATURES, AUTO_REPORT_SD_STATUS)
 
 /**
  * This setting is also used by M109 when trying to calculate
  * a ballpark safe margin to prevent wait-forever situation.
  */
 #ifndef EXTRUDE_MINTEMP
   #define EXTRUDE_MINTEMP 170
 #endif
 
 /**
@@ -1265,47 +1265,47 @@
       #define YZ_SKEW_FACTOR _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
     #else
       #define YZ_SKEW_FACTOR 0.0
     #endif
   #endif
 #endif // SKEW_CORRECTION
 
 /**
  * Set granular options based on the specific type of leveling
  */
-#define UBL_SEGMENTED   (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
-#define ABL_PLANAR      (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
-#define ABL_GRID        (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
+#define UBL_SEGMENTED   BOTH(AUTO_BED_LEVELING_UBL, DELTA)
+#define ABL_PLANAR      EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_3POINT)
+#define ABL_GRID        EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR)
 #define HAS_ABL_NOT_UBL (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL_OR_UBL  (HAS_ABL_NOT_UBL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING    (HAS_ABL_OR_UBL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL   (HAS_ABL_OR_UBL && DISABLED(PROBE_MANUALLY))
-#define HAS_MESH        (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
+#define HAS_MESH        ANY(AUTO_BED_LEVELING_BILINEAR, AUTO_BED_LEVELING_UBL, MESH_BED_LEVELING)
 #define PLANNER_LEVELING      (HAS_LEVELING && DISABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_PROBING_PROCEDURE (HAS_ABL_OR_UBL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #define HAS_POSITION_MODIFIERS (ENABLED(FWRETRACT) || HAS_LEVELING || ENABLED(SKEW_CORRECTION))
 
 #if ENABLED(AUTO_BED_LEVELING_UBL)
   #undef LCD_BED_LEVELING
 #endif
 
 /**
  * Heater, Fan, and Probe interactions
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
   #undef ADAPTIVE_FAN_SLOWING
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
 
-#define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
-#define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
+#define QUIET_PROBING (HAS_BED_PROBE && (EITHER(PROBING_HEATERS_OFF, PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
+#define HEATER_IDLE_HANDLER EITHER(ADVANCED_PAUSE_FEATURE, PROBING_HEATERS_OFF)
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
   #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
 #endif
 
 #if EXTRUDERS > 1 && !defined(TOOLCHANGE_FIL_EXTRA_PRIME)
   #define TOOLCHANGE_FIL_EXTRA_PRIME 0
 #endif
 
 /**
@@ -1393,21 +1393,21 @@
 #ifndef MAX_PROBE_X
   #define MAX_PROBE_X _MAX_PROBE_X
 #endif
 #ifndef MAX_PROBE_Y
   #define MAX_PROBE_Y _MAX_PROBE_Y
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
-#if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
+#if EITHER(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
@@ -1433,21 +1433,21 @@
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
 
 #endif // MESH_BED_LEVELING || AUTO_BED_LEVELING_UBL
 
-#if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(AUTO_BED_LEVELING_3POINT)
+#if EITHER(AUTO_BED_LEVELING_UBL, AUTO_BED_LEVELING_3POINT)
   #if IS_KINEMATIC
     #define SIN0    0.0
     #define SIN120  0.866025
     #define SIN240 -0.866025
     #define COS0    1.0
     #define COS120 -0.5
     #define COS240 -0.5
     #ifndef PROBE_PT_1_X
       #define PROBE_PT_1_X (X_CENTER + (_PROBE_RADIUS) * COS0)
     #endif
@@ -1481,21 +1481,21 @@
     #endif
     #ifndef PROBE_PT_3_X
       #define PROBE_PT_3_X X_CENTER
     #endif
     #ifndef PROBE_PT_3_Y
       #define PROBE_PT_3_Y MAX_PROBE_Y
     #endif
   #endif
 #endif
 
-#if ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR)
+#if EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR)
   #ifndef LEFT_PROBE_BED_POSITION
     #define LEFT_PROBE_BED_POSITION MIN_PROBE_X
   #endif
   #ifndef RIGHT_PROBE_BED_POSITION
     #define RIGHT_PROBE_BED_POSITION MAX_PROBE_X
   #endif
   #ifndef FRONT_PROBE_BED_POSITION
     #define FRONT_PROBE_BED_POSITION MIN_PROBE_Y
   #endif
   #ifndef BACK_PROBE_BED_POSITION
@@ -1575,21 +1575,21 @@
 #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT && HAS_HOME_OFFSET)
 // M206 sets the home offset for Cartesian machines
 #define HAS_M206_COMMAND (HAS_HOME_OFFSET && !IS_SCARA)
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
 // Add commands that need sub-codes to this list
-#define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS) || ENABLED(POWER_LOSS_RECOVERY)
+#define USE_GCODE_SUBCODES ANY(G38_PROBE_TARGET, CNC_COORDINATE_SYSTEMS, POWER_LOSS_RECOVERY)
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
@@ -1617,22 +1617,22 @@
   #endif
   #ifndef LED_USER_PRESET_BRIGHTNESS
     #ifdef NEOPIXEL_BRIGHTNESS
       #define LED_USER_PRESET_BRIGHTNESS NEOPIXEL_BRIGHTNESS
     #else
       #define LED_USER_PRESET_BRIGHTNESS 255
     #endif
   #endif
 #endif
 
-// Nozzle park
-#if ENABLED(NOZZLE_PARK_FEATURE) && ENABLED(DELTA)
+// Nozzle park for Delta
+#if BOTH(NOZZLE_PARK_FEATURE, DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
   #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
                                     // directory levels still glitches the screen,
                                     // but the following LCD update cleans it up.
@@ -1659,21 +1659,21 @@
 #endif
 
 // needs to be here so that we catch the above changes to our defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
-#define USE_EXECUTE_COMMANDS_IMMEDIATE (ENABLED(G29_RETRY_AND_RECOVER) || ENABLED(GCODE_MACROS) || ENABLED(POWER_LOSS_RECOVERY) || HAS_DRIVER(L6470))
+#define USE_EXECUTE_COMMANDS_IMMEDIATE (ANY(G29_RETRY_AND_RECOVER, GCODE_MACROS, POWER_LOSS_RECOVERY) || HAS_DRIVER(L6470))
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
 // Get LCD character width/height, which may be overridden by pins, configs, etc.

commit f89b375fb9ca9730a4165ac3bf9f0f9dc100a338
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 13 06:51:15 2019 -0500

    Fixes and improvements for PWM pins (#13383)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f0ddefb74f..204c141d87 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -951,41 +951,20 @@
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (PIN_EXISTS(CHAMBER_AUTO_FAN))
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
-#define AUTO_1_IS_0 (E1_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-#define AUTO_2_IS_0 (E2_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-#define AUTO_2_IS_1 (E2_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-#define AUTO_3_IS_0 (E3_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-#define AUTO_3_IS_1 (E3_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-#define AUTO_3_IS_2 (E3_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
-#define AUTO_4_IS_0 (E4_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-#define AUTO_4_IS_1 (E4_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-#define AUTO_4_IS_2 (E4_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
-#define AUTO_4_IS_3 (E4_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
-#define AUTO_5_IS_0 (E5_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-#define AUTO_5_IS_1 (E5_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-#define AUTO_5_IS_2 (E5_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
-#define AUTO_5_IS_3 (E5_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
-#define AUTO_5_IS_4 (E5_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
-#define AUTO_CHAMBER_IS_0 (CHAMBER_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-#define AUTO_CHAMBER_IS_1 (CHAMBER_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-#define AUTO_CHAMBER_IS_2 (CHAMBER_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
-#define AUTO_CHAMBER_IS_3 (CHAMBER_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
-#define AUTO_CHAMBER_IS_4 (CHAMBER_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
-#define AUTO_CHAMBER_IS_5 (CHAMBER_AUTO_FAN_PIN == E5_AUTO_FAN_PIN)
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN && E4_AUTO_FAN_PIN != FAN1_PIN && E5_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN && E4_AUTO_FAN_PIN != FAN2_PIN && E5_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))

commit d94e077901e15557e94f64640adf37e10defb7f2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 11 20:48:49 2019 -0500

    Apply HAS_HOTEND_OFFSET where needed

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7a75b47844..f0ddefb74f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -424,21 +424,21 @@
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define HEATER_CHAMBER_USES_THERMISTOR
 #endif
 
 #define HOTEND_USES_THERMISTOR (ENABLED(HEATER_0_USES_THERMISTOR) || ENABLED(HEATER_1_USES_THERMISTOR) || ENABLED(HEATER_2_USES_THERMISTOR) || ENABLED(HEATER_3_USES_THERMISTOR) || ENABLED(HEATER_4_USES_THERMISTOR))
 
 /**
  * Default hotend offsets, if not defined
  */
-#if HOTENDS > 1
+#if HAS_HOTEND_OFFSET
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Z
     #define HOTEND_OFFSET_Z { 0 } // Z offsets for each extruder
   #endif
 #endif

commit aa1d587128e1bfbf09e9c27dc19ac5ebaf496713
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 11 05:07:14 2019 -0500

    Some LCD code cleanup

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ef5ed50c68..7a75b47844 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1537,23 +1537,23 @@
 #else
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 5000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
 #endif
 
 /**
- * VIKI2, miniVIKI, AZSMZ_12864, and MKS_12864OLED_SSD1306 require DOGLCD_SCK and DOGLCD_MOSI to be defined.
+ * Make sure DOGLCD_SCK and DOGLCD_MOSI are defined.
  */
-#if ENABLED(VIKI2) || ENABLED(miniVIKI) || ENABLED(AZSMZ_12864) || ENABLED(MKS_12864OLED_SSD1306)
+#if ENABLED(DOGLCD)
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI
     #define DOGLCD_MOSI MOSI_PIN
   #endif
 #endif
 
 /**
  * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES

commit 4df9509eadc88b062181e3626ab72380df2dd288
Author: pinchies <pinchies@gmail.com>
Date:   Mon Mar 11 12:51:21 2019 +1100

    Add support for printers with inverted fan pins (#13362)
    
    Add support for printers with inverted fan pins by adding `#define FAN_INVERTING 1` to `Configuration_adv.h` and modifying the fan write macros.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f644b3a7d0..ef5ed50c68 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1162,39 +1162,43 @@
   #endif
   #ifndef HEATER_CHAMBER_INVERTING
     #define HEATER_CHAMBER_INVERTING false
   #endif
   #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ HEATER_CHAMBER_INVERTING)
 #endif
 
 /**
  * Up to 3 PWM fans
  */
+#ifndef FAN_INVERTING
+  #define FAN_INVERTING false
+#endif
+
 #if HAS_FAN2
   #define FAN_COUNT 3
 #elif HAS_FAN1
   #define FAN_COUNT 2
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else
   #define FAN_COUNT 0
 #endif
 
 #if HAS_FAN0
-  #define WRITE_FAN(v) WRITE(FAN_PIN, v)
+  #define WRITE_FAN(v) WRITE(FAN_PIN, (v) ^ FAN_INVERTING)
   #define WRITE_FAN0(v) WRITE_FAN(v)
 #endif
 #if HAS_FAN1
-  #define WRITE_FAN1(v) WRITE(FAN1_PIN, v)
+  #define WRITE_FAN1(v) WRITE(FAN1_PIN, (v) ^ FAN_INVERTING)
 #endif
 #if HAS_FAN2
-  #define WRITE_FAN2(v) WRITE(FAN2_PIN, v)
+  #define WRITE_FAN2(v) WRITE(FAN2_PIN, (v) ^ FAN_INVERTING)
 #endif
 #define WRITE_FAN_N(n, v) WRITE_FAN##n(v)
 
 /**
  * Part Cooling fan multipliexer
  */
 #define HAS_FANMUX PIN_EXISTS(FANMUX0)
 
 /**
  * MIN/MAX fan PWM scaling

commit dbead66988b138e67d0e8cc5901fa38672feb390
Author: Reece Kibble <reece.kibble@gmail.com>
Date:   Fri Mar 8 16:15:42 2019 +0800

    Allows user to set (almost) any PWM frequency (#12638)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 47a3f20ea5..f644b3a7d0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1206,20 +1206,27 @@
   #define FAN_MAX_PWM 255
 #endif
 #if FAN_MIN_PWM < 0 || FAN_MIN_PWM > 255
   #error "FAN_MIN_PWM must be a value from 0 to 255."
 #elif FAN_MAX_PWM < 0 || FAN_MAX_PWM > 255
   #error "FAN_MAX_PWM must be a value from 0 to 255."
 #elif FAN_MIN_PWM > FAN_MAX_PWM
   #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
 #endif
 
+/**
+ * FAST PWM FAN Settings
+ */
+#if ENABLED(FAST_PWM_FAN) && !defined(FAST_PWM_FAN_FREQUENCY)
+  #define FAST_PWM_FAN_FREQUENCY ((F_CPU) / (2 * 255 * 1)) // Fan frequency default
+#endif
+
 /**
  * Bed Probe dependencies
  */
 #if HAS_BED_PROBE
   #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif

commit 645ca7af7ac27af9d6690659dc71ff9867b34b6c
Author: 3dlabsio <shane@warnertci.com>
Date:   Thu Mar 7 00:09:39 2019 -0800

    M141 Heated Chamber, Temperature rework (#12201)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1b383e23f3..47a3f20ea5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -914,20 +914,21 @@
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_5 HAS_ADC_TEST(5)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)
 
 #define HAS_TEMP_HOTEND (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
 #define HAS_TEMP_BED HAS_TEMP_ADC_BED
 #define HAS_TEMP_CHAMBER HAS_TEMP_ADC_CHAMBER
+#define HAS_HEATED_CHAMBER (HAS_TEMP_CHAMBER && PIN_EXISTS(CHAMBER_HEATER))
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_5 (PIN_EXISTS(HEATER_5))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
@@ -938,21 +939,22 @@
 // PID heating
 #if !HAS_HEATED_BED
   #undef PIDTEMPBED
 #endif
 #define HAS_PID_HEATING (ENABLED(PIDTEMP) || ENABLED(PIDTEMPBED))
 #define HAS_PID_FOR_BOTH (ENABLED(PIDTEMP) && ENABLED(PIDTEMPBED))
 
 // Thermal protection
 #define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
 #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
-#define WATCH_THE_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
+#define WATCH_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
+#define WATCH_CHAMBER (HAS_HEATED_CHAMBER && ENABLED(THERMAL_PROTECTION_CHAMBER) && WATCH_CHAMBER_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (PIN_EXISTS(CHAMBER_AUTO_FAN))
 #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
@@ -1144,20 +1146,33 @@
 #if HAS_HEATED_BED
   #ifndef MAX_BED_POWER
     #define MAX_BED_POWER 255
   #endif
   #ifndef HEATER_BED_INVERTING
     #define HEATER_BED_INVERTING false
   #endif
   #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ HEATER_BED_INVERTING)
 #endif
 
+/**
+ * Heated chamber requires settings
+ */
+#if HAS_HEATED_CHAMBER
+  #ifndef MAX_CHAMBER_POWER
+    #define MAX_CHAMBER_POWER 255
+  #endif
+  #ifndef HEATER_CHAMBER_INVERTING
+    #define HEATER_CHAMBER_INVERTING false
+  #endif
+  #define WRITE_HEATER_CHAMBER(v) WRITE(HEATER_CHAMBER_PIN, (v) ^ HEATER_CHAMBER_INVERTING)
+#endif
+
 /**
  * Up to 3 PWM fans
  */
 #if HAS_FAN2
   #define FAN_COUNT 3
 #elif HAS_FAN1
   #define FAN_COUNT 2
 #elif HAS_FAN0
   #define FAN_COUNT 1
 #else

commit 44571775bd7eae600e689ce0f3d02f851e9cc733
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 7 01:00:44 2019 -0600

    Further support for 6 extruders

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f7dd0446c2..1b383e23f3 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -907,33 +907,35 @@
 #define HAS_Z_MIN_PROBE_PIN (USES_Z_MIN_PROBE_ENDSTOP && PIN_EXISTS(Z_MIN_PROBE))
 #define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))
 
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0 HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
+#define HAS_TEMP_ADC_5 HAS_ADC_TEST(5)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)
 
 #define HAS_TEMP_HOTEND (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
 #define HAS_TEMP_BED HAS_TEMP_ADC_BED
 #define HAS_TEMP_CHAMBER HAS_TEMP_ADC_CHAMBER
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
+#define HAS_HEATER_5 (PIN_EXISTS(HEATER_5))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations
 #define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
 #define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_HEATED_BED || HAS_TEMP_CHAMBER)
 
 // PID heating
 #if !HAS_HEATED_BED
   #undef PIDTEMPBED
 #endif
@@ -1099,20 +1101,24 @@
 #endif
 
 #if HAS_HEATER_3 && !defined(HEATER_3_INVERTING)
   #define HEATER_3_INVERTING false
 #endif
 
 #if HAS_HEATER_4 && !defined(HEATER_4_INVERTING)
   #define HEATER_4_INVERTING false
 #endif
 
+#if HAS_HEATER_5 && !defined(HEATER_5_INVERTING)
+  #define HEATER_5_INVERTING false
+#endif
+
 /**
  * Helper Macros for heaters and extruder fan
  */
 
 #define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, (v) ^ HEATER_0_INVERTING)
 #if HOTENDS > 1 || ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, (v) ^ HEATER_1_INVERTING)
   #if HOTENDS > 2
     #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, (v) ^ HEATER_2_INVERTING)
     #if HOTENDS > 3

commit 2f1e1dcb42e01165e800a5d00c769efecc5a9933
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Mar 1 01:51:24 2019 -0600

    Gradual step towards EXTRUDERS 0 support

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 65e34d94e4..f7dd0446c2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -36,20 +36,30 @@
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
+#if EXTRUDERS == 0
+  #define NO_VOLUMETRICS
+  #undef FWRETRACT
+  #undef LIN_ADVANCE
+  #undef ADVANCED_PAUSE_FEATURE
+  #undef DISABLE_INACTIVE_EXTRUDER
+  #undef EXTRUDER_RUNOUT_PREVENT
+  #undef FILAMENT_LOAD_UNLOAD_GCODES
+#endif
+
 #define HAS_CLASSIC_JERK (IS_KINEMATIC || DISABLED(JUNCTION_DEVIATION))
 
 /**
  * Axis lengths and center
  */
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 
 // Defined only if the sanity-check is bypassed

commit 99d0022fae0efd9164946062bf641f7294597675
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 1 00:27:45 2019 -0600

    Drop the Z_MIN_PROBE_ENDSTOP option (#13276)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7f389c3c57..65e34d94e4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -718,26 +718,26 @@
     #else
       #define Z3_MIN_ENDSTOP_INVERTING false
     #endif
     #define Z3_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
 // Is an endstop plug used for the Z2 endstop or the bed probe?
 #define IS_Z2_OR_PROBE(A,M) ( \
      (Z_MULTI_ENDSTOPS && Z2_USE_ENDSTOP == _##A##M##_) \
-  || (ENABLED(Z_MIN_PROBE_ENDSTOP) && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
+  || (USES_Z_MIN_PROBE_ENDSTOP && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
 
 // Is an endstop plug used for the Z3 endstop or the bed probe?
 #define IS_Z3_OR_PROBE(A,M) ( \
      (ENABLED(Z_TRIPLE_ENDSTOPS) && Z3_USE_ENDSTOP == _##A##M##_) \
-  || (ENABLED(Z_MIN_PROBE_ENDSTOP) && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
+  || (USES_Z_MIN_PROBE_ENDSTOP && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if ENABLED(USE_XMAX_PLUG)
     #define ENDSTOPPULLUP_XMAX
   #endif
   #if ENABLED(USE_YMAX_PLUG)
     #define ENDSTOPPULLUP_YMAX
@@ -887,21 +887,21 @@
 #define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
 #define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
-#define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
+#define HAS_Z_MIN_PROBE_PIN (USES_Z_MIN_PROBE_ENDSTOP && PIN_EXISTS(Z_MIN_PROBE))
 #define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))
 
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0 HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)

commit f37df28d1763e054adf2e399858576d71f3c1c76
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 26 22:25:53 2019 -0600

    UBL G29 T current position fix
    
    Counterpart to #12845

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b91104b77a..7f389c3c57 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -196,25 +196,31 @@
  */
 #if ENABLED(DELTA)
   #undef Z_SAFE_HOMING
   #undef SLOWDOWN
 #endif
 
 /**
  * Safe Homing Options
  */
 #if ENABLED(Z_SAFE_HOMING)
+  #if ENABLED(AUTO_BED_LEVELING_UBL)
+    // Home close to center so grid points have z heights very close to 0
+    #define _SAFE_POINT(A) (((GRID_MAX_POINTS_##A) / 2) * (A##_BED_SIZE - 2 * (MESH_INSET)) / (GRID_MAX_POINTS_##A - 1) + MESH_INSET)
+  #else
+    #define _SAFE_POINT(A) A##_CENTER
+  #endif
   #ifndef Z_SAFE_HOMING_X_POINT
-    #define Z_SAFE_HOMING_X_POINT X_CENTER
+    #define Z_SAFE_HOMING_X_POINT _SAFE_POINT(X)
   #endif
   #ifndef Z_SAFE_HOMING_Y_POINT
-    #define Z_SAFE_HOMING_Y_POINT Y_CENTER
+    #define Z_SAFE_HOMING_Y_POINT _SAFE_POINT(Y)
   #endif
   #define X_TILT_FULCRUM Z_SAFE_HOMING_X_POINT
   #define Y_TILT_FULCRUM Z_SAFE_HOMING_Y_POINT
 #else
   #define X_TILT_FULCRUM X_HOME_POS
   #define Y_TILT_FULCRUM Y_HOME_POS
 #endif
 
 /**
  * Host keep alive

commit 808b076000e89fd7dae071bd2e4899833c872af6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 24 20:29:03 2019 -0600

    Update some ABL/UBL conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 666d3e7db1..b91104b77a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1238,30 +1238,30 @@
       #define YZ_SKEW_FACTOR _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
     #else
       #define YZ_SKEW_FACTOR 0.0
     #endif
   #endif
 #endif // SKEW_CORRECTION
 
 /**
  * Set granular options based on the specific type of leveling
  */
-#define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
-#define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
-#define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
-#define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
-#define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
-#define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
-#define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
-#define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
+#define UBL_SEGMENTED   (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
+#define ABL_PLANAR      (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
+#define ABL_GRID        (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
+#define HAS_ABL_NOT_UBL (ABL_PLANAR || ABL_GRID)
+#define HAS_ABL_OR_UBL  (HAS_ABL_NOT_UBL || ENABLED(AUTO_BED_LEVELING_UBL))
+#define HAS_LEVELING    (HAS_ABL_OR_UBL || ENABLED(MESH_BED_LEVELING))
+#define HAS_AUTOLEVEL   (HAS_ABL_OR_UBL && DISABLED(PROBE_MANUALLY))
+#define HAS_MESH        (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
 #define PLANNER_LEVELING      (HAS_LEVELING && DISABLED(AUTO_BED_LEVELING_UBL))
-#define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
+#define HAS_PROBING_PROCEDURE (HAS_ABL_OR_UBL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #define HAS_POSITION_MODIFIERS (ENABLED(FWRETRACT) || HAS_LEVELING || ENABLED(SKEW_CORRECTION))
 
 #if ENABLED(AUTO_BED_LEVELING_UBL)
   #undef LCD_BED_LEVELING
 #endif
 
 /**
  * Heater, Fan, and Probe interactions
  */
 #if FAN_COUNT == 0

commit ba39186364b69f7399f33b7ddb1115db42c6eabc
Author: LinFor <linfor@gmail.com>
Date:   Wed Feb 20 11:22:42 2019 +0300

    TMC_DEBUG optimization and improvements (#13135)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4543c3e9f6..666d3e7db1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -846,23 +846,24 @@
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
 #define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5)))
 #define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
-  #define TMC_HAS_SPI     (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
-  #define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
-  #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC2208) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
+  #define HAS_TMCX1X0       (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
+  #define TMC_HAS_SPI       (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
+  #define HAS_STALLGUARD    (HAS_TMCX1X0 || HAS_DRIVER(TMC2660))
+  #define HAS_STEALTHCHOP   (HAS_TMCX1X0 || HAS_DRIVER(TMC2208))
   #define AXIS_HAS_SPI(ST)         (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2660))
   #define AXIS_HAS_STALLGUARD(ST)  (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2660) || AXIS_DRIVER_TYPE(ST, TMC5130) || AXIS_DRIVER_TYPE(ST, TMC5160))
   #define AXIS_HAS_STEALTHCHOP(ST) (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2208) || AXIS_DRIVER_TYPE(ST, TMC5130) || AXIS_DRIVER_TYPE(ST, TMC5160))
 
   #define STEALTHCHOP_ENABLED (ENABLED(STEALTHCHOP_XY) || ENABLED(STEALTHCHOP_Z) || ENABLED(STEALTHCHOP_E))
   #define USE_SENSORLESS (ENABLED(SENSORLESS_HOMING) || ENABLED(SENSORLESS_PROBING))
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 32c9321d4c..4543c3e9f6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 166e567ab8ef018c5b84a1514a885e9c785a1f60
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 10 05:06:38 2019 -0600

    Fix HAS_MOTOR_CURRENT_PWM

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b658f842e0..32c9321d4c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -989,21 +989,21 @@
 #define HAS_HOME (PIN_EXISTS(HOME))
 #define HAS_KILL (PIN_EXISTS(KILL))
 #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
 #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
 #define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
-#define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
+#define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_X) || PIN_EXISTS(MOTOR_CURRENT_PWM_Y) || PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
 
 #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
 
 #if HAS_MICROSTEPS
 
   // MS1 MS2 MS3 Stepper Driver Microstepping mode table
   #ifndef MICROSTEP1
     #define MICROSTEP1 LOW,LOW,LOW
   #endif
   #if ENABLED(HEROIC_STEPPER_DRIVERS)

commit e1604198ffa550f1eed2b8f5d39d51fdc0c2762f
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Feb 6 16:20:17 2019 -0700

    G425 ‚Äî Auto-calibrate Backlash and Nozzle Offsets (#13050)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 22647ff7c2..b658f842e0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -881,20 +881,21 @@
 #define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
 #define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
 #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
+#define HAS_CALIBRATION_PIN (PIN_EXISTS(CALIBRATION))
 
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0 HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)

commit 413e303ad53caca43c123fbfc8c3ee7298ee9219
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Feb 6 07:39:42 2019 -0500

    More Advanced Pause options (#12984)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f82f20f83c..22647ff7c2 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1268,20 +1268,24 @@
   #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
 
 #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
 #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
   #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
 #endif
 
+#if EXTRUDERS > 1 && !defined(TOOLCHANGE_FIL_EXTRA_PRIME)
+  #define TOOLCHANGE_FIL_EXTRA_PRIME 0
+#endif
+
 /**
  * Only constrain Z on DELTA / SCARA machines
  */
 #if IS_KINEMATIC
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 

commit d81342254a1fb8b12ce7d86cde574d7d96cc9871
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Wed Feb 6 14:33:14 2019 +0200

    Support new TMC drivers (#13026)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4b22ca4657..f82f20f83c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -438,21 +438,21 @@
  */
 #define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
 /**
  * Driver Timings
  * NOTE: Driver timing order is longest-to-shortest duration.
  *       Preserve this ordering when adding new drivers.
  */
 
-#define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE))
+#define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE) || HAS_DRIVER(TMC5130_STANDALONE) || HAS_DRIVER(TMC5160_STANDALONE) || HAS_DRIVER(TMC2160_STANDALONE))
 
 #ifndef MINIMUM_STEPPER_DIR_DELAY
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_DIR_DELAY 15000
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_DIR_DELAY 500
@@ -846,26 +846,26 @@
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
 #define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5)))
 #define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
-  #define TMC_HAS_SPI     (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
-  #define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
-  #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
-  #define AXIS_HAS_SPI(ST)         (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660))
-  #define AXIS_HAS_STALLGUARD(ST)  (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660))
-  #define AXIS_HAS_STEALTHCHOP(ST) (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208))
+  #define TMC_HAS_SPI     (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
+  #define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
+  #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2160) || HAS_DRIVER(TMC2208) || HAS_DRIVER(TMC5130) || HAS_DRIVER(TMC5160))
+  #define AXIS_HAS_SPI(ST)         (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2660))
+  #define AXIS_HAS_STALLGUARD(ST)  (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2660) || AXIS_DRIVER_TYPE(ST, TMC5130) || AXIS_DRIVER_TYPE(ST, TMC5160))
+  #define AXIS_HAS_STEALTHCHOP(ST) (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2160) || AXIS_DRIVER_TYPE(ST, TMC2208) || AXIS_DRIVER_TYPE(ST, TMC5130) || AXIS_DRIVER_TYPE(ST, TMC5160))
 
   #define STEALTHCHOP_ENABLED (ENABLED(STEALTHCHOP_XY) || ENABLED(STEALTHCHOP_Z) || ENABLED(STEALTHCHOP_E))
   #define USE_SENSORLESS (ENABLED(SENSORLESS_HOMING) || ENABLED(SENSORLESS_PROBING))
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))

commit 6fb4001b586467ed6965b944e2cf853c4afeac7b
Author: Nicolas G <ketchu13@hotmail.com>
Date:   Mon Feb 4 07:12:41 2019 +0100

    Add option to disable fan speed slowing in M303 (#13066)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f50a0ffdc7..4b22ca4657 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1253,25 +1253,28 @@
 #define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
 #define PLANNER_LEVELING      (HAS_LEVELING && DISABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #define HAS_POSITION_MODIFIERS (ENABLED(FWRETRACT) || HAS_LEVELING || ENABLED(SKEW_CORRECTION))
 
 #if ENABLED(AUTO_BED_LEVELING_UBL)
   #undef LCD_BED_LEVELING
 #endif
 
 /**
- * Heater & Fan Pausing
+ * Heater, Fan, and Probe interactions
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
+  #undef ADAPTIVE_FAN_SLOWING
+  #undef NO_FAN_SLOWING_IN_PID_TUNING
 #endif
+
 #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
 #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
   #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
 #endif
 
 /**
  * Only constrain Z on DELTA / SCARA machines
  */

commit 2f35747f294c4b3dc3e6920b34e208f89bd4841d
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Jan 23 19:06:54 2019 -0600

    L6470 SPI daisy chain support (#12895)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index fbc4ee76a7..f50a0ffdc7 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1623,21 +1623,21 @@
 #endif
 
 // needs to be here so that we catch the above changes to our defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
-#define USE_EXECUTE_COMMANDS_IMMEDIATE (ENABLED(G29_RETRY_AND_RECOVER) || ENABLED(GCODE_MACROS) || ENABLED(POWER_LOSS_RECOVERY))
+#define USE_EXECUTE_COMMANDS_IMMEDIATE (ENABLED(G29_RETRY_AND_RECOVER) || ENABLED(GCODE_MACROS) || ENABLED(POWER_LOSS_RECOVERY) || HAS_DRIVER(L6470))
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
 // Get LCD character width/height, which may be overridden by pins, configs, etc.

commit e6805582a67b106691423a35ab580bd6b0895949
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Thu Jan 17 21:17:16 2019 +0200

    M569 to change stepping mode. Add new TMC section to LCD. (#12884)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 059480c031..fbc4ee76a7 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -772,87 +772,87 @@
   #if ENABLED(USE_ZMIN_PLUG)
     #define ENDSTOPPULLDOWN_ZMIN
   #endif
 #endif
 
 /**
  * Shorthand for pin tests, used wherever needed
  */
 
 // Steppers
-#define HAS_X_ENABLE      (PIN_EXISTS(X_ENABLE))
+#define HAS_X_ENABLE      (PIN_EXISTS(X_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X)))
 #define HAS_X_DIR         (PIN_EXISTS(X_DIR))
 #define HAS_X_STEP        (PIN_EXISTS(X_STEP))
 #define HAS_X_MICROSTEPS  (PIN_EXISTS(X_MS1))
 
-#define HAS_X2_ENABLE     (PIN_EXISTS(X2_ENABLE))
+#define HAS_X2_ENABLE     (PIN_EXISTS(X2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(X2)))
 #define HAS_X2_DIR        (PIN_EXISTS(X2_DIR))
 #define HAS_X2_STEP       (PIN_EXISTS(X2_STEP))
 #define HAS_X2_MICROSTEPS (PIN_EXISTS(X2_MS1))
 
-#define HAS_Y_ENABLE      (PIN_EXISTS(Y_ENABLE))
+#define HAS_Y_ENABLE      (PIN_EXISTS(Y_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y)))
 #define HAS_Y_DIR         (PIN_EXISTS(Y_DIR))
 #define HAS_Y_STEP        (PIN_EXISTS(Y_STEP))
 #define HAS_Y_MICROSTEPS  (PIN_EXISTS(Y_MS1))
 
-#define HAS_Y2_ENABLE     (PIN_EXISTS(Y2_ENABLE))
+#define HAS_Y2_ENABLE     (PIN_EXISTS(Y2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Y2)))
 #define HAS_Y2_DIR        (PIN_EXISTS(Y2_DIR))
 #define HAS_Y2_STEP       (PIN_EXISTS(Y2_STEP))
 #define HAS_Y2_MICROSTEPS (PIN_EXISTS(Y2_MS1))
 
-#define HAS_Z_ENABLE      (PIN_EXISTS(Z_ENABLE))
+#define HAS_Z_ENABLE      (PIN_EXISTS(Z_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z)))
 #define HAS_Z_DIR         (PIN_EXISTS(Z_DIR))
 #define HAS_Z_STEP        (PIN_EXISTS(Z_STEP))
 #define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
 
-#define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE))
+#define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z2)))
 #define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
 #define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
 #define HAS_Z2_MICROSTEPS (PIN_EXISTS(Z2_MS1))
 
-#define HAS_Z3_ENABLE     (PIN_EXISTS(Z3_ENABLE))
+#define HAS_Z3_ENABLE     (PIN_EXISTS(Z3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(Z3)))
 #define HAS_Z3_DIR        (PIN_EXISTS(Z3_DIR))
 #define HAS_Z3_STEP       (PIN_EXISTS(Z3_STEP))
 #define HAS_Z3_MICROSTEPS (PIN_EXISTS(Z3_MS1))
 
 // Extruder steppers and solenoids
-#define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE))
+#define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E0)))
 #define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
 #define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
 #define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
 #define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
 
-#define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE))
+#define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E1)))
 #define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))
 #define HAS_E1_STEP       (PIN_EXISTS(E1_STEP))
 #define HAS_E1_MICROSTEPS (PIN_EXISTS(E1_MS1))
 #define HAS_SOLENOID_1    (PIN_EXISTS(SOL1))
 
-#define HAS_E2_ENABLE     (PIN_EXISTS(E2_ENABLE))
+#define HAS_E2_ENABLE     (PIN_EXISTS(E2_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E2)))
 #define HAS_E2_DIR        (PIN_EXISTS(E2_DIR))
 #define HAS_E2_STEP       (PIN_EXISTS(E2_STEP))
 #define HAS_E2_MICROSTEPS (PIN_EXISTS(E2_MS1))
 #define HAS_SOLENOID_2    (PIN_EXISTS(SOL2))
 
-#define HAS_E3_ENABLE     (PIN_EXISTS(E3_ENABLE))
+#define HAS_E3_ENABLE     (PIN_EXISTS(E3_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E3)))
 #define HAS_E3_DIR        (PIN_EXISTS(E3_DIR))
 #define HAS_E3_STEP       (PIN_EXISTS(E3_STEP))
 #define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
 #define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
 
-#define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
+#define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E4)))
 #define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
 #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
 #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
-#define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE))
+#define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE) || (ENABLED(SOFTWARE_DRIVER_ENABLE) && AXIS_IS_TMC(E5)))
 #define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
   #define TMC_HAS_SPI     (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
   #define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
   #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))

commit 7fde8d9d1e264c09246b0c7f64fc5c56b3752cd6
Author: mikeshub <mikesbaker@gmail.com>
Date:   Mon Jan 14 14:29:55 2019 -0600

    Add CreatorPro / Makerbot / QIDI / etc and Mightboard RevE support (#12855)
    
    - Fix a bug in MAXxxxx thermocouple temp reporting.
    - Add support for 3-wire HD44780.
    - Add support for PCA9533 RGB driver.
    - Add configuration examples for FlashForge CreatorPro.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ecee6c100f..059480c031 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -138,37 +138,37 @@
 
 /**
  * Set the home position based on settings or manual overrides
  */
 #ifdef MANUAL_X_HOME_POS
   #define X_HOME_POS MANUAL_X_HOME_POS
 #elif ENABLED(BED_CENTER_AT_0_0)
   #if ENABLED(DELTA)
     #define X_HOME_POS 0
   #else
-    #define X_HOME_POS ((X_BED_SIZE) * (X_HOME_DIR) * 0.5)
+    #define X_HOME_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
   #endif
 #else
   #if ENABLED(DELTA)
     #define X_HOME_POS (X_MIN_POS + (X_BED_SIZE) * 0.5)
   #else
     #define X_HOME_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
   #endif
 #endif
 
 #ifdef MANUAL_Y_HOME_POS
   #define Y_HOME_POS MANUAL_Y_HOME_POS
 #elif ENABLED(BED_CENTER_AT_0_0)
   #if ENABLED(DELTA)
     #define Y_HOME_POS 0
   #else
-    #define Y_HOME_POS ((Y_BED_SIZE) * (Y_HOME_DIR) * 0.5)
+    #define Y_HOME_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
   #endif
 #else
   #if ENABLED(DELTA)
     #define Y_HOME_POS (Y_MIN_POS + (Y_BED_SIZE) * 0.5)
   #else
     #define Y_HOME_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
   #endif
 #endif
 
 #ifdef MANUAL_Z_HOME_POS

commit 50b2fbd03140d21076b8dd3015219ffed0f761c9
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Fri Dec 7 23:34:21 2018 +0200

    Trinamic: Split stealthChop, improve driver monitoring, etc. (#12582)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 253503107c..ecee6c100f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -853,20 +853,21 @@
 
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
   #define TMC_HAS_SPI     (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
   #define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
   #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
   #define AXIS_HAS_SPI(ST)         (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660))
   #define AXIS_HAS_STALLGUARD(ST)  (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660))
   #define AXIS_HAS_STEALTHCHOP(ST) (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208))
 
+  #define STEALTHCHOP_ENABLED (ENABLED(STEALTHCHOP_XY) || ENABLED(STEALTHCHOP_Z) || ENABLED(STEALTHCHOP_E))
   #define USE_SENSORLESS (ENABLED(SENSORLESS_HOMING) || ENABLED(SENSORLESS_PROBING))
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_STALL_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
 #endif
 

commit aaf862aef22caa136f4aa63d9fcc4e71c164ae33
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 30 12:31:42 2018 -0600

    Fix angles for disabled EDITABLE_SERVO_ANGLES (#12559)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 02334fa1ff..253503107c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -967,20 +967,26 @@
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
 #define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
 #define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
 #define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
 
 #if HAS_SERVOS && !defined(Z_PROBE_SERVO_NR)
   #define Z_PROBE_SERVO_NR -1
 #endif
 
+#define HAS_SERVO_ANGLES (ENABLED(SWITCHING_EXTRUDER) || ENABLED(SWITCHING_NOZZLE) || (HAS_Z_SERVO_PROBE && defined(Z_PROBE_SERVO_NR)))
+
+#if !HAS_SERVO_ANGLES
+  #undef EDITABLE_SERVO_ANGLES
+#endif
+
 // Sensors
 #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
 
 // User Interface
 #define HAS_HOME (PIN_EXISTS(HOME))
 #define HAS_KILL (PIN_EXISTS(KILL))
 #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
 #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))

commit 8be91677df714b6c28db5ebfee4824a07239d5be
Author: Jacob Jordan <doublejinitials@gmail.com>
Date:   Thu Nov 29 09:39:31 2018 -0800

    Fix Skew factors (#12555)
    
    - Ensure Skew factors are calculated from test square measurements

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4e1097f93b..02334fa1ff 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1201,48 +1201,42 @@
  */
 #if ENABLED(SKEW_CORRECTION)
   #define SKEW_FACTOR_MIN -1
   #define SKEW_FACTOR_MAX 1
 
   #define _GET_SIDE(a,b,c) (SQRT(2*sq(a)+2*sq(b)-4*sq(c))*0.5)
   #define _SKEW_SIDE(a,b,c) tan(M_PI*0.5-acos((sq(a)-sq(b)-sq(c))/(2*c*b)))
   #define _SKEW_FACTOR(a,b,c) _SKEW_SIDE(float(a),_GET_SIDE(float(a),float(b),float(c)),float(c))
 
   #ifndef XY_SKEW_FACTOR
-    constexpr float XY_SKEW_FACTOR = (
-      #if defined(XY_DIAG_AC) && defined(XY_DIAG_BD) && defined(XY_SIDE_AD)
-        _SKEW_FACTOR(XY_DIAG_AC, XY_DIAG_BD, XY_SIDE_AD)
-      #else
-        0.0
-      #endif
-    );
+    #if defined(XY_DIAG_AC) && defined(XY_DIAG_BD) && defined(XY_SIDE_AD)
+      #define XY_SKEW_FACTOR _SKEW_FACTOR(XY_DIAG_AC, XY_DIAG_BD, XY_SIDE_AD)
+    #else
+      #define XY_SKEW_FACTOR 0.0
+    #endif
   #endif
   #ifndef XZ_SKEW_FACTOR
     #if defined(XY_SIDE_AD) && !defined(XZ_SIDE_AD)
       #define XZ_SIDE_AD XY_SIDE_AD
     #endif
-    constexpr float XZ_SKEW_FACTOR = (
-      #if defined(XZ_DIAG_AC) && defined(XZ_DIAG_BD) && defined(XZ_SIDE_AD)
-        _SKEW_FACTOR(XZ_DIAG_AC, XZ_DIAG_BD, XZ_SIDE_AD)
-      #else
-        0.0
-      #endif
-    );
+    #if defined(XZ_DIAG_AC) && defined(XZ_DIAG_BD) && defined(XZ_SIDE_AD)
+      #define XZ_SKEW_FACTOR _SKEW_FACTOR(XZ_DIAG_AC, XZ_DIAG_BD, XZ_SIDE_AD)
+    #else
+      #define XZ_SKEW_FACTOR 0.0
+    #endif
   #endif
   #ifndef YZ_SKEW_FACTOR
-    constexpr float YZ_SKEW_FACTOR = (
-      #if defined(YZ_DIAG_AC) && defined(YZ_DIAG_BD) && defined(YZ_SIDE_AD)
-        _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
-      #else
-        0.0
-      #endif
-    );
+    #if defined(YZ_DIAG_AC) && defined(YZ_DIAG_BD) && defined(YZ_SIDE_AD)
+      #define YZ_SKEW_FACTOR _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
+    #else
+      #define YZ_SKEW_FACTOR 0.0
+    #endif
   #endif
 #endif // SKEW_CORRECTION
 
 /**
  * Set granular options based on the specific type of leveling
  */
 #define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
 #define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)

commit 439a3e846370b5f4dfddf5808a9572eac9e0efc2
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Tue Nov 27 12:45:25 2018 -0700

    Improve runout sensor, fix LIGHTWEIGHT_UI screen size (#12544)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4d4cf07a0a..4e1097f93b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1634,31 +1634,27 @@
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
 // Get LCD character width/height, which may be overridden by pins, configs, etc.
 #ifndef LCD_WIDTH
-  #if ENABLED(LIGHTWEIGHT_UI)
-    #define LCD_WIDTH 16
-  #elif HAS_GRAPHICAL_LCD
+  #if HAS_GRAPHICAL_LCD
     #define LCD_WIDTH 22
   #elif ENABLED(ULTIPANEL)
     #define LCD_WIDTH 20
   #elif HAS_SPI_LCD
     #define LCD_WIDTH 16
   #endif
 #endif
 #ifndef LCD_HEIGHT
-  #if ENABLED(LIGHTWEIGHT_UI)
-    #define LCD_HEIGHT 4
-  #elif HAS_GRAPHICAL_LCD
+  #if HAS_GRAPHICAL_LCD
     #define LCD_HEIGHT 5
   #elif ENABLED(ULTIPANEL)
     #define LCD_HEIGHT 4
   #elif HAS_SPI_LCD
     #define LCD_HEIGHT 2
   #endif
 #endif

commit d97e31db4c2b8b27ab1c6fbbe05f11aa9d5e94e2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 16 20:47:07 2018 -0600

    Optimize Power-Loss Recovery (#12440)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 40ecd5412f..4d4cf07a0a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1622,21 +1622,21 @@
 #endif
 
 // needs to be here so that we catch the above changes to our defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
-#define USE_EXECUTE_COMMANDS_IMMEDIATE (ENABLED(G29_RETRY_AND_RECOVER) || ENABLED(GCODE_MACROS))
+#define USE_EXECUTE_COMMANDS_IMMEDIATE (ENABLED(G29_RETRY_AND_RECOVER) || ENABLED(GCODE_MACROS) || ENABLED(POWER_LOSS_RECOVERY))
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
 // Get LCD character width/height, which may be overridden by pins, configs, etc.

commit ca21ac6b9bac188560c4d316ecf1b257d3f0cec8
Author: Mateusz Krawczuk <mat.krawczuk@gmail.com>
Date:   Sat Nov 17 01:20:33 2018 +0100

    Support two MAX6675 thermocouples (#8686)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a8663fdf6e..40ecd5412f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -268,42 +268,52 @@
 #define HAS_POWER_SWITCH (POWER_SUPPLY > 0 && PIN_EXISTS(PS_ON))
 
 /**
  * Temp Sensor defines
  */
 #if TEMP_SENSOR_0 == -4
   #define HEATER_0_USES_AD8495
 #elif TEMP_SENSOR_0 == -3
   #define HEATER_0_USES_MAX6675
   #define MAX6675_IS_MAX31855
-  #define MAX6675_TMIN -270
-  #define MAX6675_TMAX 1800
+  #define HEATER_0_MAX6675_TMIN -270
+  #define HEATER_0_MAX6675_TMAX 1800
 #elif TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675
-  #define MAX6675_TMIN 0
-  #define MAX6675_TMAX 1024
+  #define HEATER_0_MAX6675_TMIN 0
+  #define HEATER_0_MAX6675_TMAX 1024
 #elif TEMP_SENSOR_0 == -1
   #define HEATER_0_USES_AD595
 #elif TEMP_SENSOR_0 == 0
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTORHEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_1 == -4
   #define HEATER_1_USES_AD8495
 #elif TEMP_SENSOR_1 == -3
-  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_1."
+  #if TEMP_SENSOR_0 == -2
+    #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_1 then TEMP_SENSOR_0 must match."
+  #endif
+  #define HEATER_1_USES_MAX6675
+  #define HEATER_1_MAX6675_TMIN -270
+  #define HEATER_1_MAX6675_TMAX 1800
 #elif TEMP_SENSOR_1 == -2
-  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_1."
+  #if TEMP_SENSOR_0 == -3
+    #error "If MAX31855 Thermocouple (-3) is used for TEMP_SENSOR_0 then TEMP_SENSOR_1 must match."
+  #endif
+  #define HEATER_1_USES_MAX6675
+  #define HEATER_1_MAX6675_TMIN 0
+  #define HEATER_1_MAX6675_TMAX 1024
 #elif TEMP_SENSOR_1 == -1
   #define HEATER_1_USES_AD595
 #elif TEMP_SENSOR_1 == 0
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #elif TEMP_SENSOR_1 > 0
   #define THERMISTORHEATER_1 TEMP_SENSOR_1
   #define HEATER_1_USES_THERMISTOR
 #endif
 

commit a3923424c7f214b398a2241d703f1f775301fc99
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Nov 12 02:37:31 2018 -0600

    Clean up LCD width/height determination

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1c7a3cb0b5..a8663fdf6e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1623,44 +1623,32 @@
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
 // Get LCD character width/height, which may be overridden by pins, configs, etc.
-#if HAS_GRAPHICAL_LCD
-  #ifndef LCD_WIDTH
-    #ifdef LCD_WIDTH_OVERRIDE
-      #define LCD_WIDTH LCD_WIDTH_OVERRIDE
-    #elif ENABLED(LIGHTWEIGHT_UI)
-      #define LCD_WIDTH 16
-    #else
-      #define LCD_WIDTH 22
-    #endif
-  #endif
-  #ifndef LCD_HEIGHT
-    #ifdef LCD_HEIGHT_OVERRIDE
-      #define LCD_HEIGHT LCD_HEIGHT_OVERRIDE
-    #elif ENABLED(LIGHTWEIGHT_UI)
-      #define LCD_HEIGHT 4
-    #else
-      #define LCD_HEIGHT 5
-    #endif
-  #endif
-#elif ENABLED(ULTIPANEL)
-  #ifndef LCD_WIDTH
+#ifndef LCD_WIDTH
+  #if ENABLED(LIGHTWEIGHT_UI)
+    #define LCD_WIDTH 16
+  #elif HAS_GRAPHICAL_LCD
+    #define LCD_WIDTH 22
+  #elif ENABLED(ULTIPANEL)
     #define LCD_WIDTH 20
-  #endif
-  #ifndef LCD_HEIGHT
-    #define LCD_HEIGHT 4
-  #endif
-#elif HAS_SPI_LCD
-  #ifndef LCD_WIDTH
+  #elif HAS_SPI_LCD
     #define LCD_WIDTH 16
   #endif
-  #ifndef LCD_HEIGHT
+#endif
+#ifndef LCD_HEIGHT
+  #if ENABLED(LIGHTWEIGHT_UI)
+    #define LCD_HEIGHT 4
+  #elif HAS_GRAPHICAL_LCD
+    #define LCD_HEIGHT 5
+  #elif ENABLED(ULTIPANEL)
+    #define LCD_HEIGHT 4
+  #elif HAS_SPI_LCD
     #define LCD_HEIGHT 2
   #endif
 #endif

commit a0c795b097a30eff006c8dff178abf5f1f1907fa
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 11 12:16:24 2018 -0600

    Encapsulate common display code in a singleton (#12395)
    
    * Encapsulate common LCD code in a singleton
    * Depend more UBL code on UBL_DEVEL_DEBUGGING
      - Since most users don't need the debugging on at all times, this helps reduce the default build size for UBL by over 2K, a little closer to fitting on 128K boards.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a20ab25a73..1c7a3cb0b5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1621,10 +1621,46 @@
 
 #define USE_EXECUTE_COMMANDS_IMMEDIATE (ENABLED(G29_RETRY_AND_RECOVER) || ENABLED(GCODE_MACROS))
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
+
+// Get LCD character width/height, which may be overridden by pins, configs, etc.
+#if HAS_GRAPHICAL_LCD
+  #ifndef LCD_WIDTH
+    #ifdef LCD_WIDTH_OVERRIDE
+      #define LCD_WIDTH LCD_WIDTH_OVERRIDE
+    #elif ENABLED(LIGHTWEIGHT_UI)
+      #define LCD_WIDTH 16
+    #else
+      #define LCD_WIDTH 22
+    #endif
+  #endif
+  #ifndef LCD_HEIGHT
+    #ifdef LCD_HEIGHT_OVERRIDE
+      #define LCD_HEIGHT LCD_HEIGHT_OVERRIDE
+    #elif ENABLED(LIGHTWEIGHT_UI)
+      #define LCD_HEIGHT 4
+    #else
+      #define LCD_HEIGHT 5
+    #endif
+  #endif
+#elif ENABLED(ULTIPANEL)
+  #ifndef LCD_WIDTH
+    #define LCD_WIDTH 20
+  #endif
+  #ifndef LCD_HEIGHT
+    #define LCD_HEIGHT 4
+  #endif
+#elif HAS_SPI_LCD
+  #ifndef LCD_WIDTH
+    #define LCD_WIDTH 16
+  #endif
+  #ifndef LCD_HEIGHT
+    #define LCD_HEIGHT 2
+  #endif
+#endif

commit b60abc7c378e47959fb11f890d49ee7e90588d3d
Author: revilor <oliver.rossmueller@web.de>
Date:   Fri Nov 9 12:25:08 2018 +0100

    [2.0.x] Macro G-codes (#9365)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b331c1c236..a20ab25a73 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1612,19 +1612,19 @@
 #endif
 
 // needs to be here so that we catch the above changes to our defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
-#define USE_EXECUTE_COMMANDS_IMMEDIATE ENABLED(G29_RETRY_AND_RECOVER)
+#define USE_EXECUTE_COMMANDS_IMMEDIATE (ENABLED(G29_RETRY_AND_RECOVER) || ENABLED(GCODE_MACROS))
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif

commit 44fa7fb18cf1e72569215d6425ddc43063d9e37e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 3 02:13:10 2018 -0500

    Cleanups for leveling-related code

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f086bea982..b331c1c236 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -36,24 +36,20 @@
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
-#define IS_SCARA (ENABLED(MORGAN_SCARA) || ENABLED(MAKERARM_SCARA))
-#define IS_KINEMATIC (ENABLED(DELTA) || IS_SCARA)
-#define IS_CARTESIAN !IS_KINEMATIC
-
 #define HAS_CLASSIC_JERK (IS_KINEMATIC || DISABLED(JUNCTION_DEVIATION))
 
 /**
  * Axis lengths and center
  */
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 
 // Defined only if the sanity-check is bypassed
@@ -1531,23 +1527,20 @@
 // Cumulative offset to workspace to save some calculation
 #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT && HAS_HOME_OFFSET)
 // M206 sets the home offset for Cartesian machines
 #define HAS_M206_COMMAND (HAS_HOME_OFFSET && !IS_SCARA)
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
-// Shorthand
-#define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
-
 // Add commands that need sub-codes to this list
 #define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS) || ENABLED(POWER_LOSS_RECOVERY)
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH

commit f5eab912ed6d336f2c37a688a0ec822ed3d42fcc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 4 02:25:55 2018 -0600

    Apply #pragma once, misc cleanup (#12322)
    
    * Apply #pragma once in headers
    * Adjust some thermistors formatting
    * Misc cleanup and formatting

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c7b09e0c48..f086bea982 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -12,29 +12,27 @@
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
-#ifndef CONDITIONALS_POST_H
-#define CONDITIONALS_POST_H
-
 #define AVR_ATmega2560_FAMILY_PLUS_70 ( \
      MB(BQ_ZUM_MEGA_3D)                 \
   || MB(MIGHTYBOARD_REVE)               \
   || MB(MINIRAMBO)                      \
   || MB(SCOOVO_X9H)                     \
 )
 
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
@@ -1630,12 +1628,10 @@
 
 #define USE_EXECUTE_COMMANDS_IMMEDIATE ENABLED(G29_RETRY_AND_RECOVER)
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
-
-#endif // CONDITIONALS_POST_H

commit d1ff22b9830bbb94efea52f4233b2f11ad0a0c4a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 3 03:56:33 2018 -0500

    Revive SCARA's home offset (unimplemented)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 764a342869..c7b09e0c48 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1520,21 +1520,23 @@
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
 #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
 // The home offset also shifts the coordinate space
-#define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && (IS_SCARA || IS_CARTESIAN))
+#define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && IS_CARTESIAN)
+// The SCARA home offset applies only on G28
+#define HAS_SCARA_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && IS_SCARA)
 // Cumulative offset to workspace to save some calculation
 #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT && HAS_HOME_OFFSET)
 // M206 sets the home offset for Cartesian machines
 #define HAS_M206_COMMAND (HAS_HOME_OFFSET && !IS_SCARA)
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 

commit 2c9586be0cb55fc821b50413287735ff83f0d321
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 3 03:39:15 2018 -0500

    Clear up HAS_WORKSPACE_OFFSET meaning

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9c9ad8faef..764a342869 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1520,25 +1520,25 @@
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
 #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
 // The home offset also shifts the coordinate space
-#define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && DISABLED(DELTA))
-// Either offset yields extra calculations on all moves
-#define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT || HAS_HOME_OFFSET)
-// M206 doesn't apply to DELTA
-#define HAS_M206_COMMAND (HAS_HOME_OFFSET && DISABLED(DELTA))
+#define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && (IS_SCARA || IS_CARTESIAN))
+// Cumulative offset to workspace to save some calculation
+#define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT && HAS_HOME_OFFSET)
+// M206 sets the home offset for Cartesian machines
+#define HAS_M206_COMMAND (HAS_HOME_OFFSET && !IS_SCARA)
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
 // Shorthand
 #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
 
 // Add commands that need sub-codes to this list

commit 31c28d0dd243331adba3debb4801fbd03f7f6ec2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 2 00:42:16 2018 -0500

    Drop pgm_read_*_near and let headers choose (#12301)
    
    - Drop `pgm_read_*_near` and let headers choose.
    - Define `USE_EXECUTE_COMMANDS_IMMEDIATE` as a conditional.
    - Add `process_subcommands_now` for SRAM-based commands.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4f05d0e567..9c9ad8faef 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1619,23 +1619,21 @@
 #endif
 
 // needs to be here so that we catch the above changes to our defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
-#if ENABLED(G29_RETRY_AND_RECOVER)
-  #define USE_EXECUTE_COMMANDS_IMMEDIATE
-#endif
+#define USE_EXECUTE_COMMANDS_IMMEDIATE ENABLED(G29_RETRY_AND_RECOVER)
 
 #if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 3
 #elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
   #define Z_STEPPER_COUNT 2
 #else
   #define Z_STEPPER_COUNT 1
 #endif
 
 #endif // CONDITIONALS_POST_H

commit 9f77df25900c22181de1170c4c81f10b4c1b885e
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Thu Nov 1 22:13:33 2018 +0100

    Followup to menu refactor. TMC warnings, sanity. (#12288)
    
    - Followup fixes for menu refactor
    - Fix TMC sanity checks, unused var warnings

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8bd14970d4..4f05d0e567 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -850,29 +850,27 @@
 // Trinamic Stepper Drivers
 #if HAS_TRINAMIC
   #define TMC_HAS_SPI     (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
   #define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
   #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
   #define AXIS_HAS_SPI(ST)         (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660))
   #define AXIS_HAS_STALLGUARD(ST)  (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660))
   #define AXIS_HAS_STEALTHCHOP(ST) (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208))
 
   #define USE_SENSORLESS (ENABLED(SENSORLESS_HOMING) || ENABLED(SENSORLESS_PROBING))
-  #if USE_SENSORLESS
-    // Disable Z axis sensorless homing if a probe is used to home the Z axis
-    #if HOMING_Z_WITH_PROBE
-      #undef Z_STALL_SENSITIVITY
-    #endif
-    #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
-    #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
-    #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
+  // Disable Z axis sensorless homing if a probe is used to home the Z axis
+  #if HOMING_Z_WITH_PROBE
+    #undef Z_STALL_SENSITIVITY
   #endif
+  #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
+  #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
+  #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
 #endif
 
 // Endstops and bed probe
 #define HAS_STOP_TEST(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
 #define HAS_X_MIN HAS_STOP_TEST(X,MIN)
 #define HAS_X_MAX HAS_STOP_TEST(X,MAX)
 #define HAS_Y_MIN HAS_STOP_TEST(Y,MIN)
 #define HAS_Y_MAX HAS_STOP_TEST(Y,MAX)
 #define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
 #define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)

commit 3583e2b4490e8fd6778d18003641c2fdd333e8a5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Oct 30 16:34:45 2018 -0500

    Followup to Menu Refactor (#12275)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b6f0b4e881..8bd14970d4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -232,21 +232,21 @@
 /**
  * Provide a MAX_AUTORETRACT for older configs
  */
 #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
   #define MAX_AUTORETRACT 99
 #endif
 
 /**
  * Override here because this is set in Configuration_adv.h
  */
-#if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
+#if HAS_LCD_MENU && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #undef SD_DETECT_INVERTED
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
 #ifndef DISABLE_INACTIVE_X
   #define DISABLE_INACTIVE_X DISABLE_X
 #endif
 #ifndef DISABLE_INACTIVE_Y

commit 553622835911b520c6ba43bc03e71868f3972cb3
Author: TheLongAndOnly <github@mueller-gelff.de>
Date:   Mon Oct 29 20:01:36 2018 +0100

    G34 Auto-align multi-stepper Z axis (#11302)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c9e80abd9e..b6f0b4e881 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1625,11 +1625,19 @@
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
 #if ENABLED(G29_RETRY_AND_RECOVER)
   #define USE_EXECUTE_COMMANDS_IMMEDIATE
 #endif
 
+#if ENABLED(Z_TRIPLE_STEPPER_DRIVERS)
+  #define Z_STEPPER_COUNT 3
+#elif ENABLED(Z_DUAL_STEPPER_DRIVERS)
+  #define Z_STEPPER_COUNT 2
+#else
+  #define Z_STEPPER_COUNT 1
+#endif
+
 #endif // CONDITIONALS_POST_H

commit e8031b115249385700006146f273bcd220394ba9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 25 11:12:24 2018 -0500

    Add Custom Microstepping options

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 969a7021c0..c9e80abd9e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -229,51 +229,20 @@
   #define DEFAULT_KEEPALIVE_INTERVAL 2
 #endif
 
 /**
  * Provide a MAX_AUTORETRACT for older configs
  */
 #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
   #define MAX_AUTORETRACT 99
 #endif
 
-// MS1 MS2 MS3 Stepper Driver Microstepping mode table
-#if DISABLED(MICROSTEP_CUSTOM)
-  #define MICROSTEP1 LOW,LOW,LOW
-  #if ENABLED(HEROIC_STEPPER_DRIVERS)
-    #define MICROSTEP128 LOW,HIGH,LOW
-  #else
-    #define MICROSTEP2 HIGH,LOW,LOW
-    #define MICROSTEP4 LOW,HIGH,LOW
-  #endif
-  #define MICROSTEP8 HIGH,HIGH,LOW
-  #ifdef __SAM3X8E__
-    #if MB(ALLIGATOR)
-      #define MICROSTEP16 LOW,LOW,LOW
-      #define MICROSTEP32 HIGH,HIGH,LOW
-    #else
-      #define MICROSTEP16 HIGH,HIGH,LOW
-    #endif
-  #else
-    #define MICROSTEP16 HIGH,HIGH,LOW
-  #endif
-#endif
-
-#define HAS_MICROSTEP1 defined(MICROSTEP1)
-#define HAS_MICROSTEP2 defined(MICROSTEP2)
-#define HAS_MICROSTEP4 defined(MICROSTEP4)
-#define HAS_MICROSTEP8 defined(MICROSTEP8)
-#define HAS_MICROSTEP16 defined(MICROSTEP16)
-#define HAS_MICROSTEP32 defined(MICROSTEP32)
-#define HAS_MICROSTEP64 defined(MICROSTEP64)
-#define HAS_MICROSTEP128 defined(MICROSTEP128)
-
 /**
  * Override here because this is set in Configuration_adv.h
  */
 #if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #undef SD_DETECT_INVERTED
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
@@ -1008,25 +977,77 @@
 
 // User Interface
 #define HAS_HOME (PIN_EXISTS(HOME))
 #define HAS_KILL (PIN_EXISTS(KILL))
 #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
 #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
-#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
 #define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
 
+#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
+
+#if HAS_MICROSTEPS
+
+  // MS1 MS2 MS3 Stepper Driver Microstepping mode table
+  #ifndef MICROSTEP1
+    #define MICROSTEP1 LOW,LOW,LOW
+  #endif
+  #if ENABLED(HEROIC_STEPPER_DRIVERS)
+    #ifndef MICROSTEP128
+      #define MICROSTEP128 LOW,HIGH,LOW
+    #endif
+  #else
+    #ifndef MICROSTEP2
+      #define MICROSTEP2 HIGH,LOW,LOW
+    #endif
+    #ifndef MICROSTEP4
+      #define MICROSTEP4 LOW,HIGH,LOW
+    #endif
+  #endif
+  #ifndef MICROSTEP8
+    #define MICROSTEP8 HIGH,HIGH,LOW
+  #endif
+  #ifdef __SAM3X8E__
+    #if MB(ALLIGATOR)
+      #ifndef MICROSTEP16
+        #define MICROSTEP16 LOW,LOW,LOW
+      #endif
+      #ifndef MICROSTEP32
+        #define MICROSTEP32 HIGH,HIGH,LOW
+      #endif
+    #else
+      #ifndef MICROSTEP16
+        #define MICROSTEP16 HIGH,HIGH,LOW
+      #endif
+    #endif
+  #else
+    #ifndef MICROSTEP16
+      #define MICROSTEP16 HIGH,HIGH,LOW
+    #endif
+  #endif
+
+  #define HAS_MICROSTEP1 defined(MICROSTEP1)
+  #define HAS_MICROSTEP2 defined(MICROSTEP2)
+  #define HAS_MICROSTEP4 defined(MICROSTEP4)
+  #define HAS_MICROSTEP8 defined(MICROSTEP8)
+  #define HAS_MICROSTEP16 defined(MICROSTEP16)
+  #define HAS_MICROSTEP32 defined(MICROSTEP32)
+  #define HAS_MICROSTEP64 defined(MICROSTEP64)
+  #define HAS_MICROSTEP128 defined(MICROSTEP128)
+
+#endif // HAS_MICROSTEPS
+
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 
 #define HAS_AUTO_REPORTING (ENABLED(AUTO_REPORT_TEMPERATURES) || ENABLED(AUTO_REPORT_SD_STATUS))
 
 /**
  * This setting is also used by M109 when trying to calculate
  * a ballpark safe margin to prevent wait-forever situation.
  */

commit 45e738876ac3b08af1b702d87435899005c043bc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 11 00:56:26 2018 -0500

    Add stepper MS3 support
    
    Co-Authored-By: TheLongAndOnly <thelongandonly@users.noreply.github.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 326a701af5..969a7021c0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -229,40 +229,51 @@
   #define DEFAULT_KEEPALIVE_INTERVAL 2
 #endif
 
 /**
  * Provide a MAX_AUTORETRACT for older configs
  */
 #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
   #define MAX_AUTORETRACT 99
 #endif
 
-// MS1 MS2 Stepper Driver Microstepping mode table
-#define MICROSTEP1 LOW,LOW
-#if ENABLED(HEROIC_STEPPER_DRIVERS)
-  #define MICROSTEP128 LOW,HIGH
-#else
-  #define MICROSTEP2 HIGH,LOW
-  #define MICROSTEP4 LOW,HIGH
-#endif
-#define MICROSTEP8 HIGH,HIGH
-#ifdef __SAM3X8E__
-  #if MB(ALLIGATOR)
-    #define MICROSTEP16 LOW,LOW
-    #define MICROSTEP32 HIGH,HIGH
+// MS1 MS2 MS3 Stepper Driver Microstepping mode table
+#if DISABLED(MICROSTEP_CUSTOM)
+  #define MICROSTEP1 LOW,LOW,LOW
+  #if ENABLED(HEROIC_STEPPER_DRIVERS)
+    #define MICROSTEP128 LOW,HIGH,LOW
+  #else
+    #define MICROSTEP2 HIGH,LOW,LOW
+    #define MICROSTEP4 LOW,HIGH,LOW
+  #endif
+  #define MICROSTEP8 HIGH,HIGH,LOW
+  #ifdef __SAM3X8E__
+    #if MB(ALLIGATOR)
+      #define MICROSTEP16 LOW,LOW,LOW
+      #define MICROSTEP32 HIGH,HIGH,LOW
+    #else
+      #define MICROSTEP16 HIGH,HIGH,LOW
+    #endif
   #else
-    #define MICROSTEP16 HIGH,HIGH
+    #define MICROSTEP16 HIGH,HIGH,LOW
   #endif
-#else
-  #define MICROSTEP16 HIGH,HIGH
 #endif
 
+#define HAS_MICROSTEP1 defined(MICROSTEP1)
+#define HAS_MICROSTEP2 defined(MICROSTEP2)
+#define HAS_MICROSTEP4 defined(MICROSTEP4)
+#define HAS_MICROSTEP8 defined(MICROSTEP8)
+#define HAS_MICROSTEP16 defined(MICROSTEP16)
+#define HAS_MICROSTEP32 defined(MICROSTEP32)
+#define HAS_MICROSTEP64 defined(MICROSTEP64)
+#define HAS_MICROSTEP128 defined(MICROSTEP128)
+
 /**
  * Override here because this is set in Configuration_adv.h
  */
 #if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #undef SD_DETECT_INVERTED
 #endif
 
 /**
  * Set defaults for missing (newer) options
  */
@@ -821,20 +832,21 @@
 #define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
 
 #define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE))
 #define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
 #define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
 #define HAS_Z2_MICROSTEPS (PIN_EXISTS(Z2_MS1))
 
 #define HAS_Z3_ENABLE     (PIN_EXISTS(Z3_ENABLE))
 #define HAS_Z3_DIR        (PIN_EXISTS(Z3_DIR))
 #define HAS_Z3_STEP       (PIN_EXISTS(Z3_STEP))
+#define HAS_Z3_MICROSTEPS (PIN_EXISTS(Z3_MS1))
 
 // Extruder steppers and solenoids
 #define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE))
 #define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
 #define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
 #define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
 #define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
 
 #define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE))
 #define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))
@@ -996,21 +1008,21 @@
 
 // User Interface
 #define HAS_HOME (PIN_EXISTS(HOME))
 #define HAS_KILL (PIN_EXISTS(KILL))
 #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
 #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
-#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
+#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_X2_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Y2_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_Z2_MICROSTEPS || HAS_Z3_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
 #define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 
 #define HAS_AUTO_REPORTING (ENABLED(AUTO_REPORT_TEMPERATURES) || ENABLED(AUTO_REPORT_SD_STATUS))
 

commit ee253991d4eeecacd022833ca72eff1c344b54ba
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Oct 8 16:39:55 2018 -0400

    Various fixups for single-nozzle filament swap (#12036)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5189529850..326a701af5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1506,42 +1506,20 @@
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
 // Shorthand
 #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
 
 // Add commands that need sub-codes to this list
 #define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS) || ENABLED(POWER_LOSS_RECOVERY)
 
-// Single Nozzle swap on toolchange defaults
-#if ENABLED(SINGLENOZZLE)
-  #ifndef SINGLENOZZLE_SWAP_LENGTH
-    #define SINGLENOZZLE_SWAP_LENGTH 0
-  #endif
-  #ifndef SINGLENOZZLE_SWAP_RETRACT_SPEED
-    #define SINGLENOZZLE_SWAP_RETRACT_SPEED 60.0
-  #endif
-  #ifndef SINGLENOZZLE_SWAP_PRIME_SPEED
-    #define SINGLENOZZLE_SWAP_PRIME_SPEED 60.0
-  #endif
-  #if ENABLED(SINGLENOZZLE_SWAP_PARK)
-    #ifndef SINGLENOZZLE_TOOLCHANGE_POSITION
-      #define SINGLENOZZLE_TOOLCHANGE_POSITION { (X_MIN_POS + 10), (Y_MIN_POS + 10), 5 }
-    #endif
-  #else
-    #ifndef SINGLENOZZLE_TOOLCHANGE_ZRAISE
-      #define SINGLENOZZLE_TOOLCHANGE_ZRAISE 2.0
-    #endif
-  #endif
-#endif
-
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 

commit 74cd6cb4fc90e4c483e7a97a313c0257790f1375
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Oct 7 18:06:14 2018 -0400

    Single nozzle filament change (#11994)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 326a701af5..5189529850 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1506,20 +1506,42 @@
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
 // Shorthand
 #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
 
 // Add commands that need sub-codes to this list
 #define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS) || ENABLED(POWER_LOSS_RECOVERY)
 
+// Single Nozzle swap on toolchange defaults
+#if ENABLED(SINGLENOZZLE)
+  #ifndef SINGLENOZZLE_SWAP_LENGTH
+    #define SINGLENOZZLE_SWAP_LENGTH 0
+  #endif
+  #ifndef SINGLENOZZLE_SWAP_RETRACT_SPEED
+    #define SINGLENOZZLE_SWAP_RETRACT_SPEED 60.0
+  #endif
+  #ifndef SINGLENOZZLE_SWAP_PRIME_SPEED
+    #define SINGLENOZZLE_SWAP_PRIME_SPEED 60.0
+  #endif
+  #if ENABLED(SINGLENOZZLE_SWAP_PARK)
+    #ifndef SINGLENOZZLE_TOOLCHANGE_POSITION
+      #define SINGLENOZZLE_TOOLCHANGE_POSITION { (X_MIN_POS + 10), (Y_MIN_POS + 10), 5 }
+    #endif
+  #else
+    #ifndef SINGLENOZZLE_TOOLCHANGE_ZRAISE
+      #define SINGLENOZZLE_TOOLCHANGE_ZRAISE 2.0
+    #endif
+  #endif
+#endif
+
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 

commit c447d759167bb118c2f26febdae71dd60c64977a
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Sun Oct 7 01:18:10 2018 +0300

    Add support for TMC2660 (#11998)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 16e5f006c8..326a701af5 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -454,21 +454,21 @@
  */
 #define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
 /**
  * Driver Timings
  * NOTE: Driver timing order is longest-to-shortest duration.
  *       Preserve this ordering when adding new drivers.
  */
 
-#define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE))
+#define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE))
 
 #ifndef MINIMUM_STEPPER_DIR_DELAY
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_DIR_DELAY 15000
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_DIR_DELAY 500
@@ -860,34 +860,38 @@
 #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
 #define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE))
 #define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
-#define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
-#define HAS_STALLGUARD  HAS_DRIVER(TMC2130)
-#define AXIS_HAS_STEALTHCHOP(ST) ( AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208) )
-#define AXIS_HAS_STALLGUARD(ST) AXIS_DRIVER_TYPE(ST, TMC2130)
-
-#define USE_SENSORLESS (ENABLED(SENSORLESS_HOMING) || ENABLED(SENSORLESS_PROBING))
-#if USE_SENSORLESS
-  // Disable Z axis sensorless homing if a probe is used to home the Z axis
-  #if HOMING_Z_WITH_PROBE
-    #undef Z_STALL_SENSITIVITY
-  #endif
-  #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
-  #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
-  #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
+#if HAS_TRINAMIC
+  #define TMC_HAS_SPI     (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
+  #define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
+  #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
+  #define AXIS_HAS_SPI(ST)         (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660))
+  #define AXIS_HAS_STALLGUARD(ST)  (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660))
+  #define AXIS_HAS_STEALTHCHOP(ST) (AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208))
+
+  #define USE_SENSORLESS (ENABLED(SENSORLESS_HOMING) || ENABLED(SENSORLESS_PROBING))
+  #if USE_SENSORLESS
+    // Disable Z axis sensorless homing if a probe is used to home the Z axis
+    #if HOMING_Z_WITH_PROBE
+      #undef Z_STALL_SENSITIVITY
+    #endif
+    #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
+    #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
+    #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
+  #endif
 #endif
 
 // Endstops and bed probe
 #define HAS_STOP_TEST(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
 #define HAS_X_MIN HAS_STOP_TEST(X,MIN)
 #define HAS_X_MAX HAS_STOP_TEST(X,MAX)
 #define HAS_Y_MIN HAS_STOP_TEST(Y,MIN)
 #define HAS_Y_MAX HAS_STOP_TEST(Y,MAX)
 #define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
 #define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)

commit c3229e1b3461b6da8373e7a24a7eeb131912a15b
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Wed Oct 3 10:48:49 2018 +0300

    Migrate to a new TMC library (#11943)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0f828451b9..16e5f006c8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -453,66 +453,69 @@
  * ARRAY_BY_HOTENDS based on HOTENDS
  */
 #define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
 /**
  * Driver Timings
  * NOTE: Driver timing order is longest-to-shortest duration.
  *       Preserve this ordering when adding new drivers.
  */
+
+#define TRINAMICS (HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE))
+
 #ifndef MINIMUM_STEPPER_DIR_DELAY
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_DIR_DELAY 15000
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_DIR_DELAY 500
   #elif HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_DIR_DELAY 400
   #elif HAS_DRIVER(A4988)
     #define MINIMUM_STEPPER_DIR_DELAY 200
-  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+  #elif TRINAMICS
     #define MINIMUM_STEPPER_DIR_DELAY 20
   #else
     #define MINIMUM_STEPPER_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
   #endif
 #endif
 
 #ifndef MINIMUM_STEPPER_PULSE
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_PULSE 30
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_PULSE 3
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_PULSE 2
   #elif HAS_DRIVER(A4988) || HAS_DRIVER(LV8729) || HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_PULSE 1
-  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+  #elif TRINAMICS
     #define MINIMUM_STEPPER_PULSE 0
   #else
     #define MINIMUM_STEPPER_PULSE 2
   #endif
 #endif
 
 #ifndef MAXIMUM_STEPPER_RATE
   #if HAS_DRIVER(TB6560)
     #define MAXIMUM_STEPPER_RATE 15000
   #elif HAS_DRIVER(LV8729)
     #define MAXIMUM_STEPPER_RATE 130000
   #elif HAS_DRIVER(TB6600)
     #define MAXIMUM_STEPPER_RATE 150000
   #elif HAS_DRIVER(DRV8825)
     #define MAXIMUM_STEPPER_RATE 250000
-  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+  #elif TRINAMICS
     #define MAXIMUM_STEPPER_RATE 400000
   #elif HAS_DRIVER(A4988)
     #define MAXIMUM_STEPPER_RATE 500000
   #else
     #define MAXIMUM_STEPPER_RATE 250000
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment

commit b30ca652aed417be0ba8857922c1cf2b4df26f2d
Author: AnoNymous <dgdanielf@gmail.com>
Date:   Sun Sep 30 11:59:14 2018 +0200

    Replace MIN# / MAX# with variadic MIN / MAX (#11960)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0561c459a1..0f828451b9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1248,21 +1248,21 @@
   #define MIN_PROBE_EDGE 0
 #endif
 
 #if ENABLED(DELTA)
   /**
    * Delta radius/rod trimmers/angle trimmers
    */
   #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #ifndef DELTA_CALIBRATION_RADIUS
     #ifdef X_PROBE_OFFSET_FROM_EXTRUDER
-      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - MAX3(abs(X_PROBE_OFFSET_FROM_EXTRUDER), abs(Y_PROBE_OFFSET_FROM_EXTRUDER), abs(MIN_PROBE_EDGE)))
+      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - MAX(ABS(X_PROBE_OFFSET_FROM_EXTRUDER), ABS(Y_PROBE_OFFSET_FROM_EXTRUDER), ABS(MIN_PROBE_EDGE)))
     #else
       #define DELTA_CALIBRATION_RADIUS _PROBE_RADIUS
     #endif
   #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
     #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
   #endif

commit 3286325044a7788f12ceb3f3d6cef00dc8b32433
Author: Thomas Moore <tcm0116@gmail.com>
Date:   Sun Sep 9 15:59:12 2018 -0400

    Add TMC2130 sensorless probing

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2591da4913..0561c459a1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -862,28 +862,29 @@
 #define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
 #define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
 #define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
 
 // Trinamic Stepper Drivers
 #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
 #define HAS_STALLGUARD  HAS_DRIVER(TMC2130)
 #define AXIS_HAS_STEALTHCHOP(ST) ( AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208) )
 #define AXIS_HAS_STALLGUARD(ST) AXIS_DRIVER_TYPE(ST, TMC2130)
 
-#if ENABLED(SENSORLESS_HOMING)
+#define USE_SENSORLESS (ENABLED(SENSORLESS_HOMING) || ENABLED(SENSORLESS_PROBING))
+#if USE_SENSORLESS
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
-    #undef Z_HOMING_SENSITIVITY
+    #undef Z_STALL_SENSITIVITY
   #endif
-  #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_HOMING_SENSITIVITY))
-  #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_HOMING_SENSITIVITY))
-  #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_HOMING_SENSITIVITY))
+  #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_STALL_SENSITIVITY))
+  #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_STALL_SENSITIVITY))
+  #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_STALL_SENSITIVITY))
 #endif
 
 // Endstops and bed probe
 #define HAS_STOP_TEST(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
 #define HAS_X_MIN HAS_STOP_TEST(X,MIN)
 #define HAS_X_MAX HAS_STOP_TEST(X,MAX)
 #define HAS_Y_MIN HAS_STOP_TEST(Y,MIN)
 #define HAS_Y_MAX HAS_STOP_TEST(Y,MAX)
 #define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
 #define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)

commit 10590c2f80f267bba4e6b60078968fcda9c20038
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 18 21:16:27 2018 -0500

    Fix some fan conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index bd6f7aa0e8..2591da4913 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -961,22 +961,22 @@
 #define AUTO_5_IS_4 (E5_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_0 (CHAMBER_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_1 (CHAMBER_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_2 (CHAMBER_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_3 (CHAMBER_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_4 (CHAMBER_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_5 (CHAMBER_AUTO_FAN_PIN == E5_AUTO_FAN_PIN)
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
-#define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN)
-#define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN)
+#define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN && E4_AUTO_FAN_PIN != FAN1_PIN && E5_AUTO_FAN_PIN != FAN1_PIN)
+#define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN && E4_AUTO_FAN_PIN != FAN2_PIN && E5_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
 #define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
 #define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
 #define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
 
 #if HAS_SERVOS && !defined(Z_PROBE_SERVO_NR)

commit 1718eff54adefc7cc95851f28df0c7e02eae3a36
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 13 01:35:55 2018 -0500

    Code changes supporting up to 6 extruders

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8e37f38ba8..bd6f7aa0e8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -374,20 +374,36 @@
 #elif TEMP_SENSOR_4 == -1
   #define HEATER_4_USES_AD595
 #elif TEMP_SENSOR_4 == 0
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #elif TEMP_SENSOR_4 > 0
   #define THERMISTORHEATER_4 TEMP_SENSOR_4
   #define HEATER_4_USES_THERMISTOR
 #endif
 
+#if TEMP_SENSOR_5 == -4
+  #define HEATER_5_USES_AD8495
+#elif TEMP_SENSOR_5 == -3
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_5."
+#elif TEMP_SENSOR_5 == -2
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_5."
+#elif TEMP_SENSOR_5 == -1
+  #define HEATER_5_USES_AD595
+#elif TEMP_SENSOR_5 == 0
+  #undef HEATER_5_MINTEMP
+  #undef HEATER_5_MAXTEMP
+#elif TEMP_SENSOR_5 > 0
+  #define THERMISTORHEATER_5 TEMP_SENSOR_5
+  #define HEATER_5_USES_THERMISTOR
+#endif
+
 #if TEMP_SENSOR_BED == -4
   #define HEATER_BED_USES_AD8495
 #elif TEMP_SENSOR_BED == -3
   #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
   #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
   #define HEATER_BED_USES_AD595
 #elif TEMP_SENSOR_BED == 0
   #undef BED_MINTEMP
@@ -834,20 +850,26 @@
 #define HAS_E3_STEP       (PIN_EXISTS(E3_STEP))
 #define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
 #define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
 
 #define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
 #define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
 #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
 #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
+#define HAS_E5_ENABLE     (PIN_EXISTS(E5_ENABLE))
+#define HAS_E5_DIR        (PIN_EXISTS(E5_DIR))
+#define HAS_E5_STEP       (PIN_EXISTS(E5_STEP))
+#define HAS_E5_MICROSTEPS (PIN_EXISTS(E5_MS1))
+#define HAS_SOLENOID_5    (PIN_EXISTS(SOL5))
+
 // Trinamic Stepper Drivers
 #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
 #define HAS_STALLGUARD  HAS_DRIVER(TMC2130)
 #define AXIS_HAS_STEALTHCHOP(ST) ( AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208) )
 #define AXIS_HAS_STALLGUARD(ST) AXIS_DRIVER_TYPE(ST, TMC2130)
 
 #if ENABLED(SENSORLESS_HOMING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_HOMING_SENSITIVITY
@@ -912,37 +934,44 @@
 #define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
 #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
 #define WATCH_THE_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
+#define HAS_AUTO_FAN_5 (HOTENDS > 5 && PIN_EXISTS(E5_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (PIN_EXISTS(CHAMBER_AUTO_FAN))
-#define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_CHAMBER_FAN)
+#define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_FAN_4 || HAS_AUTO_FAN_5 || HAS_AUTO_CHAMBER_FAN)
 #define AUTO_1_IS_0 (E1_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_2_IS_0 (E2_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_2_IS_1 (E2_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
 #define AUTO_3_IS_0 (E3_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_3_IS_1 (E3_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
 #define AUTO_3_IS_2 (E3_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
 #define AUTO_4_IS_0 (E4_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_4_IS_1 (E4_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
 #define AUTO_4_IS_2 (E4_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
 #define AUTO_4_IS_3 (E4_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
+#define AUTO_5_IS_0 (E5_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+#define AUTO_5_IS_1 (E5_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+#define AUTO_5_IS_2 (E5_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
+#define AUTO_5_IS_3 (E5_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
+#define AUTO_5_IS_4 (E5_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_0 (CHAMBER_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_1 (CHAMBER_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_2 (CHAMBER_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_3 (CHAMBER_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_4 (CHAMBER_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
+#define AUTO_CHAMBER_IS_5 (CHAMBER_AUTO_FAN_PIN == E5_AUTO_FAN_PIN)
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
@@ -959,21 +988,21 @@
 
 // User Interface
 #define HAS_HOME (PIN_EXISTS(HOME))
 #define HAS_KILL (PIN_EXISTS(KILL))
 #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
 #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
-#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS)
+#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS || HAS_E5_MICROSTEPS)
 #define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 
 #define HAS_AUTO_REPORTING (ENABLED(AUTO_REPORT_TEMPERATURES) || ENABLED(AUTO_REPORT_SD_STATUS))
 
@@ -1015,20 +1044,23 @@
 
 #define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, (v) ^ HEATER_0_INVERTING)
 #if HOTENDS > 1 || ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, (v) ^ HEATER_1_INVERTING)
   #if HOTENDS > 2
     #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, (v) ^ HEATER_2_INVERTING)
     #if HOTENDS > 3
       #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, (v) ^ HEATER_3_INVERTING)
       #if HOTENDS > 4
         #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, (v) ^ HEATER_4_INVERTING)
+        #if HOTENDS > 5
+          #define WRITE_HEATER_5(v) WRITE(HEATER_5_PIN, (v) ^ HEATER_5_INVERTING)
+        #endif // HOTENDS > 5
       #endif // HOTENDS > 4
     #endif // HOTENDS > 3
   #endif // HOTENDS > 2
 #endif // HOTENDS > 1
 #if ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
 #else
   #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
 #endif
 

commit c437bb08f12f1c0535cc78a761b49a18f2dc2a12
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Sun Sep 16 22:24:15 2018 -0400

    Overhaul of the planner (#11578)
    
    - Move FWRETRACT to the planner
    - Combine leveling, skew, etc. in a single modifier method
    - Have kinematic and non-kinematic moves call one planner method

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index eea96adbe9..8e37f38ba8 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -42,20 +42,22 @@
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
 #define IS_SCARA (ENABLED(MORGAN_SCARA) || ENABLED(MAKERARM_SCARA))
 #define IS_KINEMATIC (ENABLED(DELTA) || IS_SCARA)
 #define IS_CARTESIAN !IS_KINEMATIC
 
+#define HAS_CLASSIC_JERK (IS_KINEMATIC || DISABLED(JUNCTION_DEVIATION))
+
 /**
  * Axis lengths and center
  */
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
 
 // Defined only if the sanity-check is bypassed
 #ifndef X_BED_SIZE
   #define X_BED_SIZE X_MAX_LENGTH
@@ -1166,24 +1168,23 @@
  * Set granular options based on the specific type of leveling
  */
 #define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
 #define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
-#define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_SEGMENTED || ENABLED(SKEW_CORRECTION))
+#define PLANNER_LEVELING      (HAS_LEVELING && DISABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
-#define HAS_UBL_AND_CURVES (ENABLED(AUTO_BED_LEVELING_UBL) && !PLANNER_LEVELING && (ENABLED(ARC_SUPPORT) || ENABLED(BEZIER_CURVE_SUPPORT)))
-#define HAS_FEEDRATE_SCALING (ENABLED(SCARA_FEEDRATE_SCALING) || ENABLED(DELTA_FEEDRATE_SCALING))
+#define HAS_POSITION_MODIFIERS (ENABLED(FWRETRACT) || HAS_LEVELING || ENABLED(SKEW_CORRECTION))
 
 #if ENABLED(AUTO_BED_LEVELING_UBL)
   #undef LCD_BED_LEVELING
 #endif
 
 /**
  * Heater & Fan Pausing
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF

commit 1a6f2b29b8dd3bc8e6ef56d4f376f49cacfc8785
Author: Holger MuÃàller <holger@mueller-gelff.de>
Date:   Tue Jun 19 18:55:49 2018 +0200

    Add support for Triple-Z steppers/endstops

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f6345f3ecc..eea96adbe9 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -604,21 +604,21 @@
     #define Y2_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
 // Is an endstop plug used for the Y2 endstop or the bed probe?
 #define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
 
 /**
  * Z_DUAL_ENDSTOPS endstop reassignment
  */
-#if ENABLED(Z_DUAL_ENDSTOPS)
+#if Z_MULTI_ENDSTOPS
   #if Z_HOME_DIR > 0
     #if Z2_USE_ENDSTOP == _XMIN_
       #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #define Z2_MAX_PIN X_MIN_PIN
     #elif Z2_USE_ENDSTOP == _XMAX_
       #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #define Z2_MAX_PIN X_MAX_PIN
     #elif Z2_USE_ENDSTOP == _YMIN_
       #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #define Z2_MAX_PIN Y_MIN_PIN
@@ -654,23 +654,78 @@
     #elif Z2_USE_ENDSTOP == _ZMAX_
       #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #define Z2_MIN_PIN Z_MAX_PIN
     #else
       #define Z2_MIN_ENDSTOP_INVERTING false
     #endif
     #define Z2_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
+#if ENABLED(Z_TRIPLE_ENDSTOPS)
+  #if Z_HOME_DIR > 0
+    #if Z3_USE_ENDSTOP == _XMIN_
+      #define Z3_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #define Z3_MAX_PIN X_MIN_PIN
+    #elif Z3_USE_ENDSTOP == _XMAX_
+      #define Z3_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #define Z3_MAX_PIN X_MAX_PIN
+    #elif Z3_USE_ENDSTOP == _YMIN_
+      #define Z3_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #define Z3_MAX_PIN Y_MIN_PIN
+    #elif Z3_USE_ENDSTOP == _YMAX_
+      #define Z3_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #define Z3_MAX_PIN Y_MAX_PIN
+    #elif Z3_USE_ENDSTOP == _ZMIN_
+      #define Z3_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #define Z3_MAX_PIN Z_MIN_PIN
+    #elif Z3_USE_ENDSTOP == _ZMAX_
+      #define Z3_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #define Z3_MAX_PIN Z_MAX_PIN
+    #else
+      #define Z3_MAX_ENDSTOP_INVERTING false
+    #endif
+    #define Z3_MIN_ENDSTOP_INVERTING false
+  #else
+    #if Z3_USE_ENDSTOP == _XMIN_
+      #define Z3_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #define Z3_MIN_PIN X_MIN_PIN
+    #elif Z3_USE_ENDSTOP == _XMAX_
+      #define Z3_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #define Z3_MIN_PIN X_MAX_PIN
+    #elif Z3_USE_ENDSTOP == _YMIN_
+      #define Z3_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #define Z3_MIN_PIN Y_MIN_PIN
+    #elif Z3_USE_ENDSTOP == _YMAX_
+      #define Z3_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #define Z3_MIN_PIN Y_MAX_PIN
+    #elif Z3_USE_ENDSTOP == _ZMIN_
+      #define Z3_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #define Z3_MIN_PIN Z_MIN_PIN
+    #elif Z3_USE_ENDSTOP == _ZMAX_
+      #define Z3_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #define Z3_MIN_PIN Z_MAX_PIN
+    #else
+      #define Z3_MIN_ENDSTOP_INVERTING false
+    #endif
+    #define Z3_MAX_ENDSTOP_INVERTING false
+  #endif
+#endif
+
 // Is an endstop plug used for the Z2 endstop or the bed probe?
 #define IS_Z2_OR_PROBE(A,M) ( \
-     (ENABLED(Z_DUAL_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_) \
+     (Z_MULTI_ENDSTOPS && Z2_USE_ENDSTOP == _##A##M##_) \
+  || (ENABLED(Z_MIN_PROBE_ENDSTOP) && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
+
+// Is an endstop plug used for the Z3 endstop or the bed probe?
+#define IS_Z3_OR_PROBE(A,M) ( \
+     (ENABLED(Z_TRIPLE_ENDSTOPS) && Z3_USE_ENDSTOP == _##A##M##_) \
   || (ENABLED(Z_MIN_PROBE_ENDSTOP) && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
  */
 #if ENABLED(ENDSTOPPULLUPS)
   #if ENABLED(USE_XMAX_PLUG)
     #define ENDSTOPPULLUP_XMAX
   #endif
   #if ENABLED(USE_YMAX_PLUG)
@@ -742,20 +797,24 @@
 #define HAS_Z_ENABLE      (PIN_EXISTS(Z_ENABLE))
 #define HAS_Z_DIR         (PIN_EXISTS(Z_DIR))
 #define HAS_Z_STEP        (PIN_EXISTS(Z_STEP))
 #define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
 
 #define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE))
 #define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
 #define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
 #define HAS_Z2_MICROSTEPS (PIN_EXISTS(Z2_MS1))
 
+#define HAS_Z3_ENABLE     (PIN_EXISTS(Z3_ENABLE))
+#define HAS_Z3_DIR        (PIN_EXISTS(Z3_DIR))
+#define HAS_Z3_STEP       (PIN_EXISTS(Z3_STEP))
+
 // Extruder steppers and solenoids
 #define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE))
 #define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
 #define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
 #define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
 #define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
 
 #define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE))
 #define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))
 #define HAS_E1_STEP       (PIN_EXISTS(E1_STEP))
@@ -803,20 +862,22 @@
 #define HAS_Y_MIN HAS_STOP_TEST(Y,MIN)
 #define HAS_Y_MAX HAS_STOP_TEST(Y,MAX)
 #define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
 #define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
+#define HAS_Z3_MIN (PIN_EXISTS(Z3_MIN))
+#define HAS_Z3_MAX (PIN_EXISTS(Z3_MAX))
 #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
 
 // ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
 #define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
 #define HAS_TEMP_ADC_0 HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)

commit d1c9517903da3e7ab84e34ffb2c23d0772f2ce8c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Aug 24 21:26:29 2018 -0500

    Followup to hotend_offset[Z] patch

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6cca5426df..f6345f3ecc 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -406,30 +406,29 @@
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define HEATER_CHAMBER_USES_THERMISTOR
 #endif
 
 #define HOTEND_USES_THERMISTOR (ENABLED(HEATER_0_USES_THERMISTOR) || ENABLED(HEATER_1_USES_THERMISTOR) || ENABLED(HEATER_2_USES_THERMISTOR) || ENABLED(HEATER_3_USES_THERMISTOR) || ENABLED(HEATER_4_USES_THERMISTOR))
 
 /**
  * Default hotend offsets, if not defined
  */
-#define HAS_HOTEND_OFFSET_Z (HOTENDS > 1 && (ENABLED(DUAL_X_CARRIAGE) || ENABLED(SWITCHING_NOZZLE) || ENABLED(PARKING_EXTRUDER)))
 #if HOTENDS > 1
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
   #endif
-  #if HAS_HOTEND_OFFSET_Z && !defined(HOTEND_OFFSET_Z)
-    #define HOTEND_OFFSET_Z { 0 }
+  #ifndef HOTEND_OFFSET_Z
+    #define HOTEND_OFFSET_Z { 0 } // Z offsets for each extruder
   #endif
 #endif
 
 /**
  * ARRAY_BY_EXTRUDERS based on EXTRUDERS
  */
 #define ARRAY_BY_EXTRUDERS(...) ARRAY_N(EXTRUDERS, __VA_ARGS__)
 #define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
 
 /**

commit 6964e1a95a8ade26f8432065d92047efc0ac4653
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Aug 14 00:55:22 2018 -0500

    Clean up trailing whitespace

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9c7f481826..6cca5426df 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -446,21 +446,21 @@
 #ifndef MINIMUM_STEPPER_DIR_DELAY
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_DIR_DELAY 15000
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_DIR_DELAY 500
   #elif HAS_DRIVER(A5984)
-    #define MINIMUM_STEPPER_DIR_DELAY 400  
+    #define MINIMUM_STEPPER_DIR_DELAY 400
   #elif HAS_DRIVER(A4988)
     #define MINIMUM_STEPPER_DIR_DELAY 200
   #elif HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
     #define MINIMUM_STEPPER_DIR_DELAY 20
   #else
     #define MINIMUM_STEPPER_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
   #endif
 #endif
 
 #ifndef MINIMUM_STEPPER_PULSE

commit b328fb4dc9ff9796715aace679d15799c9769e4b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 10 00:30:28 2018 -0500

    Treat TMC2660 like non-TMC (#11508)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 742b6535ea..9c7f481826 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -449,53 +449,53 @@
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_DIR_DELAY 500
   #elif HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_DIR_DELAY 400  
   #elif HAS_DRIVER(A4988)
     #define MINIMUM_STEPPER_DIR_DELAY 200
-  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
     #define MINIMUM_STEPPER_DIR_DELAY 20
   #else
     #define MINIMUM_STEPPER_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
   #endif
 #endif
 
 #ifndef MINIMUM_STEPPER_PULSE
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_PULSE 30
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_PULSE 3
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_PULSE 2
   #elif HAS_DRIVER(A4988) || HAS_DRIVER(LV8729) || HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_PULSE 1
-  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
     #define MINIMUM_STEPPER_PULSE 0
   #else
     #define MINIMUM_STEPPER_PULSE 2
   #endif
 #endif
 
 #ifndef MAXIMUM_STEPPER_RATE
   #if HAS_DRIVER(TB6560)
     #define MAXIMUM_STEPPER_RATE 15000
   #elif HAS_DRIVER(LV8729)
     #define MAXIMUM_STEPPER_RATE 130000
   #elif HAS_DRIVER(TB6600)
     #define MAXIMUM_STEPPER_RATE 150000
   #elif HAS_DRIVER(DRV8825)
     #define MAXIMUM_STEPPER_RATE 250000
-  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2660) || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
     #define MAXIMUM_STEPPER_RATE 400000
   #elif HAS_DRIVER(A4988)
     #define MAXIMUM_STEPPER_RATE 500000
   #else
     #define MAXIMUM_STEPPER_RATE 250000
   #endif
 #endif
 
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
@@ -776,23 +776,23 @@
 #define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
 
 #define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
 #define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
 #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
 #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
 // Trinamic Stepper Drivers
 #define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
-#define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
+#define HAS_STALLGUARD  HAS_DRIVER(TMC2130)
 #define AXIS_HAS_STEALTHCHOP(ST) ( AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208) )
-#define AXIS_HAS_STALLGUARD(ST) ( AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660) )
+#define AXIS_HAS_STALLGUARD(ST) AXIS_DRIVER_TYPE(ST, TMC2130)
 
 #if ENABLED(SENSORLESS_HOMING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_HOMING_SENSITIVITY
   #endif
   #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_HOMING_SENSITIVITY))
   #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_HOMING_SENSITIVITY))
   #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_HOMING_SENSITIVITY))
 #endif

commit a1a5367380931a4c4c5b3eb0543dc8d7e57aa4c5
Author: Greg Nutt <gmnutt@hotmail.com>
Date:   Tue Aug 7 20:01:56 2018 -0400

    Smoothieboard V1.0/1.1 and A5984 support

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9ba0b5db28..742b6535ea 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -445,37 +445,39 @@
  */
 #ifndef MINIMUM_STEPPER_DIR_DELAY
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_DIR_DELAY 15000
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_DIR_DELAY 1500
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_DIR_DELAY 650
   #elif HAS_DRIVER(LV8729)
     #define MINIMUM_STEPPER_DIR_DELAY 500
+  #elif HAS_DRIVER(A5984)
+    #define MINIMUM_STEPPER_DIR_DELAY 400  
   #elif HAS_DRIVER(A4988)
     #define MINIMUM_STEPPER_DIR_DELAY 200
   #elif HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
     #define MINIMUM_STEPPER_DIR_DELAY 20
   #else
     #define MINIMUM_STEPPER_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
   #endif
 #endif
 
 #ifndef MINIMUM_STEPPER_PULSE
   #if HAS_DRIVER(TB6560)
     #define MINIMUM_STEPPER_PULSE 30
   #elif HAS_DRIVER(TB6600)
     #define MINIMUM_STEPPER_PULSE 3
   #elif HAS_DRIVER(DRV8825)
     #define MINIMUM_STEPPER_PULSE 2
-  #elif HAS_DRIVER(A4988) || HAS_DRIVER(LV8729)
+  #elif HAS_DRIVER(A4988) || HAS_DRIVER(LV8729) || HAS_DRIVER(A5984)
     #define MINIMUM_STEPPER_PULSE 1
   #elif HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
     #define MINIMUM_STEPPER_PULSE 0
   #else
     #define MINIMUM_STEPPER_PULSE 2
   #endif
 #endif
 
 #ifndef MAXIMUM_STEPPER_RATE
   #if HAS_DRIVER(TB6560)

commit 9c62c47579fdefccdae5bb58dc706a58689eed0f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 3 20:47:29 2018 -0500

    [2.0.x] Fix Dual X Carriage tool change crash (#11447)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 03214b3c1d..9ba0b5db28 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -78,20 +78,32 @@
   #define Y_CENTER ((Y_BED_SIZE) / 2)
 #endif
 #define Z_CENTER ((Z_MIN_POS + Z_MAX_POS) / 2)
 
 // Get the linear boundaries of the bed
 #define X_MIN_BED (X_CENTER - (X_BED_SIZE) / 2)
 #define X_MAX_BED (X_CENTER + (X_BED_SIZE) / 2)
 #define Y_MIN_BED (Y_CENTER - (Y_BED_SIZE) / 2)
 #define Y_MAX_BED (Y_CENTER + (Y_BED_SIZE) / 2)
 
+/**
+ * Dual X Carriage
+ */
+#if ENABLED(DUAL_X_CARRIAGE)
+  #ifndef X1_MIN_POS
+    #define X1_MIN_POS X_MIN_POS
+  #endif
+  #ifndef X1_MAX_POS
+    #define X1_MAX_POS X_BED_SIZE
+  #endif
+#endif
+
 /**
  * CoreXY, CoreXZ, and CoreYZ - and their reverse
  */
 #define CORE_IS_XY (ENABLED(COREXY) || ENABLED(COREYX))
 #define CORE_IS_XZ (ENABLED(COREXZ) || ENABLED(COREZX))
 #define CORE_IS_YZ (ENABLED(COREYZ) || ENABLED(COREZY))
 #define IS_CORE (CORE_IS_XY || CORE_IS_XZ || CORE_IS_YZ)
 #if IS_CORE
   #if CORE_IS_XY
     #define CORE_AXIS_1 A_AXIS

commit fbcdf5eaeb4f2265fd43097ab6c652a89842d8e7
Author: teemuatlut <teemu.mantykallio@live.fi>
Date:   Sat Jul 14 14:13:06 2018 +0300

    Simplify stepper driver per-axis selection

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 24d4015f6c..03214b3c1d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -419,20 +419,77 @@
  */
 #define ARRAY_BY_EXTRUDERS(...) ARRAY_N(EXTRUDERS, __VA_ARGS__)
 #define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
 
 /**
  * ARRAY_BY_HOTENDS based on HOTENDS
  */
 #define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
+/**
+ * Driver Timings
+ * NOTE: Driver timing order is longest-to-shortest duration.
+ *       Preserve this ordering when adding new drivers.
+ */
+#ifndef MINIMUM_STEPPER_DIR_DELAY
+  #if HAS_DRIVER(TB6560)
+    #define MINIMUM_STEPPER_DIR_DELAY 15000
+  #elif HAS_DRIVER(TB6600)
+    #define MINIMUM_STEPPER_DIR_DELAY 1500
+  #elif HAS_DRIVER(DRV8825)
+    #define MINIMUM_STEPPER_DIR_DELAY 650
+  #elif HAS_DRIVER(LV8729)
+    #define MINIMUM_STEPPER_DIR_DELAY 500
+  #elif HAS_DRIVER(A4988)
+    #define MINIMUM_STEPPER_DIR_DELAY 200
+  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+    #define MINIMUM_STEPPER_DIR_DELAY 20
+  #else
+    #define MINIMUM_STEPPER_DIR_DELAY 0   // Expect at least 10¬µS since one Stepper ISR must transpire
+  #endif
+#endif
+
+#ifndef MINIMUM_STEPPER_PULSE
+  #if HAS_DRIVER(TB6560)
+    #define MINIMUM_STEPPER_PULSE 30
+  #elif HAS_DRIVER(TB6600)
+    #define MINIMUM_STEPPER_PULSE 3
+  #elif HAS_DRIVER(DRV8825)
+    #define MINIMUM_STEPPER_PULSE 2
+  #elif HAS_DRIVER(A4988) || HAS_DRIVER(LV8729)
+    #define MINIMUM_STEPPER_PULSE 1
+  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+    #define MINIMUM_STEPPER_PULSE 0
+  #else
+    #define MINIMUM_STEPPER_PULSE 2
+  #endif
+#endif
+
+#ifndef MAXIMUM_STEPPER_RATE
+  #if HAS_DRIVER(TB6560)
+    #define MAXIMUM_STEPPER_RATE 15000
+  #elif HAS_DRIVER(LV8729)
+    #define MAXIMUM_STEPPER_RATE 130000
+  #elif HAS_DRIVER(TB6600)
+    #define MAXIMUM_STEPPER_RATE 150000
+  #elif HAS_DRIVER(DRV8825)
+    #define MAXIMUM_STEPPER_RATE 250000
+  #elif HAS_TRINAMIC || HAS_DRIVER(TMC2130_STANDALONE) || HAS_DRIVER(TMC2208_STANDALONE) || HAS_DRIVER(TMC26X_STANDALONE) || HAS_DRIVER(TMC2660_STANDALONE)
+    #define MAXIMUM_STEPPER_RATE 400000
+  #elif HAS_DRIVER(A4988)
+    #define MAXIMUM_STEPPER_RATE 500000
+  #else
+    #define MAXIMUM_STEPPER_RATE 250000
+  #endif
+#endif
+
 /**
  * X_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(X_DUAL_ENDSTOPS)
   #if X_HOME_DIR > 0
     #if X2_USE_ENDSTOP == _XMIN_
       #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #define X2_MAX_PIN X_MIN_PIN
     #elif X2_USE_ENDSTOP == _XMAX_
       #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
@@ -704,41 +761,33 @@
 #define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
 #define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
 
 #define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
 #define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
 #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
 #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
 // Trinamic Stepper Drivers
-#define HAS_TRINAMIC (ENABLED(HAVE_TMC2130) || ENABLED(HAVE_TMC2208) || ENABLED(IS_TRAMS))
-#define  X_IS_TRINAMIC (ENABLED( X_IS_TMC2130) || ENABLED( X_IS_TMC2208) || ENABLED(IS_TRAMS))
-#define X2_IS_TRINAMIC (ENABLED(X2_IS_TMC2130) || ENABLED(X2_IS_TMC2208))
-#define  Y_IS_TRINAMIC (ENABLED( Y_IS_TMC2130) || ENABLED( Y_IS_TMC2208) || ENABLED(IS_TRAMS))
-#define Y2_IS_TRINAMIC (ENABLED(Y2_IS_TMC2130) || ENABLED(Y2_IS_TMC2208))
-#define  Z_IS_TRINAMIC (ENABLED( Z_IS_TMC2130) || ENABLED( Z_IS_TMC2208) || ENABLED(IS_TRAMS))
-#define Z2_IS_TRINAMIC (ENABLED(Z2_IS_TMC2130) || ENABLED(Z2_IS_TMC2208))
-#define E0_IS_TRINAMIC (ENABLED(E0_IS_TMC2130) || ENABLED(E0_IS_TMC2208) || ENABLED(IS_TRAMS))
-#define E1_IS_TRINAMIC (ENABLED(E1_IS_TMC2130) || ENABLED(E1_IS_TMC2208))
-#define E2_IS_TRINAMIC (ENABLED(E2_IS_TMC2130) || ENABLED(E2_IS_TMC2208))
-#define E3_IS_TRINAMIC (ENABLED(E3_IS_TMC2130) || ENABLED(E3_IS_TMC2208))
-#define E4_IS_TRINAMIC (ENABLED(E4_IS_TMC2130) || ENABLED(E4_IS_TMC2208))
+#define HAS_STEALTHCHOP (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2208))
+#define HAS_STALLGUARD  (HAS_DRIVER(TMC2130) || HAS_DRIVER(TMC2660))
+#define AXIS_HAS_STEALTHCHOP(ST) ( AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2208) )
+#define AXIS_HAS_STALLGUARD(ST) ( AXIS_DRIVER_TYPE(ST, TMC2130) || AXIS_DRIVER_TYPE(ST, TMC2660) )
 
 #if ENABLED(SENSORLESS_HOMING)
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_HOMING_SENSITIVITY
   #endif
-  #define X_SENSORLESS (ENABLED(X_IS_TMC2130) && defined(X_HOMING_SENSITIVITY))
-  #define Y_SENSORLESS (ENABLED(Y_IS_TMC2130) && defined(Y_HOMING_SENSITIVITY))
-  #define Z_SENSORLESS (ENABLED(Z_IS_TMC2130) && defined(Z_HOMING_SENSITIVITY))
+  #define X_SENSORLESS (AXIS_HAS_STALLGUARD(X) && defined(X_HOMING_SENSITIVITY))
+  #define Y_SENSORLESS (AXIS_HAS_STALLGUARD(Y) && defined(Y_HOMING_SENSITIVITY))
+  #define Z_SENSORLESS (AXIS_HAS_STALLGUARD(Z) && defined(Z_HOMING_SENSITIVITY))
 #endif
 
 // Endstops and bed probe
 #define HAS_STOP_TEST(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
 #define HAS_X_MIN HAS_STOP_TEST(X,MIN)
 #define HAS_X_MAX HAS_STOP_TEST(X,MAX)
 #define HAS_Y_MIN HAS_STOP_TEST(Y,MIN)
 #define HAS_Y_MAX HAS_STOP_TEST(Y,MAX)
 #define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
 #define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)

commit 25e2ca88964a0f8156ccc385393102feec5443d3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jul 12 21:36:24 2018 -0500

    Add Z_CLEARANCE_MULTI_PROBE
    
    Co-Authored-By: nightgryphon <ngryph@gmail.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b9972e2bcc..24d4015f6c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1301,27 +1301,33 @@
 /**
  * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
  */
 #ifndef Z_HOMING_HEIGHT
   #ifndef Z_CLEARANCE_BETWEEN_PROBES
     #define Z_HOMING_HEIGHT 0
   #else
     #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
   #endif
 #endif
-#ifndef Z_CLEARANCE_BETWEEN_PROBES
-  #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
-#endif
-#if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
-  #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
-#else
-  #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
+
+#if PROBE_SELECTED
+  #ifndef Z_CLEARANCE_BETWEEN_PROBES
+    #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
+  #endif
+  #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
+    #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+  #else
+    #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
+  #endif
+  #ifndef Z_CLEARANCE_MULTI_PROBE
+    #define Z_CLEARANCE_MULTI_PROBE Z_CLEARANCE_BETWEEN_PROBES
+  #endif
 #endif
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
 #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)

commit 68e6650df737450bfc469ce5228e9babea4a8966
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jul 4 18:41:41 2018 -0500

    Remove Quake Fast Inverse SQRT (it isn't faster)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 417fc59d96..b9972e2bcc 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1346,39 +1346,20 @@
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 
-// Use float instead of double. Needs profiling.
-#if defined(ARDUINO_ARCH_SAM) && ENABLED(DELTA_FAST_SQRT)
-  #undef ATAN2
-  #undef FABS
-  #undef POW
-  #undef SQRT
-  #undef CEIL
-  #undef FLOOR
-  #undef LROUND
-  #undef FMOD
-  #define ATAN2(y, x) atan2f(y, x)
-  #define POW(x, y) powf(x, y)
-  #define SQRT(x) sqrtf(x)
-  #define CEIL(x) ceilf(x)
-  #define FLOOR(x) floorf(x)
-  #define LROUND(x) lroundf(x)
-  #define FMOD(x, y) fmodf(x, y)
-#endif
-
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ENABLED(SCROLL_LONG_FILENAMES)
   #define MAX_VFAT_ENTRIES (5)
 #else
   #define MAX_VFAT_ENTRIES (2)
 #endif
 
 // Set defaults for unspecified LED user colors
 #if ENABLED(LED_CONTROL_MENU)
   #ifndef LED_USER_PRESET_RED

commit 8eaac0dab37b4376ac06f1fefd469cdd6bc80673
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jun 30 13:44:27 2018 -0500

    Add delta feedrate scaling (#11153)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8a9f5e8959..417fc59d96 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1046,20 +1046,21 @@
 #define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
 #define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_SEGMENTED || ENABLED(SKEW_CORRECTION))
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #define HAS_UBL_AND_CURVES (ENABLED(AUTO_BED_LEVELING_UBL) && !PLANNER_LEVELING && (ENABLED(ARC_SUPPORT) || ENABLED(BEZIER_CURVE_SUPPORT)))
+#define HAS_FEEDRATE_SCALING (ENABLED(SCARA_FEEDRATE_SCALING) || ENABLED(DELTA_FEEDRATE_SCALING))
 
 #if ENABLED(AUTO_BED_LEVELING_UBL)
   #undef LCD_BED_LEVELING
 #endif
 
 /**
  * Heater & Fan Pausing
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF

commit 1b8973eb1c5a78cc07471c2fb7316210e1cad068
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jun 27 23:41:22 2018 -0500

    Fix up microsteps conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 403d4202fb..8a9f5e8959 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -650,38 +650,41 @@
 
 // Steppers
 #define HAS_X_ENABLE      (PIN_EXISTS(X_ENABLE))
 #define HAS_X_DIR         (PIN_EXISTS(X_DIR))
 #define HAS_X_STEP        (PIN_EXISTS(X_STEP))
 #define HAS_X_MICROSTEPS  (PIN_EXISTS(X_MS1))
 
 #define HAS_X2_ENABLE     (PIN_EXISTS(X2_ENABLE))
 #define HAS_X2_DIR        (PIN_EXISTS(X2_DIR))
 #define HAS_X2_STEP       (PIN_EXISTS(X2_STEP))
-#define HAS_Y_MICROSTEPS  (PIN_EXISTS(Y_MS1))
+#define HAS_X2_MICROSTEPS (PIN_EXISTS(X2_MS1))
 
 #define HAS_Y_ENABLE      (PIN_EXISTS(Y_ENABLE))
 #define HAS_Y_DIR         (PIN_EXISTS(Y_DIR))
 #define HAS_Y_STEP        (PIN_EXISTS(Y_STEP))
-#define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
+#define HAS_Y_MICROSTEPS  (PIN_EXISTS(Y_MS1))
 
 #define HAS_Y2_ENABLE     (PIN_EXISTS(Y2_ENABLE))
 #define HAS_Y2_DIR        (PIN_EXISTS(Y2_DIR))
 #define HAS_Y2_STEP       (PIN_EXISTS(Y2_STEP))
+#define HAS_Y2_MICROSTEPS (PIN_EXISTS(Y2_MS1))
 
 #define HAS_Z_ENABLE      (PIN_EXISTS(Z_ENABLE))
 #define HAS_Z_DIR         (PIN_EXISTS(Z_DIR))
 #define HAS_Z_STEP        (PIN_EXISTS(Z_STEP))
+#define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
 
 #define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE))
 #define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
 #define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
+#define HAS_Z2_MICROSTEPS (PIN_EXISTS(Z2_MS1))
 
 // Extruder steppers and solenoids
 #define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE))
 #define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
 #define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
 #define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
 #define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
 
 #define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE))
 #define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))

commit 7a84b0379698c17274348c4d5b64890b503a0081
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jun 20 03:15:04 2018 -0500

    Use MIN/MAX in post-conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0f6feb1a90..403d4202fb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1125,24 +1125,24 @@
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #define _PROBE_RADIUS (SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define _MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
   #define _MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
   #define _MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define _MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
 
 #else
 
   // Boundaries for Cartesian probing based on bed limits
-  #define _MIN_PROBE_X (max(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MIN_PROBE_Y (max(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MAX_PROBE_X (min(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MAX_PROBE_Y (min(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MIN_PROBE_X (MAX(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MIN_PROBE_Y (MAX(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MAX_PROBE_X (MIN(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MAX_PROBE_Y (MIN(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
 
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 // These may be overridden in Configuration.h if a smaller area is desired
 #ifndef MIN_PROBE_X
   #define MIN_PROBE_X _MIN_PROBE_X
@@ -1165,29 +1165,29 @@
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
     #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
     #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
     #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
     #if ENABLED(AUTO_BED_LEVELING_UBL)
-      #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
-      #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
-      #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS))
-      #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
+      #define _MESH_MIN_X (MAX(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
+      #define _MESH_MIN_Y (MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
+      #define _MESH_MAX_X (MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS))
+      #define _MESH_MAX_Y (MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
-      #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-      #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MIN_X (MAX(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MIN_Y (MAX(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MAX_X (MIN(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MAX_Y (MIN(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
     #endif
   #endif
 
   // These may be overridden in Configuration.h if a smaller area is desired
   #ifndef MESH_MIN_X
     #define MESH_MIN_X _MESH_MIN_X
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif

commit 0d79128c8d6830c967f8f6091a40dcd65d7c6a53
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 12 17:28:57 2018 -0500

    Localize stepper-specific defines

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index dd018a1154..0f6feb1a90 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1437,156 +1437,11 @@
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
 #if ENABLED(G29_RETRY_AND_RECOVER)
   #define USE_EXECUTE_COMMANDS_IMMEDIATE
 #endif
 
-// Calculate a default maximum stepper rate, if not supplied
-#ifndef MAXIMUM_STEPPER_RATE
-  #if MINIMUM_STEPPER_PULSE
-    #define MAXIMUM_STEPPER_RATE (1000000UL / (2UL * (MINIMUM_STEPPER_PULSE)))
-  #else
-    #define MAXIMUM_STEPPER_RATE 500000UL
-  #endif
-#endif
-
-//
-// Estimate the amount of time the ISR will take to execute
-//
-#ifdef CPU_32_BIT
-
-  // The base ISR takes 792 cycles
-  #define ISR_BASE_CYCLES  792UL
-
-  // Linear advance base time is 64 cycles
-  #if ENABLED(LIN_ADVANCE)
-    #define ISR_LA_BASE_CYCLES 64UL
-  #else
-    #define ISR_LA_BASE_CYCLES 0UL
-  #endif
-
-  // S curve interpolation adds 40 cycles
-  #if ENABLED(S_CURVE_ACCELERATION)
-    #define ISR_S_CURVE_CYCLES 40UL
-  #else
-    #define ISR_S_CURVE_CYCLES 0UL
-  #endif
-
-  // Stepper Loop base cycles
-  #define ISR_LOOP_BASE_CYCLES 4UL
-
-  // And each stepper takes 16 cycles
-  #define ISR_STEPPER_CYCLES 16UL
-
-#else
-
-  // The base ISR takes 752 cycles
-  #define ISR_BASE_CYCLES  752UL
-
-  // Linear advance base time is 32 cycles
-  #if ENABLED(LIN_ADVANCE)
-    #define ISR_LA_BASE_CYCLES 32UL
-  #else
-    #define ISR_LA_BASE_CYCLES 0UL
-  #endif
-
-  // S curve interpolation adds 160 cycles
-  #if ENABLED(S_CURVE_ACCELERATION)
-    #define ISR_S_CURVE_CYCLES 160UL
-  #else
-    #define ISR_S_CURVE_CYCLES 0UL
-  #endif
-
-  // Stepper Loop base cycles
-  #define ISR_LOOP_BASE_CYCLES 32UL
-
-  // And each stepper takes 88 cycles
-  #define ISR_STEPPER_CYCLES 88UL
-
-#endif
-
-// For each stepper, we add its time
-#ifdef HAS_X_STEP
-  #define ISR_X_STEPPER_CYCLES ISR_STEPPER_CYCLES
-#else
-  #define ISR_X_STEPPER_CYCLES 0UL
-#endif
-
-// For each stepper, we add its time
-#ifdef HAS_Y_STEP
-  #define ISR_Y_STEPPER_CYCLES ISR_STEPPER_CYCLES
-#else
-  #define ISR_Y_STEPPER_CYCLES 0UL
-#endif
-
-// For each stepper, we add its time
-#ifdef HAS_Z_STEP
-  #define ISR_Z_STEPPER_CYCLES ISR_STEPPER_CYCLES
-#else
-  #define ISR_Z_STEPPER_CYCLES 0UL
-#endif
-
-// E is always interpolated, even for mixing extruders
-#define ISR_E_STEPPER_CYCLES ISR_STEPPER_CYCLES
-
-// If linear advance is disabled, then the loop also handles them
-#if DISABLED(LIN_ADVANCE) && ENABLED(MIXING_EXTRUDER)
-  #define ISR_MIXING_STEPPER_CYCLES ((MIXING_STEPPERS) * ISR_STEPPER_CYCLES)
-#else
-  #define ISR_MIXING_STEPPER_CYCLES  0UL
-#endif
-
-// And the total minimum loop time is, without including the base
-#define MIN_ISR_LOOP_CYCLES (ISR_X_STEPPER_CYCLES + ISR_Y_STEPPER_CYCLES + ISR_Z_STEPPER_CYCLES + ISR_E_STEPPER_CYCLES + ISR_MIXING_STEPPER_CYCLES)
-
-// Calculate the minimum MPU cycles needed per pulse to enforce not surpassing the maximum stepper rate
-#define _MIN_STEPPER_PULSE_CYCLES(N) MAX((F_CPU) / (MAXIMUM_STEPPER_RATE), ((F_CPU) / 500000UL) * (N))
-#if MINIMUM_STEPPER_PULSE
-  #define MIN_STEPPER_PULSE_CYCLES _MIN_STEPPER_PULSE_CYCLES(MINIMUM_STEPPER_PULSE)
-#else
-  #define MIN_STEPPER_PULSE_CYCLES _MIN_STEPPER_PULSE_CYCLES(1)
-#endif
-
-// But the user could be enforcing a minimum time, so the loop time is
-#define ISR_LOOP_CYCLES (ISR_LOOP_BASE_CYCLES + MAX(MIN_STEPPER_PULSE_CYCLES, MIN_ISR_LOOP_CYCLES))
-
-// If linear advance is enabled, then it is handled separately
-#if ENABLED(LIN_ADVANCE)
-
-  // Estimate the minimum LA loop time
-  #if ENABLED(MIXING_EXTRUDER)
-    #define MIN_ISR_LA_LOOP_CYCLES ((MIXING_STEPPERS) * (ISR_STEPPER_CYCLES))
-  #else
-    #define MIN_ISR_LA_LOOP_CYCLES ISR_STEPPER_CYCLES
-  #endif
-
-  // And the real loop time
-  #define ISR_LA_LOOP_CYCLES MAX(MIN_STEPPER_PULSE_CYCLES, MIN_ISR_LA_LOOP_CYCLES)
-
-#else
-  #define ISR_LA_LOOP_CYCLES 0UL
-#endif
-
-// Now estimate the total ISR execution time in cycles given a step per ISR multiplier
-#define ISR_EXECUTION_CYCLES(rate) (((ISR_BASE_CYCLES + ISR_S_CURVE_CYCLES + (ISR_LOOP_CYCLES * rate) + ISR_LA_BASE_CYCLES + ISR_LA_LOOP_CYCLES)) / rate)
-
-// The maximum allowable stepping frequency when doing x128-x1 stepping (in Hz)
-#define MAX_128X_STEP_ISR_FREQUENCY (F_CPU / ISR_EXECUTION_CYCLES(128))
-#define MAX_64X_STEP_ISR_FREQUENCY  (F_CPU / ISR_EXECUTION_CYCLES(64))
-#define MAX_32X_STEP_ISR_FREQUENCY  (F_CPU / ISR_EXECUTION_CYCLES(32))
-#define MAX_16X_STEP_ISR_FREQUENCY  (F_CPU / ISR_EXECUTION_CYCLES(16))
-#define MAX_8X_STEP_ISR_FREQUENCY   (F_CPU / ISR_EXECUTION_CYCLES(8))
-#define MAX_4X_STEP_ISR_FREQUENCY   (F_CPU / ISR_EXECUTION_CYCLES(4))
-#define MAX_2X_STEP_ISR_FREQUENCY   (F_CPU / ISR_EXECUTION_CYCLES(2))
-#define MAX_1X_STEP_ISR_FREQUENCY   (F_CPU / ISR_EXECUTION_CYCLES(1))
-
-// The minimum allowable frequency for step smoothing will be 1/10 of the maximum nominal frequency (in Hz)
-#define MIN_STEP_ISR_FREQUENCY    MAX_1X_STEP_ISR_FREQUENCY
-
-// Disable multiple steps per ISR
-//#define DISABLE_MULTI_STEPPING
-
 #endif // CONDITIONALS_POST_H

commit 6f14bcaa3e85abdf5f043bdeab2d93024d75ea9d
Author: etagle <ejtagle@hotmail.com>
Date:   Sun Jun 3 14:24:23 2018 -0300

    Add MAXIMUM_STEPPER_RATE, enforce in multi-stepping
    
    The timing value should be properly set for ALL boards. The compiler will check and set maximum step rate calculations based on those values.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3ddf5462c6..dd018a1154 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1437,20 +1437,29 @@
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
 #if ENABLED(G29_RETRY_AND_RECOVER)
   #define USE_EXECUTE_COMMANDS_IMMEDIATE
 #endif
 
+// Calculate a default maximum stepper rate, if not supplied
+#ifndef MAXIMUM_STEPPER_RATE
+  #if MINIMUM_STEPPER_PULSE
+    #define MAXIMUM_STEPPER_RATE (1000000UL / (2UL * (MINIMUM_STEPPER_PULSE)))
+  #else
+    #define MAXIMUM_STEPPER_RATE 500000UL
+  #endif
+#endif
+
 //
 // Estimate the amount of time the ISR will take to execute
 //
 #ifdef CPU_32_BIT
 
   // The base ISR takes 792 cycles
   #define ISR_BASE_CYCLES  792UL
 
   // Linear advance base time is 64 cycles
   #if ENABLED(LIN_ADVANCE)
@@ -1526,35 +1535,43 @@
 // If linear advance is disabled, then the loop also handles them
 #if DISABLED(LIN_ADVANCE) && ENABLED(MIXING_EXTRUDER)
   #define ISR_MIXING_STEPPER_CYCLES ((MIXING_STEPPERS) * ISR_STEPPER_CYCLES)
 #else
   #define ISR_MIXING_STEPPER_CYCLES  0UL
 #endif
 
 // And the total minimum loop time is, without including the base
 #define MIN_ISR_LOOP_CYCLES (ISR_X_STEPPER_CYCLES + ISR_Y_STEPPER_CYCLES + ISR_Z_STEPPER_CYCLES + ISR_E_STEPPER_CYCLES + ISR_MIXING_STEPPER_CYCLES)
 
+// Calculate the minimum MPU cycles needed per pulse to enforce not surpassing the maximum stepper rate
+#define _MIN_STEPPER_PULSE_CYCLES(N) MAX((F_CPU) / (MAXIMUM_STEPPER_RATE), ((F_CPU) / 500000UL) * (N))
+#if MINIMUM_STEPPER_PULSE
+  #define MIN_STEPPER_PULSE_CYCLES _MIN_STEPPER_PULSE_CYCLES(MINIMUM_STEPPER_PULSE)
+#else
+  #define MIN_STEPPER_PULSE_CYCLES _MIN_STEPPER_PULSE_CYCLES(1)
+#endif
+
 // But the user could be enforcing a minimum time, so the loop time is
-#define ISR_LOOP_CYCLES (ISR_LOOP_BASE_CYCLES + ((MINIMUM_STEPPER_PULSE*2UL) > MIN_ISR_LOOP_CYCLES ? (MINIMUM_STEPPER_PULSE*2UL) : MIN_ISR_LOOP_CYCLES))
+#define ISR_LOOP_CYCLES (ISR_LOOP_BASE_CYCLES + MAX(MIN_STEPPER_PULSE_CYCLES, MIN_ISR_LOOP_CYCLES))
 
 // If linear advance is enabled, then it is handled separately
 #if ENABLED(LIN_ADVANCE)
 
   // Estimate the minimum LA loop time
   #if ENABLED(MIXING_EXTRUDER)
     #define MIN_ISR_LA_LOOP_CYCLES ((MIXING_STEPPERS) * (ISR_STEPPER_CYCLES))
   #else
     #define MIN_ISR_LA_LOOP_CYCLES ISR_STEPPER_CYCLES
   #endif
 
   // And the real loop time
-  #define ISR_LA_LOOP_CYCLES ((MINIMUM_STEPPER_PULSE*2UL) > MIN_ISR_LA_LOOP_CYCLES ? (MINIMUM_STEPPER_PULSE*2UL) : MIN_ISR_LA_LOOP_CYCLES)
+  #define ISR_LA_LOOP_CYCLES MAX(MIN_STEPPER_PULSE_CYCLES, MIN_ISR_LA_LOOP_CYCLES)
 
 #else
   #define ISR_LA_LOOP_CYCLES 0UL
 #endif
 
 // Now estimate the total ISR execution time in cycles given a step per ISR multiplier
 #define ISR_EXECUTION_CYCLES(rate) (((ISR_BASE_CYCLES + ISR_S_CURVE_CYCLES + (ISR_LOOP_CYCLES * rate) + ISR_LA_BASE_CYCLES + ISR_LA_LOOP_CYCLES)) / rate)
 
 // The maximum allowable stepping frequency when doing x128-x1 stepping (in Hz)
 #define MAX_128X_STEP_ISR_FREQUENCY (F_CPU / ISR_EXECUTION_CYCLES(128))

commit 39a7e7720d0b14e7c55b65d7da7973b528d184c7
Author: etagle <ejtagle@hotmail.com>
Date:   Sun Jun 3 00:59:21 2018 -0300

    Adaptive multiaxis step smoothing
    
    - Stepper bugs fixed
    - Support MIXING_EXTRUDER with Linear Advance
    - Miscellaneous cleanup

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 338c76ffea..3ddf5462c6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -208,60 +208,27 @@
   #define Y_TILT_FULCRUM Y_HOME_POS
 #endif
 
 /**
  * Host keep alive
  */
 #ifndef DEFAULT_KEEPALIVE_INTERVAL
   #define DEFAULT_KEEPALIVE_INTERVAL 2
 #endif
 
-#ifdef CPU_32_BIT
-  /**
-   * Hidden options for developer
-   */
-  // Double stepping starts at STEP_DOUBLER_FREQUENCY + 1, quad stepping starts at STEP_DOUBLER_FREQUENCY * 2 + 1
-  #ifndef STEP_DOUBLER_FREQUENCY
-    #if ENABLED(LIN_ADVANCE)
-      #define STEP_DOUBLER_FREQUENCY 60000 // Hz
-    #else
-      #define STEP_DOUBLER_FREQUENCY 80000 // Hz
-    #endif
-  #endif
-  // Disable double / quad stepping
-  //#define DISABLE_MULTI_STEPPING
-#endif
-
 /**
  * Provide a MAX_AUTORETRACT for older configs
  */
 #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
   #define MAX_AUTORETRACT 99
 #endif
 
-/**
- * MAX_STEP_FREQUENCY differs for TOSHIBA
- */
-#if ENABLED(CONFIG_STEPPERS_TOSHIBA)
-  #ifdef CPU_32_BIT
-    #define MAX_STEP_FREQUENCY STEP_DOUBLER_FREQUENCY // Max step frequency for Toshiba Stepper Controllers, 96kHz is close to maximum for an Arduino Due
-  #else
-    #define MAX_STEP_FREQUENCY 10000 // Max step frequency for Toshiba Stepper Controllers
-  #endif
-#else
-  #ifdef CPU_32_BIT
-    #define MAX_STEP_FREQUENCY (STEP_DOUBLER_FREQUENCY * 4) // Max step frequency for the Due is approx. 330kHz
-  #else
-    #define MAX_STEP_FREQUENCY 40000 // Max step frequency for Ultimaker (5000 pps / half step)
-  #endif
-#endif
-
 // MS1 MS2 Stepper Driver Microstepping mode table
 #define MICROSTEP1 LOW,LOW
 #if ENABLED(HEROIC_STEPPER_DRIVERS)
   #define MICROSTEP128 LOW,HIGH
 #else
   #define MICROSTEP2 HIGH,LOW
   #define MICROSTEP4 LOW,HIGH
 #endif
 #define MICROSTEP8 HIGH,HIGH
 #ifdef __SAM3X8E__
@@ -1339,29 +1306,20 @@
 #endif
 #ifndef Z_CLEARANCE_BETWEEN_PROBES
   #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
 #endif
 #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
   #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
 #else
   #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
 #endif
 
-// Stepper pulse duration, in cycles
-#define STEP_PULSE_CYCLES ((MINIMUM_STEPPER_PULSE) * CYCLES_PER_MICROSECOND)
-#ifdef CPU_32_BIT
-  // Add additional delay for between direction signal and pulse signal of stepper
-  #ifndef STEPPER_DIRECTION_DELAY
-    #define STEPPER_DIRECTION_DELAY 0 // time in microseconds
-  #endif
-#endif
-
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
 #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
 // The home offset also shifts the coordinate space
 #define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && DISABLED(DELTA))
@@ -1479,11 +1437,139 @@
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
 #if ENABLED(G29_RETRY_AND_RECOVER)
   #define USE_EXECUTE_COMMANDS_IMMEDIATE
 #endif
 
+//
+// Estimate the amount of time the ISR will take to execute
+//
+#ifdef CPU_32_BIT
+
+  // The base ISR takes 792 cycles
+  #define ISR_BASE_CYCLES  792UL
+
+  // Linear advance base time is 64 cycles
+  #if ENABLED(LIN_ADVANCE)
+    #define ISR_LA_BASE_CYCLES 64UL
+  #else
+    #define ISR_LA_BASE_CYCLES 0UL
+  #endif
+
+  // S curve interpolation adds 40 cycles
+  #if ENABLED(S_CURVE_ACCELERATION)
+    #define ISR_S_CURVE_CYCLES 40UL
+  #else
+    #define ISR_S_CURVE_CYCLES 0UL
+  #endif
+
+  // Stepper Loop base cycles
+  #define ISR_LOOP_BASE_CYCLES 4UL
+
+  // And each stepper takes 16 cycles
+  #define ISR_STEPPER_CYCLES 16UL
+
+#else
+
+  // The base ISR takes 752 cycles
+  #define ISR_BASE_CYCLES  752UL
+
+  // Linear advance base time is 32 cycles
+  #if ENABLED(LIN_ADVANCE)
+    #define ISR_LA_BASE_CYCLES 32UL
+  #else
+    #define ISR_LA_BASE_CYCLES 0UL
+  #endif
+
+  // S curve interpolation adds 160 cycles
+  #if ENABLED(S_CURVE_ACCELERATION)
+    #define ISR_S_CURVE_CYCLES 160UL
+  #else
+    #define ISR_S_CURVE_CYCLES 0UL
+  #endif
+
+  // Stepper Loop base cycles
+  #define ISR_LOOP_BASE_CYCLES 32UL
+
+  // And each stepper takes 88 cycles
+  #define ISR_STEPPER_CYCLES 88UL
+
+#endif
+
+// For each stepper, we add its time
+#ifdef HAS_X_STEP
+  #define ISR_X_STEPPER_CYCLES ISR_STEPPER_CYCLES
+#else
+  #define ISR_X_STEPPER_CYCLES 0UL
+#endif
+
+// For each stepper, we add its time
+#ifdef HAS_Y_STEP
+  #define ISR_Y_STEPPER_CYCLES ISR_STEPPER_CYCLES
+#else
+  #define ISR_Y_STEPPER_CYCLES 0UL
+#endif
+
+// For each stepper, we add its time
+#ifdef HAS_Z_STEP
+  #define ISR_Z_STEPPER_CYCLES ISR_STEPPER_CYCLES
+#else
+  #define ISR_Z_STEPPER_CYCLES 0UL
+#endif
+
+// E is always interpolated, even for mixing extruders
+#define ISR_E_STEPPER_CYCLES ISR_STEPPER_CYCLES
+
+// If linear advance is disabled, then the loop also handles them
+#if DISABLED(LIN_ADVANCE) && ENABLED(MIXING_EXTRUDER)
+  #define ISR_MIXING_STEPPER_CYCLES ((MIXING_STEPPERS) * ISR_STEPPER_CYCLES)
+#else
+  #define ISR_MIXING_STEPPER_CYCLES  0UL
+#endif
+
+// And the total minimum loop time is, without including the base
+#define MIN_ISR_LOOP_CYCLES (ISR_X_STEPPER_CYCLES + ISR_Y_STEPPER_CYCLES + ISR_Z_STEPPER_CYCLES + ISR_E_STEPPER_CYCLES + ISR_MIXING_STEPPER_CYCLES)
+
+// But the user could be enforcing a minimum time, so the loop time is
+#define ISR_LOOP_CYCLES (ISR_LOOP_BASE_CYCLES + ((MINIMUM_STEPPER_PULSE*2UL) > MIN_ISR_LOOP_CYCLES ? (MINIMUM_STEPPER_PULSE*2UL) : MIN_ISR_LOOP_CYCLES))
+
+// If linear advance is enabled, then it is handled separately
+#if ENABLED(LIN_ADVANCE)
+
+  // Estimate the minimum LA loop time
+  #if ENABLED(MIXING_EXTRUDER)
+    #define MIN_ISR_LA_LOOP_CYCLES ((MIXING_STEPPERS) * (ISR_STEPPER_CYCLES))
+  #else
+    #define MIN_ISR_LA_LOOP_CYCLES ISR_STEPPER_CYCLES
+  #endif
+
+  // And the real loop time
+  #define ISR_LA_LOOP_CYCLES ((MINIMUM_STEPPER_PULSE*2UL) > MIN_ISR_LA_LOOP_CYCLES ? (MINIMUM_STEPPER_PULSE*2UL) : MIN_ISR_LA_LOOP_CYCLES)
+
+#else
+  #define ISR_LA_LOOP_CYCLES 0UL
+#endif
+
+// Now estimate the total ISR execution time in cycles given a step per ISR multiplier
+#define ISR_EXECUTION_CYCLES(rate) (((ISR_BASE_CYCLES + ISR_S_CURVE_CYCLES + (ISR_LOOP_CYCLES * rate) + ISR_LA_BASE_CYCLES + ISR_LA_LOOP_CYCLES)) / rate)
+
+// The maximum allowable stepping frequency when doing x128-x1 stepping (in Hz)
+#define MAX_128X_STEP_ISR_FREQUENCY (F_CPU / ISR_EXECUTION_CYCLES(128))
+#define MAX_64X_STEP_ISR_FREQUENCY  (F_CPU / ISR_EXECUTION_CYCLES(64))
+#define MAX_32X_STEP_ISR_FREQUENCY  (F_CPU / ISR_EXECUTION_CYCLES(32))
+#define MAX_16X_STEP_ISR_FREQUENCY  (F_CPU / ISR_EXECUTION_CYCLES(16))
+#define MAX_8X_STEP_ISR_FREQUENCY   (F_CPU / ISR_EXECUTION_CYCLES(8))
+#define MAX_4X_STEP_ISR_FREQUENCY   (F_CPU / ISR_EXECUTION_CYCLES(4))
+#define MAX_2X_STEP_ISR_FREQUENCY   (F_CPU / ISR_EXECUTION_CYCLES(2))
+#define MAX_1X_STEP_ISR_FREQUENCY   (F_CPU / ISR_EXECUTION_CYCLES(1))
+
+// The minimum allowable frequency for step smoothing will be 1/10 of the maximum nominal frequency (in Hz)
+#define MIN_STEP_ISR_FREQUENCY    MAX_1X_STEP_ISR_FREQUENCY
+
+// Disable multiple steps per ISR
+//#define DISABLE_MULTI_STEPPING
+
 #endif // CONDITIONALS_POST_H

commit 83d42f33e140680a3328990cc3bf899b7dd84370
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat May 19 16:37:27 2018 -0500

    Add HAS_HOTEND_OFFSET_Z conditional

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a57f34d84e..338c76ffea 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -427,28 +427,29 @@
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define HEATER_CHAMBER_USES_THERMISTOR
 #endif
 
 #define HOTEND_USES_THERMISTOR (ENABLED(HEATER_0_USES_THERMISTOR) || ENABLED(HEATER_1_USES_THERMISTOR) || ENABLED(HEATER_2_USES_THERMISTOR) || ENABLED(HEATER_3_USES_THERMISTOR) || ENABLED(HEATER_4_USES_THERMISTOR))
 
 /**
  * Default hotend offsets, if not defined
  */
+#define HAS_HOTEND_OFFSET_Z (HOTENDS > 1 && (ENABLED(DUAL_X_CARRIAGE) || ENABLED(SWITCHING_NOZZLE) || ENABLED(PARKING_EXTRUDER)))
 #if HOTENDS > 1
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
   #endif
-  #if !defined(HOTEND_OFFSET_Z) && (ENABLED(DUAL_X_CARRIAGE) || ENABLED(SWITCHING_NOZZLE))
+  #if HAS_HOTEND_OFFSET_Z && !defined(HOTEND_OFFSET_Z)
     #define HOTEND_OFFSET_Z { 0 }
   #endif
 #endif
 
 /**
  * ARRAY_BY_EXTRUDERS based on EXTRUDERS
  */
 #define ARRAY_BY_EXTRUDERS(...) ARRAY_N(EXTRUDERS, __VA_ARGS__)
 #define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
 

commit 43ddb29f9ed0eae0b0e1851d6b60b372df6006f0
Author: Jiri Jaburek <comps@nomail.dom>
Date:   Tue May 15 19:56:48 2018 +0200

    Add FAN_MAX_PWM for M106-controlled fans

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 02531b3edc..a57f34d84e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -972,20 +972,37 @@
 #if HAS_FAN2
   #define WRITE_FAN2(v) WRITE(FAN2_PIN, v)
 #endif
 #define WRITE_FAN_N(n, v) WRITE_FAN##n(v)
 
 /**
  * Part Cooling fan multipliexer
  */
 #define HAS_FANMUX PIN_EXISTS(FANMUX0)
 
+/**
+ * MIN/MAX fan PWM scaling
+ */
+#ifndef FAN_MIN_PWM
+  #define FAN_MIN_PWM 0
+#endif
+#ifndef FAN_MAX_PWM
+  #define FAN_MAX_PWM 255
+#endif
+#if FAN_MIN_PWM < 0 || FAN_MIN_PWM > 255
+  #error "FAN_MIN_PWM must be a value from 0 to 255."
+#elif FAN_MAX_PWM < 0 || FAN_MAX_PWM > 255
+  #error "FAN_MAX_PWM must be a value from 0 to 255."
+#elif FAN_MIN_PWM > FAN_MAX_PWM
+  #error "FAN_MIN_PWM must be less than or equal to FAN_MAX_PWM."
+#endif
+
 /**
  * Bed Probe dependencies
  */
 #if HAS_BED_PROBE
   #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif

commit 99ecdf59af907ebb8d2d847863614094bb576e3f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun May 13 01:10:34 2018 -0500

    Smarter MIN, MAX, ABS macros
    
    Use macros that explicitly avoid double-evaluation and can be used for any datatype, replacing `min`, `max`, `abs`, `fabs`, `labs`, and `FABS`.
    
    Co-Authored-By: ejtagle <ejtagle@hotmail.com>

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d1dc972398..02531b3edc 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -28,20 +28,30 @@
 #ifndef CONDITIONALS_POST_H
 #define CONDITIONALS_POST_H
 
 #define AVR_ATmega2560_FAMILY_PLUS_70 ( \
      MB(BQ_ZUM_MEGA_3D)                 \
   || MB(MIGHTYBOARD_REVE)               \
   || MB(MINIRAMBO)                      \
   || MB(SCOOVO_X9H)                     \
 )
 
+#ifdef TEENSYDUINO
+  #undef max
+  #define max(a,b) ((a)>(b)?(a):(b))
+  #undef min
+  #define min(a,b) ((a)<(b)?(a):(b))
+
+  #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
+  #define NOT_A_PIN 0 // For PINS_DEBUGGING
+#endif
+
 #define IS_SCARA (ENABLED(MORGAN_SCARA) || ENABLED(MAKERARM_SCARA))
 #define IS_KINEMATIC (ENABLED(DELTA) || IS_SCARA)
 #define IS_CARTESIAN !IS_KINEMATIC
 
 /**
  * Axis lengths and center
  */
 #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
 #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
 #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
@@ -1367,39 +1377,28 @@
 #if defined(ARDUINO_ARCH_SAM) && ENABLED(DELTA_FAST_SQRT)
   #undef ATAN2
   #undef FABS
   #undef POW
   #undef SQRT
   #undef CEIL
   #undef FLOOR
   #undef LROUND
   #undef FMOD
   #define ATAN2(y, x) atan2f(y, x)
-  #define FABS(x) fabsf(x)
   #define POW(x, y) powf(x, y)
   #define SQRT(x) sqrtf(x)
   #define CEIL(x) ceilf(x)
   #define FLOOR(x) floorf(x)
   #define LROUND(x) lroundf(x)
   #define FMOD(x, y) fmodf(x, y)
 #endif
 
-#ifdef TEENSYDUINO
-  #undef max
-  #define max(a,b) ((a)>(b)?(a):(b))
-  #undef min
-  #define min(a,b) ((a)<(b)?(a):(b))
-
-  #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
-  #define NOT_A_PIN 0 // For PINS_DEBUGGING
-#endif
-
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ENABLED(SCROLL_LONG_FILENAMES)
   #define MAX_VFAT_ENTRIES (5)
 #else
   #define MAX_VFAT_ENTRIES (2)
 #endif
 
 // Set defaults for unspecified LED user colors
 #if ENABLED(LED_CONTROL_MENU)
   #ifndef LED_USER_PRESET_RED

commit 325bbbc8c2a65218ed6a0abc671e74fb41e6fc27
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 11 01:01:51 2018 -0500

    [2.0.x] Enable AD595 and AD8495 in concert (#10693)
    
    * Allow both AD595 and AD8495 in concert
    * General temperature code tweaks

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5428d423ff..d1dc972398 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -322,115 +322,111 @@
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTORHEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_1 == -4
   #define HEATER_1_USES_AD8495
 #elif TEMP_SENSOR_1 == -3
-  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_1"
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_1."
 #elif TEMP_SENSOR_1 == -2
-  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_1"
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_1."
 #elif TEMP_SENSOR_1 == -1
   #define HEATER_1_USES_AD595
 #elif TEMP_SENSOR_1 == 0
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #elif TEMP_SENSOR_1 > 0
   #define THERMISTORHEATER_1 TEMP_SENSOR_1
   #define HEATER_1_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_2 == -4
   #define HEATER_2_USES_AD8495
 #elif TEMP_SENSOR_2 == -3
-  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_2"
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -2
-  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_2"
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_2."
 #elif TEMP_SENSOR_2 == -1
   #define HEATER_2_USES_AD595
 #elif TEMP_SENSOR_2 == 0
   #undef HEATER_2_MINTEMP
   #undef HEATER_2_MAXTEMP
 #elif TEMP_SENSOR_2 > 0
   #define THERMISTORHEATER_2 TEMP_SENSOR_2
   #define HEATER_2_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_3 == -4
   #define HEATER_3_USES_AD8495
 #elif TEMP_SENSOR_3 == -3
-  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_3"
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -2
-  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_3"
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_3."
 #elif TEMP_SENSOR_3 == -1
   #define HEATER_3_USES_AD595
 #elif TEMP_SENSOR_3 == 0
   #undef HEATER_3_MINTEMP
   #undef HEATER_3_MAXTEMP
 #elif TEMP_SENSOR_3 > 0
   #define THERMISTORHEATER_3 TEMP_SENSOR_3
   #define HEATER_3_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_4 == -4
   #define HEATER_4_USES_AD8495
 #elif TEMP_SENSOR_4 == -3
-  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_4"
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -2
-  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_4"
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_4."
 #elif TEMP_SENSOR_4 == -1
   #define HEATER_4_USES_AD595
 #elif TEMP_SENSOR_4 == 0
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #elif TEMP_SENSOR_4 > 0
   #define THERMISTORHEATER_4 TEMP_SENSOR_4
   #define HEATER_4_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_BED == -4
-  #define BED_USES_AD8495
+  #define HEATER_BED_USES_AD8495
 #elif TEMP_SENSOR_BED == -3
-  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_BED"
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -2
-  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_BED"
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_BED."
 #elif TEMP_SENSOR_BED == -1
-  #define BED_USES_AD595
+  #define HEATER_BED_USES_AD595
 #elif TEMP_SENSOR_BED == 0
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
-  #define BED_USES_THERMISTOR
+  #define HEATER_BED_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_CHAMBER == -4
-  #define CHAMBER_USES_AD8495
+  #define HEATER_CHAMBER_USES_AD8495
 #elif TEMP_SENSOR_CHAMBER == -3
-  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_CHAMBER"
+  #error "MAX31855 Thermocouples (-3) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -2
-  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_CHAMBER"
+  #error "MAX6675 Thermocouples (-2) not supported for TEMP_SENSOR_CHAMBER."
 #elif TEMP_SENSOR_CHAMBER == -1
-  #define CHAMBER_USES_AD595
+  #define HEATER_CHAMBER_USES_AD595
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
-  #define CHAMBER_USES_THERMISTOR
+  #define HEATER_CHAMBER_USES_THERMISTOR
 #endif
 
-#define HEATER_USES_AD8495 (ENABLED(HEATER_0_USES_AD8495) || ENABLED(HEATER_1_USES_AD8495) || ENABLED(HEATER_2_USES_AD8495) || ENABLED(HEATER_3_USES_AD8495) || ENABLED(HEATER_4_USES_AD8495))
-
-#ifdef __SAM3X8E__
-  #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595) || ENABLED(HEATER_4_USES_AD595))
-#endif
+#define HOTEND_USES_THERMISTOR (ENABLED(HEATER_0_USES_THERMISTOR) || ENABLED(HEATER_1_USES_THERMISTOR) || ENABLED(HEATER_2_USES_THERMISTOR) || ENABLED(HEATER_3_USES_THERMISTOR) || ENABLED(HEATER_4_USES_THERMISTOR))
 
 /**
  * Default hotend offsets, if not defined
  */
 #if HOTENDS > 1
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
@@ -766,23 +762,23 @@
 #define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
 #define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
 
-// Thermistors
-#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && TEMP_SENSOR_##P > -2)
-#define HAS_TEMP_ADC_0 (HAS_ADC_TEST(0) && DISABLED(HEATER_0_USES_MAX6675))
+// ADC Temp Sensors (Thermistor or Thermocouple with amplifier ADC interface)
+#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && DISABLED(HEATER_##P##_USES_MAX6675))
+#define HAS_TEMP_ADC_0 HAS_ADC_TEST(0)
 #define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
 #define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
 #define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
 #define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
 #define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
 #define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)
 
 #define HAS_TEMP_HOTEND (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
 #define HAS_TEMP_BED HAS_TEMP_ADC_BED
 #define HAS_TEMP_CHAMBER HAS_TEMP_ADC_CHAMBER

commit 19f189b4e5e10bdbdb3b28d94fa180f74cdbd654
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue May 8 11:10:45 2018 -0500

    Add UBL support for G2/G3 and G5 (#10648)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 0845dd54eb..5428d423ff 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1051,20 +1051,21 @@
 #define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
 #define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
 #define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_SEGMENTED || ENABLED(SKEW_CORRECTION))
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
+#define HAS_UBL_AND_CURVES (ENABLED(AUTO_BED_LEVELING_UBL) && !PLANNER_LEVELING && (ENABLED(ARC_SUPPORT) || ENABLED(BEZIER_CURVE_SUPPORT)))
 
 #if ENABLED(AUTO_BED_LEVELING_UBL)
   #undef LCD_BED_LEVELING
 #endif
 
 /**
  * Heater & Fan Pausing
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF

commit 81b632c2558257c31b2f762e9bf8237c03638e07
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 1 19:33:41 2018 -0500

    Additional temp-oriented improvements

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 423dd291e0..0845dd54eb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -321,103 +321,115 @@
 #elif TEMP_SENSOR_0 == 0
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTORHEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_1 == -4
   #define HEATER_1_USES_AD8495
-#elif TEMP_SENSOR_1 <= -2
-  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_1"
+#elif TEMP_SENSOR_1 == -3
+  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_1"
+#elif TEMP_SENSOR_1 == -2
+  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_1"
 #elif TEMP_SENSOR_1 == -1
   #define HEATER_1_USES_AD595
 #elif TEMP_SENSOR_1 == 0
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #elif TEMP_SENSOR_1 > 0
   #define THERMISTORHEATER_1 TEMP_SENSOR_1
   #define HEATER_1_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_2 == -4
   #define HEATER_2_USES_AD8495
-#elif TEMP_SENSOR_2 <= -2
-  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_2"
+#elif TEMP_SENSOR_2 == -3
+  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_2"
+#elif TEMP_SENSOR_2 == -2
+  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_2"
 #elif TEMP_SENSOR_2 == -1
   #define HEATER_2_USES_AD595
 #elif TEMP_SENSOR_2 == 0
   #undef HEATER_2_MINTEMP
   #undef HEATER_2_MAXTEMP
 #elif TEMP_SENSOR_2 > 0
   #define THERMISTORHEATER_2 TEMP_SENSOR_2
   #define HEATER_2_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_3 == -4
   #define HEATER_3_USES_AD8495
-#elif TEMP_SENSOR_3 <= -2
-  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_3"
+#elif TEMP_SENSOR_3 == -3
+  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_3"
+#elif TEMP_SENSOR_3 == -2
+  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_3"
 #elif TEMP_SENSOR_3 == -1
   #define HEATER_3_USES_AD595
 #elif TEMP_SENSOR_3 == 0
   #undef HEATER_3_MINTEMP
   #undef HEATER_3_MAXTEMP
 #elif TEMP_SENSOR_3 > 0
   #define THERMISTORHEATER_3 TEMP_SENSOR_3
   #define HEATER_3_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_4 == -4
   #define HEATER_4_USES_AD8495
-#elif TEMP_SENSOR_4 <= -2
-  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_4"
+#elif TEMP_SENSOR_4 == -3
+  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_4"
+#elif TEMP_SENSOR_4 == -2
+  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_4"
 #elif TEMP_SENSOR_4 == -1
   #define HEATER_4_USES_AD595
 #elif TEMP_SENSOR_4 == 0
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #elif TEMP_SENSOR_4 > 0
   #define THERMISTORHEATER_4 TEMP_SENSOR_4
   #define HEATER_4_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_BED == -4
   #define BED_USES_AD8495
-#elif TEMP_SENSOR_BED <= -2
-  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_BED"
+#elif TEMP_SENSOR_BED == -3
+  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_BED"
+#elif TEMP_SENSOR_BED == -2
+  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_BED"
 #elif TEMP_SENSOR_BED == -1
   #define BED_USES_AD595
 #elif TEMP_SENSOR_BED == 0
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
   #define BED_USES_THERMISTOR
 #endif
 
 #if TEMP_SENSOR_CHAMBER == -4
   #define CHAMBER_USES_AD8495
-#elif TEMP_SENSOR_CHAMBER <= -2
-  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_CHAMBER"
+#elif TEMP_SENSOR_CHAMBER == -3
+  #error "MAX31855 Thermocouples not supported for TEMP_SENSOR_CHAMBER"
+#elif TEMP_SENSOR_CHAMBER == -2
+  #error "MAX6675 Thermocouples not supported for TEMP_SENSOR_CHAMBER"
 #elif TEMP_SENSOR_CHAMBER == -1
   #define CHAMBER_USES_AD595
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define CHAMBER_USES_THERMISTOR
 #endif
 
-#define HEATER_USES_AD8495 (ENABLED(HEATER_0_USES_AD8495) || ENABLED(HEATER_1_USES_AD8495) || ENABLED(HEATER_2_USES_AD8495) || ENABLED(HEATER_3_USES_AD8495))
+#define HEATER_USES_AD8495 (ENABLED(HEATER_0_USES_AD8495) || ENABLED(HEATER_1_USES_AD8495) || ENABLED(HEATER_2_USES_AD8495) || ENABLED(HEATER_3_USES_AD8495) || ENABLED(HEATER_4_USES_AD8495))
 
 #ifdef __SAM3X8E__
-  #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595))
+  #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595) || ENABLED(HEATER_4_USES_AD595))
 #endif
 
 /**
  * Default hotend offsets, if not defined
  */
 #if HOTENDS > 1
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
@@ -739,43 +751,48 @@
   // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_HOMING_SENSITIVITY
   #endif
   #define X_SENSORLESS (ENABLED(X_IS_TMC2130) && defined(X_HOMING_SENSITIVITY))
   #define Y_SENSORLESS (ENABLED(Y_IS_TMC2130) && defined(Y_HOMING_SENSITIVITY))
   #define Z_SENSORLESS (ENABLED(Z_IS_TMC2130) && defined(Z_HOMING_SENSITIVITY))
 #endif
 
 // Endstops and bed probe
-#define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_X2_ENDSTOP(X,MIN) && !IS_Y2_ENDSTOP(X,MIN) && !IS_Z2_OR_PROBE(X,MIN))
-#define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_X2_ENDSTOP(X,MAX) && !IS_Y2_ENDSTOP(X,MAX) && !IS_Z2_OR_PROBE(X,MAX))
-#define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_X2_ENDSTOP(Y,MIN) && !IS_Y2_ENDSTOP(Y,MIN) && !IS_Z2_OR_PROBE(Y,MIN))
-#define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_X2_ENDSTOP(Y,MAX) && !IS_Y2_ENDSTOP(Y,MAX) && !IS_Z2_OR_PROBE(Y,MAX))
-#define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_X2_ENDSTOP(Z,MIN) && !IS_Y2_ENDSTOP(Z,MIN) && !IS_Z2_OR_PROBE(Z,MIN))
-#define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_X2_ENDSTOP(Z,MAX) && !IS_Y2_ENDSTOP(Z,MAX) && !IS_Z2_OR_PROBE(Z,MAX))
+#define HAS_STOP_TEST(A,M) (PIN_EXISTS(A##_##M) && !IS_X2_ENDSTOP(A,M) && !IS_Y2_ENDSTOP(A,M) && !IS_Z2_OR_PROBE(A,M))
+#define HAS_X_MIN HAS_STOP_TEST(X,MIN)
+#define HAS_X_MAX HAS_STOP_TEST(X,MAX)
+#define HAS_Y_MIN HAS_STOP_TEST(Y,MIN)
+#define HAS_Y_MAX HAS_STOP_TEST(Y,MAX)
+#define HAS_Z_MIN HAS_STOP_TEST(Z,MIN)
+#define HAS_Z_MAX HAS_STOP_TEST(Z,MAX)
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
 #define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
 
 // Thermistors
-#define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
-#define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
-#define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
-#define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
-#define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)
-#define HAS_TEMP_HOTEND (HAS_TEMP_0 || ENABLED(HEATER_0_USES_MAX6675))
-#define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && (TEMP_SENSOR_BED > -2 || TEMP_SENSOR_BED == -4))
-#define HAS_TEMP_CHAMBER (PIN_EXISTS(TEMP_CHAMBER) && TEMP_SENSOR_CHAMBER != 0 && TEMP_SENSOR_CHAMBER > -2)
+#define HAS_ADC_TEST(P) (PIN_EXISTS(TEMP_##P) && TEMP_SENSOR_##P != 0 && TEMP_SENSOR_##P > -2)
+#define HAS_TEMP_ADC_0 (HAS_ADC_TEST(0) && DISABLED(HEATER_0_USES_MAX6675))
+#define HAS_TEMP_ADC_1 HAS_ADC_TEST(1)
+#define HAS_TEMP_ADC_2 HAS_ADC_TEST(2)
+#define HAS_TEMP_ADC_3 HAS_ADC_TEST(3)
+#define HAS_TEMP_ADC_4 HAS_ADC_TEST(4)
+#define HAS_TEMP_ADC_BED HAS_ADC_TEST(BED)
+#define HAS_TEMP_ADC_CHAMBER HAS_ADC_TEST(CHAMBER)
+
+#define HAS_TEMP_HOTEND (HAS_TEMP_ADC_0 || ENABLED(HEATER_0_USES_MAX6675))
+#define HAS_TEMP_BED HAS_TEMP_ADC_BED
+#define HAS_TEMP_CHAMBER HAS_TEMP_ADC_CHAMBER
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
 // Shorthand for common combinations

commit e911635fb1604b7ab2c2bd9f829446c2718697d8
Author: nightdemonx <demonx@demonx.ru>
Date:   Wed May 2 01:24:45 2018 +0500

    Add thermocouple with AD8495 support

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d6b806718f..423dd291e0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -298,108 +298,124 @@
   #define PS_ON_ASLEEP HIGH
 #elif (POWER_SUPPLY == 2)   // 2 = X-Box 360 203W
   #define PS_ON_AWAKE  HIGH
   #define PS_ON_ASLEEP LOW
 #endif
 #define HAS_POWER_SWITCH (POWER_SUPPLY > 0 && PIN_EXISTS(PS_ON))
 
 /**
  * Temp Sensor defines
  */
-#if TEMP_SENSOR_0 == -3
+#if TEMP_SENSOR_0 == -4
+  #define HEATER_0_USES_AD8495
+#elif TEMP_SENSOR_0 == -3
   #define HEATER_0_USES_MAX6675
   #define MAX6675_IS_MAX31855
   #define MAX6675_TMIN -270
   #define MAX6675_TMAX 1800
 #elif TEMP_SENSOR_0 == -2
   #define HEATER_0_USES_MAX6675
   #define MAX6675_TMIN 0
   #define MAX6675_TMAX 1024
 #elif TEMP_SENSOR_0 == -1
   #define HEATER_0_USES_AD595
 #elif TEMP_SENSOR_0 == 0
   #undef HEATER_0_MINTEMP
   #undef HEATER_0_MAXTEMP
 #elif TEMP_SENSOR_0 > 0
   #define THERMISTORHEATER_0 TEMP_SENSOR_0
   #define HEATER_0_USES_THERMISTOR
 #endif
 
-#if TEMP_SENSOR_1 <= -2
+#if TEMP_SENSOR_1 == -4
+  #define HEATER_1_USES_AD8495
+#elif TEMP_SENSOR_1 <= -2
   #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_1"
 #elif TEMP_SENSOR_1 == -1
   #define HEATER_1_USES_AD595
 #elif TEMP_SENSOR_1 == 0
   #undef HEATER_1_MINTEMP
   #undef HEATER_1_MAXTEMP
 #elif TEMP_SENSOR_1 > 0
   #define THERMISTORHEATER_1 TEMP_SENSOR_1
   #define HEATER_1_USES_THERMISTOR
 #endif
 
-#if TEMP_SENSOR_2 <= -2
+#if TEMP_SENSOR_2 == -4
+  #define HEATER_2_USES_AD8495
+#elif TEMP_SENSOR_2 <= -2
   #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_2"
 #elif TEMP_SENSOR_2 == -1
   #define HEATER_2_USES_AD595
 #elif TEMP_SENSOR_2 == 0
   #undef HEATER_2_MINTEMP
   #undef HEATER_2_MAXTEMP
 #elif TEMP_SENSOR_2 > 0
   #define THERMISTORHEATER_2 TEMP_SENSOR_2
   #define HEATER_2_USES_THERMISTOR
 #endif
 
-#if TEMP_SENSOR_3 <= -2
+#if TEMP_SENSOR_3 == -4
+  #define HEATER_3_USES_AD8495
+#elif TEMP_SENSOR_3 <= -2
   #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_3"
 #elif TEMP_SENSOR_3 == -1
   #define HEATER_3_USES_AD595
 #elif TEMP_SENSOR_3 == 0
   #undef HEATER_3_MINTEMP
   #undef HEATER_3_MAXTEMP
 #elif TEMP_SENSOR_3 > 0
   #define THERMISTORHEATER_3 TEMP_SENSOR_3
   #define HEATER_3_USES_THERMISTOR
 #endif
 
-#if TEMP_SENSOR_4 <= -2
+#if TEMP_SENSOR_4 == -4
+  #define HEATER_4_USES_AD8495
+#elif TEMP_SENSOR_4 <= -2
   #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_4"
 #elif TEMP_SENSOR_4 == -1
   #define HEATER_4_USES_AD595
 #elif TEMP_SENSOR_4 == 0
   #undef HEATER_4_MINTEMP
   #undef HEATER_4_MAXTEMP
 #elif TEMP_SENSOR_4 > 0
   #define THERMISTORHEATER_4 TEMP_SENSOR_4
   #define HEATER_4_USES_THERMISTOR
 #endif
 
-#if TEMP_SENSOR_BED <= -2
+#if TEMP_SENSOR_BED == -4
+  #define BED_USES_AD8495
+#elif TEMP_SENSOR_BED <= -2
   #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_BED"
 #elif TEMP_SENSOR_BED == -1
   #define BED_USES_AD595
 #elif TEMP_SENSOR_BED == 0
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
   #define BED_USES_THERMISTOR
 #endif
 
-#if TEMP_SENSOR_CHAMBER <= -2
+#if TEMP_SENSOR_CHAMBER == -4
+  #define CHAMBER_USES_AD8495
+#elif TEMP_SENSOR_CHAMBER <= -2
   #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_CHAMBER"
 #elif TEMP_SENSOR_CHAMBER == -1
   #define CHAMBER_USES_AD595
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define CHAMBER_USES_THERMISTOR
 #endif
 
+#define HEATER_USES_AD8495 (ENABLED(HEATER_0_USES_AD8495) || ENABLED(HEATER_1_USES_AD8495) || ENABLED(HEATER_2_USES_AD8495) || ENABLED(HEATER_3_USES_AD8495))
+
 #ifdef __SAM3X8E__
   #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595))
 #endif
 
 /**
  * Default hotend offsets, if not defined
  */
 #if HOTENDS > 1
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
@@ -744,21 +760,21 @@
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
 
 // Thermistors
 #define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
 #define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
 #define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
 #define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
 #define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)
 #define HAS_TEMP_HOTEND (HAS_TEMP_0 || ENABLED(HEATER_0_USES_MAX6675))
-#define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && TEMP_SENSOR_BED > -2)
+#define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && (TEMP_SENSOR_BED > -2 || TEMP_SENSOR_BED == -4))
 #define HAS_TEMP_CHAMBER (PIN_EXISTS(TEMP_CHAMBER) && TEMP_SENSOR_CHAMBER != 0 && TEMP_SENSOR_CHAMBER > -2)
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 

commit f790b4bc0a36fa36e77087cda46f5fb593500af2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Apr 27 00:44:47 2018 -0500

    Reorganize some conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7b8e2aaf74..d6b806718f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -159,25 +159,20 @@
   #define Z_HOME_POS (Z_HOME_DIR < 0 ? Z_MIN_POS : Z_MAX_POS)
 #endif
 
 /**
  * If DELTA_HEIGHT isn't defined use the old setting
  */
 #if ENABLED(DELTA) && !defined(DELTA_HEIGHT)
   #define DELTA_HEIGHT Z_HOME_POS
 #endif
 
-/**
- * Auto Bed Leveling and Z Probe Repeatability Test
- */
-#define HOMING_Z_WITH_PROBE (HAS_BED_PROBE && Z_HOME_DIR < 0 && ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN))
-
 /**
  * Z Sled Probe requires Z_SAFE_HOMING
  */
 #if ENABLED(Z_PROBE_SLED)
   #define Z_SAFE_HOMING
 #endif
 
 /**
  * DELTA should ignore Z_SAFE_HOMING and SLOWDOWN
  */
@@ -807,25 +802,29 @@
 #define AUTO_CHAMBER_IS_3 (CHAMBER_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
 #define AUTO_CHAMBER_IS_4 (CHAMBER_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
-#define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
 #define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
 #define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
+#define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
+
+#if HAS_SERVOS && !defined(Z_PROBE_SERVO_NR)
+  #define Z_PROBE_SERVO_NR -1
+#endif
 
 // Sensors
 #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
 
 // User Interface
 #define HAS_HOME (PIN_EXISTS(HOME))
 #define HAS_KILL (PIN_EXISTS(KILL))
 #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
@@ -934,36 +933,20 @@
 #if HAS_FAN2
   #define WRITE_FAN2(v) WRITE(FAN2_PIN, v)
 #endif
 #define WRITE_FAN_N(n, v) WRITE_FAN##n(v)
 
 /**
  * Part Cooling fan multipliexer
  */
 #define HAS_FANMUX PIN_EXISTS(FANMUX0)
 
-/**
- * Servos and probes
- */
-
-#if HAS_SERVOS
-  #ifndef Z_PROBE_SERVO_NR
-    #define Z_PROBE_SERVO_NR -1
-  #endif
-#endif
-
-#define HAS_BED_PROBE (PROBE_SELECTED && DISABLED(PROBE_MANUALLY))
-
-#if ENABLED(Z_PROBE_ALLEN_KEY)
-  #define PROBE_IS_TRIGGERED_WHEN_STOWED_TEST
-#endif
-
 /**
  * Bed Probe dependencies
  */
 #if HAS_BED_PROBE
   #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN
     #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
   #ifndef Z_PROBE_OFFSET_RANGE_MIN
     #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif

commit df6bc812b54eaca9556dacf4e647624ca0386f77
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Apr 27 01:39:53 2018 -0500

    Fix disable of Z_HOMING_SENSITIVITY for HOMING_Z_WITH_PROBE
    
    As pointed out in #10532

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3d56a21b44..7b8e2aaf74 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -717,28 +717,28 @@
 #define  Y_IS_TRINAMIC (ENABLED( Y_IS_TMC2130) || ENABLED( Y_IS_TMC2208) || ENABLED(IS_TRAMS))
 #define Y2_IS_TRINAMIC (ENABLED(Y2_IS_TMC2130) || ENABLED(Y2_IS_TMC2208))
 #define  Z_IS_TRINAMIC (ENABLED( Z_IS_TMC2130) || ENABLED( Z_IS_TMC2208) || ENABLED(IS_TRAMS))
 #define Z2_IS_TRINAMIC (ENABLED(Z2_IS_TMC2130) || ENABLED(Z2_IS_TMC2208))
 #define E0_IS_TRINAMIC (ENABLED(E0_IS_TMC2130) || ENABLED(E0_IS_TMC2208) || ENABLED(IS_TRAMS))
 #define E1_IS_TRINAMIC (ENABLED(E1_IS_TMC2130) || ENABLED(E1_IS_TMC2208))
 #define E2_IS_TRINAMIC (ENABLED(E2_IS_TMC2130) || ENABLED(E2_IS_TMC2208))
 #define E3_IS_TRINAMIC (ENABLED(E3_IS_TMC2130) || ENABLED(E3_IS_TMC2208))
 #define E4_IS_TRINAMIC (ENABLED(E4_IS_TMC2130) || ENABLED(E4_IS_TMC2208))
 
-// Disable Z axis sensorless homing if a probe is used to home the Z axis
 #if ENABLED(SENSORLESS_HOMING)
-  #define X_SENSORLESS (ENABLED(X_IS_TMC2130) && defined(X_HOMING_SENSITIVITY))
-  #define Y_SENSORLESS (ENABLED(Y_IS_TMC2130) && defined(Y_HOMING_SENSITIVITY))
-  #define Z_SENSORLESS (ENABLED(Z_IS_TMC2130) && defined(Z_HOMING_SENSITIVITY))
+  // Disable Z axis sensorless homing if a probe is used to home the Z axis
   #if HOMING_Z_WITH_PROBE
     #undef Z_HOMING_SENSITIVITY
   #endif
+  #define X_SENSORLESS (ENABLED(X_IS_TMC2130) && defined(X_HOMING_SENSITIVITY))
+  #define Y_SENSORLESS (ENABLED(Y_IS_TMC2130) && defined(Y_HOMING_SENSITIVITY))
+  #define Z_SENSORLESS (ENABLED(Z_IS_TMC2130) && defined(Z_HOMING_SENSITIVITY))
 #endif
 
 // Endstops and bed probe
 #define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_X2_ENDSTOP(X,MIN) && !IS_Y2_ENDSTOP(X,MIN) && !IS_Z2_OR_PROBE(X,MIN))
 #define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_X2_ENDSTOP(X,MAX) && !IS_Y2_ENDSTOP(X,MAX) && !IS_Z2_OR_PROBE(X,MAX))
 #define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_X2_ENDSTOP(Y,MIN) && !IS_Y2_ENDSTOP(Y,MIN) && !IS_Z2_OR_PROBE(Y,MIN))
 #define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_X2_ENDSTOP(Y,MAX) && !IS_Y2_ENDSTOP(Y,MAX) && !IS_Z2_OR_PROBE(Y,MAX))
 #define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_X2_ENDSTOP(Z,MIN) && !IS_Y2_ENDSTOP(Z,MIN) && !IS_Z2_OR_PROBE(Z,MIN))
 #define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_X2_ENDSTOP(Z,MAX) && !IS_Y2_ENDSTOP(Z,MAX) && !IS_Z2_OR_PROBE(Z,MAX))
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))

commit 299c4fed42cde17063c19a7c5fb95d037aa61b32
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 26 01:30:10 2018 -0500

    Undefine PIDTEMPBED without a bed heater

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 387dbf0198..3d56a21b44 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -395,26 +395,20 @@
   #define CHAMBER_USES_AD595
 #elif TEMP_SENSOR_CHAMBER > 0
   #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
   #define CHAMBER_USES_THERMISTOR
 #endif
 
 #ifdef __SAM3X8E__
   #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595))
 #endif
 
-/**
- * Flags for PID handling
- */
-#define HAS_PID_HEATING (ENABLED(PIDTEMP) || ENABLED(PIDTEMPBED))
-#define HAS_PID_FOR_BOTH (ENABLED(PIDTEMP) && ENABLED(PIDTEMPBED))
-
 /**
  * Default hotend offsets, if not defined
  */
 #if HOTENDS > 1
   #ifndef HOTEND_OFFSET_X
     #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
   #ifndef HOTEND_OFFSET_Y
     #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
   #endif
@@ -766,23 +760,31 @@
 #define HAS_TEMP_CHAMBER (PIN_EXISTS(TEMP_CHAMBER) && TEMP_SENSOR_CHAMBER != 0 && TEMP_SENSOR_CHAMBER > -2)
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
+// Shorthand for common combinations
 #define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
 #define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_HEATED_BED || HAS_TEMP_CHAMBER)
 
+// PID heating
+#if !HAS_HEATED_BED
+  #undef PIDTEMPBED
+#endif
+#define HAS_PID_HEATING (ENABLED(PIDTEMP) || ENABLED(PIDTEMPBED))
+#define HAS_PID_FOR_BOTH (ENABLED(PIDTEMP) && ENABLED(PIDTEMPBED))
+
 // Thermal protection
 #define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
 #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
 #define WATCH_THE_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))

commit cb46cb8480c33ffc9f6361b96ed200986a3bd9ac
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 23 17:13:01 2018 -0500

    Add HAS_HEATED_BED conditional (#10495)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4f5e26a47c..387dbf0198 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -757,32 +757,34 @@
 
 // Thermistors
 #define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
 #define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
 #define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
 #define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
 #define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)
 #define HAS_TEMP_HOTEND (HAS_TEMP_0 || ENABLED(HEATER_0_USES_MAX6675))
 #define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && TEMP_SENSOR_BED > -2)
 #define HAS_TEMP_CHAMBER (PIN_EXISTS(TEMP_CHAMBER) && TEMP_SENSOR_CHAMBER != 0 && TEMP_SENSOR_CHAMBER > -2)
-#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_TEMP_BED || HAS_TEMP_CHAMBER)
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
+#define HAS_HEATED_BED (HAS_TEMP_BED && HAS_HEATER_BED)
+#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_HEATED_BED || HAS_TEMP_CHAMBER)
+
 // Thermal protection
-#define HAS_THERMALLY_PROTECTED_BED (ENABLED(THERMAL_PROTECTION_BED) && HAS_TEMP_BED && HAS_HEATER_BED)
+#define HAS_THERMALLY_PROTECTED_BED (HAS_HEATED_BED && ENABLED(THERMAL_PROTECTION_BED))
 #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
 #define WATCH_THE_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
 #define HAS_AUTO_CHAMBER_FAN (PIN_EXISTS(CHAMBER_AUTO_FAN))
@@ -890,21 +892,21 @@
 #endif // HOTENDS > 1
 #if ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
 #else
   #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
 #endif
 
 /**
  * Heated bed requires settings
  */
-#if HAS_HEATER_BED
+#if HAS_HEATED_BED
   #ifndef MAX_BED_POWER
     #define MAX_BED_POWER 255
   #endif
   #ifndef HEATER_BED_INVERTING
     #define HEATER_BED_INVERTING false
   #endif
   #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ HEATER_BED_INVERTING)
 #endif
 
 /**

commit 11ab017dd06bb9d06435dc03469a799d53893493
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 21 19:41:26 2018 -0500

    Creality3D Power-Loss Recovery

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 2714739bd4..4f5e26a47c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1327,21 +1327,21 @@
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
 // Shorthand
 #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
 
 // Add commands that need sub-codes to this list
-#define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS)
+#define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS) || ENABLED(POWER_LOSS_RECOVERY)
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif

commit 5cc7916e699a711bee82f0fbe342b7ebd80b6b37
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Apr 18 15:56:10 2018 -0600

    Add G29_RETRY_AND_RECOVER feature
    
    - Add an option to retry G29, optionally executing a G-code procedure after each failed probe.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7d2650726b..2714739bd4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1441,11 +1441,15 @@
 #endif
 
 // needs to be here so that we catch the above changes to our defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
 // If platform requires early initialization of watchdog to properly boot
 #define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
 
+#if ENABLED(G29_RETRY_AND_RECOVER)
+  #define USE_EXECUTE_COMMANDS_IMMEDIATE
+#endif
+
 #endif // CONDITIONALS_POST_H

commit 39c6f65ce7ed07fd0d4ad5dd8dca68c04365ffa3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Apr 17 15:57:44 2018 -0500

    Ignore LCD_BED_LEVELING with UBL

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 4f61dd1ec6..7d2650726b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1032,20 +1032,24 @@
 #define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
 #define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_SEGMENTED || ENABLED(SKEW_CORRECTION))
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 
+#if ENABLED(AUTO_BED_LEVELING_UBL)
+  #undef LCD_BED_LEVELING
+#endif
+
 /**
  * Heater & Fan Pausing
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
 #endif
 #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
 #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)

commit 2d9b0a66fe8bbd417f6b1dfef9651667aef383c1
Author: Sean <noingwhat@gmail.com>
Date:   Tue Mar 20 11:19:10 2018 -0700

    Add Filament Change accelerations

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 13f9d3d776..4f61dd1ec6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1041,20 +1041,24 @@
 
 /**
  * Heater & Fan Pausing
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
 #endif
 #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
 #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
 
+#if ENABLED(ADVANCED_PAUSE_FEATURE) && !defined(FILAMENT_CHANGE_SLOW_LOAD_LENGTH)
+  #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH 0
+#endif
+
 /**
  * Only constrain Z on DELTA / SCARA machines
  */
 #if IS_KINEMATIC
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 

commit 0e8242180d8cf59f609fe3e775d2c41b1ef8272c
Author: Lenbok <lenbok@gmail.com>
Date:   Sat Feb 24 19:38:58 2018 +1300

    Chamber temperature monitoring and auto fan control.
    
    This is an initial cut for feedback, updated for 2.0.x.
    
    Chamber temperature is currently reported along with hot end and bed
    temperatures to serial. The format is just like that used for hot end
    and bed temperatures, but using 'C' prefix. As there is no heater,
    target is always 0. Is this appropriate, is there a better way to report
    chamber temperatures?
    
    Chamber temperatures are not reported on the LCD in any way.
    
    When auto chamber fan is enabled, it currently just uses the same
    temperature threshold as the other auto controlled fans.
    
    As the chamber temperature is not connected to any heater, it doesn't
    undergo mintemp/maxtemp monitoring. This would need to change in the
    future if chamber heating became a feature.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 39bc1f96a1..13f9d3d776 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -382,20 +382,29 @@
 #elif TEMP_SENSOR_BED == -1
   #define BED_USES_AD595
 #elif TEMP_SENSOR_BED == 0
   #undef BED_MINTEMP
   #undef BED_MAXTEMP
 #elif TEMP_SENSOR_BED > 0
   #define THERMISTORBED TEMP_SENSOR_BED
   #define BED_USES_THERMISTOR
 #endif
 
+#if TEMP_SENSOR_CHAMBER <= -2
+  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_CHAMBER"
+#elif TEMP_SENSOR_CHAMBER == -1
+  #define CHAMBER_USES_AD595
+#elif TEMP_SENSOR_CHAMBER > 0
+  #define THERMISTORCHAMBER TEMP_SENSOR_CHAMBER
+  #define CHAMBER_USES_THERMISTOR
+#endif
+
 #ifdef __SAM3X8E__
   #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595))
 #endif
 
 /**
  * Flags for PID handling
  */
 #define HAS_PID_HEATING (ENABLED(PIDTEMP) || ENABLED(PIDTEMPBED))
 #define HAS_PID_FOR_BOTH (ENABLED(PIDTEMP) && ENABLED(PIDTEMPBED))
 
@@ -747,52 +756,59 @@
 #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
 
 // Thermistors
 #define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
 #define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
 #define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
 #define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
 #define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)
 #define HAS_TEMP_HOTEND (HAS_TEMP_0 || ENABLED(HEATER_0_USES_MAX6675))
 #define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && TEMP_SENSOR_BED > -2)
-#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_TEMP_BED)
+#define HAS_TEMP_CHAMBER (PIN_EXISTS(TEMP_CHAMBER) && TEMP_SENSOR_CHAMBER != 0 && TEMP_SENSOR_CHAMBER > -2)
+#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_TEMP_BED || HAS_TEMP_CHAMBER)
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
 // Thermal protection
 #define HAS_THERMALLY_PROTECTED_BED (ENABLED(THERMAL_PROTECTION_BED) && HAS_TEMP_BED && HAS_HEATER_BED)
 #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
 #define WATCH_THE_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
 
 // Auto fans
 #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
 #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
 #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
 #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
 #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
-#define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3)
+#define HAS_AUTO_CHAMBER_FAN (PIN_EXISTS(CHAMBER_AUTO_FAN))
+#define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3 || HAS_AUTO_CHAMBER_FAN)
 #define AUTO_1_IS_0 (E1_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_2_IS_0 (E2_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_2_IS_1 (E2_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
 #define AUTO_3_IS_0 (E3_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_3_IS_1 (E3_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
 #define AUTO_3_IS_2 (E3_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
 #define AUTO_4_IS_0 (E4_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
 #define AUTO_4_IS_1 (E4_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
 #define AUTO_4_IS_2 (E4_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
 #define AUTO_4_IS_3 (E4_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
+#define AUTO_CHAMBER_IS_0 (CHAMBER_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+#define AUTO_CHAMBER_IS_1 (CHAMBER_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+#define AUTO_CHAMBER_IS_2 (CHAMBER_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
+#define AUTO_CHAMBER_IS_3 (CHAMBER_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
+#define AUTO_CHAMBER_IS_4 (CHAMBER_AUTO_FAN_PIN == E4_AUTO_FAN_PIN)
 
 // Other fans
 #define HAS_FAN0 (PIN_EXISTS(FAN))
 #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN)
 #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN)
 #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
 
 // Servos
 #define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))

commit 7cbbc2af7a86f16588cc30936ec4d501b6bcf80d
Author: Karl Andersson <karl@iaccess.se>
Date:   Tue Apr 3 02:37:41 2018 +0200

    [2.0.x] Optional heater signal inversion (#10260)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index e7c371fcbb..39bc1f96a1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -824,32 +824,57 @@
 #define HAS_AUTO_REPORTING (ENABLED(AUTO_REPORT_TEMPERATURES) || ENABLED(AUTO_REPORT_SD_STATUS))
 
 /**
  * This setting is also used by M109 when trying to calculate
  * a ballpark safe margin to prevent wait-forever situation.
  */
 #ifndef EXTRUDE_MINTEMP
   #define EXTRUDE_MINTEMP 170
 #endif
 
+/**
+ * Heater signal inversion defaults
+ */
+
+#if HAS_HEATER_0 && !defined(HEATER_0_INVERTING)
+  #define HEATER_0_INVERTING false
+#endif
+
+#if HAS_HEATER_1 && !defined(HEATER_1_INVERTING)
+  #define HEATER_1_INVERTING false
+#endif
+
+#if HAS_HEATER_2 && !defined(HEATER_2_INVERTING)
+  #define HEATER_2_INVERTING false
+#endif
+
+#if HAS_HEATER_3 && !defined(HEATER_3_INVERTING)
+  #define HEATER_3_INVERTING false
+#endif
+
+#if HAS_HEATER_4 && !defined(HEATER_4_INVERTING)
+  #define HEATER_4_INVERTING false
+#endif
+
 /**
  * Helper Macros for heaters and extruder fan
  */
-#define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, v)
+
+#define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, (v) ^ HEATER_0_INVERTING)
 #if HOTENDS > 1 || ENABLED(HEATERS_PARALLEL)
-  #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, v)
+  #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, (v) ^ HEATER_1_INVERTING)
   #if HOTENDS > 2
-    #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, v)
+    #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, (v) ^ HEATER_2_INVERTING)
     #if HOTENDS > 3
-      #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, v)
+      #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, (v) ^ HEATER_3_INVERTING)
       #if HOTENDS > 4
-        #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, v)
+        #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, (v) ^ HEATER_4_INVERTING)
       #endif // HOTENDS > 4
     #endif // HOTENDS > 3
   #endif // HOTENDS > 2
 #endif // HOTENDS > 1
 #if ENABLED(HEATERS_PARALLEL)
   #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
 #else
   #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
 #endif
 

commit adcb87f0db47672c28cfec9fda3354adac81fa99
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 1 23:54:12 2018 -0500

    Z Endstop Servo => Z Probe Servo

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c838690aef..e7c371fcbb 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -894,22 +894,22 @@
 /**
  * Part Cooling fan multipliexer
  */
 #define HAS_FANMUX PIN_EXISTS(FANMUX0)
 
 /**
  * Servos and probes
  */
 
 #if HAS_SERVOS
-  #ifndef Z_ENDSTOP_SERVO_NR
-    #define Z_ENDSTOP_SERVO_NR -1
+  #ifndef Z_PROBE_SERVO_NR
+    #define Z_PROBE_SERVO_NR -1
   #endif
 #endif
 
 #define HAS_BED_PROBE (PROBE_SELECTED && DISABLED(PROBE_MANUALLY))
 
 #if ENABLED(Z_PROBE_ALLEN_KEY)
   #define PROBE_IS_TRIGGERED_WHEN_STOWED_TEST
 #endif
 
 /**

commit 97e8a6ebd972ce0ad5b4e27aa139b9bb074ff44e
Author: Eduardo Jos√© Tagle <ejtagle@hotmail.com>
Date:   Wed Mar 21 21:04:45 2018 -0300

    Various fixes for DUE... (#10152)
    
    - Watchdog reset during SD Card initialization.
    - Move `DebugMonitor` to `DebugMonitor_Due.cpp`.
    - Since the watchdog is enabled on boot do extra resets during init.
    - Have `thermalManager` do watchdog reset before its ISR starts to prevent reset.
    - Ensure that timers are stopped before reprogramming them to address tone issues.
    - Improve SAM3XE reset when reflashed through the native port.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a440771d33..c838690aef 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1389,11 +1389,14 @@
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif
 #endif
 
 // needs to be here so that we catch the above changes to our defines
 #if ENABLED(SDCARD_SORT_ALPHA)
   #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
 #endif
 
+// If platform requires early initialization of watchdog to properly boot
+#define EARLY_WATCHDOG (ENABLED(USE_WATCHDOG) && defined(ARDUINO_ARCH_SAM))
+
 #endif // CONDITIONALS_POST_H

commit dd2949922bfbfec08c3f77714325cb88b7df61de
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 19 01:22:21 2018 -0500

    Consolidate 3-point leveling point options

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1ba3f10900..a440771d33 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1132,20 +1132,83 @@
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif
   #ifndef MESH_MAX_Y
     #define MESH_MAX_Y _MESH_MAX_Y
   #endif
 
 #endif // MESH_BED_LEVELING || AUTO_BED_LEVELING_UBL
 
+#if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(AUTO_BED_LEVELING_3POINT)
+  #if IS_KINEMATIC
+    #define SIN0    0.0
+    #define SIN120  0.866025
+    #define SIN240 -0.866025
+    #define COS0    1.0
+    #define COS120 -0.5
+    #define COS240 -0.5
+    #ifndef PROBE_PT_1_X
+      #define PROBE_PT_1_X (X_CENTER + (_PROBE_RADIUS) * COS0)
+    #endif
+    #ifndef PROBE_PT_1_Y
+      #define PROBE_PT_1_Y (Y_CENTER + (_PROBE_RADIUS) * SIN0)
+    #endif
+    #ifndef PROBE_PT_2_X
+      #define PROBE_PT_2_X (X_CENTER + (_PROBE_RADIUS) * COS120)
+    #endif
+    #ifndef PROBE_PT_2_Y
+      #define PROBE_PT_2_Y (Y_CENTER + (_PROBE_RADIUS) * SIN120)
+    #endif
+    #ifndef PROBE_PT_3_X
+      #define PROBE_PT_3_X (X_CENTER + (_PROBE_RADIUS) * COS240)
+    #endif
+    #ifndef PROBE_PT_3_Y
+      #define PROBE_PT_3_Y (Y_CENTER + (_PROBE_RADIUS) * SIN240)
+    #endif
+  #else
+    #ifndef PROBE_PT_1_X
+      #define PROBE_PT_1_X MIN_PROBE_X
+    #endif
+    #ifndef PROBE_PT_1_Y
+      #define PROBE_PT_1_Y MIN_PROBE_Y
+    #endif
+    #ifndef PROBE_PT_2_X
+      #define PROBE_PT_2_X MAX_PROBE_X
+    #endif
+    #ifndef PROBE_PT_2_Y
+      #define PROBE_PT_2_Y MIN_PROBE_Y
+    #endif
+    #ifndef PROBE_PT_3_X
+      #define PROBE_PT_3_X X_CENTER
+    #endif
+    #ifndef PROBE_PT_3_Y
+      #define PROBE_PT_3_Y MAX_PROBE_Y
+    #endif
+  #endif
+#endif
+
+#if ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR)
+  #ifndef LEFT_PROBE_BED_POSITION
+    #define LEFT_PROBE_BED_POSITION MIN_PROBE_X
+  #endif
+  #ifndef RIGHT_PROBE_BED_POSITION
+    #define RIGHT_PROBE_BED_POSITION MAX_PROBE_X
+  #endif
+  #ifndef FRONT_PROBE_BED_POSITION
+    #define FRONT_PROBE_BED_POSITION MIN_PROBE_Y
+  #endif
+  #ifndef BACK_PROBE_BED_POSITION
+    #define BACK_PROBE_BED_POSITION MAX_PROBE_Y
+  #endif
+#endif
+
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif

commit 1d22609473db1dc2ff9bf290a0741cc38ff8a728
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 19 01:18:57 2018 -0500

    MIN_PROBE_EDGE replaces DELTA_PROBEABLE_RADIUS

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ca7a8db33f..1ba3f10900 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -977,111 +977,116 @@
     constexpr float YZ_SKEW_FACTOR = (
       #if defined(YZ_DIAG_AC) && defined(YZ_DIAG_BD) && defined(YZ_SIDE_AD)
         _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
       #else
         0.0
       #endif
     );
   #endif
 #endif // SKEW_CORRECTION
 
+/**
+ * Set granular options based on the specific type of leveling
+ */
+#define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
+#define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
+#define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
+#define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
+#define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
+#define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
+#define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
+#define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
+#define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_SEGMENTED || ENABLED(SKEW_CORRECTION))
+#define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
+
 /**
  * Heater & Fan Pausing
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
 #endif
 #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
 #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
 
 /**
  * Only constrain Z on DELTA / SCARA machines
  */
 #if IS_KINEMATIC
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
- * Delta radius/rod trimmers/angle trimmers
+ * Bed Probing rectangular bounds
+ * These can be further constrained in code for Delta and SCARA
  */
+
+#ifndef MIN_PROBE_EDGE
+  #define MIN_PROBE_EDGE 0
+#endif
+
 #if ENABLED(DELTA)
+  /**
+   * Delta radius/rod trimmers/angle trimmers
+   */
+  #define _PROBE_RADIUS (DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #ifndef DELTA_CALIBRATION_RADIUS
-    #define DELTA_CALIBRATION_RADIUS DELTA_PRINTABLE_RADIUS - 10
+    #ifdef X_PROBE_OFFSET_FROM_EXTRUDER
+      #define DELTA_CALIBRATION_RADIUS (DELTA_PRINTABLE_RADIUS - MAX3(abs(X_PROBE_OFFSET_FROM_EXTRUDER), abs(Y_PROBE_OFFSET_FROM_EXTRUDER), abs(MIN_PROBE_EDGE)))
+    #else
+      #define DELTA_CALIBRATION_RADIUS _PROBE_RADIUS
+    #endif
   #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
     #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
   #endif
   #ifndef DELTA_RADIUS_TRIM_TOWER
     #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
   #endif
   #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
     #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
   #endif
-#endif
-
-/**
- * Set granular options based on the specific type of leveling
- */
-#define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
-#define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
-#define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
-#define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
-#define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
-#define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
-#define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
-#define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
-#define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_SEGMENTED || ENABLED(SKEW_CORRECTION))
-#define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
-#if HAS_PROBING_PROCEDURE
-  #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
-  #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
-#endif
-
-#if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
-  #define LEVELED_SEGMENT_LENGTH 5
-#endif
-
-/**
- * Bed Probing rectangular bounds
- * These can be further constrained in code for Delta and SCARA
- */
 
-#ifndef MIN_PROBE_EDGE
-  #define MIN_PROBE_EDGE 0
-#endif
-
-#if ENABLED(DELTA)
   // Probing points may be verified at compile time within the radius
   // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
   // so that may be added to SanityCheck.h in the future.
-  #define _MIN_PROBE_X (X_CENTER - (DELTA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
-  #define _MIN_PROBE_Y (Y_CENTER - (DELTA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
-  #define _MAX_PROBE_X (X_CENTER + DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
-  #define _MAX_PROBE_Y (Y_CENTER + DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
+  #define _MIN_PROBE_X (X_CENTER - (_PROBE_RADIUS))
+  #define _MIN_PROBE_Y (Y_CENTER - (_PROBE_RADIUS))
+  #define _MAX_PROBE_X (X_CENTER + _PROBE_RADIUS)
+  #define _MAX_PROBE_Y (Y_CENTER + _PROBE_RADIUS)
+
 #elif IS_SCARA
+
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
+  #define _PROBE_RADIUS (SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define _MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
   #define _MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
   #define _MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
   #define _MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
+
 #else
+
   // Boundaries for Cartesian probing based on bed limits
   #define _MIN_PROBE_X (max(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
   #define _MIN_PROBE_Y (max(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
   #define _MAX_PROBE_X (min(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
   #define _MAX_PROBE_Y (min(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+
+#endif
+
+#if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
+  #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 // These may be overridden in Configuration.h if a smaller area is desired
 #ifndef MIN_PROBE_X
   #define MIN_PROBE_X _MIN_PROBE_X
 #endif
 #ifndef MIN_PROBE_Y
   #define MIN_PROBE_Y _MIN_PROBE_Y
 #endif
 #ifndef MAX_PROBE_X
@@ -1109,24 +1114,22 @@
       #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
       #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
       #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS))
       #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
       #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
       #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
       #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
       #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
     #endif
-
   #endif
 
-
   // These may be overridden in Configuration.h if a smaller area is desired
   #ifndef MESH_MIN_X
     #define MESH_MIN_X _MESH_MIN_X
   #endif
   #ifndef MESH_MIN_Y
     #define MESH_MIN_Y _MESH_MIN_Y
   #endif
   #ifndef MESH_MAX_X
     #define MESH_MAX_X _MESH_MAX_X
   #endif

commit 14c03cb6f4bf20b06ba5d6c849cd1a15341627df
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 13 01:15:22 2018 -0500

    [2.0.x] Make MIN_PROBE_EDGE a general option (for electronic probes) (#10069)
    
    Some probes don't work near the edges of the bed. This change promotes MIN_PROBE_EDGE to a general setting that applies to all probing functions.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index beb4d178cc..ca7a8db33f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1000,23 +1000,20 @@
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
  * Delta radius/rod trimmers/angle trimmers
  */
 #if ENABLED(DELTA)
-  #ifndef DELTA_PROBEABLE_RADIUS
-    #define DELTA_PROBEABLE_RADIUS DELTA_PRINTABLE_RADIUS
-  #endif
   #ifndef DELTA_CALIBRATION_RADIUS
     #define DELTA_CALIBRATION_RADIUS DELTA_PRINTABLE_RADIUS - 10
   #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
     #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
   #endif
   #ifndef DELTA_RADIUS_TRIM_TOWER
@@ -1046,43 +1043,48 @@
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 
 /**
  * Bed Probing rectangular bounds
  * These can be further constrained in code for Delta and SCARA
  */
+
+#ifndef MIN_PROBE_EDGE
+  #define MIN_PROBE_EDGE 0
+#endif
+
 #if ENABLED(DELTA)
   // Probing points may be verified at compile time within the radius
   // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
   // so that may be added to SanityCheck.h in the future.
-  #define _MIN_PROBE_X (X_CENTER - DELTA_PRINTABLE_RADIUS)
-  #define _MIN_PROBE_Y (Y_CENTER - DELTA_PRINTABLE_RADIUS)
-  #define _MAX_PROBE_X (X_CENTER + DELTA_PRINTABLE_RADIUS)
-  #define _MAX_PROBE_Y (Y_CENTER + DELTA_PRINTABLE_RADIUS)
+  #define _MIN_PROBE_X (X_CENTER - (DELTA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
+  #define _MIN_PROBE_Y (Y_CENTER - (DELTA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
+  #define _MAX_PROBE_X (X_CENTER + DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
+  #define _MAX_PROBE_Y (Y_CENTER + DELTA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
 #elif IS_SCARA
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
-  #define _MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
-  #define _MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
-  #define _MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
-  #define _MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
+  #define _MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
+  #define _MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS) + MIN_PROBE_EDGE)
+  #define _MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
+  #define _MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS - (MIN_PROBE_EDGE))
 #else
   // Boundaries for Cartesian probing based on bed limits
-  #define _MIN_PROBE_X (max(X_MIN_BED, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MIN_PROBE_Y (max(Y_MIN_BED, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MAX_PROBE_X (min(X_MAX_BED, X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define _MAX_PROBE_Y (min(Y_MAX_BED, Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MIN_PROBE_X (max(X_MIN_BED + MIN_PROBE_EDGE, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MIN_PROBE_Y (max(Y_MIN_BED + MIN_PROBE_EDGE, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MAX_PROBE_X (min(X_MAX_BED - (MIN_PROBE_EDGE), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MAX_PROBE_Y (min(Y_MAX_BED - (MIN_PROBE_EDGE), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
 #endif
 
-// Allow configuration to override these for special purposes
+// These may be overridden in Configuration.h if a smaller area is desired
 #ifndef MIN_PROBE_X
   #define MIN_PROBE_X _MIN_PROBE_X
 #endif
 #ifndef MIN_PROBE_Y
   #define MIN_PROBE_Y _MIN_PROBE_Y
 #endif
 #ifndef MAX_PROBE_X
   #define MAX_PROBE_X _MAX_PROBE_X
 #endif
 #ifndef MAX_PROBE_Y
@@ -1090,55 +1092,55 @@
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
 #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
-    #define _MESH_MIN_X (MIN_PROBE_X + MESH_INSET)
-    #define _MESH_MIN_Y (MIN_PROBE_Y + MESH_INSET)
-    #define _MESH_MAX_X (MAX_PROBE_X - (MESH_INSET))
-    #define _MESH_MAX_Y (MAX_PROBE_Y - (MESH_INSET))
+    #define _MESH_MIN_X (X_MIN_BED + MESH_INSET)
+    #define _MESH_MIN_Y (Y_MIN_BED + MESH_INSET)
+    #define _MESH_MAX_X (X_MAX_BED - (MESH_INSET))
+    #define _MESH_MAX_Y (Y_MAX_BED - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
       #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
       #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS))
       #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
       #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
       #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
       #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
       #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
     #endif
+
   #endif
-  /**
-   * These may be overridden in Configuration if a smaller area is wanted
-   */
-  #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
-    #ifndef MESH_MIN_X
-      #define MESH_MIN_X _MESH_MIN_X
-    #endif
-    #ifndef MESH_MIN_Y
-      #define MESH_MIN_Y _MESH_MIN_Y
-    #endif
-    #ifndef MESH_MAX_X
-      #define MESH_MAX_X _MESH_MAX_X
-    #endif
-    #ifndef MESH_MAX_Y
-      #define MESH_MAX_Y _MESH_MAX_Y
-    #endif
+
+
+  // These may be overridden in Configuration.h if a smaller area is desired
+  #ifndef MESH_MIN_X
+    #define MESH_MIN_X _MESH_MIN_X
   #endif
+  #ifndef MESH_MIN_Y
+    #define MESH_MIN_Y _MESH_MIN_Y
+  #endif
+  #ifndef MESH_MAX_X
+    #define MESH_MAX_X _MESH_MAX_X
+  #endif
+  #ifndef MESH_MAX_Y
+    #define MESH_MAX_Y _MESH_MAX_Y
+  #endif
+
 #endif // MESH_BED_LEVELING || AUTO_BED_LEVELING_UBL
 
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS

commit eb212ae073bc0fdcb5723a34b13cf9201ce537dc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 7 01:57:09 2018 -0600

    Add suspend_auto_report flag to suppress auto-report

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 084f525869..beb4d178cc 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -814,20 +814,22 @@
 // Digital control
 #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS)
 #define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
 
 #if !HAS_TEMP_SENSOR
   #undef AUTO_REPORT_TEMPERATURES
 #endif
 
+#define HAS_AUTO_REPORTING (ENABLED(AUTO_REPORT_TEMPERATURES) || ENABLED(AUTO_REPORT_SD_STATUS))
+
 /**
  * This setting is also used by M109 when trying to calculate
  * a ballpark safe margin to prevent wait-forever situation.
  */
 #ifndef EXTRUDE_MINTEMP
   #define EXTRUDE_MINTEMP 170
 #endif
 
 /**
  * Helper Macros for heaters and extruder fan

commit ffbf63e6afb7728849d434ccfda89e3fd8b37094
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 7 01:53:50 2018 -0600

    Add HAS_TEMP_SENSOR conditional

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 25a7d4086f..084f525869 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -747,20 +747,21 @@
 #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
 
 // Thermistors
 #define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
 #define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
 #define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
 #define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
 #define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)
 #define HAS_TEMP_HOTEND (HAS_TEMP_0 || ENABLED(HEATER_0_USES_MAX6675))
 #define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && TEMP_SENSOR_BED > -2)
+#define HAS_TEMP_SENSOR (HAS_TEMP_HOTEND || HAS_TEMP_BED)
 
 // Heaters
 #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
 #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
 #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
 #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
 #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
 #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
 
 // Thermal protection
@@ -809,20 +810,24 @@
 #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
 #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control
 #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS)
 #define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
 #define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
 #define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
 
+#if !HAS_TEMP_SENSOR
+  #undef AUTO_REPORT_TEMPERATURES
+#endif
+
 /**
  * This setting is also used by M109 when trying to calculate
  * a ballpark safe margin to prevent wait-forever situation.
  */
 #ifndef EXTRUDE_MINTEMP
   #define EXTRUDE_MINTEMP 170
 #endif
 
 /**
  * Helper Macros for heaters and extruder fan

commit 6d7f4f84e25f90aa8afe694d6ccf90788674db56
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 3 23:14:52 2018 -0600

    Add board MKS_BASE_HEROIC (#9926)
    
    Followup to #9008
    
    - Don't define micro-stepping pins for boards that lack them.
    - Allow setting of 128 microsteps with `M350`.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ac5bd80e4e..25a7d4086f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -245,32 +245,36 @@
 #else
   #ifdef CPU_32_BIT
     #define MAX_STEP_FREQUENCY (STEP_DOUBLER_FREQUENCY * 4) // Max step frequency for the Due is approx. 330kHz
   #else
     #define MAX_STEP_FREQUENCY 40000 // Max step frequency for Ultimaker (5000 pps / half step)
   #endif
 #endif
 
 // MS1 MS2 Stepper Driver Microstepping mode table
 #define MICROSTEP1 LOW,LOW
-#define MICROSTEP2 HIGH,LOW
-#define MICROSTEP4 LOW,HIGH
+#if ENABLED(HEROIC_STEPPER_DRIVERS)
+  #define MICROSTEP128 LOW,HIGH
+#else
+  #define MICROSTEP2 HIGH,LOW
+  #define MICROSTEP4 LOW,HIGH
+#endif
 #define MICROSTEP8 HIGH,HIGH
 #ifdef __SAM3X8E__
   #if MB(ALLIGATOR)
     #define MICROSTEP16 LOW,LOW
     #define MICROSTEP32 HIGH,HIGH
   #else
     #define MICROSTEP16 HIGH,HIGH
   #endif
 #else
-#define MICROSTEP16 HIGH,HIGH
+  #define MICROSTEP16 HIGH,HIGH
 #endif
 
 /**
  * Override here because this is set in Configuration_adv.h
  */
 #if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
   #undef SD_DETECT_INVERTED
 #endif
 
 /**

commit a446433c87dc8b715ed5b9d98a34104f90b676b2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 1 01:37:31 2018 -0600

    Fix SENSORLESS_HOMING for Core Kinematics (#9868)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d8c9f23a6c..ac5bd80e4e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -711,22 +711,27 @@
 #define Y2_IS_TRINAMIC (ENABLED(Y2_IS_TMC2130) || ENABLED(Y2_IS_TMC2208))
 #define  Z_IS_TRINAMIC (ENABLED( Z_IS_TMC2130) || ENABLED( Z_IS_TMC2208) || ENABLED(IS_TRAMS))
 #define Z2_IS_TRINAMIC (ENABLED(Z2_IS_TMC2130) || ENABLED(Z2_IS_TMC2208))
 #define E0_IS_TRINAMIC (ENABLED(E0_IS_TMC2130) || ENABLED(E0_IS_TMC2208) || ENABLED(IS_TRAMS))
 #define E1_IS_TRINAMIC (ENABLED(E1_IS_TMC2130) || ENABLED(E1_IS_TMC2208))
 #define E2_IS_TRINAMIC (ENABLED(E2_IS_TMC2130) || ENABLED(E2_IS_TMC2208))
 #define E3_IS_TRINAMIC (ENABLED(E3_IS_TMC2130) || ENABLED(E3_IS_TMC2208))
 #define E4_IS_TRINAMIC (ENABLED(E4_IS_TMC2130) || ENABLED(E4_IS_TMC2208))
 
 // Disable Z axis sensorless homing if a probe is used to home the Z axis
-#if ENABLED(SENSORLESS_HOMING) && HOMING_Z_WITH_PROBE
-  #undef Z_HOMING_SENSITIVITY
+#if ENABLED(SENSORLESS_HOMING)
+  #define X_SENSORLESS (ENABLED(X_IS_TMC2130) && defined(X_HOMING_SENSITIVITY))
+  #define Y_SENSORLESS (ENABLED(Y_IS_TMC2130) && defined(Y_HOMING_SENSITIVITY))
+  #define Z_SENSORLESS (ENABLED(Z_IS_TMC2130) && defined(Z_HOMING_SENSITIVITY))
+  #if HOMING_Z_WITH_PROBE
+    #undef Z_HOMING_SENSITIVITY
+  #endif
 #endif
 
 // Endstops and bed probe
 #define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_X2_ENDSTOP(X,MIN) && !IS_Y2_ENDSTOP(X,MIN) && !IS_Z2_OR_PROBE(X,MIN))
 #define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_X2_ENDSTOP(X,MAX) && !IS_Y2_ENDSTOP(X,MAX) && !IS_Z2_OR_PROBE(X,MAX))
 #define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_X2_ENDSTOP(Y,MIN) && !IS_Y2_ENDSTOP(Y,MIN) && !IS_Z2_OR_PROBE(Y,MIN))
 #define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_X2_ENDSTOP(Y,MAX) && !IS_Y2_ENDSTOP(Y,MAX) && !IS_Z2_OR_PROBE(Y,MAX))
 #define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_X2_ENDSTOP(Z,MIN) && !IS_Y2_ENDSTOP(Z,MIN) && !IS_Z2_OR_PROBE(Z,MIN))
 #define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_X2_ENDSTOP(Z,MAX) && !IS_Y2_ENDSTOP(Z,MAX) && !IS_Z2_OR_PROBE(Z,MAX))
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))

commit 3f89bbeab546f15fb1a3eb99964b194b862fb9c1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Feb 24 16:35:31 2018 -0600

    Drop a conditional only used once

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6ea54dd427..d8c9f23a6c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -909,25 +909,20 @@
   #ifndef Z_PROBE_OFFSET_RANGE_MAX
     #define Z_PROBE_OFFSET_RANGE_MAX 20
   #endif
   #ifndef XY_PROBE_SPEED
     #ifdef HOMING_FEEDRATE_XY
       #define XY_PROBE_SPEED HOMING_FEEDRATE_XY
     #else
       #define XY_PROBE_SPEED 4000
     #endif
   #endif
-  #if Z_CLEARANCE_BETWEEN_PROBES > Z_CLEARANCE_DEPLOY_PROBE
-    #define _Z_CLEARANCE_DEPLOY_PROBE Z_CLEARANCE_BETWEEN_PROBES
-  #else
-    #define _Z_CLEARANCE_DEPLOY_PROBE Z_CLEARANCE_DEPLOY_PROBE
-  #endif
 #else
   #undef X_PROBE_OFFSET_FROM_EXTRUDER
   #undef Y_PROBE_OFFSET_FROM_EXTRUDER
   #undef Z_PROBE_OFFSET_FROM_EXTRUDER
   #define X_PROBE_OFFSET_FROM_EXTRUDER 0
   #define Y_PROBE_OFFSET_FROM_EXTRUDER 0
   #define Z_PROBE_OFFSET_FROM_EXTRUDER 0
 #endif
 
 /**

commit d3ca82d8c24b94a0073d5839ddca6569a6d013a1
Author: Studiodyne <diabolomix@hotmail.fr>
Date:   Sun Feb 18 09:42:09 2018 +0100

    Support for multiple filament runout sensors

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8ad079d3a6..6ea54dd427 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -785,21 +785,20 @@
 
 // Servos
 #define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
 #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
 #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
 #define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
 #define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
 
 // Sensors
 #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
-#define HAS_FIL_RUNOUT (PIN_EXISTS(FIL_RUNOUT))
 
 // User Interface
 #define HAS_HOME (PIN_EXISTS(HOME))
 #define HAS_KILL (PIN_EXISTS(KILL))
 #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
 #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
 #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
 #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
 
 // Digital control

commit ca55f2927ab7416c6f404cfdeade4c9d5103929c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 18 19:26:23 2018 -0600

    Pulldown pin mode support (#9701)
    
    Implemented for LPC1768.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 7d088dbd5c..8ad079d3a6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -609,20 +609,44 @@
     #define ENDSTOPPULLUP_XMIN
   #endif
   #if ENABLED(USE_YMIN_PLUG)
     #define ENDSTOPPULLUP_YMIN
   #endif
   #if ENABLED(USE_ZMIN_PLUG)
     #define ENDSTOPPULLUP_ZMIN
   #endif
 #endif
 
+/**
+ * Set ENDSTOPPULLDOWNS for active endstop switches
+ */
+#if ENABLED(ENDSTOPPULLDOWNS)
+  #if ENABLED(USE_XMAX_PLUG)
+    #define ENDSTOPPULLDOWN_XMAX
+  #endif
+  #if ENABLED(USE_YMAX_PLUG)
+    #define ENDSTOPPULLDOWN_YMAX
+  #endif
+  #if ENABLED(USE_ZMAX_PLUG)
+    #define ENDSTOPPULLDOWN_ZMAX
+  #endif
+  #if ENABLED(USE_XMIN_PLUG)
+    #define ENDSTOPPULLDOWN_XMIN
+  #endif
+  #if ENABLED(USE_YMIN_PLUG)
+    #define ENDSTOPPULLDOWN_YMIN
+  #endif
+  #if ENABLED(USE_ZMIN_PLUG)
+    #define ENDSTOPPULLDOWN_ZMIN
+  #endif
+#endif
+
 /**
  * Shorthand for pin tests, used wherever needed
  */
 
 // Steppers
 #define HAS_X_ENABLE      (PIN_EXISTS(X_ENABLE))
 #define HAS_X_DIR         (PIN_EXISTS(X_DIR))
 #define HAS_X_STEP        (PIN_EXISTS(X_STEP))
 #define HAS_X_MICROSTEPS  (PIN_EXISTS(X_MS1))
 

commit 3d74ff3c87abc38eb26f11d6b37a6a00bb656559
Author: Roxy-3D <Roxy-3D@users.noreply.github.com>
Date:   Wed Feb 14 14:16:12 2018 -0600

    Cartesian UBL systems should not use SEGMENT_LEVELED_MOVES
    
    There is significant downside to breaking up the long line segments on UBL Cartesian machines.   It adds a lot of extra computation but worse...  It cuts out all of UBL's off mesh Z-Height correction checks.    There have been a large number of people complaining about the nozzle going to infinity or crashing into the bed lately.   They are being caused by
    ```
    void unified_bed_leveling::line_to_destination_cartesian()
    ```
    not watching over the segments being queued up for movement.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index f8a8ec7be0..7d088dbd5c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -989,21 +989,21 @@
     #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
   #endif
   #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
     #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
   #endif
 #endif
 
 /**
  * Set granular options based on the specific type of leveling
  */
-#define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(SEGMENT_LEVELED_MOVES)))
+#define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA)))
 #define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
 #define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_SEGMENTED || ENABLED(SKEW_CORRECTION))
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #if HAS_PROBING_PROCEDURE

commit 5dc04c520139cd91ab5feb731c74358dd865757e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 14 07:48:20 2018 -0600

    Fix #9361

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 67430387bd..f8a8ec7be0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1113,23 +1113,23 @@
 #else
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 5000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
 #endif
 
 /**
- * VIKI2, miniVIKI, and AZSMZ_12864 require DOGLCD_SCK and DOGLCD_MOSI to be defined.
+ * VIKI2, miniVIKI, AZSMZ_12864, and MKS_12864OLED_SSD1306 require DOGLCD_SCK and DOGLCD_MOSI to be defined.
  */
-#if ENABLED(VIKI2) || ENABLED(miniVIKI) || ENABLED(AZSMZ_12864)
+#if ENABLED(VIKI2) || ENABLED(miniVIKI) || ENABLED(AZSMZ_12864) || ENABLED(MKS_12864OLED_SSD1306)
   #ifndef DOGLCD_SCK
     #define DOGLCD_SCK  SCK_PIN
   #endif
   #ifndef DOGLCD_MOSI
     #define DOGLCD_MOSI MOSI_PIN
   #endif
 #endif
 
 /**
  * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES

commit 1541224a81a80b91a1ac2009c917f1f33e816cfb
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Thu Feb 8 04:20:44 2018 -0600

    Enable Z axis and delta sensorless homing (#9516)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index db26d4066d..67430387bd 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -686,20 +686,25 @@
 #define  Y_IS_TRINAMIC (ENABLED( Y_IS_TMC2130) || ENABLED( Y_IS_TMC2208) || ENABLED(IS_TRAMS))
 #define Y2_IS_TRINAMIC (ENABLED(Y2_IS_TMC2130) || ENABLED(Y2_IS_TMC2208))
 #define  Z_IS_TRINAMIC (ENABLED( Z_IS_TMC2130) || ENABLED( Z_IS_TMC2208) || ENABLED(IS_TRAMS))
 #define Z2_IS_TRINAMIC (ENABLED(Z2_IS_TMC2130) || ENABLED(Z2_IS_TMC2208))
 #define E0_IS_TRINAMIC (ENABLED(E0_IS_TMC2130) || ENABLED(E0_IS_TMC2208) || ENABLED(IS_TRAMS))
 #define E1_IS_TRINAMIC (ENABLED(E1_IS_TMC2130) || ENABLED(E1_IS_TMC2208))
 #define E2_IS_TRINAMIC (ENABLED(E2_IS_TMC2130) || ENABLED(E2_IS_TMC2208))
 #define E3_IS_TRINAMIC (ENABLED(E3_IS_TMC2130) || ENABLED(E3_IS_TMC2208))
 #define E4_IS_TRINAMIC (ENABLED(E4_IS_TMC2130) || ENABLED(E4_IS_TMC2208))
 
+// Disable Z axis sensorless homing if a probe is used to home the Z axis
+#if ENABLED(SENSORLESS_HOMING) && HOMING_Z_WITH_PROBE
+  #undef Z_HOMING_SENSITIVITY
+#endif
+
 // Endstops and bed probe
 #define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_X2_ENDSTOP(X,MIN) && !IS_Y2_ENDSTOP(X,MIN) && !IS_Z2_OR_PROBE(X,MIN))
 #define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_X2_ENDSTOP(X,MAX) && !IS_Y2_ENDSTOP(X,MAX) && !IS_Z2_OR_PROBE(X,MAX))
 #define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_X2_ENDSTOP(Y,MIN) && !IS_Y2_ENDSTOP(Y,MIN) && !IS_Z2_OR_PROBE(Y,MIN))
 #define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_X2_ENDSTOP(Y,MAX) && !IS_Y2_ENDSTOP(Y,MAX) && !IS_Z2_OR_PROBE(Y,MAX))
 #define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_X2_ENDSTOP(Z,MIN) && !IS_Y2_ENDSTOP(Z,MIN) && !IS_Z2_OR_PROBE(Z,MIN))
 #define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_X2_ENDSTOP(Z,MAX) && !IS_Y2_ENDSTOP(Z,MAX) && !IS_Z2_OR_PROBE(Z,MAX))
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))

commit db031d5d768246a8576c74ba8f67cc30411a6133
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 22 10:24:30 2018 -0600

    Add missing SoftwareSerial begin for TMC2208
    
    Based on #9299

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 39d23bcf68..db26d4066d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1242,21 +1242,21 @@
     #define LED_USER_PRESET_WHITE     0
   #endif
   #ifndef LED_USER_PRESET_BRIGHTNESS
     #ifdef NEOPIXEL_BRIGHTNESS
       #define LED_USER_PRESET_BRIGHTNESS NEOPIXEL_BRIGHTNESS
     #else
       #define LED_USER_PRESET_BRIGHTNESS 255
     #endif
   #endif
 #endif
-  
+
 // Nozzle park
 #if ENABLED(NOZZLE_PARK_FEATURE) && ENABLED(DELTA)
   #undef NOZZLE_PARK_Z_FEEDRATE
   #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
 #endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
   #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing

commit 3db35ba9be05355fdad018fb9128335e03097f7a
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Mon Jan 22 10:21:42 2018 -0600

    [2.0.x] Fix change filament for delta machines (#9295)

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 1a5c410904..39d23bcf68 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1242,20 +1242,26 @@
     #define LED_USER_PRESET_WHITE     0
   #endif
   #ifndef LED_USER_PRESET_BRIGHTNESS
     #ifdef NEOPIXEL_BRIGHTNESS
       #define LED_USER_PRESET_BRIGHTNESS NEOPIXEL_BRIGHTNESS
     #else
       #define LED_USER_PRESET_BRIGHTNESS 255
     #endif
   #endif
 #endif
+  
+// Nozzle park
+#if ENABLED(NOZZLE_PARK_FEATURE) && ENABLED(DELTA)
+  #undef NOZZLE_PARK_Z_FEEDRATE
+  #define NOZZLE_PARK_Z_FEEDRATE NOZZLE_PARK_XY_FEEDRATE
+#endif
 
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
   #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
                                     // directory levels still glitches the screen,
                                     // but the following LCD update cleans it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK

commit 2ebf52e57d2762d214c7ee48cc2aeeda30803a05
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 22 08:19:44 2018 -0600

    Fix Skew Correction pre-calculation overflow error

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d0b19dde88..1a5c410904 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -904,21 +904,21 @@
 
 /**
  * XYZ Bed Skew Correction
  */
 #if ENABLED(SKEW_CORRECTION)
   #define SKEW_FACTOR_MIN -1
   #define SKEW_FACTOR_MAX 1
 
   #define _GET_SIDE(a,b,c) (SQRT(2*sq(a)+2*sq(b)-4*sq(c))*0.5)
   #define _SKEW_SIDE(a,b,c) tan(M_PI*0.5-acos((sq(a)-sq(b)-sq(c))/(2*c*b)))
-  #define _SKEW_FACTOR(a,b,c) _SKEW_SIDE(a,_GET_SIDE(a,b,c),c)
+  #define _SKEW_FACTOR(a,b,c) _SKEW_SIDE(float(a),_GET_SIDE(float(a),float(b),float(c)),float(c))
 
   #ifndef XY_SKEW_FACTOR
     constexpr float XY_SKEW_FACTOR = (
       #if defined(XY_DIAG_AC) && defined(XY_DIAG_BD) && defined(XY_SIDE_AD)
         _SKEW_FACTOR(XY_DIAG_AC, XY_DIAG_BD, XY_SIDE_AD)
       #else
         0.0
       #endif
     );
   #endif

commit f2ea8a052900926e2e5f4943b13467bf08745ca9
Merge: 5367a1f51f 6f1bf5d212
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 19 22:35:45 2018 -0600

    Merge pull request #9197 from p3p/pr_bf2_operation_freemem
    
    [2.0.x] LPC1768: Free up some RAM

diff --combined Marlin/src/inc/Conditionals_post.h
index 7b0832da06,ceba5e062a..d0b19dde88
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@@ -1057,31 -1057,24 +1057,31 @@@
    #if IS_KINEMATIC
      // Probing points may be verified at compile time within the radius
      // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
      // so that may be added to SanityCheck.h in the future.
      #define _MESH_MIN_X (MIN_PROBE_X + MESH_INSET)
      #define _MESH_MIN_Y (MIN_PROBE_Y + MESH_INSET)
      #define _MESH_MAX_X (MAX_PROBE_X - (MESH_INSET))
      #define _MESH_MAX_Y (MAX_PROBE_Y - (MESH_INSET))
    #else
      // Boundaries for Cartesian probing based on set limits
 -    #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
 -    #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
 -    #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
 -    #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
 +    #if ENABLED(AUTO_BED_LEVELING_UBL)
 +      #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
 +      #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
 +      #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS))
 +      #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
 +    #else
 +      #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
 +      #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
 +      #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
 +      #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
 +    #endif
    #endif
    /**
     * These may be overridden in Configuration if a smaller area is wanted
     */
    #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
      #ifndef MESH_MIN_X
        #define MESH_MIN_X _MESH_MIN_X
      #endif
      #ifndef MESH_MIN_Y
        #define MESH_MIN_Y _MESH_MIN_Y
@@@ -1253,21 -1246,21 +1253,21 @@@
  // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
  // because of a bug in the shared SPI implementation. (See #8122)
  #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
    #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
                                      // directory levels still glitches the screen,
                                      // but the following LCD update cleans it up.
    #undef SDSORT_LIMIT
    #undef SDSORT_USES_RAM
    #undef SDSORT_USES_STACK
    #undef SDSORT_CACHE_NAMES
-   #define SDSORT_LIMIT       256
+   #define SDSORT_LIMIT       64
    #define SDSORT_USES_RAM    true
    #define SDSORT_USES_STACK  false
    #define SDSORT_CACHE_NAMES true
    #ifndef FOLDER_SORTING
      #define FOLDER_SORTING     -1
    #endif
    #ifndef SDSORT_GCODE
      #define SDSORT_GCODE       false
    #endif
    #ifndef SDSORT_DYNAMIC_RAM

commit 9d0cf02fef695cdbfdcdbff133968d8508046cd9
Author: Roxy-3D <Roxy-3D@users.noreply.github.com>
Date:   Wed Jan 17 09:36:12 2018 -0600

    Correct mesh size calculations

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index dcaacbcf3f..7b0832da06 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1060,23 +1060,27 @@
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (MIN_PROBE_X + MESH_INSET)
     #define _MESH_MIN_Y (MIN_PROBE_Y + MESH_INSET)
     #define _MESH_MAX_X (MAX_PROBE_X - (MESH_INSET))
     #define _MESH_MAX_Y (MAX_PROBE_Y - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
       #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
+      #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS))
+      #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS))
     #else
       #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
       #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
     #endif
   #endif
   /**
    * These may be overridden in Configuration if a smaller area is wanted
    */
   #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
     #ifndef MESH_MIN_X
       #define MESH_MIN_X _MESH_MIN_X
     #endif
     #ifndef MESH_MIN_Y

commit acb1e313746c721c470e8e045bdd98446b4c58c7
Author: Roxy-3D <Roxy-3D@users.noreply.github.com>
Date:   Tue Jan 16 17:58:15 2018 -0600

    Fix UBL Mesh Size regression

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5ce961dcf0..dcaacbcf3f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1057,24 +1057,27 @@
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.
     #define _MESH_MIN_X (MIN_PROBE_X + MESH_INSET)
     #define _MESH_MIN_Y (MIN_PROBE_Y + MESH_INSET)
     #define _MESH_MAX_X (MAX_PROBE_X - (MESH_INSET))
     #define _MESH_MAX_Y (MAX_PROBE_Y - (MESH_INSET))
   #else
     // Boundaries for Cartesian probing based on set limits
-    #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-    #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-    #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-    #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+    #if ENABLED(AUTO_BED_LEVELING_UBL)
+      #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS))  // UBL is careful not to probe off the bed.  It does not
+      #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS))  // need *_PROBE_OFFSET_FROM_EXTRUDER in the mesh dimensions
+    #else
+      #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+      #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+    #endif
   #endif
   /**
    * These may be overridden in Configuration if a smaller area is wanted
    */
   #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
     #ifndef MESH_MIN_X
       #define MESH_MIN_X _MESH_MIN_X
     #endif
     #ifndef MESH_MIN_Y
       #define MESH_MIN_Y _MESH_MIN_Y

commit 6f1bf5d212d5c12c29f75d8fadb8f0348fff5c99
Author: Christopher Pepper <p3p@p3psoft.co.uk>
Date:   Mon Jan 15 22:02:21 2018 +0000

    LPC1768: Config: default to SDSORT_LIMIT = 64 instead of 256

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5ce961dcf0..ceba5e062a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1246,21 +1246,21 @@
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
   #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
                                     // directory levels still glitches the screen,
                                     // but the following LCD update cleans it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK
   #undef SDSORT_CACHE_NAMES
-  #define SDSORT_LIMIT       256
+  #define SDSORT_LIMIT       64
   #define SDSORT_USES_RAM    true
   #define SDSORT_USES_STACK  false
   #define SDSORT_CACHE_NAMES true
   #ifndef FOLDER_SORTING
     #define FOLDER_SORTING     -1
   #endif
   #ifndef SDSORT_GCODE
     #define SDSORT_GCODE       false
   #endif
   #ifndef SDSORT_DYNAMIC_RAM

commit 6a043eee558695e91f64b6f4a48fcd1816a5f130
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 9 19:14:07 2018 -0600

    Various updates for TMC support

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 36a8a0d94d..5ce961dcf0 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -672,20 +672,34 @@
 #define HAS_E3_STEP       (PIN_EXISTS(E3_STEP))
 #define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
 #define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
 
 #define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
 #define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
 #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
 #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
+// Trinamic Stepper Drivers
+#define HAS_TRINAMIC (ENABLED(HAVE_TMC2130) || ENABLED(HAVE_TMC2208) || ENABLED(IS_TRAMS))
+#define  X_IS_TRINAMIC (ENABLED( X_IS_TMC2130) || ENABLED( X_IS_TMC2208) || ENABLED(IS_TRAMS))
+#define X2_IS_TRINAMIC (ENABLED(X2_IS_TMC2130) || ENABLED(X2_IS_TMC2208))
+#define  Y_IS_TRINAMIC (ENABLED( Y_IS_TMC2130) || ENABLED( Y_IS_TMC2208) || ENABLED(IS_TRAMS))
+#define Y2_IS_TRINAMIC (ENABLED(Y2_IS_TMC2130) || ENABLED(Y2_IS_TMC2208))
+#define  Z_IS_TRINAMIC (ENABLED( Z_IS_TMC2130) || ENABLED( Z_IS_TMC2208) || ENABLED(IS_TRAMS))
+#define Z2_IS_TRINAMIC (ENABLED(Z2_IS_TMC2130) || ENABLED(Z2_IS_TMC2208))
+#define E0_IS_TRINAMIC (ENABLED(E0_IS_TMC2130) || ENABLED(E0_IS_TMC2208) || ENABLED(IS_TRAMS))
+#define E1_IS_TRINAMIC (ENABLED(E1_IS_TMC2130) || ENABLED(E1_IS_TMC2208))
+#define E2_IS_TRINAMIC (ENABLED(E2_IS_TMC2130) || ENABLED(E2_IS_TMC2208))
+#define E3_IS_TRINAMIC (ENABLED(E3_IS_TMC2130) || ENABLED(E3_IS_TMC2208))
+#define E4_IS_TRINAMIC (ENABLED(E4_IS_TMC2130) || ENABLED(E4_IS_TMC2208))
+
 // Endstops and bed probe
 #define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_X2_ENDSTOP(X,MIN) && !IS_Y2_ENDSTOP(X,MIN) && !IS_Z2_OR_PROBE(X,MIN))
 #define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_X2_ENDSTOP(X,MAX) && !IS_Y2_ENDSTOP(X,MAX) && !IS_Z2_OR_PROBE(X,MAX))
 #define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_X2_ENDSTOP(Y,MIN) && !IS_Y2_ENDSTOP(Y,MIN) && !IS_Z2_OR_PROBE(Y,MIN))
 #define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_X2_ENDSTOP(Y,MAX) && !IS_Y2_ENDSTOP(Y,MAX) && !IS_Z2_OR_PROBE(Y,MAX))
 #define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_X2_ENDSTOP(Z,MIN) && !IS_Y2_ENDSTOP(Z,MIN) && !IS_Z2_OR_PROBE(Z,MIN))
 #define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_X2_ENDSTOP(Z,MAX) && !IS_Y2_ENDSTOP(Z,MAX) && !IS_Z2_OR_PROBE(Z,MAX))
 #define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
 #define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
 #define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))

commit 957bbab57f2a985bfc95ec91fd707dea92674bd3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Dec 16 20:20:06 2017 -0600

    Update inc files for parity with 1.1.x

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 094773024e..36a8a0d94d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -89,21 +89,21 @@
     #define NORMAL_AXIS Z_AXIS
   #elif CORE_IS_XZ
     #define CORE_AXIS_1 A_AXIS
     #define NORMAL_AXIS Y_AXIS
     #define CORE_AXIS_2 C_AXIS
   #elif CORE_IS_YZ
     #define NORMAL_AXIS X_AXIS
     #define CORE_AXIS_1 B_AXIS
     #define CORE_AXIS_2 C_AXIS
   #endif
-  #if (ENABLED(COREYX) || ENABLED(COREZX) || ENABLED(COREZY))
+  #if ENABLED(COREYX) || ENABLED(COREZX) || ENABLED(COREZY)
     #define CORESIGN(n) (-(n))
   #else
     #define CORESIGN(n) (n)
   #endif
 #endif
 
 /**
  * No adjustable bed on non-cartesians
  */
 #if IS_KINEMATIC
@@ -978,21 +978,21 @@
  * Set granular options based on the specific type of leveling
  */
 #define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(SEGMENT_LEVELED_MOVES)))
 #define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
-#define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING))
+#define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_SEGMENTED || ENABLED(SKEW_CORRECTION))
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #if HAS_PROBING_PROCEDURE
   #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
   #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 

commit a71d2f3f40639945676eede207a9b4f4f5c6d122
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Dec 9 02:11:31 2017 -0600

    UBL_DELTA => UBL_SEGMENTED

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 5b169ad178..094773024e 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -970,29 +970,29 @@
     #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
   #endif
   #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
     #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
   #endif
 #endif
 
 /**
  * Set granular options based on the specific type of leveling
  */
-#define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(SEGMENT_LEVELED_MOVES)))
-#define ABL_PLANAR (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
-#define ABL_GRID   (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
-#define OLDSCHOOL_ABL         (ABL_PLANAR || ABL_GRID)
-#define HAS_ABL               (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
-#define HAS_LEVELING          (HAS_ABL || ENABLED(MESH_BED_LEVELING))
-#define HAS_AUTOLEVEL         (HAS_ABL && DISABLED(PROBE_MANUALLY))
-#define HAS_MESH              (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
-#define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
+#define UBL_SEGMENTED  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(SEGMENT_LEVELED_MOVES)))
+#define ABL_PLANAR     (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
+#define ABL_GRID       (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
+#define OLDSCHOOL_ABL  (ABL_PLANAR || ABL_GRID)
+#define HAS_ABL        (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
+#define HAS_LEVELING   (HAS_ABL || ENABLED(MESH_BED_LEVELING))
+#define HAS_AUTOLEVEL  (HAS_ABL && DISABLED(PROBE_MANUALLY))
+#define HAS_MESH       (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
+#define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #if HAS_PROBING_PROCEDURE
   #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
   #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
 #endif
 
 #if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
   #define LEVELED_SEGMENT_LENGTH 5
 #endif
 

commit 24437de5913901bbca13e20fd2eaf1922877b194
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Dec 3 00:10:54 2017 -0600

    Use custom segment length for UBL Cartesian

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 569b58551a..5b169ad178 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1146,35 +1146,20 @@
 // Either offset yields extra calculations on all moves
 #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT || HAS_HOME_OFFSET)
 // M206 doesn't apply to DELTA
 #define HAS_M206_COMMAND (HAS_HOME_OFFSET && DISABLED(DELTA))
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 
-/**
- * DELTA_SEGMENT_MIN_LENGTH for UBL_DELTA
- */
-#if UBL_DELTA
-  #ifndef DELTA_SEGMENT_MIN_LENGTH
-    #if IS_SCARA
-      #define DELTA_SEGMENT_MIN_LENGTH 0.25 // SCARA minimum segment size is 0.25mm
-    #elif ENABLED(DELTA)
-      #define DELTA_SEGMENT_MIN_LENGTH 0.10 // mm (still subject to DELTA_SEGMENTS_PER_SECOND)
-    #else // CARTESIAN
-      #define DELTA_SEGMENT_MIN_LENGTH 1.00 // mm (similar to G2/G3 arc segmentation)
-    #endif
-  #endif
-#endif
-
 // Shorthand
 #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
 
 // Add commands that need sub-codes to this list
 #define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS)
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0

commit 0154e3480c44bf9d96d662382da25afaaf3fd854
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Dec 1 16:42:23 2017 -0600

    New feature: BED_SKEW_CORRECTION

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index cf128a989f..569b58551a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -881,20 +881,63 @@
   #endif
 #else
   #undef X_PROBE_OFFSET_FROM_EXTRUDER
   #undef Y_PROBE_OFFSET_FROM_EXTRUDER
   #undef Z_PROBE_OFFSET_FROM_EXTRUDER
   #define X_PROBE_OFFSET_FROM_EXTRUDER 0
   #define Y_PROBE_OFFSET_FROM_EXTRUDER 0
   #define Z_PROBE_OFFSET_FROM_EXTRUDER 0
 #endif
 
+/**
+ * XYZ Bed Skew Correction
+ */
+#if ENABLED(SKEW_CORRECTION)
+  #define SKEW_FACTOR_MIN -1
+  #define SKEW_FACTOR_MAX 1
+
+  #define _GET_SIDE(a,b,c) (SQRT(2*sq(a)+2*sq(b)-4*sq(c))*0.5)
+  #define _SKEW_SIDE(a,b,c) tan(M_PI*0.5-acos((sq(a)-sq(b)-sq(c))/(2*c*b)))
+  #define _SKEW_FACTOR(a,b,c) _SKEW_SIDE(a,_GET_SIDE(a,b,c),c)
+
+  #ifndef XY_SKEW_FACTOR
+    constexpr float XY_SKEW_FACTOR = (
+      #if defined(XY_DIAG_AC) && defined(XY_DIAG_BD) && defined(XY_SIDE_AD)
+        _SKEW_FACTOR(XY_DIAG_AC, XY_DIAG_BD, XY_SIDE_AD)
+      #else
+        0.0
+      #endif
+    );
+  #endif
+  #ifndef XZ_SKEW_FACTOR
+    #if defined(XY_SIDE_AD) && !defined(XZ_SIDE_AD)
+      #define XZ_SIDE_AD XY_SIDE_AD
+    #endif
+    constexpr float XZ_SKEW_FACTOR = (
+      #if defined(XZ_DIAG_AC) && defined(XZ_DIAG_BD) && defined(XZ_SIDE_AD)
+        _SKEW_FACTOR(XZ_DIAG_AC, XZ_DIAG_BD, XZ_SIDE_AD)
+      #else
+        0.0
+      #endif
+    );
+  #endif
+  #ifndef YZ_SKEW_FACTOR
+    constexpr float YZ_SKEW_FACTOR = (
+      #if defined(YZ_DIAG_AC) && defined(YZ_DIAG_BD) && defined(YZ_SIDE_AD)
+        _SKEW_FACTOR(YZ_DIAG_AC, YZ_DIAG_BD, YZ_SIDE_AD)
+      #else
+        0.0
+      #endif
+    );
+  #endif
+#endif // SKEW_CORRECTION
+
 /**
  * Heater & Fan Pausing
  */
 #if FAN_COUNT == 0
   #undef PROBING_FANS_OFF
 #endif
 #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
 #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
 
 /**

commit 8f90642eea65ab2e1f4fff8f603498c00eb57aa5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 28 01:05:51 2017 -0600

    LED_CONTROL_MENU config changes

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 95a8b6ba9b..cf128a989f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1171,20 +1171,43 @@
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ENABLED(SCROLL_LONG_FILENAMES)
   #define MAX_VFAT_ENTRIES (5)
 #else
   #define MAX_VFAT_ENTRIES (2)
 #endif
 
+// Set defaults for unspecified LED user colors
+#if ENABLED(LED_CONTROL_MENU)
+  #ifndef LED_USER_PRESET_RED
+    #define LED_USER_PRESET_RED       255
+  #endif
+  #ifndef LED_USER_PRESET_GREEN
+    #define LED_USER_PRESET_GREEN     255
+  #endif
+  #ifndef LED_USER_PRESET_BLUE
+    #define LED_USER_PRESET_BLUE      255
+  #endif
+  #ifndef LED_USER_PRESET_WHITE
+    #define LED_USER_PRESET_WHITE     0
+  #endif
+  #ifndef LED_USER_PRESET_BRIGHTNESS
+    #ifdef NEOPIXEL_BRIGHTNESS
+      #define LED_USER_PRESET_BRIGHTNESS NEOPIXEL_BRIGHTNESS
+    #else
+      #define LED_USER_PRESET_BRIGHTNESS 255
+    #endif
+  #endif
+#endif
+
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
   #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
                                     // directory levels still glitches the screen,
                                     // but the following LCD update cleans it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK
   #undef SDSORT_CACHE_NAMES

commit ef2531558cab8317a772ac766ae5243d742fc89a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 29 15:30:42 2017 -0600

    Add an option to segment leveled moves

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 3795cdf999..95a8b6ba9b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -927,35 +927,39 @@
     #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
   #endif
   #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
     #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
   #endif
 #endif
 
 /**
  * Set granular options based on the specific type of leveling
  */
-#define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(UBL_GRANULAR_SEGMENTATION_FOR_CARTESIAN)))
+#define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(SEGMENT_LEVELED_MOVES)))
 #define ABL_PLANAR (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID   (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL         (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL               (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING          (HAS_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL         (HAS_ABL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH              (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
 #define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #if HAS_PROBING_PROCEDURE
   #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
   #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
 #endif
 
+#if ENABLED(SEGMENT_LEVELED_MOVES) && !defined(LEVELED_SEGMENT_LENGTH)
+  #define LEVELED_SEGMENT_LENGTH 5
+#endif
+
 /**
  * Bed Probing rectangular bounds
  * These can be further constrained in code for Delta and SCARA
  */
 #if ENABLED(DELTA)
   // Probing points may be verified at compile time within the radius
   // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
   // so that may be added to SanityCheck.h in the future.
   #define _MIN_PROBE_X (X_CENTER - DELTA_PRINTABLE_RADIUS)
   #define _MIN_PROBE_Y (Y_CENTER - DELTA_PRINTABLE_RADIUS)

commit 94cb412e45b8e719775960312a9241f39e2a5ae2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 26 20:53:47 2017 -0600

    Allow override of probe bounds

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 90a6b0e2be..3795cdf999 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -950,36 +950,50 @@
 #endif
 
 /**
  * Bed Probing rectangular bounds
  * These can be further constrained in code for Delta and SCARA
  */
 #if ENABLED(DELTA)
   // Probing points may be verified at compile time within the radius
   // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
   // so that may be added to SanityCheck.h in the future.
-  #define MIN_PROBE_X (X_CENTER - DELTA_PRINTABLE_RADIUS)
-  #define MIN_PROBE_Y (Y_CENTER - DELTA_PRINTABLE_RADIUS)
-  #define MAX_PROBE_X (X_CENTER + DELTA_PRINTABLE_RADIUS)
-  #define MAX_PROBE_Y (Y_CENTER + DELTA_PRINTABLE_RADIUS)
+  #define _MIN_PROBE_X (X_CENTER - DELTA_PRINTABLE_RADIUS)
+  #define _MIN_PROBE_Y (Y_CENTER - DELTA_PRINTABLE_RADIUS)
+  #define _MAX_PROBE_X (X_CENTER + DELTA_PRINTABLE_RADIUS)
+  #define _MAX_PROBE_Y (Y_CENTER + DELTA_PRINTABLE_RADIUS)
 #elif IS_SCARA
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
-  #define MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
-  #define MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
-  #define MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
-  #define MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
+  #define _MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
+  #define _MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
+  #define _MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
+  #define _MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
 #else
   // Boundaries for Cartesian probing based on bed limits
-  #define MIN_PROBE_X (max(X_MIN_BED, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define MIN_PROBE_Y (max(Y_MIN_BED, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
-  #define MAX_PROBE_X (min(X_MAX_BED, X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
-  #define MAX_PROBE_Y (min(Y_MAX_BED, Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MIN_PROBE_X (max(X_MIN_BED, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MIN_PROBE_Y (max(Y_MIN_BED, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MAX_PROBE_X (min(X_MAX_BED, X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define _MAX_PROBE_Y (min(Y_MAX_BED, Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+#endif
+
+// Allow configuration to override these for special purposes
+#ifndef MIN_PROBE_X
+  #define MIN_PROBE_X _MIN_PROBE_X
+#endif
+#ifndef MIN_PROBE_Y
+  #define MIN_PROBE_Y _MIN_PROBE_Y
+#endif
+#ifndef MAX_PROBE_X
+  #define MAX_PROBE_X _MAX_PROBE_X
+#endif
+#ifndef MAX_PROBE_Y
+  #define MAX_PROBE_Y _MAX_PROBE_Y
 #endif
 
 /**
  * Default mesh area is an area with an inset margin on the print area.
  */
 #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
   #if IS_KINEMATIC
     // Probing points may be verified at compile time within the radius
     // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
     // so that may be added to SanityCheck.h in the future.

commit d06e29846d57548a7756028723269237839971fa
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 25 20:08:02 2017 -0600

    Loosen HAS_BED_PROBE definition

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9d269dec3a..90a6b0e2be 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -841,22 +841,21 @@
 /**
  * Servos and probes
  */
 
 #if HAS_SERVOS
   #ifndef Z_ENDSTOP_SERVO_NR
     #define Z_ENDSTOP_SERVO_NR -1
   #endif
 #endif
 
-#define PROBE_PIN_CONFIGURED (HAS_Z_MIN_PROBE_PIN || (HAS_Z_MIN && ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN)))
-#define HAS_BED_PROBE (PROBE_SELECTED && PROBE_PIN_CONFIGURED && DISABLED(PROBE_MANUALLY))
+#define HAS_BED_PROBE (PROBE_SELECTED && DISABLED(PROBE_MANUALLY))
 
 #if ENABLED(Z_PROBE_ALLEN_KEY)
   #define PROBE_IS_TRIGGERED_WHEN_STOWED_TEST
 #endif
 
 /**
  * Bed Probe dependencies
  */
 #if HAS_BED_PROBE
   #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN

commit 9729528d1334c1ffbed54110d34ee5745cf7b58a
Author: Roxy-3D <Roxy-3D@users.noreply.github.com>
Date:   Fri Nov 17 16:44:57 2017 -0600

    Update UBL's Delta Probable locations
    
    This is a non-intuitive change.   @oldmcg says in this post https://github.com/MarlinFirmware/Marlin/issues/7572#issuecomment-340641207 that using DELTA_PRINTABLE_RADIUS is better than DELTA_PROBABLE_RADIUS for setting the probe limits.   This is because the automatic probe code checks all locations for being reachable by the probe prior to doing the probe.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index d9b754567d..9d269dec3a 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -951,24 +951,24 @@
 #endif
 
 /**
  * Bed Probing rectangular bounds
  * These can be further constrained in code for Delta and SCARA
  */
 #if ENABLED(DELTA)
   // Probing points may be verified at compile time within the radius
   // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
   // so that may be added to SanityCheck.h in the future.
-  #define MIN_PROBE_X (X_CENTER - (DELTA_PROBEABLE_RADIUS))
-  #define MIN_PROBE_Y (Y_CENTER - (DELTA_PROBEABLE_RADIUS))
-  #define MAX_PROBE_X (X_CENTER +  DELTA_PROBEABLE_RADIUS)
-  #define MAX_PROBE_Y (Y_CENTER +  DELTA_PROBEABLE_RADIUS)
+  #define MIN_PROBE_X (X_CENTER - DELTA_PRINTABLE_RADIUS)
+  #define MIN_PROBE_Y (Y_CENTER - DELTA_PRINTABLE_RADIUS)
+  #define MAX_PROBE_X (X_CENTER + DELTA_PRINTABLE_RADIUS)
+  #define MAX_PROBE_Y (Y_CENTER + DELTA_PRINTABLE_RADIUS)
 #elif IS_SCARA
   #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
   #define MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
   #define MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
   #define MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
   #define MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
 #else
   // Boundaries for Cartesian probing based on bed limits
   #define MIN_PROBE_X (max(X_MIN_BED, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
   #define MIN_PROBE_Y (max(Y_MIN_BED, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))

commit c009a990e45db61ac3facbd720312be3dd3d3c24
Author: Dave Johnson <davejohnson3000@gmail.com>
Date:   Sun Nov 12 23:07:59 2017 -0800

    [2.0.x] Fix some 8-bit Teensyduino compile warnings (#8385)
    
    * Fix some 8-bit Teensyduino compile warnings
    
    -Override Teensyduino legacy NOT_A_PIN 127 define
    -some fixups for Printrboard_RevF pins
    
    * Proper cleanup of Printrboard Rev.F pins
    
    * Apply LCD fixes to Printrboard v1

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c74e395d3f..d9b754567d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1143,20 +1143,21 @@
   #define LROUND(x) lroundf(x)
   #define FMOD(x, y) fmodf(x, y)
 #endif
 
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
+  #undef NOT_A_PIN    // Override Teensyduino legacy CapSense define work-around
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
 #if ENABLED(SCROLL_LONG_FILENAMES)
   #define MAX_VFAT_ENTRIES (5)
 #else
   #define MAX_VFAT_ENTRIES (2)
 #endif
 

commit f34c3597dcaef54624c82f732f13151215bbe650
Author: Thomas Moore <tcm0116@gmail.com>
Date:   Wed Nov 8 22:10:08 2017 -0600

    Add delta_height variable in lieu of using home_offset

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 34c662e66c..c74e395d3f 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1075,21 +1075,21 @@
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
 // Updated G92 behavior shifts the workspace
 #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
 // The home offset also shifts the coordinate space
-#define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) || ENABLED(DELTA))
+#define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) && DISABLED(DELTA))
 // Either offset yields extra calculations on all moves
 #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT || HAS_HOME_OFFSET)
 // M206 doesn't apply to DELTA
 #define HAS_M206_COMMAND (HAS_HOME_OFFSET && DISABLED(DELTA))
 
 // LCD timeout to status screen default is 15s
 #ifndef LCD_TIMEOUT_TO_STATUS
   #define LCD_TIMEOUT_TO_STATUS 15000
 #endif
 

commit 82f45c3e6ad00a2f8cc60f0a1f7297958c98637f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 7 19:34:34 2017 -0600

    Patch G33 misuse of PROBE_MANUALLY

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index afa2ddcec4..34c662e66c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1107,25 +1107,20 @@
     #endif
   #endif
 #endif
 
 // Shorthand
 #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
 
 // Add commands that need sub-codes to this list
 #define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS)
 
-// MESH_BED_LEVELING overrides PROBE_MANUALLY
-#if ENABLED(MESH_BED_LEVELING)
-  #undef PROBE_MANUALLY
-#endif
-
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0
   #endif
   #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
     #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
   #endif
 #endif
 

commit 1b40e9c46475a9f9c712eba5588c72256f7dd584
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 4 16:36:41 2017 -0500

    Implement CNC_COORDINATE_SYSTEMS

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index dbbb929b57..afa2ddcec4 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1105,21 +1105,21 @@
     #else // CARTESIAN
       #define DELTA_SEGMENT_MIN_LENGTH 1.00 // mm (similar to G2/G3 arc segmentation)
     #endif
   #endif
 #endif
 
 // Shorthand
 #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
 
 // Add commands that need sub-codes to this list
-#define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET)
+#define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET) || ENABLED(CNC_COORDINATE_SYSTEMS)
 
 // MESH_BED_LEVELING overrides PROBE_MANUALLY
 #if ENABLED(MESH_BED_LEVELING)
   #undef PROBE_MANUALLY
 #endif
 
 // Parking Extruder
 #if ENABLED(PARKING_EXTRUDER)
   #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
     #define PARKING_EXTRUDER_GRAB_DISTANCE 0

commit e0a6ee8da52b6db2b4d87f2f278a456d679df2c6
Author: Colten Edwards <cd.edwards@sasktel.net>
Date:   Sat Nov 4 17:04:18 2017 -0600

    [2.0] Fix up G33, LPC1768 + SDCARD_SORT_ALPHA (#8250)
    
    * Update Conditionals_post.h
    
    * Add a cast to round() to convert to a unsigned int
    
    Add's a cast to round() so that it will compile properly. round() returns a float which must be cast to a integer for the following % operation. Use a unsigned int as a negative index to an array is wrong. Should never be more than 255 points allowing us to use a 8 bit cast.
    
    * Update G33.cpp

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ec72919abc..dbbb929b57 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1072,24 +1072,20 @@
     #define STEPPER_DIRECTION_DELAY 0 // time in microseconds
   #endif
 #endif
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
   #undef UI_VOLTAGE_LEVEL
   #undef RADDS_DISPLAY
   #undef MOTOR_CURRENT
 #endif
 
-#if ENABLED(SDCARD_SORT_ALPHA)
-  #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
-#endif
-
 // Updated G92 behavior shifts the workspace
 #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
 // The home offset also shifts the coordinate space
 #define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) || ENABLED(DELTA))
 // Either offset yields extra calculations on all moves
 #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT || HAS_HOME_OFFSET)
 // M206 doesn't apply to DELTA
 #define HAS_M206_COMMAND (HAS_HOME_OFFSET && DISABLED(DELTA))
 
 // LCD timeout to status screen default is 15s
@@ -1190,11 +1186,16 @@
     #define SDSORT_GCODE       false
   #endif
   #ifndef SDSORT_DYNAMIC_RAM
     #define SDSORT_DYNAMIC_RAM false
   #endif
   #ifndef SDSORT_CACHE_VFATS
     #define SDSORT_CACHE_VFATS 2
   #endif
 #endif
 
+// needs to be here so that we catch the above changes to our defines
+#if ENABLED(SDCARD_SORT_ALPHA)
+  #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
+#endif
+
 #endif // CONDITIONALS_POST_H

commit 571ced712df50361887034d4014247fe9b45fa65
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 31 14:05:40 2017 -0500

    Add SDCARD_SORT_ALPHA options for LPC1768

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 01ad08f87c..ec72919abc 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1172,17 +1172,29 @@
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
   #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
                                     // directory levels still glitches the screen,
                                     // but the following LCD update cleans it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK
   #undef SDSORT_CACHE_NAMES
-  #define SDSORT_LIMIT       256    // Maximum number of sorted items (10-256). Costs 27 bytes each.
-  #define SDSORT_USES_RAM    true   // Pre-allocate a static array for faster pre-sorting.
-  #define SDSORT_USES_STACK  false  // Prefer the stack for pre-sorting to give back some SRAM. (Negated by next 2 options.)
-  #define SDSORT_CACHE_NAMES true   // Keep sorted items in RAM longer for speedy performance. Most expensive option.
+  #define SDSORT_LIMIT       256
+  #define SDSORT_USES_RAM    true
+  #define SDSORT_USES_STACK  false
+  #define SDSORT_CACHE_NAMES true
+  #ifndef FOLDER_SORTING
+    #define FOLDER_SORTING     -1
+  #endif
+  #ifndef SDSORT_GCODE
+    #define SDSORT_GCODE       false
+  #endif
+  #ifndef SDSORT_DYNAMIC_RAM
+    #define SDSORT_DYNAMIC_RAM false
+  #endif
+  #ifndef SDSORT_CACHE_VFATS
+    #define SDSORT_CACHE_VFATS 2
+  #endif
 #endif
 
 #endif // CONDITIONALS_POST_H

commit 9f89b5d876c6463d25af5e2a2ecf8a6705ad002f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 30 15:11:47 2017 -0500

    Fix for MAX_VFAT_ENTRIES sanity check

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 02ba9d71b7..01ad08f87c 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1155,20 +1155,27 @@
 
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
+// Number of VFAT entries used. Each entry has 13 UTF-16 characters
+#if ENABLED(SCROLL_LONG_FILENAMES)
+  #define MAX_VFAT_ENTRIES (5)
+#else
+  #define MAX_VFAT_ENTRIES (2)
+#endif
+
 // Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
 // because of a bug in the shared SPI implementation. (See #8122)
 #if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
   #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
                                     // directory levels still glitches the screen,
                                     // but the following LCD update cleans it up.
   #undef SDSORT_LIMIT
   #undef SDSORT_USES_RAM
   #undef SDSORT_USES_STACK
   #undef SDSORT_CACHE_NAMES

commit 2cdde0833946ee3b04c08cf2f83f2453f4fda0a1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 30 14:34:11 2017 -0500

    Apply items specified in code review
    
    Followup to #8122

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 06f9a54594..02ba9d71b7 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -1155,11 +1155,27 @@
 
 #ifdef TEENSYDUINO
   #undef max
   #define max(a,b) ((a)>(b)?(a):(b))
   #undef min
   #define min(a,b) ((a)<(b)?(a):(b))
 
   #define NOT_A_PIN 0 // For PINS_DEBUGGING
 #endif
 
+// Force SDCARD_SORT_ALPHA to be enabled for Graphical LCD on LPC1768
+// because of a bug in the shared SPI implementation. (See #8122)
+#if defined(TARGET_LPC1768) && ENABLED(REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
+  #define SDCARD_SORT_ALPHA         // Keeps one directory level in RAM. Changing
+                                    // directory levels still glitches the screen,
+                                    // but the following LCD update cleans it up.
+  #undef SDSORT_LIMIT
+  #undef SDSORT_USES_RAM
+  #undef SDSORT_USES_STACK
+  #undef SDSORT_CACHE_NAMES
+  #define SDSORT_LIMIT       256    // Maximum number of sorted items (10-256). Costs 27 bytes each.
+  #define SDSORT_USES_RAM    true   // Pre-allocate a static array for faster pre-sorting.
+  #define SDSORT_USES_STACK  false  // Prefer the stack for pre-sorting to give back some SRAM. (Negated by next 2 options.)
+  #define SDSORT_CACHE_NAMES true   // Keep sorted items in RAM longer for speedy performance. Most expensive option.
+#endif
+
 #endif // CONDITIONALS_POST_H

commit 723f2a77f6de40024508ea07fd7324e0987a2aa9
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 29 03:43:44 2017 -0500

    Implement support for Dual X and Y endstops

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 8a71a9d4a6..06f9a54594 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -415,43 +415,136 @@
  */
 #define ARRAY_BY_EXTRUDERS(...) ARRAY_N(EXTRUDERS, __VA_ARGS__)
 #define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
 
 /**
  * ARRAY_BY_HOTENDS based on HOTENDS
  */
 #define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
 #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
+/**
+ * X_DUAL_ENDSTOPS endstop reassignment
+ */
+#if ENABLED(X_DUAL_ENDSTOPS)
+  #if X_HOME_DIR > 0
+    #if X2_USE_ENDSTOP == _XMIN_
+      #define X2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #define X2_MAX_PIN X_MIN_PIN
+    #elif X2_USE_ENDSTOP == _XMAX_
+      #define X2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #define X2_MAX_PIN X_MAX_PIN
+    #elif X2_USE_ENDSTOP == _YMIN_
+      #define X2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #define X2_MAX_PIN Y_MIN_PIN
+    #elif X2_USE_ENDSTOP == _YMAX_
+      #define X2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #define X2_MAX_PIN Y_MAX_PIN
+    #elif X2_USE_ENDSTOP == _ZMIN_
+      #define X2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #define X2_MAX_PIN Z_MIN_PIN
+    #elif X2_USE_ENDSTOP == _ZMAX_
+      #define X2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #define X2_MAX_PIN Z_MAX_PIN
+    #else
+      #define X2_MAX_ENDSTOP_INVERTING false
+    #endif
+    #define X2_MIN_ENDSTOP_INVERTING false
+  #else
+    #if X2_USE_ENDSTOP == _XMIN_
+      #define X2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #define X2_MIN_PIN X_MIN_PIN
+    #elif X2_USE_ENDSTOP == _XMAX_
+      #define X2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #define X2_MIN_PIN X_MAX_PIN
+    #elif X2_USE_ENDSTOP == _YMIN_
+      #define X2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #define X2_MIN_PIN Y_MIN_PIN
+    #elif X2_USE_ENDSTOP == _YMAX_
+      #define X2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #define X2_MIN_PIN Y_MAX_PIN
+    #elif X2_USE_ENDSTOP == _ZMIN_
+      #define X2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #define X2_MIN_PIN Z_MIN_PIN
+    #elif X2_USE_ENDSTOP == _ZMAX_
+      #define X2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #define X2_MIN_PIN Z_MAX_PIN
+    #else
+      #define X2_MIN_ENDSTOP_INVERTING false
+    #endif
+    #define X2_MAX_ENDSTOP_INVERTING false
+  #endif
+#endif
+
+// Is an endstop plug used for the X2 endstop?
+#define IS_X2_ENDSTOP(A,M) (ENABLED(X_DUAL_ENDSTOPS) && X2_USE_ENDSTOP == _##A##M##_)
+
+/**
+ * Y_DUAL_ENDSTOPS endstop reassignment
+ */
+#if ENABLED(Y_DUAL_ENDSTOPS)
+  #if Y_HOME_DIR > 0
+    #if Y2_USE_ENDSTOP == _XMIN_
+      #define Y2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #define Y2_MAX_PIN X_MIN_PIN
+    #elif Y2_USE_ENDSTOP == _XMAX_
+      #define Y2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #define Y2_MAX_PIN X_MAX_PIN
+    #elif Y2_USE_ENDSTOP == _YMIN_
+      #define Y2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #define Y2_MAX_PIN Y_MIN_PIN
+    #elif Y2_USE_ENDSTOP == _YMAX_
+      #define Y2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #define Y2_MAX_PIN Y_MAX_PIN
+    #elif Y2_USE_ENDSTOP == _ZMIN_
+      #define Y2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #define Y2_MAX_PIN Z_MIN_PIN
+    #elif Y2_USE_ENDSTOP == _ZMAX_
+      #define Y2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #define Y2_MAX_PIN Z_MAX_PIN
+    #else
+      #define Y2_MAX_ENDSTOP_INVERTING false
+    #endif
+    #define Y2_MIN_ENDSTOP_INVERTING false
+  #else
+    #if Y2_USE_ENDSTOP == _XMIN_
+      #define Y2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #define Y2_MIN_PIN X_MIN_PIN
+    #elif Y2_USE_ENDSTOP == _XMAX_
+      #define Y2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #define Y2_MIN_PIN X_MAX_PIN
+    #elif Y2_USE_ENDSTOP == _YMIN_
+      #define Y2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #define Y2_MIN_PIN Y_MIN_PIN
+    #elif Y2_USE_ENDSTOP == _YMAX_
+      #define Y2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #define Y2_MIN_PIN Y_MAX_PIN
+    #elif Y2_USE_ENDSTOP == _ZMIN_
+      #define Y2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #define Y2_MIN_PIN Z_MIN_PIN
+    #elif Y2_USE_ENDSTOP == _ZMAX_
+      #define Y2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #define Y2_MIN_PIN Z_MAX_PIN
+    #else
+      #define Y2_MIN_ENDSTOP_INVERTING false
+    #endif
+    #define Y2_MAX_ENDSTOP_INVERTING false
+  #endif
+#endif
+
+// Is an endstop plug used for the Y2 endstop or the bed probe?
+#define IS_Y2_ENDSTOP(A,M) (ENABLED(Y_DUAL_ENDSTOPS) && Y2_USE_ENDSTOP == _##A##M##_)
+
 /**
  * Z_DUAL_ENDSTOPS endstop reassignment
  */
 #if ENABLED(Z_DUAL_ENDSTOPS)
-  #define _XMIN_ 100
-  #define _YMIN_ 200
-  #define _ZMIN_ 300
-  #define _XMAX_ 101
-  #define _YMAX_ 201
-  #define _ZMAX_ 301
-  #if Z2_USE_ENDSTOP == _XMIN_
-    #define USE_XMIN_PLUG
-  #elif Z2_USE_ENDSTOP == _XMAX_
-    #define USE_XMAX_PLUG
-  #elif Z2_USE_ENDSTOP == _YMIN_
-    #define USE_YMIN_PLUG
-  #elif Z2_USE_ENDSTOP == _YMAX_
-    #define USE_YMAX_PLUG
-  #elif Z2_USE_ENDSTOP == _ZMIN_
-    #define USE_ZMIN_PLUG
-  #elif Z2_USE_ENDSTOP == _ZMAX_
-    #define USE_ZMAX_PLUG
-  #endif
   #if Z_HOME_DIR > 0
     #if Z2_USE_ENDSTOP == _XMIN_
       #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #define Z2_MAX_PIN X_MIN_PIN
     #elif Z2_USE_ENDSTOP == _XMAX_
       #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #define Z2_MAX_PIN X_MAX_PIN
     #elif Z2_USE_ENDSTOP == _YMIN_
       #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #define Z2_MAX_PIN Y_MIN_PIN
@@ -460,20 +553,21 @@
       #define Z2_MAX_PIN Y_MAX_PIN
     #elif Z2_USE_ENDSTOP == _ZMIN_
       #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #define Z2_MAX_PIN Z_MIN_PIN
     #elif Z2_USE_ENDSTOP == _ZMAX_
       #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #define Z2_MAX_PIN Z_MAX_PIN
     #else
       #define Z2_MAX_ENDSTOP_INVERTING false
     #endif
+    #define Z2_MIN_ENDSTOP_INVERTING false
   #else
     #if Z2_USE_ENDSTOP == _XMIN_
       #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
       #define Z2_MIN_PIN X_MIN_PIN
     #elif Z2_USE_ENDSTOP == _XMAX_
       #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
       #define Z2_MIN_PIN X_MAX_PIN
     #elif Z2_USE_ENDSTOP == _YMIN_
       #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
       #define Z2_MIN_PIN Y_MIN_PIN
@@ -482,20 +576,21 @@
       #define Z2_MIN_PIN Y_MAX_PIN
     #elif Z2_USE_ENDSTOP == _ZMIN_
       #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
       #define Z2_MIN_PIN Z_MIN_PIN
     #elif Z2_USE_ENDSTOP == _ZMAX_
       #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
       #define Z2_MIN_PIN Z_MAX_PIN
     #else
       #define Z2_MIN_ENDSTOP_INVERTING false
     #endif
+    #define Z2_MAX_ENDSTOP_INVERTING false
   #endif
 #endif
 
 // Is an endstop plug used for the Z2 endstop or the bed probe?
 #define IS_Z2_OR_PROBE(A,M) ( \
      (ENABLED(Z_DUAL_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_) \
   || (ENABLED(Z_MIN_PROBE_ENDSTOP) && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
 
 /**
  * Set ENDSTOPPULLUPS for active endstop switches
@@ -578,26 +673,30 @@
 #define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
 #define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
 
 #define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
 #define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
 #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
 #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
 #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
 
 // Endstops and bed probe
-#define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_Z2_OR_PROBE(X,MIN))
-#define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_Z2_OR_PROBE(X,MAX))
-#define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_Z2_OR_PROBE(Y,MIN))
-#define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_Z2_OR_PROBE(Y,MAX))
-#define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_Z2_OR_PROBE(Z,MIN))
-#define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_Z2_OR_PROBE(Z,MAX))
+#define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_X2_ENDSTOP(X,MIN) && !IS_Y2_ENDSTOP(X,MIN) && !IS_Z2_OR_PROBE(X,MIN))
+#define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_X2_ENDSTOP(X,MAX) && !IS_Y2_ENDSTOP(X,MAX) && !IS_Z2_OR_PROBE(X,MAX))
+#define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_X2_ENDSTOP(Y,MIN) && !IS_Y2_ENDSTOP(Y,MIN) && !IS_Z2_OR_PROBE(Y,MIN))
+#define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_X2_ENDSTOP(Y,MAX) && !IS_Y2_ENDSTOP(Y,MAX) && !IS_Z2_OR_PROBE(Y,MAX))
+#define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_X2_ENDSTOP(Z,MIN) && !IS_Y2_ENDSTOP(Z,MIN) && !IS_Z2_OR_PROBE(Z,MIN))
+#define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_X2_ENDSTOP(Z,MAX) && !IS_Y2_ENDSTOP(Z,MAX) && !IS_Z2_OR_PROBE(Z,MAX))
+#define HAS_X2_MIN (PIN_EXISTS(X2_MIN))
+#define HAS_X2_MAX (PIN_EXISTS(X2_MAX))
+#define HAS_Y2_MIN (PIN_EXISTS(Y2_MIN))
+#define HAS_Y2_MAX (PIN_EXISTS(Y2_MAX))
 #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
 #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
 #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
 
 // Thermistors
 #define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
 #define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
 #define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
 #define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
 #define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)

commit 580b6e9089cefa7cf85c33ef53af4d02a6b59f37
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 19 01:39:39 2017 -0500

    Apply physical limits to mesh bounds

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b37cc5792b..8a71a9d4a6 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -803,59 +803,125 @@
  * Only constrain Z on DELTA / SCARA machines
  */
 #if IS_KINEMATIC
   #undef MIN_SOFTWARE_ENDSTOP_X
   #undef MIN_SOFTWARE_ENDSTOP_Y
   #undef MAX_SOFTWARE_ENDSTOP_X
   #undef MAX_SOFTWARE_ENDSTOP_Y
 #endif
 
 /**
- * Delta endstops, radius/rod trimmers, angle trimmers
+ * Delta radius/rod trimmers/angle trimmers
  */
 #if ENABLED(DELTA)
+  #ifndef DELTA_PROBEABLE_RADIUS
+    #define DELTA_PROBEABLE_RADIUS DELTA_PRINTABLE_RADIUS
+  #endif
   #ifndef DELTA_CALIBRATION_RADIUS
     #define DELTA_CALIBRATION_RADIUS DELTA_PRINTABLE_RADIUS - 10
   #endif
   #ifndef DELTA_ENDSTOP_ADJ
     #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
   #ifndef DELTA_TOWER_ANGLE_TRIM
     #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
   #endif
   #ifndef DELTA_RADIUS_TRIM_TOWER
     #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
   #endif
   #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
     #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
   #endif
 #endif
 
 /**
  * Set granular options based on the specific type of leveling
  */
-
 #define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(UBL_GRANULAR_SEGMENTATION_FOR_CARTESIAN)))
 #define ABL_PLANAR (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
 #define ABL_GRID   (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
 #define OLDSCHOOL_ABL         (ABL_PLANAR || ABL_GRID)
 #define HAS_ABL               (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
 #define HAS_LEVELING          (HAS_ABL || ENABLED(MESH_BED_LEVELING))
 #define HAS_AUTOLEVEL         (HAS_ABL && DISABLED(PROBE_MANUALLY))
 #define HAS_MESH              (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
 #define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
 #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
 #if HAS_PROBING_PROCEDURE
   #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
   #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
 #endif
 
+/**
+ * Bed Probing rectangular bounds
+ * These can be further constrained in code for Delta and SCARA
+ */
+#if ENABLED(DELTA)
+  // Probing points may be verified at compile time within the radius
+  // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
+  // so that may be added to SanityCheck.h in the future.
+  #define MIN_PROBE_X (X_CENTER - (DELTA_PROBEABLE_RADIUS))
+  #define MIN_PROBE_Y (Y_CENTER - (DELTA_PROBEABLE_RADIUS))
+  #define MAX_PROBE_X (X_CENTER +  DELTA_PROBEABLE_RADIUS)
+  #define MAX_PROBE_Y (Y_CENTER +  DELTA_PROBEABLE_RADIUS)
+#elif IS_SCARA
+  #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
+  #define MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
+  #define MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
+  #define MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
+  #define MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
+#else
+  // Boundaries for Cartesian probing based on bed limits
+  #define MIN_PROBE_X (max(X_MIN_BED, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define MIN_PROBE_Y (max(Y_MIN_BED, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #define MAX_PROBE_X (min(X_MAX_BED, X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+  #define MAX_PROBE_Y (min(Y_MAX_BED, Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+#endif
+
+/**
+ * Default mesh area is an area with an inset margin on the print area.
+ */
+#if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
+  #if IS_KINEMATIC
+    // Probing points may be verified at compile time within the radius
+    // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
+    // so that may be added to SanityCheck.h in the future.
+    #define _MESH_MIN_X (MIN_PROBE_X + MESH_INSET)
+    #define _MESH_MIN_Y (MIN_PROBE_Y + MESH_INSET)
+    #define _MESH_MAX_X (MAX_PROBE_X - (MESH_INSET))
+    #define _MESH_MAX_Y (MAX_PROBE_Y - (MESH_INSET))
+  #else
+    // Boundaries for Cartesian probing based on set limits
+    #define _MESH_MIN_X (max(X_MIN_BED + MESH_INSET, X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+    #define _MESH_MIN_Y (max(Y_MIN_BED + MESH_INSET, Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+    #define _MESH_MAX_X (min(X_MAX_BED - (MESH_INSET), X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER))
+    #define _MESH_MAX_Y (min(Y_MAX_BED - (MESH_INSET), Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER))
+  #endif
+  /**
+   * These may be overridden in Configuration if a smaller area is wanted
+   */
+  #if ENABLED(MESH_BED_LEVELING) || ENABLED(AUTO_BED_LEVELING_UBL)
+    #ifndef MESH_MIN_X
+      #define MESH_MIN_X _MESH_MIN_X
+    #endif
+    #ifndef MESH_MIN_Y
+      #define MESH_MIN_Y _MESH_MIN_Y
+    #endif
+    #ifndef MESH_MAX_X
+      #define MESH_MAX_X _MESH_MAX_X
+    #endif
+    #ifndef MESH_MAX_Y
+      #define MESH_MAX_Y _MESH_MAX_Y
+    #endif
+  #endif
+#endif // MESH_BED_LEVELING || AUTO_BED_LEVELING_UBL
+
 /**
  * Buzzer/Speaker
  */
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #ifndef LCD_FEEDBACK_FREQUENCY_HZ
     #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
   #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
     #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
   #endif
@@ -892,49 +958,20 @@
 #endif
 #ifndef Z_CLEARANCE_BETWEEN_PROBES
   #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
 #endif
 #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
   #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
 #else
   #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
 #endif
 
-/**
- * Bed Probing rectangular bounds
- * These can be further constrained in code for Delta and SCARA
- */
-#if ENABLED(DELTA)
-  #ifndef DELTA_PROBEABLE_RADIUS
-    #define DELTA_PROBEABLE_RADIUS DELTA_PRINTABLE_RADIUS
-  #endif
-  // Probing points may be verified at compile time within the radius
-  // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
-  // so that may be added to SanityCheck.h in the future.
-  #define MIN_PROBE_X (X_CENTER - (DELTA_PROBEABLE_RADIUS))
-  #define MIN_PROBE_Y (Y_CENTER - (DELTA_PROBEABLE_RADIUS))
-  #define MAX_PROBE_X (X_CENTER +  DELTA_PROBEABLE_RADIUS)
-  #define MAX_PROBE_Y (Y_CENTER +  DELTA_PROBEABLE_RADIUS)
-#elif IS_SCARA
-  #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
-  #define MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
-  #define MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
-  #define MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
-  #define MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
-#else
-  // Boundaries for Cartesian probing based on bed limits
-  #define MIN_PROBE_X (max(X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_MIN_BED))
-  #define MIN_PROBE_Y (max(Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_MIN_BED))
-  #define MAX_PROBE_X (min(X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_MAX_BED))
-  #define MAX_PROBE_Y (min(Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_MAX_BED))
-#endif
-
 // Stepper pulse duration, in cycles
 #define STEP_PULSE_CYCLES ((MINIMUM_STEPPER_PULSE) * CYCLES_PER_MICROSECOND)
 #ifdef CPU_32_BIT
   // Add additional delay for between direction signal and pulse signal of stepper
   #ifndef STEPPER_DIRECTION_DELAY
     #define STEPPER_DIRECTION_DELAY 0 // time in microseconds
   #endif
 #endif
 
 #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation

commit 4e2baeb3e146d60e50367b829a055e7f4198c554
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 19 00:43:07 2017 -0500

    Update indentation, file-wrapping for Marlin 2.0.x

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index b9f5e7db15..b37cc5792b 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -21,1008 +21,1009 @@
  */
 
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
 #ifndef CONDITIONALS_POST_H
 #define CONDITIONALS_POST_H
 
-  #define AVR_ATmega2560_FAMILY_PLUS_70 ( \
-       MB(BQ_ZUM_MEGA_3D)                 \
-    || MB(MIGHTYBOARD_REVE)               \
-    || MB(MINIRAMBO)                      \
-    || MB(SCOOVO_X9H)                     \
-  )
+#define AVR_ATmega2560_FAMILY_PLUS_70 ( \
+     MB(BQ_ZUM_MEGA_3D)                 \
+  || MB(MIGHTYBOARD_REVE)               \
+  || MB(MINIRAMBO)                      \
+  || MB(SCOOVO_X9H)                     \
+)
 
-  #define IS_SCARA (ENABLED(MORGAN_SCARA) || ENABLED(MAKERARM_SCARA))
-  #define IS_KINEMATIC (ENABLED(DELTA) || IS_SCARA)
-  #define IS_CARTESIAN !IS_KINEMATIC
+#define IS_SCARA (ENABLED(MORGAN_SCARA) || ENABLED(MAKERARM_SCARA))
+#define IS_KINEMATIC (ENABLED(DELTA) || IS_SCARA)
+#define IS_CARTESIAN !IS_KINEMATIC
 
-  /**
-   * Axis lengths and center
-   */
-  #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
-  #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
-  #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
-
-  // Defined only if the sanity-check is bypassed
-  #ifndef X_BED_SIZE
-    #define X_BED_SIZE X_MAX_LENGTH
-  #endif
-  #ifndef Y_BED_SIZE
-    #define Y_BED_SIZE Y_MAX_LENGTH
-  #endif
-
-  // Require 0,0 bed center for Delta and SCARA
-  #if IS_KINEMATIC
-    #define BED_CENTER_AT_0_0
-  #endif
+/**
+ * Axis lengths and center
+ */
+#define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
+#define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
+#define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
+
+// Defined only if the sanity-check is bypassed
+#ifndef X_BED_SIZE
+  #define X_BED_SIZE X_MAX_LENGTH
+#endif
+#ifndef Y_BED_SIZE
+  #define Y_BED_SIZE Y_MAX_LENGTH
+#endif
+
+// Require 0,0 bed center for Delta and SCARA
+#if IS_KINEMATIC
+  #define BED_CENTER_AT_0_0
+#endif
+
+// Define center values for future use
+#if ENABLED(BED_CENTER_AT_0_0)
+  #define X_CENTER 0
+  #define Y_CENTER 0
+#else
+  #define X_CENTER ((X_BED_SIZE) / 2)
+  #define Y_CENTER ((Y_BED_SIZE) / 2)
+#endif
+#define Z_CENTER ((Z_MIN_POS + Z_MAX_POS) / 2)
+
+// Get the linear boundaries of the bed
+#define X_MIN_BED (X_CENTER - (X_BED_SIZE) / 2)
+#define X_MAX_BED (X_CENTER + (X_BED_SIZE) / 2)
+#define Y_MIN_BED (Y_CENTER - (Y_BED_SIZE) / 2)
+#define Y_MAX_BED (Y_CENTER + (Y_BED_SIZE) / 2)
 
-  // Define center values for future use
-  #if ENABLED(BED_CENTER_AT_0_0)
-    #define X_CENTER 0
-    #define Y_CENTER 0
+/**
+ * CoreXY, CoreXZ, and CoreYZ - and their reverse
+ */
+#define CORE_IS_XY (ENABLED(COREXY) || ENABLED(COREYX))
+#define CORE_IS_XZ (ENABLED(COREXZ) || ENABLED(COREZX))
+#define CORE_IS_YZ (ENABLED(COREYZ) || ENABLED(COREZY))
+#define IS_CORE (CORE_IS_XY || CORE_IS_XZ || CORE_IS_YZ)
+#if IS_CORE
+  #if CORE_IS_XY
+    #define CORE_AXIS_1 A_AXIS
+    #define CORE_AXIS_2 B_AXIS
+    #define NORMAL_AXIS Z_AXIS
+  #elif CORE_IS_XZ
+    #define CORE_AXIS_1 A_AXIS
+    #define NORMAL_AXIS Y_AXIS
+    #define CORE_AXIS_2 C_AXIS
+  #elif CORE_IS_YZ
+    #define NORMAL_AXIS X_AXIS
+    #define CORE_AXIS_1 B_AXIS
+    #define CORE_AXIS_2 C_AXIS
+  #endif
+  #if (ENABLED(COREYX) || ENABLED(COREZX) || ENABLED(COREZY))
+    #define CORESIGN(n) (-(n))
   #else
-    #define X_CENTER ((X_BED_SIZE) / 2)
-    #define Y_CENTER ((Y_BED_SIZE) / 2)
+    #define CORESIGN(n) (n)
   #endif
-  #define Z_CENTER ((Z_MIN_POS + Z_MAX_POS) / 2)
-
-  // Get the linear boundaries of the bed
-  #define X_MIN_BED (X_CENTER - (X_BED_SIZE) / 2)
-  #define X_MAX_BED (X_CENTER + (X_BED_SIZE) / 2)
-  #define Y_MIN_BED (Y_CENTER - (Y_BED_SIZE) / 2)
-  #define Y_MAX_BED (Y_CENTER + (Y_BED_SIZE) / 2)
+#endif
 
-  /**
-   * CoreXY, CoreXZ, and CoreYZ - and their reverse
-   */
-  #define CORE_IS_XY (ENABLED(COREXY) || ENABLED(COREYX))
-  #define CORE_IS_XZ (ENABLED(COREXZ) || ENABLED(COREZX))
-  #define CORE_IS_YZ (ENABLED(COREYZ) || ENABLED(COREZY))
-  #define IS_CORE (CORE_IS_XY || CORE_IS_XZ || CORE_IS_YZ)
-  #if IS_CORE
-    #if CORE_IS_XY
-      #define CORE_AXIS_1 A_AXIS
-      #define CORE_AXIS_2 B_AXIS
-      #define NORMAL_AXIS Z_AXIS
-    #elif CORE_IS_XZ
-      #define CORE_AXIS_1 A_AXIS
-      #define NORMAL_AXIS Y_AXIS
-      #define CORE_AXIS_2 C_AXIS
-    #elif CORE_IS_YZ
-      #define NORMAL_AXIS X_AXIS
-      #define CORE_AXIS_1 B_AXIS
-      #define CORE_AXIS_2 C_AXIS
-    #endif
-    #if (ENABLED(COREYX) || ENABLED(COREZX) || ENABLED(COREZY))
-      #define CORESIGN(n) (-(n))
-    #else
-      #define CORESIGN(n) (n)
-    #endif
-  #endif
+/**
+ * No adjustable bed on non-cartesians
+ */
+#if IS_KINEMATIC
+  #undef LEVEL_BED_CORNERS
+#endif
 
-  /**
-   * No adjustable bed on non-cartesians
-   */
-  #if IS_KINEMATIC
-    #undef LEVEL_BED_CORNERS
-  #endif
+/**
+ * SCARA cannot use SLOWDOWN and requires QUICKHOME
+ */
+#if IS_SCARA
+  #undef SLOWDOWN
+  #define QUICK_HOME
+#endif
 
-  /**
-   * SCARA cannot use SLOWDOWN and requires QUICKHOME
-   */
-  #if IS_SCARA
-    #undef SLOWDOWN
-    #define QUICK_HOME
+/**
+ * Set the home position based on settings or manual overrides
+ */
+#ifdef MANUAL_X_HOME_POS
+  #define X_HOME_POS MANUAL_X_HOME_POS
+#elif ENABLED(BED_CENTER_AT_0_0)
+  #if ENABLED(DELTA)
+    #define X_HOME_POS 0
+  #else
+    #define X_HOME_POS ((X_BED_SIZE) * (X_HOME_DIR) * 0.5)
   #endif
-
-  /**
-   * Set the home position based on settings or manual overrides
-   */
-  #ifdef MANUAL_X_HOME_POS
-    #define X_HOME_POS MANUAL_X_HOME_POS
-  #elif ENABLED(BED_CENTER_AT_0_0)
-    #if ENABLED(DELTA)
-      #define X_HOME_POS 0
-    #else
-      #define X_HOME_POS ((X_BED_SIZE) * (X_HOME_DIR) * 0.5)
-    #endif
+#else
+  #if ENABLED(DELTA)
+    #define X_HOME_POS (X_MIN_POS + (X_BED_SIZE) * 0.5)
   #else
-    #if ENABLED(DELTA)
-      #define X_HOME_POS (X_MIN_POS + (X_BED_SIZE) * 0.5)
-    #else
-      #define X_HOME_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
-    #endif
+    #define X_HOME_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
   #endif
+#endif
 
-  #ifdef MANUAL_Y_HOME_POS
-    #define Y_HOME_POS MANUAL_Y_HOME_POS
-  #elif ENABLED(BED_CENTER_AT_0_0)
-    #if ENABLED(DELTA)
-      #define Y_HOME_POS 0
-    #else
-      #define Y_HOME_POS ((Y_BED_SIZE) * (Y_HOME_DIR) * 0.5)
-    #endif
+#ifdef MANUAL_Y_HOME_POS
+  #define Y_HOME_POS MANUAL_Y_HOME_POS
+#elif ENABLED(BED_CENTER_AT_0_0)
+  #if ENABLED(DELTA)
+    #define Y_HOME_POS 0
   #else
-    #if ENABLED(DELTA)
-      #define Y_HOME_POS (Y_MIN_POS + (Y_BED_SIZE) * 0.5)
-    #else
-      #define Y_HOME_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
-    #endif
+    #define Y_HOME_POS ((Y_BED_SIZE) * (Y_HOME_DIR) * 0.5)
   #endif
-
-  #ifdef MANUAL_Z_HOME_POS
-    #define Z_HOME_POS MANUAL_Z_HOME_POS
+#else
+  #if ENABLED(DELTA)
+    #define Y_HOME_POS (Y_MIN_POS + (Y_BED_SIZE) * 0.5)
   #else
-    #define Z_HOME_POS (Z_HOME_DIR < 0 ? Z_MIN_POS : Z_MAX_POS)
+    #define Y_HOME_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
   #endif
+#endif
 
-  /**
-   * If DELTA_HEIGHT isn't defined use the old setting
-   */
-  #if ENABLED(DELTA) && !defined(DELTA_HEIGHT)
-    #define DELTA_HEIGHT Z_HOME_POS
-  #endif
+#ifdef MANUAL_Z_HOME_POS
+  #define Z_HOME_POS MANUAL_Z_HOME_POS
+#else
+  #define Z_HOME_POS (Z_HOME_DIR < 0 ? Z_MIN_POS : Z_MAX_POS)
+#endif
 
-  /**
-   * Auto Bed Leveling and Z Probe Repeatability Test
-   */
-  #define HOMING_Z_WITH_PROBE (HAS_BED_PROBE && Z_HOME_DIR < 0 && ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN))
+/**
+ * If DELTA_HEIGHT isn't defined use the old setting
+ */
+#if ENABLED(DELTA) && !defined(DELTA_HEIGHT)
+  #define DELTA_HEIGHT Z_HOME_POS
+#endif
 
-  /**
-   * Z Sled Probe requires Z_SAFE_HOMING
-   */
-  #if ENABLED(Z_PROBE_SLED)
-    #define Z_SAFE_HOMING
-  #endif
+/**
+ * Auto Bed Leveling and Z Probe Repeatability Test
+ */
+#define HOMING_Z_WITH_PROBE (HAS_BED_PROBE && Z_HOME_DIR < 0 && ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN))
 
-  /**
-   * DELTA should ignore Z_SAFE_HOMING and SLOWDOWN
-   */
-  #if ENABLED(DELTA)
-    #undef Z_SAFE_HOMING
-    #undef SLOWDOWN
-  #endif
+/**
+ * Z Sled Probe requires Z_SAFE_HOMING
+ */
+#if ENABLED(Z_PROBE_SLED)
+  #define Z_SAFE_HOMING
+#endif
 
-  /**
-   * Safe Homing Options
-   */
-  #if ENABLED(Z_SAFE_HOMING)
-    #ifndef Z_SAFE_HOMING_X_POINT
-      #define Z_SAFE_HOMING_X_POINT X_CENTER
-    #endif
-    #ifndef Z_SAFE_HOMING_Y_POINT
-      #define Z_SAFE_HOMING_Y_POINT Y_CENTER
-    #endif
-    #define X_TILT_FULCRUM Z_SAFE_HOMING_X_POINT
-    #define Y_TILT_FULCRUM Z_SAFE_HOMING_Y_POINT
-  #else
-    #define X_TILT_FULCRUM X_HOME_POS
-    #define Y_TILT_FULCRUM Y_HOME_POS
-  #endif
+/**
+ * DELTA should ignore Z_SAFE_HOMING and SLOWDOWN
+ */
+#if ENABLED(DELTA)
+  #undef Z_SAFE_HOMING
+  #undef SLOWDOWN
+#endif
 
-  /**
-   * Host keep alive
-   */
-  #ifndef DEFAULT_KEEPALIVE_INTERVAL
-    #define DEFAULT_KEEPALIVE_INTERVAL 2
+/**
+ * Safe Homing Options
+ */
+#if ENABLED(Z_SAFE_HOMING)
+  #ifndef Z_SAFE_HOMING_X_POINT
+    #define Z_SAFE_HOMING_X_POINT X_CENTER
   #endif
-
-  #ifdef CPU_32_BIT
-    /**
-     * Hidden options for developer
-     */
-    // Double stepping starts at STEP_DOUBLER_FREQUENCY + 1, quad stepping starts at STEP_DOUBLER_FREQUENCY * 2 + 1
-    #ifndef STEP_DOUBLER_FREQUENCY
-      #if ENABLED(LIN_ADVANCE)
-        #define STEP_DOUBLER_FREQUENCY 60000 // Hz
-      #else
-        #define STEP_DOUBLER_FREQUENCY 80000 // Hz
-      #endif
-    #endif
-    // Disable double / quad stepping
-    //#define DISABLE_MULTI_STEPPING
+  #ifndef Z_SAFE_HOMING_Y_POINT
+    #define Z_SAFE_HOMING_Y_POINT Y_CENTER
   #endif
+  #define X_TILT_FULCRUM Z_SAFE_HOMING_X_POINT
+  #define Y_TILT_FULCRUM Z_SAFE_HOMING_Y_POINT
+#else
+  #define X_TILT_FULCRUM X_HOME_POS
+  #define Y_TILT_FULCRUM Y_HOME_POS
+#endif
 
-  /**
-   * Provide a MAX_AUTORETRACT for older configs
-   */
-  #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
-    #define MAX_AUTORETRACT 99
-  #endif
+/**
+ * Host keep alive
+ */
+#ifndef DEFAULT_KEEPALIVE_INTERVAL
+  #define DEFAULT_KEEPALIVE_INTERVAL 2
+#endif
 
+#ifdef CPU_32_BIT
   /**
-   * MAX_STEP_FREQUENCY differs for TOSHIBA
+   * Hidden options for developer
    */
-  #if ENABLED(CONFIG_STEPPERS_TOSHIBA)
-    #ifdef CPU_32_BIT
-      #define MAX_STEP_FREQUENCY STEP_DOUBLER_FREQUENCY // Max step frequency for Toshiba Stepper Controllers, 96kHz is close to maximum for an Arduino Due
-    #else
-      #define MAX_STEP_FREQUENCY 10000 // Max step frequency for Toshiba Stepper Controllers
-    #endif
-  #else
-    #ifdef CPU_32_BIT
-      #define MAX_STEP_FREQUENCY (STEP_DOUBLER_FREQUENCY * 4) // Max step frequency for the Due is approx. 330kHz
+  // Double stepping starts at STEP_DOUBLER_FREQUENCY + 1, quad stepping starts at STEP_DOUBLER_FREQUENCY * 2 + 1
+  #ifndef STEP_DOUBLER_FREQUENCY
+    #if ENABLED(LIN_ADVANCE)
+      #define STEP_DOUBLER_FREQUENCY 60000 // Hz
     #else
-      #define MAX_STEP_FREQUENCY 40000 // Max step frequency for Ultimaker (5000 pps / half step)
+      #define STEP_DOUBLER_FREQUENCY 80000 // Hz
     #endif
   #endif
+  // Disable double / quad stepping
+  //#define DISABLE_MULTI_STEPPING
+#endif
 
-  // MS1 MS2 Stepper Driver Microstepping mode table
-  #define MICROSTEP1 LOW,LOW
-  #define MICROSTEP2 HIGH,LOW
-  #define MICROSTEP4 LOW,HIGH
-  #define MICROSTEP8 HIGH,HIGH
-  #ifdef __SAM3X8E__
-    #if MB(ALLIGATOR)
-      #define MICROSTEP16 LOW,LOW
-      #define MICROSTEP32 HIGH,HIGH
-    #else
-      #define MICROSTEP16 HIGH,HIGH
-    #endif
-  #else
-  #define MICROSTEP16 HIGH,HIGH
-  #endif
-
-  /**
-   * Override here because this is set in Configuration_adv.h
-   */
-  #if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
-    #undef SD_DETECT_INVERTED
-  #endif
-
-  /**
-   * Set defaults for missing (newer) options
-   */
-  #ifndef DISABLE_INACTIVE_X
-    #define DISABLE_INACTIVE_X DISABLE_X
-  #endif
-  #ifndef DISABLE_INACTIVE_Y
-    #define DISABLE_INACTIVE_Y DISABLE_Y
-  #endif
-  #ifndef DISABLE_INACTIVE_Z
-    #define DISABLE_INACTIVE_Z DISABLE_Z
-  #endif
-  #ifndef DISABLE_INACTIVE_E
-    #define DISABLE_INACTIVE_E DISABLE_E
-  #endif
+/**
+ * Provide a MAX_AUTORETRACT for older configs
+ */
+#if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
+  #define MAX_AUTORETRACT 99
+#endif
 
-  // Power Signal Control Definitions
-  // By default use ATX definition
-  #ifndef POWER_SUPPLY
-    #define POWER_SUPPLY 1
-  #endif
-  #if (POWER_SUPPLY == 1)     // 1 = ATX
-    #define PS_ON_AWAKE  LOW
-    #define PS_ON_ASLEEP HIGH
-  #elif (POWER_SUPPLY == 2)   // 2 = X-Box 360 203W
-    #define PS_ON_AWAKE  HIGH
-    #define PS_ON_ASLEEP LOW
+/**
+ * MAX_STEP_FREQUENCY differs for TOSHIBA
+ */
+#if ENABLED(CONFIG_STEPPERS_TOSHIBA)
+  #ifdef CPU_32_BIT
+    #define MAX_STEP_FREQUENCY STEP_DOUBLER_FREQUENCY // Max step frequency for Toshiba Stepper Controllers, 96kHz is close to maximum for an Arduino Due
+  #else
+    #define MAX_STEP_FREQUENCY 10000 // Max step frequency for Toshiba Stepper Controllers
   #endif
-  #define HAS_POWER_SWITCH (POWER_SUPPLY > 0 && PIN_EXISTS(PS_ON))
-
-  /**
-   * Temp Sensor defines
-   */
-  #if TEMP_SENSOR_0 == -3
-    #define HEATER_0_USES_MAX6675
-    #define MAX6675_IS_MAX31855
-    #define MAX6675_TMIN -270
-    #define MAX6675_TMAX 1800
-  #elif TEMP_SENSOR_0 == -2
-    #define HEATER_0_USES_MAX6675
-    #define MAX6675_TMIN 0
-    #define MAX6675_TMAX 1024
-  #elif TEMP_SENSOR_0 == -1
-    #define HEATER_0_USES_AD595
-  #elif TEMP_SENSOR_0 == 0
-    #undef HEATER_0_MINTEMP
-    #undef HEATER_0_MAXTEMP
-  #elif TEMP_SENSOR_0 > 0
-    #define THERMISTORHEATER_0 TEMP_SENSOR_0
-    #define HEATER_0_USES_THERMISTOR
+#else
+  #ifdef CPU_32_BIT
+    #define MAX_STEP_FREQUENCY (STEP_DOUBLER_FREQUENCY * 4) // Max step frequency for the Due is approx. 330kHz
+  #else
+    #define MAX_STEP_FREQUENCY 40000 // Max step frequency for Ultimaker (5000 pps / half step)
+  #endif
+#endif
+
+// MS1 MS2 Stepper Driver Microstepping mode table
+#define MICROSTEP1 LOW,LOW
+#define MICROSTEP2 HIGH,LOW
+#define MICROSTEP4 LOW,HIGH
+#define MICROSTEP8 HIGH,HIGH
+#ifdef __SAM3X8E__
+  #if MB(ALLIGATOR)
+    #define MICROSTEP16 LOW,LOW
+    #define MICROSTEP32 HIGH,HIGH
+  #else
+    #define MICROSTEP16 HIGH,HIGH
   #endif
+#else
+#define MICROSTEP16 HIGH,HIGH
+#endif
 
-  #if TEMP_SENSOR_1 <= -2
-    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_1"
-  #elif TEMP_SENSOR_1 == -1
-    #define HEATER_1_USES_AD595
-  #elif TEMP_SENSOR_1 == 0
-    #undef HEATER_1_MINTEMP
-    #undef HEATER_1_MAXTEMP
-  #elif TEMP_SENSOR_1 > 0
-    #define THERMISTORHEATER_1 TEMP_SENSOR_1
-    #define HEATER_1_USES_THERMISTOR
-  #endif
+/**
+ * Override here because this is set in Configuration_adv.h
+ */
+#if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
+  #undef SD_DETECT_INVERTED
+#endif
 
-  #if TEMP_SENSOR_2 <= -2
-    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_2"
-  #elif TEMP_SENSOR_2 == -1
-    #define HEATER_2_USES_AD595
-  #elif TEMP_SENSOR_2 == 0
-    #undef HEATER_2_MINTEMP
-    #undef HEATER_2_MAXTEMP
-  #elif TEMP_SENSOR_2 > 0
-    #define THERMISTORHEATER_2 TEMP_SENSOR_2
-    #define HEATER_2_USES_THERMISTOR
-  #endif
+/**
+ * Set defaults for missing (newer) options
+ */
+#ifndef DISABLE_INACTIVE_X
+  #define DISABLE_INACTIVE_X DISABLE_X
+#endif
+#ifndef DISABLE_INACTIVE_Y
+  #define DISABLE_INACTIVE_Y DISABLE_Y
+#endif
+#ifndef DISABLE_INACTIVE_Z
+  #define DISABLE_INACTIVE_Z DISABLE_Z
+#endif
+#ifndef DISABLE_INACTIVE_E
+  #define DISABLE_INACTIVE_E DISABLE_E
+#endif
+
+// Power Signal Control Definitions
+// By default use ATX definition
+#ifndef POWER_SUPPLY
+  #define POWER_SUPPLY 1
+#endif
+#if (POWER_SUPPLY == 1)     // 1 = ATX
+  #define PS_ON_AWAKE  LOW
+  #define PS_ON_ASLEEP HIGH
+#elif (POWER_SUPPLY == 2)   // 2 = X-Box 360 203W
+  #define PS_ON_AWAKE  HIGH
+  #define PS_ON_ASLEEP LOW
+#endif
+#define HAS_POWER_SWITCH (POWER_SUPPLY > 0 && PIN_EXISTS(PS_ON))
 
-  #if TEMP_SENSOR_3 <= -2
-    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_3"
-  #elif TEMP_SENSOR_3 == -1
-    #define HEATER_3_USES_AD595
-  #elif TEMP_SENSOR_3 == 0
-    #undef HEATER_3_MINTEMP
-    #undef HEATER_3_MAXTEMP
-  #elif TEMP_SENSOR_3 > 0
-    #define THERMISTORHEATER_3 TEMP_SENSOR_3
-    #define HEATER_3_USES_THERMISTOR
-  #endif
+/**
+ * Temp Sensor defines
+ */
+#if TEMP_SENSOR_0 == -3
+  #define HEATER_0_USES_MAX6675
+  #define MAX6675_IS_MAX31855
+  #define MAX6675_TMIN -270
+  #define MAX6675_TMAX 1800
+#elif TEMP_SENSOR_0 == -2
+  #define HEATER_0_USES_MAX6675
+  #define MAX6675_TMIN 0
+  #define MAX6675_TMAX 1024
+#elif TEMP_SENSOR_0 == -1
+  #define HEATER_0_USES_AD595
+#elif TEMP_SENSOR_0 == 0
+  #undef HEATER_0_MINTEMP
+  #undef HEATER_0_MAXTEMP
+#elif TEMP_SENSOR_0 > 0
+  #define THERMISTORHEATER_0 TEMP_SENSOR_0
+  #define HEATER_0_USES_THERMISTOR
+#endif
+
+#if TEMP_SENSOR_1 <= -2
+  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_1"
+#elif TEMP_SENSOR_1 == -1
+  #define HEATER_1_USES_AD595
+#elif TEMP_SENSOR_1 == 0
+  #undef HEATER_1_MINTEMP
+  #undef HEATER_1_MAXTEMP
+#elif TEMP_SENSOR_1 > 0
+  #define THERMISTORHEATER_1 TEMP_SENSOR_1
+  #define HEATER_1_USES_THERMISTOR
+#endif
+
+#if TEMP_SENSOR_2 <= -2
+  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_2"
+#elif TEMP_SENSOR_2 == -1
+  #define HEATER_2_USES_AD595
+#elif TEMP_SENSOR_2 == 0
+  #undef HEATER_2_MINTEMP
+  #undef HEATER_2_MAXTEMP
+#elif TEMP_SENSOR_2 > 0
+  #define THERMISTORHEATER_2 TEMP_SENSOR_2
+  #define HEATER_2_USES_THERMISTOR
+#endif
+
+#if TEMP_SENSOR_3 <= -2
+  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_3"
+#elif TEMP_SENSOR_3 == -1
+  #define HEATER_3_USES_AD595
+#elif TEMP_SENSOR_3 == 0
+  #undef HEATER_3_MINTEMP
+  #undef HEATER_3_MAXTEMP
+#elif TEMP_SENSOR_3 > 0
+  #define THERMISTORHEATER_3 TEMP_SENSOR_3
+  #define HEATER_3_USES_THERMISTOR
+#endif
+
+#if TEMP_SENSOR_4 <= -2
+  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_4"
+#elif TEMP_SENSOR_4 == -1
+  #define HEATER_4_USES_AD595
+#elif TEMP_SENSOR_4 == 0
+  #undef HEATER_4_MINTEMP
+  #undef HEATER_4_MAXTEMP
+#elif TEMP_SENSOR_4 > 0
+  #define THERMISTORHEATER_4 TEMP_SENSOR_4
+  #define HEATER_4_USES_THERMISTOR
+#endif
+
+#if TEMP_SENSOR_BED <= -2
+  #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_BED"
+#elif TEMP_SENSOR_BED == -1
+  #define BED_USES_AD595
+#elif TEMP_SENSOR_BED == 0
+  #undef BED_MINTEMP
+  #undef BED_MAXTEMP
+#elif TEMP_SENSOR_BED > 0
+  #define THERMISTORBED TEMP_SENSOR_BED
+  #define BED_USES_THERMISTOR
+#endif
+
+#ifdef __SAM3X8E__
+  #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595))
+#endif
 
-  #if TEMP_SENSOR_4 <= -2
-    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_4"
-  #elif TEMP_SENSOR_4 == -1
-    #define HEATER_4_USES_AD595
-  #elif TEMP_SENSOR_4 == 0
-    #undef HEATER_4_MINTEMP
-    #undef HEATER_4_MAXTEMP
-  #elif TEMP_SENSOR_4 > 0
-    #define THERMISTORHEATER_4 TEMP_SENSOR_4
-    #define HEATER_4_USES_THERMISTOR
-  #endif
+/**
+ * Flags for PID handling
+ */
+#define HAS_PID_HEATING (ENABLED(PIDTEMP) || ENABLED(PIDTEMPBED))
+#define HAS_PID_FOR_BOTH (ENABLED(PIDTEMP) && ENABLED(PIDTEMPBED))
 
-  #if TEMP_SENSOR_BED <= -2
-    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_BED"
-  #elif TEMP_SENSOR_BED == -1
-    #define BED_USES_AD595
-  #elif TEMP_SENSOR_BED == 0
-    #undef BED_MINTEMP
-    #undef BED_MAXTEMP
-  #elif TEMP_SENSOR_BED > 0
-    #define THERMISTORBED TEMP_SENSOR_BED
-    #define BED_USES_THERMISTOR
+/**
+ * Default hotend offsets, if not defined
+ */
+#if HOTENDS > 1
+  #ifndef HOTEND_OFFSET_X
+    #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
   #endif
-
-  #ifdef __SAM3X8E__
-    #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595))
+  #ifndef HOTEND_OFFSET_Y
+    #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
   #endif
-
-  /**
-   * Flags for PID handling
-   */
-  #define HAS_PID_HEATING (ENABLED(PIDTEMP) || ENABLED(PIDTEMPBED))
-  #define HAS_PID_FOR_BOTH (ENABLED(PIDTEMP) && ENABLED(PIDTEMPBED))
-
-  /**
-   * Default hotend offsets, if not defined
-   */
-  #if HOTENDS > 1
-    #ifndef HOTEND_OFFSET_X
-      #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
-    #endif
-    #ifndef HOTEND_OFFSET_Y
-      #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
-    #endif
-    #if !defined(HOTEND_OFFSET_Z) && (ENABLED(DUAL_X_CARRIAGE) || ENABLED(SWITCHING_NOZZLE))
-      #define HOTEND_OFFSET_Z { 0 }
-    #endif
+  #if !defined(HOTEND_OFFSET_Z) && (ENABLED(DUAL_X_CARRIAGE) || ENABLED(SWITCHING_NOZZLE))
+    #define HOTEND_OFFSET_Z { 0 }
   #endif
+#endif
 
-  /**
-   * ARRAY_BY_EXTRUDERS based on EXTRUDERS
-   */
-  #define ARRAY_BY_EXTRUDERS(...) ARRAY_N(EXTRUDERS, __VA_ARGS__)
-  #define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
+/**
+ * ARRAY_BY_EXTRUDERS based on EXTRUDERS
+ */
+#define ARRAY_BY_EXTRUDERS(...) ARRAY_N(EXTRUDERS, __VA_ARGS__)
+#define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
 
-  /**
-   * ARRAY_BY_HOTENDS based on HOTENDS
-   */
-  #define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
-  #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
+/**
+ * ARRAY_BY_HOTENDS based on HOTENDS
+ */
+#define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
+#define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
 
-  /**
-   * Z_DUAL_ENDSTOPS endstop reassignment
-   */
-  #if ENABLED(Z_DUAL_ENDSTOPS)
-    #define _XMIN_ 100
-    #define _YMIN_ 200
-    #define _ZMIN_ 300
-    #define _XMAX_ 101
-    #define _YMAX_ 201
-    #define _ZMAX_ 301
+/**
+ * Z_DUAL_ENDSTOPS endstop reassignment
+ */
+#if ENABLED(Z_DUAL_ENDSTOPS)
+  #define _XMIN_ 100
+  #define _YMIN_ 200
+  #define _ZMIN_ 300
+  #define _XMAX_ 101
+  #define _YMAX_ 201
+  #define _ZMAX_ 301
+  #if Z2_USE_ENDSTOP == _XMIN_
+    #define USE_XMIN_PLUG
+  #elif Z2_USE_ENDSTOP == _XMAX_
+    #define USE_XMAX_PLUG
+  #elif Z2_USE_ENDSTOP == _YMIN_
+    #define USE_YMIN_PLUG
+  #elif Z2_USE_ENDSTOP == _YMAX_
+    #define USE_YMAX_PLUG
+  #elif Z2_USE_ENDSTOP == _ZMIN_
+    #define USE_ZMIN_PLUG
+  #elif Z2_USE_ENDSTOP == _ZMAX_
+    #define USE_ZMAX_PLUG
+  #endif
+  #if Z_HOME_DIR > 0
     #if Z2_USE_ENDSTOP == _XMIN_
-      #define USE_XMIN_PLUG
+      #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #define Z2_MAX_PIN X_MIN_PIN
     #elif Z2_USE_ENDSTOP == _XMAX_
-      #define USE_XMAX_PLUG
+      #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #define Z2_MAX_PIN X_MAX_PIN
     #elif Z2_USE_ENDSTOP == _YMIN_
-      #define USE_YMIN_PLUG
+      #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #define Z2_MAX_PIN Y_MIN_PIN
     #elif Z2_USE_ENDSTOP == _YMAX_
-      #define USE_YMAX_PLUG
+      #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #define Z2_MAX_PIN Y_MAX_PIN
     #elif Z2_USE_ENDSTOP == _ZMIN_
-      #define USE_ZMIN_PLUG
+      #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #define Z2_MAX_PIN Z_MIN_PIN
     #elif Z2_USE_ENDSTOP == _ZMAX_
-      #define USE_ZMAX_PLUG
-    #endif
-    #if Z_HOME_DIR > 0
-      #if Z2_USE_ENDSTOP == _XMIN_
-        #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-        #define Z2_MAX_PIN X_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _XMAX_
-        #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-        #define Z2_MAX_PIN X_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _YMIN_
-        #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-        #define Z2_MAX_PIN Y_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _YMAX_
-        #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-        #define Z2_MAX_PIN Y_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _ZMIN_
-        #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-        #define Z2_MAX_PIN Z_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _ZMAX_
-        #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #define Z2_MAX_PIN Z_MAX_PIN
-      #else
-        #define Z2_MAX_ENDSTOP_INVERTING false
-      #endif
+      #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #define Z2_MAX_PIN Z_MAX_PIN
     #else
-      #if Z2_USE_ENDSTOP == _XMIN_
-        #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
-        #define Z2_MIN_PIN X_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _XMAX_
-        #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
-        #define Z2_MIN_PIN X_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _YMIN_
-        #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
-        #define Z2_MIN_PIN Y_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _YMAX_
-        #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
-        #define Z2_MIN_PIN Y_MAX_PIN
-      #elif Z2_USE_ENDSTOP == _ZMIN_
-        #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
-        #define Z2_MIN_PIN Z_MIN_PIN
-      #elif Z2_USE_ENDSTOP == _ZMAX_
-        #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
-        #define Z2_MIN_PIN Z_MAX_PIN
-      #else
-        #define Z2_MIN_ENDSTOP_INVERTING false
-      #endif
+      #define Z2_MAX_ENDSTOP_INVERTING false
     #endif
-  #endif
-
-  // Is an endstop plug used for the Z2 endstop or the bed probe?
-  #define IS_Z2_OR_PROBE(A,M) ( \
-       (ENABLED(Z_DUAL_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_) \
-    || (ENABLED(Z_MIN_PROBE_ENDSTOP) && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
-
-  /**
-   * Set ENDSTOPPULLUPS for active endstop switches
-   */
-  #if ENABLED(ENDSTOPPULLUPS)
-    #if ENABLED(USE_XMAX_PLUG)
-      #define ENDSTOPPULLUP_XMAX
-    #endif
-    #if ENABLED(USE_YMAX_PLUG)
-      #define ENDSTOPPULLUP_YMAX
-    #endif
-    #if ENABLED(USE_ZMAX_PLUG)
-      #define ENDSTOPPULLUP_ZMAX
-    #endif
-    #if ENABLED(USE_XMIN_PLUG)
-      #define ENDSTOPPULLUP_XMIN
-    #endif
-    #if ENABLED(USE_YMIN_PLUG)
-      #define ENDSTOPPULLUP_YMIN
-    #endif
-    #if ENABLED(USE_ZMIN_PLUG)
-      #define ENDSTOPPULLUP_ZMIN
+  #else
+    #if Z2_USE_ENDSTOP == _XMIN_
+      #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+      #define Z2_MIN_PIN X_MIN_PIN
+    #elif Z2_USE_ENDSTOP == _XMAX_
+      #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+      #define Z2_MIN_PIN X_MAX_PIN
+    #elif Z2_USE_ENDSTOP == _YMIN_
+      #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+      #define Z2_MIN_PIN Y_MIN_PIN
+    #elif Z2_USE_ENDSTOP == _YMAX_
+      #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+      #define Z2_MIN_PIN Y_MAX_PIN
+    #elif Z2_USE_ENDSTOP == _ZMIN_
+      #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+      #define Z2_MIN_PIN Z_MIN_PIN
+    #elif Z2_USE_ENDSTOP == _ZMAX_
+      #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+      #define Z2_MIN_PIN Z_MAX_PIN
+    #else
+      #define Z2_MIN_ENDSTOP_INVERTING false
     #endif
   #endif
+#endif
 
-  /**
-   * Shorthand for pin tests, used wherever needed
-   */
-
-  // Steppers
-  #define HAS_X_ENABLE      (PIN_EXISTS(X_ENABLE))
-  #define HAS_X_DIR         (PIN_EXISTS(X_DIR))
-  #define HAS_X_STEP        (PIN_EXISTS(X_STEP))
-  #define HAS_X_MICROSTEPS  (PIN_EXISTS(X_MS1))
-
-  #define HAS_X2_ENABLE     (PIN_EXISTS(X2_ENABLE))
-  #define HAS_X2_DIR        (PIN_EXISTS(X2_DIR))
-  #define HAS_X2_STEP       (PIN_EXISTS(X2_STEP))
-  #define HAS_Y_MICROSTEPS  (PIN_EXISTS(Y_MS1))
-
-  #define HAS_Y_ENABLE      (PIN_EXISTS(Y_ENABLE))
-  #define HAS_Y_DIR         (PIN_EXISTS(Y_DIR))
-  #define HAS_Y_STEP        (PIN_EXISTS(Y_STEP))
-  #define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
-
-  #define HAS_Y2_ENABLE     (PIN_EXISTS(Y2_ENABLE))
-  #define HAS_Y2_DIR        (PIN_EXISTS(Y2_DIR))
-  #define HAS_Y2_STEP       (PIN_EXISTS(Y2_STEP))
-
-  #define HAS_Z_ENABLE      (PIN_EXISTS(Z_ENABLE))
-  #define HAS_Z_DIR         (PIN_EXISTS(Z_DIR))
-  #define HAS_Z_STEP        (PIN_EXISTS(Z_STEP))
-
-  #define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE))
-  #define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
-  #define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
-
-  // Extruder steppers and solenoids
-  #define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE))
-  #define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
-  #define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
-  #define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
-  #define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
-
-  #define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE))
-  #define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))
-  #define HAS_E1_STEP       (PIN_EXISTS(E1_STEP))
-  #define HAS_E1_MICROSTEPS (PIN_EXISTS(E1_MS1))
-  #define HAS_SOLENOID_1    (PIN_EXISTS(SOL1))
-
-  #define HAS_E2_ENABLE     (PIN_EXISTS(E2_ENABLE))
-  #define HAS_E2_DIR        (PIN_EXISTS(E2_DIR))
-  #define HAS_E2_STEP       (PIN_EXISTS(E2_STEP))
-  #define HAS_E2_MICROSTEPS (PIN_EXISTS(E2_MS1))
-  #define HAS_SOLENOID_2    (PIN_EXISTS(SOL2))
-
-  #define HAS_E3_ENABLE     (PIN_EXISTS(E3_ENABLE))
-  #define HAS_E3_DIR        (PIN_EXISTS(E3_DIR))
-  #define HAS_E3_STEP       (PIN_EXISTS(E3_STEP))
-  #define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
-  #define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
-
-  #define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
-  #define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
-  #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
-  #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
-  #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
-
-  // Endstops and bed probe
-  #define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_Z2_OR_PROBE(X,MIN))
-  #define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_Z2_OR_PROBE(X,MAX))
-  #define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_Z2_OR_PROBE(Y,MIN))
-  #define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_Z2_OR_PROBE(Y,MAX))
-  #define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_Z2_OR_PROBE(Z,MIN))
-  #define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_Z2_OR_PROBE(Z,MAX))
-  #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
-  #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
-  #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
-
-  // Thermistors
-  #define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
-  #define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
-  #define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
-  #define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
-  #define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)
-  #define HAS_TEMP_HOTEND (HAS_TEMP_0 || ENABLED(HEATER_0_USES_MAX6675))
-  #define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && TEMP_SENSOR_BED > -2)
-
-  // Heaters
-  #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
-  #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
-  #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
-  #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
-  #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
-  #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
-
-  // Thermal protection
-  #define HAS_THERMALLY_PROTECTED_BED (ENABLED(THERMAL_PROTECTION_BED) && HAS_TEMP_BED && HAS_HEATER_BED)
-  #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
-  #define WATCH_THE_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
-
-  // Auto fans
-  #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
-  #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
-  #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
-  #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
-  #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
-  #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3)
-  #define AUTO_1_IS_0 (E1_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-  #define AUTO_2_IS_0 (E2_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-  #define AUTO_2_IS_1 (E2_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-  #define AUTO_3_IS_0 (E3_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-  #define AUTO_3_IS_1 (E3_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-  #define AUTO_3_IS_2 (E3_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
-  #define AUTO_4_IS_0 (E4_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
-  #define AUTO_4_IS_1 (E4_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
-  #define AUTO_4_IS_2 (E4_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
-  #define AUTO_4_IS_3 (E4_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
-
-  // Other fans
-  #define HAS_FAN0 (PIN_EXISTS(FAN))
-  #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN)
-  #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN)
-  #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
-
-  // Servos
-  #define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
-  #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
-  #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
-  #define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
-  #define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
-
-  // Sensors
-  #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
-  #define HAS_FIL_RUNOUT (PIN_EXISTS(FIL_RUNOUT))
-
-  // User Interface
-  #define HAS_HOME (PIN_EXISTS(HOME))
-  #define HAS_KILL (PIN_EXISTS(KILL))
-  #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
-  #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
-  #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
-  #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
-
-  // Digital control
-  #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS)
-  #define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
-  #define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
-  #define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
+// Is an endstop plug used for the Z2 endstop or the bed probe?
+#define IS_Z2_OR_PROBE(A,M) ( \
+     (ENABLED(Z_DUAL_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_) \
+  || (ENABLED(Z_MIN_PROBE_ENDSTOP) && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
 
-  /**
-   * This setting is also used by M109 when trying to calculate
-   * a ballpark safe margin to prevent wait-forever situation.
-   */
-  #ifndef EXTRUDE_MINTEMP
-    #define EXTRUDE_MINTEMP 170
+/**
+ * Set ENDSTOPPULLUPS for active endstop switches
+ */
+#if ENABLED(ENDSTOPPULLUPS)
+  #if ENABLED(USE_XMAX_PLUG)
+    #define ENDSTOPPULLUP_XMAX
   #endif
-
-  /**
-   * Helper Macros for heaters and extruder fan
-   */
-  #define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, v)
-  #if HOTENDS > 1 || ENABLED(HEATERS_PARALLEL)
-    #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, v)
-    #if HOTENDS > 2
-      #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, v)
-      #if HOTENDS > 3
-        #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, v)
-        #if HOTENDS > 4
-          #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, v)
-        #endif // HOTENDS > 4
-      #endif // HOTENDS > 3
-    #endif // HOTENDS > 2
-  #endif // HOTENDS > 1
-  #if ENABLED(HEATERS_PARALLEL)
-    #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
-  #else
-    #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
+  #if ENABLED(USE_YMAX_PLUG)
+    #define ENDSTOPPULLUP_YMAX
   #endif
-
-  /**
-   * Heated bed requires settings
-   */
-  #if HAS_HEATER_BED
-    #ifndef MAX_BED_POWER
-      #define MAX_BED_POWER 255
-    #endif
-    #ifndef HEATER_BED_INVERTING
-      #define HEATER_BED_INVERTING false
-    #endif
-    #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ HEATER_BED_INVERTING)
-  #endif
-
-  /**
-   * Up to 3 PWM fans
-   */
-  #if HAS_FAN2
-    #define FAN_COUNT 3
-  #elif HAS_FAN1
-    #define FAN_COUNT 2
-  #elif HAS_FAN0
-    #define FAN_COUNT 1
-  #else
-    #define FAN_COUNT 0
+  #if ENABLED(USE_ZMAX_PLUG)
+    #define ENDSTOPPULLUP_ZMAX
   #endif
-
-  #if HAS_FAN0
-    #define WRITE_FAN(v) WRITE(FAN_PIN, v)
-    #define WRITE_FAN0(v) WRITE_FAN(v)
+  #if ENABLED(USE_XMIN_PLUG)
+    #define ENDSTOPPULLUP_XMIN
   #endif
-  #if HAS_FAN1
-    #define WRITE_FAN1(v) WRITE(FAN1_PIN, v)
+  #if ENABLED(USE_YMIN_PLUG)
+    #define ENDSTOPPULLUP_YMIN
   #endif
-  #if HAS_FAN2
-    #define WRITE_FAN2(v) WRITE(FAN2_PIN, v)
+  #if ENABLED(USE_ZMIN_PLUG)
+    #define ENDSTOPPULLUP_ZMIN
   #endif
-  #define WRITE_FAN_N(n, v) WRITE_FAN##n(v)
+#endif
 
-  /**
-   * Part Cooling fan multipliexer
-   */
-  #define HAS_FANMUX PIN_EXISTS(FANMUX0)
+/**
+ * Shorthand for pin tests, used wherever needed
+ */
 
-  /**
-   * Servos and probes
-   */
+// Steppers
+#define HAS_X_ENABLE      (PIN_EXISTS(X_ENABLE))
+#define HAS_X_DIR         (PIN_EXISTS(X_DIR))
+#define HAS_X_STEP        (PIN_EXISTS(X_STEP))
+#define HAS_X_MICROSTEPS  (PIN_EXISTS(X_MS1))
+
+#define HAS_X2_ENABLE     (PIN_EXISTS(X2_ENABLE))
+#define HAS_X2_DIR        (PIN_EXISTS(X2_DIR))
+#define HAS_X2_STEP       (PIN_EXISTS(X2_STEP))
+#define HAS_Y_MICROSTEPS  (PIN_EXISTS(Y_MS1))
+
+#define HAS_Y_ENABLE      (PIN_EXISTS(Y_ENABLE))
+#define HAS_Y_DIR         (PIN_EXISTS(Y_DIR))
+#define HAS_Y_STEP        (PIN_EXISTS(Y_STEP))
+#define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
+
+#define HAS_Y2_ENABLE     (PIN_EXISTS(Y2_ENABLE))
+#define HAS_Y2_DIR        (PIN_EXISTS(Y2_DIR))
+#define HAS_Y2_STEP       (PIN_EXISTS(Y2_STEP))
+
+#define HAS_Z_ENABLE      (PIN_EXISTS(Z_ENABLE))
+#define HAS_Z_DIR         (PIN_EXISTS(Z_DIR))
+#define HAS_Z_STEP        (PIN_EXISTS(Z_STEP))
+
+#define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE))
+#define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
+#define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
+
+// Extruder steppers and solenoids
+#define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE))
+#define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
+#define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
+#define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
+#define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
+
+#define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE))
+#define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))
+#define HAS_E1_STEP       (PIN_EXISTS(E1_STEP))
+#define HAS_E1_MICROSTEPS (PIN_EXISTS(E1_MS1))
+#define HAS_SOLENOID_1    (PIN_EXISTS(SOL1))
+
+#define HAS_E2_ENABLE     (PIN_EXISTS(E2_ENABLE))
+#define HAS_E2_DIR        (PIN_EXISTS(E2_DIR))
+#define HAS_E2_STEP       (PIN_EXISTS(E2_STEP))
+#define HAS_E2_MICROSTEPS (PIN_EXISTS(E2_MS1))
+#define HAS_SOLENOID_2    (PIN_EXISTS(SOL2))
+
+#define HAS_E3_ENABLE     (PIN_EXISTS(E3_ENABLE))
+#define HAS_E3_DIR        (PIN_EXISTS(E3_DIR))
+#define HAS_E3_STEP       (PIN_EXISTS(E3_STEP))
+#define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
+#define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
+
+#define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
+#define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
+#define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
+#define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
+#define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
+
+// Endstops and bed probe
+#define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_Z2_OR_PROBE(X,MIN))
+#define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_Z2_OR_PROBE(X,MAX))
+#define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_Z2_OR_PROBE(Y,MIN))
+#define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_Z2_OR_PROBE(Y,MAX))
+#define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_Z2_OR_PROBE(Z,MIN))
+#define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_Z2_OR_PROBE(Z,MAX))
+#define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
+#define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
+#define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
+
+// Thermistors
+#define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
+#define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
+#define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
+#define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
+#define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)
+#define HAS_TEMP_HOTEND (HAS_TEMP_0 || ENABLED(HEATER_0_USES_MAX6675))
+#define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && TEMP_SENSOR_BED > -2)
+
+// Heaters
+#define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
+#define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
+#define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
+#define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
+#define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
+#define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
+
+// Thermal protection
+#define HAS_THERMALLY_PROTECTED_BED (ENABLED(THERMAL_PROTECTION_BED) && HAS_TEMP_BED && HAS_HEATER_BED)
+#define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
+#define WATCH_THE_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
+
+// Auto fans
+#define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
+#define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
+#define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
+#define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
+#define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
+#define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3)
+#define AUTO_1_IS_0 (E1_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+#define AUTO_2_IS_0 (E2_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+#define AUTO_2_IS_1 (E2_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+#define AUTO_3_IS_0 (E3_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+#define AUTO_3_IS_1 (E3_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+#define AUTO_3_IS_2 (E3_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
+#define AUTO_4_IS_0 (E4_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+#define AUTO_4_IS_1 (E4_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+#define AUTO_4_IS_2 (E4_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
+#define AUTO_4_IS_3 (E4_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
+
+// Other fans
+#define HAS_FAN0 (PIN_EXISTS(FAN))
+#define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN)
+#define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN)
+#define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
+
+// Servos
+#define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
+#define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
+#define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
+#define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
+#define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
+
+// Sensors
+#define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
+#define HAS_FIL_RUNOUT (PIN_EXISTS(FIL_RUNOUT))
+
+// User Interface
+#define HAS_HOME (PIN_EXISTS(HOME))
+#define HAS_KILL (PIN_EXISTS(KILL))
+#define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
+#define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
+#define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
+#define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
+
+// Digital control
+#define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS)
+#define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
+#define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
+#define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
 
-  #if HAS_SERVOS
-    #ifndef Z_ENDSTOP_SERVO_NR
-      #define Z_ENDSTOP_SERVO_NR -1
-    #endif
-  #endif
+/**
+ * This setting is also used by M109 when trying to calculate
+ * a ballpark safe margin to prevent wait-forever situation.
+ */
+#ifndef EXTRUDE_MINTEMP
+  #define EXTRUDE_MINTEMP 170
+#endif
 
-  #define PROBE_PIN_CONFIGURED (HAS_Z_MIN_PROBE_PIN || (HAS_Z_MIN && ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN)))
-  #define HAS_BED_PROBE (PROBE_SELECTED && PROBE_PIN_CONFIGURED && DISABLED(PROBE_MANUALLY))
+/**
+ * Helper Macros for heaters and extruder fan
+ */
+#define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, v)
+#if HOTENDS > 1 || ENABLED(HEATERS_PARALLEL)
+  #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, v)
+  #if HOTENDS > 2
+    #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, v)
+    #if HOTENDS > 3
+      #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, v)
+      #if HOTENDS > 4
+        #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, v)
+      #endif // HOTENDS > 4
+    #endif // HOTENDS > 3
+  #endif // HOTENDS > 2
+#endif // HOTENDS > 1
+#if ENABLED(HEATERS_PARALLEL)
+  #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
+#else
+  #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
+#endif
 
-  #if ENABLED(Z_PROBE_ALLEN_KEY)
-    #define PROBE_IS_TRIGGERED_WHEN_STOWED_TEST
+/**
+ * Heated bed requires settings
+ */
+#if HAS_HEATER_BED
+  #ifndef MAX_BED_POWER
+    #define MAX_BED_POWER 255
   #endif
-
-  /**
-   * Bed Probe dependencies
-   */
-  #if HAS_BED_PROBE
-    #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN
-      #define ENDSTOPPULLUP_ZMIN_PROBE
-    #endif
-    #ifndef Z_PROBE_OFFSET_RANGE_MIN
-      #define Z_PROBE_OFFSET_RANGE_MIN -20
-    #endif
-    #ifndef Z_PROBE_OFFSET_RANGE_MAX
-      #define Z_PROBE_OFFSET_RANGE_MAX 20
-    #endif
-    #ifndef XY_PROBE_SPEED
-      #ifdef HOMING_FEEDRATE_XY
-        #define XY_PROBE_SPEED HOMING_FEEDRATE_XY
-      #else
-        #define XY_PROBE_SPEED 4000
-      #endif
-    #endif
-    #if Z_CLEARANCE_BETWEEN_PROBES > Z_CLEARANCE_DEPLOY_PROBE
-      #define _Z_CLEARANCE_DEPLOY_PROBE Z_CLEARANCE_BETWEEN_PROBES
-    #else
-      #define _Z_CLEARANCE_DEPLOY_PROBE Z_CLEARANCE_DEPLOY_PROBE
-    #endif
-  #else
-    #undef X_PROBE_OFFSET_FROM_EXTRUDER
-    #undef Y_PROBE_OFFSET_FROM_EXTRUDER
-    #undef Z_PROBE_OFFSET_FROM_EXTRUDER
-    #define X_PROBE_OFFSET_FROM_EXTRUDER 0
-    #define Y_PROBE_OFFSET_FROM_EXTRUDER 0
-    #define Z_PROBE_OFFSET_FROM_EXTRUDER 0
+  #ifndef HEATER_BED_INVERTING
+    #define HEATER_BED_INVERTING false
   #endif
+  #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ HEATER_BED_INVERTING)
+#endif
 
-  /**
-   * Heater & Fan Pausing
-   */
-  #if FAN_COUNT == 0
-    #undef PROBING_FANS_OFF
-  #endif
-  #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
-  #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
+/**
+ * Up to 3 PWM fans
+ */
+#if HAS_FAN2
+  #define FAN_COUNT 3
+#elif HAS_FAN1
+  #define FAN_COUNT 2
+#elif HAS_FAN0
+  #define FAN_COUNT 1
+#else
+  #define FAN_COUNT 0
+#endif
+
+#if HAS_FAN0
+  #define WRITE_FAN(v) WRITE(FAN_PIN, v)
+  #define WRITE_FAN0(v) WRITE_FAN(v)
+#endif
+#if HAS_FAN1
+  #define WRITE_FAN1(v) WRITE(FAN1_PIN, v)
+#endif
+#if HAS_FAN2
+  #define WRITE_FAN2(v) WRITE(FAN2_PIN, v)
+#endif
+#define WRITE_FAN_N(n, v) WRITE_FAN##n(v)
 
-  /**
-   * Only constrain Z on DELTA / SCARA machines
-   */
-  #if IS_KINEMATIC
-    #undef MIN_SOFTWARE_ENDSTOP_X
-    #undef MIN_SOFTWARE_ENDSTOP_Y
-    #undef MAX_SOFTWARE_ENDSTOP_X
-    #undef MAX_SOFTWARE_ENDSTOP_Y
-  #endif
+/**
+ * Part Cooling fan multipliexer
+ */
+#define HAS_FANMUX PIN_EXISTS(FANMUX0)
 
-  /**
-   * Delta endstops, radius/rod trimmers, angle trimmers
-   */
-  #if ENABLED(DELTA)
-    #ifndef DELTA_CALIBRATION_RADIUS
-      #define DELTA_CALIBRATION_RADIUS DELTA_PRINTABLE_RADIUS - 10
-    #endif
-    #ifndef DELTA_ENDSTOP_ADJ
-      #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
-    #endif
-    #ifndef DELTA_TOWER_ANGLE_TRIM
-      #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
-    #endif
-    #ifndef DELTA_RADIUS_TRIM_TOWER
-      #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
-    #endif
-    #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
-      #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
-    #endif
+/**
+ * Servos and probes
+ */
+
+#if HAS_SERVOS
+  #ifndef Z_ENDSTOP_SERVO_NR
+    #define Z_ENDSTOP_SERVO_NR -1
   #endif
+#endif
 
-  /**
-   * Set granular options based on the specific type of leveling
-   */
+#define PROBE_PIN_CONFIGURED (HAS_Z_MIN_PROBE_PIN || (HAS_Z_MIN && ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN)))
+#define HAS_BED_PROBE (PROBE_SELECTED && PROBE_PIN_CONFIGURED && DISABLED(PROBE_MANUALLY))
 
-  #define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(UBL_GRANULAR_SEGMENTATION_FOR_CARTESIAN)))
-  #define ABL_PLANAR (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
-  #define ABL_GRID   (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
-  #define OLDSCHOOL_ABL         (ABL_PLANAR || ABL_GRID)
-  #define HAS_ABL               (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
-  #define HAS_LEVELING          (HAS_ABL || ENABLED(MESH_BED_LEVELING))
-  #define HAS_AUTOLEVEL         (HAS_ABL && DISABLED(PROBE_MANUALLY))
-  #define HAS_MESH              (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
-  #define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
-  #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
-  #if HAS_PROBING_PROCEDURE
-    #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
-    #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
-  #endif
+#if ENABLED(Z_PROBE_ALLEN_KEY)
+  #define PROBE_IS_TRIGGERED_WHEN_STOWED_TEST
+#endif
 
-  /**
-   * Buzzer/Speaker
-   */
-  #if ENABLED(LCD_USE_I2C_BUZZER)
-    #ifndef LCD_FEEDBACK_FREQUENCY_HZ
-      #define LCD_FEEDBACK_FREQUENCY_HZ 1000
-    #endif
-    #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
-      #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
-    #endif
-  #else
-    #ifndef LCD_FEEDBACK_FREQUENCY_HZ
-      #define LCD_FEEDBACK_FREQUENCY_HZ 5000
-    #endif
-    #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
-      #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
-    #endif
+/**
+ * Bed Probe dependencies
+ */
+#if HAS_BED_PROBE
+  #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN
+    #define ENDSTOPPULLUP_ZMIN_PROBE
   #endif
-
-  /**
-   * VIKI2, miniVIKI, and AZSMZ_12864 require DOGLCD_SCK and DOGLCD_MOSI to be defined.
-   */
-  #if ENABLED(VIKI2) || ENABLED(miniVIKI) || ENABLED(AZSMZ_12864)
-    #ifndef DOGLCD_SCK
-      #define DOGLCD_SCK  SCK_PIN
-    #endif
-    #ifndef DOGLCD_MOSI
-      #define DOGLCD_MOSI MOSI_PIN
-    #endif
+  #ifndef Z_PROBE_OFFSET_RANGE_MIN
+    #define Z_PROBE_OFFSET_RANGE_MIN -20
   #endif
-
-  /**
-   * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
-   */
-  #ifndef Z_HOMING_HEIGHT
-    #ifndef Z_CLEARANCE_BETWEEN_PROBES
-      #define Z_HOMING_HEIGHT 0
+  #ifndef Z_PROBE_OFFSET_RANGE_MAX
+    #define Z_PROBE_OFFSET_RANGE_MAX 20
+  #endif
+  #ifndef XY_PROBE_SPEED
+    #ifdef HOMING_FEEDRATE_XY
+      #define XY_PROBE_SPEED HOMING_FEEDRATE_XY
     #else
-      #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+      #define XY_PROBE_SPEED 4000
     #endif
   #endif
-  #ifndef Z_CLEARANCE_BETWEEN_PROBES
-    #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
-  #endif
-  #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
-    #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+  #if Z_CLEARANCE_BETWEEN_PROBES > Z_CLEARANCE_DEPLOY_PROBE
+    #define _Z_CLEARANCE_DEPLOY_PROBE Z_CLEARANCE_BETWEEN_PROBES
   #else
-    #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
+    #define _Z_CLEARANCE_DEPLOY_PROBE Z_CLEARANCE_DEPLOY_PROBE
   #endif
+#else
+  #undef X_PROBE_OFFSET_FROM_EXTRUDER
+  #undef Y_PROBE_OFFSET_FROM_EXTRUDER
+  #undef Z_PROBE_OFFSET_FROM_EXTRUDER
+  #define X_PROBE_OFFSET_FROM_EXTRUDER 0
+  #define Y_PROBE_OFFSET_FROM_EXTRUDER 0
+  #define Z_PROBE_OFFSET_FROM_EXTRUDER 0
+#endif
 
-  /**
-   * Bed Probing rectangular bounds
-   * These can be further constrained in code for Delta and SCARA
-   */
-  #if ENABLED(DELTA)
-    #ifndef DELTA_PROBEABLE_RADIUS
-      #define DELTA_PROBEABLE_RADIUS DELTA_PRINTABLE_RADIUS
-    #endif
-    // Probing points may be verified at compile time within the radius
-    // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
-    // so that may be added to SanityCheck.h in the future.
-    #define MIN_PROBE_X (X_CENTER - (DELTA_PROBEABLE_RADIUS))
-    #define MIN_PROBE_Y (Y_CENTER - (DELTA_PROBEABLE_RADIUS))
-    #define MAX_PROBE_X (X_CENTER +  DELTA_PROBEABLE_RADIUS)
-    #define MAX_PROBE_Y (Y_CENTER +  DELTA_PROBEABLE_RADIUS)
-  #elif IS_SCARA
-    #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
-    #define MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
-    #define MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
-    #define MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
-    #define MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
-  #else
-    // Boundaries for Cartesian probing based on bed limits
-    #define MIN_PROBE_X (max(X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_MIN_BED))
-    #define MIN_PROBE_Y (max(Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_MIN_BED))
-    #define MAX_PROBE_X (min(X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_MAX_BED))
-    #define MAX_PROBE_Y (min(Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_MAX_BED))
-  #endif
+/**
+ * Heater & Fan Pausing
+ */
+#if FAN_COUNT == 0
+  #undef PROBING_FANS_OFF
+#endif
+#define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
+#define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
 
-  // Stepper pulse duration, in cycles
-  #define STEP_PULSE_CYCLES ((MINIMUM_STEPPER_PULSE) * CYCLES_PER_MICROSECOND)
-  #ifdef CPU_32_BIT
-    // Add additional delay for between direction signal and pulse signal of stepper
-    #ifndef STEPPER_DIRECTION_DELAY
-      #define STEPPER_DIRECTION_DELAY 0 // time in microseconds
-    #endif
-  #endif
+/**
+ * Only constrain Z on DELTA / SCARA machines
+ */
+#if IS_KINEMATIC
+  #undef MIN_SOFTWARE_ENDSTOP_X
+  #undef MIN_SOFTWARE_ENDSTOP_Y
+  #undef MAX_SOFTWARE_ENDSTOP_X
+  #undef MAX_SOFTWARE_ENDSTOP_Y
+#endif
 
-  #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
-    #undef UI_VOLTAGE_LEVEL
-    #undef RADDS_DISPLAY
-    #undef MOTOR_CURRENT
+/**
+ * Delta endstops, radius/rod trimmers, angle trimmers
+ */
+#if ENABLED(DELTA)
+  #ifndef DELTA_CALIBRATION_RADIUS
+    #define DELTA_CALIBRATION_RADIUS DELTA_PRINTABLE_RADIUS - 10
   #endif
-
-  #if ENABLED(SDCARD_SORT_ALPHA)
-    #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
+  #ifndef DELTA_ENDSTOP_ADJ
+    #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
   #endif
-
-  // Updated G92 behavior shifts the workspace
-  #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
-  // The home offset also shifts the coordinate space
-  #define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) || ENABLED(DELTA))
-  // Either offset yields extra calculations on all moves
-  #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT || HAS_HOME_OFFSET)
-  // M206 doesn't apply to DELTA
-  #define HAS_M206_COMMAND (HAS_HOME_OFFSET && DISABLED(DELTA))
-
-  // LCD timeout to status screen default is 15s
-  #ifndef LCD_TIMEOUT_TO_STATUS
-    #define LCD_TIMEOUT_TO_STATUS 15000
+  #ifndef DELTA_TOWER_ANGLE_TRIM
+    #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
   #endif
-
-  /**
-   * DELTA_SEGMENT_MIN_LENGTH for UBL_DELTA
-   */
-  #if UBL_DELTA
-    #ifndef DELTA_SEGMENT_MIN_LENGTH
-      #if IS_SCARA
-        #define DELTA_SEGMENT_MIN_LENGTH 0.25 // SCARA minimum segment size is 0.25mm
-      #elif ENABLED(DELTA)
-        #define DELTA_SEGMENT_MIN_LENGTH 0.10 // mm (still subject to DELTA_SEGMENTS_PER_SECOND)
-      #else // CARTESIAN
-        #define DELTA_SEGMENT_MIN_LENGTH 1.00 // mm (similar to G2/G3 arc segmentation)
-      #endif
-    #endif
+  #ifndef DELTA_RADIUS_TRIM_TOWER
+    #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
+  #endif
+  #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
+    #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
   #endif
+#endif
 
-  // Shorthand
-  #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
+/**
+ * Set granular options based on the specific type of leveling
+ */
 
-  // Add commands that need sub-codes to this list
-  #define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET)
+#define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(UBL_GRANULAR_SEGMENTATION_FOR_CARTESIAN)))
+#define ABL_PLANAR (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
+#define ABL_GRID   (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
+#define OLDSCHOOL_ABL         (ABL_PLANAR || ABL_GRID)
+#define HAS_ABL               (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
+#define HAS_LEVELING          (HAS_ABL || ENABLED(MESH_BED_LEVELING))
+#define HAS_AUTOLEVEL         (HAS_ABL && DISABLED(PROBE_MANUALLY))
+#define HAS_MESH              (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
+#define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
+#define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
+#if HAS_PROBING_PROCEDURE
+  #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
+  #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
+#endif
 
-  // MESH_BED_LEVELING overrides PROBE_MANUALLY
-  #if ENABLED(MESH_BED_LEVELING)
-    #undef PROBE_MANUALLY
+/**
+ * Buzzer/Speaker
+ */
+#if ENABLED(LCD_USE_I2C_BUZZER)
+  #ifndef LCD_FEEDBACK_FREQUENCY_HZ
+    #define LCD_FEEDBACK_FREQUENCY_HZ 1000
   #endif
-
-  // Parking Extruder
-  #if ENABLED(PARKING_EXTRUDER)
-    #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
-      #define PARKING_EXTRUDER_GRAB_DISTANCE 0
-    #endif
-    #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
-      #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
-    #endif
+  #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
+    #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
+  #endif
+#else
+  #ifndef LCD_FEEDBACK_FREQUENCY_HZ
+    #define LCD_FEEDBACK_FREQUENCY_HZ 5000
+  #endif
+  #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
+    #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
   #endif
+#endif
 
-  // Use float instead of double. Needs profiling.
-  #if defined(ARDUINO_ARCH_SAM) && ENABLED(DELTA_FAST_SQRT)
-    #undef ATAN2
-    #undef FABS
-    #undef POW
-    #undef SQRT
-    #undef CEIL
-    #undef FLOOR
-    #undef LROUND
-    #undef FMOD
-    #define ATAN2(y, x) atan2f(y, x)
-    #define FABS(x) fabsf(x)
-    #define POW(x, y) powf(x, y)
-    #define SQRT(x) sqrtf(x)
-    #define CEIL(x) ceilf(x)
-    #define FLOOR(x) floorf(x)
-    #define LROUND(x) lroundf(x)
-    #define FMOD(x, y) fmodf(x, y)
+/**
+ * VIKI2, miniVIKI, and AZSMZ_12864 require DOGLCD_SCK and DOGLCD_MOSI to be defined.
+ */
+#if ENABLED(VIKI2) || ENABLED(miniVIKI) || ENABLED(AZSMZ_12864)
+  #ifndef DOGLCD_SCK
+    #define DOGLCD_SCK  SCK_PIN
+  #endif
+  #ifndef DOGLCD_MOSI
+    #define DOGLCD_MOSI MOSI_PIN
   #endif
+#endif
 
-  #ifdef TEENSYDUINO
-    #undef max
-    #define max(a,b) ((a)>(b)?(a):(b))
-    #undef min
-    #define min(a,b) ((a)<(b)?(a):(b))
+/**
+ * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
+ */
+#ifndef Z_HOMING_HEIGHT
+  #ifndef Z_CLEARANCE_BETWEEN_PROBES
+    #define Z_HOMING_HEIGHT 0
+  #else
+    #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+  #endif
+#endif
+#ifndef Z_CLEARANCE_BETWEEN_PROBES
+  #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
+#endif
+#if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
+  #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+#else
+  #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
+#endif
+
+/**
+ * Bed Probing rectangular bounds
+ * These can be further constrained in code for Delta and SCARA
+ */
+#if ENABLED(DELTA)
+  #ifndef DELTA_PROBEABLE_RADIUS
+    #define DELTA_PROBEABLE_RADIUS DELTA_PRINTABLE_RADIUS
+  #endif
+  // Probing points may be verified at compile time within the radius
+  // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
+  // so that may be added to SanityCheck.h in the future.
+  #define MIN_PROBE_X (X_CENTER - (DELTA_PROBEABLE_RADIUS))
+  #define MIN_PROBE_Y (Y_CENTER - (DELTA_PROBEABLE_RADIUS))
+  #define MAX_PROBE_X (X_CENTER +  DELTA_PROBEABLE_RADIUS)
+  #define MAX_PROBE_Y (Y_CENTER +  DELTA_PROBEABLE_RADIUS)
+#elif IS_SCARA
+  #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
+  #define MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
+  #define MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
+  #define MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
+  #define MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
+#else
+  // Boundaries for Cartesian probing based on bed limits
+  #define MIN_PROBE_X (max(X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_MIN_BED))
+  #define MIN_PROBE_Y (max(Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_MIN_BED))
+  #define MAX_PROBE_X (min(X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_MAX_BED))
+  #define MAX_PROBE_Y (min(Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_MAX_BED))
+#endif
+
+// Stepper pulse duration, in cycles
+#define STEP_PULSE_CYCLES ((MINIMUM_STEPPER_PULSE) * CYCLES_PER_MICROSECOND)
+#ifdef CPU_32_BIT
+  // Add additional delay for between direction signal and pulse signal of stepper
+  #ifndef STEPPER_DIRECTION_DELAY
+    #define STEPPER_DIRECTION_DELAY 0 // time in microseconds
+  #endif
+#endif
+
+#ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
+  #undef UI_VOLTAGE_LEVEL
+  #undef RADDS_DISPLAY
+  #undef MOTOR_CURRENT
+#endif
+
+#if ENABLED(SDCARD_SORT_ALPHA)
+  #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
+#endif
+
+// Updated G92 behavior shifts the workspace
+#define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
+// The home offset also shifts the coordinate space
+#define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) || ENABLED(DELTA))
+// Either offset yields extra calculations on all moves
+#define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT || HAS_HOME_OFFSET)
+// M206 doesn't apply to DELTA
+#define HAS_M206_COMMAND (HAS_HOME_OFFSET && DISABLED(DELTA))
+
+// LCD timeout to status screen default is 15s
+#ifndef LCD_TIMEOUT_TO_STATUS
+  #define LCD_TIMEOUT_TO_STATUS 15000
+#endif
 
-    #define NOT_A_PIN 0 // For PINS_DEBUGGING
+/**
+ * DELTA_SEGMENT_MIN_LENGTH for UBL_DELTA
+ */
+#if UBL_DELTA
+  #ifndef DELTA_SEGMENT_MIN_LENGTH
+    #if IS_SCARA
+      #define DELTA_SEGMENT_MIN_LENGTH 0.25 // SCARA minimum segment size is 0.25mm
+    #elif ENABLED(DELTA)
+      #define DELTA_SEGMENT_MIN_LENGTH 0.10 // mm (still subject to DELTA_SEGMENTS_PER_SECOND)
+    #else // CARTESIAN
+      #define DELTA_SEGMENT_MIN_LENGTH 1.00 // mm (similar to G2/G3 arc segmentation)
+    #endif
   #endif
+#endif
+
+// Shorthand
+#define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
+
+// Add commands that need sub-codes to this list
+#define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET)
+
+// MESH_BED_LEVELING overrides PROBE_MANUALLY
+#if ENABLED(MESH_BED_LEVELING)
+  #undef PROBE_MANUALLY
+#endif
+
+// Parking Extruder
+#if ENABLED(PARKING_EXTRUDER)
+  #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
+    #define PARKING_EXTRUDER_GRAB_DISTANCE 0
+  #endif
+  #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
+    #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
+  #endif
+#endif
+
+// Use float instead of double. Needs profiling.
+#if defined(ARDUINO_ARCH_SAM) && ENABLED(DELTA_FAST_SQRT)
+  #undef ATAN2
+  #undef FABS
+  #undef POW
+  #undef SQRT
+  #undef CEIL
+  #undef FLOOR
+  #undef LROUND
+  #undef FMOD
+  #define ATAN2(y, x) atan2f(y, x)
+  #define FABS(x) fabsf(x)
+  #define POW(x, y) powf(x, y)
+  #define SQRT(x) sqrtf(x)
+  #define CEIL(x) ceilf(x)
+  #define FLOOR(x) floorf(x)
+  #define LROUND(x) lroundf(x)
+  #define FMOD(x, y) fmodf(x, y)
+#endif
+
+#ifdef TEENSYDUINO
+  #undef max
+  #define max(a,b) ((a)>(b)?(a):(b))
+  #undef min
+  #define min(a,b) ((a)<(b)?(a):(b))
+
+  #define NOT_A_PIN 0 // For PINS_DEBUGGING
+#endif
+
 #endif // CONDITIONALS_POST_H

commit 348e5e3109e11613c42adb483ad1313074dadac3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Oct 18 17:14:32 2017 -0500

    Simplify Cartesian probing boundaries
    
    Followup to #8012

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index a5d7c575ac..b9f5e7db15 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -914,32 +914,25 @@
     #define MIN_PROBE_Y (Y_CENTER - (DELTA_PROBEABLE_RADIUS))
     #define MAX_PROBE_X (X_CENTER +  DELTA_PROBEABLE_RADIUS)
     #define MAX_PROBE_Y (Y_CENTER +  DELTA_PROBEABLE_RADIUS)
   #elif IS_SCARA
     #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
     #define MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
     #define MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
     #define MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
     #define MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
   #else
-    // Boundaries for Cartesian probing based on set limits
-    #if ENABLED(BED_CENTER_AT_0_0)
-      #define MIN_PROBE_X (max(X_PROBE_OFFSET_FROM_EXTRUDER, 0) - (X_BED_SIZE) / 2)
-      #define MIN_PROBE_Y (max(Y_PROBE_OFFSET_FROM_EXTRUDER, 0) - (Y_BED_SIZE) / 2)
-      #define MAX_PROBE_X (min(X_BED_SIZE + X_PROBE_OFFSET_FROM_EXTRUDER, X_BED_SIZE) - (X_BED_SIZE) / 2)
-      #define MAX_PROBE_Y (min(Y_BED_SIZE + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_BED_SIZE) - (Y_BED_SIZE) / 2)
-    #else
-      #define MIN_PROBE_X (max(X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER, 0))
-      #define MIN_PROBE_Y (max(Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, 0))
-      #define MAX_PROBE_X (min(X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_BED_SIZE))
-      #define MAX_PROBE_Y (min(Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_BED_SIZE))
-    #endif
+    // Boundaries for Cartesian probing based on bed limits
+    #define MIN_PROBE_X (max(X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_MIN_BED))
+    #define MIN_PROBE_Y (max(Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_MIN_BED))
+    #define MAX_PROBE_X (min(X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_MAX_BED))
+    #define MAX_PROBE_Y (min(Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_MAX_BED))
   #endif
 
   // Stepper pulse duration, in cycles
   #define STEP_PULSE_CYCLES ((MINIMUM_STEPPER_PULSE) * CYCLES_PER_MICROSECOND)
   #ifdef CPU_32_BIT
     // Add additional delay for between direction signal and pulse signal of stepper
     #ifndef STEPPER_DIRECTION_DELAY
       #define STEPPER_DIRECTION_DELAY 0 // time in microseconds
     #endif
   #endif

commit eeb4611606625a7330b2d2adbf0fc51ae70af2a9
Author: Jeffrey Li <Jeffreyli@jeffyl.com>
Date:   Mon Oct 16 00:33:07 2017 -0700

    Add proper support for the AZSMZ 12864 LCD on a SMART RAMPS

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index ae4ddb7a65..a5d7c575ac 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -862,23 +862,23 @@
   #else
     #ifndef LCD_FEEDBACK_FREQUENCY_HZ
       #define LCD_FEEDBACK_FREQUENCY_HZ 5000
     #endif
     #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
       #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
     #endif
   #endif
 
   /**
-   * VIKI2 and miniVIKI require DOGLCD_SCK and DOGLCD_MOSI to be defined.
+   * VIKI2, miniVIKI, and AZSMZ_12864 require DOGLCD_SCK and DOGLCD_MOSI to be defined.
    */
-  #if ENABLED(VIKI2) || ENABLED(miniVIKI)
+  #if ENABLED(VIKI2) || ENABLED(miniVIKI) || ENABLED(AZSMZ_12864)
     #ifndef DOGLCD_SCK
       #define DOGLCD_SCK  SCK_PIN
     #endif
     #ifndef DOGLCD_MOSI
       #define DOGLCD_MOSI MOSI_PIN
     #endif
   #endif
 
   /**
    * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES

commit e587f0893cc160ee5465a172fb689be9872e5f57
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 14 19:05:32 2017 -0500

    Define AVR_ATmega2560_FAMILY_PLUS_70 in Conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 9b3bb59284..ae4ddb7a65 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -21,20 +21,27 @@
  */
 
 /**
  * Conditionals_post.h
  * Defines that depend on configuration but are not editable.
  */
 
 #ifndef CONDITIONALS_POST_H
 #define CONDITIONALS_POST_H
 
+  #define AVR_ATmega2560_FAMILY_PLUS_70 ( \
+       MB(BQ_ZUM_MEGA_3D)                 \
+    || MB(MIGHTYBOARD_REVE)               \
+    || MB(MINIRAMBO)                      \
+    || MB(SCOOVO_X9H)                     \
+  )
+
   #define IS_SCARA (ENABLED(MORGAN_SCARA) || ENABLED(MAKERARM_SCARA))
   #define IS_KINEMATIC (ENABLED(DELTA) || IS_SCARA)
   #define IS_CARTESIAN !IS_KINEMATIC
 
   /**
    * Axis lengths and center
    */
   #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
   #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
   #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))

commit b206f70693c68494b15451518062e19f31a9e019
Author: Jeff Eberl <jeffeb3@gmail.com>
Date:   Sat Oct 14 06:18:09 2017 -0600

    Split the software endstop capability by axis.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 6619a3bb8d..9b3bb59284 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -786,21 +786,31 @@
   /**
    * Heater & Fan Pausing
    */
   #if FAN_COUNT == 0
     #undef PROBING_FANS_OFF
   #endif
   #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
   #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
 
   /**
-   * Delta radius/rod trimmers/angle trimmers
+   * Only constrain Z on DELTA / SCARA machines
+   */
+  #if IS_KINEMATIC
+    #undef MIN_SOFTWARE_ENDSTOP_X
+    #undef MIN_SOFTWARE_ENDSTOP_Y
+    #undef MAX_SOFTWARE_ENDSTOP_X
+    #undef MAX_SOFTWARE_ENDSTOP_Y
+  #endif
+
+  /**
+   * Delta endstops, radius/rod trimmers, angle trimmers
    */
   #if ENABLED(DELTA)
     #ifndef DELTA_CALIBRATION_RADIUS
       #define DELTA_CALIBRATION_RADIUS DELTA_PRINTABLE_RADIUS - 10
     #endif
     #ifndef DELTA_ENDSTOP_ADJ
       #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
     #endif
     #ifndef DELTA_TOWER_ANGLE_TRIM
       #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}

commit 58abc66c1d79a9b3b159f97baaca2052d700b3ad
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 14 02:15:26 2017 -0500

    Tweak bed leveling conditionals

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 32ec40cb9f..6619a3bb8d 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -813,26 +813,26 @@
     #endif
   #endif
 
   /**
    * Set granular options based on the specific type of leveling
    */
 
   #define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(UBL_GRANULAR_SEGMENTATION_FOR_CARTESIAN)))
   #define ABL_PLANAR (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
   #define ABL_GRID   (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
-  #define HAS_ABL    (ABL_PLANAR || ABL_GRID || ENABLED(AUTO_BED_LEVELING_UBL))
-  #define HAS_LEVELING  (HAS_ABL || ENABLED(MESH_BED_LEVELING))
-  #define HAS_AUTOLEVEL (HAS_ABL && DISABLED(PROBE_MANUALLY))
-  #define OLDSCHOOL_ABL (HAS_ABL && DISABLED(AUTO_BED_LEVELING_UBL))
-  #define HAS_MESH   (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
-  #define PLANNER_LEVELING      (ABL_PLANAR || ABL_GRID || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
+  #define OLDSCHOOL_ABL         (ABL_PLANAR || ABL_GRID)
+  #define HAS_ABL               (OLDSCHOOL_ABL || ENABLED(AUTO_BED_LEVELING_UBL))
+  #define HAS_LEVELING          (HAS_ABL || ENABLED(MESH_BED_LEVELING))
+  #define HAS_AUTOLEVEL         (HAS_ABL && DISABLED(PROBE_MANUALLY))
+  #define HAS_MESH              (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
+  #define PLANNER_LEVELING      (OLDSCHOOL_ABL || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
   #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
   #if HAS_PROBING_PROCEDURE
     #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
     #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
   #endif
 
   /**
    * Buzzer/Speaker
    */
   #if ENABLED(LCD_USE_I2C_BUZZER)

commit b30b55307cac5be84b854ec3e62a84b4f2f8163e
Merge: 1d04197f2f 03f4891fb9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Oct 10 00:31:18 2017 -0500

    Merge pull request #7909 from thinkyhead/bf2_goodbye_legacy_advance
    
    [2.0.x] Remove legacy ADVANCE feature

diff --combined Marlin/src/inc/Conditionals_post.h
index d2dac428c1,0417a8b657..32ec40cb9f
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@@ -202,21 -202,21 +202,21 @@@
    #ifndef DEFAULT_KEEPALIVE_INTERVAL
      #define DEFAULT_KEEPALIVE_INTERVAL 2
    #endif
  
    #ifdef CPU_32_BIT
      /**
       * Hidden options for developer
       */
      // Double stepping starts at STEP_DOUBLER_FREQUENCY + 1, quad stepping starts at STEP_DOUBLER_FREQUENCY * 2 + 1
      #ifndef STEP_DOUBLER_FREQUENCY
-       #if ENABLED(ADVANCE) || ENABLED(LIN_ADVANCE)
+       #if ENABLED(LIN_ADVANCE)
          #define STEP_DOUBLER_FREQUENCY 60000 // Hz
        #else
          #define STEP_DOUBLER_FREQUENCY 80000 // Hz
        #endif
      #endif
      // Disable double / quad stepping
      //#define DISABLE_MULTI_STEPPING
    #endif
  
    /**
@@@ -253,27 -253,22 +253,22 @@@
        #define MICROSTEP16 LOW,LOW
        #define MICROSTEP32 HIGH,HIGH
      #else
        #define MICROSTEP16 HIGH,HIGH
      #endif
    #else
    #define MICROSTEP16 HIGH,HIGH
    #endif
  
    /**
-    * Advance calculated values
+    * Override here because this is set in Configuration_adv.h
     */
-   #if ENABLED(ADVANCE)
-     #define EXTRUSION_AREA CIRCLE_CIRC(0.5 * D_FILAMENT)
-     #define STEPS_PER_CUBIC_MM_E (axis_steps_per_mm[E_AXIS_N] / (EXTRUSION_AREA))
-   #endif
- 
    #if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
      #undef SD_DETECT_INVERTED
    #endif
  
    /**
     * Set defaults for missing (newer) options
     */
    #ifndef DISABLE_INACTIVE_X
      #define DISABLE_INACTIVE_X DISABLE_X
    #endif
@@@ -849,32 -844,20 +844,32 @@@
      #endif
    #else
      #ifndef LCD_FEEDBACK_FREQUENCY_HZ
        #define LCD_FEEDBACK_FREQUENCY_HZ 5000
      #endif
      #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
        #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
      #endif
    #endif
  
 +  /**
 +   * VIKI2 and miniVIKI require DOGLCD_SCK and DOGLCD_MOSI to be defined.
 +   */
 +  #if ENABLED(VIKI2) || ENABLED(miniVIKI)
 +    #ifndef DOGLCD_SCK
 +      #define DOGLCD_SCK  SCK_PIN
 +    #endif
 +    #ifndef DOGLCD_MOSI
 +      #define DOGLCD_MOSI MOSI_PIN
 +    #endif
 +  #endif
 +
    /**
     * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
     */
    #ifndef Z_HOMING_HEIGHT
      #ifndef Z_CLEARANCE_BETWEEN_PROBES
        #define Z_HOMING_HEIGHT 0
      #else
        #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
      #endif
    #endif

commit 560d366b8025c33734cdbc2f79549776aa27427e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 9 16:13:49 2017 -0500

    Move VIKI SCK/MOSI pins fix to Conditionals_POST.h

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c86a665b09..d2dac428c1 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -849,20 +849,32 @@
     #endif
   #else
     #ifndef LCD_FEEDBACK_FREQUENCY_HZ
       #define LCD_FEEDBACK_FREQUENCY_HZ 5000
     #endif
     #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
       #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
     #endif
   #endif
 
+  /**
+   * VIKI2 and miniVIKI require DOGLCD_SCK and DOGLCD_MOSI to be defined.
+   */
+  #if ENABLED(VIKI2) || ENABLED(miniVIKI)
+    #ifndef DOGLCD_SCK
+      #define DOGLCD_SCK  SCK_PIN
+    #endif
+    #ifndef DOGLCD_MOSI
+      #define DOGLCD_MOSI MOSI_PIN
+    #endif
+  #endif
+
   /**
    * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
    */
   #ifndef Z_HOMING_HEIGHT
     #ifndef Z_CLEARANCE_BETWEEN_PROBES
       #define Z_HOMING_HEIGHT 0
     #else
       #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
     #endif
   #endif

commit 03f4891fb98c032509643b6fbc8b6d24df6630b6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 9 04:25:18 2017 -0500

    Remove legacy ADVANCE feature

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c86a665b09..0417a8b657 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -202,21 +202,21 @@
   #ifndef DEFAULT_KEEPALIVE_INTERVAL
     #define DEFAULT_KEEPALIVE_INTERVAL 2
   #endif
 
   #ifdef CPU_32_BIT
     /**
      * Hidden options for developer
      */
     // Double stepping starts at STEP_DOUBLER_FREQUENCY + 1, quad stepping starts at STEP_DOUBLER_FREQUENCY * 2 + 1
     #ifndef STEP_DOUBLER_FREQUENCY
-      #if ENABLED(ADVANCE) || ENABLED(LIN_ADVANCE)
+      #if ENABLED(LIN_ADVANCE)
         #define STEP_DOUBLER_FREQUENCY 60000 // Hz
       #else
         #define STEP_DOUBLER_FREQUENCY 80000 // Hz
       #endif
     #endif
     // Disable double / quad stepping
     //#define DISABLE_MULTI_STEPPING
   #endif
 
   /**
@@ -253,27 +253,22 @@
       #define MICROSTEP16 LOW,LOW
       #define MICROSTEP32 HIGH,HIGH
     #else
       #define MICROSTEP16 HIGH,HIGH
     #endif
   #else
   #define MICROSTEP16 HIGH,HIGH
   #endif
 
   /**
-   * Advance calculated values
+   * Override here because this is set in Configuration_adv.h
    */
-  #if ENABLED(ADVANCE)
-    #define EXTRUSION_AREA CIRCLE_CIRC(0.5 * D_FILAMENT)
-    #define STEPS_PER_CUBIC_MM_E (axis_steps_per_mm[E_AXIS_N] / (EXTRUSION_AREA))
-  #endif
-
   #if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
     #undef SD_DETECT_INVERTED
   #endif
 
   /**
    * Set defaults for missing (newer) options
    */
   #ifndef DISABLE_INACTIVE_X
     #define DISABLE_INACTIVE_X DISABLE_X
   #endif

commit 8315a8a716d4e9146a5e60231500fa66ca23cbb3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 7 13:34:25 2017 -0500

    Apply fixes for DUE
    
    Alternative to #7882. If F_CPU is greater than 1000 it can be evenly divided by 8. Over 10000, 16; over 100000, 32; over 1 million, 64; etc.

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index 15a3e1e548..c86a665b09 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -200,21 +200,21 @@
    * Host keep alive
    */
   #ifndef DEFAULT_KEEPALIVE_INTERVAL
     #define DEFAULT_KEEPALIVE_INTERVAL 2
   #endif
 
   #ifdef CPU_32_BIT
     /**
      * Hidden options for developer
      */
-    // Double stepping start from STEP_DOUBLER_FREQUENCY + 1, quad stepping start from STEP_DOUBLER_FREQUENCY * 2 + 1
+    // Double stepping starts at STEP_DOUBLER_FREQUENCY + 1, quad stepping starts at STEP_DOUBLER_FREQUENCY * 2 + 1
     #ifndef STEP_DOUBLER_FREQUENCY
       #if ENABLED(ADVANCE) || ENABLED(LIN_ADVANCE)
         #define STEP_DOUBLER_FREQUENCY 60000 // Hz
       #else
         #define STEP_DOUBLER_FREQUENCY 80000 // Hz
       #endif
     #endif
     // Disable double / quad stepping
     //#define DISABLE_MULTI_STEPPING
   #endif

commit 34101224c438eef0bb7c456a80364fa47f08f113
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:32 2017 -0500

    Inc updates

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
index c50480b971..15a3e1e548 100644
--- a/Marlin/src/inc/Conditionals_post.h
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -256,21 +256,21 @@
       #define MICROSTEP16 HIGH,HIGH
     #endif
   #else
   #define MICROSTEP16 HIGH,HIGH
   #endif
 
   /**
    * Advance calculated values
    */
   #if ENABLED(ADVANCE)
-    #define EXTRUSION_AREA (0.25 * (D_FILAMENT) * (D_FILAMENT) * M_PI)
+    #define EXTRUSION_AREA CIRCLE_CIRC(0.5 * D_FILAMENT)
     #define STEPS_PER_CUBIC_MM_E (axis_steps_per_mm[E_AXIS_N] / (EXTRUSION_AREA))
   #endif
 
   #if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
     #undef SD_DETECT_INVERTED
   #endif
 
   /**
    * Set defaults for missing (newer) options
    */
@@ -819,21 +819,24 @@
   #endif
 
   /**
    * Set granular options based on the specific type of leveling
    */
 
   #define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(UBL_GRANULAR_SEGMENTATION_FOR_CARTESIAN)))
   #define ABL_PLANAR (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
   #define ABL_GRID   (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
   #define HAS_ABL    (ABL_PLANAR || ABL_GRID || ENABLED(AUTO_BED_LEVELING_UBL))
-  #define HAS_LEVELING          (HAS_ABL || ENABLED(MESH_BED_LEVELING))
+  #define HAS_LEVELING  (HAS_ABL || ENABLED(MESH_BED_LEVELING))
+  #define HAS_AUTOLEVEL (HAS_ABL && DISABLED(PROBE_MANUALLY))
+  #define OLDSCHOOL_ABL (HAS_ABL && DISABLED(AUTO_BED_LEVELING_UBL))
+  #define HAS_MESH   (ENABLED(AUTO_BED_LEVELING_BILINEAR) || ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(MESH_BED_LEVELING))
   #define PLANNER_LEVELING      (ABL_PLANAR || ABL_GRID || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
   #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
   #if HAS_PROBING_PROCEDURE
     #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
     #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
   #endif
 
   /**
    * Buzzer/Speaker
    */

commit 5be07b5db24069097f6a08f6341c55bb3160062f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:30 2017 -0500

    Move 'inc' files

diff --git a/Marlin/src/inc/Conditionals_post.h b/Marlin/src/inc/Conditionals_post.h
new file mode 100644
index 0000000000..c50480b971
--- /dev/null
+++ b/Marlin/src/inc/Conditionals_post.h
@@ -0,0 +1,1008 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Conditionals_post.h
+ * Defines that depend on configuration but are not editable.
+ */
+
+#ifndef CONDITIONALS_POST_H
+#define CONDITIONALS_POST_H
+
+  #define IS_SCARA (ENABLED(MORGAN_SCARA) || ENABLED(MAKERARM_SCARA))
+  #define IS_KINEMATIC (ENABLED(DELTA) || IS_SCARA)
+  #define IS_CARTESIAN !IS_KINEMATIC
+
+  /**
+   * Axis lengths and center
+   */
+  #define X_MAX_LENGTH (X_MAX_POS - (X_MIN_POS))
+  #define Y_MAX_LENGTH (Y_MAX_POS - (Y_MIN_POS))
+  #define Z_MAX_LENGTH (Z_MAX_POS - (Z_MIN_POS))
+
+  // Defined only if the sanity-check is bypassed
+  #ifndef X_BED_SIZE
+    #define X_BED_SIZE X_MAX_LENGTH
+  #endif
+  #ifndef Y_BED_SIZE
+    #define Y_BED_SIZE Y_MAX_LENGTH
+  #endif
+
+  // Require 0,0 bed center for Delta and SCARA
+  #if IS_KINEMATIC
+    #define BED_CENTER_AT_0_0
+  #endif
+
+  // Define center values for future use
+  #if ENABLED(BED_CENTER_AT_0_0)
+    #define X_CENTER 0
+    #define Y_CENTER 0
+  #else
+    #define X_CENTER ((X_BED_SIZE) / 2)
+    #define Y_CENTER ((Y_BED_SIZE) / 2)
+  #endif
+  #define Z_CENTER ((Z_MIN_POS + Z_MAX_POS) / 2)
+
+  // Get the linear boundaries of the bed
+  #define X_MIN_BED (X_CENTER - (X_BED_SIZE) / 2)
+  #define X_MAX_BED (X_CENTER + (X_BED_SIZE) / 2)
+  #define Y_MIN_BED (Y_CENTER - (Y_BED_SIZE) / 2)
+  #define Y_MAX_BED (Y_CENTER + (Y_BED_SIZE) / 2)
+
+  /**
+   * CoreXY, CoreXZ, and CoreYZ - and their reverse
+   */
+  #define CORE_IS_XY (ENABLED(COREXY) || ENABLED(COREYX))
+  #define CORE_IS_XZ (ENABLED(COREXZ) || ENABLED(COREZX))
+  #define CORE_IS_YZ (ENABLED(COREYZ) || ENABLED(COREZY))
+  #define IS_CORE (CORE_IS_XY || CORE_IS_XZ || CORE_IS_YZ)
+  #if IS_CORE
+    #if CORE_IS_XY
+      #define CORE_AXIS_1 A_AXIS
+      #define CORE_AXIS_2 B_AXIS
+      #define NORMAL_AXIS Z_AXIS
+    #elif CORE_IS_XZ
+      #define CORE_AXIS_1 A_AXIS
+      #define NORMAL_AXIS Y_AXIS
+      #define CORE_AXIS_2 C_AXIS
+    #elif CORE_IS_YZ
+      #define NORMAL_AXIS X_AXIS
+      #define CORE_AXIS_1 B_AXIS
+      #define CORE_AXIS_2 C_AXIS
+    #endif
+    #if (ENABLED(COREYX) || ENABLED(COREZX) || ENABLED(COREZY))
+      #define CORESIGN(n) (-(n))
+    #else
+      #define CORESIGN(n) (n)
+    #endif
+  #endif
+
+  /**
+   * No adjustable bed on non-cartesians
+   */
+  #if IS_KINEMATIC
+    #undef LEVEL_BED_CORNERS
+  #endif
+
+  /**
+   * SCARA cannot use SLOWDOWN and requires QUICKHOME
+   */
+  #if IS_SCARA
+    #undef SLOWDOWN
+    #define QUICK_HOME
+  #endif
+
+  /**
+   * Set the home position based on settings or manual overrides
+   */
+  #ifdef MANUAL_X_HOME_POS
+    #define X_HOME_POS MANUAL_X_HOME_POS
+  #elif ENABLED(BED_CENTER_AT_0_0)
+    #if ENABLED(DELTA)
+      #define X_HOME_POS 0
+    #else
+      #define X_HOME_POS ((X_BED_SIZE) * (X_HOME_DIR) * 0.5)
+    #endif
+  #else
+    #if ENABLED(DELTA)
+      #define X_HOME_POS (X_MIN_POS + (X_BED_SIZE) * 0.5)
+    #else
+      #define X_HOME_POS (X_HOME_DIR < 0 ? X_MIN_POS : X_MAX_POS)
+    #endif
+  #endif
+
+  #ifdef MANUAL_Y_HOME_POS
+    #define Y_HOME_POS MANUAL_Y_HOME_POS
+  #elif ENABLED(BED_CENTER_AT_0_0)
+    #if ENABLED(DELTA)
+      #define Y_HOME_POS 0
+    #else
+      #define Y_HOME_POS ((Y_BED_SIZE) * (Y_HOME_DIR) * 0.5)
+    #endif
+  #else
+    #if ENABLED(DELTA)
+      #define Y_HOME_POS (Y_MIN_POS + (Y_BED_SIZE) * 0.5)
+    #else
+      #define Y_HOME_POS (Y_HOME_DIR < 0 ? Y_MIN_POS : Y_MAX_POS)
+    #endif
+  #endif
+
+  #ifdef MANUAL_Z_HOME_POS
+    #define Z_HOME_POS MANUAL_Z_HOME_POS
+  #else
+    #define Z_HOME_POS (Z_HOME_DIR < 0 ? Z_MIN_POS : Z_MAX_POS)
+  #endif
+
+  /**
+   * If DELTA_HEIGHT isn't defined use the old setting
+   */
+  #if ENABLED(DELTA) && !defined(DELTA_HEIGHT)
+    #define DELTA_HEIGHT Z_HOME_POS
+  #endif
+
+  /**
+   * Auto Bed Leveling and Z Probe Repeatability Test
+   */
+  #define HOMING_Z_WITH_PROBE (HAS_BED_PROBE && Z_HOME_DIR < 0 && ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN))
+
+  /**
+   * Z Sled Probe requires Z_SAFE_HOMING
+   */
+  #if ENABLED(Z_PROBE_SLED)
+    #define Z_SAFE_HOMING
+  #endif
+
+  /**
+   * DELTA should ignore Z_SAFE_HOMING and SLOWDOWN
+   */
+  #if ENABLED(DELTA)
+    #undef Z_SAFE_HOMING
+    #undef SLOWDOWN
+  #endif
+
+  /**
+   * Safe Homing Options
+   */
+  #if ENABLED(Z_SAFE_HOMING)
+    #ifndef Z_SAFE_HOMING_X_POINT
+      #define Z_SAFE_HOMING_X_POINT X_CENTER
+    #endif
+    #ifndef Z_SAFE_HOMING_Y_POINT
+      #define Z_SAFE_HOMING_Y_POINT Y_CENTER
+    #endif
+    #define X_TILT_FULCRUM Z_SAFE_HOMING_X_POINT
+    #define Y_TILT_FULCRUM Z_SAFE_HOMING_Y_POINT
+  #else
+    #define X_TILT_FULCRUM X_HOME_POS
+    #define Y_TILT_FULCRUM Y_HOME_POS
+  #endif
+
+  /**
+   * Host keep alive
+   */
+  #ifndef DEFAULT_KEEPALIVE_INTERVAL
+    #define DEFAULT_KEEPALIVE_INTERVAL 2
+  #endif
+
+  #ifdef CPU_32_BIT
+    /**
+     * Hidden options for developer
+     */
+    // Double stepping start from STEP_DOUBLER_FREQUENCY + 1, quad stepping start from STEP_DOUBLER_FREQUENCY * 2 + 1
+    #ifndef STEP_DOUBLER_FREQUENCY
+      #if ENABLED(ADVANCE) || ENABLED(LIN_ADVANCE)
+        #define STEP_DOUBLER_FREQUENCY 60000 // Hz
+      #else
+        #define STEP_DOUBLER_FREQUENCY 80000 // Hz
+      #endif
+    #endif
+    // Disable double / quad stepping
+    //#define DISABLE_MULTI_STEPPING
+  #endif
+
+  /**
+   * Provide a MAX_AUTORETRACT for older configs
+   */
+  #if ENABLED(FWRETRACT) && !defined(MAX_AUTORETRACT)
+    #define MAX_AUTORETRACT 99
+  #endif
+
+  /**
+   * MAX_STEP_FREQUENCY differs for TOSHIBA
+   */
+  #if ENABLED(CONFIG_STEPPERS_TOSHIBA)
+    #ifdef CPU_32_BIT
+      #define MAX_STEP_FREQUENCY STEP_DOUBLER_FREQUENCY // Max step frequency for Toshiba Stepper Controllers, 96kHz is close to maximum for an Arduino Due
+    #else
+      #define MAX_STEP_FREQUENCY 10000 // Max step frequency for Toshiba Stepper Controllers
+    #endif
+  #else
+    #ifdef CPU_32_BIT
+      #define MAX_STEP_FREQUENCY (STEP_DOUBLER_FREQUENCY * 4) // Max step frequency for the Due is approx. 330kHz
+    #else
+      #define MAX_STEP_FREQUENCY 40000 // Max step frequency for Ultimaker (5000 pps / half step)
+    #endif
+  #endif
+
+  // MS1 MS2 Stepper Driver Microstepping mode table
+  #define MICROSTEP1 LOW,LOW
+  #define MICROSTEP2 HIGH,LOW
+  #define MICROSTEP4 LOW,HIGH
+  #define MICROSTEP8 HIGH,HIGH
+  #ifdef __SAM3X8E__
+    #if MB(ALLIGATOR)
+      #define MICROSTEP16 LOW,LOW
+      #define MICROSTEP32 HIGH,HIGH
+    #else
+      #define MICROSTEP16 HIGH,HIGH
+    #endif
+  #else
+  #define MICROSTEP16 HIGH,HIGH
+  #endif
+
+  /**
+   * Advance calculated values
+   */
+  #if ENABLED(ADVANCE)
+    #define EXTRUSION_AREA (0.25 * (D_FILAMENT) * (D_FILAMENT) * M_PI)
+    #define STEPS_PER_CUBIC_MM_E (axis_steps_per_mm[E_AXIS_N] / (EXTRUSION_AREA))
+  #endif
+
+  #if ENABLED(ULTIPANEL) && DISABLED(ELB_FULL_GRAPHIC_CONTROLLER)
+    #undef SD_DETECT_INVERTED
+  #endif
+
+  /**
+   * Set defaults for missing (newer) options
+   */
+  #ifndef DISABLE_INACTIVE_X
+    #define DISABLE_INACTIVE_X DISABLE_X
+  #endif
+  #ifndef DISABLE_INACTIVE_Y
+    #define DISABLE_INACTIVE_Y DISABLE_Y
+  #endif
+  #ifndef DISABLE_INACTIVE_Z
+    #define DISABLE_INACTIVE_Z DISABLE_Z
+  #endif
+  #ifndef DISABLE_INACTIVE_E
+    #define DISABLE_INACTIVE_E DISABLE_E
+  #endif
+
+  // Power Signal Control Definitions
+  // By default use ATX definition
+  #ifndef POWER_SUPPLY
+    #define POWER_SUPPLY 1
+  #endif
+  #if (POWER_SUPPLY == 1)     // 1 = ATX
+    #define PS_ON_AWAKE  LOW
+    #define PS_ON_ASLEEP HIGH
+  #elif (POWER_SUPPLY == 2)   // 2 = X-Box 360 203W
+    #define PS_ON_AWAKE  HIGH
+    #define PS_ON_ASLEEP LOW
+  #endif
+  #define HAS_POWER_SWITCH (POWER_SUPPLY > 0 && PIN_EXISTS(PS_ON))
+
+  /**
+   * Temp Sensor defines
+   */
+  #if TEMP_SENSOR_0 == -3
+    #define HEATER_0_USES_MAX6675
+    #define MAX6675_IS_MAX31855
+    #define MAX6675_TMIN -270
+    #define MAX6675_TMAX 1800
+  #elif TEMP_SENSOR_0 == -2
+    #define HEATER_0_USES_MAX6675
+    #define MAX6675_TMIN 0
+    #define MAX6675_TMAX 1024
+  #elif TEMP_SENSOR_0 == -1
+    #define HEATER_0_USES_AD595
+  #elif TEMP_SENSOR_0 == 0
+    #undef HEATER_0_MINTEMP
+    #undef HEATER_0_MAXTEMP
+  #elif TEMP_SENSOR_0 > 0
+    #define THERMISTORHEATER_0 TEMP_SENSOR_0
+    #define HEATER_0_USES_THERMISTOR
+  #endif
+
+  #if TEMP_SENSOR_1 <= -2
+    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_1"
+  #elif TEMP_SENSOR_1 == -1
+    #define HEATER_1_USES_AD595
+  #elif TEMP_SENSOR_1 == 0
+    #undef HEATER_1_MINTEMP
+    #undef HEATER_1_MAXTEMP
+  #elif TEMP_SENSOR_1 > 0
+    #define THERMISTORHEATER_1 TEMP_SENSOR_1
+    #define HEATER_1_USES_THERMISTOR
+  #endif
+
+  #if TEMP_SENSOR_2 <= -2
+    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_2"
+  #elif TEMP_SENSOR_2 == -1
+    #define HEATER_2_USES_AD595
+  #elif TEMP_SENSOR_2 == 0
+    #undef HEATER_2_MINTEMP
+    #undef HEATER_2_MAXTEMP
+  #elif TEMP_SENSOR_2 > 0
+    #define THERMISTORHEATER_2 TEMP_SENSOR_2
+    #define HEATER_2_USES_THERMISTOR
+  #endif
+
+  #if TEMP_SENSOR_3 <= -2
+    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_3"
+  #elif TEMP_SENSOR_3 == -1
+    #define HEATER_3_USES_AD595
+  #elif TEMP_SENSOR_3 == 0
+    #undef HEATER_3_MINTEMP
+    #undef HEATER_3_MAXTEMP
+  #elif TEMP_SENSOR_3 > 0
+    #define THERMISTORHEATER_3 TEMP_SENSOR_3
+    #define HEATER_3_USES_THERMISTOR
+  #endif
+
+  #if TEMP_SENSOR_4 <= -2
+    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_4"
+  #elif TEMP_SENSOR_4 == -1
+    #define HEATER_4_USES_AD595
+  #elif TEMP_SENSOR_4 == 0
+    #undef HEATER_4_MINTEMP
+    #undef HEATER_4_MAXTEMP
+  #elif TEMP_SENSOR_4 > 0
+    #define THERMISTORHEATER_4 TEMP_SENSOR_4
+    #define HEATER_4_USES_THERMISTOR
+  #endif
+
+  #if TEMP_SENSOR_BED <= -2
+    #error "MAX6675 / MAX31855 Thermocouples not supported for TEMP_SENSOR_BED"
+  #elif TEMP_SENSOR_BED == -1
+    #define BED_USES_AD595
+  #elif TEMP_SENSOR_BED == 0
+    #undef BED_MINTEMP
+    #undef BED_MAXTEMP
+  #elif TEMP_SENSOR_BED > 0
+    #define THERMISTORBED TEMP_SENSOR_BED
+    #define BED_USES_THERMISTOR
+  #endif
+
+  #ifdef __SAM3X8E__
+    #define HEATER_USES_AD595 (ENABLED(HEATER_0_USES_AD595) || ENABLED(HEATER_1_USES_AD595) || ENABLED(HEATER_2_USES_AD595) || ENABLED(HEATER_3_USES_AD595))
+  #endif
+
+  /**
+   * Flags for PID handling
+   */
+  #define HAS_PID_HEATING (ENABLED(PIDTEMP) || ENABLED(PIDTEMPBED))
+  #define HAS_PID_FOR_BOTH (ENABLED(PIDTEMP) && ENABLED(PIDTEMPBED))
+
+  /**
+   * Default hotend offsets, if not defined
+   */
+  #if HOTENDS > 1
+    #ifndef HOTEND_OFFSET_X
+      #define HOTEND_OFFSET_X { 0 } // X offsets for each extruder
+    #endif
+    #ifndef HOTEND_OFFSET_Y
+      #define HOTEND_OFFSET_Y { 0 } // Y offsets for each extruder
+    #endif
+    #if !defined(HOTEND_OFFSET_Z) && (ENABLED(DUAL_X_CARRIAGE) || ENABLED(SWITCHING_NOZZLE))
+      #define HOTEND_OFFSET_Z { 0 }
+    #endif
+  #endif
+
+  /**
+   * ARRAY_BY_EXTRUDERS based on EXTRUDERS
+   */
+  #define ARRAY_BY_EXTRUDERS(...) ARRAY_N(EXTRUDERS, __VA_ARGS__)
+  #define ARRAY_BY_EXTRUDERS1(v1) ARRAY_BY_EXTRUDERS(v1, v1, v1, v1, v1, v1)
+
+  /**
+   * ARRAY_BY_HOTENDS based on HOTENDS
+   */
+  #define ARRAY_BY_HOTENDS(...) ARRAY_N(HOTENDS, __VA_ARGS__)
+  #define ARRAY_BY_HOTENDS1(v1) ARRAY_BY_HOTENDS(v1, v1, v1, v1, v1, v1)
+
+  /**
+   * Z_DUAL_ENDSTOPS endstop reassignment
+   */
+  #if ENABLED(Z_DUAL_ENDSTOPS)
+    #define _XMIN_ 100
+    #define _YMIN_ 200
+    #define _ZMIN_ 300
+    #define _XMAX_ 101
+    #define _YMAX_ 201
+    #define _ZMAX_ 301
+    #if Z2_USE_ENDSTOP == _XMIN_
+      #define USE_XMIN_PLUG
+    #elif Z2_USE_ENDSTOP == _XMAX_
+      #define USE_XMAX_PLUG
+    #elif Z2_USE_ENDSTOP == _YMIN_
+      #define USE_YMIN_PLUG
+    #elif Z2_USE_ENDSTOP == _YMAX_
+      #define USE_YMAX_PLUG
+    #elif Z2_USE_ENDSTOP == _ZMIN_
+      #define USE_ZMIN_PLUG
+    #elif Z2_USE_ENDSTOP == _ZMAX_
+      #define USE_ZMAX_PLUG
+    #endif
+    #if Z_HOME_DIR > 0
+      #if Z2_USE_ENDSTOP == _XMIN_
+        #define Z2_MAX_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Z2_MAX_PIN X_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _XMAX_
+        #define Z2_MAX_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Z2_MAX_PIN X_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _YMIN_
+        #define Z2_MAX_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Z2_MAX_PIN Y_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _YMAX_
+        #define Z2_MAX_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Z2_MAX_PIN Y_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _ZMIN_
+        #define Z2_MAX_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Z2_MAX_PIN Z_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _ZMAX_
+        #define Z2_MAX_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Z2_MAX_PIN Z_MAX_PIN
+      #else
+        #define Z2_MAX_ENDSTOP_INVERTING false
+      #endif
+    #else
+      #if Z2_USE_ENDSTOP == _XMIN_
+        #define Z2_MIN_ENDSTOP_INVERTING X_MIN_ENDSTOP_INVERTING
+        #define Z2_MIN_PIN X_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _XMAX_
+        #define Z2_MIN_ENDSTOP_INVERTING X_MAX_ENDSTOP_INVERTING
+        #define Z2_MIN_PIN X_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _YMIN_
+        #define Z2_MIN_ENDSTOP_INVERTING Y_MIN_ENDSTOP_INVERTING
+        #define Z2_MIN_PIN Y_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _YMAX_
+        #define Z2_MIN_ENDSTOP_INVERTING Y_MAX_ENDSTOP_INVERTING
+        #define Z2_MIN_PIN Y_MAX_PIN
+      #elif Z2_USE_ENDSTOP == _ZMIN_
+        #define Z2_MIN_ENDSTOP_INVERTING Z_MIN_ENDSTOP_INVERTING
+        #define Z2_MIN_PIN Z_MIN_PIN
+      #elif Z2_USE_ENDSTOP == _ZMAX_
+        #define Z2_MIN_ENDSTOP_INVERTING Z_MAX_ENDSTOP_INVERTING
+        #define Z2_MIN_PIN Z_MAX_PIN
+      #else
+        #define Z2_MIN_ENDSTOP_INVERTING false
+      #endif
+    #endif
+  #endif
+
+  // Is an endstop plug used for the Z2 endstop or the bed probe?
+  #define IS_Z2_OR_PROBE(A,M) ( \
+       (ENABLED(Z_DUAL_ENDSTOPS) && Z2_USE_ENDSTOP == _##A##M##_) \
+    || (ENABLED(Z_MIN_PROBE_ENDSTOP) && Z_MIN_PROBE_PIN == A##_##M##_PIN ) )
+
+  /**
+   * Set ENDSTOPPULLUPS for active endstop switches
+   */
+  #if ENABLED(ENDSTOPPULLUPS)
+    #if ENABLED(USE_XMAX_PLUG)
+      #define ENDSTOPPULLUP_XMAX
+    #endif
+    #if ENABLED(USE_YMAX_PLUG)
+      #define ENDSTOPPULLUP_YMAX
+    #endif
+    #if ENABLED(USE_ZMAX_PLUG)
+      #define ENDSTOPPULLUP_ZMAX
+    #endif
+    #if ENABLED(USE_XMIN_PLUG)
+      #define ENDSTOPPULLUP_XMIN
+    #endif
+    #if ENABLED(USE_YMIN_PLUG)
+      #define ENDSTOPPULLUP_YMIN
+    #endif
+    #if ENABLED(USE_ZMIN_PLUG)
+      #define ENDSTOPPULLUP_ZMIN
+    #endif
+  #endif
+
+  /**
+   * Shorthand for pin tests, used wherever needed
+   */
+
+  // Steppers
+  #define HAS_X_ENABLE      (PIN_EXISTS(X_ENABLE))
+  #define HAS_X_DIR         (PIN_EXISTS(X_DIR))
+  #define HAS_X_STEP        (PIN_EXISTS(X_STEP))
+  #define HAS_X_MICROSTEPS  (PIN_EXISTS(X_MS1))
+
+  #define HAS_X2_ENABLE     (PIN_EXISTS(X2_ENABLE))
+  #define HAS_X2_DIR        (PIN_EXISTS(X2_DIR))
+  #define HAS_X2_STEP       (PIN_EXISTS(X2_STEP))
+  #define HAS_Y_MICROSTEPS  (PIN_EXISTS(Y_MS1))
+
+  #define HAS_Y_ENABLE      (PIN_EXISTS(Y_ENABLE))
+  #define HAS_Y_DIR         (PIN_EXISTS(Y_DIR))
+  #define HAS_Y_STEP        (PIN_EXISTS(Y_STEP))
+  #define HAS_Z_MICROSTEPS  (PIN_EXISTS(Z_MS1))
+
+  #define HAS_Y2_ENABLE     (PIN_EXISTS(Y2_ENABLE))
+  #define HAS_Y2_DIR        (PIN_EXISTS(Y2_DIR))
+  #define HAS_Y2_STEP       (PIN_EXISTS(Y2_STEP))
+
+  #define HAS_Z_ENABLE      (PIN_EXISTS(Z_ENABLE))
+  #define HAS_Z_DIR         (PIN_EXISTS(Z_DIR))
+  #define HAS_Z_STEP        (PIN_EXISTS(Z_STEP))
+
+  #define HAS_Z2_ENABLE     (PIN_EXISTS(Z2_ENABLE))
+  #define HAS_Z2_DIR        (PIN_EXISTS(Z2_DIR))
+  #define HAS_Z2_STEP       (PIN_EXISTS(Z2_STEP))
+
+  // Extruder steppers and solenoids
+  #define HAS_E0_ENABLE     (PIN_EXISTS(E0_ENABLE))
+  #define HAS_E0_DIR        (PIN_EXISTS(E0_DIR))
+  #define HAS_E0_STEP       (PIN_EXISTS(E0_STEP))
+  #define HAS_E0_MICROSTEPS (PIN_EXISTS(E0_MS1))
+  #define HAS_SOLENOID_0    (PIN_EXISTS(SOL0))
+
+  #define HAS_E1_ENABLE     (PIN_EXISTS(E1_ENABLE))
+  #define HAS_E1_DIR        (PIN_EXISTS(E1_DIR))
+  #define HAS_E1_STEP       (PIN_EXISTS(E1_STEP))
+  #define HAS_E1_MICROSTEPS (PIN_EXISTS(E1_MS1))
+  #define HAS_SOLENOID_1    (PIN_EXISTS(SOL1))
+
+  #define HAS_E2_ENABLE     (PIN_EXISTS(E2_ENABLE))
+  #define HAS_E2_DIR        (PIN_EXISTS(E2_DIR))
+  #define HAS_E2_STEP       (PIN_EXISTS(E2_STEP))
+  #define HAS_E2_MICROSTEPS (PIN_EXISTS(E2_MS1))
+  #define HAS_SOLENOID_2    (PIN_EXISTS(SOL2))
+
+  #define HAS_E3_ENABLE     (PIN_EXISTS(E3_ENABLE))
+  #define HAS_E3_DIR        (PIN_EXISTS(E3_DIR))
+  #define HAS_E3_STEP       (PIN_EXISTS(E3_STEP))
+  #define HAS_E3_MICROSTEPS (PIN_EXISTS(E3_MS1))
+  #define HAS_SOLENOID_3    (PIN_EXISTS(SOL3))
+
+  #define HAS_E4_ENABLE     (PIN_EXISTS(E4_ENABLE))
+  #define HAS_E4_DIR        (PIN_EXISTS(E4_DIR))
+  #define HAS_E4_STEP       (PIN_EXISTS(E4_STEP))
+  #define HAS_E4_MICROSTEPS (PIN_EXISTS(E4_MS1))
+  #define HAS_SOLENOID_4    (PIN_EXISTS(SOL4))
+
+  // Endstops and bed probe
+  #define HAS_X_MIN (PIN_EXISTS(X_MIN) && !IS_Z2_OR_PROBE(X,MIN))
+  #define HAS_X_MAX (PIN_EXISTS(X_MAX) && !IS_Z2_OR_PROBE(X,MAX))
+  #define HAS_Y_MIN (PIN_EXISTS(Y_MIN) && !IS_Z2_OR_PROBE(Y,MIN))
+  #define HAS_Y_MAX (PIN_EXISTS(Y_MAX) && !IS_Z2_OR_PROBE(Y,MAX))
+  #define HAS_Z_MIN (PIN_EXISTS(Z_MIN) && !IS_Z2_OR_PROBE(Z,MIN))
+  #define HAS_Z_MAX (PIN_EXISTS(Z_MAX) && !IS_Z2_OR_PROBE(Z,MAX))
+  #define HAS_Z2_MIN (PIN_EXISTS(Z2_MIN))
+  #define HAS_Z2_MAX (PIN_EXISTS(Z2_MAX))
+  #define HAS_Z_MIN_PROBE_PIN (PIN_EXISTS(Z_MIN_PROBE))
+
+  // Thermistors
+  #define HAS_TEMP_0 (PIN_EXISTS(TEMP_0) && TEMP_SENSOR_0 != 0 && TEMP_SENSOR_0 > -2)
+  #define HAS_TEMP_1 (PIN_EXISTS(TEMP_1) && TEMP_SENSOR_1 != 0 && TEMP_SENSOR_1 > -2)
+  #define HAS_TEMP_2 (PIN_EXISTS(TEMP_2) && TEMP_SENSOR_2 != 0 && TEMP_SENSOR_2 > -2)
+  #define HAS_TEMP_3 (PIN_EXISTS(TEMP_3) && TEMP_SENSOR_3 != 0 && TEMP_SENSOR_3 > -2)
+  #define HAS_TEMP_4 (PIN_EXISTS(TEMP_4) && TEMP_SENSOR_4 != 0 && TEMP_SENSOR_4 > -2)
+  #define HAS_TEMP_HOTEND (HAS_TEMP_0 || ENABLED(HEATER_0_USES_MAX6675))
+  #define HAS_TEMP_BED (PIN_EXISTS(TEMP_BED) && TEMP_SENSOR_BED != 0 && TEMP_SENSOR_BED > -2)
+
+  // Heaters
+  #define HAS_HEATER_0 (PIN_EXISTS(HEATER_0))
+  #define HAS_HEATER_1 (PIN_EXISTS(HEATER_1))
+  #define HAS_HEATER_2 (PIN_EXISTS(HEATER_2))
+  #define HAS_HEATER_3 (PIN_EXISTS(HEATER_3))
+  #define HAS_HEATER_4 (PIN_EXISTS(HEATER_4))
+  #define HAS_HEATER_BED (PIN_EXISTS(HEATER_BED))
+
+  // Thermal protection
+  #define HAS_THERMALLY_PROTECTED_BED (ENABLED(THERMAL_PROTECTION_BED) && HAS_TEMP_BED && HAS_HEATER_BED)
+  #define WATCH_HOTENDS (ENABLED(THERMAL_PROTECTION_HOTENDS) && WATCH_TEMP_PERIOD > 0)
+  #define WATCH_THE_BED (HAS_THERMALLY_PROTECTED_BED && WATCH_BED_TEMP_PERIOD > 0)
+
+  // Auto fans
+  #define HAS_AUTO_FAN_0 (PIN_EXISTS(E0_AUTO_FAN))
+  #define HAS_AUTO_FAN_1 (HOTENDS > 1 && PIN_EXISTS(E1_AUTO_FAN))
+  #define HAS_AUTO_FAN_2 (HOTENDS > 2 && PIN_EXISTS(E2_AUTO_FAN))
+  #define HAS_AUTO_FAN_3 (HOTENDS > 3 && PIN_EXISTS(E3_AUTO_FAN))
+  #define HAS_AUTO_FAN_4 (HOTENDS > 4 && PIN_EXISTS(E4_AUTO_FAN))
+  #define HAS_AUTO_FAN (HAS_AUTO_FAN_0 || HAS_AUTO_FAN_1 || HAS_AUTO_FAN_2 || HAS_AUTO_FAN_3)
+  #define AUTO_1_IS_0 (E1_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+  #define AUTO_2_IS_0 (E2_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+  #define AUTO_2_IS_1 (E2_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+  #define AUTO_3_IS_0 (E3_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+  #define AUTO_3_IS_1 (E3_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+  #define AUTO_3_IS_2 (E3_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
+  #define AUTO_4_IS_0 (E4_AUTO_FAN_PIN == E0_AUTO_FAN_PIN)
+  #define AUTO_4_IS_1 (E4_AUTO_FAN_PIN == E1_AUTO_FAN_PIN)
+  #define AUTO_4_IS_2 (E4_AUTO_FAN_PIN == E2_AUTO_FAN_PIN)
+  #define AUTO_4_IS_3 (E4_AUTO_FAN_PIN == E3_AUTO_FAN_PIN)
+
+  // Other fans
+  #define HAS_FAN0 (PIN_EXISTS(FAN))
+  #define HAS_FAN1 (PIN_EXISTS(FAN1) && CONTROLLER_FAN_PIN != FAN1_PIN && E0_AUTO_FAN_PIN != FAN1_PIN && E1_AUTO_FAN_PIN != FAN1_PIN && E2_AUTO_FAN_PIN != FAN1_PIN && E3_AUTO_FAN_PIN != FAN1_PIN)
+  #define HAS_FAN2 (PIN_EXISTS(FAN2) && CONTROLLER_FAN_PIN != FAN2_PIN && E0_AUTO_FAN_PIN != FAN2_PIN && E1_AUTO_FAN_PIN != FAN2_PIN && E2_AUTO_FAN_PIN != FAN2_PIN && E3_AUTO_FAN_PIN != FAN2_PIN)
+  #define HAS_CONTROLLER_FAN (PIN_EXISTS(CONTROLLER_FAN))
+
+  // Servos
+  #define HAS_SERVOS (defined(NUM_SERVOS) && NUM_SERVOS > 0)
+  #define HAS_SERVO_0 (PIN_EXISTS(SERVO0))
+  #define HAS_SERVO_1 (PIN_EXISTS(SERVO1))
+  #define HAS_SERVO_2 (PIN_EXISTS(SERVO2))
+  #define HAS_SERVO_3 (PIN_EXISTS(SERVO3))
+
+  // Sensors
+  #define HAS_FILAMENT_WIDTH_SENSOR (PIN_EXISTS(FILWIDTH))
+  #define HAS_FIL_RUNOUT (PIN_EXISTS(FIL_RUNOUT))
+
+  // User Interface
+  #define HAS_HOME (PIN_EXISTS(HOME))
+  #define HAS_KILL (PIN_EXISTS(KILL))
+  #define HAS_SUICIDE (PIN_EXISTS(SUICIDE))
+  #define HAS_PHOTOGRAPH (PIN_EXISTS(PHOTOGRAPH))
+  #define HAS_BUZZER (PIN_EXISTS(BEEPER) || ENABLED(LCD_USE_I2C_BUZZER))
+  #define HAS_CASE_LIGHT (PIN_EXISTS(CASE_LIGHT) && ENABLED(CASE_LIGHT_ENABLE))
+
+  // Digital control
+  #define HAS_MICROSTEPS (HAS_X_MICROSTEPS || HAS_Y_MICROSTEPS || HAS_Z_MICROSTEPS || HAS_E0_MICROSTEPS || HAS_E1_MICROSTEPS || HAS_E2_MICROSTEPS || HAS_E3_MICROSTEPS || HAS_E4_MICROSTEPS)
+  #define HAS_STEPPER_RESET (PIN_EXISTS(STEPPER_RESET))
+  #define HAS_DIGIPOTSS (PIN_EXISTS(DIGIPOTSS))
+  #define HAS_MOTOR_CURRENT_PWM (PIN_EXISTS(MOTOR_CURRENT_PWM_XY) || PIN_EXISTS(MOTOR_CURRENT_PWM_Z) || PIN_EXISTS(MOTOR_CURRENT_PWM_E))
+
+  /**
+   * This setting is also used by M109 when trying to calculate
+   * a ballpark safe margin to prevent wait-forever situation.
+   */
+  #ifndef EXTRUDE_MINTEMP
+    #define EXTRUDE_MINTEMP 170
+  #endif
+
+  /**
+   * Helper Macros for heaters and extruder fan
+   */
+  #define WRITE_HEATER_0P(v) WRITE(HEATER_0_PIN, v)
+  #if HOTENDS > 1 || ENABLED(HEATERS_PARALLEL)
+    #define WRITE_HEATER_1(v) WRITE(HEATER_1_PIN, v)
+    #if HOTENDS > 2
+      #define WRITE_HEATER_2(v) WRITE(HEATER_2_PIN, v)
+      #if HOTENDS > 3
+        #define WRITE_HEATER_3(v) WRITE(HEATER_3_PIN, v)
+        #if HOTENDS > 4
+          #define WRITE_HEATER_4(v) WRITE(HEATER_4_PIN, v)
+        #endif // HOTENDS > 4
+      #endif // HOTENDS > 3
+    #endif // HOTENDS > 2
+  #endif // HOTENDS > 1
+  #if ENABLED(HEATERS_PARALLEL)
+    #define WRITE_HEATER_0(v) { WRITE_HEATER_0P(v); WRITE_HEATER_1(v); }
+  #else
+    #define WRITE_HEATER_0(v) WRITE_HEATER_0P(v)
+  #endif
+
+  /**
+   * Heated bed requires settings
+   */
+  #if HAS_HEATER_BED
+    #ifndef MAX_BED_POWER
+      #define MAX_BED_POWER 255
+    #endif
+    #ifndef HEATER_BED_INVERTING
+      #define HEATER_BED_INVERTING false
+    #endif
+    #define WRITE_HEATER_BED(v) WRITE(HEATER_BED_PIN, (v) ^ HEATER_BED_INVERTING)
+  #endif
+
+  /**
+   * Up to 3 PWM fans
+   */
+  #if HAS_FAN2
+    #define FAN_COUNT 3
+  #elif HAS_FAN1
+    #define FAN_COUNT 2
+  #elif HAS_FAN0
+    #define FAN_COUNT 1
+  #else
+    #define FAN_COUNT 0
+  #endif
+
+  #if HAS_FAN0
+    #define WRITE_FAN(v) WRITE(FAN_PIN, v)
+    #define WRITE_FAN0(v) WRITE_FAN(v)
+  #endif
+  #if HAS_FAN1
+    #define WRITE_FAN1(v) WRITE(FAN1_PIN, v)
+  #endif
+  #if HAS_FAN2
+    #define WRITE_FAN2(v) WRITE(FAN2_PIN, v)
+  #endif
+  #define WRITE_FAN_N(n, v) WRITE_FAN##n(v)
+
+  /**
+   * Part Cooling fan multipliexer
+   */
+  #define HAS_FANMUX PIN_EXISTS(FANMUX0)
+
+  /**
+   * Servos and probes
+   */
+
+  #if HAS_SERVOS
+    #ifndef Z_ENDSTOP_SERVO_NR
+      #define Z_ENDSTOP_SERVO_NR -1
+    #endif
+  #endif
+
+  #define PROBE_PIN_CONFIGURED (HAS_Z_MIN_PROBE_PIN || (HAS_Z_MIN && ENABLED(Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN)))
+  #define HAS_BED_PROBE (PROBE_SELECTED && PROBE_PIN_CONFIGURED && DISABLED(PROBE_MANUALLY))
+
+  #if ENABLED(Z_PROBE_ALLEN_KEY)
+    #define PROBE_IS_TRIGGERED_WHEN_STOWED_TEST
+  #endif
+
+  /**
+   * Bed Probe dependencies
+   */
+  #if HAS_BED_PROBE
+    #if ENABLED(ENDSTOPPULLUPS) && HAS_Z_MIN_PROBE_PIN
+      #define ENDSTOPPULLUP_ZMIN_PROBE
+    #endif
+    #ifndef Z_PROBE_OFFSET_RANGE_MIN
+      #define Z_PROBE_OFFSET_RANGE_MIN -20
+    #endif
+    #ifndef Z_PROBE_OFFSET_RANGE_MAX
+      #define Z_PROBE_OFFSET_RANGE_MAX 20
+    #endif
+    #ifndef XY_PROBE_SPEED
+      #ifdef HOMING_FEEDRATE_XY
+        #define XY_PROBE_SPEED HOMING_FEEDRATE_XY
+      #else
+        #define XY_PROBE_SPEED 4000
+      #endif
+    #endif
+    #if Z_CLEARANCE_BETWEEN_PROBES > Z_CLEARANCE_DEPLOY_PROBE
+      #define _Z_CLEARANCE_DEPLOY_PROBE Z_CLEARANCE_BETWEEN_PROBES
+    #else
+      #define _Z_CLEARANCE_DEPLOY_PROBE Z_CLEARANCE_DEPLOY_PROBE
+    #endif
+  #else
+    #undef X_PROBE_OFFSET_FROM_EXTRUDER
+    #undef Y_PROBE_OFFSET_FROM_EXTRUDER
+    #undef Z_PROBE_OFFSET_FROM_EXTRUDER
+    #define X_PROBE_OFFSET_FROM_EXTRUDER 0
+    #define Y_PROBE_OFFSET_FROM_EXTRUDER 0
+    #define Z_PROBE_OFFSET_FROM_EXTRUDER 0
+  #endif
+
+  /**
+   * Heater & Fan Pausing
+   */
+  #if FAN_COUNT == 0
+    #undef PROBING_FANS_OFF
+  #endif
+  #define QUIET_PROBING (HAS_BED_PROBE && (ENABLED(PROBING_HEATERS_OFF) || ENABLED(PROBING_FANS_OFF) || DELAY_BEFORE_PROBING > 0))
+  #define HEATER_IDLE_HANDLER (ENABLED(ADVANCED_PAUSE_FEATURE) || ENABLED(PROBING_HEATERS_OFF))
+
+  /**
+   * Delta radius/rod trimmers/angle trimmers
+   */
+  #if ENABLED(DELTA)
+    #ifndef DELTA_CALIBRATION_RADIUS
+      #define DELTA_CALIBRATION_RADIUS DELTA_PRINTABLE_RADIUS - 10
+    #endif
+    #ifndef DELTA_ENDSTOP_ADJ
+      #define DELTA_ENDSTOP_ADJ { 0, 0, 0 }
+    #endif
+    #ifndef DELTA_TOWER_ANGLE_TRIM
+      #define DELTA_TOWER_ANGLE_TRIM {0, 0, 0}
+    #endif
+    #ifndef DELTA_RADIUS_TRIM_TOWER
+      #define DELTA_RADIUS_TRIM_TOWER {0, 0, 0}
+    #endif
+    #ifndef DELTA_DIAGONAL_ROD_TRIM_TOWER
+      #define DELTA_DIAGONAL_ROD_TRIM_TOWER {0, 0, 0}
+    #endif
+  #endif
+
+  /**
+   * Set granular options based on the specific type of leveling
+   */
+
+  #define UBL_DELTA  (ENABLED(AUTO_BED_LEVELING_UBL) && (ENABLED(DELTA) || ENABLED(UBL_GRANULAR_SEGMENTATION_FOR_CARTESIAN)))
+  #define ABL_PLANAR (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_3POINT))
+  #define ABL_GRID   (ENABLED(AUTO_BED_LEVELING_LINEAR) || ENABLED(AUTO_BED_LEVELING_BILINEAR))
+  #define HAS_ABL    (ABL_PLANAR || ABL_GRID || ENABLED(AUTO_BED_LEVELING_UBL))
+  #define HAS_LEVELING          (HAS_ABL || ENABLED(MESH_BED_LEVELING))
+  #define PLANNER_LEVELING      (ABL_PLANAR || ABL_GRID || ENABLED(MESH_BED_LEVELING) || UBL_DELTA)
+  #define HAS_PROBING_PROCEDURE (HAS_ABL || ENABLED(Z_MIN_PROBE_REPEATABILITY_TEST))
+  #if HAS_PROBING_PROCEDURE
+    #define PROBE_BED_WIDTH abs(RIGHT_PROBE_BED_POSITION - (LEFT_PROBE_BED_POSITION))
+    #define PROBE_BED_HEIGHT abs(BACK_PROBE_BED_POSITION - (FRONT_PROBE_BED_POSITION))
+  #endif
+
+  /**
+   * Buzzer/Speaker
+   */
+  #if ENABLED(LCD_USE_I2C_BUZZER)
+    #ifndef LCD_FEEDBACK_FREQUENCY_HZ
+      #define LCD_FEEDBACK_FREQUENCY_HZ 1000
+    #endif
+    #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
+      #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
+    #endif
+  #else
+    #ifndef LCD_FEEDBACK_FREQUENCY_HZ
+      #define LCD_FEEDBACK_FREQUENCY_HZ 5000
+    #endif
+    #ifndef LCD_FEEDBACK_FREQUENCY_DURATION_MS
+      #define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
+    #endif
+  #endif
+
+  /**
+   * Z_HOMING_HEIGHT / Z_CLEARANCE_BETWEEN_PROBES
+   */
+  #ifndef Z_HOMING_HEIGHT
+    #ifndef Z_CLEARANCE_BETWEEN_PROBES
+      #define Z_HOMING_HEIGHT 0
+    #else
+      #define Z_HOMING_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+    #endif
+  #endif
+  #ifndef Z_CLEARANCE_BETWEEN_PROBES
+    #define Z_CLEARANCE_BETWEEN_PROBES Z_HOMING_HEIGHT
+  #endif
+  #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
+    #define MANUAL_PROBE_HEIGHT Z_CLEARANCE_BETWEEN_PROBES
+  #else
+    #define MANUAL_PROBE_HEIGHT Z_HOMING_HEIGHT
+  #endif
+
+  /**
+   * Bed Probing rectangular bounds
+   * These can be further constrained in code for Delta and SCARA
+   */
+  #if ENABLED(DELTA)
+    #ifndef DELTA_PROBEABLE_RADIUS
+      #define DELTA_PROBEABLE_RADIUS DELTA_PRINTABLE_RADIUS
+    #endif
+    // Probing points may be verified at compile time within the radius
+    // using static_assert(HYPOT2(X2-X1,Y2-Y1)<=sq(DELTA_PRINTABLE_RADIUS),"bad probe point!")
+    // so that may be added to SanityCheck.h in the future.
+    #define MIN_PROBE_X (X_CENTER - (DELTA_PROBEABLE_RADIUS))
+    #define MIN_PROBE_Y (Y_CENTER - (DELTA_PROBEABLE_RADIUS))
+    #define MAX_PROBE_X (X_CENTER +  DELTA_PROBEABLE_RADIUS)
+    #define MAX_PROBE_Y (Y_CENTER +  DELTA_PROBEABLE_RADIUS)
+  #elif IS_SCARA
+    #define SCARA_PRINTABLE_RADIUS (SCARA_LINKAGE_1 + SCARA_LINKAGE_2)
+    #define MIN_PROBE_X (X_CENTER - (SCARA_PRINTABLE_RADIUS))
+    #define MIN_PROBE_Y (Y_CENTER - (SCARA_PRINTABLE_RADIUS))
+    #define MAX_PROBE_X (X_CENTER +  SCARA_PRINTABLE_RADIUS)
+    #define MAX_PROBE_Y (Y_CENTER +  SCARA_PRINTABLE_RADIUS)
+  #else
+    // Boundaries for Cartesian probing based on set limits
+    #if ENABLED(BED_CENTER_AT_0_0)
+      #define MIN_PROBE_X (max(X_PROBE_OFFSET_FROM_EXTRUDER, 0) - (X_BED_SIZE) / 2)
+      #define MIN_PROBE_Y (max(Y_PROBE_OFFSET_FROM_EXTRUDER, 0) - (Y_BED_SIZE) / 2)
+      #define MAX_PROBE_X (min(X_BED_SIZE + X_PROBE_OFFSET_FROM_EXTRUDER, X_BED_SIZE) - (X_BED_SIZE) / 2)
+      #define MAX_PROBE_Y (min(Y_BED_SIZE + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_BED_SIZE) - (Y_BED_SIZE) / 2)
+    #else
+      #define MIN_PROBE_X (max(X_MIN_POS + X_PROBE_OFFSET_FROM_EXTRUDER, 0))
+      #define MIN_PROBE_Y (max(Y_MIN_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, 0))
+      #define MAX_PROBE_X (min(X_MAX_POS + X_PROBE_OFFSET_FROM_EXTRUDER, X_BED_SIZE))
+      #define MAX_PROBE_Y (min(Y_MAX_POS + Y_PROBE_OFFSET_FROM_EXTRUDER, Y_BED_SIZE))
+    #endif
+  #endif
+
+  // Stepper pulse duration, in cycles
+  #define STEP_PULSE_CYCLES ((MINIMUM_STEPPER_PULSE) * CYCLES_PER_MICROSECOND)
+  #ifdef CPU_32_BIT
+    // Add additional delay for between direction signal and pulse signal of stepper
+    #ifndef STEPPER_DIRECTION_DELAY
+      #define STEPPER_DIRECTION_DELAY 0 // time in microseconds
+    #endif
+  #endif
+
+  #ifndef __SAM3X8E__ //todo: hal: broken hal encapsulation
+    #undef UI_VOLTAGE_LEVEL
+    #undef RADDS_DISPLAY
+    #undef MOTOR_CURRENT
+  #endif
+
+  #if ENABLED(SDCARD_SORT_ALPHA)
+    #define HAS_FOLDER_SORTING (FOLDER_SORTING || ENABLED(SDSORT_GCODE))
+  #endif
+
+  // Updated G92 behavior shifts the workspace
+  #define HAS_POSITION_SHIFT DISABLED(NO_WORKSPACE_OFFSETS)
+  // The home offset also shifts the coordinate space
+  #define HAS_HOME_OFFSET (DISABLED(NO_WORKSPACE_OFFSETS) || ENABLED(DELTA))
+  // Either offset yields extra calculations on all moves
+  #define HAS_WORKSPACE_OFFSET (HAS_POSITION_SHIFT || HAS_HOME_OFFSET)
+  // M206 doesn't apply to DELTA
+  #define HAS_M206_COMMAND (HAS_HOME_OFFSET && DISABLED(DELTA))
+
+  // LCD timeout to status screen default is 15s
+  #ifndef LCD_TIMEOUT_TO_STATUS
+    #define LCD_TIMEOUT_TO_STATUS 15000
+  #endif
+
+  /**
+   * DELTA_SEGMENT_MIN_LENGTH for UBL_DELTA
+   */
+  #if UBL_DELTA
+    #ifndef DELTA_SEGMENT_MIN_LENGTH
+      #if IS_SCARA
+        #define DELTA_SEGMENT_MIN_LENGTH 0.25 // SCARA minimum segment size is 0.25mm
+      #elif ENABLED(DELTA)
+        #define DELTA_SEGMENT_MIN_LENGTH 0.10 // mm (still subject to DELTA_SEGMENTS_PER_SECOND)
+      #else // CARTESIAN
+        #define DELTA_SEGMENT_MIN_LENGTH 1.00 // mm (similar to G2/G3 arc segmentation)
+      #endif
+    #endif
+  #endif
+
+  // Shorthand
+  #define GRID_MAX_POINTS ((GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y))
+
+  // Add commands that need sub-codes to this list
+  #define USE_GCODE_SUBCODES ENABLED(G38_PROBE_TARGET)
+
+  // MESH_BED_LEVELING overrides PROBE_MANUALLY
+  #if ENABLED(MESH_BED_LEVELING)
+    #undef PROBE_MANUALLY
+  #endif
+
+  // Parking Extruder
+  #if ENABLED(PARKING_EXTRUDER)
+    #ifndef PARKING_EXTRUDER_GRAB_DISTANCE
+      #define PARKING_EXTRUDER_GRAB_DISTANCE 0
+    #endif
+    #ifndef PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE
+      #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE HIGH
+    #endif
+  #endif
+
+  // Use float instead of double. Needs profiling.
+  #if defined(ARDUINO_ARCH_SAM) && ENABLED(DELTA_FAST_SQRT)
+    #undef ATAN2
+    #undef FABS
+    #undef POW
+    #undef SQRT
+    #undef CEIL
+    #undef FLOOR
+    #undef LROUND
+    #undef FMOD
+    #define ATAN2(y, x) atan2f(y, x)
+    #define FABS(x) fabsf(x)
+    #define POW(x, y) powf(x, y)
+    #define SQRT(x) sqrtf(x)
+    #define CEIL(x) ceilf(x)
+    #define FLOOR(x) floorf(x)
+    #define LROUND(x) lroundf(x)
+    #define FMOD(x, y) fmodf(x, y)
+  #endif
+
+  #ifdef TEENSYDUINO
+    #undef max
+    #define max(a,b) ((a)>(b)?(a):(b))
+    #undef min
+    #define min(a,b) ((a)<(b)?(a):(b))
+
+    #define NOT_A_PIN 0 // For PINS_DEBUGGING
+  #endif
+#endif // CONDITIONALS_POST_H
