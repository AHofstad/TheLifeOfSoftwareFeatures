commit f2248f79d3c4a3649bd9a4b9d6abab0f94e4af94
Author: Jonathan Brazier <66009857+JonBr306@users.noreply.github.com>
Date:   Mon Jun 24 20:52:49 2024 +0100

    ‚ö°Ô∏è Implement CALIBRATION_GCODE as endstop (#27204)

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
index 7a67b958b4..2c75fe6986 100644
--- a/Marlin/src/HAL/LPC1768/endstop_interrupts.h
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -139,20 +139,26 @@ void setup_endstop_interrupts() {
       #error "Z4_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z4_MIN_PIN);
   #endif
   #if USE_Z_MIN_PROBE
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PROBE_PIN)
       #error "Z_MIN_PROBE_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MIN_PROBE_PIN);
   #endif
+  #if USE_CALIBRATION
+    #if !LPC1768_PIN_INTERRUPT_M(CALIBRATION_PIN)
+      #error "CALIBRATION_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
+    #endif
+    _ATTACH(CALIBRATION_PIN);
+  #endif
   #if USE_I_MAX
     #if !LPC1768_PIN_INTERRUPT_M(I_MAX_PIN)
       #error "I_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(I_MAX_PIN);
   #elif USE_I_MIN
     #if !LPC1768_PIN_INTERRUPT_M(I_MIN_PIN)
       #error "I_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(I_MIN_PIN);

commit bed26734a28175f7ef9669d5190bf7ebc6227223
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Aug 1 23:03:06 2023 -0500

    üîß More endstops refactoring (#25758)

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
index cd9de25477..7a67b958b4 100644
--- a/Marlin/src/HAL/LPC1768/endstop_interrupts.h
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -67,21 +67,21 @@ void setup_endstop_interrupts() {
       #error "Y_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Y_MIN_PIN);
   #endif
   #if USE_Z_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z_MAX_PIN)
       #error "Z_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MAX_PIN);
   #endif
-  #if HAS_Z_MIN_PIN
+  #if USE_Z_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PIN)
       #error "Z_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
      _ATTACH(Z_MIN_PIN);
   #endif
   #if USE_X2_MAX
     #if !LPC1768_PIN_INTERRUPT_M(X2_MAX_PIN)
       #error "X2_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(X2_MAX_PIN);

commit 85325f585ac4a9bb667423561540b5d58bdc3b6e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 5 19:37:13 2023 -0500

    üßë‚Äçüíª Endstops preliminary work (#25780)

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
index 2253b92627..cd9de25477 100644
--- a/Marlin/src/HAL/LPC1768/endstop_interrupts.h
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -37,179 +37,179 @@
 
 #include "../../module/endstops.h"
 
 // One ISR for all EXT-Interrupts
 void endstop_ISR() { endstops.update(); }
 
 void setup_endstop_interrupts() {
   #define _ATTACH(P) attachInterrupt(digitalPinToInterrupt(P), endstop_ISR, CHANGE)
   #define LPC1768_PIN_INTERRUPT_M(pin) ((pin >> 0x5 & 0x7) == 0 || (pin >> 0x5 & 0x7) == 2)
 
-  #if HAS_X_MAX
+  #if USE_X_MAX
     #if !LPC1768_PIN_INTERRUPT_M(X_MAX_PIN)
       #error "X_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(X_MAX_PIN);
   #endif
-  #if HAS_X_MIN
+  #if USE_X_MIN
     #if !LPC1768_PIN_INTERRUPT_M(X_MIN_PIN)
       #error "X_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(X_MIN_PIN);
   #endif
-  #if HAS_Y_MAX
+  #if USE_Y_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Y_MAX_PIN)
       #error "Y_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Y_MAX_PIN);
   #endif
-  #if HAS_Y_MIN
+  #if USE_Y_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Y_MIN_PIN)
       #error "Y_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Y_MIN_PIN);
   #endif
-  #if HAS_Z_MAX
+  #if USE_Z_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z_MAX_PIN)
       #error "Z_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MAX_PIN);
   #endif
   #if HAS_Z_MIN_PIN
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PIN)
       #error "Z_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
      _ATTACH(Z_MIN_PIN);
   #endif
-  #if HAS_X2_MAX
+  #if USE_X2_MAX
     #if !LPC1768_PIN_INTERRUPT_M(X2_MAX_PIN)
       #error "X2_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(X2_MAX_PIN);
   #endif
-  #if HAS_X2_MIN
+  #if USE_X2_MIN
     #if !LPC1768_PIN_INTERRUPT_M(X2_MIN_PIN)
       #error "X2_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(X2_MIN_PIN);
   #endif
-  #if HAS_Y2_MAX
+  #if USE_Y2_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Y2_MAX_PIN)
       #error "Y2_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Y2_MAX_PIN);
   #endif
-  #if HAS_Y2_MIN
+  #if USE_Y2_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Y2_MIN_PIN)
       #error "Y2_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Y2_MIN_PIN);
   #endif
-  #if HAS_Z2_MAX
+  #if USE_Z2_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z2_MAX_PIN)
       #error "Z2_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z2_MAX_PIN);
   #endif
-  #if HAS_Z2_MIN
+  #if USE_Z2_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z2_MIN_PIN)
       #error "Z2_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z2_MIN_PIN);
   #endif
-  #if HAS_Z3_MAX
+  #if USE_Z3_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z3_MAX_PIN)
       #error "Z3_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z3_MAX_PIN);
   #endif
-  #if HAS_Z3_MIN
+  #if USE_Z3_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z3_MIN_PIN)
       #error "Z3_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z3_MIN_PIN);
   #endif
-  #if HAS_Z4_MAX
+  #if USE_Z4_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z4_MAX_PIN)
       #error "Z4_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z4_MAX_PIN);
   #endif
-  #if HAS_Z4_MIN
+  #if USE_Z4_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z4_MIN_PIN)
       #error "Z4_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z4_MIN_PIN);
   #endif
-  #if HAS_Z_MIN_PROBE_PIN
+  #if USE_Z_MIN_PROBE
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PROBE_PIN)
       #error "Z_MIN_PROBE_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MIN_PROBE_PIN);
   #endif
-  #if HAS_I_MAX
+  #if USE_I_MAX
     #if !LPC1768_PIN_INTERRUPT_M(I_MAX_PIN)
       #error "I_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(I_MAX_PIN);
-  #elif HAS_I_MIN
+  #elif USE_I_MIN
     #if !LPC1768_PIN_INTERRUPT_M(I_MIN_PIN)
       #error "I_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(I_MIN_PIN);
   #endif
-  #if HAS_J_MAX
+  #if USE_J_MAX
     #if !LPC1768_PIN_INTERRUPT_M(J_MAX_PIN)
       #error "J_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(J_MAX_PIN);
-  #elif HAS_J_MIN
+  #elif USE_J_MIN
     #if !LPC1768_PIN_INTERRUPT_M(J_MIN_PIN)
       #error "J_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(J_MIN_PIN);
   #endif
-  #if HAS_K_MAX
+  #if USE_K_MAX
     #if !LPC1768_PIN_INTERRUPT_M(K_MAX_PIN)
       #error "K_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(K_MAX_PIN);
-  #elif HAS_K_MIN
+  #elif USE_K_MIN
     #if !LPC1768_PIN_INTERRUPT_M(K_MIN_PIN)
       #error "K_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(K_MIN_PIN);
   #endif
-  #if HAS_U_MAX
+  #if USE_U_MAX
     #if !LPC1768_PIN_INTERRUPT_M(U_MAX_PIN)
       #error "U_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(U_MAX_PIN);
-  #elif HAS_U_MIN
+  #elif USE_U_MIN
     #if !LPC1768_PIN_INTERRUPT_M(U_MIN_PIN)
       #error "U_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(U_MIN_PIN);
   #endif
-  #if HAS_V_MAX
+  #if USE_V_MAX
     #if !LPC1768_PIN_INTERRUPT_M(V_MAX_PIN)
       #error "V_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(V_MAX_PIN);
-  #elif HAS_V_MIN
+  #elif USE_V_MIN
     #if !LPC1768_PIN_INTERRUPT_M(V_MIN_PIN)
       #error "V_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(V_MIN_PIN);
   #endif
-  #if HAS_W_MAX
+  #if USE_W_MAX
     #if !LPC1768_PIN_INTERRUPT_M(W_MAX_PIN)
       #error "W_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(W_MAX_PIN);
-  #elif HAS_W_MIN
+  #elif USE_W_MIN
     #if !LPC1768_PIN_INTERRUPT_M(W_MIN_PIN)
       #error "W_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(W_MIN_PIN);
   #endif
 }

commit 467ab74523087a852ab50939d86a0ca0b78f17ad
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 26 14:56:23 2023 -0500

    üßë‚Äçüíª Simplify endstops config (#25748)

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
index e4ac17f608..2253b92627 100644
--- a/Marlin/src/HAL/LPC1768/endstop_interrupts.h
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -67,26 +67,50 @@ void setup_endstop_interrupts() {
       #error "Y_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Y_MIN_PIN);
   #endif
   #if HAS_Z_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z_MAX_PIN)
       #error "Z_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MAX_PIN);
   #endif
-  #if HAS_Z_MIN
+  #if HAS_Z_MIN_PIN
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PIN)
       #error "Z_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
      _ATTACH(Z_MIN_PIN);
   #endif
+  #if HAS_X2_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(X2_MAX_PIN)
+      #error "X2_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
+    #endif
+    _ATTACH(X2_MAX_PIN);
+  #endif
+  #if HAS_X2_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(X2_MIN_PIN)
+      #error "X2_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
+    #endif
+    _ATTACH(X2_MIN_PIN);
+  #endif
+  #if HAS_Y2_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(Y2_MAX_PIN)
+      #error "Y2_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
+    #endif
+    _ATTACH(Y2_MAX_PIN);
+  #endif
+  #if HAS_Y2_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(Y2_MIN_PIN)
+      #error "Y2_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
+    #endif
+    _ATTACH(Y2_MIN_PIN);
+  #endif
   #if HAS_Z2_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z2_MAX_PIN)
       #error "Z2_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z2_MAX_PIN);
   #endif
   #if HAS_Z2_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z2_MIN_PIN)
       #error "Z2_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
@@ -117,75 +141,75 @@ void setup_endstop_interrupts() {
     _ATTACH(Z4_MIN_PIN);
   #endif
   #if HAS_Z_MIN_PROBE_PIN
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PROBE_PIN)
       #error "Z_MIN_PROBE_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MIN_PROBE_PIN);
   #endif
   #if HAS_I_MAX
     #if !LPC1768_PIN_INTERRUPT_M(I_MAX_PIN)
-      #error "I_MAX_PIN is not INTERRUPT-capable."
+      #error "I_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(I_MAX_PIN);
   #elif HAS_I_MIN
     #if !LPC1768_PIN_INTERRUPT_M(I_MIN_PIN)
-      #error "I_MIN_PIN is not INTERRUPT-capable."
+      #error "I_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(I_MIN_PIN);
   #endif
   #if HAS_J_MAX
     #if !LPC1768_PIN_INTERRUPT_M(J_MAX_PIN)
-      #error "J_MAX_PIN is not INTERRUPT-capable."
+      #error "J_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(J_MAX_PIN);
   #elif HAS_J_MIN
     #if !LPC1768_PIN_INTERRUPT_M(J_MIN_PIN)
-      #error "J_MIN_PIN is not INTERRUPT-capable."
+      #error "J_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(J_MIN_PIN);
   #endif
   #if HAS_K_MAX
     #if !LPC1768_PIN_INTERRUPT_M(K_MAX_PIN)
-      #error "K_MAX_PIN is not INTERRUPT-capable."
+      #error "K_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(K_MAX_PIN);
   #elif HAS_K_MIN
     #if !LPC1768_PIN_INTERRUPT_M(K_MIN_PIN)
-      #error "K_MIN_PIN is not INTERRUPT-capable."
+      #error "K_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(K_MIN_PIN);
   #endif
   #if HAS_U_MAX
     #if !LPC1768_PIN_INTERRUPT_M(U_MAX_PIN)
-      #error "U_MAX_PIN is not INTERRUPT-capable."
+      #error "U_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(U_MAX_PIN);
   #elif HAS_U_MIN
     #if !LPC1768_PIN_INTERRUPT_M(U_MIN_PIN)
-      #error "U_MIN_PIN is not INTERRUPT-capable."
+      #error "U_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(U_MIN_PIN);
   #endif
   #if HAS_V_MAX
     #if !LPC1768_PIN_INTERRUPT_M(V_MAX_PIN)
-      #error "V_MAX_PIN is not INTERRUPT-capable."
+      #error "V_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(V_MAX_PIN);
   #elif HAS_V_MIN
     #if !LPC1768_PIN_INTERRUPT_M(V_MIN_PIN)
-      #error "V_MIN_PIN is not INTERRUPT-capable."
+      #error "V_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(V_MIN_PIN);
   #endif
   #if HAS_W_MAX
     #if !LPC1768_PIN_INTERRUPT_M(W_MAX_PIN)
-      #error "W_MAX_PIN is not INTERRUPT-capable."
+      #error "W_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(W_MAX_PIN);
   #elif HAS_W_MIN
     #if !LPC1768_PIN_INTERRUPT_M(W_MIN_PIN)
-      #error "W_MIN_PIN is not INTERRUPT-capable."
+      #error "W_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(W_MIN_PIN);
   #endif
 }

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
index 23bd0cc982..e4ac17f608 100644
--- a/Marlin/src/HAL/LPC1768/endstop_interrupts.h
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -148,11 +148,44 @@ void setup_endstop_interrupts() {
     #if !LPC1768_PIN_INTERRUPT_M(K_MAX_PIN)
       #error "K_MAX_PIN is not INTERRUPT-capable."
     #endif
     _ATTACH(K_MAX_PIN);
   #elif HAS_K_MIN
     #if !LPC1768_PIN_INTERRUPT_M(K_MIN_PIN)
       #error "K_MIN_PIN is not INTERRUPT-capable."
     #endif
     _ATTACH(K_MIN_PIN);
   #endif
+  #if HAS_U_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(U_MAX_PIN)
+      #error "U_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(U_MAX_PIN);
+  #elif HAS_U_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(U_MIN_PIN)
+      #error "U_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(U_MIN_PIN);
+  #endif
+  #if HAS_V_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(V_MAX_PIN)
+      #error "V_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(V_MAX_PIN);
+  #elif HAS_V_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(V_MIN_PIN)
+      #error "V_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(V_MIN_PIN);
+  #endif
+  #if HAS_W_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(W_MAX_PIN)
+      #error "W_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(W_MAX_PIN);
+  #elif HAS_W_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(W_MIN_PIN)
+      #error "W_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(W_MIN_PIN);
+  #endif
 }

commit 7726af9c5348c1c7d0fd9a56eca87d00cd75fee6
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Jun 5 09:18:47 2021 +0200

    üèóÔ∏è Support for up to 6 linear axes (#19112)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
index 126d6e7d5b..23bd0cc982 100644
--- a/Marlin/src/HAL/LPC1768/endstop_interrupts.h
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -115,11 +115,44 @@ void setup_endstop_interrupts() {
       #error "Z4_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z4_MIN_PIN);
   #endif
   #if HAS_Z_MIN_PROBE_PIN
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PROBE_PIN)
       #error "Z_MIN_PROBE_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MIN_PROBE_PIN);
   #endif
+  #if HAS_I_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(I_MAX_PIN)
+      #error "I_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(I_MAX_PIN);
+  #elif HAS_I_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(I_MIN_PIN)
+      #error "I_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(I_MIN_PIN);
+  #endif
+  #if HAS_J_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(J_MAX_PIN)
+      #error "J_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(J_MAX_PIN);
+  #elif HAS_J_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(J_MIN_PIN)
+      #error "J_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(J_MIN_PIN);
+  #endif
+  #if HAS_K_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(K_MAX_PIN)
+      #error "K_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(K_MAX_PIN);
+  #elif HAS_K_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(K_MIN_PIN)
+      #error "K_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(K_MIN_PIN);
+  #endif
 }

commit 6cf4b888e1b6723ddf0a5cbe3fad27940a29fca2
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Thu Dec 10 10:27:02 2020 -0800

    Clarify "not Interrupt-capable" error message (#20419)

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
index b0d0c0ec5c..126d6e7d5b 100644
--- a/Marlin/src/HAL/LPC1768/endstop_interrupts.h
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -39,87 +39,87 @@
 
 // One ISR for all EXT-Interrupts
 void endstop_ISR() { endstops.update(); }
 
 void setup_endstop_interrupts() {
   #define _ATTACH(P) attachInterrupt(digitalPinToInterrupt(P), endstop_ISR, CHANGE)
   #define LPC1768_PIN_INTERRUPT_M(pin) ((pin >> 0x5 & 0x7) == 0 || (pin >> 0x5 & 0x7) == 2)
 
   #if HAS_X_MAX
     #if !LPC1768_PIN_INTERRUPT_M(X_MAX_PIN)
-      #error "X_MAX_PIN is not INTERRUPT-capable."
+      #error "X_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(X_MAX_PIN);
   #endif
   #if HAS_X_MIN
     #if !LPC1768_PIN_INTERRUPT_M(X_MIN_PIN)
-      #error "X_MIN_PIN is not INTERRUPT-capable."
+      #error "X_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(X_MIN_PIN);
   #endif
   #if HAS_Y_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Y_MAX_PIN)
-      #error "Y_MAX_PIN is not INTERRUPT-capable."
+      #error "Y_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Y_MAX_PIN);
   #endif
   #if HAS_Y_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Y_MIN_PIN)
-      #error "Y_MIN_PIN is not INTERRUPT-capable."
+      #error "Y_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Y_MIN_PIN);
   #endif
   #if HAS_Z_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z_MAX_PIN)
-      #error "Z_MAX_PIN is not INTERRUPT-capable."
+      #error "Z_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MAX_PIN);
   #endif
   #if HAS_Z_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PIN)
-      #error "Z_MIN_PIN is not INTERRUPT-capable."
+      #error "Z_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
      _ATTACH(Z_MIN_PIN);
   #endif
   #if HAS_Z2_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z2_MAX_PIN)
-      #error "Z2_MAX_PIN is not INTERRUPT-capable."
+      #error "Z2_MAX_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z2_MAX_PIN);
   #endif
   #if HAS_Z2_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z2_MIN_PIN)
-      #error "Z2_MIN_PIN is not INTERRUPT-capable."
+      #error "Z2_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z2_MIN_PIN);
   #endif
   #if HAS_Z3_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z3_MAX_PIN)
-      #error "Z3_MIN_PIN is not INTERRUPT-capable."
+      #error "Z3_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z3_MAX_PIN);
   #endif
   #if HAS_Z3_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z3_MIN_PIN)
-      #error "Z3_MIN_PIN is not INTERRUPT-capable."
+      #error "Z3_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z3_MIN_PIN);
   #endif
   #if HAS_Z4_MAX
     #if !LPC1768_PIN_INTERRUPT_M(Z4_MAX_PIN)
-      #error "Z4_MIN_PIN is not INTERRUPT-capable."
+      #error "Z4_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z4_MAX_PIN);
   #endif
   #if HAS_Z4_MIN
     #if !LPC1768_PIN_INTERRUPT_M(Z4_MIN_PIN)
-      #error "Z4_MIN_PIN is not INTERRUPT-capable."
+      #error "Z4_MIN_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z4_MIN_PIN);
   #endif
   #if HAS_Z_MIN_PROBE_PIN
     #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PROBE_PIN)
-      #error "Z_MIN_PROBE_PIN is not INTERRUPT-capable."
+      #error "Z_MIN_PROBE_PIN is not INTERRUPT-capable. Disable ENDSTOP_INTERRUPTS_FEATURE to continue."
     #endif
     _ATTACH(Z_MIN_PROBE_PIN);
   #endif
 }

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
index 4c4e9bd3f0..b0d0c0ec5c 100644
--- a/Marlin/src/HAL/LPC1768/endstop_interrupts.h
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
  * Endstop Interrupts
  *
  * Without endstop interrupts the endstop pins must be polled continually in
  * the temperature-ISR via endstops.update(), most of the time finding no change.
  * With this feature endstops.update() is called only when we know that at

commit 6bead0c1b04152f6a291d851f6cd4029fe0fc616
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 16:29:29 2020 -0500

    Shorter paths to HAL, ExtUI (#17156)

diff --git a/Marlin/src/HAL/LPC1768/endstop_interrupts.h b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
new file mode 100644
index 0000000000..4c4e9bd3f0
--- /dev/null
+++ b/Marlin/src/HAL/LPC1768/endstop_interrupts.h
@@ -0,0 +1,125 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+/**
+ * Endstop Interrupts
+ *
+ * Without endstop interrupts the endstop pins must be polled continually in
+ * the temperature-ISR via endstops.update(), most of the time finding no change.
+ * With this feature endstops.update() is called only when we know that at
+ * least one endstop has changed state, saving valuable CPU cycles.
+ *
+ * This feature only works when all used endstop pins can generate an 'external interrupt'.
+ *
+ * Test whether pins issue interrupts on your board by flashing 'pin_interrupt_test.ino'.
+ * (Located in Marlin/buildroot/share/pin_interrupt_test/pin_interrupt_test.ino)
+ */
+
+#include "../../module/endstops.h"
+
+// One ISR for all EXT-Interrupts
+void endstop_ISR() { endstops.update(); }
+
+void setup_endstop_interrupts() {
+  #define _ATTACH(P) attachInterrupt(digitalPinToInterrupt(P), endstop_ISR, CHANGE)
+  #define LPC1768_PIN_INTERRUPT_M(pin) ((pin >> 0x5 & 0x7) == 0 || (pin >> 0x5 & 0x7) == 2)
+
+  #if HAS_X_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(X_MAX_PIN)
+      #error "X_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(X_MAX_PIN);
+  #endif
+  #if HAS_X_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(X_MIN_PIN)
+      #error "X_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(X_MIN_PIN);
+  #endif
+  #if HAS_Y_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(Y_MAX_PIN)
+      #error "Y_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Y_MAX_PIN);
+  #endif
+  #if HAS_Y_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(Y_MIN_PIN)
+      #error "Y_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Y_MIN_PIN);
+  #endif
+  #if HAS_Z_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(Z_MAX_PIN)
+      #error "Z_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Z_MAX_PIN);
+  #endif
+  #if HAS_Z_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PIN)
+      #error "Z_MIN_PIN is not INTERRUPT-capable."
+    #endif
+     _ATTACH(Z_MIN_PIN);
+  #endif
+  #if HAS_Z2_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(Z2_MAX_PIN)
+      #error "Z2_MAX_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Z2_MAX_PIN);
+  #endif
+  #if HAS_Z2_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(Z2_MIN_PIN)
+      #error "Z2_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Z2_MIN_PIN);
+  #endif
+  #if HAS_Z3_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(Z3_MAX_PIN)
+      #error "Z3_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Z3_MAX_PIN);
+  #endif
+  #if HAS_Z3_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(Z3_MIN_PIN)
+      #error "Z3_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Z3_MIN_PIN);
+  #endif
+  #if HAS_Z4_MAX
+    #if !LPC1768_PIN_INTERRUPT_M(Z4_MAX_PIN)
+      #error "Z4_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Z4_MAX_PIN);
+  #endif
+  #if HAS_Z4_MIN
+    #if !LPC1768_PIN_INTERRUPT_M(Z4_MIN_PIN)
+      #error "Z4_MIN_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Z4_MIN_PIN);
+  #endif
+  #if HAS_Z_MIN_PROBE_PIN
+    #if !LPC1768_PIN_INTERRUPT_M(Z_MIN_PROBE_PIN)
+      #error "Z_MIN_PROBE_PIN is not INTERRUPT-capable."
+    #endif
+    _ATTACH(Z_MIN_PROBE_PIN);
+  #endif
+}
