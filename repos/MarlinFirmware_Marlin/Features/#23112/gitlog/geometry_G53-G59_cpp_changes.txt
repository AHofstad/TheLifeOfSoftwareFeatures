commit 9135e3f7d3fd0d634656f1c54c70a0ba1f878bfd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 20 21:10:03 2023 -0500

    üö∏ Revert M206 Home Offset behavior (#25996)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index c51c29f423..017b54a084 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -30,26 +30,21 @@
 /**
  * Select a coordinate system and update the workspace offset.
  * System index -1 is used to specify machine-native.
  */
 bool GcodeSuite::select_coordinate_system(const int8_t _new) {
   if (active_coordinate_system == _new) return false;
   active_coordinate_system = _new;
   xyz_float_t new_offset{0};
   if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
     new_offset = coordinate_system[_new];
-  LOOP_NUM_AXES(i) {
-    if (position_shift[i] != new_offset[i]) {
-      position_shift[i] = new_offset[i];
-      update_workspace_offset((AxisEnum)i);
-    }
-  }
+  workspace_offset = new_offset;
   return true;
 }
 
 /**
  * G53: Apply native workspace to the current move
  *
  * In CNC G-code G53 is a modifier.
  * It precedes a movement command (or other modifiers) on the same line.
  * This is the first command to use parser.chain() to make this possible.
  *

commit 21c48d9f927c81d7b7cf6fc3641ce01a831a16ca
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 27 04:24:50 2022 -0500

    üßë‚Äçüíª  Update planner/stepper includes

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 092c141228..c51c29f423 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -18,22 +18,20 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 #include "../gcode.h"
 #include "../../module/motion.h"
 
 #if ENABLED(CNC_COORDINATE_SYSTEMS)
 
-#include "../../module/stepper.h"
-
 //#define DEBUG_M53
 
 /**
  * Select a coordinate system and update the workspace offset.
  * System index -1 is used to specify machine-native.
  */
 bool GcodeSuite::select_coordinate_system(const int8_t _new) {
   if (active_coordinate_system == _new) return false;
   active_coordinate_system = _new;
   xyz_float_t new_offset{0};

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index db2404a28d..092c141228 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -32,21 +32,21 @@
 /**
  * Select a coordinate system and update the workspace offset.
  * System index -1 is used to specify machine-native.
  */
 bool GcodeSuite::select_coordinate_system(const int8_t _new) {
   if (active_coordinate_system == _new) return false;
   active_coordinate_system = _new;
   xyz_float_t new_offset{0};
   if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
     new_offset = coordinate_system[_new];
-  LOOP_LINEAR_AXES(i) {
+  LOOP_NUM_AXES(i) {
     if (position_shift[i] != new_offset[i]) {
       position_shift[i] = new_offset[i];
       update_workspace_offset((AxisEnum)i);
     }
   }
   return true;
 }
 
 /**
  * G53: Apply native workspace to the current move

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index a5a9f70a8b..db2404a28d 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -62,39 +62,39 @@ void GcodeSuite::G53() {
   select_coordinate_system(-1);   // Always remove workspace offsets
   #ifdef DEBUG_M53
     SERIAL_ECHOLNPGM("Go to native space");
     report_current_position();
   #endif
 
   if (parser.chain()) {       // Command to chain?
     process_parsed_command(); // ...process the chained command
     select_coordinate_system(old_system);
     #ifdef DEBUG_M53
-      SERIAL_ECHOLNPAIR("Go back to workspace ", old_system);
+      SERIAL_ECHOLNPGM("Go back to workspace ", old_system);
       report_current_position();
     #endif
   }
 }
 
 /**
  * G54-G59.3: Select a new workspace
  *
  * A workspace is an XYZ offset to the machine native space.
  * All workspaces default to 0,0,0 at start, or with EEPROM
  * support they may be restored from a previous session.
  *
  * G92 is used to set the current workspace's offset.
  */
 void G54_59(uint8_t subcode=0) {
   const int8_t _space = parser.codenum - 54 + subcode;
   if (gcode.select_coordinate_system(_space)) {
-    SERIAL_ECHOLNPAIR("Select workspace ", _space);
+    SERIAL_ECHOLNPGM("Select workspace ", _space);
     report_current_position();
   }
 }
 void GcodeSuite::G54() { G54_59(); }
 void GcodeSuite::G55() { G54_59(); }
 void GcodeSuite::G56() { G54_59(); }
 void GcodeSuite::G57() { G54_59(); }
 void GcodeSuite::G58() { G54_59(); }
 void GcodeSuite::G59() { G54_59(parser.subcode); }
 

commit a6e5492b088add3589aeac168136369f21614e60
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 18 22:51:19 2021 -0500

    ‚ôªÔ∏è Refactor axis counts and loops

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 05bc522768..a5a9f70a8b 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -32,21 +32,21 @@
 /**
  * Select a coordinate system and update the workspace offset.
  * System index -1 is used to specify machine-native.
  */
 bool GcodeSuite::select_coordinate_system(const int8_t _new) {
   if (active_coordinate_system == _new) return false;
   active_coordinate_system = _new;
   xyz_float_t new_offset{0};
   if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
     new_offset = coordinate_system[_new];
-  LOOP_XYZ(i) {
+  LOOP_LINEAR_AXES(i) {
     if (position_shift[i] != new_offset[i]) {
       position_shift[i] = new_offset[i];
       update_workspace_offset((AxisEnum)i);
     }
   }
   return true;
 }
 
 /**
  * G53: Apply native workspace to the current move

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index e24247b2c5..05bc522768 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 #include "../gcode.h"
 #include "../../module/motion.h"
 
 #if ENABLED(CNC_COORDINATE_SYSTEMS)
 
 #include "../../module/stepper.h"
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 38f72ae62e..e24247b2c5 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 50e4545255605eb506c20eb107270038b0fe7bdb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 29 04:25:39 2019 -0500

    Add custom types for position (#15204)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 88914ccffd..38f72ae62e 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -29,23 +29,23 @@
 
 //#define DEBUG_M53
 
 /**
  * Select a coordinate system and update the workspace offset.
  * System index -1 is used to specify machine-native.
  */
 bool GcodeSuite::select_coordinate_system(const int8_t _new) {
   if (active_coordinate_system == _new) return false;
   active_coordinate_system = _new;
-  float new_offset[XYZ] = { 0 };
+  xyz_float_t new_offset{0};
   if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
-    COPY(new_offset, coordinate_system[_new]);
+    new_offset = coordinate_system[_new];
   LOOP_XYZ(i) {
     if (position_shift[i] != new_offset[i]) {
       position_shift[i] = new_offset[i];
       update_workspace_offset((AxisEnum)i);
     }
   }
   return true;
 }
 
 /**

commit 081e4506ca5356501415bfaf066d982947449623
Author: Luu Lac <45380455+shitcreek@users.noreply.github.com>
Date:   Wed Aug 28 04:20:28 2019 -0500

    Fix G53 as prefix, G28 with CNC_COORDINATE_SYSTEMS (#15069)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 813c026e75..88914ccffd 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -20,58 +20,65 @@
  *
  */
 
 #include "../gcode.h"
 #include "../../module/motion.h"
 
 #if ENABLED(CNC_COORDINATE_SYSTEMS)
 
 #include "../../module/stepper.h"
 
+//#define DEBUG_M53
+
 /**
  * Select a coordinate system and update the workspace offset.
  * System index -1 is used to specify machine-native.
  */
 bool GcodeSuite::select_coordinate_system(const int8_t _new) {
   if (active_coordinate_system == _new) return false;
-  planner.synchronize();
-  float old_offset[XYZ] = { 0 }, new_offset[XYZ] = { 0 };
-  if (WITHIN(active_coordinate_system, 0, MAX_COORDINATE_SYSTEMS - 1))
-    COPY(old_offset, coordinate_system[active_coordinate_system]);
+  active_coordinate_system = _new;
+  float new_offset[XYZ] = { 0 };
   if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
     COPY(new_offset, coordinate_system[_new]);
-  active_coordinate_system = _new;
   LOOP_XYZ(i) {
-    const float diff = new_offset[i] - old_offset[i];
-    if (diff) {
-      position_shift[i] += diff;
+    if (position_shift[i] != new_offset[i]) {
+      position_shift[i] = new_offset[i];
       update_workspace_offset((AxisEnum)i);
     }
   }
   return true;
 }
 
 /**
  * G53: Apply native workspace to the current move
  *
  * In CNC G-code G53 is a modifier.
  * It precedes a movement command (or other modifiers) on the same line.
  * This is the first command to use parser.chain() to make this possible.
  *
  * Marlin also uses G53 on a line by itself to go back to native space.
  */
 void GcodeSuite::G53() {
-  const int8_t _system = active_coordinate_system;
-  active_coordinate_system = -1;
-  if (parser.chain()) { // If this command has more following...
-    process_parsed_command();
-    active_coordinate_system = _system;
+  const int8_t old_system = active_coordinate_system;
+  select_coordinate_system(-1);   // Always remove workspace offsets
+  #ifdef DEBUG_M53
+    SERIAL_ECHOLNPGM("Go to native space");
+    report_current_position();
+  #endif
+
+  if (parser.chain()) {       // Command to chain?
+    process_parsed_command(); // ...process the chained command
+    select_coordinate_system(old_system);
+    #ifdef DEBUG_M53
+      SERIAL_ECHOLNPAIR("Go back to workspace ", old_system);
+      report_current_position();
+    #endif
   }
 }
 
 /**
  * G54-G59.3: Select a new workspace
  *
  * A workspace is an XYZ offset to the machine native space.
  * All workspaces default to 0,0,0 at start, or with EEPROM
  * support they may be restored from a previous session.
  *

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 38765f2e1b..813c026e75 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit 509dc283f298f5fdc737e58294f599eca519c59a
Author: Jamie <vector76@users.noreply.github.com>
Date:   Thu Apr 11 13:51:05 2019 -0500

    Restore declarations of G53-G59 (#13654)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 4d53a885d6..38765f2e1b 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -52,21 +52,21 @@ bool GcodeSuite::select_coordinate_system(const int8_t _new) {
 
 /**
  * G53: Apply native workspace to the current move
  *
  * In CNC G-code G53 is a modifier.
  * It precedes a movement command (or other modifiers) on the same line.
  * This is the first command to use parser.chain() to make this possible.
  *
  * Marlin also uses G53 on a line by itself to go back to native space.
  */
-inline void GcodeSuite::G53() {
+void GcodeSuite::G53() {
   const int8_t _system = active_coordinate_system;
   active_coordinate_system = -1;
   if (parser.chain()) { // If this command has more following...
     process_parsed_command();
     active_coordinate_system = _system;
   }
 }
 
 /**
  * G54-G59.3: Select a new workspace

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 98181b0f62..4d53a885d6 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit c98623983774b9773800bc7dcef695c4bad81c0e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 29 16:58:58 2018 -0600

    A single SERIAL_ECHO macro type (#12557)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index f1e9ff27d0..98181b0f62 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -73,21 +73,21 @@ inline void GcodeSuite::G53() {
  *
  * A workspace is an XYZ offset to the machine native space.
  * All workspaces default to 0,0,0 at start, or with EEPROM
  * support they may be restored from a previous session.
  *
  * G92 is used to set the current workspace's offset.
  */
 void G54_59(uint8_t subcode=0) {
   const int8_t _space = parser.codenum - 54 + subcode;
   if (gcode.select_coordinate_system(_space)) {
-    SERIAL_PROTOCOLLNPAIR("Select workspace ", _space);
+    SERIAL_ECHOLNPAIR("Select workspace ", _space);
     report_current_position();
   }
 }
 void GcodeSuite::G54() { G54_59(); }
 void GcodeSuite::G55() { G54_59(); }
 void GcodeSuite::G56() { G54_59(); }
 void GcodeSuite::G57() { G54_59(); }
 void GcodeSuite::G58() { G54_59(); }
 void GcodeSuite::G59() { G54_59(parser.subcode); }
 

commit d1ff22b9830bbb94efea52f4233b2f11ad0a0c4a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 3 03:56:33 2018 -0500

    Revive SCARA's home offset (unimplemented)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 09708c03ea..f1e9ff27d0 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -37,21 +37,21 @@ bool GcodeSuite::select_coordinate_system(const int8_t _new) {
   float old_offset[XYZ] = { 0 }, new_offset[XYZ] = { 0 };
   if (WITHIN(active_coordinate_system, 0, MAX_COORDINATE_SYSTEMS - 1))
     COPY(old_offset, coordinate_system[active_coordinate_system]);
   if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
     COPY(new_offset, coordinate_system[_new]);
   active_coordinate_system = _new;
   LOOP_XYZ(i) {
     const float diff = new_offset[i] - old_offset[i];
     if (diff) {
       position_shift[i] += diff;
-      update_software_endstops((AxisEnum)i);
+      update_workspace_offset((AxisEnum)i);
     }
   }
   return true;
 }
 
 /**
  * G53: Apply native workspace to the current move
  *
  * In CNC G-code G53 is a modifier.
  * It precedes a movement command (or other modifiers) on the same line.

commit 306f0f2135e4b2aed749a0d1b870abf17d883e38
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 12 01:38:02 2018 -0500

    Move Stepper::synchronize to Planner (#10713)
    
    Co-Authored-By: ejtagle <ejtagle@hotmail.com>

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index d2a89a4858..09708c03ea 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -26,21 +26,21 @@
 #if ENABLED(CNC_COORDINATE_SYSTEMS)
 
 #include "../../module/stepper.h"
 
 /**
  * Select a coordinate system and update the workspace offset.
  * System index -1 is used to specify machine-native.
  */
 bool GcodeSuite::select_coordinate_system(const int8_t _new) {
   if (active_coordinate_system == _new) return false;
-  stepper.synchronize();
+  planner.synchronize();
   float old_offset[XYZ] = { 0 }, new_offset[XYZ] = { 0 };
   if (WITHIN(active_coordinate_system, 0, MAX_COORDINATE_SYSTEMS - 1))
     COPY(old_offset, coordinate_system[active_coordinate_system]);
   if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
     COPY(new_offset, coordinate_system[_new]);
   active_coordinate_system = _new;
   LOOP_XYZ(i) {
     const float diff = new_offset[i] - old_offset[i];
     if (diff) {
       position_shift[i] += diff;

commit 9656a82609c83f9dc2e0f21973a26c13b336f953
Author: Bob-the-Kuhn <bob.kuhn@att.net>
Date:   Wed Mar 28 13:14:39 2018 -0500

    Fix G53/CNC_COORDINATE_SYSTEMS compilation, Travis testing (#10227)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index ac4c2fd581..d2a89a4858 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -17,77 +17,78 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 
 #include "../gcode.h"
 #include "../../module/motion.h"
 
 #if ENABLED(CNC_COORDINATE_SYSTEMS)
-  #include "../../module/stepper.h"
 
-  /**
-   * Select a coordinate system and update the workspace offset.
-   * System index -1 is used to specify machine-native.
-   */
-  bool GcodeSuite::select_coordinate_system(const int8_t _new) {
-    if (active_coordinate_system == _new) return false;
-    stepper.synchronize();
-    float old_offset[XYZ] = { 0 }, new_offset[XYZ] = { 0 };
-    if (WITHIN(active_coordinate_system, 0, MAX_COORDINATE_SYSTEMS - 1))
-      COPY(old_offset, coordinate_system[active_coordinate_system]);
-    if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
-      COPY(new_offset, coordinate_system[_new]);
-    active_coordinate_system = _new;
-    LOOP_XYZ(i) {
-      const float diff = new_offset[i] - old_offset[i];
-      if (diff) {
-        position_shift[i] += diff;
-        update_software_endstops((AxisEnum)i);
-      }
+#include "../../module/stepper.h"
+
+/**
+ * Select a coordinate system and update the workspace offset.
+ * System index -1 is used to specify machine-native.
+ */
+bool GcodeSuite::select_coordinate_system(const int8_t _new) {
+  if (active_coordinate_system == _new) return false;
+  stepper.synchronize();
+  float old_offset[XYZ] = { 0 }, new_offset[XYZ] = { 0 };
+  if (WITHIN(active_coordinate_system, 0, MAX_COORDINATE_SYSTEMS - 1))
+    COPY(old_offset, coordinate_system[active_coordinate_system]);
+  if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
+    COPY(new_offset, coordinate_system[_new]);
+  active_coordinate_system = _new;
+  LOOP_XYZ(i) {
+    const float diff = new_offset[i] - old_offset[i];
+    if (diff) {
+      position_shift[i] += diff;
+      update_software_endstops((AxisEnum)i);
     }
-    return true;
   }
+  return true;
+}
 
-  /**
-   * G53: Apply native workspace to the current move
-   *
-   * In CNC G-code G53 is a modifier.
-   * It precedes a movement command (or other modifiers) on the same line.
-   * This is the first command to use parser.chain() to make this possible.
-   *
-   * Marlin also uses G53 on a line by itself to go back to native space.
-   */
-  inline void gcode_G53() {
-    const int8_t _system = active_coordinate_system;
-    active_coordinate_system = -1;
-    if (parser.chain()) { // If this command has more following...
-      process_parsed_command();
-      active_coordinate_system = _system;
-    }
+/**
+ * G53: Apply native workspace to the current move
+ *
+ * In CNC G-code G53 is a modifier.
+ * It precedes a movement command (or other modifiers) on the same line.
+ * This is the first command to use parser.chain() to make this possible.
+ *
+ * Marlin also uses G53 on a line by itself to go back to native space.
+ */
+inline void GcodeSuite::G53() {
+  const int8_t _system = active_coordinate_system;
+  active_coordinate_system = -1;
+  if (parser.chain()) { // If this command has more following...
+    process_parsed_command();
+    active_coordinate_system = _system;
   }
+}
 
-  /**
-   * G54-G59.3: Select a new workspace
-   *
-   * A workspace is an XYZ offset to the machine native space.
-   * All workspaces default to 0,0,0 at start, or with EEPROM
-   * support they may be restored from a previous session.
-   *
-   * G92 is used to set the current workspace's offset.
-   */
-  void G54_59(uint8_t subcode=0) {
-    const int8_t _space = parser.codenum - 54 + subcode;
-    if (gcode.select_coordinate_system(_space)) {
-      SERIAL_PROTOCOLLNPAIR("Select workspace ", _space);
-      report_current_position();
-    }
+/**
+ * G54-G59.3: Select a new workspace
+ *
+ * A workspace is an XYZ offset to the machine native space.
+ * All workspaces default to 0,0,0 at start, or with EEPROM
+ * support they may be restored from a previous session.
+ *
+ * G92 is used to set the current workspace's offset.
+ */
+void G54_59(uint8_t subcode=0) {
+  const int8_t _space = parser.codenum - 54 + subcode;
+  if (gcode.select_coordinate_system(_space)) {
+    SERIAL_PROTOCOLLNPAIR("Select workspace ", _space);
+    report_current_position();
   }
-  void GcodeSuite::G54() { G54_59(); }
-  void GcodeSuite::G55() { G54_59(); }
-  void GcodeSuite::G56() { G54_59(); }
-  void GcodeSuite::G57() { G54_59(); }
-  void GcodeSuite::G58() { G54_59(); }
-  void GcodeSuite::G59() { G54_59(parser.subcode); }
+}
+void GcodeSuite::G54() { G54_59(); }
+void GcodeSuite::G55() { G54_59(); }
+void GcodeSuite::G56() { G54_59(); }
+void GcodeSuite::G57() { G54_59(); }
+void GcodeSuite::G58() { G54_59(); }
+void GcodeSuite::G59() { G54_59(parser.subcode); }
 
 #endif // CNC_COORDINATE_SYSTEMS

commit ff304d3767ebfbe1dbcde3703bc4fe5aee1587a4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 21 01:38:25 2018 -0500

    Allow G53 to go back to native space

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 4739fe458f..ac4c2fd581 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -43,29 +43,32 @@
       const float diff = new_offset[i] - old_offset[i];
       if (diff) {
         position_shift[i] += diff;
         update_software_endstops((AxisEnum)i);
       }
     }
     return true;
   }
 
   /**
-   * In CNC G-code G53 is like a modifier
+   * G53: Apply native workspace to the current move
+   *
+   * In CNC G-code G53 is a modifier.
    * It precedes a movement command (or other modifiers) on the same line.
    * This is the first command to use parser.chain() to make this possible.
+   *
+   * Marlin also uses G53 on a line by itself to go back to native space.
    */
-  void GcodeSuite::G53() {
-    // If this command has more following...
-    if (parser.chain()) {
-      const int8_t _system = active_coordinate_system;
-      active_coordinate_system = -1;
+  inline void gcode_G53() {
+    const int8_t _system = active_coordinate_system;
+    active_coordinate_system = -1;
+    if (parser.chain()) { // If this command has more following...
       process_parsed_command();
       active_coordinate_system = _system;
     }
   }
 
   /**
    * G54-G59.3: Select a new workspace
    *
    * A workspace is an XYZ offset to the machine native space.
    * All workspaces default to 0,0,0 at start, or with EEPROM

commit e1117a8492f389bda7e911c3338fc16056ae4829
Author: GMagician <3684609+GMagician@users.noreply.github.com>
Date:   Fri Feb 2 08:45:46 2018 +0100

    [2.0.x] fix compile errors when CNC_COORDINATE_SYSTEMS is enabled (#9380)

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index a00a65b6c7..4739fe458f 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -15,29 +15,29 @@
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 
 #include "../gcode.h"
 #include "../../module/motion.h"
-//#include "../../module/stepper.h"
 
 #if ENABLED(CNC_COORDINATE_SYSTEMS)
+  #include "../../module/stepper.h"
 
   /**
    * Select a coordinate system and update the workspace offset.
    * System index -1 is used to specify machine-native.
    */
-  bool GCodeSuite::select_coordinate_system(const int8_t _new) {
+  bool GcodeSuite::select_coordinate_system(const int8_t _new) {
     if (active_coordinate_system == _new) return false;
     stepper.synchronize();
     float old_offset[XYZ] = { 0 }, new_offset[XYZ] = { 0 };
     if (WITHIN(active_coordinate_system, 0, MAX_COORDINATE_SYSTEMS - 1))
       COPY(old_offset, coordinate_system[active_coordinate_system]);
     if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
       COPY(new_offset, coordinate_system[_new]);
     active_coordinate_system = _new;
     LOOP_XYZ(i) {
       const float diff = new_offset[i] - old_offset[i];
@@ -47,21 +47,21 @@
       }
     }
     return true;
   }
 
   /**
    * In CNC G-code G53 is like a modifier
    * It precedes a movement command (or other modifiers) on the same line.
    * This is the first command to use parser.chain() to make this possible.
    */
-  void GCodeSuite::G53() {
+  void GcodeSuite::G53() {
     // If this command has more following...
     if (parser.chain()) {
       const int8_t _system = active_coordinate_system;
       active_coordinate_system = -1;
       process_parsed_command();
       active_coordinate_system = _system;
     }
   }
 
   /**
@@ -73,18 +73,18 @@
    *
    * G92 is used to set the current workspace's offset.
    */
   void G54_59(uint8_t subcode=0) {
     const int8_t _space = parser.codenum - 54 + subcode;
     if (gcode.select_coordinate_system(_space)) {
       SERIAL_PROTOCOLLNPAIR("Select workspace ", _space);
       report_current_position();
     }
   }
-  void GCodeSuite::G54() { G54_59(); }
-  void GCodeSuite::G55() { G54_59(); }
-  void GCodeSuite::G56() { G54_59(); }
-  void GCodeSuite::G57() { G54_59(); }
-  void GCodeSuite::G58() { G54_59(); }
-  void GCodeSuite::G59() { G54_59(parser.subcode); }
+  void GcodeSuite::G54() { G54_59(); }
+  void GcodeSuite::G55() { G54_59(); }
+  void GcodeSuite::G56() { G54_59(); }
+  void GcodeSuite::G57() { G54_59(); }
+  void GcodeSuite::G58() { G54_59(); }
+  void GcodeSuite::G59() { G54_59(parser.subcode); }
 
 #endif // CNC_COORDINATE_SYSTEMS

commit 2f73dec0778d396cf715627d7ffbd6d2ff5e4042
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Nov 13 01:50:05 2017 -0600

    Apply native workspace fixes for G92, G53-59

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
index 149c50250c..a00a65b6c7 100644
--- a/Marlin/src/gcode/geometry/G53-G59.cpp
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -20,42 +20,39 @@
  *
  */
 
 #include "../gcode.h"
 #include "../../module/motion.h"
 //#include "../../module/stepper.h"
 
 #if ENABLED(CNC_COORDINATE_SYSTEMS)
 
   /**
-   * Select a coordinate system and update the current position.
+   * Select a coordinate system and update the workspace offset.
    * System index -1 is used to specify machine-native.
    */
   bool GCodeSuite::select_coordinate_system(const int8_t _new) {
     if (active_coordinate_system == _new) return false;
     stepper.synchronize();
     float old_offset[XYZ] = { 0 }, new_offset[XYZ] = { 0 };
     if (WITHIN(active_coordinate_system, 0, MAX_COORDINATE_SYSTEMS - 1))
       COPY(old_offset, coordinate_system[active_coordinate_system]);
     if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
       COPY(new_offset, coordinate_system[_new]);
     active_coordinate_system = _new;
-    bool didXYZ = false;
     LOOP_XYZ(i) {
       const float diff = new_offset[i] - old_offset[i];
       if (diff) {
         position_shift[i] += diff;
         update_software_endstops((AxisEnum)i);
-        didXYZ = true;
       }
     }
-    if (didXYZ) SYNC_PLAN_POSITION_KINEMATIC();
     return true;
   }
 
   /**
    * In CNC G-code G53 is like a modifier
    * It precedes a movement command (or other modifiers) on the same line.
    * This is the first command to use parser.chain() to make this possible.
    */
   void GCodeSuite::G53() {
     // If this command has more following...

commit 1b40e9c46475a9f9c712eba5588c72256f7dd584
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 4 16:36:41 2017 -0500

    Implement CNC_COORDINATE_SYSTEMS

diff --git a/Marlin/src/gcode/geometry/G53-G59.cpp b/Marlin/src/gcode/geometry/G53-G59.cpp
new file mode 100644
index 0000000000..149c50250c
--- /dev/null
+++ b/Marlin/src/gcode/geometry/G53-G59.cpp
@@ -0,0 +1,93 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../gcode.h"
+#include "../../module/motion.h"
+//#include "../../module/stepper.h"
+
+#if ENABLED(CNC_COORDINATE_SYSTEMS)
+
+  /**
+   * Select a coordinate system and update the current position.
+   * System index -1 is used to specify machine-native.
+   */
+  bool GCodeSuite::select_coordinate_system(const int8_t _new) {
+    if (active_coordinate_system == _new) return false;
+    stepper.synchronize();
+    float old_offset[XYZ] = { 0 }, new_offset[XYZ] = { 0 };
+    if (WITHIN(active_coordinate_system, 0, MAX_COORDINATE_SYSTEMS - 1))
+      COPY(old_offset, coordinate_system[active_coordinate_system]);
+    if (WITHIN(_new, 0, MAX_COORDINATE_SYSTEMS - 1))
+      COPY(new_offset, coordinate_system[_new]);
+    active_coordinate_system = _new;
+    bool didXYZ = false;
+    LOOP_XYZ(i) {
+      const float diff = new_offset[i] - old_offset[i];
+      if (diff) {
+        position_shift[i] += diff;
+        update_software_endstops((AxisEnum)i);
+        didXYZ = true;
+      }
+    }
+    if (didXYZ) SYNC_PLAN_POSITION_KINEMATIC();
+    return true;
+  }
+
+  /**
+   * In CNC G-code G53 is like a modifier
+   * It precedes a movement command (or other modifiers) on the same line.
+   * This is the first command to use parser.chain() to make this possible.
+   */
+  void GCodeSuite::G53() {
+    // If this command has more following...
+    if (parser.chain()) {
+      const int8_t _system = active_coordinate_system;
+      active_coordinate_system = -1;
+      process_parsed_command();
+      active_coordinate_system = _system;
+    }
+  }
+
+  /**
+   * G54-G59.3: Select a new workspace
+   *
+   * A workspace is an XYZ offset to the machine native space.
+   * All workspaces default to 0,0,0 at start, or with EEPROM
+   * support they may be restored from a previous session.
+   *
+   * G92 is used to set the current workspace's offset.
+   */
+  void G54_59(uint8_t subcode=0) {
+    const int8_t _space = parser.codenum - 54 + subcode;
+    if (gcode.select_coordinate_system(_space)) {
+      SERIAL_PROTOCOLLNPAIR("Select workspace ", _space);
+      report_current_position();
+    }
+  }
+  void GCodeSuite::G54() { G54_59(); }
+  void GCodeSuite::G55() { G54_59(); }
+  void GCodeSuite::G56() { G54_59(); }
+  void GCodeSuite::G57() { G54_59(); }
+  void GCodeSuite::G58() { G54_59(); }
+  void GCodeSuite::G59() { G54_59(parser.subcode); }
+
+#endif // CNC_COORDINATE_SYSTEMS
