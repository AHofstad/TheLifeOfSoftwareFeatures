commit df40181357b08761766067ef5012b2b3d0e34d3e
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed May 4 17:25:02 2022 -0700

    üí• Num Axes and Multi-Stepper based on Driver Types (#24120)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 4fd08489d3..c42db203b6 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -27,21 +27,21 @@
 #include "../../gcode.h"
 #include "../../../feature/pause.h"
 #include "../../../module/motion.h"
 #include "../../../module/printcounter.h"
 #include "../../../lcd/marlinui.h"
 
 #if HAS_MULTI_EXTRUDER
   #include "../../../module/tool_change.h"
 #endif
 
-#if ENABLED(HAS_PRUSA_MMU2)
+#if HAS_PRUSA_MMU2
   #include "../../../feature/mmu/mmu2.h"
   #if ENABLED(MMU2_MENUS)
     #include "../../../lcd/menu/menu_mmu2.h"
   #endif
 #endif
 
 #if ENABLED(MIXING_EXTRUDER)
   #include "../../../feature/mixing.h"
 #endif
 

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 1679c90687..4fd08489d3 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -47,22 +47,28 @@
 
 #if HAS_FILAMENT_SENSOR
   #include "../../../feature/runout.h"
 #endif
 
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
- *  X[position] - Move to this X position, with Y
- *  Y[position] - Move to this Y position, with X
+ *  X[position] - Move to this X position (instead of NOZZLE_PARK_POINT.x)
+ *  Y[position] - Move to this Y position (instead of NOZZLE_PARK_POINT.y)
+ *  I[position] - Move to this I position (instead of NOZZLE_PARK_POINT.i)
+ *  J[position] - Move to this J position (instead of NOZZLE_PARK_POINT.j)
+ *  K[position] - Move to this K position (instead of NOZZLE_PARK_POINT.k)
+ *  C[position] - Move to this U position (instead of NOZZLE_PARK_POINT.u)
+ *  H[position] - Move to this V position (instead of NOZZLE_PARK_POINT.v)
+ *  O[position] - Move to this W position (instead of NOZZLE_PARK_POINT.w)
  *  U[distance] - Retract distance for removal (manual reload)
  *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
  *  R[temp]     - Resume temperature (in current units)
  *
  *  Default values are used for omitted arguments.
  */
 void GcodeSuite::M600() {
 
@@ -110,40 +116,39 @@ void GcodeSuite::M600() {
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
       tool_change(target_extruder);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.axisunitsval('E', E_AXIS, PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
 
   // Move XY axes to filament change position or given position
-  LINEAR_AXIS_CODE(
+  NUM_AXIS_CODE(
     if (parser.seenval('X')) park_point.x = parser.linearval('X'),
     if (parser.seenval('Y')) park_point.y = parser.linearval('Y'),
     if (parser.seenval('Z')) park_point.z = parser.linearval('Z'),    // Lift Z axis
-    if (parser.seenval(AXIS4_NAME)) park_point.i = parser.linearval(AXIS4_NAME),
-    if (parser.seenval(AXIS5_NAME)) park_point.j = parser.linearval(AXIS5_NAME),
-    if (parser.seenval(AXIS6_NAME)) park_point.k = parser.linearval(AXIS6_NAME)
+    if (parser.seenval('I')) park_point.i = parser.linearval('I'),
+    if (parser.seenval('J')) park_point.j = parser.linearval('J'),
+    if (parser.seenval('K')) park_point.k = parser.linearval('K'),
+    if (parser.seenval('C')) park_point.u = parser.linearval('C'),    // U axis
+    if (parser.seenval('H')) park_point.v = parser.linearval('H'),    // V axis
+    if (parser.seenval('O')) park_point.w = parser.linearval('O')     // W axis
   );
 
   #if HAS_HOTEND_OFFSET && NONE(DUAL_X_CARRIAGE, DELTA)
     park_point += hotend_offset[active_extruder];
   #endif
 
-  #if ENABLED(MMU2_MENUS)
-    // For MMU2, when enabled, reset retract value so it doesn't mess with MMU filament handling
-    const float unload_length = standardM600 ? -ABS(parser.axisunitsval('U', E_AXIS, fc_settings[active_extruder].unload_length)) : 0.5f;
-  #else
-    // Unload filament
-    const float unload_length = -ABS(parser.axisunitsval('U', E_AXIS, fc_settings[active_extruder].unload_length));
-  #endif
+  // Unload filament
+  // For MMU2, when enabled, reset retract value so it doesn't mess with MMU filament handling
+  const float unload_length = standardM600 ? -ABS(parser.axisunitsval('U', E_AXIS, fc_settings[active_extruder].unload_length)) : 0.5f;
 
   const int beep_count = parser.intval('B', -1
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       + 1 + FILAMENT_CHANGE_ALERT_BEEPS
     #endif
   );
 
   if (pause_print(retract, park_point, true, unload_length DXC_PASS)) {
     if (standardM600) {
       wait_for_confirmation(true, beep_count DXC_PASS);

commit 7bc9d15514f1c9b55dfb0cb5a0a5a13666f96a33
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jan 14 03:43:14 2022 -0600

    ü©π Followup to extra axes

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index edb06aa947..1679c90687 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -109,31 +109,28 @@ void GcodeSuite::M600() {
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
       tool_change(target_extruder);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.axisunitsval('E', E_AXIS, PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
 
-  // Lift Z axis first
-  if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
-
   // Move XY axes to filament change position or given position
   LINEAR_AXIS_CODE(
     if (parser.seenval('X')) park_point.x = parser.linearval('X'),
     if (parser.seenval('Y')) park_point.y = parser.linearval('Y'),
-    NOOP,
-    if (parser.seenval(AXIS4_NAME)) park_point.i = parser.linearval(AXIS4_NAME);
-    if (parser.seenval(AXIS5_NAME)) park_point.j = parser.linearval(AXIS5_NAME);
-    if (parser.seenval(AXIS6_NAME)) park_point.k = parser.linearval(AXIS6_NAME);
+    if (parser.seenval('Z')) park_point.z = parser.linearval('Z'),    // Lift Z axis
+    if (parser.seenval(AXIS4_NAME)) park_point.i = parser.linearval(AXIS4_NAME),
+    if (parser.seenval(AXIS5_NAME)) park_point.j = parser.linearval(AXIS5_NAME),
+    if (parser.seenval(AXIS6_NAME)) park_point.k = parser.linearval(AXIS6_NAME)
   );
 
   #if HAS_HOTEND_OFFSET && NONE(DUAL_X_CARRIAGE, DELTA)
     park_point += hotend_offset[active_extruder];
   #endif
 
   #if ENABLED(MMU2_MENUS)
     // For MMU2, when enabled, reset retract value so it doesn't mess with MMU filament handling
     const float unload_length = standardM600 ? -ABS(parser.axisunitsval('U', E_AXIS, fc_settings[active_extruder].unload_length)) : 0.5f;
   #else

commit 40481947fc1f11a01235c5c55333a4437fc45c5f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jan 14 03:14:13 2022 -0600

    üßë‚Äçüíª Misc. updates for extra axes (#23521)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index febb946bef..edb06aa947 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -94,43 +94,47 @@ void GcodeSuite::M600() {
       #endif
     }
   #endif
 
   const bool standardM600 = TERN1(MMU2_MENUS, !mmu2.enabled());
 
   // Show initial "wait for start" message
   if (standardM600)
     ui.pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
 
-  #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
-    // If needed, home before parking for filament change
-    home_if_needed(true);
-  #endif
+  // If needed, home before parking for filament change
+  TERN_(HOME_BEFORE_FILAMENT_CHANGE, home_if_needed(true));
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
       tool_change(target_extruder);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.axisunitsval('E', E_AXIS, PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
 
-  // Lift Z axis
+  // Lift Z axis first
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
-  if (parser.seenval('X')) park_point.x = parser.linearval('X');
-  if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
+  LINEAR_AXIS_CODE(
+    if (parser.seenval('X')) park_point.x = parser.linearval('X'),
+    if (parser.seenval('Y')) park_point.y = parser.linearval('Y'),
+    NOOP,
+    if (parser.seenval(AXIS4_NAME)) park_point.i = parser.linearval(AXIS4_NAME);
+    if (parser.seenval(AXIS5_NAME)) park_point.j = parser.linearval(AXIS5_NAME);
+    if (parser.seenval(AXIS6_NAME)) park_point.k = parser.linearval(AXIS6_NAME);
+  );
 
   #if HAS_HOTEND_OFFSET && NONE(DUAL_X_CARRIAGE, DELTA)
     park_point += hotend_offset[active_extruder];
   #endif
 
   #if ENABLED(MMU2_MENUS)
     // For MMU2, when enabled, reset retract value so it doesn't mess with MMU filament handling
     const float unload_length = standardM600 ? -ABS(parser.axisunitsval('U', E_AXIS, fc_settings[active_extruder].unload_length)) : 0.5f;
   #else
     // Unload filament

commit 13ce5aa1ed4ab4f8fc01f7ff6f7ad7884fc28ea9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 21 22:15:48 2021 -0600

    üé® Misc. cleanup

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 665967ca56..febb946bef 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -60,27 +60,27 @@
  *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
  *  R[temp]     - Resume temperature (in current units)
  *
  *  Default values are used for omitted arguments.
  */
 void GcodeSuite::M600() {
 
   #if ENABLED(MIXING_EXTRUDER)
-    const int8_t target_e_stepper = get_target_e_stepper_from_command();
-    if (target_e_stepper < 0) return;
+    const int8_t eindex = get_target_e_stepper_from_command();
+    if (eindex < 0) return;
 
     const uint8_t old_mixing_tool = mixer.get_current_vtool();
     mixer.T(MIXER_DIRECT_SET_TOOL);
 
-    MIXER_STEPPER_LOOP(i) mixer.set_collector(i, i == uint8_t(target_e_stepper) ? 1.0 : 0.0);
+    MIXER_STEPPER_LOOP(i) mixer.set_collector(i, i == uint8_t(eindex) ? 1.0 : 0.0);
     mixer.normalize();
 
     const int8_t target_extruder = active_extruder;
   #else
     const int8_t target_extruder = get_target_extruder_from_command();
     if (target_extruder < 0) return;
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;

commit 1dd9adbfe40f0423181773a3370fbbab27d0a990
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Dec 14 01:47:57 2021 +0100

    üö∏ Use M600 for disabled MMU (#21865)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index a95e3e02b4..665967ca56 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -27,22 +27,25 @@
 #include "../../gcode.h"
 #include "../../../feature/pause.h"
 #include "../../../module/motion.h"
 #include "../../../module/printcounter.h"
 #include "../../../lcd/marlinui.h"
 
 #if HAS_MULTI_EXTRUDER
   #include "../../../module/tool_change.h"
 #endif
 
-#if ENABLED(MMU2_MENUS)
-  #include "../../../lcd/menu/menu_mmu2.h"
+#if ENABLED(HAS_PRUSA_MMU2)
+  #include "../../../feature/mmu/mmu2.h"
+  #if ENABLED(MMU2_MENUS)
+    #include "../../../lcd/menu/menu_mmu2.h"
+  #endif
 #endif
 
 #if ENABLED(MIXING_EXTRUDER)
   #include "../../../feature/mixing.h"
 #endif
 
 #if HAS_FILAMENT_SENSOR
   #include "../../../feature/runout.h"
 #endif
 
@@ -85,24 +88,25 @@ void GcodeSuite::M600() {
                                    // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
       #if MULTI_FILAMENT_SENSOR
         if (idex_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT2_STATE) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
+  const bool standardM600 = TERN1(MMU2_MENUS, !mmu2.enabled());
+
   // Show initial "wait for start" message
-  #if DISABLED(MMU2_MENUS)
+  if (standardM600)
     ui.pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
-  #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // If needed, home before parking for filament change
     home_if_needed(true);
   #endif
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
@@ -119,48 +123,51 @@ void GcodeSuite::M600() {
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   #if HAS_HOTEND_OFFSET && NONE(DUAL_X_CARRIAGE, DELTA)
     park_point += hotend_offset[active_extruder];
   #endif
 
   #if ENABLED(MMU2_MENUS)
-    // For MMU2 reset retract and load/unload values so they don't mess with MMU filament handling
-    constexpr float unload_length = 0.5f,
-                    slow_load_length = 0.0f,
-                    fast_load_length = 0.0f;
+    // For MMU2, when enabled, reset retract value so it doesn't mess with MMU filament handling
+    const float unload_length = standardM600 ? -ABS(parser.axisunitsval('U', E_AXIS, fc_settings[active_extruder].unload_length)) : 0.5f;
   #else
     // Unload filament
     const float unload_length = -ABS(parser.axisunitsval('U', E_AXIS, fc_settings[active_extruder].unload_length));
-    // Slow load filament
-    constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;
-    // Fast load filament
-    const float fast_load_length = ABS(parser.axisunitsval('L', E_AXIS, fc_settings[active_extruder].load_length));
   #endif
 
   const int beep_count = parser.intval('B', -1
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       + 1 + FILAMENT_CHANGE_ALERT_BEEPS
     #endif
   );
 
   if (pause_print(retract, park_point, true, unload_length DXC_PASS)) {
-    #if ENABLED(MMU2_MENUS)
-      mmu2_M600();
-      resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
-    #else
+    if (standardM600) {
       wait_for_confirmation(true, beep_count DXC_PASS);
-      resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH,
-                   beep_count, (parser.seenval('R') ? parser.value_celsius() : 0) DXC_PASS);
-    #endif
+      resume_print(
+        FILAMENT_CHANGE_SLOW_LOAD_LENGTH,
+        ABS(parser.axisunitsval('L', E_AXIS, fc_settings[active_extruder].load_length)),
+        ADVANCED_PAUSE_PURGE_LENGTH,
+        beep_count,
+        parser.celsiusval('R')
+        DXC_PASS
+      );
+    }
+    else {
+      #if ENABLED(MMU2_MENUS)
+        mmu2_M600();
+        resume_print(0, 0, 0, beep_count, 0 DXC_PASS);
+      #endif
+    }
   }
 
   #if HAS_MULTI_EXTRUDER
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change);
   #endif
 
   TERN_(MIXING_EXTRUDER, mixer.T(old_mixing_tool)); // Restore original mixing tool
 }

commit a7549aac5c5efc7097d6ebe69b2d46b3e7acbfab
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 22 13:21:26 2021 -0500

    üé® Misc. issue review patches

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 541fa08350..a95e3e02b4 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -99,21 +99,21 @@ void GcodeSuite::M600() {
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // If needed, home before parking for filament change
     home_if_needed(true);
   #endif
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
-      tool_change(target_extruder, false);
+      tool_change(target_extruder);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.axisunitsval('E', E_AXIS, PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
@@ -152,17 +152,17 @@ void GcodeSuite::M600() {
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH,
                    beep_count, (parser.seenval('R') ? parser.value_celsius() : 0) DXC_PASS);
     #endif
   }
 
   #if HAS_MULTI_EXTRUDER
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
-      tool_change(active_extruder_before_filament_change, false);
+      tool_change(active_extruder_before_filament_change);
   #endif
 
   TERN_(MIXING_EXTRUDER, mixer.T(old_mixing_tool)); // Restore original mixing tool
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit 6bdd0fcda183068dcd8fe797a9a835765c3efe9e
Author: qwewer0 <57561110+qwewer0@users.noreply.github.com>
Date:   Mon Jun 14 23:52:42 2021 +0200

    ‚ö°Ô∏è Home Z (and maybe XY) at the start of G35 (#22060)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 2daa7d999a..541fa08350 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -92,21 +92,21 @@ void GcodeSuite::M600() {
     }
   #endif
 
   // Show initial "wait for start" message
   #if DISABLED(MMU2_MENUS)
     ui.pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // If needed, home before parking for filament change
-    if (!all_axes_trusted()) home_all_axes(true);
+    home_if_needed(true);
   #endif
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
       tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position

commit 49548c343deb1e7f38f6027af20c02a79dbe5031
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 9 03:50:51 2021 -0500

    Optimize G-code flag parameters (#21849)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 6cab3ad352..2daa7d999a 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -74,22 +74,22 @@ void GcodeSuite::M600() {
     mixer.normalize();
 
     const int8_t target_extruder = active_extruder;
   #else
     const int8_t target_extruder = get_target_extruder_from_command();
     if (target_extruder < 0) return;
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
-    if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
-                              // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
+    if (!parser.seen_test('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
+                                   // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
       #if MULTI_FILAMENT_SENSOR
         if (idex_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT2_STATE) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
@@ -103,21 +103,21 @@ void GcodeSuite::M600() {
   #endif
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
       tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position
-  const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : (PAUSE_PARK_RETRACT_LENGTH));
+  const float retract = -ABS(parser.axisunitsval('E', E_AXIS, PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
@@ -125,29 +125,25 @@ void GcodeSuite::M600() {
     park_point += hotend_offset[active_extruder];
   #endif
 
   #if ENABLED(MMU2_MENUS)
     // For MMU2 reset retract and load/unload values so they don't mess with MMU filament handling
     constexpr float unload_length = 0.5f,
                     slow_load_length = 0.0f,
                     fast_load_length = 0.0f;
   #else
     // Unload filament
-    const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
-                                                      : fc_settings[active_extruder].unload_length);
-
+    const float unload_length = -ABS(parser.axisunitsval('U', E_AXIS, fc_settings[active_extruder].unload_length));
     // Slow load filament
     constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;
-
     // Fast load filament
-    const float fast_load_length = ABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
-                                                        : fc_settings[active_extruder].load_length);
+    const float fast_load_length = ABS(parser.axisunitsval('L', E_AXIS, fc_settings[active_extruder].load_length));
   #endif
 
   const int beep_count = parser.intval('B', -1
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       + 1 + FILAMENT_CHANGE_ALERT_BEEPS
     #endif
   );
 
   if (pause_print(retract, park_point, true, unload_length DXC_PASS)) {
     #if ENABLED(MMU2_MENUS)

commit dfc906930c9b31ddd4d70e9c0ccf15e369abd188
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon May 3 20:55:05 2021 -0500

    Pause and PLR refinements
    
    - Move `pause_print` argument `unload_length` after `show_lcd` so it's next to `DXC_ARGS`.
    - Tweak the position and conditions of PLR save in `resume_print`.
    - Add `Nozzle::park_mode_0_height` accessor to get the raised Z height.
    - Remove extraneous `recovery.save` from `dwin.cpp`.
    - Move PLR `info.volumetric...` to `flag`.
    - Remove some G-code spaces in PLR code
    - Document `pause.h` function declarations.

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 1033025fe3..6cab3ad352 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -142,21 +142,21 @@ void GcodeSuite::M600() {
     const float fast_load_length = ABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
                                                         : fc_settings[active_extruder].load_length);
   #endif
 
   const int beep_count = parser.intval('B', -1
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       + 1 + FILAMENT_CHANGE_ALERT_BEEPS
     #endif
   );
 
-  if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
+  if (pause_print(retract, park_point, true, unload_length DXC_PASS)) {
     #if ENABLED(MMU2_MENUS)
       mmu2_M600();
       resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH,
                    beep_count, (parser.seenval('R') ? parser.value_celsius() : 0) DXC_PASS);
     #endif
   }
 

commit 1aa421efe54eef40a5ba2ba7706908a4ca384586
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 28 19:50:17 2021 -0600

    Filament sensor cleanup

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 1c282f2052..1033025fe3 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -76,21 +76,21 @@ void GcodeSuite::M600() {
     const int8_t target_extruder = active_extruder;
   #else
     const int8_t target_extruder = get_target_extruder_from_command();
     if (target_extruder < 0) return;
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
     if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
                               // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
-      #if HAS_FILAMENT_SENSOR && NUM_RUNOUT_SENSORS > 1
+      #if MULTI_FILAMENT_SENSOR
         if (idex_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT2_STATE) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
   #if DISABLED(MMU2_MENUS)

commit c0870d417a68ff4303100f165282d41be9129a5c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jan 21 03:40:07 2021 -0600

    Move some MarlinCore and MarlinUI code (#20832)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index db8bc93a9f..1c282f2052 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -21,29 +21,26 @@
  */
 
 #include "../../../inc/MarlinConfig.h"
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
 
 #include "../../gcode.h"
 #include "../../../feature/pause.h"
 #include "../../../module/motion.h"
 #include "../../../module/printcounter.h"
+#include "../../../lcd/marlinui.h"
 
 #if HAS_MULTI_EXTRUDER
   #include "../../../module/tool_change.h"
 #endif
 
-#if HAS_LCD_MENU
-  #include "../../../lcd/marlinui.h"
-#endif
-
 #if ENABLED(MMU2_MENUS)
   #include "../../../lcd/menu/menu_mmu2.h"
 #endif
 
 #if ENABLED(MIXING_EXTRUDER)
   #include "../../../feature/mixing.h"
 #endif
 
 #if HAS_FILAMENT_SENSOR
   #include "../../../feature/runout.h"
@@ -89,22 +86,22 @@ void GcodeSuite::M600() {
       #if HAS_FILAMENT_SENSOR && NUM_RUNOUT_SENSORS > 1
         if (idex_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT2_STATE) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
-  #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
-    lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
+  #if DISABLED(MMU2_MENUS)
+    ui.pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // If needed, home before parking for filament change
     if (!all_axes_trusted()) home_all_axes(true);
   #endif
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;

commit bb597dcf66ac0baa3f3528bb34c3b4aad78ad520
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 17 12:08:40 2021 -0600

    Internal G29N for G28+G29 (#20800)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index bdaec7c7f9..db8bc93a9f 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -95,21 +95,21 @@ void GcodeSuite::M600() {
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // If needed, home before parking for filament change
-    if (!all_axes_trusted()) home_all_axes();
+    if (!all_axes_trusted()) home_all_axes(true);
   #endif
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
       tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position

commit 8fd8772a6fffe63d99d0b88aec7a77d283df8584
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 29 19:06:40 2020 -0600

    Adjust axis homed / trusted methods (#20323)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index e676ed38a4..bdaec7c7f9 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -95,21 +95,21 @@ void GcodeSuite::M600() {
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // If needed, home before parking for filament change
-    if (!all_axes_known()) home_all_axes();
+    if (!all_axes_trusted()) home_all_axes();
   #endif
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
       tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position

commit 0465e0ae3aaec257618d095f7e2b28ef677dbe4a
Author: Costas Basdekis <costas.basdekis@gmail.com>
Date:   Wed Nov 11 06:39:23 2020 +0000

    Distinct runout states (#19965)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 0af68333ca..e676ed38a4 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -81,21 +81,21 @@ void GcodeSuite::M600() {
     const int8_t target_extruder = get_target_extruder_from_command();
     if (target_extruder < 0) return;
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
     if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
                               // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
       #if HAS_FILAMENT_SENSOR && NUM_RUNOUT_SENSORS > 1
         if (idex_is_duplicating())
-          DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_STATE) ? 1 : 0;
+          DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT2_STATE) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif

commit eaf6777a6643a6fab23ceaaa4699cb2466ea6b83
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 16 19:36:25 2020 -0500

    Rename ultralcd => marlinui

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 5f3573ef83..0af68333ca 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -27,21 +27,21 @@
 #include "../../gcode.h"
 #include "../../../feature/pause.h"
 #include "../../../module/motion.h"
 #include "../../../module/printcounter.h"
 
 #if HAS_MULTI_EXTRUDER
   #include "../../../module/tool_change.h"
 #endif
 
 #if HAS_LCD_MENU
-  #include "../../../lcd/ultralcd.h"
+  #include "../../../lcd/marlinui.h"
 #endif
 
 #if ENABLED(MMU2_MENUS)
   #include "../../../lcd/menu/menu_mmu2.h"
 #endif
 
 #if ENABLED(MIXING_EXTRUDER)
   #include "../../../feature/mixing.h"
 #endif
 

commit 418b3e5ee26c0284561f07cf462af27971715d12
Author: nb-rapidia <43864438+nb-rapidia@users.noreply.github.com>
Date:   Fri Oct 16 14:59:55 2020 -0700

    Fix IDEX layer shift and DIR states (#19756)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 7c9be54b29..5f3573ef83 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -80,42 +80,42 @@ void GcodeSuite::M600() {
   #else
     const int8_t target_extruder = get_target_extruder_from_command();
     if (target_extruder < 0) return;
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
     if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
                               // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
       #if HAS_FILAMENT_SENSOR && NUM_RUNOUT_SENSORS > 1
-        if (dxc_is_duplicating())
+        if (idex_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_STATE) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // If needed, home before parking for filament change
     if (!all_axes_known()) home_all_axes();
   #endif
 
   #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
-    if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !dxc_is_duplicating()))
+    if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !idex_is_duplicating()))
       tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : (PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');

commit 76d8d1742c1d4a1efe0fd6c0645d3fc656bfd0b2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 20 18:29:08 2020 -0500

    Add multi-extruder condition

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index fe1d90109e..7c9be54b29 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -22,21 +22,21 @@
 
 #include "../../../inc/MarlinConfig.h"
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
 
 #include "../../gcode.h"
 #include "../../../feature/pause.h"
 #include "../../../module/motion.h"
 #include "../../../module/printcounter.h"
 
-#if EXTRUDERS > 1
+#if HAS_MULTI_EXTRUDER
   #include "../../../module/tool_change.h"
 #endif
 
 #if HAS_LCD_MENU
   #include "../../../lcd/ultralcd.h"
 #endif
 
 #if ENABLED(MMU2_MENUS)
   #include "../../../lcd/menu/menu_mmu2.h"
 #endif
@@ -98,21 +98,21 @@ void GcodeSuite::M600() {
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // If needed, home before parking for filament change
     if (!all_axes_known()) home_all_axes();
   #endif
 
-  #if EXTRUDERS > 1
+  #if HAS_MULTI_EXTRUDER
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !dxc_is_duplicating()))
       tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : (PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
@@ -156,20 +156,20 @@ void GcodeSuite::M600() {
     #if ENABLED(MMU2_MENUS)
       mmu2_M600();
       resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH,
                    beep_count, (parser.seenval('R') ? parser.value_celsius() : 0) DXC_PASS);
     #endif
   }
 
-  #if EXTRUDERS > 1
+  #if HAS_MULTI_EXTRUDER
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, false);
   #endif
 
   TERN_(MIXING_EXTRUDER, mixer.T(old_mixing_tool)); // Restore original mixing tool
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit b2ba9009d045fc21e7a923e92ab9a91e4275247d
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Sep 10 23:47:58 2020 +0200

    Fix "too cold" in M600 (#19332)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index b78608f7ae..fe1d90109e 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -155,23 +155,20 @@ void GcodeSuite::M600() {
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
     #if ENABLED(MMU2_MENUS)
       mmu2_M600();
       resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH,
                    beep_count, (parser.seenval('R') ? parser.value_celsius() : 0) DXC_PASS);
     #endif
   }
-  else {
-    TERN_(HAS_FILAMENT_SENSOR, runout.reset());
-  }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, false);
   #endif
 
   TERN_(MIXING_EXTRUDER, mixer.T(old_mixing_tool)); // Restore original mixing tool
 }
 

commit 828a582f4dfc719dbb519b89cccf621a5184d2a1
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Tue Sep 8 04:29:45 2020 +0200

    Make M600 heat up the nozzle. Reset runout on fail. (#19298)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 673c7387ef..b78608f7ae 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -38,20 +38,24 @@
 #endif
 
 #if ENABLED(MMU2_MENUS)
   #include "../../../lcd/menu/menu_mmu2.h"
 #endif
 
 #if ENABLED(MIXING_EXTRUDER)
   #include "../../../feature/mixing.h"
 #endif
 
+#if HAS_FILAMENT_SENSOR
+  #include "../../../feature/runout.h"
+#endif
+
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
  *  U[distance] - Retract distance for removal (manual reload)
  *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
@@ -151,20 +155,23 @@ void GcodeSuite::M600() {
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
     #if ENABLED(MMU2_MENUS)
       mmu2_M600();
       resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH,
                    beep_count, (parser.seenval('R') ? parser.value_celsius() : 0) DXC_PASS);
     #endif
   }
+  else {
+    TERN_(HAS_FILAMENT_SENSOR, runout.reset());
+  }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, false);
   #endif
 
   TERN_(MIXING_EXTRUDER, mixer.T(old_mixing_tool)); // Restore original mixing tool
 }
 

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 844dfba3d0..673c7387ef 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 #include "../../../inc/MarlinConfig.h"
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
 
 #include "../../gcode.h"
 #include "../../../feature/pause.h"
 #include "../../../module/motion.h"

commit c02451b602d6ee24d09f4f41269c85c0972a2279
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Mon Jul 6 05:42:19 2020 +0700

    Filament Runout Inverting => State (#18537)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 815fb8078d..844dfba3d0 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -77,21 +77,21 @@ void GcodeSuite::M600() {
     const int8_t target_extruder = get_target_extruder_from_command();
     if (target_extruder < 0) return;
   #endif
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
     if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
                               // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
       #if HAS_FILAMENT_SENSOR && NUM_RUNOUT_SENSORS > 1
         if (dxc_is_duplicating())
-          DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
+          DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_STATE) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif

commit 5a92462c0fa8fdd84ea315c62c89f5fed0978224
Author: thisiskeithb <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed May 13 12:26:27 2020 -0700

    Less ambiguous option comment (#17983)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 6c351daf79..815fb8078d 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -90,21 +90,21 @@ void GcodeSuite::M600() {
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
-    // Don't allow filament change without homing first
+    // If needed, home before parking for filament change
     if (!all_axes_known()) home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !dxc_is_duplicating()))
       tool_change(target_extruder, false);
   #endif
 

commit 1475fd312a1572e1d43978f669bce02a72f63dab
Author: chestwood96 <adi.joachim12@gmail.com>
Date:   Mon May 11 09:06:31 2020 +0200

    M600 R<resume temperature> (#17919)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index c22e32ceee..6c351daf79 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -49,20 +49,21 @@
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
  *  U[distance] - Retract distance for removal (manual reload)
  *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
+ *  R[temp]     - Resume temperature (in current units)
  *
  *  Default values are used for omitted arguments.
  */
 void GcodeSuite::M600() {
 
   #if ENABLED(MIXING_EXTRUDER)
     const int8_t target_e_stepper = get_target_e_stepper_from_command();
     if (target_e_stepper < 0) return;
 
     const uint8_t old_mixing_tool = mixer.get_current_vtool();
@@ -146,21 +147,22 @@ void GcodeSuite::M600() {
       + 1 + FILAMENT_CHANGE_ALERT_BEEPS
     #endif
   );
 
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
     #if ENABLED(MMU2_MENUS)
       mmu2_M600();
       resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
-      resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
+      resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH,
+                   beep_count, (parser.seenval('R') ? parser.value_celsius() : 0) DXC_PASS);
     #endif
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, false);
   #endif
 
   TERN_(MIXING_EXTRUDER, mixer.T(old_mixing_tool)); // Restore original mixing tool

commit c536b8de629807b489f054051bb120457f112a11
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 25 17:53:06 2020 -0500

    Apply ternary macros

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 5193864a07..c22e32ceee 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -96,26 +96,22 @@ void GcodeSuite::M600() {
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (!all_axes_known()) home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
-    if (
-      active_extruder != target_extruder
-      #if ENABLED(DUAL_X_CARRIAGE)
-        && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_MIRRORED_MODE
-      #endif
-    ) tool_change(target_extruder, false);
+    if (active_extruder != target_extruder && TERN1(DUAL_X_CARRIAGE, !dxc_is_duplicating()))
+      tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : (PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 

commit 02a054cda466fc8d4e417b0049a0272dd78f90ba
Author: thisiskeithb <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sat Apr 25 18:56:54 2020 -0700

    HOME_BEFORE_FILAMENT_CHANGE on any axis unknown (#17681)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index be4390aafc..5193864a07 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -90,21 +90,21 @@ void GcodeSuite::M600() {
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
-    if (axes_need_homing()) home_all_axes();
+    if (!all_axes_known()) home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (
       active_extruder != target_extruder
       #if ENABLED(DUAL_X_CARRIAGE)
         && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_MIRRORED_MODE
       #endif

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index fc7702796b..be4390aafc 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -105,25 +105,21 @@ void GcodeSuite::M600() {
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (
       active_extruder != target_extruder
       #if ENABLED(DUAL_X_CARRIAGE)
         && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_MIRRORED_MODE
       #endif
     ) tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position
-  const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
-    #ifdef PAUSE_PARK_RETRACT_LENGTH
-      + (PAUSE_PARK_RETRACT_LENGTH)
-    #endif
-  );
+  const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : (PAUSE_PARK_RETRACT_LENGTH));
 
   xyz_pos_t park_point NOZZLE_PARK_POINT;
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
@@ -142,40 +138,36 @@ void GcodeSuite::M600() {
                                                       : fc_settings[active_extruder].unload_length);
 
     // Slow load filament
     constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;
 
     // Fast load filament
     const float fast_load_length = ABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
                                                         : fc_settings[active_extruder].load_length);
   #endif
 
-  const int beep_count = parser.intval('B',
+  const int beep_count = parser.intval('B', -1
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
-      FILAMENT_CHANGE_ALERT_BEEPS
-    #else
-      -1
+      + 1 + FILAMENT_CHANGE_ALERT_BEEPS
     #endif
   );
 
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
     #if ENABLED(MMU2_MENUS)
       mmu2_M600();
       resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
     #endif
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, false);
   #endif
 
-  #if ENABLED(MIXING_EXTRUDER)
-    mixer.T(old_mixing_tool); // Restore original mixing tool
-  #endif
+  TERN_(MIXING_EXTRUDER, mixer.T(old_mixing_tool)); // Restore original mixing tool
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 4056a398e4..fc7702796b 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 50e4545255605eb506c20eb107270038b0fe7bdb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 29 04:25:39 2019 -0500

    Add custom types for position (#15204)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index f2ade740b4..4056a398e4 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -53,21 +53,20 @@
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
  *  U[distance] - Retract distance for removal (manual reload)
  *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
  *
  *  Default values are used for omitted arguments.
  */
 void GcodeSuite::M600() {
-  point_t park_point = NOZZLE_PARK_POINT;
 
   #if ENABLED(MIXING_EXTRUDER)
     const int8_t target_e_stepper = get_target_e_stepper_from_command();
     if (target_e_stepper < 0) return;
 
     const uint8_t old_mixing_tool = mixer.get_current_vtool();
     mixer.T(MIXER_DIRECT_SET_TOOL);
 
     MIXER_STEPPER_LOOP(i) mixer.set_collector(i, i == uint8_t(target_e_stepper) ? 1.0 : 0.0);
     mixer.normalize();
@@ -112,30 +111,31 @@ void GcodeSuite::M600() {
     ) tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       + (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   );
 
+  xyz_pos_t park_point NOZZLE_PARK_POINT;
+
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   #if HAS_HOTEND_OFFSET && NONE(DUAL_X_CARRIAGE, DELTA)
-    park_point.x += hotend_offset[X_AXIS][active_extruder];
-    park_point.y += hotend_offset[Y_AXIS][active_extruder];
+    park_point += hotend_offset[active_extruder];
   #endif
 
   #if ENABLED(MMU2_MENUS)
     // For MMU2 reset retract and load/unload values so they don't mess with MMU filament handling
     constexpr float unload_length = 0.5f,
                     slow_load_length = 0.0f,
                     fast_load_length = 0.0f;
   #else
     // Unload filament
     const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)

commit b2e1f77f58a67ac02503cbe36b22a21e5afaeac0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 25 21:01:29 2019 -0500

    Fix extraneous "Home XYZ First" message

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 6cadbe6080..f2ade740b4 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -91,21 +91,21 @@ void GcodeSuite::M600() {
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
-    if (axis_unhomed_error()) home_all_axes();
+    if (axes_need_homing()) home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (
       active_extruder != target_extruder
       #if ENABLED(DUAL_X_CARRIAGE)
         && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_MIRRORED_MODE
       #endif

commit fe0224104498a42a3921b97ef3902581fba6c309
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 5 18:20:15 2019 -0500

    NONE on combined options

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 5daf9f57a9..6cadbe6080 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -119,21 +119,21 @@ void GcodeSuite::M600() {
     #endif
   );
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
-  #if HAS_HOTEND_OFFSET && DISABLED(DUAL_X_CARRIAGE, DELTA)
+  #if HAS_HOTEND_OFFSET && NONE(DUAL_X_CARRIAGE, DELTA)
     park_point.x += hotend_offset[X_AXIS][active_extruder];
     park_point.y += hotend_offset[Y_AXIS][active_extruder];
   #endif
 
   #if ENABLED(MMU2_MENUS)
     // For MMU2 reset retract and load/unload values so they don't mess with MMU filament handling
     constexpr float unload_length = 0.5f,
                     slow_load_length = 0.0f,
                     fast_load_length = 0.0f;
   #else

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 722487b679..5daf9f57a9 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit aa0383a83b7bc45b86753ef9f5adb41da09c76df
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Jun 23 21:00:48 2019 -0400

    Enhance IDEX toolchange auto-return w/ no park, full control (#14117)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index fe34541700..722487b679 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -102,21 +102,21 @@ void GcodeSuite::M600() {
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (
       active_extruder != target_extruder
       #if ENABLED(DUAL_X_CARRIAGE)
         && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_MIRRORED_MODE
       #endif
-    ) tool_change(target_extruder, 0, false);
+    ) tool_change(target_extruder, false);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       + (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   );
 
   // Lift Z axis
@@ -163,19 +163,19 @@ void GcodeSuite::M600() {
       resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
     #endif
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
-      tool_change(active_extruder_before_filament_change, 0, false);
+      tool_change(active_extruder_before_filament_change, false);
   #endif
 
   #if ENABLED(MIXING_EXTRUDER)
     mixer.T(old_mixing_tool); // Restore original mixing tool
   #endif
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit b14cc0d7c5d6e029ade5e96a5692d97553221142
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun May 26 15:29:54 2019 -0500

    Remove extra gcode. prefix

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 147cc9c573..fe34541700 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -91,21 +91,21 @@ void GcodeSuite::M600() {
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
-    if (axis_unhomed_error()) gcode.home_all_axes();
+    if (axis_unhomed_error()) home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (
       active_extruder != target_extruder
       #if ENABLED(DUAL_X_CARRIAGE)
         && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_MIRRORED_MODE
       #endif

commit ee243e4edfe45fa855d4ff71abf8a9a118b66369
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Wed May 1 22:55:58 2019 -0400

    Fix mixing extruder filament change (#13803)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 78e7e8e658..147cc9c573 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -34,39 +34,56 @@
 #endif
 
 #if HAS_LCD_MENU
   #include "../../../lcd/ultralcd.h"
 #endif
 
 #if ENABLED(MMU2_MENUS)
   #include "../../../lcd/menu/menu_mmu2.h"
 #endif
 
+#if ENABLED(MIXING_EXTRUDER)
+  #include "../../../feature/mixing.h"
+#endif
+
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
  *  U[distance] - Retract distance for removal (manual reload)
  *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
  *
  *  Default values are used for omitted arguments.
  */
 void GcodeSuite::M600() {
   point_t park_point = NOZZLE_PARK_POINT;
 
-  const int8_t target_extruder = get_target_extruder_from_command();
-  if (target_extruder < 0) return;
+  #if ENABLED(MIXING_EXTRUDER)
+    const int8_t target_e_stepper = get_target_e_stepper_from_command();
+    if (target_e_stepper < 0) return;
+
+    const uint8_t old_mixing_tool = mixer.get_current_vtool();
+    mixer.T(MIXER_DIRECT_SET_TOOL);
+
+    MIXER_STEPPER_LOOP(i) mixer.set_collector(i, i == uint8_t(target_e_stepper) ? 1.0 : 0.0);
+    mixer.normalize();
+
+    const int8_t target_extruder = active_extruder;
+  #else
+    const int8_t target_extruder = get_target_extruder_from_command();
+    if (target_extruder < 0) return;
+  #endif
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
     if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
                               // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
       #if HAS_FILAMENT_SENSOR && NUM_RUNOUT_SENSORS > 1
         if (dxc_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
@@ -148,13 +165,17 @@ void GcodeSuite::M600() {
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
     #endif
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, 0, false);
   #endif
+
+  #if ENABLED(MIXING_EXTRUDER)
+    mixer.T(old_mixing_tool); // Restore original mixing tool
+  #endif
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit b376c7e374bbbc2cb69b6009c619f923f42f84b3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Mar 17 05:50:06 2019 -0500

    Group DISABLED items

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 01a621b308..78e7e8e658 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -102,21 +102,21 @@ void GcodeSuite::M600() {
     #endif
   );
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
-  #if HAS_HOTEND_OFFSET && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
+  #if HAS_HOTEND_OFFSET && DISABLED(DUAL_X_CARRIAGE, DELTA)
     park_point.x += hotend_offset[X_AXIS][active_extruder];
     park_point.y += hotend_offset[Y_AXIS][active_extruder];
   #endif
 
   #if ENABLED(MMU2_MENUS)
     // For MMU2 reset retract and load/unload values so they don't mess with MMU filament handling
     constexpr float unload_length = 0.5f,
                     slow_load_length = 0.0f,
                     fast_load_length = 0.0f;
   #else

commit 09eb30dc05a727e3816ab5a407f02ada18700e23
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Fri Mar 15 23:46:27 2019 -0400

    IDEX Mirror mode based on Formbot / Vivedino Symmetric mode (#13404)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index c8a82a147e..01a621b308 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -83,21 +83,21 @@ void GcodeSuite::M600() {
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) gcode.home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (
       active_extruder != target_extruder
       #if ENABLED(DUAL_X_CARRIAGE)
-        && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_SCALED_DUPLICATION_MODE
+        && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_MIRRORED_MODE
       #endif
     ) tool_change(target_extruder, 0, false);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       + (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   );

commit 9a515cbd3268b30eb7a4dc9ea0f96f3a253d9063
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 14 02:26:07 2019 -0500

    Fix Pause Print message and behavior (#13394)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 6ca278c10f..c8a82a147e 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -69,21 +69,21 @@ void GcodeSuite::M600() {
         if (dxc_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
-    lcd_advanced_pause_show_message(ADVANCED_PAUSE_MESSAGE_INIT, ADVANCED_PAUSE_MODE_PAUSE_PRINT, target_extruder);
+    lcd_pause_show_message(PAUSE_MESSAGE_CHANGING, PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) gcode.home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;

commit 00fc43144af99b257cdc5e935a50688a3448ace2
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Fri Mar 8 21:13:24 2019 -0700

    Follow up fixes to various PRs. (#13334)
    
    - Ensure `MarlinUI:get_progress` is defined for `ExtUI`.
    - Fix for `BACKLASH_SMOOTHING` with small segments.
      `BACKLASH_SMOOTHING` with extremely small segments failed to fully correct due to the correction factor being rounded down. Rounding up ensures the entire backlash will converge to zero even for small segments.
    - Add pinout for the beta revision `EINSY_RETRO`.
    - Update soft endstops with tool offsets (for toolchange et. al. move clamping) (#12568)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index d42df6f5ab..6ca278c10f 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -103,22 +103,22 @@ void GcodeSuite::M600() {
   );
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   #if HAS_HOTEND_OFFSET && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
-    park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
-    park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
+    park_point.x += hotend_offset[X_AXIS][active_extruder];
+    park_point.y += hotend_offset[Y_AXIS][active_extruder];
   #endif
 
   #if ENABLED(MMU2_MENUS)
     // For MMU2 reset retract and load/unload values so they don't mess with MMU filament handling
     constexpr float unload_length = 0.5f,
                     slow_load_length = 0.0f,
                     fast_load_length = 0.0f;
   #else
     // Unload filament
     const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)

commit 7cf9b93f26f728f0104dc9b930f6b23096639d98
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 20:08:34 2019 -0600

    Add HAS_FILAMENT_SENSOR ahead of 12962

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 650201f8e1..d42df6f5ab 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -58,21 +58,21 @@
 void GcodeSuite::M600() {
   point_t park_point = NOZZLE_PARK_POINT;
 
   const int8_t target_extruder = get_target_extruder_from_command();
   if (target_extruder < 0) return;
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
     if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
                               // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
-      #if ENABLED(FILAMENT_RUNOUT_SENSOR) && NUM_RUNOUT_SENSORS > 1
+      #if HAS_FILAMENT_SENSOR && NUM_RUNOUT_SENSORS > 1
         if (dxc_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
   #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 093cb2f796..650201f8e1 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit bace52afd7de9e5ac2fa503f813cd138050d971c
Author: Roman Moravƒç√≠k <roman.moravcik@gmail.com>
Date:   Tue Feb 12 19:55:49 2019 +0100

    Fixed compilation with MMU2_MENUS disabled (#13140)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 7f5f173425..093cb2f796 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -30,21 +30,21 @@
 #include "../../../module/printcounter.h"
 
 #if EXTRUDERS > 1
   #include "../../../module/tool_change.h"
 #endif
 
 #if HAS_LCD_MENU
   #include "../../../lcd/ultralcd.h"
 #endif
 
-#if ENABLED(PRUSA_MMU2)
+#if ENABLED(MMU2_MENUS)
   #include "../../../lcd/menu/menu_mmu2.h"
 #endif
 
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
@@ -68,21 +68,21 @@ void GcodeSuite::M600() {
       #if ENABLED(FILAMENT_RUNOUT_SENSOR) && NUM_RUNOUT_SENSORS > 1
         if (dxc_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
-  #if HAS_LCD_MENU && DISABLED(PRUSA_MMU2)
+  #if HAS_LCD_MENU && DISABLED(MMU2_MENUS)
     lcd_advanced_pause_show_message(ADVANCED_PAUSE_MESSAGE_INIT, ADVANCED_PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) gcode.home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
@@ -107,21 +107,21 @@ void GcodeSuite::M600() {
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   #if HAS_HOTEND_OFFSET && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
-  #if ENABLED(PRUSA_MMU2)
+  #if ENABLED(MMU2_MENUS)
     // For MMU2 reset retract and load/unload values so they don't mess with MMU filament handling
     constexpr float unload_length = 0.5f,
                     slow_load_length = 0.0f,
                     fast_load_length = 0.0f;
   #else
     // Unload filament
     const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
                                                       : fc_settings[active_extruder].unload_length);
 
     // Slow load filament
@@ -134,21 +134,21 @@ void GcodeSuite::M600() {
 
   const int beep_count = parser.intval('B',
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
-    #if ENABLED(PRUSA_MMU2)
+    #if ENABLED(MMU2_MENUS)
       mmu2_M600();
       resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
     #else
       wait_for_confirmation(true, beep_count DXC_PASS);
       resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
     #endif
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed

commit f269766408fd87a95dfb36df6f30f550235b32e8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 6 17:38:46 2019 -0600

    Put the MMU2 menu with the others

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 72cc96f2d0..7f5f173425 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -31,21 +31,21 @@
 
 #if EXTRUDERS > 1
   #include "../../../module/tool_change.h"
 #endif
 
 #if HAS_LCD_MENU
   #include "../../../lcd/ultralcd.h"
 #endif
 
 #if ENABLED(PRUSA_MMU2)
-  #include "../../../feature/prusa_MMU2/mmu2_menu.h"
+  #include "../../../lcd/menu/menu_mmu2.h"
 #endif
 
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
  *  U[distance] - Retract distance for removal (manual reload)

commit 6a57d0b381db99d67cccd48135cbdd2d831588a7
Author: revilor <oliver.rossmueller@web.de>
Date:   Fri Feb 1 02:10:52 2019 +0100

    Prusa MMU2 (#12967)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index d7e57845e4..72cc96f2d0 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -30,20 +30,24 @@
 #include "../../../module/printcounter.h"
 
 #if EXTRUDERS > 1
   #include "../../../module/tool_change.h"
 #endif
 
 #if HAS_LCD_MENU
   #include "../../../lcd/ultralcd.h"
 #endif
 
+#if ENABLED(PRUSA_MMU2)
+  #include "../../../feature/prusa_MMU2/mmu2_menu.h"
+#endif
+
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
  *  U[distance] - Retract distance for removal (manual reload)
  *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
@@ -64,21 +68,21 @@ void GcodeSuite::M600() {
       #if ENABLED(FILAMENT_RUNOUT_SENSOR) && NUM_RUNOUT_SENSORS > 1
         if (dxc_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
-  #if HAS_LCD_MENU
+  #if HAS_LCD_MENU && DISABLED(PRUSA_MMU2)
     lcd_advanced_pause_show_message(ADVANCED_PAUSE_MESSAGE_INIT, ADVANCED_PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) gcode.home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
@@ -103,42 +107,54 @@ void GcodeSuite::M600() {
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   #if HAS_HOTEND_OFFSET && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
-  // Unload filament
-  const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
-                                                     : fc_settings[active_extruder].unload_length);
-
-  // Slow load filament
-  constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;
-
-  // Fast load filament
-  const float fast_load_length = ABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
-                                                       : fc_settings[active_extruder].load_length);
+  #if ENABLED(PRUSA_MMU2)
+    // For MMU2 reset retract and load/unload values so they don't mess with MMU filament handling
+    constexpr float unload_length = 0.5f,
+                    slow_load_length = 0.0f,
+                    fast_load_length = 0.0f;
+  #else
+    // Unload filament
+    const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
+                                                      : fc_settings[active_extruder].unload_length);
+
+    // Slow load filament
+    constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;
+
+    // Fast load filament
+    const float fast_load_length = ABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
+                                                        : fc_settings[active_extruder].load_length);
+  #endif
 
   const int beep_count = parser.intval('B',
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
-    wait_for_confirmation(true, beep_count DXC_PASS);
-    resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
+    #if ENABLED(PRUSA_MMU2)
+      mmu2_M600();
+      resume_print(slow_load_length, fast_load_length, 0, beep_count DXC_PASS);
+    #else
+      wait_for_confirmation(true, beep_count DXC_PASS);
+      resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
+    #endif
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, 0, false);
   #endif
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit 530ef5846f4e02f50b46ba75486b5e9e29655899
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Thu Dec 27 12:38:35 2018 -0500

    Make nomove=false for toolchange on filament swap (#12739)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 0e01c9ddfe..d7e57845e4 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -81,21 +81,21 @@ void GcodeSuite::M600() {
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     const uint8_t active_extruder_before_filament_change = active_extruder;
     if (
       active_extruder != target_extruder
       #if ENABLED(DUAL_X_CARRIAGE)
         && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_SCALED_DUPLICATION_MODE
       #endif
-    ) tool_change(target_extruder, 0, true);
+    ) tool_change(target_extruder, 0, false);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       + (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   );
 
   // Lift Z axis
@@ -130,15 +130,15 @@ void GcodeSuite::M600() {
   );
 
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
     wait_for_confirmation(true, beep_count DXC_PASS);
     resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
-      tool_change(active_extruder_before_filament_change, 0, true);
+      tool_change(active_extruder_before_filament_change, 0, false);
   #endif
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit 03ef2d6c82048564db284bc3965595c561bf5840
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 28 19:28:31 2018 -0600

    Fix "paused" message and M125 called by M25 (#12551)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 850bbb3441..0e01c9ddfe 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -122,28 +122,23 @@ void GcodeSuite::M600() {
                                                        : fc_settings[active_extruder].load_length);
 
   const int beep_count = parser.intval('B',
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
-  const bool job_running = print_job_timer.isRunning();
-
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
     wait_for_confirmation(true, beep_count DXC_PASS);
     resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, 0, true);
   #endif
-
-  // Resume the print job timer if it was running
-  if (job_running) print_job_timer.start();
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit d2bb53702a5b8bc03d6691230f252a21ca3ee375
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 14 17:33:04 2018 -0600

    Optimize target_extruder, ignore T with mixing (#12432)
    
    * Optimize target_extruder, ignore T with mixing
    * Give G-code Tn parity with tool_change

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 92b431c435..850bbb3441 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -47,21 +47,22 @@
  *  U[distance] - Retract distance for removal (manual reload)
  *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
  *
  *  Default values are used for omitted arguments.
  */
 void GcodeSuite::M600() {
   point_t park_point = NOZZLE_PARK_POINT;
 
-  if (get_target_extruder_from_command()) return;
+  const int8_t target_extruder = get_target_extruder_from_command();
+  if (target_extruder < 0) return;
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
     if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
                               // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
       #if ENABLED(FILAMENT_RUNOUT_SENSOR) && NUM_RUNOUT_SENSORS > 1
         if (dxc_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
       #else
         DXC_ext = active_extruder;

commit 4c5ca89d8cc6a5818d47762e583492d98a99d1f6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Nov 6 04:13:48 2018 -0600

    Show the appropriate pause message (#12348)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 07a6167a11..92b431c435 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -124,21 +124,21 @@ void GcodeSuite::M600() {
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
   const bool job_running = print_job_timer.isRunning();
 
   if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
-    wait_for_filament_reload(beep_count DXC_PASS);
+    wait_for_confirmation(true, beep_count DXC_PASS);
     resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, 0, true);
   #endif
 
   // Resume the print job timer if it was running

commit 3583e2b4490e8fd6778d18003641c2fdd333e8a5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Oct 30 16:34:45 2018 -0500

    Followup to Menu Refactor (#12275)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 64661e6e5e..07a6167a11 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -26,21 +26,21 @@
 
 #include "../../gcode.h"
 #include "../../../feature/pause.h"
 #include "../../../module/motion.h"
 #include "../../../module/printcounter.h"
 
 #if EXTRUDERS > 1
   #include "../../../module/tool_change.h"
 #endif
 
-#if ENABLED(ULTIPANEL)
+#if HAS_LCD_MENU
   #include "../../../lcd/ultralcd.h"
 #endif
 
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
@@ -63,21 +63,21 @@ void GcodeSuite::M600() {
       #if ENABLED(FILAMENT_RUNOUT_SENSOR) && NUM_RUNOUT_SENSORS > 1
         if (dxc_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
-  #if ENABLED(ULTIPANEL)
+  #if HAS_LCD_MENU
     lcd_advanced_pause_show_message(ADVANCED_PAUSE_MESSAGE_INIT, ADVANCED_PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) gcode.home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified

commit d556dc18650e2185791834d7fe70b4acf45254bc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Oct 10 09:45:20 2018 -0500

    Fix and improve EEPROM storage (#12054)
    
    * Clean up Temperature PID
    * Improve EEPROM read/write/validate
    * Group `SINGLENOZZLE` saved settings
    * Group planner saved settings
    * Group filament change saved settings
    * Group skew saved settings
    * Group `FWRETRACT` saved settings

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index c471e03c6d..64661e6e5e 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -104,28 +104,28 @@ void GcodeSuite::M600() {
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   #if HAS_HOTEND_OFFSET && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
   // Unload filament
   const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
-                                                     : filament_change_unload_length[active_extruder]);
+                                                     : fc_settings[active_extruder].unload_length);
 
   // Slow load filament
   constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;
 
   // Fast load filament
   const float fast_load_length = ABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
-                                                       : filament_change_load_length[active_extruder]);
+                                                       : fc_settings[active_extruder].load_length);
 
   const int beep_count = parser.intval('B',
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
   const bool job_running = print_job_timer.isRunning();

commit e4ee607fc8cc925827d0e3ab7447251c720f73a1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 18 21:16:07 2018 -0500

    Fix Dual X FRS in M600
    
    Co-Authored-By: InsanityAutomation <insanityautomation@users.noreply.github.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 5bb54de65c..c471e03c6d 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -53,21 +53,21 @@
  */
 void GcodeSuite::M600() {
   point_t park_point = NOZZLE_PARK_POINT;
 
   if (get_target_extruder_from_command()) return;
 
   #if ENABLED(DUAL_X_CARRIAGE)
     int8_t DXC_ext = target_extruder;
     if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
                               // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
-      #if ENABLED(FILAMENT_RUNOUT_SENSOR)
+      #if ENABLED(FILAMENT_RUNOUT_SENSOR) && NUM_RUNOUT_SENSORS > 1
         if (dxc_is_duplicating())
           DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
       #else
         DXC_ext = active_extruder;
       #endif
     }
   #endif
 
   // Show initial "wait for start" message
   #if ENABLED(ULTIPANEL)

commit 0780913848eea5048947808dfcc9143131f094d3
Author: Roxy-3D <Roxy-3D@users.noreply.github.com>
Date:   Mon Sep 17 01:06:22 2018 -0500

    IDEX Improvements (#11848)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 42ed74dbe1..5bb54de65c 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -49,35 +49,52 @@
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
  *
  *  Default values are used for omitted arguments.
  */
 void GcodeSuite::M600() {
   point_t park_point = NOZZLE_PARK_POINT;
 
   if (get_target_extruder_from_command()) return;
 
+  #if ENABLED(DUAL_X_CARRIAGE)
+    int8_t DXC_ext = target_extruder;
+    if (!parser.seen('T')) {  // If no tool index is specified, M600 was (probably) sent in response to filament runout.
+                              // In this case, for duplicating modes set DXC_ext to the extruder that ran out.
+      #if ENABLED(FILAMENT_RUNOUT_SENSOR)
+        if (dxc_is_duplicating())
+          DXC_ext = (READ(FIL_RUNOUT2_PIN) == FIL_RUNOUT_INVERTING) ? 1 : 0;
+      #else
+        DXC_ext = active_extruder;
+      #endif
+    }
+  #endif
+
   // Show initial "wait for start" message
   #if ENABLED(ULTIPANEL)
     lcd_advanced_pause_show_message(ADVANCED_PAUSE_MESSAGE_INIT, ADVANCED_PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
-    if (axis_unhomed_error()) home_all_axes();
+    if (axis_unhomed_error()) gcode.home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
-    uint8_t active_extruder_before_filament_change = active_extruder;
-    if (active_extruder != target_extruder)
-      tool_change(target_extruder, 0, true);
+    const uint8_t active_extruder_before_filament_change = active_extruder;
+    if (
+      active_extruder != target_extruder
+      #if ENABLED(DUAL_X_CARRIAGE)
+        && dual_x_carriage_mode != DXC_DUPLICATION_MODE && dual_x_carriage_mode != DXC_SCALED_DUPLICATION_MODE
+      #endif
+    ) tool_change(target_extruder, 0, true);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       + (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   );
 
   // Lift Z axis
@@ -106,23 +123,23 @@ void GcodeSuite::M600() {
   const int beep_count = parser.intval('B',
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
   const bool job_running = print_job_timer.isRunning();
 
-  if (pause_print(retract, park_point, unload_length, true)) {
-    wait_for_filament_reload(beep_count);
-    resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count);
+  if (pause_print(retract, park_point, unload_length, true DXC_PASS)) {
+    wait_for_filament_reload(beep_count DXC_PASS);
+    resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count DXC_PASS);
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, 0, true);
   #endif
 
   // Resume the print job timer if it was running
   if (job_running) print_job_timer.start();

commit d1c9517903da3e7ab84e34ffb2c23d0772f2ce8c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Aug 24 21:26:29 2018 -0500

    Followup to hotend_offset[Z] patch

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index be03c736c9..42ed74dbe1 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -80,21 +80,21 @@ void GcodeSuite::M600() {
     #endif
   );
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
-  #if HOTENDS > 1 && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
+  #if HAS_HOTEND_OFFSET && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
   // Unload filament
   const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
                                                      : filament_change_unload_length[active_extruder]);
 
   // Slow load filament
   constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;

commit 99ecdf59af907ebb8d2d847863614094bb576e3f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun May 13 01:10:34 2018 -0500

    Smarter MIN, MAX, ABS macros
    
    Use macros that explicitly avoid double-evaluation and can be used for any datatype, replacing `min`, `max`, `abs`, `fabs`, `labs`, and `FABS`.
    
    Co-Authored-By: ejtagle <ejtagle@hotmail.com>

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 3fc4d70fc4..be03c736c9 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -67,47 +67,47 @@ void GcodeSuite::M600() {
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
     uint8_t active_extruder_before_filament_change = active_extruder;
     if (active_extruder != target_extruder)
       tool_change(target_extruder, 0, true);
   #endif
 
   // Initial retract before move to filament change position
-  const float retract = -FABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
+  const float retract = -ABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       + (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   );
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   #if HOTENDS > 1 && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
   // Unload filament
-  const float unload_length = -FABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
+  const float unload_length = -ABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
                                                      : filament_change_unload_length[active_extruder]);
 
   // Slow load filament
   constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;
 
   // Fast load filament
-  const float fast_load_length = FABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
+  const float fast_load_length = ABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
                                                        : filament_change_load_length[active_extruder]);
 
   const int beep_count = parser.intval('B',
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 

commit 2d9b0a66fe8bbd417f6b1dfef9651667aef383c1
Author: Sean <noingwhat@gmail.com>
Date:   Tue Mar 20 11:19:10 2018 -0700

    Add Filament Change accelerations

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 2a34f5baa4..3fc4d70fc4 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -73,53 +73,56 @@ void GcodeSuite::M600() {
       tool_change(target_extruder, 0, true);
   #endif
 
   // Initial retract before move to filament change position
   const float retract = -FABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       + (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   );
 
+  // Lift Z axis
+  if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
+
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
-  // Lift Z axis
-  if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
-
   #if HOTENDS > 1 && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
   // Unload filament
   const float unload_length = -FABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
                                                      : filament_change_unload_length[active_extruder]);
 
-  // Load filament
-  const float load_length = FABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
-                                                  : filament_change_load_length[active_extruder]);
+  // Slow load filament
+  constexpr float slow_load_length = FILAMENT_CHANGE_SLOW_LOAD_LENGTH;
+
+  // Fast load filament
+  const float fast_load_length = FABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
+                                                       : filament_change_load_length[active_extruder]);
 
   const int beep_count = parser.intval('B',
     #ifdef FILAMENT_CHANGE_ALERT_BEEPS
       FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
   const bool job_running = print_job_timer.isRunning();
 
   if (pause_print(retract, park_point, unload_length, true)) {
     wait_for_filament_reload(beep_count);
-    resume_print(load_length, ADVANCED_PAUSE_EXTRUDE_LENGTH, beep_count);
+    resume_print(slow_load_length, fast_load_length, ADVANCED_PAUSE_PURGE_LENGTH, beep_count);
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
     if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, 0, true);
   #endif
 
   // Resume the print job timer if it was running
   if (job_running) print_job_timer.start();

commit a6feb58837fa97167f5340abaa7b1175ca858450
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 16 00:46:42 2018 -0500

    Delta support for multiple hotends with offsets (#10118)

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index dd7a773598..2a34f5baa4 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -80,21 +80,21 @@ void GcodeSuite::M600() {
     #endif
   );
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
-  #if HOTENDS > 1 && DISABLED(DUAL_X_CARRIAGE)
+  #if HOTENDS > 1 && DISABLED(DUAL_X_CARRIAGE) && DISABLED(DELTA)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
   // Unload filament
   const float unload_length = -FABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
                                                      : filament_change_unload_length[active_extruder]);
 
   // Load filament
   const float load_length = FABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)

commit b1cd012aa6b9ec5347a0a009037063bbe1fb19e4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 22 04:37:40 2018 -0600

    Clean up and document load/unload/pause/resume

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 8589a48d93..dd7a773598 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -49,21 +49,21 @@
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
  *
  *  Default values are used for omitted arguments.
  */
 void GcodeSuite::M600() {
   point_t park_point = NOZZLE_PARK_POINT;
 
   if (get_target_extruder_from_command()) return;
 
-  // Show initial message
+  // Show initial "wait for start" message
   #if ENABLED(ULTIPANEL)
     lcd_advanced_pause_show_message(ADVANCED_PAUSE_MESSAGE_INIT, ADVANCED_PAUSE_MODE_PAUSE_PRINT, target_extruder);
   #endif
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) home_all_axes();
   #endif
 
   #if EXTRUDERS > 1

commit 7541316bb49303ce97e062da601e26426321c4ba
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 4 05:06:34 2018 -0600

    Add M701/M702 Filament Load/Unload, M603

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index c1793f6faf..8589a48d93 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -26,104 +26,103 @@
 
 #include "../../gcode.h"
 #include "../../../feature/pause.h"
 #include "../../../module/motion.h"
 #include "../../../module/printcounter.h"
 
 #if EXTRUDERS > 1
   #include "../../../module/tool_change.h"
 #endif
 
+#if ENABLED(ULTIPANEL)
+  #include "../../../lcd/ultralcd.h"
+#endif
+
 /**
  * M600: Pause for filament change
  *
- *  E[distance] - Retract the filament this far (negative value)
+ *  E[distance] - Retract the filament this far
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
- *  U[distance] - Retract distance for removal (negative value) (manual reload)
- *  L[distance] - Extrude distance for insertion (positive value) (manual reload)
+ *  U[distance] - Retract distance for removal (manual reload)
+ *  L[distance] - Extrude distance for insertion (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *  T[toolhead] - Select extruder for filament change
  *
  *  Default values are used for omitted arguments.
- *
  */
 void GcodeSuite::M600() {
   point_t park_point = NOZZLE_PARK_POINT;
 
+  if (get_target_extruder_from_command()) return;
+
+  // Show initial message
+  #if ENABLED(ULTIPANEL)
+    lcd_advanced_pause_show_message(ADVANCED_PAUSE_MESSAGE_INIT, ADVANCED_PAUSE_MODE_PAUSE_PRINT, target_extruder);
+  #endif
+
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) home_all_axes();
   #endif
 
   #if EXTRUDERS > 1
     // Change toolhead if specified
-    uint8_t active_extruder_before_filament_change = -1;
-    if (parser.seen('T')) {
-      const uint8_t extruder = parser.value_byte();
-      if (active_extruder != extruder) {
-        active_extruder_before_filament_change = active_extruder;
-        tool_change(extruder, 0, true);
-      }
-    }
+    uint8_t active_extruder_before_filament_change = active_extruder;
+    if (active_extruder != target_extruder)
+      tool_change(target_extruder, 0, true);
   #endif
 
   // Initial retract before move to filament change position
-  const float retract = parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
+  const float retract = -FABS(parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
-      - (PAUSE_PARK_RETRACT_LENGTH)
+      + (PAUSE_PARK_RETRACT_LENGTH)
     #endif
-  ;
+  );
 
   // Move XY axes to filament change position or given position
   if (parser.seenval('X')) park_point.x = parser.linearval('X');
   if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
   // Lift Z axis
   if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   #if HOTENDS > 1 && DISABLED(DUAL_X_CARRIAGE)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
   // Unload filament
-  const float unload_length = parser.seen('U') ? parser.value_axis_units(E_AXIS) : 0
-    #if defined(FILAMENT_CHANGE_UNLOAD_LENGTH) && FILAMENT_CHANGE_UNLOAD_LENGTH > 0
-      - (FILAMENT_CHANGE_UNLOAD_LENGTH)
-    #endif
-  ;
+  const float unload_length = -FABS(parser.seen('U') ? parser.value_axis_units(E_AXIS)
+                                                     : filament_change_unload_length[active_extruder]);
 
   // Load filament
-  const float load_length = parser.seen('L') ? parser.value_axis_units(E_AXIS) : 0
-    #ifdef FILAMENT_CHANGE_LOAD_LENGTH
-      + FILAMENT_CHANGE_LOAD_LENGTH
-    #endif
-  ;
+  const float load_length = FABS(parser.seen('L') ? parser.value_axis_units(E_AXIS)
+                                                  : filament_change_load_length[active_extruder]);
 
   const int beep_count = parser.intval('B',
-    #ifdef FILAMENT_CHANGE_NUMBER_OF_ALERT_BEEPS
-      FILAMENT_CHANGE_NUMBER_OF_ALERT_BEEPS
+    #ifdef FILAMENT_CHANGE_ALERT_BEEPS
+      FILAMENT_CHANGE_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
   const bool job_running = print_job_timer.isRunning();
 
-  if (pause_print(retract, park_point, unload_length, beep_count, true)) {
+  if (pause_print(retract, park_point, unload_length, true)) {
     wait_for_filament_reload(beep_count);
     resume_print(load_length, ADVANCED_PAUSE_EXTRUDE_LENGTH, beep_count);
   }
 
   #if EXTRUDERS > 1
     // Restore toolhead if it was changed
-    if (active_extruder_before_filament_change >= 0)
+    if (active_extruder_before_filament_change != active_extruder)
       tool_change(active_extruder_before_filament_change, 0, true);
   #endif
 
   // Resume the print job timer if it was running
   if (job_running) print_job_timer.start();
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit 9ecdd1f4c73c4302af465c2566c48d5618fd76c6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Dec 26 22:16:13 2017 -0600

    Multi extruder support for M600 and LCD

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 7b6bfb912a..c1793f6faf 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -17,67 +17,77 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 
 #include "../../../inc/MarlinConfig.h"
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
 
-#include "../../../feature/pause.h"
-
 #include "../../gcode.h"
+#include "../../../feature/pause.h"
 #include "../../../module/motion.h"
-#include "../../parser.h"
-
 #include "../../../module/printcounter.h"
 
+#if EXTRUDERS > 1
+  #include "../../../module/tool_change.h"
+#endif
+
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far (negative value)
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
  *  U[distance] - Retract distance for removal (negative value) (manual reload)
  *  L[distance] - Extrude distance for insertion (positive value) (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
+ *  T[toolhead] - Select extruder for filament change
  *
  *  Default values are used for omitted arguments.
  *
  */
 void GcodeSuite::M600() {
   point_t park_point = NOZZLE_PARK_POINT;
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) home_all_axes();
   #endif
 
+  #if EXTRUDERS > 1
+    // Change toolhead if specified
+    uint8_t active_extruder_before_filament_change = -1;
+    if (parser.seen('T')) {
+      const uint8_t extruder = parser.value_byte();
+      if (active_extruder != extruder) {
+        active_extruder_before_filament_change = active_extruder;
+        tool_change(extruder, 0, true);
+      }
+    }
+  #endif
+
   // Initial retract before move to filament change position
   const float retract = parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       - (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   ;
 
-  // Lift Z axis
-  if (parser.seenval('Z'))
-    park_point.z = parser.linearval('Z');
-
   // Move XY axes to filament change position or given position
-  if (parser.seenval('X'))
-    park_point.x = parser.linearval('X');
+  if (parser.seenval('X')) park_point.x = parser.linearval('X');
+  if (parser.seenval('Y')) park_point.y = parser.linearval('Y');
 
-  if (parser.seenval('Y'))
-    park_point.y = parser.linearval('Y');
+  // Lift Z axis
+  if (parser.seenval('Z')) park_point.z = parser.linearval('Z');
 
   #if HOTENDS > 1 && DISABLED(DUAL_X_CARRIAGE)
     park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
     park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
   #endif
 
   // Unload filament
   const float unload_length = parser.seen('U') ? parser.value_axis_units(E_AXIS) : 0
     #if defined(FILAMENT_CHANGE_UNLOAD_LENGTH) && FILAMENT_CHANGE_UNLOAD_LENGTH > 0
       - (FILAMENT_CHANGE_UNLOAD_LENGTH)
@@ -99,15 +109,21 @@ void GcodeSuite::M600() {
     #endif
   );
 
   const bool job_running = print_job_timer.isRunning();
 
   if (pause_print(retract, park_point, unload_length, beep_count, true)) {
     wait_for_filament_reload(beep_count);
     resume_print(load_length, ADVANCED_PAUSE_EXTRUDE_LENGTH, beep_count);
   }
 
+  #if EXTRUDERS > 1
+    // Restore toolhead if it was changed
+    if (active_extruder_before_filament_change >= 0)
+      tool_change(active_extruder_before_filament_change, 0, true);
+  #endif
+
   // Resume the print job timer if it was running
   if (job_running) print_job_timer.start();
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit f0a8a1a85344207870bc7528fa9dd445d5263adf
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Mon Dec 25 01:38:06 2017 -0600

    [2.0.x] Use NOZZLE_PARK_FEATURE for ADVANCED_PAUSE_FEATURE (#8866)
    
    * Use NOZZLE_PARK_FEATURE for ADVANCED_PAUSE_FEATURE

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 98dfe3cb6f..7b6bfb912a 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -40,51 +40,49 @@
  *  X[position] - Move to this X position, with Y
  *  Y[position] - Move to this Y position, with X
  *  U[distance] - Retract distance for removal (negative value) (manual reload)
  *  L[distance] - Extrude distance for insertion (positive value) (manual reload)
  *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
  *
  *  Default values are used for omitted arguments.
  *
  */
 void GcodeSuite::M600() {
+  point_t park_point = NOZZLE_PARK_POINT;
 
   #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
     // Don't allow filament change without homing first
     if (axis_unhomed_error()) home_all_axes();
   #endif
 
   // Initial retract before move to filament change position
   const float retract = parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
     #ifdef PAUSE_PARK_RETRACT_LENGTH
       - (PAUSE_PARK_RETRACT_LENGTH)
     #endif
   ;
 
   // Lift Z axis
-  const float z_lift = parser.linearval('Z', 0
-    #ifdef PAUSE_PARK_Z_ADD
-      + PAUSE_PARK_Z_ADD
-    #endif
-  );
+  if (parser.seenval('Z'))
+    park_point.z = parser.linearval('Z');
 
-  // Move XY axes to filament exchange position
-  const float x_pos = parser.linearval('X', 0
-    #ifdef PAUSE_PARK_X_POS
-      + PAUSE_PARK_X_POS
-    #endif
-  );
-  const float y_pos = parser.linearval('Y', 0
-    #ifdef PAUSE_PARK_Y_POS
-      + PAUSE_PARK_Y_POS
-    #endif
-  );
+  // Move XY axes to filament change position or given position
+  if (parser.seenval('X'))
+    park_point.x = parser.linearval('X');
+
+  if (parser.seenval('Y'))
+    park_point.y = parser.linearval('Y');
+
+  #if HOTENDS > 1 && DISABLED(DUAL_X_CARRIAGE)
+    park_point.x += (active_extruder ? hotend_offset[X_AXIS][active_extruder] : 0);
+    park_point.y += (active_extruder ? hotend_offset[Y_AXIS][active_extruder] : 0);
+  #endif
 
   // Unload filament
   const float unload_length = parser.seen('U') ? parser.value_axis_units(E_AXIS) : 0
     #if defined(FILAMENT_CHANGE_UNLOAD_LENGTH) && FILAMENT_CHANGE_UNLOAD_LENGTH > 0
       - (FILAMENT_CHANGE_UNLOAD_LENGTH)
     #endif
   ;
 
   // Load filament
   const float load_length = parser.seen('L') ? parser.value_axis_units(E_AXIS) : 0
@@ -96,20 +94,20 @@ void GcodeSuite::M600() {
   const int beep_count = parser.intval('B',
     #ifdef FILAMENT_CHANGE_NUMBER_OF_ALERT_BEEPS
       FILAMENT_CHANGE_NUMBER_OF_ALERT_BEEPS
     #else
       -1
     #endif
   );
 
   const bool job_running = print_job_timer.isRunning();
 
-  if (pause_print(retract, z_lift, x_pos, y_pos, unload_length, beep_count, true)) {
+  if (pause_print(retract, park_point, unload_length, beep_count, true)) {
     wait_for_filament_reload(beep_count);
     resume_print(load_length, ADVANCED_PAUSE_EXTRUDE_LENGTH, beep_count);
   }
 
   // Resume the print job timer if it was running
   if (job_running) print_job_timer.start();
 }
 
 #endif // ADVANCED_PAUSE_FEATURE

commit 3619a4cbea426f57855d4c0413c93e7365b6f50b
Author: gallynero <gallynero@gmail.com>
Date:   Fri Oct 13 09:08:02 2017 +0200

    fix 'axis_unhomed_error' not defined error
    
    Fix 'axis_unhomed_error' not defined error when pause with unhomed status

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
index 144e0af636..98dfe3cb6f 100644
--- a/Marlin/src/gcode/feature/pause/M600.cpp
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -20,20 +20,21 @@
  *
  */
 
 #include "../../../inc/MarlinConfig.h"
 
 #if ENABLED(ADVANCED_PAUSE_FEATURE)
 
 #include "../../../feature/pause.h"
 
 #include "../../gcode.h"
+#include "../../../module/motion.h"
 #include "../../parser.h"
 
 #include "../../../module/printcounter.h"
 
 /**
  * M600: Pause for filament change
  *
  *  E[distance] - Retract the filament this far (negative value)
  *  Z[distance] - Move the Z axis by this distance
  *  X[position] - Move to this X position, with Y

commit be0e4a4ad066d20ffb4ede4eb468b43f4a784c62
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 02:13:07 2017 -0500

    Consolidate pause, apply to M125, M600, M24

diff --git a/Marlin/src/gcode/feature/pause/M600.cpp b/Marlin/src/gcode/feature/pause/M600.cpp
new file mode 100644
index 0000000000..144e0af636
--- /dev/null
+++ b/Marlin/src/gcode/feature/pause/M600.cpp
@@ -0,0 +1,114 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../../inc/MarlinConfig.h"
+
+#if ENABLED(ADVANCED_PAUSE_FEATURE)
+
+#include "../../../feature/pause.h"
+
+#include "../../gcode.h"
+#include "../../parser.h"
+
+#include "../../../module/printcounter.h"
+
+/**
+ * M600: Pause for filament change
+ *
+ *  E[distance] - Retract the filament this far (negative value)
+ *  Z[distance] - Move the Z axis by this distance
+ *  X[position] - Move to this X position, with Y
+ *  Y[position] - Move to this Y position, with X
+ *  U[distance] - Retract distance for removal (negative value) (manual reload)
+ *  L[distance] - Extrude distance for insertion (positive value) (manual reload)
+ *  B[count]    - Number of times to beep, -1 for indefinite (if equipped with a buzzer)
+ *
+ *  Default values are used for omitted arguments.
+ *
+ */
+void GcodeSuite::M600() {
+
+  #if ENABLED(HOME_BEFORE_FILAMENT_CHANGE)
+    // Don't allow filament change without homing first
+    if (axis_unhomed_error()) home_all_axes();
+  #endif
+
+  // Initial retract before move to filament change position
+  const float retract = parser.seen('E') ? parser.value_axis_units(E_AXIS) : 0
+    #ifdef PAUSE_PARK_RETRACT_LENGTH
+      - (PAUSE_PARK_RETRACT_LENGTH)
+    #endif
+  ;
+
+  // Lift Z axis
+  const float z_lift = parser.linearval('Z', 0
+    #ifdef PAUSE_PARK_Z_ADD
+      + PAUSE_PARK_Z_ADD
+    #endif
+  );
+
+  // Move XY axes to filament exchange position
+  const float x_pos = parser.linearval('X', 0
+    #ifdef PAUSE_PARK_X_POS
+      + PAUSE_PARK_X_POS
+    #endif
+  );
+  const float y_pos = parser.linearval('Y', 0
+    #ifdef PAUSE_PARK_Y_POS
+      + PAUSE_PARK_Y_POS
+    #endif
+  );
+
+  // Unload filament
+  const float unload_length = parser.seen('U') ? parser.value_axis_units(E_AXIS) : 0
+    #if defined(FILAMENT_CHANGE_UNLOAD_LENGTH) && FILAMENT_CHANGE_UNLOAD_LENGTH > 0
+      - (FILAMENT_CHANGE_UNLOAD_LENGTH)
+    #endif
+  ;
+
+  // Load filament
+  const float load_length = parser.seen('L') ? parser.value_axis_units(E_AXIS) : 0
+    #ifdef FILAMENT_CHANGE_LOAD_LENGTH
+      + FILAMENT_CHANGE_LOAD_LENGTH
+    #endif
+  ;
+
+  const int beep_count = parser.intval('B',
+    #ifdef FILAMENT_CHANGE_NUMBER_OF_ALERT_BEEPS
+      FILAMENT_CHANGE_NUMBER_OF_ALERT_BEEPS
+    #else
+      -1
+    #endif
+  );
+
+  const bool job_running = print_job_timer.isRunning();
+
+  if (pause_print(retract, z_lift, x_pos, y_pos, unload_length, beep_count, true)) {
+    wait_for_filament_reload(beep_count);
+    resume_print(load_length, ADVANCED_PAUSE_EXTRUDE_LENGTH, beep_count);
+  }
+
+  // Resume the print job timer if it was running
+  if (job_running) print_job_timer.start();
+}
+
+#endif // ADVANCED_PAUSE_FEATURE
