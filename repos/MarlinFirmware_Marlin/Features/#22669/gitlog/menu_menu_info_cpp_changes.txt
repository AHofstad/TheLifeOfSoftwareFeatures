commit 3a2c50c199a3fb0deabebc60326459a5f8b213b1
Author: Sophist <3001893+Sophist-UK@users.noreply.github.com>
Date:   Sat Mar 16 19:09:50 2024 +0000

    ü©π Thermistor name fixes (#26857)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 874b7dbd59..9015a9fe6d 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -109,20 +109,21 @@ void menu_info_thermistors() {
   #if HAS_EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     #undef THERMISTOR_ID
     THERM_ITEMS(STR_E0, HEATER_0, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
+    #undef THERMISTOR_ID
     THERM_ITEMS(STR_E1, HEATER_1, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
     #undef THERMISTOR_ID
     THERM_ITEMS(STR_E2, HEATER_2, WATCH_HOTENDS);
   #endif
 
@@ -155,23 +156,23 @@ void menu_info_thermistors() {
   #endif
 
   #if TEMP_SENSOR_7 != 0
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
     #undef THERMISTOR_ID
     THERM_ITEMS(STR_E7, HEATER_7, WATCH_HOTENDS);
   #endif
 
   #if HAS_HEATED_BED
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
+    #undef THERMISTOR_ID
     THERM_ITEMS("BED", BED, WATCH_BED);
   #endif
 
   #if HAS_HEATED_CHAMBER
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
     #undef THERMISTOR_ID
     THERM_ITEMS("CHAM", CHAMBER, WATCH_CHAMBER);
   #endif
 

commit 86be9a85d0f819fc0f3f6cfe743906ac3309f366
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Aug 23 13:44:40 2023 -0500

    üìù Thermistor info updates (#26202)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 59ed52e6f1..874b7dbd59 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -93,127 +93,100 @@
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
 
+  #define THERM_ITEMS(LBL,HTR,WAT) \
+    STATIC_ITEM_F(F(LBL ": " THERMISTOR_NAME), SS_INVERT); \
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HTR##_MINTEMP), SS_FULL); \
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HTR##_MAXTEMP), SS_FULL); \
+    STATIC_ITEM(TERN(WAT, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL) \
+
   #if HAS_EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F(STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS(STR_E0, HEATER_0, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_1 != 0
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F(STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    THERM_ITEMS(STR_E1, HEATER_1, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_2 != 0
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F(STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS(STR_E2, HEATER_2, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_3 != 0
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F(STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS(STR_E3, HEATER_3, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_4 != 0
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F(STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS(STR_E4, HEATER_4, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_5 != 0
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F(STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS(STR_E5, HEATER_5, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_6 != 0
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_6
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F(STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS(STR_E6, HEATER_6, WATCH_HOTENDS);
   #endif
 
   #if TEMP_SENSOR_7 != 0
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F(STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS(STR_E7, HEATER_7, WATCH_HOTENDS);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F("BED: " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_BED, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    THERM_ITEMS("BED", BED, WATCH_BED);
   #endif
 
   #if HAS_HEATED_CHAMBER
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F("CHAM: " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_CHAMBER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS("CHAM", CHAMBER, WATCH_CHAMBER);
   #endif
 
   #if HAS_COOLER
-    #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_COOLER
     #include "../thermistornames.h"
-    STATIC_ITEM_F(F("COOL: " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(COOLER_MINTEMP), SS_FULL);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(COOLER_MAXTEMP), SS_FULL);
-    STATIC_ITEM(TERN(WATCH_COOLER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
+    #undef THERMISTOR_ID
+    THERM_ITEMS("COOL", COOLER, WATCH_COOLER);
   #endif
 
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.go_back();

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index e2dd6c6475..59ed52e6f1 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -19,21 +19,21 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 //
 // Info Menu
 //
 
 #include "../../inc/MarlinConfigPre.h"
 
-#if BOTH(HAS_MARLINUI_MENU, LCD_INFO_MENU)
+#if ALL(HAS_MARLINUI_MENU, LCD_INFO_MENU)
 
 #include "menu_item.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
 #define VALUE_ITEM(MSG, VALUE, STYL)    do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy(msg + 2, VALUE); STATIC_ITEM(MSG, STYL, msg); }while(0)
 #define VALUE_ITEM_F(MSG, PVALUE, STYL) do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy_P(msg + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, msg); }while(0)
 

commit 4233e4864f0c621612ce35a9b6ca882312e3aa4d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 01:56:10 2023 -0500

    üö∏ MarlinUI Endstop Test Screen, and more (#25667)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index abca4a7d15..e2dd6c6475 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -44,176 +44,176 @@
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.go_back();
 
     printStatistics stats = print_job_timer.getStats();
 
     char buffer[21];
 
-    START_SCREEN();                                                                         // 12345678901234567890
-    VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);            // Print Count: 999
-    VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);    // Completed  : 666
+    START_SCREEN();                                                                       // 12345678901234567890
+    VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_FULL);          // Print Count: 999
+    VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_FULL);  // Completed  : 666
 
-    STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                              // Total print Time:
-    STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));       // > 99y 364d 23h 59m 59s
+    STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_FULL);                                            // Total print Time:
+    STATIC_ITEM_F(nullptr, SS_FULL, duration_t(stats.printTime).toString(buffer));        // > 99y 364d 23h 59m 59s
 
-    STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                           // Longest job time:
-    STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));    // > 99y 364d 23h 59m 59s
+    STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_FULL);                                         // Longest job time:
+    STATIC_ITEM_F(nullptr, SS_FULL, duration_t(stats.longestPrint).toString(buffer));     // > 99y 364d 23h 59m 59s
 
-    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT, SS_LEFT);                                          // Extruded total:
+    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT, SS_FULL);                                        // Extruded total:
     sprintf_P(buffer, PSTR("%ld.%im")
       , long(stats.filamentUsed / 1000)
       , int16_t(stats.filamentUsed / 100) % 10
     );
-    STATIC_ITEM_F(F("> "), SS_LEFT, buffer);                                             // > 125m
+    STATIC_ITEM_F(nullptr, SS_FULL, buffer);                                              // > 125m
 
     #if SERVICE_INTERVAL_1 > 0 || SERVICE_INTERVAL_2 > 0 || SERVICE_INTERVAL_3 > 0
       strcpy_P(buffer, GET_TEXT(MSG_SERVICE_IN));
     #endif
 
     #if SERVICE_INTERVAL_1 > 0
-      STATIC_ITEM_F(F(SERVICE_NAME_1 " "), SS_LEFT, buffer);                             // Service X in:
-      STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.nextService1).toString(buffer));  // > 7d 12h 11m 10s
+      STATIC_ITEM_F(F(SERVICE_NAME_1 " "), SS_FULL, buffer);                              // Service X in:
+      STATIC_ITEM_F(nullptr, SS_FULL, duration_t(stats.nextService1).toString(buffer));   // > 7d 12h 11m 10s
     #endif
 
     #if SERVICE_INTERVAL_2 > 0
-      STATIC_ITEM_F(F(SERVICE_NAME_2 " "), SS_LEFT, buffer);
-      STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.nextService2).toString(buffer));
+      STATIC_ITEM_F(F(SERVICE_NAME_2 " "), SS_FULL, buffer);
+      STATIC_ITEM_F(nullptr, SS_FULL, duration_t(stats.nextService2).toString(buffer));
     #endif
 
     #if SERVICE_INTERVAL_3 > 0
-      STATIC_ITEM_F(F(SERVICE_NAME_3 " "), SS_LEFT, buffer);
-      STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.nextService3).toString(buffer));
+      STATIC_ITEM_F(F(SERVICE_NAME_3 " "), SS_FULL, buffer);
+      STATIC_ITEM_F(nullptr, SS_FULL, duration_t(stats.nextService3).toString(buffer));
     #endif
 
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
 
   #if HAS_EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     STATIC_ITEM_F(F(STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
     STATIC_ITEM_F(F(STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
     STATIC_ITEM_F(F(STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if TEMP_SENSOR_3 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
     STATIC_ITEM_F(F(STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
     STATIC_ITEM_F(F(STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
     STATIC_ITEM_F(F(STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if TEMP_SENSOR_6 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_6
     #include "../thermistornames.h"
     STATIC_ITEM_F(F(STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if TEMP_SENSOR_7 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
     STATIC_ITEM_F(F(STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM_F(F("BED: " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_BED, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_BED, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if HAS_HEATED_CHAMBER
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
     STATIC_ITEM_F(F("CHAM: " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_CHAMBER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_CHAMBER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   #if HAS_COOLER
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_COOLER
     #include "../thermistornames.h"
     STATIC_ITEM_F(F("COOL: " THERMISTOR_NAME), SS_INVERT);
-    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(COOLER_MINTEMP), SS_LEFT);
-    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(COOLER_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(TERN(WATCH_COOLER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(COOLER_MINTEMP), SS_FULL);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(COOLER_MAXTEMP), SS_FULL);
+    STATIC_ITEM(TERN(WATCH_COOLER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_FULL);
   #endif
 
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.go_back();

commit 92721d1bf7d3516ffa591bf7fa9b0b03099f5156
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 14 17:45:45 2023 -0500

    üö∏ "Main" => "Main Menu"

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 101861074d..abca4a7d15 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -269,21 +269,21 @@ void menu_info_board() {
     END_SCREEN();
   }
 
 #endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
-  BACK_ITEM(MSG_MAIN);
+  BACK_ITEM(MSG_MAIN_MENU);
   #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
     SUBMENU(MSG_INFO_PRINTER_MENU, TERN(SHOW_CUSTOM_BOOTSCREEN, menu_show_custom_bootscreen, menu_show_marlin_bootscreen));
   #else
     SUBMENU(MSG_INFO_PRINTER_MENU, menu_info_printer);           // Printer Info >
     SUBMENU(MSG_INFO_BOARD_MENU, menu_info_board);               // Board Info >
     #if HAS_EXTRUDERS
       SUBMENU(MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
     #endif
   #endif
 

commit a5e1d4c50ae40c8203d8490be83ef86e16ebf1c2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 22 19:56:46 2022 -0500

    ‚ôªÔ∏è Apply F() to more LCD code (#24228)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 3a23cf0048..101861074d 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -28,207 +28,207 @@
 
 #if BOTH(HAS_MARLINUI_MENU, LCD_INFO_MENU)
 
 #include "menu_item.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
 #define VALUE_ITEM(MSG, VALUE, STYL)    do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy(msg + 2, VALUE); STATIC_ITEM(MSG, STYL, msg); }while(0)
-#define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy_P(msg + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, msg); }while(0)
+#define VALUE_ITEM_F(MSG, PVALUE, STYL) do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy_P(msg + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, msg); }while(0)
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.go_back();
 
     printStatistics stats = print_job_timer.getStats();
 
     char buffer[21];
 
     START_SCREEN();                                                                         // 12345678901234567890
     VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);            // Print Count: 999
     VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);    // Completed  : 666
 
     STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                              // Total print Time:
-    STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));       // > 99y 364d 23h 59m 59s
+    STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));       // > 99y 364d 23h 59m 59s
 
     STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                           // Longest job time:
-    STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));    // > 99y 364d 23h 59m 59s
+    STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));    // > 99y 364d 23h 59m 59s
 
     STATIC_ITEM(MSG_INFO_PRINT_FILAMENT, SS_LEFT);                                          // Extruded total:
     sprintf_P(buffer, PSTR("%ld.%im")
       , long(stats.filamentUsed / 1000)
       , int16_t(stats.filamentUsed / 100) % 10
     );
-    STATIC_ITEM_P(PSTR("> "), SS_LEFT, buffer);                                             // > 125m
+    STATIC_ITEM_F(F("> "), SS_LEFT, buffer);                                             // > 125m
 
     #if SERVICE_INTERVAL_1 > 0 || SERVICE_INTERVAL_2 > 0 || SERVICE_INTERVAL_3 > 0
       strcpy_P(buffer, GET_TEXT(MSG_SERVICE_IN));
     #endif
 
     #if SERVICE_INTERVAL_1 > 0
-      STATIC_ITEM_P(PSTR(SERVICE_NAME_1 " "), SS_LEFT, buffer);                             // Service X in:
-      STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService1).toString(buffer));  // > 7d 12h 11m 10s
+      STATIC_ITEM_F(F(SERVICE_NAME_1 " "), SS_LEFT, buffer);                             // Service X in:
+      STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.nextService1).toString(buffer));  // > 7d 12h 11m 10s
     #endif
 
     #if SERVICE_INTERVAL_2 > 0
-      STATIC_ITEM_P(PSTR(SERVICE_NAME_2 " "), SS_LEFT, buffer);
-      STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService2).toString(buffer));
+      STATIC_ITEM_F(F(SERVICE_NAME_2 " "), SS_LEFT, buffer);
+      STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.nextService2).toString(buffer));
     #endif
 
     #if SERVICE_INTERVAL_3 > 0
-      STATIC_ITEM_P(PSTR(SERVICE_NAME_3 " "), SS_LEFT, buffer);
-      STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService3).toString(buffer));
+      STATIC_ITEM_F(F(SERVICE_NAME_3 " "), SS_LEFT, buffer);
+      STATIC_ITEM_F(F("> "), SS_LEFT, duration_t(stats.nextService3).toString(buffer));
     #endif
 
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
 
   #if HAS_EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F(STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F(STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F(STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_3 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F(STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F(STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F(STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_6 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_6
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F(STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_7 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F(STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR("BED: " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F("BED: " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_BED, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_CHAMBER
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR("CHAM: " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F("CHAM: " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_CHAMBER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_COOLER
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_COOLER
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR("COOL: " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_F(F("COOL: " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(COOLER_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(COOLER_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_COOLER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
-  STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_DEFAULT|SS_INVERT);      // MyPrinterController
+  STATIC_ITEM_F(F(BOARD_INFO_NAME), SS_DEFAULT|SS_INVERT);      // MyPrinterController
   #ifdef BOARD_WEBSITE_URL
-    STATIC_ITEM_P(PSTR(BOARD_WEBSITE_URL), SS_LEFT);               // www.my3dprinter.com
+    STATIC_ITEM_F(F(BOARD_WEBSITE_URL), SS_LEFT);               // www.my3dprinter.com
   #endif
   PSTRING_ITEM(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
   PSTRING_ITEM(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
   PSTRING_ITEM(MSG_INFO_PSU, PSU_NAME, SS_CENTER);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
@@ -244,25 +244,25 @@ void menu_info_board() {
       if (ui.use_click()) { ui.goto_screen(menu_show_marlin_bootscreen); }
       ui.draw_custom_bootscreen();
     }
   #endif
 
 #else
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
-    STATIC_ITEM(MSG_MARLIN, SS_DEFAULT|SS_INVERT);              // Marlin
-    STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
-    STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
-    STATIC_ITEM_P(PSTR(MACHINE_NAME), SS_DEFAULT|SS_INVERT);    // My3DPrinter
-    STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
+    STATIC_ITEM(MSG_MARLIN, SS_DEFAULT|SS_INVERT);                // Marlin
+    STATIC_ITEM_F(F(SHORT_BUILD_VERSION));                        // x.x.x-Branch
+    STATIC_ITEM_F(F(STRING_DISTRIBUTION_DATE));                   // YYYY-MM-DD HH:MM
+    STATIC_ITEM_F(F(MACHINE_NAME), SS_DEFAULT|SS_INVERT);         // My3DPrinter
+    STATIC_ITEM_F(F(WEBSITE_URL));                                // www.my3dprinter.com
     PSTRING_ITEM(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
     #if HAS_LEVELING
       STATIC_ITEM(
         TERN_(AUTO_BED_LEVELING_3POINT, MSG_3POINT_LEVELING)      // 3-Point Leveling
         TERN_(AUTO_BED_LEVELING_LINEAR, MSG_LINEAR_LEVELING)      // Linear Leveling
         TERN_(AUTO_BED_LEVELING_BILINEAR, MSG_BILINEAR_LEVELING)  // Bi-linear Leveling
         TERN_(AUTO_BED_LEVELING_UBL, MSG_UBL_LEVELING)            // Unified Bed Leveling
         TERN_(MESH_BED_LEVELING, MSG_MESH_LEVELING)               // Mesh Leveling
       );
     #endif

commit ab46b7e2f298826a5512569d6e79bb59a7a6b8ea
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 25 15:33:03 2022 -0600

    üßë‚Äçüíª HAS_MARLINUI_MENU, HAS_MANUAL_MOVE_MENU

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 11027e7f95..3a23cf0048 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -19,21 +19,21 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 //
 // Info Menu
 //
 
 #include "../../inc/MarlinConfigPre.h"
 
-#if BOTH(HAS_LCD_MENU, LCD_INFO_MENU)
+#if BOTH(HAS_MARLINUI_MENU, LCD_INFO_MENU)
 
 #include "menu_item.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
 #define VALUE_ITEM(MSG, VALUE, STYL)    do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy(msg + 2, VALUE); STATIC_ITEM(MSG, STYL, msg); }while(0)
 #define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy_P(msg + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, msg); }while(0)
 
@@ -310,11 +310,11 @@ void menu_info() {
       #elif ENABLED(MARLIN_MAZE)
         MSG_MAZE, maze.enter_game
       #endif
     );
   }
   #endif
 
   END_MENU();
 }
 
-#endif // HAS_LCD_MENU && LCD_INFO_MENU
+#endif // HAS_MARLINUI_MENU && LCD_INFO_MENU

commit 9665a4434cee0386fa2a63a058b6f2598943ee98
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 10 02:51:34 2022 -0600

    üßë‚Äçüíª Fewer string macros

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 388aebb744..11027e7f95 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -96,91 +96,91 @@
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
 
   #if HAS_EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(LCD_STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR(STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(LCD_STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR(STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(LCD_STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR(STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_3 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(LCD_STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR(STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(LCD_STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR(STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(LCD_STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR(STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_6 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_6
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(LCD_STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR(STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_7 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR(LCD_STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR(STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("BED: " THERMISTOR_NAME), SS_INVERT);

commit dc6b86065e53f82e309a13b710863617f9bdce82
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 5 21:23:56 2021 -0500

    üö∏ Per-hotend Watch items

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 9b7bf58fd7..388aebb744 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -99,86 +99,90 @@ void menu_info_thermistors() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
 
   #if HAS_EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_3 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_6 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_6
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_7 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
-  #endif
-
-  #if HAS_EXTRUDERS
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("BED: " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);

commit ba62f24717f8ce7a452a07208f0b571d932c16c5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 5 21:00:42 2021 -0500

    ‚è™Ô∏è Clean up Info Menu

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index bcdea7f92d..9b7bf58fd7 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -243,21 +243,21 @@ void menu_info_board() {
   #endif
 
 #else
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
     STATIC_ITEM(MSG_MARLIN, SS_DEFAULT|SS_INVERT);              // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
-    STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
+    STATIC_ITEM_P(PSTR(MACHINE_NAME), SS_DEFAULT|SS_INVERT);    // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
     PSTRING_ITEM(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
     #if HAS_LEVELING
       STATIC_ITEM(
         TERN_(AUTO_BED_LEVELING_3POINT, MSG_3POINT_LEVELING)      // 3-Point Leveling
         TERN_(AUTO_BED_LEVELING_LINEAR, MSG_LINEAR_LEVELING)      // Linear Leveling
         TERN_(AUTO_BED_LEVELING_BILINEAR, MSG_BILINEAR_LEVELING)  // Bi-linear Leveling
         TERN_(AUTO_BED_LEVELING_UBL, MSG_UBL_LEVELING)            // Unified Bed Leveling
         TERN_(MESH_BED_LEVELING, MSG_MESH_LEVELING)               // Mesh Leveling
       );
@@ -266,28 +266,20 @@ void menu_info_board() {
   }
 
 #endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
-  STATIC_ITEM(MSG_MARLIN);
-  STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));
-  STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));
-  STATIC_ITEM_P(PSTR(MACHINE_NAME));
-  STATIC_ITEM_P(PSTR(WEBSITE_URL));
-  STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_CENTER);
-  VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER);
-  VALUE_ITEM_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER);
   #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
     SUBMENU(MSG_INFO_PRINTER_MENU, TERN(SHOW_CUSTOM_BOOTSCREEN, menu_show_custom_bootscreen, menu_show_marlin_bootscreen));
   #else
     SUBMENU(MSG_INFO_PRINTER_MENU, menu_info_printer);           // Printer Info >
     SUBMENU(MSG_INFO_BOARD_MENU, menu_info_board);               // Board Info >
     #if HAS_EXTRUDERS
       SUBMENU(MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
     #endif
   #endif
 

commit ba10816c51804433446a5221759a794aaac5bac2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 29 20:54:17 2021 -0500

    üíÑ Extended Info Menu

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index cecccd115d..bcdea7f92d 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -266,20 +266,28 @@ void menu_info_board() {
   }
 
 #endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
+  STATIC_ITEM(MSG_MARLIN);
+  STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));
+  STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));
+  STATIC_ITEM_P(PSTR(MACHINE_NAME));
+  STATIC_ITEM_P(PSTR(WEBSITE_URL));
+  STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_CENTER);
+  VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER);
+  VALUE_ITEM_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER);
   #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
     SUBMENU(MSG_INFO_PRINTER_MENU, TERN(SHOW_CUSTOM_BOOTSCREEN, menu_show_custom_bootscreen, menu_show_marlin_bootscreen));
   #else
     SUBMENU(MSG_INFO_PRINTER_MENU, menu_info_printer);           // Printer Info >
     SUBMENU(MSG_INFO_BOARD_MENU, menu_info_board);               // Board Info >
     #if HAS_EXTRUDERS
       SUBMENU(MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
     #endif
   #endif
 

commit 2de54dab84d82ef69fb9ac3bd9025444f4f84813
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri May 21 08:23:09 2021 -0500

    üé® Move HAS_EXTRUDERS

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index d00909c7b3..cecccd115d 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -93,21 +93,21 @@
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
 
-  #if EXTRUDERS
+  #if HAS_EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
@@ -164,21 +164,21 @@ void menu_info_thermistors() {
 
   #if TEMP_SENSOR_7 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
   #endif
 
-  #if EXTRUDERS
+  #if HAS_EXTRUDERS
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("BED: " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
@@ -271,21 +271,21 @@ void menu_info_board() {
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
   #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
     SUBMENU(MSG_INFO_PRINTER_MENU, TERN(SHOW_CUSTOM_BOOTSCREEN, menu_show_custom_bootscreen, menu_show_marlin_bootscreen));
   #else
     SUBMENU(MSG_INFO_PRINTER_MENU, menu_info_printer);           // Printer Info >
     SUBMENU(MSG_INFO_BOARD_MENU, menu_info_board);               // Board Info >
-    #if EXTRUDERS
+    #if HAS_EXTRUDERS
       SUBMENU(MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
     #endif
   #endif
 
   #if ENABLED(PRINTCOUNTER)
     SUBMENU(MSG_INFO_STATS_MENU, menu_info_stats);               // Printer Stats >
   #endif
 
   #if HAS_GAMES
   {

commit b95e548ddbcbc1c088eabc17992d0a06f82ac167
Author: Mike La Spina <mike.laspina@shaw.ca>
Date:   Sat Mar 6 14:13:28 2021 -0600

    Cooler (for Laser) - M143, M193 (#21255)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index a4cbc31d8b..d00909c7b3 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -188,20 +188,30 @@ void menu_info_thermistors() {
   #if HAS_HEATED_CHAMBER
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("CHAM: " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_CHAMBER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
+  #if HAS_COOLER
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_COOLER
+    #include "../thermistornames.h"
+    STATIC_ITEM_P(PSTR("COOL: " THERMISTOR_NAME), SS_INVERT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(COOLER_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(COOLER_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(TERN(WATCH_COOLER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
+  #endif
+
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();

commit c5204807e9f55da13364901aec94927f7a25d5a2
Author: tovam <tovam@users.noreply.github.com>
Date:   Thu Sep 17 10:07:03 2020 +0200

    Fix missing spaces in info menu (#19404)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 864e855df2..a4cbc31d8b 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -172,31 +172,31 @@ void menu_info_thermistors() {
   #endif
 
   #if EXTRUDERS
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR("BED:" THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR("BED: " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_BED, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_CHAMBER
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
-    STATIC_ITEM_P(PSTR("CHAM:" THERMISTOR_NAME), SS_INVERT);
+    STATIC_ITEM_P(PSTR("CHAM: " THERMISTOR_NAME), SS_INVERT);
     PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
     PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_CHAMBER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info

commit 6f8282f01ebdb0f5594b84a1ff2462a8aba10961
Author: Haxk20 <16738302+Haxk20@users.noreply.github.com>
Date:   Sat Sep 12 02:53:06 2020 +0200

    Fix Print Stats appearance (#19348)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 00ab9ad195..864e855df2 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -27,37 +27,40 @@
 #include "../../inc/MarlinConfigPre.h"
 
 #if BOTH(HAS_LCD_MENU, LCD_INFO_MENU)
 
 #include "menu_item.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
+#define VALUE_ITEM(MSG, VALUE, STYL)    do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy(msg + 2, VALUE); STATIC_ITEM(MSG, STYL, msg); }while(0)
+#define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy_P(msg + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, msg); }while(0)
+
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.go_back();
 
     printStatistics stats = print_job_timer.getStats();
 
     char buffer[21];
 
     START_SCREEN();                                                                         // 12345678901234567890
-    STATIC_ITEM(MSG_INFO_PRINT_COUNT,      SS_LEFT, i16tostr3left(stats.totalPrints));      // Print Count: 999
-    STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS, SS_LEFT, i16tostr3left(stats.finishedPrints));   // Completed  : 666
+    VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);            // Print Count: 999
+    VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);    // Completed  : 666
 
     STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                              // Total print Time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));       // > 99y 364d 23h 59m 59s
 
     STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                           // Longest job time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));    // > 99y 364d 23h 59m 59s
 
     STATIC_ITEM(MSG_INFO_PRINT_FILAMENT, SS_LEFT);                                          // Extruded total:
     sprintf_P(buffer, PSTR("%ld.%im")
       , long(stats.filamentUsed / 1000)

commit bff0c68078664fcb229e2b9a9d4eb6b858df2dd2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 00:12:03 2020 -0500

    Consistent static/value item macros

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 2fe8ccbab6..00ab9ad195 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -27,61 +27,58 @@
 #include "../../inc/MarlinConfigPre.h"
 
 #if BOTH(HAS_LCD_MENU, LCD_INFO_MENU)
 
 #include "menu_item.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
-#define VALUE_ITEM(MSG, VALUE, STYL)    do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy(msg + 2, VALUE); STATIC_ITEM(MSG, STYL, msg); }while(0)
-#define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy_P(msg + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, msg); }while(0)
-
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.go_back();
 
     printStatistics stats = print_job_timer.getStats();
 
     char buffer[21];
 
     START_SCREEN();                                                                         // 12345678901234567890
-    VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);            // Print Count: 999
-    VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);    // Completed  : 666
+    STATIC_ITEM(MSG_INFO_PRINT_COUNT,      SS_LEFT, i16tostr3left(stats.totalPrints));      // Print Count: 999
+    STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS, SS_LEFT, i16tostr3left(stats.finishedPrints));   // Completed  : 666
 
     STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                              // Total print Time:
-    STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));         // > 99y 364d 23h 59m 59s
+    STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));       // > 99y 364d 23h 59m 59s
 
     STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                           // Longest job time:
-    STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));      // > 99y 364d 23h 59m 59s
+    STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));    // > 99y 364d 23h 59m 59s
 
     STATIC_ITEM(MSG_INFO_PRINT_FILAMENT, SS_LEFT);                                          // Extruded total:
     sprintf_P(buffer, PSTR("%ld.%im")
       , long(stats.filamentUsed / 1000)
       , int16_t(stats.filamentUsed / 100) % 10
     );
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, buffer);                                             // > 125m
 
     #if SERVICE_INTERVAL_1 > 0 || SERVICE_INTERVAL_2 > 0 || SERVICE_INTERVAL_3 > 0
       strcpy_P(buffer, GET_TEXT(MSG_SERVICE_IN));
     #endif
 
     #if SERVICE_INTERVAL_1 > 0
-      STATIC_ITEM_P(PSTR(SERVICE_NAME_1 " "), SS_LEFT, buffer);                               // Service X in:
-      STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService1).toString(buffer));    // > 7d 12h 11m 10s
+      STATIC_ITEM_P(PSTR(SERVICE_NAME_1 " "), SS_LEFT, buffer);                             // Service X in:
+      STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService1).toString(buffer));  // > 7d 12h 11m 10s
     #endif
 
     #if SERVICE_INTERVAL_2 > 0
       STATIC_ITEM_P(PSTR(SERVICE_NAME_2 " "), SS_LEFT, buffer);
       STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService2).toString(buffer));
     #endif
 
     #if SERVICE_INTERVAL_3 > 0
       STATIC_ITEM_P(PSTR(SERVICE_NAME_3 " "), SS_LEFT, buffer);
       STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService3).toString(buffer));
@@ -97,128 +94,128 @@
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
 
   #if EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_3 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_6 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_6
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_7 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
   #endif
 
   #if EXTRUDERS
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("BED:" THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_BED, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_CHAMBER
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("CHAM:" THERMISTOR_NAME), SS_INVERT);
-    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
-    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
+    PSTRING_ITEM(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_CHAMBER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
   STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_DEFAULT|SS_INVERT);      // MyPrinterController
   #ifdef BOARD_WEBSITE_URL
     STATIC_ITEM_P(PSTR(BOARD_WEBSITE_URL), SS_LEFT);               // www.my3dprinter.com
   #endif
-  VALUE_ITEM_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
-  VALUE_ITEM_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
-  VALUE_ITEM_P(MSG_INFO_PSU,      PSU_NAME, SS_CENTER);
+  PSTRING_ITEM(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
+  PSTRING_ITEM(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
+  PSTRING_ITEM(MSG_INFO_PSU, PSU_NAME, SS_CENTER);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
 
   void menu_show_marlin_bootscreen() {
     if (ui.use_click()) { ui.goto_previous_screen_no_defer(); }
@@ -235,21 +232,21 @@ void menu_info_board() {
 #else
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
     STATIC_ITEM(MSG_MARLIN, SS_DEFAULT|SS_INVERT);              // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
     STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
-    VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
+    PSTRING_ITEM(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
     #if HAS_LEVELING
       STATIC_ITEM(
         TERN_(AUTO_BED_LEVELING_3POINT, MSG_3POINT_LEVELING)      // 3-Point Leveling
         TERN_(AUTO_BED_LEVELING_LINEAR, MSG_LINEAR_LEVELING)      // Linear Leveling
         TERN_(AUTO_BED_LEVELING_BILINEAR, MSG_BILINEAR_LEVELING)  // Bi-linear Leveling
         TERN_(AUTO_BED_LEVELING_UBL, MSG_UBL_LEVELING)            // Unified Bed Leveling
         TERN_(MESH_BED_LEVELING, MSG_MESH_LEVELING)               // Mesh Leveling
       );
     #endif
     END_SCREEN();

commit 4f67642122059a9270f9e3690978248355f88e72
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 21 05:21:34 2020 -0500

    Header for individual menus

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index b94be2e53f..2fe8ccbab6 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -21,21 +21,21 @@
  */
 
 //
 // Info Menu
 //
 
 #include "../../inc/MarlinConfigPre.h"
 
 #if BOTH(HAS_LCD_MENU, LCD_INFO_MENU)
 
-#include "menu.h"
+#include "menu_item.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
 #define VALUE_ITEM(MSG, VALUE, STYL)    do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy(msg + 2, VALUE); STATIC_ITEM(MSG, STYL, msg); }while(0)
 #define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy_P(msg + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, msg); }while(0)
 
 #if ENABLED(PRINTCOUNTER)
 

commit c2d5b63a9882dc02f41017a5b2f24363a55fef8d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Aug 8 18:21:44 2020 -0500

    Fix up STATIC_ITEM (#18962)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 697d4b767e..b94be2e53f 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -198,21 +198,21 @@ void menu_info_thermistors() {
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.go_back();
 
   START_SCREEN();
-  STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_CENTER|SS_INVERT);       // MyPrinterController
+  STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_DEFAULT|SS_INVERT);      // MyPrinterController
   #ifdef BOARD_WEBSITE_URL
     STATIC_ITEM_P(PSTR(BOARD_WEBSITE_URL), SS_LEFT);               // www.my3dprinter.com
   #endif
   VALUE_ITEM_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
   VALUE_ITEM_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
   VALUE_ITEM_P(MSG_INFO_PSU,      PSU_NAME, SS_CENTER);
   END_SCREEN();
 }
 
 //
@@ -230,21 +230,21 @@ void menu_info_board() {
       if (ui.use_click()) { ui.goto_screen(menu_show_marlin_bootscreen); }
       ui.draw_custom_bootscreen();
     }
   #endif
 
 #else
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
-    STATIC_ITEM(MSG_MARLIN, SS_CENTER|SS_INVERT);               // Marlin
+    STATIC_ITEM(MSG_MARLIN, SS_DEFAULT|SS_INVERT);              // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
     STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
     VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
     #if HAS_LEVELING
       STATIC_ITEM(
         TERN_(AUTO_BED_LEVELING_3POINT, MSG_3POINT_LEVELING)      // 3-Point Leveling
         TERN_(AUTO_BED_LEVELING_LINEAR, MSG_LINEAR_LEVELING)      // Linear Leveling
         TERN_(AUTO_BED_LEVELING_BILINEAR, MSG_BILINEAR_LEVELING)  // Bi-linear Leveling

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 671fee099e..697d4b767e 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 //
 // Info Menu
 //
 
 #include "../../inc/MarlinConfigPre.h"
 
 #if BOTH(HAS_LCD_MENU, LCD_INFO_MENU)

commit 4275466f4930ce554419f5f03f07119b8a9aec04
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 24 19:44:50 2020 -0500

    Fix issues with no hotend / bed / fan (#18395)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index ef269f7088..671fee099e 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -236,21 +236,21 @@ void menu_info_board() {
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
     STATIC_ITEM(MSG_MARLIN, SS_CENTER|SS_INVERT);               // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
     STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
     VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
-    #if HAS_BED_LEVELING
+    #if HAS_LEVELING
       STATIC_ITEM(
         TERN_(AUTO_BED_LEVELING_3POINT, MSG_3POINT_LEVELING)      // 3-Point Leveling
         TERN_(AUTO_BED_LEVELING_LINEAR, MSG_LINEAR_LEVELING)      // Linear Leveling
         TERN_(AUTO_BED_LEVELING_BILINEAR, MSG_BILINEAR_LEVELING)  // Bi-linear Leveling
         TERN_(AUTO_BED_LEVELING_UBL, MSG_UBL_LEVELING)            // Unified Bed Leveling
         TERN_(MESH_BED_LEVELING, MSG_MESH_LEVELING)               // Mesh Leveling
       );
     #endif
     END_SCREEN();
   }

commit f03f76ecfb9c5b23e2ae17734ac8fbdf1c10c44e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Apr 28 19:17:35 2020 -0500

    Fix info menu without leveling
    
    Fixes #17664

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 78153a594b..ef269f7088 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -236,27 +236,29 @@ void menu_info_board() {
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
     STATIC_ITEM(MSG_MARLIN, SS_CENTER|SS_INVERT);               // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
     STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
     VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
-    STATIC_ITEM(
-      TERN_(AUTO_BED_LEVELING_3POINT, MSG_3POINT_LEVELING)      // 3-Point Leveling
-      TERN_(AUTO_BED_LEVELING_LINEAR, MSG_LINEAR_LEVELING)      // Linear Leveling
-      TERN_(AUTO_BED_LEVELING_BILINEAR, MSG_BILINEAR_LEVELING)  // Bi-linear Leveling
-      TERN_(AUTO_BED_LEVELING_UBL, MSG_UBL_LEVELING)            // Unified Bed Leveling
-      TERN_(MESH_BED_LEVELING, MSG_MESH_LEVELING)               // Mesh Leveling
-    );
+    #if HAS_BED_LEVELING
+      STATIC_ITEM(
+        TERN_(AUTO_BED_LEVELING_3POINT, MSG_3POINT_LEVELING)      // 3-Point Leveling
+        TERN_(AUTO_BED_LEVELING_LINEAR, MSG_LINEAR_LEVELING)      // Linear Leveling
+        TERN_(AUTO_BED_LEVELING_BILINEAR, MSG_BILINEAR_LEVELING)  // Bi-linear Leveling
+        TERN_(AUTO_BED_LEVELING_UBL, MSG_UBL_LEVELING)            // Unified Bed Leveling
+        TERN_(MESH_BED_LEVELING, MSG_MESH_LEVELING)               // Mesh Leveling
+      );
+    #endif
     END_SCREEN();
   }
 
 #endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();

commit 4f003fc7a715830da7324da2c90f8411df3b1efc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 27 23:52:11 2020 -0500

    Streamline menu item logic (#17664)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index f8df26bf08..78153a594b 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -27,35 +27,33 @@
 #include "../../inc/MarlinConfigPre.h"
 
 #if BOTH(HAS_LCD_MENU, LCD_INFO_MENU)
 
 #include "menu.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
-#define VALUE_ITEM(MSG, VALUE, STYL)    do{ char buffer[21]; strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, STYL, buffer); }while(0)
-#define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ char buffer[21]; strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, buffer); }while(0)
+#define VALUE_ITEM(MSG, VALUE, STYL)    do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy(msg + 2, VALUE); STATIC_ITEM(MSG, STYL, msg); }while(0)
+#define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ char msg[21]; strcpy_P(msg, PSTR(": ")); strcpy_P(msg + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, msg); }while(0)
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.go_back();
 
-    char buffer[21];  // For macro usage
-
     printStatistics stats = print_job_timer.getStats();
 
     char buffer[21];
 
     START_SCREEN();                                                                         // 12345678901234567890
     VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);            // Print Count: 999
     VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);    // Completed  : 666
 
     STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                              // Total print Time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));         // > 99y 364d 23h 59m 59s
@@ -238,31 +236,27 @@ void menu_info_board() {
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
     STATIC_ITEM(MSG_MARLIN, SS_CENTER|SS_INVERT);               // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
     STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
     VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
-    #if ENABLED(AUTO_BED_LEVELING_3POINT)
-      STATIC_ITEM(MSG_3POINT_LEVELING);                         // 3-Point Leveling
-    #elif ENABLED(AUTO_BED_LEVELING_LINEAR)
-      STATIC_ITEM(MSG_LINEAR_LEVELING);                         // Linear Leveling
-    #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
-      STATIC_ITEM(MSG_BILINEAR_LEVELING);                       // Bi-linear Leveling
-    #elif ENABLED(AUTO_BED_LEVELING_UBL)
-      STATIC_ITEM(MSG_UBL_LEVELING);                            // Unified Bed Leveling
-    #elif ENABLED(MESH_BED_LEVELING)
-      STATIC_ITEM(MSG_MESH_LEVELING);                           // Mesh Leveling
-    #endif
+    STATIC_ITEM(
+      TERN_(AUTO_BED_LEVELING_3POINT, MSG_3POINT_LEVELING)      // 3-Point Leveling
+      TERN_(AUTO_BED_LEVELING_LINEAR, MSG_LINEAR_LEVELING)      // Linear Leveling
+      TERN_(AUTO_BED_LEVELING_BILINEAR, MSG_BILINEAR_LEVELING)  // Bi-linear Leveling
+      TERN_(AUTO_BED_LEVELING_UBL, MSG_UBL_LEVELING)            // Unified Bed Leveling
+      TERN_(MESH_BED_LEVELING, MSG_MESH_LEVELING)               // Mesh Leveling
+    );
     END_SCREEN();
   }
 
 #endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
@@ -275,37 +269,36 @@ void menu_info() {
     #if EXTRUDERS
       SUBMENU(MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
     #endif
   #endif
 
   #if ENABLED(PRINTCOUNTER)
     SUBMENU(MSG_INFO_STATS_MENU, menu_info_stats);               // Printer Stats >
   #endif
 
   #if HAS_GAMES
+  {
     #if ENABLED(GAMES_EASTER_EGG)
-      SKIP_ITEM();
-      SKIP_ITEM();
-      SKIP_ITEM();
+      SKIP_ITEM(); SKIP_ITEM(); SKIP_ITEM();
     #endif
+
     // Game sub-menu or the individual game
-    {
-      SUBMENU(
-        #if HAS_GAME_MENU
-          MSG_GAMES, menu_game
-        #elif ENABLED(MARLIN_BRICKOUT)
-          MSG_BRICKOUT, brickout.enter_game
-        #elif ENABLED(MARLIN_INVADERS)
-          MSG_INVADERS, invaders.enter_game
-        #elif ENABLED(MARLIN_SNAKE)
-          MSG_SNAKE, snake.enter_game
-        #elif ENABLED(MARLIN_MAZE)
-          MSG_MAZE, maze.enter_game
-        #endif
-      );
-    }
+    SUBMENU(
+      #if HAS_GAME_MENU
+        MSG_GAMES, menu_game
+      #elif ENABLED(MARLIN_BRICKOUT)
+        MSG_BRICKOUT, brickout.enter_game
+      #elif ENABLED(MARLIN_INVADERS)
+        MSG_INVADERS, invaders.enter_game
+      #elif ENABLED(MARLIN_SNAKE)
+        MSG_SNAKE, snake.enter_game
+      #elif ENABLED(MARLIN_MAZE)
+        MSG_MAZE, maze.enter_game
+      #endif
+    );
+  }
   #endif
 
   END_MENU();
 }
 
 #endif // HAS_LCD_MENU && LCD_INFO_MENU

commit f6e820b4e94ea47f558d13009ae9120888c9d694
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 21:03:55 2020 -0500

    Fix buffer stuff

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 41baa5d2e0..f8df26bf08 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -44,20 +44,22 @@
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.go_back();
 
     char buffer[21];  // For macro usage
 
     printStatistics stats = print_job_timer.getStats();
 
+    char buffer[21];
+
     START_SCREEN();                                                                         // 12345678901234567890
     VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);            // Print Count: 999
     VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);    // Completed  : 666
 
     STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                              // Total print Time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));         // > 99y 364d 23h 59m 59s
 
     STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                           // Longest job time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));      // > 99y 364d 23h 59m 59s
 

commit 035d6cd16d8edcbc76d8a1aa4a1d2e2e3cde60ba
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 09:42:51 2020 -0500

    Patch i2c, info menu

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 2f6ab974f4..41baa5d2e0 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -27,39 +27,37 @@
 #include "../../inc/MarlinConfigPre.h"
 
 #if BOTH(HAS_LCD_MENU, LCD_INFO_MENU)
 
 #include "menu.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
-#define VALUE_ITEM(MSG, VALUE, STYL)    do{ strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, STYL, buffer); }while(0)
-#define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, buffer); }while(0)
+#define VALUE_ITEM(MSG, VALUE, STYL)    do{ char buffer[21]; strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, STYL, buffer); }while(0)
+#define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ char buffer[21]; strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, buffer); }while(0)
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.go_back();
 
     char buffer[21];  // For macro usage
 
     printStatistics stats = print_job_timer.getStats();
 
-    char buffer[21];
-
     START_SCREEN();                                                                         // 12345678901234567890
     VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);            // Print Count: 999
     VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);    // Completed  : 666
 
     STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                              // Total print Time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));         // > 99y 364d 23h 59m 59s
 
     STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                           // Longest job time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));      // > 99y 364d 23h 59m 59s
 
@@ -93,22 +91,20 @@
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.go_back();
 
-  char buffer[21];  // For macro usage
-
   START_SCREEN();
 
   #if EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
     VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
     VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
   #endif
 
@@ -201,22 +197,20 @@ void menu_info_thermistors() {
 
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.go_back();
 
-  char buffer[21];  // For macro usage
-
   START_SCREEN();
   STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_CENTER|SS_INVERT);       // MyPrinterController
   #ifdef BOARD_WEBSITE_URL
     STATIC_ITEM_P(PSTR(BOARD_WEBSITE_URL), SS_LEFT);               // www.my3dprinter.com
   #endif
   VALUE_ITEM_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
   VALUE_ITEM_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
   VALUE_ITEM_P(MSG_INFO_PSU,      PSU_NAME, SS_CENTER);
   END_SCREEN();
 }
@@ -241,21 +235,20 @@ void menu_info_board() {
 #else
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
     STATIC_ITEM(MSG_MARLIN, SS_CENTER|SS_INVERT);               // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
     STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
-    char buffer[21];
     VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
     #if ENABLED(AUTO_BED_LEVELING_3POINT)
       STATIC_ITEM(MSG_3POINT_LEVELING);                         // 3-Point Leveling
     #elif ENABLED(AUTO_BED_LEVELING_LINEAR)
       STATIC_ITEM(MSG_LINEAR_LEVELING);                         // Linear Leveling
     #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
       STATIC_ITEM(MSG_BILINEAR_LEVELING);                       // Bi-linear Leveling
     #elif ENABLED(AUTO_BED_LEVELING_UBL)
       STATIC_ITEM(MSG_UBL_LEVELING);                            // Unified Bed Leveling
     #elif ENABLED(MESH_BED_LEVELING)

commit 267c25fd536f7a131764c073508be2b4c0a534d6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 27 09:05:41 2020 -0500

    Remove spurious brace
    
    Followup to c536b8de62

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 1b52c182ba..2f6ab974f4 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -173,21 +173,20 @@ void menu_info_thermistors() {
     STATIC_ITEM_P(PSTR(LCD_STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
     VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
     VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
   #endif
 
   #if EXTRUDERS
     STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
-  {
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("BED:" THERMISTOR_NAME), SS_INVERT);
     VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
     VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
     STATIC_ITEM(TERN(WATCH_BED, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_CHAMBER

commit c536b8de629807b489f054051bb120457f112a11
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 25 17:53:06 2020 -0500

    Apply ternary macros

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index f7b895679a..1b52c182ba 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -44,33 +44,38 @@
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.go_back();
 
     char buffer[21];  // For macro usage
 
     printStatistics stats = print_job_timer.getStats();
 
-    START_SCREEN();                                                                           // 12345678901234567890
-    VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);              // Print Count: 999
-    VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);      // Completed  : 666
+    char buffer[21];
+
+    START_SCREEN();                                                                         // 12345678901234567890
+    VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);            // Print Count: 999
+    VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);    // Completed  : 666
 
-    STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                                // Total print Time:
+    STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                              // Total print Time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));         // > 99y 364d 23h 59m 59s
 
-    STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                             // Longest job time:
+    STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                           // Longest job time:
     STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));      // > 99y 364d 23h 59m 59s
 
-    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT, SS_LEFT);                                            // Extruded total:
-    sprintf_P(buffer, PSTR("%ld.%im"), long(stats.filamentUsed / 1000), int16_t(stats.filamentUsed / 100) % 10);
-    STATIC_ITEM_P(PSTR("> "), SS_LEFT, buffer);                                               // > 125m
+    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT, SS_LEFT);                                          // Extruded total:
+    sprintf_P(buffer, PSTR("%ld.%im")
+      , long(stats.filamentUsed / 1000)
+      , int16_t(stats.filamentUsed / 100) % 10
+    );
+    STATIC_ITEM_P(PSTR("> "), SS_LEFT, buffer);                                             // > 125m
 
     #if SERVICE_INTERVAL_1 > 0 || SERVICE_INTERVAL_2 > 0 || SERVICE_INTERVAL_3 > 0
       strcpy_P(buffer, GET_TEXT(MSG_SERVICE_IN));
     #endif
 
     #if SERVICE_INTERVAL_1 > 0
       STATIC_ITEM_P(PSTR(SERVICE_NAME_1 " "), SS_LEFT, buffer);                               // Service X in:
       STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService1).toString(buffer));    // > 7d 12h 11m 10s
     #endif
 
@@ -164,68 +169,42 @@ void menu_info_thermistors() {
   #if TEMP_SENSOR_7 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_7
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
     VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
     VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
   #endif
 
   #if EXTRUDERS
-  {
-    STATIC_ITEM(
-      #if WATCH_HOTENDS
-        MSG_INFO_RUNAWAY_ON
-      #else
-        MSG_INFO_RUNAWAY_OFF
-      #endif
-      , SS_LEFT
-    );
-  }
+    STATIC_ITEM(TERN(WATCH_HOTENDS, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
   {
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("BED:" THERMISTOR_NAME), SS_INVERT);
     VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
     VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(
-      #if WATCH_BED
-        MSG_INFO_RUNAWAY_ON
-      #else
-        MSG_INFO_RUNAWAY_OFF
-      #endif
-      , SS_LEFT
-    );
-  }
+    STATIC_ITEM(TERN(WATCH_BED, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   #if HAS_HEATED_CHAMBER
-  {
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR("CHAM:" THERMISTOR_NAME), SS_INVERT);
     VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
     VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
-    STATIC_ITEM(
-      #if WATCH_CHAMBER
-        MSG_INFO_RUNAWAY_ON
-      #else
-        MSG_INFO_RUNAWAY_OFF
-      #endif
-      , SS_LEFT
-    );
-  }
+    STATIC_ITEM(TERN(WATCH_CHAMBER, MSG_INFO_RUNAWAY_ON, MSG_INFO_RUNAWAY_OFF), SS_LEFT);
   #endif
 
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.go_back();
@@ -288,27 +267,21 @@ void menu_info_board() {
 
 #endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
   BACK_ITEM(MSG_MAIN);
   #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
-    SUBMENU(MSG_INFO_PRINTER_MENU, (
-      #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
-        menu_show_custom_bootscreen
-      #else
-        menu_show_marlin_bootscreen
-      #endif
-    ));
+    SUBMENU(MSG_INFO_PRINTER_MENU, TERN(SHOW_CUSTOM_BOOTSCREEN, menu_show_custom_bootscreen, menu_show_marlin_bootscreen));
   #else
     SUBMENU(MSG_INFO_PRINTER_MENU, menu_info_printer);           // Printer Info >
     SUBMENU(MSG_INFO_BOARD_MENU, menu_info_board);               // Board Info >
     #if EXTRUDERS
       SUBMENU(MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
     #endif
   #endif
 
   #if ENABLED(PRINTCOUNTER)
     SUBMENU(MSG_INFO_STATS_MENU, menu_info_stats);               // Printer Stats >

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 284c3eb1a5..f7b895679a 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -19,21 +19,21 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 
 //
 // Info Menu
 //
 
 #include "../../inc/MarlinConfigPre.h"
 
-#if HAS_LCD_MENU && ENABLED(LCD_INFO_MENU)
+#if BOTH(HAS_LCD_MENU, LCD_INFO_MENU)
 
 #include "menu.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
 #define VALUE_ITEM(MSG, VALUE, STYL)    do{ strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, STYL, buffer); }while(0)
 #define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, buffer); }while(0)
 

commit ffcbba4447c15d702c5aa37bc21ba3abea822cef
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Feb 8 22:25:24 2020 -0600

    Move MSG_MARLIN

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index cbe406a10e..284c3eb1a5 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -258,21 +258,21 @@ void menu_info_board() {
       if (ui.use_click()) { ui.goto_screen(menu_show_marlin_bootscreen); }
       ui.draw_custom_bootscreen();
     }
   #endif
 
 #else
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.go_back();
     START_SCREEN();
-    STATIC_ITEM_P(PSTR(MSG_MARLIN), SS_CENTER|SS_INVERT);       // Marlin
+    STATIC_ITEM(MSG_MARLIN, SS_CENTER|SS_INVERT);               // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
     STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
     char buffer[21];
     VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
     #if ENABLED(AUTO_BED_LEVELING_3POINT)
       STATIC_ITEM(MSG_3POINT_LEVELING);                         // 3-Point Leveling
     #elif ENABLED(AUTO_BED_LEVELING_LINEAR)
       STATIC_ITEM(MSG_LINEAR_LEVELING);                         // Linear Leveling

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 5bbc8ce7dc..cbe406a10e 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 248b7dfa591a34a8aa1c6960944e1a3a468ad1de
Author: yangwenxiong <46896566+yangwenxiong@users.noreply.github.com>
Date:   Sat Jan 25 16:13:39 2020 +0800

    BigTreeTech GTR V1.0 / Support 8 extruders, heaters, temp sensors, fans (#16595)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 71467093ec..5bbc8ce7dc 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -145,20 +145,38 @@ void menu_info_thermistors() {
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
     VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
     VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
   #endif
 
+  #if TEMP_SENSOR_6 != 0
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_6
+    #include "../thermistornames.h"
+    STATIC_ITEM_P(PSTR(LCD_STR_E6 ": " THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_6_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_6_MAXTEMP), SS_LEFT);
+  #endif
+
+  #if TEMP_SENSOR_7 != 0
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_7
+    #include "../thermistornames.h"
+    STATIC_ITEM_P(PSTR(LCD_STR_E7 ": " THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_7_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_7_MAXTEMP), SS_LEFT);
+  #endif
+
   #if EXTRUDERS
   {
     STATIC_ITEM(
       #if WATCH_HOTENDS
         MSG_INFO_RUNAWAY_ON
       #else
         MSG_INFO_RUNAWAY_OFF
       #endif
       , SS_LEFT
     );

commit 832321f55d88f64c105e3c6ff20463de204e2d33
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Dec 31 16:06:16 2019 -0600

    Fix games menu back item, titles

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index e7b4dbe7ce..71467093ec 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -295,29 +295,32 @@ void menu_info() {
   #if ENABLED(PRINTCOUNTER)
     SUBMENU(MSG_INFO_STATS_MENU, menu_info_stats);               // Printer Stats >
   #endif
 
   #if HAS_GAMES
     #if ENABLED(GAMES_EASTER_EGG)
       SKIP_ITEM();
       SKIP_ITEM();
       SKIP_ITEM();
     #endif
-    SUBMENU(MSG_GAMES, (
-      #if HAS_GAME_MENU
-        menu_game
-      #elif ENABLED(MARLIN_BRICKOUT)
-        brickout.enter_game
-      #elif ENABLED(MARLIN_INVADERS)
-        invaders.enter_game
-      #elif ENABLED(MARLIN_SNAKE)
-        snake.enter_game
-      #elif ENABLED(MARLIN_MAZE)
-        maze.enter_game
-      #endif
-    ));
+    // Game sub-menu or the individual game
+    {
+      SUBMENU(
+        #if HAS_GAME_MENU
+          MSG_GAMES, menu_game
+        #elif ENABLED(MARLIN_BRICKOUT)
+          MSG_BRICKOUT, brickout.enter_game
+        #elif ENABLED(MARLIN_INVADERS)
+          MSG_INVADERS, invaders.enter_game
+        #elif ENABLED(MARLIN_SNAKE)
+          MSG_SNAKE, snake.enter_game
+        #elif ENABLED(MARLIN_MAZE)
+          MSG_MAZE, maze.enter_game
+        #endif
+      );
+    }
   #endif
 
   END_MENU();
 }
 
 #endif // HAS_LCD_MENU && LCD_INFO_MENU

commit b3f81eead5179d70e4e205f3ff0c9a8617ad780d
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sat Nov 9 17:27:30 2019 -0800

    Fix/improve TURBO_BACK_MENU_ITEM (#15856)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 5ef6bbfc46..e7b4dbe7ce 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -38,25 +38,21 @@
 #define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, buffer); }while(0)
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
-    if (ui.use_click()) return ui.goto_previous_screen(
-      #if ENABLED(TURBO_BACK_MENU_ITEM)
-        true
-      #endif
-    );
+    if (ui.use_click()) return ui.go_back();
 
     char buffer[21];  // For macro usage
 
     printStatistics stats = print_job_timer.getStats();
 
     START_SCREEN();                                                                           // 12345678901234567890
     VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);              // Print Count: 999
     VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);      // Completed  : 666
 
     STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                                // Total print Time:
@@ -90,25 +86,21 @@
 
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
-  if (ui.use_click()) return ui.goto_previous_screen(
-    #if ENABLED(TURBO_BACK_MENU_ITEM)
-      true
-    #endif
-  );
+  if (ui.use_click()) return ui.go_back();
 
   char buffer[21];  // For macro usage
 
   START_SCREEN();
 
   #if EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     STATIC_ITEM_P(PSTR(LCD_STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
     VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
@@ -211,25 +203,21 @@ void menu_info_thermistors() {
   }
   #endif
 
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
-  if (ui.use_click()) return ui.goto_previous_screen(
-    #if ENABLED(TURBO_BACK_MENU_ITEM)
-      true
-    #endif
-  );
+  if (ui.use_click()) return ui.go_back();
 
   char buffer[21];  // For macro usage
 
   START_SCREEN();
   STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_CENTER|SS_INVERT);       // MyPrinterController
   #ifdef BOARD_WEBSITE_URL
     STATIC_ITEM_P(PSTR(BOARD_WEBSITE_URL), SS_LEFT);               // www.my3dprinter.com
   #endif
   VALUE_ITEM_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
   VALUE_ITEM_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
@@ -250,25 +238,21 @@ void menu_info_board() {
   #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
     void menu_show_custom_bootscreen() {
       if (ui.use_click()) { ui.goto_screen(menu_show_marlin_bootscreen); }
       ui.draw_custom_bootscreen();
     }
   #endif
 
 #else
 
   void menu_info_printer() {
-    if (ui.use_click()) return ui.goto_previous_screen(
-      #if ENABLED(TURBO_BACK_MENU_ITEM)
-        true
-      #endif
-    );
+    if (ui.use_click()) return ui.go_back();
     START_SCREEN();
     STATIC_ITEM_P(PSTR(MSG_MARLIN), SS_CENTER|SS_INVERT);       // Marlin
     STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
     STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
     STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
     STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
     char buffer[21];
     VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
     #if ENABLED(AUTO_BED_LEVELING_3POINT)
       STATIC_ITEM(MSG_3POINT_LEVELING);                         // 3-Point Leveling

commit 6a865a614620d71521bd3dc032adffe0bf82378c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Oct 9 18:46:10 2019 -0600

    Multi-language support (#15453)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 26d9441ff7..5ef6bbfc46 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -27,182 +27,186 @@
 #include "../../inc/MarlinConfigPre.h"
 
 #if HAS_LCD_MENU && ENABLED(LCD_INFO_MENU)
 
 #include "menu.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
-#define STATIC_PAIR(MSG, VALUE, STYL)    do{ strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, STYL, buffer); }while(0)
-#define STATIC_PAIR_P(MSG, PVALUE, STYL) do{ strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, buffer); }while(0)
+#define VALUE_ITEM(MSG, VALUE, STYL)    do{ strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, STYL, buffer); }while(0)
+#define VALUE_ITEM_P(MSG, PVALUE, STYL) do{ strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, buffer); }while(0)
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.goto_previous_screen(
       #if ENABLED(TURBO_BACK_MENU_ITEM)
         true
       #endif
     );
 
-    char buffer[21];  // for STATIC_PAIR_P
+    char buffer[21];  // For macro usage
 
     printStatistics stats = print_job_timer.getStats();
 
     START_SCREEN();                                                                           // 12345678901234567890
-    STATIC_PAIR(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);             // Print Count: 999
-    STATIC_PAIR(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);     // Completed  : 666
+    VALUE_ITEM(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);              // Print Count: 999
+    VALUE_ITEM(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);      // Completed  : 666
 
-    STATIC_PAIR_P(MSG_INFO_PRINT_TIME, "", SS_LEFT);                                          // Total print Time:
-    STATIC_ITEM("> ", SS_LEFT, duration_t(stats.printTime).toString(buffer));                 // > 99y 364d 23h 59m 59s
+    STATIC_ITEM(MSG_INFO_PRINT_TIME, SS_LEFT);                                                // Total print Time:
+    STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.printTime).toString(buffer));         // > 99y 364d 23h 59m 59s
 
-    STATIC_PAIR_P(MSG_INFO_PRINT_LONGEST, "", SS_LEFT);                                       // Longest job time:
-    STATIC_ITEM("> ", SS_LEFT, duration_t(stats.longestPrint).toString(buffer));              // > 99y 364d 23h 59m 59s
+    STATIC_ITEM(MSG_INFO_PRINT_LONGEST, SS_LEFT);                                             // Longest job time:
+    STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.longestPrint).toString(buffer));      // > 99y 364d 23h 59m 59s
 
-    STATIC_PAIR_P(MSG_INFO_PRINT_FILAMENT, "", SS_LEFT);                                      // Extruded total:
+    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT, SS_LEFT);                                            // Extruded total:
     sprintf_P(buffer, PSTR("%ld.%im"), long(stats.filamentUsed / 1000), int16_t(stats.filamentUsed / 100) % 10);
-    STATIC_ITEM("> ", SS_LEFT, buffer);                                                       // > 125m
+    STATIC_ITEM_P(PSTR("> "), SS_LEFT, buffer);                                               // > 125m
+
+    #if SERVICE_INTERVAL_1 > 0 || SERVICE_INTERVAL_2 > 0 || SERVICE_INTERVAL_3 > 0
+      strcpy_P(buffer, GET_TEXT(MSG_SERVICE_IN));
+    #endif
 
     #if SERVICE_INTERVAL_1 > 0
-      STATIC_ITEM(SERVICE_NAME_1 MSG_SERVICE_IN, SS_LEFT);                                    // Service X in:
-      STATIC_ITEM("> ", SS_LEFT, duration_t(stats.nextService1).toString(buffer));            // > 7d 12h 11m 10s
+      STATIC_ITEM_P(PSTR(SERVICE_NAME_1 " "), SS_LEFT, buffer);                               // Service X in:
+      STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService1).toString(buffer));    // > 7d 12h 11m 10s
     #endif
 
     #if SERVICE_INTERVAL_2 > 0
-      STATIC_ITEM(SERVICE_NAME_2 MSG_SERVICE_IN, SS_LEFT);
-      STATIC_ITEM("> ", SS_LEFT, duration_t(stats.nextService2).toString(buffer));
+      STATIC_ITEM_P(PSTR(SERVICE_NAME_2 " "), SS_LEFT, buffer);
+      STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService2).toString(buffer));
     #endif
 
     #if SERVICE_INTERVAL_3 > 0
-      STATIC_ITEM(SERVICE_NAME_3 MSG_SERVICE_IN, SS_LEFT);
-      STATIC_ITEM("> ", SS_LEFT, duration_t(stats.nextService3).toString(buffer));
+      STATIC_ITEM_P(PSTR(SERVICE_NAME_3 " "), SS_LEFT, buffer);
+      STATIC_ITEM_P(PSTR("> "), SS_LEFT, duration_t(stats.nextService3).toString(buffer));
     #endif
 
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true
     #endif
   );
 
-  char buffer[21];  // for STATIC_PAIR_P
+  char buffer[21];  // For macro usage
 
   START_SCREEN();
 
   #if EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
-    STATIC_ITEM("T0: " THERMISTOR_NAME, SS_INVERT);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
+    STATIC_ITEM_P(PSTR(LCD_STR_E0 ": " THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
-    STATIC_ITEM("T1: " THERMISTOR_NAME, SS_INVERT);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
+    STATIC_ITEM_P(PSTR(LCD_STR_E1 ": " THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
-    STATIC_ITEM("T2: " THERMISTOR_NAME, SS_INVERT);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
+    STATIC_ITEM_P(PSTR(LCD_STR_E2 ": " THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_3 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
-    STATIC_ITEM("T3: " THERMISTOR_NAME, SS_INVERT);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
+    STATIC_ITEM_P(PSTR(LCD_STR_E3 ": " THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
-    STATIC_ITEM("T4: " THERMISTOR_NAME, SS_INVERT);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
+    STATIC_ITEM_P(PSTR(LCD_STR_E4 ": " THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
-    STATIC_ITEM("T5: " THERMISTOR_NAME, SS_INVERT);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
+    STATIC_ITEM_P(PSTR(LCD_STR_E5 ": " THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
   #endif
 
   #if EXTRUDERS
   {
     STATIC_ITEM(
       #if WATCH_HOTENDS
         MSG_INFO_RUNAWAY_ON
       #else
         MSG_INFO_RUNAWAY_OFF
       #endif
       , SS_LEFT
     );
   }
   #endif
 
   #if HAS_HEATED_BED
   {
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
-    STATIC_ITEM("TBed:" THERMISTOR_NAME, SS_INVERT);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
+    STATIC_ITEM_P(PSTR("BED:" THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
     STATIC_ITEM(
       #if WATCH_BED
         MSG_INFO_RUNAWAY_ON
       #else
         MSG_INFO_RUNAWAY_OFF
       #endif
       , SS_LEFT
     );
   }
   #endif
 
   #if HAS_HEATED_CHAMBER
   {
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
     #include "../thermistornames.h"
-    STATIC_ITEM("TCham:" THERMISTOR_NAME, SS_INVERT);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
+    STATIC_ITEM_P(PSTR("CHAM:" THERMISTOR_NAME), SS_INVERT);
+    VALUE_ITEM_P(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
+    VALUE_ITEM_P(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
     STATIC_ITEM(
       #if WATCH_CHAMBER
         MSG_INFO_RUNAWAY_ON
       #else
         MSG_INFO_RUNAWAY_OFF
       #endif
       , SS_LEFT
     );
   }
   #endif
@@ -213,30 +217,30 @@ void menu_info_thermistors() {
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true
     #endif
   );
 
-  char buffer[21];  // for STATIC_PAIR_P
+  char buffer[21];  // For macro usage
 
   START_SCREEN();
-  STATIC_ITEM(BOARD_INFO_NAME, SS_CENTER|SS_INVERT);                // MyPrinterController
+  STATIC_ITEM_P(PSTR(BOARD_INFO_NAME), SS_CENTER|SS_INVERT);       // MyPrinterController
   #ifdef BOARD_WEBSITE_URL
-    STATIC_ITEM(BOARD_WEBSITE_URL, SS_LEFT);                        // www.my3dprinter.com
+    STATIC_ITEM_P(PSTR(BOARD_WEBSITE_URL), SS_LEFT);               // www.my3dprinter.com
   #endif
-  STATIC_PAIR_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
-  STATIC_PAIR_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
-  STATIC_PAIR_P(MSG_INFO_PSU,      PSU_NAME, SS_CENTER);
+  VALUE_ITEM_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
+  VALUE_ITEM_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
+  VALUE_ITEM_P(MSG_INFO_PSU,      PSU_NAME, SS_CENTER);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
 
   void menu_show_marlin_bootscreen() {
     if (ui.use_click()) { ui.goto_previous_screen_no_defer(); }
@@ -252,26 +256,27 @@ void menu_info_board() {
 
 #else
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.goto_previous_screen(
       #if ENABLED(TURBO_BACK_MENU_ITEM)
         true
       #endif
     );
     START_SCREEN();
-    STATIC_ITEM(MSG_MARLIN, SS_CENTER|SS_INVERT);               // Marlin
-    STATIC_ITEM(SHORT_BUILD_VERSION);                           // x.x.x-Branch
-    STATIC_ITEM(STRING_DISTRIBUTION_DATE);                      // YYYY-MM-DD HH:MM
-    STATIC_ITEM(MACHINE_NAME);                                  // My3DPrinter
-    STATIC_ITEM(WEBSITE_URL);                                   // www.my3dprinter.com
-    STATIC_ITEM(MSG_INFO_EXTRUDERS ": " STRINGIFY(EXTRUDERS));  // Extruders: 2
+    STATIC_ITEM_P(PSTR(MSG_MARLIN), SS_CENTER|SS_INVERT);       // Marlin
+    STATIC_ITEM_P(PSTR(SHORT_BUILD_VERSION));                   // x.x.x-Branch
+    STATIC_ITEM_P(PSTR(STRING_DISTRIBUTION_DATE));              // YYYY-MM-DD HH:MM
+    STATIC_ITEM_P(PSTR(MACHINE_NAME));                          // My3DPrinter
+    STATIC_ITEM_P(PSTR(WEBSITE_URL));                           // www.my3dprinter.com
+    char buffer[21];
+    VALUE_ITEM_P(MSG_INFO_EXTRUDERS, STRINGIFY(EXTRUDERS), SS_CENTER); // Extruders: 2
     #if ENABLED(AUTO_BED_LEVELING_3POINT)
       STATIC_ITEM(MSG_3POINT_LEVELING);                         // 3-Point Leveling
     #elif ENABLED(AUTO_BED_LEVELING_LINEAR)
       STATIC_ITEM(MSG_LINEAR_LEVELING);                         // Linear Leveling
     #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
       STATIC_ITEM(MSG_BILINEAR_LEVELING);                       // Bi-linear Leveling
     #elif ENABLED(AUTO_BED_LEVELING_UBL)
       STATIC_ITEM(MSG_UBL_LEVELING);                            // Unified Bed Leveling
     #elif ENABLED(MESH_BED_LEVELING)
       STATIC_ITEM(MSG_MESH_LEVELING);                           // Mesh Leveling

commit 273cbe931e868554bf6782881443ccbf5fdd4208
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 3 05:38:30 2019 -0500

    Aliases for common menu item types

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index ac3e720281..26d9441ff7 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -279,48 +279,48 @@ void menu_info_board() {
     END_SCREEN();
   }
 
 #endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
-  MENU_BACK(MSG_MAIN);
+  BACK_ITEM(MSG_MAIN);
   #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
-    MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, (
+    SUBMENU(MSG_INFO_PRINTER_MENU, (
       #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
         menu_show_custom_bootscreen
       #else
         menu_show_marlin_bootscreen
       #endif
     ));
   #else
-    MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, menu_info_printer);           // Printer Info >
-    MENU_ITEM(submenu, MSG_INFO_BOARD_MENU, menu_info_board);               // Board Info >
+    SUBMENU(MSG_INFO_PRINTER_MENU, menu_info_printer);           // Printer Info >
+    SUBMENU(MSG_INFO_BOARD_MENU, menu_info_board);               // Board Info >
     #if EXTRUDERS
-      MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
+      SUBMENU(MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
     #endif
   #endif
 
   #if ENABLED(PRINTCOUNTER)
-    MENU_ITEM(submenu, MSG_INFO_STATS_MENU, menu_info_stats);               // Printer Stats >
+    SUBMENU(MSG_INFO_STATS_MENU, menu_info_stats);               // Printer Stats >
   #endif
 
   #if HAS_GAMES
     #if ENABLED(GAMES_EASTER_EGG)
-      MENU_ITEM_DUMMY();
-      MENU_ITEM_DUMMY();
-      MENU_ITEM_DUMMY();
+      SKIP_ITEM();
+      SKIP_ITEM();
+      SKIP_ITEM();
     #endif
-    MENU_ITEM(submenu, MSG_GAMES, (
+    SUBMENU(MSG_GAMES, (
       #if HAS_GAME_MENU
         menu_game
       #elif ENABLED(MARLIN_BRICKOUT)
         brickout.enter_game
       #elif ENABLED(MARLIN_INVADERS)
         invaders.enter_game
       #elif ENABLED(MARLIN_SNAKE)
         snake.enter_game
       #elif ENABLED(MARLIN_MAZE)
         maze.enter_game

commit 7e727684334d9feca024eb749329bf4a795ca4f2
Author: Tim Moore <tim@youngmoores.com>
Date:   Sat Sep 28 19:53:40 2019 -0700

    Info Menu: Runaway Watch state (#14827)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 7732bd7eb6..ac3e720281 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -95,20 +95,21 @@
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true
     #endif
   );
 
   char buffer[21];  // for STATIC_PAIR_P
 
   START_SCREEN();
+
   #if EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     STATIC_ITEM("T0: " THERMISTOR_NAME, SS_INVERT);
     STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
     STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
@@ -148,28 +149,71 @@ void menu_info_thermistors() {
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
     STATIC_ITEM("T5: " THERMISTOR_NAME, SS_INVERT);
     STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
     STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
   #endif
 
+  #if EXTRUDERS
+  {
+    STATIC_ITEM(
+      #if WATCH_HOTENDS
+        MSG_INFO_RUNAWAY_ON
+      #else
+        MSG_INFO_RUNAWAY_OFF
+      #endif
+      , SS_LEFT
+    );
+  }
+  #endif
+
   #if HAS_HEATED_BED
+  {
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM("TBed:" THERMISTOR_NAME, SS_INVERT);
     STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
     STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(
+      #if WATCH_BED
+        MSG_INFO_RUNAWAY_ON
+      #else
+        MSG_INFO_RUNAWAY_OFF
+      #endif
+      , SS_LEFT
+    );
+  }
+  #endif
+
+  #if HAS_HEATED_CHAMBER
+  {
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_CHAMBER
+    #include "../thermistornames.h"
+    STATIC_ITEM("TCham:" THERMISTOR_NAME, SS_INVERT);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(CHAMBER_MINTEMP), SS_LEFT);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(CHAMBER_MAXTEMP), SS_LEFT);
+    STATIC_ITEM(
+      #if WATCH_CHAMBER
+        MSG_INFO_RUNAWAY_ON
+      #else
+        MSG_INFO_RUNAWAY_OFF
+      #endif
+      , SS_LEFT
+    );
+  }
   #endif
+
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true

commit 4c16661153b5035c2c8b4ed9eccce6307ae5ebb4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 27 03:06:23 2019 -0500

    Use named styles in draw_menu_item_static

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index acc780f296..7732bd7eb6 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -27,68 +27,68 @@
 #include "../../inc/MarlinConfigPre.h"
 
 #if HAS_LCD_MENU && ENABLED(LCD_INFO_MENU)
 
 #include "menu.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
-#define STATIC_PAIR(MSG, VALUE, CNTR)    do{ strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, CNTR, false, buffer); }while(0)
-#define STATIC_PAIR_P(MSG, PVALUE, CNTR) do{ strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, CNTR, false, buffer); }while(0)
+#define STATIC_PAIR(MSG, VALUE, STYL)    do{ strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, STYL, buffer); }while(0)
+#define STATIC_PAIR_P(MSG, PVALUE, STYL) do{ strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, STYL, buffer); }while(0)
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.goto_previous_screen(
       #if ENABLED(TURBO_BACK_MENU_ITEM)
         true
       #endif
     );
 
     char buffer[21];  // for STATIC_PAIR_P
 
     printStatistics stats = print_job_timer.getStats();
 
-    START_SCREEN();                                                                                // 12345678901234567890
-    STATIC_PAIR(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), false);                    // Print Count: 999
-    STATIC_PAIR(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), false);            // Completed  : 666
+    START_SCREEN();                                                                           // 12345678901234567890
+    STATIC_PAIR(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), SS_LEFT);             // Print Count: 999
+    STATIC_PAIR(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), SS_LEFT);     // Completed  : 666
 
-    STATIC_PAIR_P(MSG_INFO_PRINT_TIME, "", false);                                                 // Total print Time:
-    STATIC_ITEM("> ", false, false, duration_t(stats.printTime).toString(buffer));                 // > 99y 364d 23h 59m 59s
+    STATIC_PAIR_P(MSG_INFO_PRINT_TIME, "", SS_LEFT);                                          // Total print Time:
+    STATIC_ITEM("> ", SS_LEFT, duration_t(stats.printTime).toString(buffer));                 // > 99y 364d 23h 59m 59s
 
-    STATIC_PAIR_P(MSG_INFO_PRINT_LONGEST, "", false);                                              // Longest job time:
-    STATIC_ITEM("> ", false, false, duration_t(stats.longestPrint).toString(buffer));              // > 99y 364d 23h 59m 59s
+    STATIC_PAIR_P(MSG_INFO_PRINT_LONGEST, "", SS_LEFT);                                       // Longest job time:
+    STATIC_ITEM("> ", SS_LEFT, duration_t(stats.longestPrint).toString(buffer));              // > 99y 364d 23h 59m 59s
 
-    STATIC_PAIR_P(MSG_INFO_PRINT_FILAMENT, "", false);                                             // Extruded total:
+    STATIC_PAIR_P(MSG_INFO_PRINT_FILAMENT, "", SS_LEFT);                                      // Extruded total:
     sprintf_P(buffer, PSTR("%ld.%im"), long(stats.filamentUsed / 1000), int16_t(stats.filamentUsed / 100) % 10);
-    STATIC_ITEM("> ", false, false, buffer);                                                       // > 125m
+    STATIC_ITEM("> ", SS_LEFT, buffer);                                                       // > 125m
 
     #if SERVICE_INTERVAL_1 > 0
-      STATIC_ITEM(SERVICE_NAME_1 MSG_SERVICE_IN, false, false);                                    // Service X in:
-      STATIC_ITEM("> ", false, false, duration_t(stats.nextService1).toString(buffer));            // > 7d 12h 11m 10s
+      STATIC_ITEM(SERVICE_NAME_1 MSG_SERVICE_IN, SS_LEFT);                                    // Service X in:
+      STATIC_ITEM("> ", SS_LEFT, duration_t(stats.nextService1).toString(buffer));            // > 7d 12h 11m 10s
     #endif
 
     #if SERVICE_INTERVAL_2 > 0
-      STATIC_ITEM(SERVICE_NAME_2 MSG_SERVICE_IN, false, false);
-      STATIC_ITEM("> ", false, false, duration_t(stats.nextService2).toString(buffer));
+      STATIC_ITEM(SERVICE_NAME_2 MSG_SERVICE_IN, SS_LEFT);
+      STATIC_ITEM("> ", SS_LEFT, duration_t(stats.nextService2).toString(buffer));
     #endif
 
     #if SERVICE_INTERVAL_3 > 0
-      STATIC_ITEM(SERVICE_NAME_3 MSG_SERVICE_IN, false, false);
-      STATIC_ITEM("> ", false, false, duration_t(stats.nextService3).toString(buffer));
+      STATIC_ITEM(SERVICE_NAME_3 MSG_SERVICE_IN, SS_LEFT);
+      STATIC_ITEM("> ", SS_LEFT, duration_t(stats.nextService3).toString(buffer));
     #endif
 
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
@@ -98,101 +98,101 @@ void menu_info_thermistors() {
       true
     #endif
   );
 
   char buffer[21];  // for STATIC_PAIR_P
 
   START_SCREEN();
   #if EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
-    STATIC_ITEM("T0: " THERMISTOR_NAME, false, true);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), false);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), false);
+    STATIC_ITEM("T0: " THERMISTOR_NAME, SS_INVERT);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), SS_LEFT);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
-    STATIC_ITEM("T1: " THERMISTOR_NAME, false, true);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), false);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), false);
+    STATIC_ITEM("T1: " THERMISTOR_NAME, SS_INVERT);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), SS_LEFT);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
-    STATIC_ITEM("T2: " THERMISTOR_NAME, false, true);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), false);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), false);
+    STATIC_ITEM("T2: " THERMISTOR_NAME, SS_INVERT);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), SS_LEFT);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_3 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
-    STATIC_ITEM("T3: " THERMISTOR_NAME, false, true);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), false);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), false);
+    STATIC_ITEM("T3: " THERMISTOR_NAME, SS_INVERT);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), SS_LEFT);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
-    STATIC_ITEM("T4: " THERMISTOR_NAME, false, true);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), false);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), false);
+    STATIC_ITEM("T4: " THERMISTOR_NAME, SS_INVERT);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), SS_LEFT);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), SS_LEFT);
   #endif
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
-    STATIC_ITEM("T5: " THERMISTOR_NAME, false, true);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), false);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), false);
+    STATIC_ITEM("T5: " THERMISTOR_NAME, SS_INVERT);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), SS_LEFT);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), SS_LEFT);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
-    STATIC_ITEM("TBed:" THERMISTOR_NAME, false, true);
-    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), false);
-    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), false);
+    STATIC_ITEM("TBed:" THERMISTOR_NAME, SS_INVERT);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), SS_LEFT);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), SS_LEFT);
   #endif
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true
     #endif
   );
 
   char buffer[21];  // for STATIC_PAIR_P
 
   START_SCREEN();
-  STATIC_ITEM(BOARD_INFO_NAME, true, true);                       // MyPrinterController
+  STATIC_ITEM(BOARD_INFO_NAME, SS_CENTER|SS_INVERT);                // MyPrinterController
   #ifdef BOARD_WEBSITE_URL
-    STATIC_ITEM(BOARD_WEBSITE_URL, false, false);                 // www.my3dprinter.com
+    STATIC_ITEM(BOARD_WEBSITE_URL, SS_LEFT);                        // www.my3dprinter.com
   #endif
-  STATIC_PAIR_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), true);    // Baud: 250000
-  STATIC_PAIR_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, true);       // Protocol: 1.0
-  STATIC_PAIR_P(MSG_INFO_PSU,      PSU_NAME, true);
+  STATIC_PAIR_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), SS_CENTER); // Baud: 250000
+  STATIC_PAIR_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, SS_CENTER);    // Protocol: 1.0
+  STATIC_PAIR_P(MSG_INFO_PSU,      PSU_NAME, SS_CENTER);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
 
   void menu_show_marlin_bootscreen() {
     if (ui.use_click()) { ui.goto_previous_screen_no_defer(); }
@@ -208,36 +208,36 @@ void menu_info_board() {
 
 #else
 
   void menu_info_printer() {
     if (ui.use_click()) return ui.goto_previous_screen(
       #if ENABLED(TURBO_BACK_MENU_ITEM)
         true
       #endif
     );
     START_SCREEN();
-    STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin
-    STATIC_ITEM(SHORT_BUILD_VERSION, true);                          // x.x.x-Branch
-    STATIC_ITEM(STRING_DISTRIBUTION_DATE, true);                     // YYYY-MM-DD HH:MM
-    STATIC_ITEM(MACHINE_NAME, true);                                 // My3DPrinter
-    STATIC_ITEM(WEBSITE_URL, true);                                  // www.my3dprinter.com
-    STATIC_ITEM(MSG_INFO_EXTRUDERS ": " STRINGIFY(EXTRUDERS), true); // Extruders: 2
+    STATIC_ITEM(MSG_MARLIN, SS_CENTER|SS_INVERT);               // Marlin
+    STATIC_ITEM(SHORT_BUILD_VERSION);                           // x.x.x-Branch
+    STATIC_ITEM(STRING_DISTRIBUTION_DATE);                      // YYYY-MM-DD HH:MM
+    STATIC_ITEM(MACHINE_NAME);                                  // My3DPrinter
+    STATIC_ITEM(WEBSITE_URL);                                   // www.my3dprinter.com
+    STATIC_ITEM(MSG_INFO_EXTRUDERS ": " STRINGIFY(EXTRUDERS));  // Extruders: 2
     #if ENABLED(AUTO_BED_LEVELING_3POINT)
-      STATIC_ITEM(MSG_3POINT_LEVELING, true);                        // 3-Point Leveling
+      STATIC_ITEM(MSG_3POINT_LEVELING);                         // 3-Point Leveling
     #elif ENABLED(AUTO_BED_LEVELING_LINEAR)
-      STATIC_ITEM(MSG_LINEAR_LEVELING, true);                        // Linear Leveling
+      STATIC_ITEM(MSG_LINEAR_LEVELING);                         // Linear Leveling
     #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
-      STATIC_ITEM(MSG_BILINEAR_LEVELING, true);                      // Bi-linear Leveling
+      STATIC_ITEM(MSG_BILINEAR_LEVELING);                       // Bi-linear Leveling
     #elif ENABLED(AUTO_BED_LEVELING_UBL)
-      STATIC_ITEM(MSG_UBL_LEVELING, true);                           // Unified Bed Leveling
+      STATIC_ITEM(MSG_UBL_LEVELING);                            // Unified Bed Leveling
     #elif ENABLED(MESH_BED_LEVELING)
-      STATIC_ITEM(MSG_MESH_LEVELING, true);                          // Mesh Leveling
+      STATIC_ITEM(MSG_MESH_LEVELING);                           // Mesh Leveling
     #endif
     END_SCREEN();
   }
 
 #endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
@@ -245,29 +245,29 @@ void menu_info() {
   MENU_BACK(MSG_MAIN);
   #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
     MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, (
       #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
         menu_show_custom_bootscreen
       #else
         menu_show_marlin_bootscreen
       #endif
     ));
   #else
-    MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, menu_info_printer);        // Printer Info >
-    MENU_ITEM(submenu, MSG_INFO_BOARD_MENU, menu_info_board);            // Board Info >
+    MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, menu_info_printer);           // Printer Info >
+    MENU_ITEM(submenu, MSG_INFO_BOARD_MENU, menu_info_board);               // Board Info >
     #if EXTRUDERS
-      MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors); // Thermistors >
+      MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors);  // Thermistors >
     #endif
   #endif
 
   #if ENABLED(PRINTCOUNTER)
-    MENU_ITEM(submenu, MSG_INFO_STATS_MENU, menu_info_stats);          // Printer Stats >
+    MENU_ITEM(submenu, MSG_INFO_STATS_MENU, menu_info_stats);               // Printer Stats >
   #endif
 
   #if HAS_GAMES
     #if ENABLED(GAMES_EASTER_EGG)
       MENU_ITEM_DUMMY();
       MENU_ITEM_DUMMY();
       MENU_ITEM_DUMMY();
     #endif
     MENU_ITEM(submenu, MSG_GAMES, (
       #if HAS_GAME_MENU

commit d683f980195fec994b07193006495499adc7f795
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 27 02:59:49 2019 -0500

    Return buffer in duration.toString

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 86e86dbdee..acc780f296 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -52,54 +52,43 @@
     );
 
     char buffer[21];  // for STATIC_PAIR_P
 
     printStatistics stats = print_job_timer.getStats();
 
     START_SCREEN();                                                                                // 12345678901234567890
     STATIC_PAIR(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), false);                    // Print Count: 999
     STATIC_PAIR(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), false);            // Completed  : 666
 
-    duration_t elapsed = stats.printTime;
-    elapsed.toString(buffer);
-
     STATIC_PAIR_P(MSG_INFO_PRINT_TIME, "", false);                                                 // Total print Time:
-    STATIC_ITEM("> ", false, false, buffer);                                                       // > 99y 364d 23h 59m 59s
+    STATIC_ITEM("> ", false, false, duration_t(stats.printTime).toString(buffer));                 // > 99y 364d 23h 59m 59s
 
     STATIC_PAIR_P(MSG_INFO_PRINT_LONGEST, "", false);                                              // Longest job time:
-    elapsed = stats.longestPrint;
-    elapsed.toString(buffer);
-    STATIC_ITEM("> ", false, false, buffer);                                                       // > 99y 364d 23h 59m 59s
+    STATIC_ITEM("> ", false, false, duration_t(stats.longestPrint).toString(buffer));              // > 99y 364d 23h 59m 59s
 
     STATIC_PAIR_P(MSG_INFO_PRINT_FILAMENT, "", false);                                             // Extruded total:
     sprintf_P(buffer, PSTR("%ld.%im"), long(stats.filamentUsed / 1000), int16_t(stats.filamentUsed / 100) % 10);
     STATIC_ITEM("> ", false, false, buffer);                                                       // > 125m
 
     #if SERVICE_INTERVAL_1 > 0
-      elapsed = stats.nextService1;
-      elapsed.toString(buffer);
       STATIC_ITEM(SERVICE_NAME_1 MSG_SERVICE_IN, false, false);                                    // Service X in:
-      STATIC_ITEM("> ", false, false, buffer);                                                     // > 7d 12h 11m 10s
+      STATIC_ITEM("> ", false, false, duration_t(stats.nextService1).toString(buffer));            // > 7d 12h 11m 10s
     #endif
 
     #if SERVICE_INTERVAL_2 > 0
-      elapsed = stats.nextService2;
-      elapsed.toString(buffer);
       STATIC_ITEM(SERVICE_NAME_2 MSG_SERVICE_IN, false, false);
-      STATIC_ITEM("> ", false, false, buffer);
+      STATIC_ITEM("> ", false, false, duration_t(stats.nextService2).toString(buffer));
     #endif
 
     #if SERVICE_INTERVAL_3 > 0
-      elapsed = stats.nextService3;
-      elapsed.toString(buffer);
       STATIC_ITEM(SERVICE_NAME_3 MSG_SERVICE_IN, false, false);
-      STATIC_ITEM("> ", false, false, buffer);
+      STATIC_ITEM("> ", false, false, duration_t(stats.nextService3).toString(buffer));
     #endif
 
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //

commit a18d16fb8b92c78093e25f8bb88cd0a49074678e
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Fri Sep 27 03:38:43 2019 -0600

    Do not implicitly concatenate localized strings (#15383)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 815f20ace2..86e86dbdee 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -27,69 +27,74 @@
 #include "../../inc/MarlinConfigPre.h"
 
 #if HAS_LCD_MENU && ENABLED(LCD_INFO_MENU)
 
 #include "menu.h"
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
+#define STATIC_PAIR(MSG, VALUE, CNTR)    do{ strcpy_P(buffer, PSTR(": ")); strcpy(buffer + 2, VALUE); STATIC_ITEM(MSG, CNTR, false, buffer); }while(0)
+#define STATIC_PAIR_P(MSG, PVALUE, CNTR) do{ strcpy_P(buffer, PSTR(": ")); strcpy_P(buffer + 2, PSTR(PVALUE)); STATIC_ITEM(MSG, CNTR, false, buffer); }while(0)
+
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.goto_previous_screen(
       #if ENABLED(TURBO_BACK_MENU_ITEM)
         true
       #endif
     );
 
-    char buffer[21];
+    char buffer[21];  // for STATIC_PAIR_P
+
     printStatistics stats = print_job_timer.getStats();
 
     START_SCREEN();                                                                                // 12345678901234567890
-    STATIC_ITEM(MSG_INFO_PRINT_COUNT ": ", false, false, i16tostr3left(stats.totalPrints));        // Print Count: 999
-    STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS": ", false, false, i16tostr3left(stats.finishedPrints)); // Completed  : 666
+    STATIC_PAIR(MSG_INFO_PRINT_COUNT, i16tostr3left(stats.totalPrints), false);                    // Print Count: 999
+    STATIC_PAIR(MSG_INFO_COMPLETED_PRINTS, i16tostr3left(stats.finishedPrints), false);            // Completed  : 666
 
     duration_t elapsed = stats.printTime;
     elapsed.toString(buffer);
 
-    STATIC_ITEM(MSG_INFO_PRINT_TIME ":", false, false);                                            // Total print Time:
+    STATIC_PAIR_P(MSG_INFO_PRINT_TIME, "", false);                                                 // Total print Time:
     STATIC_ITEM("> ", false, false, buffer);                                                       // > 99y 364d 23h 59m 59s
 
+    STATIC_PAIR_P(MSG_INFO_PRINT_LONGEST, "", false);                                              // Longest job time:
     elapsed = stats.longestPrint;
     elapsed.toString(buffer);
-
-    STATIC_ITEM(MSG_INFO_PRINT_LONGEST ":", false, false);                                         // Longest job time:
     STATIC_ITEM("> ", false, false, buffer);                                                       // > 99y 364d 23h 59m 59s
 
+    STATIC_PAIR_P(MSG_INFO_PRINT_FILAMENT, "", false);                                             // Extruded total:
     sprintf_P(buffer, PSTR("%ld.%im"), long(stats.filamentUsed / 1000), int16_t(stats.filamentUsed / 100) % 10);
-    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT ":", false, false);                                        // Extruded total:
     STATIC_ITEM("> ", false, false, buffer);                                                       // > 125m
 
     #if SERVICE_INTERVAL_1 > 0
       elapsed = stats.nextService1;
       elapsed.toString(buffer);
       STATIC_ITEM(SERVICE_NAME_1 MSG_SERVICE_IN, false, false);                                    // Service X in:
       STATIC_ITEM("> ", false, false, buffer);                                                     // > 7d 12h 11m 10s
     #endif
+
     #if SERVICE_INTERVAL_2 > 0
       elapsed = stats.nextService2;
       elapsed.toString(buffer);
       STATIC_ITEM(SERVICE_NAME_2 MSG_SERVICE_IN, false, false);
       STATIC_ITEM("> ", false, false, buffer);
     #endif
+
     #if SERVICE_INTERVAL_3 > 0
       elapsed = stats.nextService3;
       elapsed.toString(buffer);
       STATIC_ITEM(SERVICE_NAME_3 MSG_SERVICE_IN, false, false);
       STATIC_ITEM("> ", false, false, buffer);
     #endif
 
     END_SCREEN();
   }
 
@@ -97,102 +102,108 @@
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true
     #endif
   );
+
+  char buffer[21];  // for STATIC_PAIR_P
+
   START_SCREEN();
   #if EXTRUDERS
     #define THERMISTOR_ID TEMP_SENSOR_0
     #include "../thermistornames.h"
     STATIC_ITEM("T0: " THERMISTOR_NAME, false, true);
-    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_0_MINTEMP), false);
-    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_0_MAXTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_0_MINTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_0_MAXTEMP), false);
   #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
     STATIC_ITEM("T1: " THERMISTOR_NAME, false, true);
-    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_1_MINTEMP), false);
-    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_1_MAXTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_1_MINTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_1_MAXTEMP), false);
   #endif
 
   #if TEMP_SENSOR_2 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_2
     #include "../thermistornames.h"
     STATIC_ITEM("T2: " THERMISTOR_NAME, false, true);
-    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_2_MINTEMP), false);
-    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_2_MAXTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_2_MINTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_2_MAXTEMP), false);
   #endif
 
   #if TEMP_SENSOR_3 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_3
     #include "../thermistornames.h"
     STATIC_ITEM("T3: " THERMISTOR_NAME, false, true);
-    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_3_MINTEMP), false);
-    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_3_MAXTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_3_MINTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_3_MAXTEMP), false);
   #endif
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
     STATIC_ITEM("T4: " THERMISTOR_NAME, false, true);
-    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_4_MINTEMP), false);
-    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_4_MAXTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_4_MINTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_4_MAXTEMP), false);
   #endif
 
   #if TEMP_SENSOR_5 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_5
     #include "../thermistornames.h"
     STATIC_ITEM("T5: " THERMISTOR_NAME, false, true);
-    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_5_MINTEMP), false);
-    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_5_MAXTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(HEATER_5_MINTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(HEATER_5_MAXTEMP), false);
   #endif
 
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM("TBed:" THERMISTOR_NAME, false, true);
-    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(BED_MINTEMP), false);
-    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(BED_MAXTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MIN_TEMP, STRINGIFY(BED_MINTEMP), false);
+    STATIC_PAIR_P(MSG_INFO_MAX_TEMP, STRINGIFY(BED_MAXTEMP), false);
   #endif
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true
     #endif
   );
+
+  char buffer[21];  // for STATIC_PAIR_P
+
   START_SCREEN();
   STATIC_ITEM(BOARD_INFO_NAME, true, true);                       // MyPrinterController
   #ifdef BOARD_WEBSITE_URL
     STATIC_ITEM(BOARD_WEBSITE_URL, false, false);                 // www.my3dprinter.com
   #endif
-  STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true);  // Baud: 250000
-  STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);     // Protocol: 1.0
-  STATIC_ITEM(MSG_INFO_PSU ": " PSU_NAME, true);
+  STATIC_PAIR_P(MSG_INFO_BAUDRATE, STRINGIFY(BAUDRATE), true);    // Baud: 250000
+  STATIC_PAIR_P(MSG_INFO_PROTOCOL, PROTOCOL_VERSION, true);       // Protocol: 1.0
+  STATIC_PAIR_P(MSG_INFO_PSU,      PSU_NAME, true);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
 
   void menu_show_marlin_bootscreen() {
     if (ui.use_click()) { ui.goto_previous_screen_no_defer(); }

commit 3348a7d223e95782caf4b86655ae6562317079a6
Author: Frederik Kemner <stuff+github@fredo.org>
Date:   Fri Sep 13 08:36:44 2019 +0200

    Fix Info Menu with EXTRUDERS==0 (#15230)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 9fe2ea6108..815f20ace2 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -98,25 +98,27 @@
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true
     #endif
   );
   START_SCREEN();
-  #define THERMISTOR_ID TEMP_SENSOR_0
-  #include "../thermistornames.h"
-  STATIC_ITEM("T0: " THERMISTOR_NAME, false, true);
-  STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_0_MINTEMP), false);
-  STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_0_MAXTEMP), false);
+  #if EXTRUDERS
+    #define THERMISTOR_ID TEMP_SENSOR_0
+    #include "../thermistornames.h"
+    STATIC_ITEM("T0: " THERMISTOR_NAME, false, true);
+    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_0_MINTEMP), false);
+    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_0_MAXTEMP), false);
+  #endif
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
     #include "../thermistornames.h"
     STATIC_ITEM("T1: " THERMISTOR_NAME, false, true);
     STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_1_MINTEMP), false);
     STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_1_MAXTEMP), false);
   #endif
 
@@ -245,21 +247,23 @@ void menu_info() {
     MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, (
       #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
         menu_show_custom_bootscreen
       #else
         menu_show_marlin_bootscreen
       #endif
     ));
   #else
     MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, menu_info_printer);        // Printer Info >
     MENU_ITEM(submenu, MSG_INFO_BOARD_MENU, menu_info_board);            // Board Info >
-    MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors); // Thermistors >
+    #if EXTRUDERS
+      MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors); // Thermistors >
+    #endif
   #endif
 
   #if ENABLED(PRINTCOUNTER)
     MENU_ITEM(submenu, MSG_INFO_STATS_MENU, menu_info_stats);          // Printer Stats >
   #endif
 
   #if HAS_GAMES
     #if ENABLED(GAMES_EASTER_EGG)
       MENU_ITEM_DUMMY();
       MENU_ITEM_DUMMY();

commit b8e4b993d6689d9aff0a01a7ea6ec2acb8bcf5c0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Aug 25 18:57:32 2019 -0500

    Separate board website URL

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index a66f3d6f19..9fe2ea6108 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -170,23 +170,26 @@ void menu_info_thermistors() {
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.goto_previous_screen(
     #if ENABLED(TURBO_BACK_MENU_ITEM)
       true
     #endif
   );
   START_SCREEN();
-  STATIC_ITEM(BOARD_INFO_NAME, true, true);                      // MyPrinterController
-  STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true); // Baud: 250000
-  STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);    // Protocol: 1.0
+  STATIC_ITEM(BOARD_INFO_NAME, true, true);                       // MyPrinterController
+  #ifdef BOARD_WEBSITE_URL
+    STATIC_ITEM(BOARD_WEBSITE_URL, false, false);                 // www.my3dprinter.com
+  #endif
+  STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true);  // Baud: 250000
+  STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);     // Protocol: 1.0
   STATIC_ITEM(MSG_INFO_PSU ": " PSU_NAME, true);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
 
   void menu_show_marlin_bootscreen() {

commit 6341aefda327425f06991b8339d39a5188e8f457
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Aug 25 19:05:03 2019 -0500

    Info menu tweak style

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 2373774c29..a66f3d6f19 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -180,21 +180,36 @@ void menu_info_board() {
   STATIC_ITEM(BOARD_INFO_NAME, true, true);                      // MyPrinterController
   STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true); // Baud: 250000
   STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);    // Protocol: 1.0
   STATIC_ITEM(MSG_INFO_PSU ": " PSU_NAME, true);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
-#if DISABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
+#if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
+
+  void menu_show_marlin_bootscreen() {
+    if (ui.use_click()) { ui.goto_previous_screen_no_defer(); }
+    ui.draw_marlin_bootscreen();
+  }
+
+  #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
+    void menu_show_custom_bootscreen() {
+      if (ui.use_click()) { ui.goto_screen(menu_show_marlin_bootscreen); }
+      ui.draw_custom_bootscreen();
+    }
+  #endif
+
+#else
+
   void menu_info_printer() {
     if (ui.use_click()) return ui.goto_previous_screen(
       #if ENABLED(TURBO_BACK_MENU_ITEM)
         true
       #endif
     );
     START_SCREEN();
     STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin
     STATIC_ITEM(SHORT_BUILD_VERSION, true);                          // x.x.x-Branch
     STATIC_ITEM(STRING_DISTRIBUTION_DATE, true);                     // YYYY-MM-DD HH:MM
@@ -207,33 +222,22 @@ void menu_info_board() {
       STATIC_ITEM(MSG_LINEAR_LEVELING, true);                        // Linear Leveling
     #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
       STATIC_ITEM(MSG_BILINEAR_LEVELING, true);                      // Bi-linear Leveling
     #elif ENABLED(AUTO_BED_LEVELING_UBL)
       STATIC_ITEM(MSG_UBL_LEVELING, true);                           // Unified Bed Leveling
     #elif ENABLED(MESH_BED_LEVELING)
       STATIC_ITEM(MSG_MESH_LEVELING, true);                          // Mesh Leveling
     #endif
     END_SCREEN();
   }
-#else
-  void menu_show_marlin_bootscreen() {
-    if (ui.use_click()) { ui.goto_previous_screen_no_defer(); }
-    ui.draw_marlin_bootscreen();
-  }
 
-  #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
-    void menu_show_custom_bootscreen() {
-      if (ui.use_click()) { ui.goto_screen(menu_show_marlin_bootscreen); }
-      ui.draw_custom_bootscreen();
-    }
-  #endif
-#endif // LCD_PRINTER_INFO_IS_BOOTSCREEN
+#endif
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
   MENU_BACK(MSG_MAIN);
   #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
     MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, (
       #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)

commit 8033bc87ea13a528184686691f4ee4150d93430e
Author: Tim Moore <tim@youngmoores.com>
Date:   Sat Aug 24 17:50:04 2019 -0700

    Turbo-back Info menu items (#15049)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index cf10f6951b..2373774c29 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -35,21 +35,25 @@
 #endif
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
-    if (ui.use_click()) return ui.goto_previous_screen();
+    if (ui.use_click()) return ui.goto_previous_screen(
+      #if ENABLED(TURBO_BACK_MENU_ITEM)
+        true
+      #endif
+    );
 
     char buffer[21];
     printStatistics stats = print_job_timer.getStats();
 
     START_SCREEN();                                                                                // 12345678901234567890
     STATIC_ITEM(MSG_INFO_PRINT_COUNT ": ", false, false, i16tostr3left(stats.totalPrints));        // Print Count: 999
     STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS": ", false, false, i16tostr3left(stats.finishedPrints)); // Completed  : 666
 
     duration_t elapsed = stats.printTime;
     elapsed.toString(buffer);
@@ -88,21 +92,25 @@
 
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
-  if (ui.use_click()) return ui.goto_previous_screen();
+  if (ui.use_click()) return ui.goto_previous_screen(
+    #if ENABLED(TURBO_BACK_MENU_ITEM)
+      true
+    #endif
+  );
   START_SCREEN();
   #define THERMISTOR_ID TEMP_SENSOR_0
   #include "../thermistornames.h"
   STATIC_ITEM("T0: " THERMISTOR_NAME, false, true);
   STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_0_MINTEMP), false);
   STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_0_MAXTEMP), false);
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
@@ -156,35 +164,43 @@ void menu_info_thermistors() {
     STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(BED_MINTEMP), false);
     STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(BED_MAXTEMP), false);
   #endif
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
-  if (ui.use_click()) return ui.goto_previous_screen();
+  if (ui.use_click()) return ui.goto_previous_screen(
+    #if ENABLED(TURBO_BACK_MENU_ITEM)
+      true
+    #endif
+  );
   START_SCREEN();
   STATIC_ITEM(BOARD_INFO_NAME, true, true);                      // MyPrinterController
   STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true); // Baud: 250000
   STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);    // Protocol: 1.0
   STATIC_ITEM(MSG_INFO_PSU ": " PSU_NAME, true);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 #if DISABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
   void menu_info_printer() {
-    if (ui.use_click()) return ui.goto_previous_screen();
+    if (ui.use_click()) return ui.goto_previous_screen(
+      #if ENABLED(TURBO_BACK_MENU_ITEM)
+        true
+      #endif
+    );
     START_SCREEN();
     STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin
     STATIC_ITEM(SHORT_BUILD_VERSION, true);                          // x.x.x-Branch
     STATIC_ITEM(STRING_DISTRIBUTION_DATE, true);                     // YYYY-MM-DD HH:MM
     STATIC_ITEM(MACHINE_NAME, true);                                 // My3DPrinter
     STATIC_ITEM(WEBSITE_URL, true);                                  // www.my3dprinter.com
     STATIC_ITEM(MSG_INFO_EXTRUDERS ": " STRINGIFY(EXTRUDERS), true); // Extruders: 2
     #if ENABLED(AUTO_BED_LEVELING_3POINT)
       STATIC_ITEM(MSG_3POINT_LEVELING, true);                        // 3-Point Leveling
     #elif ENABLED(AUTO_BED_LEVELING_LINEAR)

commit 0cc524b84f3e640da4b8c2fdfdb9ab87dac251bf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Aug 20 19:08:58 2019 -0500

    Prevent BOARD_NAME conflict with env

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 49a5e6852b..cf10f6951b 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -158,21 +158,21 @@ void menu_info_thermistors() {
   #endif
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.goto_previous_screen();
   START_SCREEN();
-  STATIC_ITEM(BOARD_NAME, true, true);                           // MyPrinterController
+  STATIC_ITEM(BOARD_INFO_NAME, true, true);                      // MyPrinterController
   STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true); // Baud: 250000
   STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);    // Protocol: 1.0
   STATIC_ITEM(MSG_INFO_PSU ": " PSU_NAME, true);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 #if DISABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)

commit fa533846a7fa4131499919b3ecd8913eca16c9e2
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Sat Aug 10 18:23:37 2019 -0600

    Bury easter egg deeper (#14883)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 08edaea438..49a5e6852b 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -233,20 +233,21 @@ void menu_info() {
   #endif
 
   #if ENABLED(PRINTCOUNTER)
     MENU_ITEM(submenu, MSG_INFO_STATS_MENU, menu_info_stats);          // Printer Stats >
   #endif
 
   #if HAS_GAMES
     #if ENABLED(GAMES_EASTER_EGG)
       MENU_ITEM_DUMMY();
       MENU_ITEM_DUMMY();
+      MENU_ITEM_DUMMY();
     #endif
     MENU_ITEM(submenu, MSG_GAMES, (
       #if HAS_GAME_MENU
         menu_game
       #elif ENABLED(MARLIN_BRICKOUT)
         brickout.enter_game
       #elif ENABLED(MARLIN_INVADERS)
         invaders.enter_game
       #elif ENABLED(MARLIN_SNAKE)
         snake.enter_game

commit eefe3f595ae98ed2b32a9a60a5b27ed307993a7d
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Sun Jul 28 21:47:20 2019 -0600

    New options: Bootscreen as Info, game Easter-egg (#13829)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index c87edfdf90..08edaea438 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -21,26 +21,26 @@
  */
 
 //
 // Info Menu
 //
 
 #include "../../inc/MarlinConfigPre.h"
 
 #if HAS_LCD_MENU && ENABLED(LCD_INFO_MENU)
 
+#include "menu.h"
+
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
-#include "menu.h"
-
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.goto_previous_screen();
 
@@ -168,64 +168,95 @@ void menu_info_board() {
   STATIC_ITEM(BOARD_NAME, true, true);                           // MyPrinterController
   STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true); // Baud: 250000
   STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);    // Protocol: 1.0
   STATIC_ITEM(MSG_INFO_PSU ": " PSU_NAME, true);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
-void menu_info_printer() {
-  if (ui.use_click()) return ui.goto_previous_screen();
-  START_SCREEN();
-  STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin
-  STATIC_ITEM(SHORT_BUILD_VERSION, true);                          // x.x.x-Branch
-  STATIC_ITEM(STRING_DISTRIBUTION_DATE, true);                     // YYYY-MM-DD HH:MM
-  STATIC_ITEM(MACHINE_NAME, true);                                 // My3DPrinter
-  STATIC_ITEM(WEBSITE_URL, true);                                  // www.my3dprinter.com
-  STATIC_ITEM(MSG_INFO_EXTRUDERS ": " STRINGIFY(EXTRUDERS), true); // Extruders: 2
-  #if ENABLED(AUTO_BED_LEVELING_3POINT)
-    STATIC_ITEM(MSG_3POINT_LEVELING, true);                        // 3-Point Leveling
-  #elif ENABLED(AUTO_BED_LEVELING_LINEAR)
-    STATIC_ITEM(MSG_LINEAR_LEVELING, true);                        // Linear Leveling
-  #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
-    STATIC_ITEM(MSG_BILINEAR_LEVELING, true);                      // Bi-linear Leveling
-  #elif ENABLED(AUTO_BED_LEVELING_UBL)
-    STATIC_ITEM(MSG_UBL_LEVELING, true);                           // Unified Bed Leveling
-  #elif ENABLED(MESH_BED_LEVELING)
-    STATIC_ITEM(MSG_MESH_LEVELING, true);                          // Mesh Leveling
+#if DISABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
+  void menu_info_printer() {
+    if (ui.use_click()) return ui.goto_previous_screen();
+    START_SCREEN();
+    STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin
+    STATIC_ITEM(SHORT_BUILD_VERSION, true);                          // x.x.x-Branch
+    STATIC_ITEM(STRING_DISTRIBUTION_DATE, true);                     // YYYY-MM-DD HH:MM
+    STATIC_ITEM(MACHINE_NAME, true);                                 // My3DPrinter
+    STATIC_ITEM(WEBSITE_URL, true);                                  // www.my3dprinter.com
+    STATIC_ITEM(MSG_INFO_EXTRUDERS ": " STRINGIFY(EXTRUDERS), true); // Extruders: 2
+    #if ENABLED(AUTO_BED_LEVELING_3POINT)
+      STATIC_ITEM(MSG_3POINT_LEVELING, true);                        // 3-Point Leveling
+    #elif ENABLED(AUTO_BED_LEVELING_LINEAR)
+      STATIC_ITEM(MSG_LINEAR_LEVELING, true);                        // Linear Leveling
+    #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
+      STATIC_ITEM(MSG_BILINEAR_LEVELING, true);                      // Bi-linear Leveling
+    #elif ENABLED(AUTO_BED_LEVELING_UBL)
+      STATIC_ITEM(MSG_UBL_LEVELING, true);                           // Unified Bed Leveling
+    #elif ENABLED(MESH_BED_LEVELING)
+      STATIC_ITEM(MSG_MESH_LEVELING, true);                          // Mesh Leveling
+    #endif
+    END_SCREEN();
+  }
+#else
+  void menu_show_marlin_bootscreen() {
+    if (ui.use_click()) { ui.goto_previous_screen_no_defer(); }
+    ui.draw_marlin_bootscreen();
+  }
+
+  #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
+    void menu_show_custom_bootscreen() {
+      if (ui.use_click()) { ui.goto_screen(menu_show_marlin_bootscreen); }
+      ui.draw_custom_bootscreen();
+    }
   #endif
-  END_SCREEN();
-}
+#endif // LCD_PRINTER_INFO_IS_BOOTSCREEN
 
 //
 // "About Printer" submenu
 //
 void menu_info() {
   START_MENU();
   MENU_BACK(MSG_MAIN);
-  MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, menu_info_printer);        // Printer Info >
-  MENU_ITEM(submenu, MSG_INFO_BOARD_MENU, menu_info_board);            // Board Info >
-  MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors); // Thermistors >
+  #if ENABLED(LCD_PRINTER_INFO_IS_BOOTSCREEN)
+    MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, (
+      #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
+        menu_show_custom_bootscreen
+      #else
+        menu_show_marlin_bootscreen
+      #endif
+    ));
+  #else
+    MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, menu_info_printer);        // Printer Info >
+    MENU_ITEM(submenu, MSG_INFO_BOARD_MENU, menu_info_board);            // Board Info >
+    MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors); // Thermistors >
+  #endif
+
   #if ENABLED(PRINTCOUNTER)
     MENU_ITEM(submenu, MSG_INFO_STATS_MENU, menu_info_stats);          // Printer Stats >
   #endif
+
   #if HAS_GAMES
-    MENU_ITEM(submenu, "Game", (
+    #if ENABLED(GAMES_EASTER_EGG)
+      MENU_ITEM_DUMMY();
+      MENU_ITEM_DUMMY();
+    #endif
+    MENU_ITEM(submenu, MSG_GAMES, (
       #if HAS_GAME_MENU
         menu_game
       #elif ENABLED(MARLIN_BRICKOUT)
         brickout.enter_game
       #elif ENABLED(MARLIN_INVADERS)
         invaders.enter_game
       #elif ENABLED(MARLIN_SNAKE)
         snake.enter_game
       #elif ENABLED(MARLIN_MAZE)
         maze.enter_game
       #endif
     ));
   #endif
+
   END_MENU();
 }
 
 #endif // HAS_LCD_MENU && LCD_INFO_MENU

commit 180f9a4c229ac22cfd20f60c401713ab72ddd86d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jul 28 19:43:19 2019 -0500

    Remove obsolete info menu includes

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index f7b6f3a491..c87edfdf90 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -26,28 +26,20 @@
 
 #include "../../inc/MarlinConfigPre.h"
 
 #if HAS_LCD_MENU && ENABLED(LCD_INFO_MENU)
 
 #if HAS_GAMES
   #include "game/game.h"
 #endif
 
 #include "menu.h"
-// #include "../../module/motion.h"
-// #include "../../module/planner.h"
-// #include "../../module/temperature.h"
-// #include "../../Marlin.h"
-
-// #if HAS_LEVELING
-//   #include "../../feature/bedlevel/bedlevel.h"
-// #endif
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.goto_previous_screen();

commit eb6dec03bd8d5f6a99b594c933f0934c348f5034
Author: Tim Moore <tim@youngmoores.com>
Date:   Thu Jul 4 23:58:34 2019 -0700

    Simplify power supply naming logic (#14488)
    
    Co-Authored-By: Tim Moore <tim.moore@lightbend.com>
    Co-Authored-By: AnHardt <github@kitelab.de>

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index d621711c69..f7b6f3a491 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -169,27 +169,21 @@ void menu_info_thermistors() {
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
   if (ui.use_click()) return ui.goto_previous_screen();
   START_SCREEN();
   STATIC_ITEM(BOARD_NAME, true, true);                           // MyPrinterController
   STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true); // Baud: 250000
   STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);    // Protocol: 1.0
-  #if POWER_SUPPLY == 0
-    STATIC_ITEM(MSG_INFO_PSU ": Generic", true);
-  #elif POWER_SUPPLY == 1
-    STATIC_ITEM(MSG_INFO_PSU ": ATX", true);  // Power Supply: ATX
-  #elif POWER_SUPPLY == 2
-    STATIC_ITEM(MSG_INFO_PSU ": XBox", true); // Power Supply: XBox
-  #endif
+  STATIC_ITEM(MSG_INFO_PSU ": " PSU_NAME, true);
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 void menu_info_printer() {
   if (ui.use_click()) return ui.goto_previous_screen();
   START_SCREEN();
   STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index b5318d266b..d621711c69 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit 9131b11944aecd467ddba995997693ddf5f2a240
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Jun 15 16:57:20 2019 -0500

    Games in Info menu, if enabled

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index eb58b3a56b..b5318d266b 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -21,20 +21,24 @@
  */
 
 //
 // Info Menu
 //
 
 #include "../../inc/MarlinConfigPre.h"
 
 #if HAS_LCD_MENU && ENABLED(LCD_INFO_MENU)
 
+#if HAS_GAMES
+  #include "game/game.h"
+#endif
+
 #include "menu.h"
 // #include "../../module/motion.h"
 // #include "../../module/planner.h"
 // #include "../../module/temperature.h"
 // #include "../../Marlin.h"
 
 // #if HAS_LEVELING
 //   #include "../../feature/bedlevel/bedlevel.h"
 // #endif
 
@@ -213,14 +217,29 @@ void menu_info_printer() {
 //
 void menu_info() {
   START_MENU();
   MENU_BACK(MSG_MAIN);
   MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, menu_info_printer);        // Printer Info >
   MENU_ITEM(submenu, MSG_INFO_BOARD_MENU, menu_info_board);            // Board Info >
   MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors); // Thermistors >
   #if ENABLED(PRINTCOUNTER)
     MENU_ITEM(submenu, MSG_INFO_STATS_MENU, menu_info_stats);          // Printer Stats >
   #endif
+  #if HAS_GAMES
+    MENU_ITEM(submenu, "Game", (
+      #if HAS_GAME_MENU
+        menu_game
+      #elif ENABLED(MARLIN_BRICKOUT)
+        brickout.enter_game
+      #elif ENABLED(MARLIN_INVADERS)
+        invaders.enter_game
+      #elif ENABLED(MARLIN_SNAKE)
+        snake.enter_game
+      #elif ENABLED(MARLIN_MAZE)
+        maze.enter_game
+      #endif
+    ));
+  #endif
   END_MENU();
 }
 
 #endif // HAS_LCD_MENU && LCD_INFO_MENU

commit 44571775bd7eae600e689ce0f3d02f851e9cc733
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 7 01:00:44 2019 -0600

    Further support for 6 extruders

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index f5a84b093b..eb58b3a56b 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -136,20 +136,29 @@ void menu_info_thermistors() {
 
   #if TEMP_SENSOR_4 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_4
     #include "../thermistornames.h"
     STATIC_ITEM("T4: " THERMISTOR_NAME, false, true);
     STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_4_MINTEMP), false);
     STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_4_MAXTEMP), false);
   #endif
 
+  #if TEMP_SENSOR_5 != 0
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_5
+    #include "../thermistornames.h"
+    STATIC_ITEM("T5: " THERMISTOR_NAME, false, true);
+    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_5_MINTEMP), false);
+    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_5_MAXTEMP), false);
+  #endif
+
   #if HAS_HEATED_BED
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_BED
     #include "../thermistornames.h"
     STATIC_ITEM("TBed:" THERMISTOR_NAME, false, true);
     STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(BED_MINTEMP), false);
     STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(BED_MAXTEMP), false);
   #endif
   END_SCREEN();
 }

commit 567d03a2693df88346e15b9ed24cf3a78dd79f88
Author: Roman Moravƒç√≠k <roman.moravcik@gmail.com>
Date:   Sun Feb 17 19:29:49 2019 +0100

    Update Slovak language (#13187)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 3f3ace0f6a..f5a84b093b 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -67,33 +67,33 @@
     STATIC_ITEM(MSG_INFO_PRINT_LONGEST ":", false, false);                                         // Longest job time:
     STATIC_ITEM("> ", false, false, buffer);                                                       // > 99y 364d 23h 59m 59s
 
     sprintf_P(buffer, PSTR("%ld.%im"), long(stats.filamentUsed / 1000), int16_t(stats.filamentUsed / 100) % 10);
     STATIC_ITEM(MSG_INFO_PRINT_FILAMENT ":", false, false);                                        // Extruded total:
     STATIC_ITEM("> ", false, false, buffer);                                                       // > 125m
 
     #if SERVICE_INTERVAL_1 > 0
       elapsed = stats.nextService1;
       elapsed.toString(buffer);
-      STATIC_ITEM(SERVICE_NAME_1 " in:", false, false);                                            // Service X in:
+      STATIC_ITEM(SERVICE_NAME_1 MSG_SERVICE_IN, false, false);                                    // Service X in:
       STATIC_ITEM("> ", false, false, buffer);                                                     // > 7d 12h 11m 10s
     #endif
     #if SERVICE_INTERVAL_2 > 0
       elapsed = stats.nextService2;
       elapsed.toString(buffer);
-      STATIC_ITEM(SERVICE_NAME_2 " in:", false, false);
+      STATIC_ITEM(SERVICE_NAME_2 MSG_SERVICE_IN, false, false);
       STATIC_ITEM("> ", false, false, buffer);
     #endif
     #if SERVICE_INTERVAL_3 > 0
       elapsed = stats.nextService3;
       elapsed.toString(buffer);
-      STATIC_ITEM(SERVICE_NAME_3 " in:", false, false);
+      STATIC_ITEM(SERVICE_NAME_3 MSG_SERVICE_IN, false, false);
       STATIC_ITEM("> ", false, false, buffer);
     #endif
 
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors

commit e56c13670d4ae40339c3a7af61aef3ca08b4128d
Author: revilor <oliver.rossmueller@web.de>
Date:   Tue Feb 12 22:58:56 2019 +0100

    Service interval watchdog (#13105)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index cc9dd427cf..3f3ace0f6a 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -31,53 +31,72 @@
 #include "menu.h"
 // #include "../../module/motion.h"
 // #include "../../module/planner.h"
 // #include "../../module/temperature.h"
 // #include "../../Marlin.h"
 
 // #if HAS_LEVELING
 //   #include "../../feature/bedlevel/bedlevel.h"
 // #endif
 
-
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.goto_previous_screen();
 
     char buffer[21];
     printStatistics stats = print_job_timer.getStats();
 
     START_SCREEN();                                                                                // 12345678901234567890
     STATIC_ITEM(MSG_INFO_PRINT_COUNT ": ", false, false, i16tostr3left(stats.totalPrints));        // Print Count: 999
     STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS": ", false, false, i16tostr3left(stats.finishedPrints)); // Completed  : 666
 
     duration_t elapsed = stats.printTime;
     elapsed.toString(buffer);
 
-    STATIC_ITEM(MSG_INFO_PRINT_TIME ": ", false, false);                                           // Total print Time:
-    STATIC_ITEM("", false, false, buffer);                                                         // 99y 364d 23h 59m 59s
+    STATIC_ITEM(MSG_INFO_PRINT_TIME ":", false, false);                                            // Total print Time:
+    STATIC_ITEM("> ", false, false, buffer);                                                       // > 99y 364d 23h 59m 59s
 
     elapsed = stats.longestPrint;
     elapsed.toString(buffer);
 
-    STATIC_ITEM(MSG_INFO_PRINT_LONGEST ": ", false, false);                                        // Longest job time:
-    STATIC_ITEM("", false, false, buffer);                                                         // 99y 364d 23h 59m 59s
+    STATIC_ITEM(MSG_INFO_PRINT_LONGEST ":", false, false);                                         // Longest job time:
+    STATIC_ITEM("> ", false, false, buffer);                                                       // > 99y 364d 23h 59m 59s
 
     sprintf_P(buffer, PSTR("%ld.%im"), long(stats.filamentUsed / 1000), int16_t(stats.filamentUsed / 100) % 10);
-    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT ": ", false, false);                                       // Extruded total:
-    STATIC_ITEM("", false, false, buffer);                                                         // 125m
+    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT ":", false, false);                                        // Extruded total:
+    STATIC_ITEM("> ", false, false, buffer);                                                       // > 125m
+
+    #if SERVICE_INTERVAL_1 > 0
+      elapsed = stats.nextService1;
+      elapsed.toString(buffer);
+      STATIC_ITEM(SERVICE_NAME_1 " in:", false, false);                                            // Service X in:
+      STATIC_ITEM("> ", false, false, buffer);                                                     // > 7d 12h 11m 10s
+    #endif
+    #if SERVICE_INTERVAL_2 > 0
+      elapsed = stats.nextService2;
+      elapsed.toString(buffer);
+      STATIC_ITEM(SERVICE_NAME_2 " in:", false, false);
+      STATIC_ITEM("> ", false, false, buffer);
+    #endif
+    #if SERVICE_INTERVAL_3 > 0
+      elapsed = stats.nextService3;
+      elapsed.toString(buffer);
+      STATIC_ITEM(SERVICE_NAME_3 " in:", false, false);
+      STATIC_ITEM("> ", false, false, buffer);
+    #endif
+
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
   if (ui.use_click()) return ui.goto_previous_screen();

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 7ed3734842..cc9dd427cf 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit eb78aed863cf20cc02f07b8c3e47d27ae4ed91dd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 12 16:01:04 2019 -0600

    Rename LCD menus according to variable types (#12892)

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index 3bd7054cdc..7ed3734842 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -46,22 +46,22 @@
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
     if (ui.use_click()) return ui.goto_previous_screen();
 
     char buffer[21];
     printStatistics stats = print_job_timer.getStats();
 
     START_SCREEN();                                                                                // 12345678901234567890
-    STATIC_ITEM(MSG_INFO_PRINT_COUNT ": ", false, false, itostr3left(stats.totalPrints));          // Print Count: 999
-    STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS": ", false, false, itostr3left(stats.finishedPrints));   // Completed  : 666
+    STATIC_ITEM(MSG_INFO_PRINT_COUNT ": ", false, false, i16tostr3left(stats.totalPrints));        // Print Count: 999
+    STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS": ", false, false, i16tostr3left(stats.finishedPrints)); // Completed  : 666
 
     duration_t elapsed = stats.printTime;
     elapsed.toString(buffer);
 
     STATIC_ITEM(MSG_INFO_PRINT_TIME ": ", false, false);                                           // Total print Time:
     STATIC_ITEM("", false, false, buffer);                                                         // 99y 364d 23h 59m 59s
 
     elapsed = stats.longestPrint;
     elapsed.toString(buffer);
 

commit a0c795b097a30eff006c8dff178abf5f1f1907fa
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 11 12:16:24 2018 -0600

    Encapsulate common display code in a singleton (#12395)
    
    * Encapsulate common LCD code in a singleton
    * Depend more UBL code on UBL_DEVEL_DEBUGGING
      - Since most users don't need the debugging on at all times, this helps reduce the default build size for UBL by over 2K, a little closer to fitting on 128K boards.

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
index a4860093eb..3bd7054cdc 100644
--- a/Marlin/src/lcd/menu/menu_info.cpp
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -40,21 +40,21 @@
 
 
 #if ENABLED(PRINTCOUNTER)
 
   #include "../../module/printcounter.h"
 
   //
   // About Printer > Printer Stats
   //
   void menu_info_stats() {
-    if (use_click()) { return lcd_goto_previous_menu(); }
+    if (ui.use_click()) return ui.goto_previous_screen();
 
     char buffer[21];
     printStatistics stats = print_job_timer.getStats();
 
     START_SCREEN();                                                                                // 12345678901234567890
     STATIC_ITEM(MSG_INFO_PRINT_COUNT ": ", false, false, itostr3left(stats.totalPrints));          // Print Count: 999
     STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS": ", false, false, itostr3left(stats.finishedPrints));   // Completed  : 666
 
     duration_t elapsed = stats.printTime;
     elapsed.toString(buffer);
@@ -73,21 +73,21 @@
     STATIC_ITEM("", false, false, buffer);                                                         // 125m
     END_SCREEN();
   }
 
 #endif
 
 //
 // About Printer > Thermistors
 //
 void menu_info_thermistors() {
-  if (use_click()) { return lcd_goto_previous_menu(); }
+  if (ui.use_click()) return ui.goto_previous_screen();
   START_SCREEN();
   #define THERMISTOR_ID TEMP_SENSOR_0
   #include "../thermistornames.h"
   STATIC_ITEM("T0: " THERMISTOR_NAME, false, true);
   STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_0_MINTEMP), false);
   STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_0_MAXTEMP), false);
 
   #if TEMP_SENSOR_1 != 0
     #undef THERMISTOR_ID
     #define THERMISTOR_ID TEMP_SENSOR_1
@@ -132,40 +132,40 @@ void menu_info_thermistors() {
     STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(BED_MINTEMP), false);
     STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(BED_MAXTEMP), false);
   #endif
   END_SCREEN();
 }
 
 //
 // About Printer > Board Info
 //
 void menu_info_board() {
-  if (use_click()) { return lcd_goto_previous_menu(); }
+  if (ui.use_click()) return ui.goto_previous_screen();
   START_SCREEN();
   STATIC_ITEM(BOARD_NAME, true, true);                           // MyPrinterController
   STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true); // Baud: 250000
   STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);    // Protocol: 1.0
   #if POWER_SUPPLY == 0
     STATIC_ITEM(MSG_INFO_PSU ": Generic", true);
   #elif POWER_SUPPLY == 1
     STATIC_ITEM(MSG_INFO_PSU ": ATX", true);  // Power Supply: ATX
   #elif POWER_SUPPLY == 2
     STATIC_ITEM(MSG_INFO_PSU ": XBox", true); // Power Supply: XBox
   #endif
   END_SCREEN();
 }
 
 //
 // About Printer > Printer Info
 //
 void menu_info_printer() {
-  if (use_click()) { return lcd_goto_previous_menu(); }
+  if (ui.use_click()) return ui.goto_previous_screen();
   START_SCREEN();
   STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin
   STATIC_ITEM(SHORT_BUILD_VERSION, true);                          // x.x.x-Branch
   STATIC_ITEM(STRING_DISTRIBUTION_DATE, true);                     // YYYY-MM-DD HH:MM
   STATIC_ITEM(MACHINE_NAME, true);                                 // My3DPrinter
   STATIC_ITEM(WEBSITE_URL, true);                                  // www.my3dprinter.com
   STATIC_ITEM(MSG_INFO_EXTRUDERS ": " STRINGIFY(EXTRUDERS), true); // Extruders: 2
   #if ENABLED(AUTO_BED_LEVELING_3POINT)
     STATIC_ITEM(MSG_3POINT_LEVELING, true);                        // 3-Point Leveling
   #elif ENABLED(AUTO_BED_LEVELING_LINEAR)

commit 96f313fb410b764958de61c213dcd5da084ba581
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 27 18:52:20 2018 -0500

    Move Info Menu to its own file

diff --git a/Marlin/src/lcd/menu/menu_info.cpp b/Marlin/src/lcd/menu/menu_info.cpp
new file mode 100644
index 0000000000..a4860093eb
--- /dev/null
+++ b/Marlin/src/lcd/menu/menu_info.cpp
@@ -0,0 +1,198 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+//
+// Info Menu
+//
+
+#include "../../inc/MarlinConfigPre.h"
+
+#if HAS_LCD_MENU && ENABLED(LCD_INFO_MENU)
+
+#include "menu.h"
+// #include "../../module/motion.h"
+// #include "../../module/planner.h"
+// #include "../../module/temperature.h"
+// #include "../../Marlin.h"
+
+// #if HAS_LEVELING
+//   #include "../../feature/bedlevel/bedlevel.h"
+// #endif
+
+
+#if ENABLED(PRINTCOUNTER)
+
+  #include "../../module/printcounter.h"
+
+  //
+  // About Printer > Printer Stats
+  //
+  void menu_info_stats() {
+    if (use_click()) { return lcd_goto_previous_menu(); }
+
+    char buffer[21];
+    printStatistics stats = print_job_timer.getStats();
+
+    START_SCREEN();                                                                                // 12345678901234567890
+    STATIC_ITEM(MSG_INFO_PRINT_COUNT ": ", false, false, itostr3left(stats.totalPrints));          // Print Count: 999
+    STATIC_ITEM(MSG_INFO_COMPLETED_PRINTS": ", false, false, itostr3left(stats.finishedPrints));   // Completed  : 666
+
+    duration_t elapsed = stats.printTime;
+    elapsed.toString(buffer);
+
+    STATIC_ITEM(MSG_INFO_PRINT_TIME ": ", false, false);                                           // Total print Time:
+    STATIC_ITEM("", false, false, buffer);                                                         // 99y 364d 23h 59m 59s
+
+    elapsed = stats.longestPrint;
+    elapsed.toString(buffer);
+
+    STATIC_ITEM(MSG_INFO_PRINT_LONGEST ": ", false, false);                                        // Longest job time:
+    STATIC_ITEM("", false, false, buffer);                                                         // 99y 364d 23h 59m 59s
+
+    sprintf_P(buffer, PSTR("%ld.%im"), long(stats.filamentUsed / 1000), int16_t(stats.filamentUsed / 100) % 10);
+    STATIC_ITEM(MSG_INFO_PRINT_FILAMENT ": ", false, false);                                       // Extruded total:
+    STATIC_ITEM("", false, false, buffer);                                                         // 125m
+    END_SCREEN();
+  }
+
+#endif
+
+//
+// About Printer > Thermistors
+//
+void menu_info_thermistors() {
+  if (use_click()) { return lcd_goto_previous_menu(); }
+  START_SCREEN();
+  #define THERMISTOR_ID TEMP_SENSOR_0
+  #include "../thermistornames.h"
+  STATIC_ITEM("T0: " THERMISTOR_NAME, false, true);
+  STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_0_MINTEMP), false);
+  STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_0_MAXTEMP), false);
+
+  #if TEMP_SENSOR_1 != 0
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_1
+    #include "../thermistornames.h"
+    STATIC_ITEM("T1: " THERMISTOR_NAME, false, true);
+    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_1_MINTEMP), false);
+    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_1_MAXTEMP), false);
+  #endif
+
+  #if TEMP_SENSOR_2 != 0
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_2
+    #include "../thermistornames.h"
+    STATIC_ITEM("T2: " THERMISTOR_NAME, false, true);
+    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_2_MINTEMP), false);
+    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_2_MAXTEMP), false);
+  #endif
+
+  #if TEMP_SENSOR_3 != 0
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_3
+    #include "../thermistornames.h"
+    STATIC_ITEM("T3: " THERMISTOR_NAME, false, true);
+    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_3_MINTEMP), false);
+    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_3_MAXTEMP), false);
+  #endif
+
+  #if TEMP_SENSOR_4 != 0
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_4
+    #include "../thermistornames.h"
+    STATIC_ITEM("T4: " THERMISTOR_NAME, false, true);
+    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(HEATER_4_MINTEMP), false);
+    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(HEATER_4_MAXTEMP), false);
+  #endif
+
+  #if HAS_HEATED_BED
+    #undef THERMISTOR_ID
+    #define THERMISTOR_ID TEMP_SENSOR_BED
+    #include "../thermistornames.h"
+    STATIC_ITEM("TBed:" THERMISTOR_NAME, false, true);
+    STATIC_ITEM(MSG_INFO_MIN_TEMP ": " STRINGIFY(BED_MINTEMP), false);
+    STATIC_ITEM(MSG_INFO_MAX_TEMP ": " STRINGIFY(BED_MAXTEMP), false);
+  #endif
+  END_SCREEN();
+}
+
+//
+// About Printer > Board Info
+//
+void menu_info_board() {
+  if (use_click()) { return lcd_goto_previous_menu(); }
+  START_SCREEN();
+  STATIC_ITEM(BOARD_NAME, true, true);                           // MyPrinterController
+  STATIC_ITEM(MSG_INFO_BAUDRATE ": " STRINGIFY(BAUDRATE), true); // Baud: 250000
+  STATIC_ITEM(MSG_INFO_PROTOCOL ": " PROTOCOL_VERSION, true);    // Protocol: 1.0
+  #if POWER_SUPPLY == 0
+    STATIC_ITEM(MSG_INFO_PSU ": Generic", true);
+  #elif POWER_SUPPLY == 1
+    STATIC_ITEM(MSG_INFO_PSU ": ATX", true);  // Power Supply: ATX
+  #elif POWER_SUPPLY == 2
+    STATIC_ITEM(MSG_INFO_PSU ": XBox", true); // Power Supply: XBox
+  #endif
+  END_SCREEN();
+}
+
+//
+// About Printer > Printer Info
+//
+void menu_info_printer() {
+  if (use_click()) { return lcd_goto_previous_menu(); }
+  START_SCREEN();
+  STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin
+  STATIC_ITEM(SHORT_BUILD_VERSION, true);                          // x.x.x-Branch
+  STATIC_ITEM(STRING_DISTRIBUTION_DATE, true);                     // YYYY-MM-DD HH:MM
+  STATIC_ITEM(MACHINE_NAME, true);                                 // My3DPrinter
+  STATIC_ITEM(WEBSITE_URL, true);                                  // www.my3dprinter.com
+  STATIC_ITEM(MSG_INFO_EXTRUDERS ": " STRINGIFY(EXTRUDERS), true); // Extruders: 2
+  #if ENABLED(AUTO_BED_LEVELING_3POINT)
+    STATIC_ITEM(MSG_3POINT_LEVELING, true);                        // 3-Point Leveling
+  #elif ENABLED(AUTO_BED_LEVELING_LINEAR)
+    STATIC_ITEM(MSG_LINEAR_LEVELING, true);                        // Linear Leveling
+  #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
+    STATIC_ITEM(MSG_BILINEAR_LEVELING, true);                      // Bi-linear Leveling
+  #elif ENABLED(AUTO_BED_LEVELING_UBL)
+    STATIC_ITEM(MSG_UBL_LEVELING, true);                           // Unified Bed Leveling
+  #elif ENABLED(MESH_BED_LEVELING)
+    STATIC_ITEM(MSG_MESH_LEVELING, true);                          // Mesh Leveling
+  #endif
+  END_SCREEN();
+}
+
+//
+// "About Printer" submenu
+//
+void menu_info() {
+  START_MENU();
+  MENU_BACK(MSG_MAIN);
+  MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, menu_info_printer);        // Printer Info >
+  MENU_ITEM(submenu, MSG_INFO_BOARD_MENU, menu_info_board);            // Board Info >
+  MENU_ITEM(submenu, MSG_INFO_THERMISTOR_MENU, menu_info_thermistors); // Thermistors >
+  #if ENABLED(PRINTCOUNTER)
+    MENU_ITEM(submenu, MSG_INFO_STATS_MENU, menu_info_stats);          // Printer Stats >
+  #endif
+  END_MENU();
+}
+
+#endif // HAS_LCD_MENU && LCD_INFO_MENU
