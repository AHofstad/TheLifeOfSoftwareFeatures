commit e4e6abe5af0f97ff5cb0c9334cb298d3584968e3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 9 00:51:08 2022 -0500

    🧑‍💻 Remove servo macros

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index ed156e16e9..82981e44bc 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -49,28 +49,28 @@ void GcodeSuite::M280() {
       if (anew >= 0) {
         #if ENABLED(POLARGRAPH)
           if (parser.seenval('T')) { // (ms) Total duration of servo move
             const int16_t t = constrain(parser.value_int(), 0, 10000);
             const int aold = servo[servo_index].read();
             millis_t now = millis();
             const millis_t start = now, end = start + t;
             while (PENDING(now, end)) {
               safe_delay(50);
               now = _MIN(millis(), end);
-              MOVE_SERVO(servo_index, LROUND(aold + (anew - aold) * (float(now - start) / t)));
+              servo[servo_index].move(LROUND(aold + (anew - aold) * (float(now - start) / t)));
             }
           }
         #endif // POLARGRAPH
-        MOVE_SERVO(servo_index, anew);
+        servo[servo_index].move(anew);
       }
       else
-        DETACH_SERVO(servo_index);
+        servo[servo_index].detach();
     }
     else
       SERIAL_ECHO_MSG(" Servo ", servo_index, ": ", servo[servo_index].read());
   }
   else
     SERIAL_ERROR_MSG("Servo ", servo_index, " out of range");
 
 }
 
 #endif // HAS_SERVOS

commit 2ee39b62f33027f49fc1c62a05379a37fc52077c
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Mon Apr 18 06:03:39 2022 +0200

    🩹 Fix some parameters w/out values (#24051)

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index 2a8e73eafb..ed156e16e9 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -41,21 +41,21 @@ void GcodeSuite::M280() {
   if (!parser.seenval('P')) return;
 
   TERN_(POLARGRAPH, planner.synchronize());
 
   const int servo_index = parser.value_int();
   if (WITHIN(servo_index, 0, NUM_SERVOS - 1)) {
     if (parser.seenval('S')) {
       const int anew = parser.value_int();
       if (anew >= 0) {
         #if ENABLED(POLARGRAPH)
-          if (parser.seen('T')) { // (ms) Total duration of servo move
+          if (parser.seenval('T')) { // (ms) Total duration of servo move
             const int16_t t = constrain(parser.value_int(), 0, 10000);
             const int aold = servo[servo_index].read();
             millis_t now = millis();
             const millis_t start = now, end = start + t;
             while (PENDING(now, end)) {
               safe_delay(50);
               now = _MIN(millis(), end);
               MOVE_SERVO(servo_index, LROUND(aold + (anew - aold) * (float(now - start) / t)));
             }
           }

commit 3344071f24b505d180dd1423b11510172c3f1c1c
Author: Dan Royer <dan@marginallyclever.com>
Date:   Mon Sep 20 13:42:33 2021 -0700

    Polargraph / Makelangelo kinematics (#22790)

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index f285adf47f..2a8e73eafb 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -19,36 +19,58 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 #include "../../inc/MarlinConfig.h"
 
 #if HAS_SERVOS
 
 #include "../gcode.h"
 #include "../../module/servo.h"
+#include "../../module/planner.h"
 
 /**
- * M280: Get or set servo position. P<index> [S<angle>]
+ * M280: Get or set servo position.
+ *  P<index> - Servo index
+ *  S<angle> - Angle to set, omit to read current angle, or use -1 to detach
+ *
+ * With POLARGRAPH:
+ *  T<ms>    - Duration of servo move
  */
 void GcodeSuite::M280() {
 
-  if (!parser.seen('P')) return;
+  if (!parser.seenval('P')) return;
+
+  TERN_(POLARGRAPH, planner.synchronize());
 
   const int servo_index = parser.value_int();
   if (WITHIN(servo_index, 0, NUM_SERVOS - 1)) {
-    if (parser.seen('S')) {
-      const int a = parser.value_int();
-      if (a == -1)
-        DETACH_SERVO(servo_index);
+    if (parser.seenval('S')) {
+      const int anew = parser.value_int();
+      if (anew >= 0) {
+        #if ENABLED(POLARGRAPH)
+          if (parser.seen('T')) { // (ms) Total duration of servo move
+            const int16_t t = constrain(parser.value_int(), 0, 10000);
+            const int aold = servo[servo_index].read();
+            millis_t now = millis();
+            const millis_t start = now, end = start + t;
+            while (PENDING(now, end)) {
+              safe_delay(50);
+              now = _MIN(millis(), end);
+              MOVE_SERVO(servo_index, LROUND(aold + (anew - aold) * (float(now - start) / t)));
+            }
+          }
+        #endif // POLARGRAPH
+        MOVE_SERVO(servo_index, anew);
+      }
       else
-        MOVE_SERVO(servo_index, a);
+        DETACH_SERVO(servo_index);
     }
     else
       SERIAL_ECHO_MSG(" Servo ", servo_index, ": ", servo[servo_index].read());
   }
   else
     SERIAL_ERROR_MSG("Servo ", servo_index, " out of range");
 
 }
 
 #endif // HAS_SERVOS

commit 21e8f99500554d69cb91ac2be0b4ab1497bf9fac
Author: Dakkaron <dak1st@gmx.at>
Date:   Wed Sep 15 02:00:48 2021 +0200

    ✨ M282 - Detach Servo (#22760)

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index 187c9a9b19..f285adf47f 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -32,21 +32,21 @@
  */
 void GcodeSuite::M280() {
 
   if (!parser.seen('P')) return;
 
   const int servo_index = parser.value_int();
   if (WITHIN(servo_index, 0, NUM_SERVOS - 1)) {
     if (parser.seen('S')) {
       const int a = parser.value_int();
       if (a == -1)
-        servo[servo_index].detach();
+        DETACH_SERVO(servo_index);
       else
         MOVE_SERVO(servo_index, a);
     }
     else
       SERIAL_ECHO_MSG(" Servo ", servo_index, ": ", servo[servo_index].read());
   }
   else
     SERIAL_ERROR_MSG("Servo ", servo_index, " out of range");
 
 }

commit 708ea3d0bb82f067424c75636c28a549aa3d3b06
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Feb 4 23:22:42 2021 -0600

    Use serial shorthand

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index 6ccbb7becc..187c9a9b19 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -24,32 +24,31 @@
 
 #if HAS_SERVOS
 
 #include "../gcode.h"
 #include "../../module/servo.h"
 
 /**
  * M280: Get or set servo position. P<index> [S<angle>]
  */
 void GcodeSuite::M280() {
+
   if (!parser.seen('P')) return;
+
   const int servo_index = parser.value_int();
   if (WITHIN(servo_index, 0, NUM_SERVOS - 1)) {
     if (parser.seen('S')) {
       const int a = parser.value_int();
       if (a == -1)
         servo[servo_index].detach();
       else
         MOVE_SERVO(servo_index, a);
     }
-    else {
-      SERIAL_ECHO_START();
-      SERIAL_ECHOLNPAIR(" Servo ", servo_index, ": ", servo[servo_index].read());
-    }
-  }
-  else {
-    SERIAL_ERROR_START();
-    SERIAL_ECHOLNPAIR("Servo ", servo_index, " out of range");
+    else
+      SERIAL_ECHO_MSG(" Servo ", servo_index, ": ", servo[servo_index].read());
   }
+  else
+    SERIAL_ERROR_MSG("Servo ", servo_index, " out of range");
+
 }
 
 #endif // HAS_SERVOS

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index 21a6c9890d..6ccbb7becc 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 #include "../../inc/MarlinConfig.h"
 
 #if HAS_SERVOS
 
 #include "../gcode.h"
 #include "../../module/servo.h"
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index 6b65e9b753..21a6c9890d 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 665e45e0bad4254352330884a846c21aad2a2ff0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 26 03:47:26 2019 -0500

    Reduce string storage, use masking 'seen'

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index 3626f0bf67..6b65e9b753 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -36,22 +36,20 @@ void GcodeSuite::M280() {
   if (WITHIN(servo_index, 0, NUM_SERVOS - 1)) {
     if (parser.seen('S')) {
       const int a = parser.value_int();
       if (a == -1)
         servo[servo_index].detach();
       else
         MOVE_SERVO(servo_index, a);
     }
     else {
       SERIAL_ECHO_START();
-      SERIAL_ECHOPAIR(" Servo ", servo_index);
-      SERIAL_ECHOLNPAIR(": ", servo[servo_index].read());
+      SERIAL_ECHOLNPAIR(" Servo ", servo_index, ": ", servo[servo_index].read());
     }
   }
   else {
     SERIAL_ERROR_START();
-    SERIAL_ECHOPAIR("Servo ", servo_index);
-    SERIAL_ECHOLNPGM(" out of range");
+    SERIAL_ECHOLNPAIR("Servo ", servo_index, " out of range");
   }
 }
 
 #endif // HAS_SERVOS

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index f973e81b1c..3626f0bf67 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit 24b1818245837b08b9d9d963e9113e7612bcea8e
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Wed May 22 23:57:19 2019 +0200

    Secure STM32F1 servo code and M280 detach (#14085)

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index e7ee35413f..f973e81b1c 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -27,22 +27,27 @@
 #include "../gcode.h"
 #include "../../module/servo.h"
 
 /**
  * M280: Get or set servo position. P<index> [S<angle>]
  */
 void GcodeSuite::M280() {
   if (!parser.seen('P')) return;
   const int servo_index = parser.value_int();
   if (WITHIN(servo_index, 0, NUM_SERVOS - 1)) {
-    if (parser.seen('S'))
-      MOVE_SERVO(servo_index, parser.value_int());
+    if (parser.seen('S')) {
+      const int a = parser.value_int();
+      if (a == -1)
+        servo[servo_index].detach();
+      else
+        MOVE_SERVO(servo_index, a);
+    }
     else {
       SERIAL_ECHO_START();
       SERIAL_ECHOPAIR(" Servo ", servo_index);
       SERIAL_ECHOLNPAIR(": ", servo[servo_index].read());
     }
   }
   else {
     SERIAL_ERROR_START();
     SERIAL_ECHOPAIR("Servo ", servo_index);
     SERIAL_ECHOLNPGM(" out of range");

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index 1cfb6c89fd..e7ee35413f 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit c0000a0cdc68dc2c9b49e5fcb1a04275fadd49dd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 19 13:39:46 2017 -0600

    Move servo code to modules/servo.*

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
index 9d0f5c4e7f..1cfb6c89fd 100644
--- a/Marlin/src/gcode/control/M280.cpp
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -18,21 +18,21 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 
 #include "../../inc/MarlinConfig.h"
 
 #if HAS_SERVOS
 
 #include "../gcode.h"
-#include "../../Marlin.h" // for servo[]
+#include "../../module/servo.h"
 
 /**
  * M280: Get or set servo position. P<index> [S<angle>]
  */
 void GcodeSuite::M280() {
   if (!parser.seen('P')) return;
   const int servo_index = parser.value_int();
   if (WITHIN(servo_index, 0, NUM_SERVOS - 1)) {
     if (parser.seen('S'))
       MOVE_SERVO(servo_index, parser.value_int());

commit 6ed5252884ed3f7ab9a27537b69371804b940088
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 02:58:39 2017 -0500

    Move M280 to cpp

diff --git a/Marlin/src/gcode/control/M280.cpp b/Marlin/src/gcode/control/M280.cpp
new file mode 100644
index 0000000000..9d0f5c4e7f
--- /dev/null
+++ b/Marlin/src/gcode/control/M280.cpp
@@ -0,0 +1,52 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../inc/MarlinConfig.h"
+
+#if HAS_SERVOS
+
+#include "../gcode.h"
+#include "../../Marlin.h" // for servo[]
+
+/**
+ * M280: Get or set servo position. P<index> [S<angle>]
+ */
+void GcodeSuite::M280() {
+  if (!parser.seen('P')) return;
+  const int servo_index = parser.value_int();
+  if (WITHIN(servo_index, 0, NUM_SERVOS - 1)) {
+    if (parser.seen('S'))
+      MOVE_SERVO(servo_index, parser.value_int());
+    else {
+      SERIAL_ECHO_START();
+      SERIAL_ECHOPAIR(" Servo ", servo_index);
+      SERIAL_ECHOLNPAIR(": ", servo[servo_index].read());
+    }
+  }
+  else {
+    SERIAL_ERROR_START();
+    SERIAL_ECHOPAIR("Servo ", servo_index);
+    SERIAL_ECHOLNPGM(" out of range");
+  }
+}
+
+#endif // HAS_SERVOS
