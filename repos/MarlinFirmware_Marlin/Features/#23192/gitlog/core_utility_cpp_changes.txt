commit 204de723f1c08f83e281f0629b60822b334097ed
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sun Jan 21 04:01:25 2024 -0800

    ‚ú® BIQU MicroProbe (#26527)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 8476591d4b..b555d9f2a6 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -73,20 +73,22 @@ void safe_delay(millis_t ms) {
       TERN_(PROBE_MANUALLY, "PROBE_MANUALLY")
       TERN_(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE")
       TERN_(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE")
       TERN_(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"))
       TERN_(BD_SENSOR, "BD_SENSOR")
       TERN_(TOUCH_MI_PROBE, "TOUCH_MI_PROBE")
       TERN_(Z_PROBE_SLED, "Z_PROBE_SLED")
       TERN_(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY")
       TERN_(SOLENOID_PROBE, "SOLENOID_PROBE")
       TERN_(MAGLEV4, "MAGLEV4")
+      TERN_(BIQU_MICROPROBE_V1, "BIQU_MICROPROBE_V1")
+      TERN_(BIQU_MICROPROBE_V2, "BIQU_MICROPROBE_V2")
       IF_DISABLED(PROBE_SELECTED, "NONE")
     );
 
     #if HAS_BED_PROBE
 
       #if !HAS_PROBE_XY_OFFSET
         SERIAL_ECHOPGM("Probe Offset X0 Y0 Z", probe.offset.z, " (");
       #else
         SERIAL_ECHOPGM_P(PSTR("Probe Offset X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR, probe.offset.z);
         if (probe.offset_xy.x > 0)

commit 2ef71c6ebaa1f1b496eb369879fe22c69cf9adb4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jun 12 16:38:14 2023 -0500

    ‚ôªÔ∏è Simplify SERIAL_ECHO (#25928)
    
    Since this increases AVR code size, try to optimize further.

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 64f083e197..8476591d4b 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -18,20 +18,24 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 #include "utility.h"
 
 #include "../MarlinCore.h"
 #include "../module/temperature.h"
 
+#if ENABLED(MARLIN_DEV_MODE)
+  MarlinError marlin_error_number;    // Error Number - Marlin can beep X times periodically, display, and emit...
+#endif
+
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.task();
   }
   delay(ms);
   thermalManager.task(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
@@ -88,31 +92,31 @@ void safe_delay(millis_t ms) {
         if (probe.offset_xy.x > 0)
           SERIAL_ECHOPGM(" (Right");
         else if (probe.offset_xy.x < 0)
           SERIAL_ECHOPGM(" (Left");
         else if (probe.offset_xy.y != 0)
           SERIAL_ECHOPGM(" (Middle");
         else
           SERIAL_ECHOPGM(" (Aligned With");
 
         if (probe.offset_xy.y > 0)
-          SERIAL_ECHOF(F(TERN(IS_SCARA, "-Distal", "-Back")));
+          SERIAL_ECHO(F(TERN(IS_SCARA, "-Distal", "-Back")));
         else if (probe.offset_xy.y < 0)
-          SERIAL_ECHOF(F(TERN(IS_SCARA, "-Proximal", "-Front")));
+          SERIAL_ECHO(F(TERN(IS_SCARA, "-Proximal", "-Front")));
         else if (probe.offset_xy.x != 0)
           SERIAL_ECHOPGM("-Center");
 
         SERIAL_ECHOPGM(" & ");
 
       #endif
 
-      SERIAL_ECHOF(probe.offset.z < 0 ? F("Below") : probe.offset.z > 0 ? F("Above") : F("Same Z as"));
+      SERIAL_ECHO(probe.offset.z < 0 ? F("Below") : probe.offset.z > 0 ? F("Above") : F("Same Z as"));
       SERIAL_ECHOLNPGM(" Nozzle)");
 
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOPGM("Auto Bed Leveling: "
         TERN_(AUTO_BED_LEVELING_LINEAR, "LINEAR")
         TERN_(AUTO_BED_LEVELING_BILINEAR, "BILINEAR")
         TERN_(AUTO_BED_LEVELING_3POINT, "3POINT")
         TERN_(AUTO_BED_LEVELING_UBL, "UBL")

commit 83320f1052dd09bff7aae789372e7bffccbced97
Author: Mark <niujl123@sina.com>
Date:   Sat Aug 6 14:14:58 2022 +0800

    ‚ú® Bed Distance Sensor (#24554)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index e4fd525924..64f083e197 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -63,20 +63,21 @@ void safe_delay(millis_t ms) {
       TERN_(MARKFORGED_XY, "MarkForgedXY")
       TERN_(MARKFORGED_YX, "MarkForgedYX")
       TERN_(IS_CARTESIAN,  "Cartesian")
     );
 
     SERIAL_ECHOLNPGM("Probe: "
       TERN_(PROBE_MANUALLY, "PROBE_MANUALLY")
       TERN_(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE")
       TERN_(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE")
       TERN_(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"))
+      TERN_(BD_SENSOR, "BD_SENSOR")
       TERN_(TOUCH_MI_PROBE, "TOUCH_MI_PROBE")
       TERN_(Z_PROBE_SLED, "Z_PROBE_SLED")
       TERN_(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY")
       TERN_(SOLENOID_PROBE, "SOLENOID_PROBE")
       TERN_(MAGLEV4, "MAGLEV4")
       IF_DISABLED(PROBE_SELECTED, "NONE")
     );
 
     #if HAS_BED_PROBE
 

commit 21c48d9f927c81d7b7cf6fc3641ce01a831a16ca
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 27 04:24:50 2022 -0500

    üßë‚Äçüíª  Update planner/stepper includes

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 9cdf8dec7b..e4fd525924 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -44,21 +44,21 @@ void safe_delay(millis_t ms) {
     const bool was = gcode.set_autoreport_paused(true);
     safe_delay(ms);
     gcode.set_autoreport_paused(was);
   }
 #endif
 
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
-  #include "../module/stepper.h"
+  #include "../module/planner.h"
   #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
     SERIAL_ECHOLNPGM("Machine Type: "
       TERN_(DELTA,         "Delta")
       TERN_(IS_SCARA,      "SCARA")
       TERN_(IS_CORE,       "Core")
       TERN_(MARKFORGED_XY, "MarkForgedXY")
       TERN_(MARKFORGED_YX, "MarkForgedYX")

commit 54e7b933cdb6d0bf0d69fd661b585100d76e3c88
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jul 3 10:32:47 2022 -0500

    ‚ôªÔ∏è Encapsulate PID in class (#24389)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 84e4c1f696..9cdf8dec7b 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -22,24 +22,24 @@
 
 #include "utility.h"
 
 #include "../MarlinCore.h"
 #include "../module/temperature.h"
 
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
-    thermalManager.manage_heater();
+    thermalManager.task();
   }
   delay(ms);
-  thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
+  thermalManager.task(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
 // A delay to provide brittle hosts time to receive bytes
 #if ENABLED(SERIAL_OVERRUN_PROTECTION)
 
   #include "../gcode/gcode.h" // for set_autoreport_paused
 
   void serial_delay(const millis_t ms) {
     const bool was = gcode.set_autoreport_paused(true);
     safe_delay(ms);

commit f6e123430f189128c00ff2f6e4fa6c3a27986bff
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Tue Jun 7 01:23:55 2022 +0100

    ü©π Fix Mesh Leveling + Debug compile (#24297)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index bba2f0a986..84e4c1f696 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -125,49 +125,50 @@ void safe_delay(millis_t ms) {
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment");
           LOOP_NUM_AXES(a) {
             SERIAL_ECHOPGM_P((PGM_P)pgm_read_ptr(&SP_AXIS_STR[a]));
             serial_offset(planner.get_axis_position_mm(AxisEnum(a)) - current_position[a]);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
-            const float rz = bedlevel.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
-            const float rz = bedlevel.get_z_correction(current_position);
           #endif
+          const float rz = bedlevel.get_z_correction(current_position);
           SERIAL_ECHO(ftostr43sign(rz, '+'));
           #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
             if (planner.z_fade_height) {
               SERIAL_ECHOPGM(" (", ftostr43sign(rz * planner.fade_scaling_factor_for_z(current_position.z), '+'));
               SERIAL_CHAR(')');
             }
           #endif
         #endif
       }
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
-        SERIAL_ECHOPGM("MBL Adjustment Z", ftostr43sign(bedlevel.get_z(current_position), '+'));
+        const float z_offset = bedlevel.get_z_offset(),
+                    z_correction = bedlevel.get_z_correction(current_position);
+        SERIAL_ECHOPGM("MBL Adjustment Z", ftostr43sign(z_offset + z_correction, '+'));
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height) {
             SERIAL_ECHOPGM(" (", ftostr43sign(
-              bedlevel.get_z(current_position, planner.fade_scaling_factor_for_z(current_position.z)), '+'
+              z_offset + z_correction * planner.fade_scaling_factor_for_z(current_position.z), '+'
             ));
             SERIAL_CHAR(')');
           }
         #endif
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 

commit b523ddf1b2820488c6cc46887ee85e8a781ce726
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 19 06:05:52 2022 -0500

    ‚ôªÔ∏è Common Bed Leveling object name, accessors (#24214)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 658ed6cd81..bba2f0a986 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -125,49 +125,49 @@ void safe_delay(millis_t ms) {
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment");
           LOOP_NUM_AXES(a) {
             SERIAL_ECHOPGM_P((PGM_P)pgm_read_ptr(&SP_AXIS_STR[a]));
             serial_offset(planner.get_axis_position_mm(AxisEnum(a)) - current_position[a]);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
-            const float rz = ubl.get_z_correction(current_position);
+            const float rz = bedlevel.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
-            const float rz = bbl.get_z_correction(current_position);
+            const float rz = bedlevel.get_z_correction(current_position);
           #endif
           SERIAL_ECHO(ftostr43sign(rz, '+'));
           #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
             if (planner.z_fade_height) {
               SERIAL_ECHOPGM(" (", ftostr43sign(rz * planner.fade_scaling_factor_for_z(current_position.z), '+'));
               SERIAL_CHAR(')');
             }
           #endif
         #endif
       }
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
-        SERIAL_ECHOPGM("MBL Adjustment Z", ftostr43sign(mbl.get_z(current_position), '+'));
+        SERIAL_ECHOPGM("MBL Adjustment Z", ftostr43sign(bedlevel.get_z(current_position), '+'));
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height) {
             SERIAL_ECHOPGM(" (", ftostr43sign(
-              mbl.get_z(current_position, planner.fade_scaling_factor_for_z(current_position.z)), '+'
+              bedlevel.get_z(current_position, planner.fade_scaling_factor_for_z(current_position.z)), '+'
             ));
             SERIAL_CHAR(')');
           }
         #endif
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 

commit 877e10205b286a6c1b8da869c54b50db866c1db8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 3 20:13:11 2022 -0500

    üèóÔ∏è Axis name arrays
    
    Co-Authored-By: DerAndere <26200979+DerAndere1@users.noreply.github.com>

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index d30511ae40..658ed6cd81 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -119,21 +119,21 @@ void safe_delay(millis_t ms) {
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPGM("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment");
           LOOP_NUM_AXES(a) {
-            SERIAL_CHAR(' ', AXIS_CHAR(a));
+            SERIAL_ECHOPGM_P((PGM_P)pgm_read_ptr(&SP_AXIS_STR[a]));
             serial_offset(planner.get_axis_position_mm(AxisEnum(a)) - current_position[a]);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bbl.get_z_correction(current_position);
           #endif

commit e5b651f407fcb743e2d00c45b0d361fb98230efb
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Fri Apr 1 07:10:38 2022 +0200

    ‚ú® Support for up to 9 axes (linear, rotary) (#23112)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 4e16e2693a..d30511ae40 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -118,21 +118,21 @@ void safe_delay(millis_t ms) {
       );
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPGM("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment");
-          LOOP_LINEAR_AXES(a) {
+          LOOP_NUM_AXES(a) {
             SERIAL_CHAR(' ', AXIS_CHAR(a));
             serial_offset(planner.get_axis_position_mm(AxisEnum(a)) - current_position[a]);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bbl.get_z_correction(current_position);

commit ae53033cea506209310fb014b304f3a07c59e9d7
Author: tombrazier <68918209+tombrazier@users.noreply.github.com>
Date:   Fri Apr 1 03:13:16 2022 +0100

    ‚ôªÔ∏è Refactor and fix ABL Bilinear (#23868)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 59e59d4cb7..4e16e2693a 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -128,21 +128,21 @@ void safe_delay(millis_t ms) {
           LOOP_LINEAR_AXES(a) {
             SERIAL_CHAR(' ', AXIS_CHAR(a));
             serial_offset(planner.get_axis_position_mm(AxisEnum(a)) - current_position[a]);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
-            const float rz = bilinear_z_offset(current_position);
+            const float rz = bbl.get_z_correction(current_position);
           #endif
           SERIAL_ECHO(ftostr43sign(rz, '+'));
           #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
             if (planner.z_fade_height) {
               SERIAL_ECHOPGM(" (", ftostr43sign(rz * planner.fade_scaling_factor_for_z(current_position.z), '+'));
               SERIAL_CHAR(')');
             }
           #endif
         #endif
       }

commit df4e022a48667369fcc94dfda56505eb3ba2019f
Author: Giuseppe499 <giuseppe499@live.it>
Date:   Sat Mar 12 00:12:03 2022 +0100

    üö∏ Fix, extend X Axis Twist Compensation (#23745)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 19e7626744..59e59d4cb7 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -119,24 +119,22 @@ void safe_delay(millis_t ms) {
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPGM("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment");
           LOOP_LINEAR_AXES(a) {
-            const float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
             SERIAL_CHAR(' ', AXIS_CHAR(a));
-            if (v > 0) SERIAL_CHAR('+');
-            SERIAL_DECIMAL(v);
+            serial_offset(planner.get_axis_position_mm(AxisEnum(a)) - current_position[a]);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bilinear_z_offset(current_position);
           #endif
           SERIAL_ECHO(ftostr43sign(rz, '+'));

commit d557db842598639f4ab49447e216557515b3ba9e
Author: Ave6683 <53094187+Ave6683@users.noreply.github.com>
Date:   Mon Dec 27 22:28:27 2021 +0100

    ‚ú® MagLev V4 probe by MDD (#23192)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index cc3b1ace2f..19e7626744 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -67,21 +67,22 @@ void safe_delay(millis_t ms) {
 
     SERIAL_ECHOLNPGM("Probe: "
       TERN_(PROBE_MANUALLY, "PROBE_MANUALLY")
       TERN_(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE")
       TERN_(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE")
       TERN_(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"))
       TERN_(TOUCH_MI_PROBE, "TOUCH_MI_PROBE")
       TERN_(Z_PROBE_SLED, "Z_PROBE_SLED")
       TERN_(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY")
       TERN_(SOLENOID_PROBE, "SOLENOID_PROBE")
-      TERN(PROBE_SELECTED, "", "NONE")
+      TERN_(MAGLEV4, "MAGLEV4")
+      IF_DISABLED(PROBE_SELECTED, "NONE")
     );
 
     #if HAS_BED_PROBE
 
       #if !HAS_PROBE_XY_OFFSET
         SERIAL_ECHOPGM("Probe Offset X0 Y0 Z", probe.offset.z, " (");
       #else
         SERIAL_ECHOPGM_P(PSTR("Probe Offset X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR, probe.offset.z);
         if (probe.offset_xy.x > 0)
           SERIAL_ECHOPGM(" (Right");

commit e5154ec28179c7dc7b58a830412e7cb09c2f878c
Author: John Robertson <john@cirtech.co.uk>
Date:   Tue Nov 23 21:24:24 2021 +0000

    ‚ú® MarkForged YX kinematics (#23163)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index b70e2fa9a9..cc3b1ace2f 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -53,21 +53,22 @@ void safe_delay(millis_t ms) {
   #include "../module/motion.h"
   #include "../module/stepper.h"
   #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
     SERIAL_ECHOLNPGM("Machine Type: "
       TERN_(DELTA,         "Delta")
       TERN_(IS_SCARA,      "SCARA")
       TERN_(IS_CORE,       "Core")
-      TERN_(MARKFORGED_XY, "MarkForged")
+      TERN_(MARKFORGED_XY, "MarkForgedXY")
+      TERN_(MARKFORGED_YX, "MarkForgedYX")
       TERN_(IS_CARTESIAN,  "Cartesian")
     );
 
     SERIAL_ECHOLNPGM("Probe: "
       TERN_(PROBE_MANUALLY, "PROBE_MANUALLY")
       TERN_(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE")
       TERN_(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE")
       TERN_(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"))
       TERN_(TOUCH_MI_PROBE, "TOUCH_MI_PROBE")
       TERN_(Z_PROBE_SLED, "Z_PROBE_SLED")

commit 520b97083e52efdd47ab434b97823e48d85ade62
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 11:03:07 2021 -0500

    üé® Apply F() to serial macros

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 8aeec89f02..b70e2fa9a9 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -85,31 +85,31 @@ void safe_delay(millis_t ms) {
         if (probe.offset_xy.x > 0)
           SERIAL_ECHOPGM(" (Right");
         else if (probe.offset_xy.x < 0)
           SERIAL_ECHOPGM(" (Left");
         else if (probe.offset_xy.y != 0)
           SERIAL_ECHOPGM(" (Middle");
         else
           SERIAL_ECHOPGM(" (Aligned With");
 
         if (probe.offset_xy.y > 0)
-          SERIAL_ECHOPGM_P(ENABLED(IS_SCARA) ? PSTR("-Distal") : PSTR("-Back"));
+          SERIAL_ECHOF(F(TERN(IS_SCARA, "-Distal", "-Back")));
         else if (probe.offset_xy.y < 0)
-          SERIAL_ECHOPGM_P(ENABLED(IS_SCARA) ? PSTR("-Proximal") : PSTR("-Front"));
+          SERIAL_ECHOF(F(TERN(IS_SCARA, "-Proximal", "-Front")));
         else if (probe.offset_xy.x != 0)
           SERIAL_ECHOPGM("-Center");
 
         SERIAL_ECHOPGM(" & ");
 
       #endif
 
-      SERIAL_ECHOPGM_P(probe.offset.z < 0 ? PSTR("Below") : probe.offset.z > 0 ? PSTR("Above") : PSTR("Same Z as"));
+      SERIAL_ECHOF(probe.offset.z < 0 ? F("Below") : probe.offset.z > 0 ? F("Above") : F("Same Z as"));
       SERIAL_ECHOLNPGM(" Nozzle)");
 
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOPGM("Auto Bed Leveling: "
         TERN_(AUTO_BED_LEVELING_LINEAR, "LINEAR")
         TERN_(AUTO_BED_LEVELING_BILINEAR, "BILINEAR")
         TERN_(AUTO_BED_LEVELING_3POINT, "3POINT")
         TERN_(AUTO_BED_LEVELING_UBL, "UBL")

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index b810855d52..8aeec89f02 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -72,23 +72,23 @@ void safe_delay(millis_t ms) {
       TERN_(TOUCH_MI_PROBE, "TOUCH_MI_PROBE")
       TERN_(Z_PROBE_SLED, "Z_PROBE_SLED")
       TERN_(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY")
       TERN_(SOLENOID_PROBE, "SOLENOID_PROBE")
       TERN(PROBE_SELECTED, "", "NONE")
     );
 
     #if HAS_BED_PROBE
 
       #if !HAS_PROBE_XY_OFFSET
-        SERIAL_ECHOPAIR("Probe Offset X0 Y0 Z", probe.offset.z, " (");
+        SERIAL_ECHOPGM("Probe Offset X0 Y0 Z", probe.offset.z, " (");
       #else
-        SERIAL_ECHOPAIR_P(PSTR("Probe Offset X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR, probe.offset.z);
+        SERIAL_ECHOPGM_P(PSTR("Probe Offset X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR, probe.offset.z);
         if (probe.offset_xy.x > 0)
           SERIAL_ECHOPGM(" (Right");
         else if (probe.offset_xy.x < 0)
           SERIAL_ECHOPGM(" (Left");
         else if (probe.offset_xy.y != 0)
           SERIAL_ECHOPGM(" (Middle");
         else
           SERIAL_ECHOPGM(" (Aligned With");
 
         if (probe.offset_xy.y > 0)
@@ -112,61 +112,61 @@ void safe_delay(millis_t ms) {
         TERN_(AUTO_BED_LEVELING_LINEAR, "LINEAR")
         TERN_(AUTO_BED_LEVELING_BILINEAR, "BILINEAR")
         TERN_(AUTO_BED_LEVELING_3POINT, "3POINT")
         TERN_(AUTO_BED_LEVELING_UBL, "UBL")
       );
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
-            SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
+            SERIAL_ECHOLNPGM("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment");
           LOOP_LINEAR_AXES(a) {
             const float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
             SERIAL_CHAR(' ', AXIS_CHAR(a));
             if (v > 0) SERIAL_CHAR('+');
             SERIAL_DECIMAL(v);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bilinear_z_offset(current_position);
           #endif
           SERIAL_ECHO(ftostr43sign(rz, '+'));
           #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
             if (planner.z_fade_height) {
-              SERIAL_ECHOPAIR(" (", ftostr43sign(rz * planner.fade_scaling_factor_for_z(current_position.z), '+'));
+              SERIAL_ECHOPGM(" (", ftostr43sign(rz * planner.fade_scaling_factor_for_z(current_position.z), '+'));
               SERIAL_CHAR(')');
             }
           #endif
         #endif
       }
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
-        SERIAL_ECHOPAIR("MBL Adjustment Z", ftostr43sign(mbl.get_z(current_position), '+'));
+        SERIAL_ECHOPGM("MBL Adjustment Z", ftostr43sign(mbl.get_z(current_position), '+'));
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height) {
-            SERIAL_ECHOPAIR(" (", ftostr43sign(
+            SERIAL_ECHOPGM(" (", ftostr43sign(
               mbl.get_z(current_position, planner.fade_scaling_factor_for_z(current_position.z)), '+'
             ));
             SERIAL_CHAR(')');
           }
         #endif
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();

commit 7726af9c5348c1c7d0fd9a56eca87d00cd75fee6
Author: DerAndere <26200979+DerAndere1@users.noreply.github.com>
Date:   Sat Jun 5 09:18:47 2021 +0200

    üèóÔ∏è Support for up to 6 linear axes (#19112)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index f4cdef43c8..b810855d52 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -115,21 +115,21 @@ void safe_delay(millis_t ms) {
         TERN_(AUTO_BED_LEVELING_UBL, "UBL")
       );
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
-          SERIAL_ECHOPGM("ABL Adjustment X");
+          SERIAL_ECHOPGM("ABL Adjustment");
           LOOP_LINEAR_AXES(a) {
             const float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
             SERIAL_CHAR(' ', AXIS_CHAR(a));
             if (v > 0) SERIAL_CHAR('+');
             SERIAL_DECIMAL(v);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);

commit a6e5492b088add3589aeac168136369f21614e60
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 18 22:51:19 2021 -0500

    ‚ôªÔ∏è Refactor axis counts and loops

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 3d7897f95a..f4cdef43c8 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -116,23 +116,23 @@ void safe_delay(millis_t ms) {
       );
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment X");
-          LOOP_XYZ(a) {
+          LOOP_LINEAR_AXES(a) {
             const float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
-            SERIAL_CHAR(' ', XYZ_CHAR(a));
+            SERIAL_CHAR(' ', AXIS_CHAR(a));
             if (v > 0) SERIAL_CHAR('+');
             SERIAL_DECIMAL(v);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bilinear_z_offset(current_position);

commit 9dd884a324e82c74e8e78c987d490a297bafbdc0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun May 2 21:32:42 2021 -0500

    Drop early_safe_delay

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 385a572029..3d7897f95a 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -28,32 +28,20 @@
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.manage_heater();
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
-#if ENABLED(MARLIN_DEV_MODE)
-  void early_safe_delay(millis_t ms) {
-    while (ms > 50) {
-      ms -= 50;
-      delay(50);
-      watchdog_refresh();
-    }
-    delay(ms);
-    watchdog_refresh();
-  }
-#endif
-
 // A delay to provide brittle hosts time to receive bytes
 #if ENABLED(SERIAL_OVERRUN_PROTECTION)
 
   #include "../gcode/gcode.h" // for set_autoreport_paused
 
   void serial_delay(const millis_t ms) {
     const bool was = gcode.set_autoreport_paused(true);
     safe_delay(ms);
     gcode.set_autoreport_paused(was);
   }

commit a29aefc9c0c02c23862fded29e3f950ead339238
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 24 01:29:30 2021 -0500

    Move last bootscreen delay to end of setup (#21665)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 3d7897f95a..385a572029 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -28,20 +28,32 @@
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.manage_heater();
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
+#if ENABLED(MARLIN_DEV_MODE)
+  void early_safe_delay(millis_t ms) {
+    while (ms > 50) {
+      ms -= 50;
+      delay(50);
+      watchdog_refresh();
+    }
+    delay(ms);
+    watchdog_refresh();
+  }
+#endif
+
 // A delay to provide brittle hosts time to receive bytes
 #if ENABLED(SERIAL_OVERRUN_PROTECTION)
 
   #include "../gcode/gcode.h" // for set_autoreport_paused
 
   void serial_delay(const millis_t ms) {
     const bool was = gcode.set_autoreport_paused(true);
     safe_delay(ms);
     gcode.set_autoreport_paused(was);
   }

commit dd42831cba7334c5d106ba435bdb41b6135971bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 28 19:43:46 2021 -0600

    Serial macros cleanup

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index f999568167..3d7897f95a 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -85,31 +85,31 @@ void safe_delay(millis_t ms) {
         if (probe.offset_xy.x > 0)
           SERIAL_ECHOPGM(" (Right");
         else if (probe.offset_xy.x < 0)
           SERIAL_ECHOPGM(" (Left");
         else if (probe.offset_xy.y != 0)
           SERIAL_ECHOPGM(" (Middle");
         else
           SERIAL_ECHOPGM(" (Aligned With");
 
         if (probe.offset_xy.y > 0)
-          serialprintPGM(ENABLED(IS_SCARA) ? PSTR("-Distal") : PSTR("-Back"));
+          SERIAL_ECHOPGM_P(ENABLED(IS_SCARA) ? PSTR("-Distal") : PSTR("-Back"));
         else if (probe.offset_xy.y < 0)
-          serialprintPGM(ENABLED(IS_SCARA) ? PSTR("-Proximal") : PSTR("-Front"));
+          SERIAL_ECHOPGM_P(ENABLED(IS_SCARA) ? PSTR("-Proximal") : PSTR("-Front"));
         else if (probe.offset_xy.x != 0)
           SERIAL_ECHOPGM("-Center");
 
         SERIAL_ECHOPGM(" & ");
 
       #endif
 
-      serialprintPGM(probe.offset.z < 0 ? PSTR("Below") : probe.offset.z > 0 ? PSTR("Above") : PSTR("Same Z as"));
+      SERIAL_ECHOPGM_P(probe.offset.z < 0 ? PSTR("Below") : probe.offset.z > 0 ? PSTR("Above") : PSTR("Same Z as"));
       SERIAL_ECHOLNPGM(" Nozzle)");
 
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOPGM("Auto Bed Leveling: "
         TERN_(AUTO_BED_LEVELING_LINEAR, "LINEAR")
         TERN_(AUTO_BED_LEVELING_BILINEAR, "BILINEAR")
         TERN_(AUTO_BED_LEVELING_3POINT, "3POINT")
         TERN_(AUTO_BED_LEVELING_UBL, "UBL")

commit e97e6865c3e587a04ae2878e72a8dfb137534b7e
Author: Victor Sokolov <gzigzigzeo@gmail.com>
Date:   Fri Sep 4 05:12:53 2020 +0400

    MarkForged kinematics (#19235)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 295657fa64..f999568167 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -50,24 +50,25 @@ void safe_delay(millis_t ms) {
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
   #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
     SERIAL_ECHOLNPGM("Machine Type: "
-      TERN_(DELTA, "Delta")
-      TERN_(IS_SCARA, "SCARA")
-      TERN_(IS_CORE, "Core")
-      TERN_(IS_CARTESIAN, "Cartesian")
+      TERN_(DELTA,         "Delta")
+      TERN_(IS_SCARA,      "SCARA")
+      TERN_(IS_CORE,       "Core")
+      TERN_(MARKFORGED_XY, "MarkForged")
+      TERN_(IS_CARTESIAN,  "Cartesian")
     );
 
     SERIAL_ECHOLNPGM("Probe: "
       TERN_(PROBE_MANUALLY, "PROBE_MANUALLY")
       TERN_(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE")
       TERN_(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE")
       TERN_(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"))
       TERN_(TOUCH_MI_PROBE, "TOUCH_MI_PROBE")
       TERN_(Z_PROBE_SLED, "Z_PROBE_SLED")
       TERN_(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY")

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index e64d6fb5e6..295657fa64 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 
 #include "utility.h"
 
 #include "../MarlinCore.h"
 #include "../module/temperature.h"
 
 void safe_delay(millis_t ms) {
   while (ms > 50) {

commit 25c7c43a829e3bbc581aae20d24b724a7ad8fbdb
Author: Fabio Santos <fabiosan@live.com>
Date:   Mon Jun 22 19:12:45 2020 -0700

    Add SERIAL_FLOAT_PRECISION option (#18367)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 62e79e42ea..e64d6fb5e6 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -116,24 +116,24 @@ void safe_delay(millis_t ms) {
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment X");
           LOOP_XYZ(a) {
-            float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
+            const float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
             SERIAL_CHAR(' ', XYZ_CHAR(a));
             if (v > 0) SERIAL_CHAR('+');
-            SERIAL_ECHO(v);
+            SERIAL_DECIMAL(v);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bilinear_z_offset(current_position);
           #endif
           SERIAL_ECHO(ftostr43sign(rz, '+'));

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 5e159af581..62e79e42ea 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -50,35 +50,35 @@ void safe_delay(millis_t ms) {
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
   #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
     SERIAL_ECHOLNPGM("Machine Type: "
-      TERN(DELTA, "Delta", "")
-      TERN(IS_SCARA, "SCARA", "")
-      TERN(IS_CORE, "Core", "")
-      TERN(IS_CARTESIAN, "Cartesian", "")
+      TERN_(DELTA, "Delta")
+      TERN_(IS_SCARA, "SCARA")
+      TERN_(IS_CORE, "Core")
+      TERN_(IS_CARTESIAN, "Cartesian")
     );
 
     SERIAL_ECHOLNPGM("Probe: "
-      TERN(PROBE_MANUALLY, "PROBE_MANUALLY", "")
-      TERN(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE", "")
-      TERN(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE", "")
-      TERN(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"), "")
-      TERN(TOUCH_MI_PROBE, "TOUCH_MI_PROBE", "")
-      TERN(Z_PROBE_SLED, "Z_PROBE_SLED", "")
-      TERN(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY", "")
-      TERN(SOLENOID_PROBE, "SOLENOID_PROBE", "")
+      TERN_(PROBE_MANUALLY, "PROBE_MANUALLY")
+      TERN_(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE")
+      TERN_(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE")
+      TERN_(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"))
+      TERN_(TOUCH_MI_PROBE, "TOUCH_MI_PROBE")
+      TERN_(Z_PROBE_SLED, "Z_PROBE_SLED")
+      TERN_(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY")
+      TERN_(SOLENOID_PROBE, "SOLENOID_PROBE")
       TERN(PROBE_SELECTED, "", "NONE")
     );
 
     #if HAS_BED_PROBE
 
       #if !HAS_PROBE_XY_OFFSET
         SERIAL_ECHOPAIR("Probe Offset X0 Y0 Z", probe.offset.z, " (");
       #else
         SERIAL_ECHOPAIR_P(PSTR("Probe Offset X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR, probe.offset.z);
         if (probe.offset_xy.x > 0)
@@ -101,24 +101,24 @@ void safe_delay(millis_t ms) {
 
       #endif
 
       serialprintPGM(probe.offset.z < 0 ? PSTR("Below") : probe.offset.z > 0 ? PSTR("Above") : PSTR("Same Z as"));
       SERIAL_ECHOLNPGM(" Nozzle)");
 
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOPGM("Auto Bed Leveling: "
-        TERN(AUTO_BED_LEVELING_LINEAR, "LINEAR", "")
-        TERN(AUTO_BED_LEVELING_BILINEAR, "BILINEAR", "")
-        TERN(AUTO_BED_LEVELING_3POINT, "3POINT", "")
-        TERN(AUTO_BED_LEVELING_UBL, "UBL", "")
+        TERN_(AUTO_BED_LEVELING_LINEAR, "LINEAR")
+        TERN_(AUTO_BED_LEVELING_BILINEAR, "BILINEAR")
+        TERN_(AUTO_BED_LEVELING_3POINT, "3POINT")
+        TERN_(AUTO_BED_LEVELING_UBL, "UBL")
       );
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment X");

commit 3b987dfcec653bfa8c79412d44cc70fd07941bd2
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Mon Mar 16 00:23:24 2020 +0100

    Fix G34 Z lower, extra "BLTOUCH" debug line (#17175)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 19247ff69f..5e159af581 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -60,21 +60,20 @@ void safe_delay(millis_t ms) {
       TERN(DELTA, "Delta", "")
       TERN(IS_SCARA, "SCARA", "")
       TERN(IS_CORE, "Core", "")
       TERN(IS_CARTESIAN, "Cartesian", "")
     );
 
     SERIAL_ECHOLNPGM("Probe: "
       TERN(PROBE_MANUALLY, "PROBE_MANUALLY", "")
       TERN(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE", "")
       TERN(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE", "")
-      TERN(BLTOUCH, "BLTOUCH", "")
       TERN(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"), "")
       TERN(TOUCH_MI_PROBE, "TOUCH_MI_PROBE", "")
       TERN(Z_PROBE_SLED, "Z_PROBE_SLED", "")
       TERN(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY", "")
       TERN(SOLENOID_PROBE, "SOLENOID_PROBE", "")
       TERN(PROBE_SELECTED, "", "NONE")
     );
 
     #if HAS_BED_PROBE
 

commit 64d092935b27ff89955f0430eef5815b15e5a92d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 7 22:20:41 2020 -0600

    More useful ENABLED / DISABLED macros (#17054)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index d2e3459d18..19247ff69f 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -50,112 +50,77 @@ void safe_delay(millis_t ms) {
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
   #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
     SERIAL_ECHOLNPGM("Machine Type: "
-      #if ENABLED(DELTA)
-        "Delta"
-      #elif IS_SCARA
-        "SCARA"
-      #elif IS_CORE
-        "Core"
-      #else
-        "Cartesian"
-      #endif
+      TERN(DELTA, "Delta", "")
+      TERN(IS_SCARA, "SCARA", "")
+      TERN(IS_CORE, "Core", "")
+      TERN(IS_CARTESIAN, "Cartesian", "")
     );
 
     SERIAL_ECHOLNPGM("Probe: "
-      #if ENABLED(PROBE_MANUALLY)
-        "PROBE_MANUALLY"
-      #elif ENABLED(NOZZLE_AS_PROBE)
-        "NOZZLE_AS_PROBE"
-      #elif ENABLED(FIX_MOUNTED_PROBE)
-        "FIX_MOUNTED_PROBE"
-      #elif ENABLED(BLTOUCH)
-        "BLTOUCH"
-      #elif HAS_Z_SERVO_PROBE
-        "SERVO PROBE"
-      #elif ENABLED(TOUCH_MI_PROBE)
-        "TOUCH_MI_PROBE"
-      #elif ENABLED(Z_PROBE_SLED)
-        "Z_PROBE_SLED"
-      #elif ENABLED(Z_PROBE_ALLEN_KEY)
-        "Z_PROBE_ALLEN_KEY"
-      #elif ENABLED(SOLENOID_PROBE)
-        "SOLENOID_PROBE"
-      #else
-        "NONE"
-      #endif
+      TERN(PROBE_MANUALLY, "PROBE_MANUALLY", "")
+      TERN(NOZZLE_AS_PROBE, "NOZZLE_AS_PROBE", "")
+      TERN(FIX_MOUNTED_PROBE, "FIX_MOUNTED_PROBE", "")
+      TERN(BLTOUCH, "BLTOUCH", "")
+      TERN(HAS_Z_SERVO_PROBE, TERN(BLTOUCH, "BLTOUCH", "SERVO PROBE"), "")
+      TERN(TOUCH_MI_PROBE, "TOUCH_MI_PROBE", "")
+      TERN(Z_PROBE_SLED, "Z_PROBE_SLED", "")
+      TERN(Z_PROBE_ALLEN_KEY, "Z_PROBE_ALLEN_KEY", "")
+      TERN(SOLENOID_PROBE, "SOLENOID_PROBE", "")
+      TERN(PROBE_SELECTED, "", "NONE")
     );
 
     #if HAS_BED_PROBE
 
       #if !HAS_PROBE_XY_OFFSET
         SERIAL_ECHOPAIR("Probe Offset X0 Y0 Z", probe.offset.z, " (");
       #else
         SERIAL_ECHOPAIR_P(PSTR("Probe Offset X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR, probe.offset.z);
         if (probe.offset_xy.x > 0)
           SERIAL_ECHOPGM(" (Right");
         else if (probe.offset_xy.x < 0)
           SERIAL_ECHOPGM(" (Left");
         else if (probe.offset_xy.y != 0)
           SERIAL_ECHOPGM(" (Middle");
         else
           SERIAL_ECHOPGM(" (Aligned With");
 
-        if (probe.offset_xy.y > 0) {
-          #if IS_SCARA
-            SERIAL_ECHOPGM("-Distal");
-          #else
-            SERIAL_ECHOPGM("-Back");
-          #endif
-        }
-        else if (probe.offset_xy.y < 0) {
-          #if IS_SCARA
-            SERIAL_ECHOPGM("-Proximal");
-          #else
-            SERIAL_ECHOPGM("-Front");
-          #endif
-        }
+        if (probe.offset_xy.y > 0)
+          serialprintPGM(ENABLED(IS_SCARA) ? PSTR("-Distal") : PSTR("-Back"));
+        else if (probe.offset_xy.y < 0)
+          serialprintPGM(ENABLED(IS_SCARA) ? PSTR("-Proximal") : PSTR("-Front"));
         else if (probe.offset_xy.x != 0)
           SERIAL_ECHOPGM("-Center");
 
         SERIAL_ECHOPGM(" & ");
 
       #endif
 
-      if (probe.offset.z < 0)
-        SERIAL_ECHOPGM("Below");
-      else if (probe.offset.z > 0)
-        SERIAL_ECHOPGM("Above");
-      else
-        SERIAL_ECHOPGM("Same Z as");
+      serialprintPGM(probe.offset.z < 0 ? PSTR("Below") : probe.offset.z > 0 ? PSTR("Above") : PSTR("Same Z as"));
       SERIAL_ECHOLNPGM(" Nozzle)");
 
     #endif
 
     #if HAS_ABL_OR_UBL
-      SERIAL_ECHOPGM("Auto Bed Leveling: ");
-      #if ENABLED(AUTO_BED_LEVELING_LINEAR)
-        SERIAL_ECHOLNPGM("LINEAR");
-      #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
-        SERIAL_ECHOLNPGM("BILINEAR");
-      #elif ENABLED(AUTO_BED_LEVELING_3POINT)
-        SERIAL_ECHOLNPGM("3POINT");
-      #elif ENABLED(AUTO_BED_LEVELING_UBL)
-        SERIAL_ECHOLNPGM("UBL");
-      #endif
+      SERIAL_ECHOPGM("Auto Bed Leveling: "
+        TERN(AUTO_BED_LEVELING_LINEAR, "LINEAR", "")
+        TERN(AUTO_BED_LEVELING_BILINEAR, "BILINEAR", "")
+        TERN(AUTO_BED_LEVELING_3POINT, "3POINT", "")
+        TERN(AUTO_BED_LEVELING_UBL, "UBL", "")
+      );
 
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment X");
           LOOP_XYZ(a) {

commit c4db8e49a7429a696431c0d3419b545d13eead31
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Mar 1 10:36:15 2020 -0600

    XYZ_CHAR macro

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 64783d070f..d2e3459d18 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -132,42 +132,42 @@ void safe_delay(millis_t ms) {
         SERIAL_ECHOPGM("Below");
       else if (probe.offset.z > 0)
         SERIAL_ECHOPGM("Above");
       else
         SERIAL_ECHOPGM("Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
 
     #endif
 
     #if HAS_ABL_OR_UBL
-      SERIAL_ECHOLNPGM("Auto Bed Leveling: "
-        #if ENABLED(AUTO_BED_LEVELING_LINEAR)
-          "LINEAR"
-        #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
-          "BILINEAR"
-        #elif ENABLED(AUTO_BED_LEVELING_3POINT)
-          "3POINT"
-        #elif ENABLED(AUTO_BED_LEVELING_UBL)
-          "UBL"
-        #endif
-      );
+      SERIAL_ECHOPGM("Auto Bed Leveling: ");
+      #if ENABLED(AUTO_BED_LEVELING_LINEAR)
+        SERIAL_ECHOLNPGM("LINEAR");
+      #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
+        SERIAL_ECHOLNPGM("BILINEAR");
+      #elif ENABLED(AUTO_BED_LEVELING_3POINT)
+        SERIAL_ECHOLNPGM("3POINT");
+      #elif ENABLED(AUTO_BED_LEVELING_UBL)
+        SERIAL_ECHOLNPGM("UBL");
+      #endif
+
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment X");
           LOOP_XYZ(a) {
             float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
-            SERIAL_CHAR(' ', 'X' + char(a));
+            SERIAL_CHAR(' ', XYZ_CHAR(a));
             if (v > 0) SERIAL_CHAR('+');
             SERIAL_ECHO(v);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bilinear_z_offset(current_position);

commit a1f026f57ad7dbf4c50b135cf1dc0f9eacc06025
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Feb 20 20:09:37 2020 -0600

    Inline manage_inactivity, tweak autoreport_paused

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 768bc5e9d0..64783d070f 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -28,20 +28,32 @@
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.manage_heater();
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
+// A delay to provide brittle hosts time to receive bytes
+#if ENABLED(SERIAL_OVERRUN_PROTECTION)
+
+  #include "../gcode/gcode.h" // for set_autoreport_paused
+
+  void serial_delay(const millis_t ms) {
+    const bool was = gcode.set_autoreport_paused(true);
+    safe_delay(ms);
+    gcode.set_autoreport_paused(was);
+  }
+#endif
+
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
   #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
     SERIAL_ECHOLNPGM("Machine Type: "

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 14f7aa7083..768bc5e9d0 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 90b6324563b806ea7dc24ddf299f055dc4854341
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 1 04:21:36 2020 -0600

    Encapsulate probe as singleton class (#16751)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 16d0ea17c1..14f7aa7083 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -76,56 +76,56 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(SOLENOID_PROBE)
         "SOLENOID_PROBE"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
 
       #if !HAS_PROBE_XY_OFFSET
-        SERIAL_ECHOPAIR("Probe Offset X0 Y0 Z", probe_offset.z, " (");
+        SERIAL_ECHOPAIR("Probe Offset X0 Y0 Z", probe.offset.z, " (");
       #else
-        SERIAL_ECHOPAIR_P(PSTR("Probe Offset X"), probe_offset.x, SP_Y_STR, probe_offset.y, SP_Z_STR, probe_offset.z);
-        if (probe_offset.x > 0)
+        SERIAL_ECHOPAIR_P(PSTR("Probe Offset X"), probe.offset_xy.x, SP_Y_STR, probe.offset_xy.y, SP_Z_STR, probe.offset.z);
+        if (probe.offset_xy.x > 0)
           SERIAL_ECHOPGM(" (Right");
-        else if (probe_offset.x < 0)
+        else if (probe.offset_xy.x < 0)
           SERIAL_ECHOPGM(" (Left");
-        else if (probe_offset.y != 0)
+        else if (probe.offset_xy.y != 0)
           SERIAL_ECHOPGM(" (Middle");
         else
           SERIAL_ECHOPGM(" (Aligned With");
 
-        if (probe_offset.y > 0) {
+        if (probe.offset_xy.y > 0) {
           #if IS_SCARA
             SERIAL_ECHOPGM("-Distal");
           #else
             SERIAL_ECHOPGM("-Back");
           #endif
         }
-        else if (probe_offset.y < 0) {
+        else if (probe.offset_xy.y < 0) {
           #if IS_SCARA
             SERIAL_ECHOPGM("-Proximal");
           #else
             SERIAL_ECHOPGM("-Front");
           #endif
         }
-        else if (probe_offset.x != 0)
+        else if (probe.offset_xy.x != 0)
           SERIAL_ECHOPGM("-Center");
 
         SERIAL_ECHOPGM(" & ");
 
       #endif
 
-      if (probe_offset.z < 0)
+      if (probe.offset.z < 0)
         SERIAL_ECHOPGM("Below");
-      else if (probe_offset.z > 0)
+      else if (probe.offset.z > 0)
         SERIAL_ECHOPGM("Above");
       else
         SERIAL_ECHOPGM("Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
 
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOLNPGM("Auto Bed Leveling: "
         #if ENABLED(AUTO_BED_LEVELING_LINEAR)

commit 95046c90478c14d2c43bd41d30c4170dcbcdf53a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Jan 8 18:31:57 2020 -0600

    Extend SERIAL_CHAR to take multiple arguments

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index c2f7024320..16d0ea17c1 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -141,22 +141,21 @@ void safe_delay(millis_t ms) {
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           SERIAL_ECHOPGM("ABL Adjustment X");
           LOOP_XYZ(a) {
             float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
-            SERIAL_CHAR(' ');
-            SERIAL_CHAR('X' + char(a));
+            SERIAL_CHAR(' ', 'X' + char(a));
             if (v > 0) SERIAL_CHAR('+');
             SERIAL_ECHO(v);
           }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
             const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bilinear_z_offset(current_position);

commit 3cade6245e851af9a33d1f395758b898c4a06a30
Author: Jason Smith <jason.inet@gmail.com>
Date:   Fri Jan 3 17:46:26 2020 -0600

    Fix MIN_PROBE_EDGE bug in default ABL G29 (#16367)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 4d5f5b2c38..c2f7024320 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -74,54 +74,63 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
       #elif ENABLED(SOLENOID_PROBE)
         "SOLENOID_PROBE"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
-      SERIAL_ECHOPAIR_P(PSTR("Probe Offset X"), probe_offset.x, SP_Y_STR, probe_offset.y, SP_Z_STR, probe_offset.z);
-      if (probe_offset.x > 0)
-        SERIAL_ECHOPGM(" (Right");
-      else if (probe_offset.x < 0)
-        SERIAL_ECHOPGM(" (Left");
-      else if (probe_offset.y != 0)
-        SERIAL_ECHOPGM(" (Middle");
-      else
-        SERIAL_ECHOPGM(" (Aligned With");
 
-      if (probe_offset.y > 0) {
-        #if IS_SCARA
-          SERIAL_ECHOPGM("-Distal");
-        #else
-          SERIAL_ECHOPGM("-Back");
-        #endif
-      }
-      else if (probe_offset.y < 0) {
-        #if IS_SCARA
-          SERIAL_ECHOPGM("-Proximal");
-        #else
-          SERIAL_ECHOPGM("-Front");
-        #endif
-      }
-      else if (probe_offset.x != 0)
-        SERIAL_ECHOPGM("-Center");
+      #if !HAS_PROBE_XY_OFFSET
+        SERIAL_ECHOPAIR("Probe Offset X0 Y0 Z", probe_offset.z, " (");
+      #else
+        SERIAL_ECHOPAIR_P(PSTR("Probe Offset X"), probe_offset.x, SP_Y_STR, probe_offset.y, SP_Z_STR, probe_offset.z);
+        if (probe_offset.x > 0)
+          SERIAL_ECHOPGM(" (Right");
+        else if (probe_offset.x < 0)
+          SERIAL_ECHOPGM(" (Left");
+        else if (probe_offset.y != 0)
+          SERIAL_ECHOPGM(" (Middle");
+        else
+          SERIAL_ECHOPGM(" (Aligned With");
+
+        if (probe_offset.y > 0) {
+          #if IS_SCARA
+            SERIAL_ECHOPGM("-Distal");
+          #else
+            SERIAL_ECHOPGM("-Back");
+          #endif
+        }
+        else if (probe_offset.y < 0) {
+          #if IS_SCARA
+            SERIAL_ECHOPGM("-Proximal");
+          #else
+            SERIAL_ECHOPGM("-Front");
+          #endif
+        }
+        else if (probe_offset.x != 0)
+          SERIAL_ECHOPGM("-Center");
+
+        SERIAL_ECHOPGM(" & ");
+
+      #endif
 
       if (probe_offset.z < 0)
-        SERIAL_ECHOPGM(" & Below");
+        SERIAL_ECHOPGM("Below");
       else if (probe_offset.z > 0)
-        SERIAL_ECHOPGM(" & Above");
+        SERIAL_ECHOPGM("Above");
       else
-        SERIAL_ECHOPGM(" & Same Z as");
+        SERIAL_ECHOPGM("Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
+
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOLNPGM("Auto Bed Leveling: "
         #if ENABLED(AUTO_BED_LEVELING_LINEAR)
           "LINEAR"
         #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
           "BILINEAR"
         #elif ENABLED(AUTO_BED_LEVELING_3POINT)
           "3POINT"

commit d0e1166cce60381fbdad1105d13765806a525d99
Author: Dirk O. Kaar <19971886+dok-net@users.noreply.github.com>
Date:   Fri Jan 3 02:01:38 2020 +0100

    Fix Visual Micro "Arduino IDE for Visual Studio" support (#16418)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 7826f5554b..4d5f5b2c38 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -15,21 +15,21 @@
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 
 #include "utility.h"
 
-#include "../Marlin.h"
+#include "../MarlinCore.h"
 #include "../module/temperature.h"
 
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.manage_heater();
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made

commit 1c9ccce5209cd1727bf80e632f4f781c651e0c35
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Dec 24 01:03:08 2019 -0500

    Add NOZZLE_AS_PROBE (no probe offsets) (#15929)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 189a505cc3..7826f5554b 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -52,20 +52,22 @@ void safe_delay(millis_t ms) {
       #elif IS_CORE
         "Core"
       #else
         "Cartesian"
       #endif
     );
 
     SERIAL_ECHOLNPGM("Probe: "
       #if ENABLED(PROBE_MANUALLY)
         "PROBE_MANUALLY"
+      #elif ENABLED(NOZZLE_AS_PROBE)
+        "NOZZLE_AS_PROBE"
       #elif ENABLED(FIX_MOUNTED_PROBE)
         "FIX_MOUNTED_PROBE"
       #elif ENABLED(BLTOUCH)
         "BLTOUCH"
       #elif HAS_Z_SERVO_PROBE
         "SERVO PROBE"
       #elif ENABLED(TOUCH_MI_PROBE)
         "TOUCH_MI_PROBE"
       #elif ENABLED(Z_PROBE_SLED)
         "Z_PROBE_SLED"

commit f83bc0aa13e8cf2d92ec138576cc3a620e74a982
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Nov 29 04:45:07 2019 -0600

    Optimize common strings
    
    Saves 128 bytes in testing with `mftest mega 1 -y`

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index ca8cd67ccf..189a505cc3 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -72,21 +72,21 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
       #elif ENABLED(SOLENOID_PROBE)
         "SOLENOID_PROBE"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
-      SERIAL_ECHOPAIR("Probe Offset X", probe_offset.x, " Y", probe_offset.y, " Z", probe_offset.z);
+      SERIAL_ECHOPAIR_P(PSTR("Probe Offset X"), probe_offset.x, SP_Y_STR, probe_offset.y, SP_Z_STR, probe_offset.z);
       if (probe_offset.x > 0)
         SERIAL_ECHOPGM(" (Right");
       else if (probe_offset.x < 0)
         SERIAL_ECHOPGM(" (Left");
       else if (probe_offset.y != 0)
         SERIAL_ECHOPGM(" (Middle");
       else
         SERIAL_ECHOPGM(" (Aligned With");
 
       if (probe_offset.y > 0) {

commit 50e4545255605eb506c20eb107270038b0fe7bdb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 29 04:25:39 2019 -0500

    Add custom types for position (#15204)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 5ebd84afd1..ca8cd67ccf 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -72,50 +72,50 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
       #elif ENABLED(SOLENOID_PROBE)
         "SOLENOID_PROBE"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
-      SERIAL_ECHOPAIR("Probe Offset X:", probe_offset[X_AXIS], " Y:", probe_offset[Y_AXIS], " Z:", probe_offset[Z_AXIS]);
-      if (probe_offset[X_AXIS] > 0)
+      SERIAL_ECHOPAIR("Probe Offset X", probe_offset.x, " Y", probe_offset.y, " Z", probe_offset.z);
+      if (probe_offset.x > 0)
         SERIAL_ECHOPGM(" (Right");
-      else if (probe_offset[X_AXIS] < 0)
+      else if (probe_offset.x < 0)
         SERIAL_ECHOPGM(" (Left");
-      else if (probe_offset[Y_AXIS] != 0)
+      else if (probe_offset.y != 0)
         SERIAL_ECHOPGM(" (Middle");
       else
         SERIAL_ECHOPGM(" (Aligned With");
 
-      if (probe_offset[Y_AXIS] > 0) {
+      if (probe_offset.y > 0) {
         #if IS_SCARA
           SERIAL_ECHOPGM("-Distal");
         #else
           SERIAL_ECHOPGM("-Back");
         #endif
       }
-      else if (probe_offset[Y_AXIS] < 0) {
+      else if (probe_offset.y < 0) {
         #if IS_SCARA
           SERIAL_ECHOPGM("-Proximal");
         #else
           SERIAL_ECHOPGM("-Front");
         #endif
       }
-      else if (probe_offset[X_AXIS] != 0)
+      else if (probe_offset.x != 0)
         SERIAL_ECHOPGM("-Center");
 
-      if (probe_offset[Z_AXIS] < 0)
+      if (probe_offset.z < 0)
         SERIAL_ECHOPGM(" & Below");
-      else if (probe_offset[Z_AXIS] > 0)
+      else if (probe_offset.z > 0)
         SERIAL_ECHOPGM(" & Above");
       else
         SERIAL_ECHOPGM(" & Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOLNPGM("Auto Bed Leveling: "
         #if ENABLED(AUTO_BED_LEVELING_LINEAR)
           "LINEAR"
@@ -127,70 +127,60 @@ void safe_delay(millis_t ms) {
           "UBL"
         #endif
       );
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
-          const float diff[XYZ] = {
-            planner.get_axis_position_mm(X_AXIS) - current_position[X_AXIS],
-            planner.get_axis_position_mm(Y_AXIS) - current_position[Y_AXIS],
-            planner.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]
-          };
           SERIAL_ECHOPGM("ABL Adjustment X");
-          if (diff[X_AXIS] > 0) SERIAL_CHAR('+');
-          SERIAL_ECHO(diff[X_AXIS]);
-          SERIAL_ECHOPGM(" Y");
-          if (diff[Y_AXIS] > 0) SERIAL_CHAR('+');
-          SERIAL_ECHO(diff[Y_AXIS]);
-          SERIAL_ECHOPGM(" Z");
-          if (diff[Z_AXIS] > 0) SERIAL_CHAR('+');
-          SERIAL_ECHO(diff[Z_AXIS]);
+          LOOP_XYZ(a) {
+            float v = planner.get_axis_position_mm(AxisEnum(a)) - current_position[a];
+            SERIAL_CHAR(' ');
+            SERIAL_CHAR('X' + char(a));
+            if (v > 0) SERIAL_CHAR('+');
+            SERIAL_ECHO(v);
+          }
         #else
           #if ENABLED(AUTO_BED_LEVELING_UBL)
             SERIAL_ECHOPGM("UBL Adjustment Z");
-            const float rz = ubl.get_z_correction(current_position[X_AXIS], current_position[Y_AXIS]);
+            const float rz = ubl.get_z_correction(current_position);
           #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
             SERIAL_ECHOPGM("ABL Adjustment Z");
             const float rz = bilinear_z_offset(current_position);
           #endif
           SERIAL_ECHO(ftostr43sign(rz, '+'));
           #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
             if (planner.z_fade_height) {
-              SERIAL_ECHOPAIR(" (", ftostr43sign(rz * planner.fade_scaling_factor_for_z(current_position[Z_AXIS]), '+'));
+              SERIAL_ECHOPAIR(" (", ftostr43sign(rz * planner.fade_scaling_factor_for_z(current_position.z), '+'));
               SERIAL_CHAR(')');
             }
           #endif
         #endif
       }
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
-        SERIAL_ECHOPAIR("MBL Adjustment Z", ftostr43sign(mbl.get_z(current_position[X_AXIS], current_position[Y_AXIS]
-          #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
-            , 1.0
-          #endif
-        ), '+'));
+        SERIAL_ECHOPAIR("MBL Adjustment Z", ftostr43sign(mbl.get_z(current_position), '+'));
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height) {
             SERIAL_ECHOPAIR(" (", ftostr43sign(
-              mbl.get_z(current_position[X_AXIS], current_position[Y_AXIS], planner.fade_scaling_factor_for_z(current_position[Z_AXIS])), '+'
+              mbl.get_z(current_position, planner.fade_scaling_factor_for_z(current_position.z)), '+'
             ));
             SERIAL_CHAR(')');
           }
         #endif
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 

commit 4e8d9fe59b53fc5937d907fcf6d79b58233ab6ef
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 24 23:35:49 2019 -0500

    zprobe_offset => probe_offset

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 2724cdebf9..5ebd84afd1 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -72,50 +72,50 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
       #elif ENABLED(SOLENOID_PROBE)
         "SOLENOID_PROBE"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
-      SERIAL_ECHOPAIR("Probe Offset X:", zprobe_offset[X_AXIS], " Y:", zprobe_offset[Y_AXIS], " Z:", zprobe_offset[Z_AXIS]);
-      if (zprobe_offset[X_AXIS] > 0)
+      SERIAL_ECHOPAIR("Probe Offset X:", probe_offset[X_AXIS], " Y:", probe_offset[Y_AXIS], " Z:", probe_offset[Z_AXIS]);
+      if (probe_offset[X_AXIS] > 0)
         SERIAL_ECHOPGM(" (Right");
-      else if (zprobe_offset[X_AXIS] < 0)
+      else if (probe_offset[X_AXIS] < 0)
         SERIAL_ECHOPGM(" (Left");
-      else if (zprobe_offset[Y_AXIS] != 0)
+      else if (probe_offset[Y_AXIS] != 0)
         SERIAL_ECHOPGM(" (Middle");
       else
         SERIAL_ECHOPGM(" (Aligned With");
 
-      if (zprobe_offset[Y_AXIS] > 0) {
+      if (probe_offset[Y_AXIS] > 0) {
         #if IS_SCARA
           SERIAL_ECHOPGM("-Distal");
         #else
           SERIAL_ECHOPGM("-Back");
         #endif
       }
-      else if (zprobe_offset[Y_AXIS] < 0) {
+      else if (probe_offset[Y_AXIS] < 0) {
         #if IS_SCARA
           SERIAL_ECHOPGM("-Proximal");
         #else
           SERIAL_ECHOPGM("-Front");
         #endif
       }
-      else if (zprobe_offset[X_AXIS] != 0)
+      else if (probe_offset[X_AXIS] != 0)
         SERIAL_ECHOPGM("-Center");
 
-      if (zprobe_offset[Z_AXIS] < 0)
+      if (probe_offset[Z_AXIS] < 0)
         SERIAL_ECHOPGM(" & Below");
-      else if (zprobe_offset[Z_AXIS] > 0)
+      else if (probe_offset[Z_AXIS] > 0)
         SERIAL_ECHOPGM(" & Above");
       else
         SERIAL_ECHOPGM(" & Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOLNPGM("Auto Bed Leveling: "
         #if ENABLED(AUTO_BED_LEVELING_LINEAR)
           "LINEAR"

commit df1e51258a8bcc432deed9f5bd60df41a75b2c32
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Sep 24 22:29:21 2019 -0400

    Add M851 X Y probe offsets (#15202)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 2bb6878a44..2724cdebf9 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -72,54 +72,50 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
       #elif ENABLED(SOLENOID_PROBE)
         "SOLENOID_PROBE"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
-      SERIAL_ECHOPAIR(
-        "Probe Offset X:" STRINGIFY(X_PROBE_OFFSET_FROM_EXTRUDER)
-                    " Y:" STRINGIFY(Y_PROBE_OFFSET_FROM_EXTRUDER)
-                    " Z:", zprobe_zoffset
-      );
-      if ((X_PROBE_OFFSET_FROM_EXTRUDER) > 0)
+      SERIAL_ECHOPAIR("Probe Offset X:", zprobe_offset[X_AXIS], " Y:", zprobe_offset[Y_AXIS], " Z:", zprobe_offset[Z_AXIS]);
+      if (zprobe_offset[X_AXIS] > 0)
         SERIAL_ECHOPGM(" (Right");
-      else if ((X_PROBE_OFFSET_FROM_EXTRUDER) < 0)
+      else if (zprobe_offset[X_AXIS] < 0)
         SERIAL_ECHOPGM(" (Left");
-      else if ((Y_PROBE_OFFSET_FROM_EXTRUDER) != 0)
+      else if (zprobe_offset[Y_AXIS] != 0)
         SERIAL_ECHOPGM(" (Middle");
       else
         SERIAL_ECHOPGM(" (Aligned With");
 
-      if ((Y_PROBE_OFFSET_FROM_EXTRUDER) > 0) {
+      if (zprobe_offset[Y_AXIS] > 0) {
         #if IS_SCARA
           SERIAL_ECHOPGM("-Distal");
         #else
           SERIAL_ECHOPGM("-Back");
         #endif
       }
-      else if ((Y_PROBE_OFFSET_FROM_EXTRUDER) < 0) {
+      else if (zprobe_offset[Y_AXIS] < 0) {
         #if IS_SCARA
           SERIAL_ECHOPGM("-Proximal");
         #else
           SERIAL_ECHOPGM("-Front");
         #endif
       }
-      else if ((X_PROBE_OFFSET_FROM_EXTRUDER) != 0)
+      else if (zprobe_offset[X_AXIS] != 0)
         SERIAL_ECHOPGM("-Center");
 
-      if (zprobe_zoffset < 0)
+      if (zprobe_offset[Z_AXIS] < 0)
         SERIAL_ECHOPGM(" & Below");
-      else if (zprobe_zoffset > 0)
+      else if (zprobe_offset[Z_AXIS] > 0)
         SERIAL_ECHOPGM(" & Above");
       else
         SERIAL_ECHOPGM(" & Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
     #endif
 
     #if HAS_ABL_OR_UBL
       SERIAL_ECHOLNPGM("Auto Bed Leveling: "
         #if ENABLED(AUTO_BED_LEVELING_LINEAR)
           "LINEAR"

commit 01fd3f904f214d3b7f20d1ed3fb72fbc20f78050
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Thu Sep 5 20:21:06 2019 +0200

    Drop extra include (#15171)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 089cf528d6..2bb6878a44 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -33,21 +33,20 @@ void safe_delay(millis_t ms) {
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
-  #include "../module/stepper.h"
   #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
     SERIAL_ECHOLNPGM("Machine Type: "
       #if ENABLED(DELTA)
         "Delta"
       #elif IS_SCARA
         "SCARA"
       #elif IS_CORE

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index b8e42c61f1..089cf528d6 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit 07b41a8c3f999f78fed389c2fa673c151d7a1422
Author: sjasonsmith <jason.inet@gmail.com>
Date:   Sat Jun 22 15:54:37 2019 -0700

    Include SOLENOID_PROBE in leveling report (#14344)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index b224891cad..b8e42c61f1 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -65,20 +65,22 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(BLTOUCH)
         "BLTOUCH"
       #elif HAS_Z_SERVO_PROBE
         "SERVO PROBE"
       #elif ENABLED(TOUCH_MI_PROBE)
         "TOUCH_MI_PROBE"
       #elif ENABLED(Z_PROBE_SLED)
         "Z_PROBE_SLED"
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
+      #elif ENABLED(SOLENOID_PROBE)
+        "SOLENOID_PROBE"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
       SERIAL_ECHOPAIR(
         "Probe Offset X:" STRINGIFY(X_PROBE_OFFSET_FROM_EXTRUDER)
                     " Y:" STRINGIFY(Y_PROBE_OFFSET_FROM_EXTRUDER)
                     " Z:", zprobe_zoffset

commit f2cfa408b74ad6d2d885c72e5fee9cde7973aa55
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Sat Jun 15 05:19:48 2019 +0200

    Touch-MI probe by hotends.fr (#14101)
    
    A simple Z probe using a magnet to deploy a probe. See https://youtu.be/E7Ik9PbKPl0 for the sensor description...

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 4f2cb81079..b224891cad 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -59,20 +59,22 @@ void safe_delay(millis_t ms) {
 
     SERIAL_ECHOLNPGM("Probe: "
       #if ENABLED(PROBE_MANUALLY)
         "PROBE_MANUALLY"
       #elif ENABLED(FIX_MOUNTED_PROBE)
         "FIX_MOUNTED_PROBE"
       #elif ENABLED(BLTOUCH)
         "BLTOUCH"
       #elif HAS_Z_SERVO_PROBE
         "SERVO PROBE"
+      #elif ENABLED(TOUCH_MI_PROBE)
+        "TOUCH_MI_PROBE"
       #elif ENABLED(Z_PROBE_SLED)
         "Z_PROBE_SLED"
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE

commit 356410dcfce70972f9cfbafd9c32a71701781640
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 11 07:41:54 2019 -0500

    Move crc16 function to libs

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index f8415637ef..4f2cb81079 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -28,33 +28,20 @@
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.manage_heater();
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
-#if EITHER(EEPROM_SETTINGS, SD_FIRMWARE_UPDATE)
-
-  void crc16(uint16_t *crc, const void * const data, uint16_t cnt) {
-    uint8_t *ptr = (uint8_t *)data;
-    while (cnt--) {
-      *crc = (uint16_t)(*crc ^ (uint16_t)(((uint16_t)*ptr++) << 8));
-      for (uint8_t i = 0; i < 8; i++)
-        *crc = (uint16_t)((*crc & 0x8000) ? ((uint16_t)(*crc << 1) ^ 0x1021) : (*crc << 1));
-    }
-  }
-
-#endif // EEPROM_SETTINGS || SD_FIRMWARE_UPDATE
-
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
   #include "../module/stepper.h"
   #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {

commit 2a96d4e23ad0090dc371710d079af731136dfe97
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jun 11 05:58:43 2019 -0500

    Move number-to-string functions to libs

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 0bc029cece..f8415637ef 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -41,294 +41,27 @@ void safe_delay(millis_t ms) {
     uint8_t *ptr = (uint8_t *)data;
     while (cnt--) {
       *crc = (uint16_t)(*crc ^ (uint16_t)(((uint16_t)*ptr++) << 8));
       for (uint8_t i = 0; i < 8; i++)
         *crc = (uint16_t)((*crc & 0x8000) ? ((uint16_t)(*crc << 1) ^ 0x1021) : (*crc << 1));
     }
   }
 
 #endif // EEPROM_SETTINGS || SD_FIRMWARE_UPDATE
 
-#if ANY(ULTRA_LCD, DEBUG_LEVELING_FEATURE, EXTENSIBLE_UI)
-
-  char conv[8] = { 0 };
-
-  #define DIGIT(n) ('0' + (n))
-  #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
-  #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
-  #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
-
-  // Convert a full-range unsigned 8bit int to a percentage
-  char* ui8tostr4pct(const uint8_t i) {
-    const uint8_t n = ui8_to_percent(i);
-    conv[3] = RJDIGIT(n, 100);
-    conv[4] = RJDIGIT(n, 10);
-    conv[5] = DIGIMOD(n, 1);
-    conv[6] = '%';
-    return &conv[3];
-  }
-
-  // Convert unsigned 8bit int to string 123 format
-  char* ui8tostr3(const uint8_t i) {
-    conv[4] = RJDIGIT(i, 100);
-    conv[5] = RJDIGIT(i, 10);
-    conv[6] = DIGIMOD(i, 1);
-    return &conv[4];
-  }
-
-  // Convert signed 8bit int to rj string with 123 or -12 format
-  char* i8tostr3(const int8_t x) {
-    int xx = x;
-    conv[4] = MINUSOR(xx, RJDIGIT(xx, 100));
-    conv[5] = RJDIGIT(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
-    return &conv[4];
-  }
-
-  // Convert unsigned 16bit int to string 123 format
-  char* ui16tostr3(const uint16_t xx) {
-    conv[4] = RJDIGIT(xx, 100);
-    conv[5] = RJDIGIT(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
-    return &conv[4];
-  }
-
-  // Convert unsigned 16bit int to string 1234 format
-  char* ui16tostr4(const uint16_t xx) {
-    conv[3] = RJDIGIT(xx, 1000);
-    conv[4] = RJDIGIT(xx, 100);
-    conv[5] = RJDIGIT(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
-    return &conv[3];
-  }
-
-  // Convert signed 16bit int to rj string with 123 or -12 format
-  char* i16tostr3(const int16_t x) {
-    int xx = x;
-    conv[4] = MINUSOR(xx, RJDIGIT(xx, 100));
-    conv[5] = RJDIGIT(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
-    return &conv[4];
-  }
-
-  // Convert unsigned 16bit int to lj string with 123 format
-  char* i16tostr3left(const int16_t i) {
-    char *str = &conv[6];
-    *str = DIGIMOD(i, 1);
-    if (i >= 10) {
-      *(--str) = DIGIMOD(i, 10);
-      if (i >= 100)
-        *(--str) = DIGIMOD(i, 100);
-    }
-    return str;
-  }
-
-  // Convert signed 16bit int to rj string with 1234, _123, -123, _-12, or __-1 format
-  char* i16tostr4sign(const int16_t i) {
-    const bool neg = i < 0;
-    const int ii = neg ? -i : i;
-    if (i >= 1000) {
-      conv[3] = DIGIMOD(ii, 1000);
-      conv[4] = DIGIMOD(ii, 100);
-      conv[5] = DIGIMOD(ii, 10);
-    }
-    else if (ii >= 100) {
-      conv[3] = neg ? '-' : ' ';
-      conv[4] = DIGIMOD(ii, 100);
-      conv[5] = DIGIMOD(ii, 10);
-    }
-    else {
-      conv[3] = ' ';
-      conv[4] = ' ';
-      if (ii >= 10) {
-        conv[4] = neg ? '-' : ' ';
-        conv[5] = DIGIMOD(ii, 10);
-      }
-      else {
-        conv[5] = neg ? '-' : ' ';
-      }
-    }
-    conv[6] = DIGIMOD(ii, 1);
-    return &conv[3];
-  }
-
-  // Convert unsigned float to string with 1.23 format
-  char* ftostr12ns(const float &f) {
-    const long i = ((f < 0 ? -f : f) * 1000 + 5) / 10;
-    conv[3] = DIGIMOD(i, 100);
-    conv[4] = '.';
-    conv[5] = DIGIMOD(i, 10);
-    conv[6] = DIGIMOD(i, 1);
-    return &conv[3];
-  }
-
-  // Convert signed float to fixed-length string with 12.34 / -2.34 format or 123.45 / -23.45 format
-  char* ftostr42_52(const float &f) {
-    if (f <= -10 || f >= 100) return ftostr52(f); // need more digits
-    long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
-    conv[2] = (f >= 0 && f < 10) ? ' ' : MINUSOR(i, DIGIMOD(i, 1000));
-    conv[3] = DIGIMOD(i, 100);
-    conv[4] = '.';
-    conv[5] = DIGIMOD(i, 10);
-    conv[6] = DIGIMOD(i, 1);
-    return &conv[2];
-  }
-
-  // Convert signed float to fixed-length string with 023.45 / -23.45 format
-  char* ftostr52(const float &f) {
-    long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
-    conv[1] = MINUSOR(i, DIGIMOD(i, 10000));
-    conv[2] = DIGIMOD(i, 1000);
-    conv[3] = DIGIMOD(i, 100);
-    conv[4] = '.';
-    conv[5] = DIGIMOD(i, 10);
-    conv[6] = DIGIMOD(i, 1);
-    return &conv[1];
-  }
-
-  #if ENABLED(LCD_DECIMAL_SMALL_XY)
-
-    // Convert float to rj string with 1234, _123, -123, _-12, 12.3, _1.2, or -1.2 format
-    char* ftostr4sign(const float &f) {
-      const int i = (f * 100 + (f < 0 ? -5: 5)) / 10;
-      if (!WITHIN(i, -99, 999)) return i16tostr4sign((int)f);
-      const bool neg = i < 0;
-      const int ii = neg ? -i : i;
-      conv[3] = neg ? '-' : (ii >= 100 ? DIGIMOD(ii, 100) : ' ');
-      conv[4] = DIGIMOD(ii, 10);
-      conv[5] = '.';
-      conv[6] = DIGIMOD(ii, 1);
-      return &conv[3];
-    }
-
-  #endif // LCD_DECIMAL_SMALL_XY
-
-  // Convert float to fixed-length string with +123.4 / -123.4 format
-  char* ftostr41sign(const float &f) {
-    int i = (f * 100 + (f < 0 ? -5: 5)) / 10;
-    conv[1] = MINUSOR(i, '+');
-    conv[2] = DIGIMOD(i, 1000);
-    conv[3] = DIGIMOD(i, 100);
-    conv[4] = DIGIMOD(i, 10);
-    conv[5] = '.';
-    conv[6] = DIGIMOD(i, 1);
-    return &conv[1];
-  }
-
-  // Convert signed float to string (6 digit) with -1.234 / _0.000 / +1.234 format
-  char* ftostr43sign(const float &f, char plus/*=' '*/) {
-    long i = (f * 10000 + (f < 0 ? -5: 5)) / 10;
-    conv[1] = i ? MINUSOR(i, plus) : ' ';
-    conv[2] = DIGIMOD(i, 1000);
-    conv[3] = '.';
-    conv[4] = DIGIMOD(i, 100);
-    conv[5] = DIGIMOD(i, 10);
-    conv[6] = DIGIMOD(i, 1);
-    return &conv[1];
-  }
-
-  // Convert signed float to string (5 digit) with -1.2345 / _0.0000 / +1.2345 format
-  char* ftostr54sign(const float &f, char plus/*=' '*/) {
-    long i = (f * 100000 + (f < 0 ? -5: 5)) / 10;
-    conv[0] = i ? MINUSOR(i, plus) : ' ';
-    conv[1] = DIGIMOD(i, 10000);
-    conv[2] = '.';
-    conv[3] = DIGIMOD(i, 1000);
-    conv[4] = DIGIMOD(i, 100);
-    conv[5] = DIGIMOD(i, 10);
-    conv[6] = DIGIMOD(i, 1);
-    return &conv[0];
-  }
-
-  // Convert unsigned float to rj string with 12345 format
-  char* ftostr5rj(const float &f) {
-    const long i = ((f < 0 ? -f : f) * 10 + 5) / 10;
-    conv[2] = RJDIGIT(i, 10000);
-    conv[3] = RJDIGIT(i, 1000);
-    conv[4] = RJDIGIT(i, 100);
-    conv[5] = RJDIGIT(i, 10);
-    conv[6] = DIGIMOD(i, 1);
-    return &conv[2];
-  }
-
-  // Convert signed float to string with +1234.5 format
-  char* ftostr51sign(const float &f) {
-    long i = (f * 100 + (f < 0 ? -5: 5)) / 10;
-    conv[0] = MINUSOR(i, '+');
-    conv[1] = DIGIMOD(i, 10000);
-    conv[2] = DIGIMOD(i, 1000);
-    conv[3] = DIGIMOD(i, 100);
-    conv[4] = DIGIMOD(i, 10);
-    conv[5] = '.';
-    conv[6] = DIGIMOD(i, 1);
-    return conv;
-  }
-
-  // Convert signed float to string with +123.45 format
-  char* ftostr52sign(const float &f) {
-    long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
-    conv[0] = MINUSOR(i, '+');
-    conv[1] = DIGIMOD(i, 10000);
-    conv[2] = DIGIMOD(i, 1000);
-    conv[3] = DIGIMOD(i, 100);
-    conv[4] = '.';
-    conv[5] = DIGIMOD(i, 10);
-    conv[6] = DIGIMOD(i, 1);
-    return conv;
-  }
-
-  // Convert unsigned float to string with 1234.5 format omitting trailing zeros
-  char* ftostr51rj(const float &f) {
-    const long i = ((f < 0 ? -f : f) * 100 + 5) / 10;
-    conv[0] = ' ';
-    conv[1] = RJDIGIT(i, 10000);
-    conv[2] = RJDIGIT(i, 1000);
-    conv[3] = RJDIGIT(i, 100);
-    conv[4] = DIGIMOD(i, 10);
-    conv[5] = '.';
-    conv[6] = DIGIMOD(i, 1);
-    return conv;
-  }
-
-  // Convert signed float to space-padded string with -_23.4_ format
-  char* ftostr52sp(const float &f) {
-    long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
-    uint8_t dig;
-    conv[0] = MINUSOR(i, ' ');
-    conv[1] = RJDIGIT(i, 10000);
-    conv[2] = RJDIGIT(i, 1000);
-    conv[3] = DIGIMOD(i, 100);
-
-    if ((dig = i % 10)) {          // second digit after decimal point?
-      conv[4] = '.';
-      conv[5] = DIGIMOD(i, 10);
-      conv[6] = DIGIT(dig);
-    }
-    else {
-      if ((dig = (i / 10) % 10)) { // first digit after decimal point?
-        conv[4] = '.';
-        conv[5] = DIGIT(dig);
-      }
-      else                          // nothing after decimal point
-        conv[4] = conv[5] = ' ';
-      conv[6] = ' ';
-    }
-    return conv;
-  }
-
-#endif // ULTRA_LCD
-
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
+  #include "../module/stepper.h"
+  #include "../libs/numtostr.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
     SERIAL_ECHOLNPGM("Machine Type: "
       #if ENABLED(DELTA)
         "Delta"
       #elif IS_SCARA
         "SCARA"
       #elif IS_CORE
         "Core"

commit 44caf70917d249b6175ef671d9659d408d1dde08
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat May 25 15:24:26 2019 -0500

    Improve editing, fix some small value editing

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index cc7d0065e9..0bc029cece 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -154,20 +154,32 @@ void safe_delay(millis_t ms) {
   // Convert unsigned float to string with 1.23 format
   char* ftostr12ns(const float &f) {
     const long i = ((f < 0 ? -f : f) * 1000 + 5) / 10;
     conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[3];
   }
 
+  // Convert signed float to fixed-length string with 12.34 / -2.34 format or 123.45 / -23.45 format
+  char* ftostr42_52(const float &f) {
+    if (f <= -10 || f >= 100) return ftostr52(f); // need more digits
+    long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
+    conv[2] = (f >= 0 && f < 10) ? ' ' : MINUSOR(i, DIGIMOD(i, 1000));
+    conv[3] = DIGIMOD(i, 100);
+    conv[4] = '.';
+    conv[5] = DIGIMOD(i, 10);
+    conv[6] = DIGIMOD(i, 1);
+    return &conv[2];
+  }
+
   // Convert signed float to fixed-length string with 023.45 / -23.45 format
   char* ftostr52(const float &f) {
     long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
     conv[1] = MINUSOR(i, DIGIMOD(i, 10000));
     conv[2] = DIGIMOD(i, 1000);
     conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[1];

commit 866e2d41dca277a1913a7e505a3d07d6d10f7ce3
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Tue Apr 16 14:45:31 2019 -0600

    Correct range of LCD axis step editing (#13727)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index e695601cef..cc7d0065e9 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -257,29 +257,29 @@ void safe_delay(millis_t ms) {
     conv[0] = MINUSOR(i, '+');
     conv[1] = DIGIMOD(i, 10000);
     conv[2] = DIGIMOD(i, 1000);
     conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return conv;
   }
 
-  // Convert unsigned float to string with 1234.56 format omitting trailing zeros
-  char* ftostr62rj(const float &f) {
-    const long i = ((f < 0 ? -f : f) * 1000 + 5) / 10;
-    conv[0] = RJDIGIT(i, 100000);
+  // Convert unsigned float to string with 1234.5 format omitting trailing zeros
+  char* ftostr51rj(const float &f) {
+    const long i = ((f < 0 ? -f : f) * 100 + 5) / 10;
+    conv[0] = ' ';
     conv[1] = RJDIGIT(i, 10000);
     conv[2] = RJDIGIT(i, 1000);
-    conv[3] = DIGIMOD(i, 100);
-    conv[4] = '.';
-    conv[5] = DIGIMOD(i, 10);
+    conv[3] = RJDIGIT(i, 100);
+    conv[4] = DIGIMOD(i, 10);
+    conv[5] = '.';
     conv[6] = DIGIMOD(i, 1);
     return conv;
   }
 
   // Convert signed float to space-padded string with -_23.4_ format
   char* ftostr52sp(const float &f) {
     long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
     uint8_t dig;
     conv[0] = MINUSOR(i, ' ');
     conv[1] = RJDIGIT(i, 10000);

commit 9cb5c57b844bde807d111238443f494788dc4ee2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 8 21:47:23 2019 -0500

    Adjustments to ui8tostr_percent

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 79c7018f51..e695601cef 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -51,25 +51,25 @@ void safe_delay(millis_t ms) {
 #if ANY(ULTRA_LCD, DEBUG_LEVELING_FEATURE, EXTENSIBLE_UI)
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 
   // Convert a full-range unsigned 8bit int to a percentage
-  char* ui8tostr_percent(const uint8_t i) {
-    const uint8_t percent = ui8_to_percent(i);
-    conv[3] = RJDIGIT(percent, 100);
-    conv[4] = RJDIGIT(percent, 10);
-    conv[5] = DIGIMOD(percent, 1);
+  char* ui8tostr4pct(const uint8_t i) {
+    const uint8_t n = ui8_to_percent(i);
+    conv[3] = RJDIGIT(n, 100);
+    conv[4] = RJDIGIT(n, 10);
+    conv[5] = DIGIMOD(n, 1);
     conv[6] = '%';
     return &conv[3];
   }
 
   // Convert unsigned 8bit int to string 123 format
   char* ui8tostr3(const uint8_t i) {
     conv[4] = RJDIGIT(i, 100);
     conv[5] = RJDIGIT(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[4];

commit 9cee81d47eea0c8700e265f10f103ca99499511f
Author: Roxy-3D <Roxy-3D@users.noreply.github.com>
Date:   Sat Apr 6 18:04:34 2019 -0500

    Option to show babysteps total since G28 (#13580)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 261a27eefb..79c7018f51 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -207,20 +207,33 @@ void safe_delay(millis_t ms) {
     long i = (f * 10000 + (f < 0 ? -5: 5)) / 10;
     conv[1] = i ? MINUSOR(i, plus) : ' ';
     conv[2] = DIGIMOD(i, 1000);
     conv[3] = '.';
     conv[4] = DIGIMOD(i, 100);
     conv[5] = DIGIMOD(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[1];
   }
 
+  // Convert signed float to string (5 digit) with -1.2345 / _0.0000 / +1.2345 format
+  char* ftostr54sign(const float &f, char plus/*=' '*/) {
+    long i = (f * 100000 + (f < 0 ? -5: 5)) / 10;
+    conv[0] = i ? MINUSOR(i, plus) : ' ';
+    conv[1] = DIGIMOD(i, 10000);
+    conv[2] = '.';
+    conv[3] = DIGIMOD(i, 1000);
+    conv[4] = DIGIMOD(i, 100);
+    conv[5] = DIGIMOD(i, 10);
+    conv[6] = DIGIMOD(i, 1);
+    return &conv[0];
+  }
+
   // Convert unsigned float to rj string with 12345 format
   char* ftostr5rj(const float &f) {
     const long i = ((f < 0 ? -f : f) * 10 + 5) / 10;
     conv[2] = RJDIGIT(i, 10000);
     conv[3] = RJDIGIT(i, 1000);
     conv[4] = RJDIGIT(i, 100);
     conv[5] = RJDIGIT(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[2];
   }

commit d992dfe7d59b1ec24e1c40e22f05e3f709c35b22
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Sat Mar 30 12:00:31 2019 -0600

    Use the percent util func in the string func. (#13523)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 565eff0314..261a27eefb 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -52,21 +52,21 @@ void safe_delay(millis_t ms) {
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 
   // Convert a full-range unsigned 8bit int to a percentage
   char* ui8tostr_percent(const uint8_t i) {
-    const uint16_t percent = 100 * i / 255;
+    const uint8_t percent = ui8_to_percent(i);
     conv[3] = RJDIGIT(percent, 100);
     conv[4] = RJDIGIT(percent, 10);
     conv[5] = DIGIMOD(percent, 1);
     conv[6] = '%';
     return &conv[3];
   }
 
   // Convert unsigned 8bit int to string 123 format
   char* ui8tostr3(const uint8_t i) {
     conv[4] = RJDIGIT(i, 100);

commit 5679fae11efbc7e8b9de2f0e68dc9a879757ff88
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Fri Mar 29 13:07:43 2019 -0600

    UltraLCD enhancements (lower fan resolution, backlash menu) (#13519)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 33aa8d45e5..565eff0314 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -50,20 +50,30 @@ void safe_delay(millis_t ms) {
 
 #if ANY(ULTRA_LCD, DEBUG_LEVELING_FEATURE, EXTENSIBLE_UI)
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 
+  // Convert a full-range unsigned 8bit int to a percentage
+  char* ui8tostr_percent(const uint8_t i) {
+    const uint16_t percent = 100 * i / 255;
+    conv[3] = RJDIGIT(percent, 100);
+    conv[4] = RJDIGIT(percent, 10);
+    conv[5] = DIGIMOD(percent, 1);
+    conv[6] = '%';
+    return &conv[3];
+  }
+
   // Convert unsigned 8bit int to string 123 format
   char* ui8tostr3(const uint8_t i) {
     conv[4] = RJDIGIT(i, 100);
     conv[5] = RJDIGIT(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[4];
   }
 
   // Convert signed 8bit int to rj string with 123 or -12 format
   char* i8tostr3(const int8_t x) {

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index f7f32df00d..33aa8d45e5 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -28,34 +28,34 @@
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.manage_heater();
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
-#if ENABLED(EEPROM_SETTINGS) || ENABLED(SD_FIRMWARE_UPDATE)
+#if EITHER(EEPROM_SETTINGS, SD_FIRMWARE_UPDATE)
 
   void crc16(uint16_t *crc, const void * const data, uint16_t cnt) {
     uint8_t *ptr = (uint8_t *)data;
     while (cnt--) {
       *crc = (uint16_t)(*crc ^ (uint16_t)(((uint16_t)*ptr++) << 8));
       for (uint8_t i = 0; i < 8; i++)
         *crc = (uint16_t)((*crc & 0x8000) ? ((uint16_t)(*crc << 1) ^ 0x1021) : (*crc << 1));
     }
   }
 
 #endif // EEPROM_SETTINGS || SD_FIRMWARE_UPDATE
 
-#if ENABLED(ULTRA_LCD) || ENABLED(DEBUG_LEVELING_FEATURE) || ENABLED(EXTENSIBLE_UI)
+#if ANY(ULTRA_LCD, DEBUG_LEVELING_FEATURE, EXTENSIBLE_UI)
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 
   // Convert unsigned 8bit int to string 123 format
   char* ui8tostr3(const uint8_t i) {

commit f5bcc00570bd5ae2ba0deaa7af0ba4d3ce7c3b02
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 14 02:25:42 2019 -0500

    Unify debugging output with debug_out.h (#13388)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index e2b44141d8..f7f32df00d 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -314,22 +314,25 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(Z_PROBE_SLED)
         "Z_PROBE_SLED"
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
-      SERIAL_ECHOPGM("Probe Offset X:" STRINGIFY(X_PROBE_OFFSET_FROM_EXTRUDER) " Y:" STRINGIFY(Y_PROBE_OFFSET_FROM_EXTRUDER));
-      SERIAL_ECHOPAIR(" Z:", zprobe_zoffset);
+      SERIAL_ECHOPAIR(
+        "Probe Offset X:" STRINGIFY(X_PROBE_OFFSET_FROM_EXTRUDER)
+                    " Y:" STRINGIFY(Y_PROBE_OFFSET_FROM_EXTRUDER)
+                    " Z:", zprobe_zoffset
+      );
       if ((X_PROBE_OFFSET_FROM_EXTRUDER) > 0)
         SERIAL_ECHOPGM(" (Right");
       else if ((X_PROBE_OFFSET_FROM_EXTRUDER) < 0)
         SERIAL_ECHOPGM(" (Left");
       else if ((Y_PROBE_OFFSET_FROM_EXTRUDER) != 0)
         SERIAL_ECHOPGM(" (Middle");
       else
         SERIAL_ECHOPGM(" (Aligned With");
 
       if ((Y_PROBE_OFFSET_FROM_EXTRUDER) > 0) {

commit fa236e9718cd2feb85a1986b8f56ad97cd2f4871
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Mar 1 19:29:48 2019 -0600

    General cleanup ahead of L64XX

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index b1a7e42920..e2b44141d8 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -434,17 +434,10 @@ void safe_delay(millis_t ms) {
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #endif // MESH_BED_LEVELING
   }
 
 #endif // DEBUG_LEVELING_FEATURE
-
-void print_bin(const uint16_t val) {
-  for (uint8_t i = 16; i--;) {
-    SERIAL_ECHO(TEST(val, i));
-    if (!(i & 0x3)) SERIAL_CHAR(' ');
-  }
-}

commit 808b076000e89fd7dae071bd2e4899833c872af6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 24 20:29:03 2019 -0600

    Update some ABL/UBL conditionals

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 61582b4a26..b1a7e42920 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -351,21 +351,21 @@ void safe_delay(millis_t ms) {
 
       if (zprobe_zoffset < 0)
         SERIAL_ECHOPGM(" & Below");
       else if (zprobe_zoffset > 0)
         SERIAL_ECHOPGM(" & Above");
       else
         SERIAL_ECHOPGM(" & Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
     #endif
 
-    #if HAS_ABL
+    #if HAS_ABL_OR_UBL
       SERIAL_ECHOLNPGM("Auto Bed Leveling: "
         #if ENABLED(AUTO_BED_LEVELING_LINEAR)
           "LINEAR"
         #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
           "BILINEAR"
         #elif ENABLED(AUTO_BED_LEVELING_3POINT)
           "3POINT"
         #elif ENABLED(AUTO_BED_LEVELING_UBL)
           "UBL"
         #endif

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 17a52921c4..61582b4a26 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 2f35747f294c4b3dc3e6920b34e208f89bd4841d
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Wed Jan 23 19:06:54 2019 -0600

    L6470 SPI daisy chain support (#12895)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 7491dd7513..17a52921c4 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -434,10 +434,17 @@ void safe_delay(millis_t ms) {
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #endif // MESH_BED_LEVELING
   }
 
 #endif // DEBUG_LEVELING_FEATURE
+
+void print_bin(const uint16_t val) {
+  for (uint8_t i = 16; i--;) {
+    SERIAL_ECHO(TEST(val, i));
+    if (!(i & 0x3)) SERIAL_CHAR(' ');
+  }
+}

commit eb78aed863cf20cc02f07b8c3e47d27ae4ed91dd
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 12 16:01:04 2019 -0600

    Rename LCD menus according to variable types (#12892)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 041c61b1ea..7491dd7513 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -50,50 +50,77 @@ void safe_delay(millis_t ms) {
 
 #if ENABLED(ULTRA_LCD) || ENABLED(DEBUG_LEVELING_FEATURE) || ENABLED(EXTENSIBLE_UI)
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 
-  // Convert unsigned int to string 123 format
-  char* i8tostr3(const uint8_t i) {
+  // Convert unsigned 8bit int to string 123 format
+  char* ui8tostr3(const uint8_t i) {
     conv[4] = RJDIGIT(i, 100);
     conv[5] = RJDIGIT(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[4];
   }
 
-  // Convert signed int to rj string with 123 or -12 format
-  char* itostr3(int i) {
-    conv[4] = MINUSOR(i, RJDIGIT(i, 100));
-    conv[5] = RJDIGIT(i, 10);
-    conv[6] = DIGIMOD(i, 1);
+  // Convert signed 8bit int to rj string with 123 or -12 format
+  char* i8tostr3(const int8_t x) {
+    int xx = x;
+    conv[4] = MINUSOR(xx, RJDIGIT(xx, 100));
+    conv[5] = RJDIGIT(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[4];
+  }
+
+  // Convert unsigned 16bit int to string 123 format
+  char* ui16tostr3(const uint16_t xx) {
+    conv[4] = RJDIGIT(xx, 100);
+    conv[5] = RJDIGIT(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[4];
+  }
+
+  // Convert unsigned 16bit int to string 1234 format
+  char* ui16tostr4(const uint16_t xx) {
+    conv[3] = RJDIGIT(xx, 1000);
+    conv[4] = RJDIGIT(xx, 100);
+    conv[5] = RJDIGIT(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[3];
+  }
+
+  // Convert signed 16bit int to rj string with 123 or -12 format
+  char* i16tostr3(const int16_t x) {
+    int xx = x;
+    conv[4] = MINUSOR(xx, RJDIGIT(xx, 100));
+    conv[5] = RJDIGIT(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
     return &conv[4];
   }
 
-  // Convert unsigned int to lj string with 123 format
-  char* itostr3left(const int i) {
+  // Convert unsigned 16bit int to lj string with 123 format
+  char* i16tostr3left(const int16_t i) {
     char *str = &conv[6];
     *str = DIGIMOD(i, 1);
     if (i >= 10) {
       *(--str) = DIGIMOD(i, 10);
       if (i >= 100)
         *(--str) = DIGIMOD(i, 100);
     }
     return str;
   }
 
-  // Convert signed int to rj string with 1234, _123, -123, _-12, or __-1 format
-  char* itostr4sign(const int i) {
+  // Convert signed 16bit int to rj string with 1234, _123, -123, _-12, or __-1 format
+  char* i16tostr4sign(const int16_t i) {
     const bool neg = i < 0;
     const int ii = neg ? -i : i;
     if (i >= 1000) {
       conv[3] = DIGIMOD(ii, 1000);
       conv[4] = DIGIMOD(ii, 100);
       conv[5] = DIGIMOD(ii, 10);
     }
     else if (ii >= 100) {
       conv[3] = neg ? '-' : ' ';
       conv[4] = DIGIMOD(ii, 100);
@@ -134,21 +161,21 @@ void safe_delay(millis_t ms) {
     conv[5] = DIGIMOD(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[1];
   }
 
   #if ENABLED(LCD_DECIMAL_SMALL_XY)
 
     // Convert float to rj string with 1234, _123, -123, _-12, 12.3, _1.2, or -1.2 format
     char* ftostr4sign(const float &f) {
       const int i = (f * 100 + (f < 0 ? -5: 5)) / 10;
-      if (!WITHIN(i, -99, 999)) return itostr4sign((int)f);
+      if (!WITHIN(i, -99, 999)) return i16tostr4sign((int)f);
       const bool neg = i < 0;
       const int ii = neg ? -i : i;
       conv[3] = neg ? '-' : (ii >= 100 ? DIGIMOD(ii, 100) : ' ');
       conv[4] = DIGIMOD(ii, 10);
       conv[5] = '.';
       conv[6] = DIGIMOD(ii, 1);
       return &conv[3];
     }
 
   #endif // LCD_DECIMAL_SMALL_XY

commit 22d7fed60aa72937786e88196854c5983c98501d
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Sun Nov 18 04:13:36 2018 +0100

    Fix compile error with SD_FIRMWARE_UPDATE (#12462)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 2de763b570..041c61b1ea 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -28,32 +28,32 @@
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.manage_heater();
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
-#if ENABLED(EEPROM_SETTINGS)
+#if ENABLED(EEPROM_SETTINGS) || ENABLED(SD_FIRMWARE_UPDATE)
 
   void crc16(uint16_t *crc, const void * const data, uint16_t cnt) {
     uint8_t *ptr = (uint8_t *)data;
     while (cnt--) {
       *crc = (uint16_t)(*crc ^ (uint16_t)(((uint16_t)*ptr++) << 8));
       for (uint8_t i = 0; i < 8; i++)
         *crc = (uint16_t)((*crc & 0x8000) ? ((uint16_t)(*crc << 1) ^ 0x1021) : (*crc << 1));
     }
   }
 
-#endif // EEPROM_SETTINGS
+#endif // EEPROM_SETTINGS || SD_FIRMWARE_UPDATE
 
 #if ENABLED(ULTRA_LCD) || ENABLED(DEBUG_LEVELING_FEATURE) || ENABLED(EXTENSIBLE_UI)
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 

commit 7ee58943604446c83cde324c2793597f657de59c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 17 07:36:39 2018 -0600

    Allow float XY probe offsets
    
    Responding to #12383
    
    XY probe offsets should be integers because adding decimal points makes the code larger. But if decimals are very much wanted, this commit removes the old restriction.

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index e10d8f6a58..2de763b570 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -289,44 +289,46 @@ void safe_delay(millis_t ms) {
       #elif ENABLED(Z_PROBE_ALLEN_KEY)
         "Z_PROBE_ALLEN_KEY"
       #else
         "NONE"
       #endif
     );
 
     #if HAS_BED_PROBE
       SERIAL_ECHOPGM("Probe Offset X:" STRINGIFY(X_PROBE_OFFSET_FROM_EXTRUDER) " Y:" STRINGIFY(Y_PROBE_OFFSET_FROM_EXTRUDER));
       SERIAL_ECHOPAIR(" Z:", zprobe_zoffset);
-      #if X_PROBE_OFFSET_FROM_EXTRUDER > 0
+      if ((X_PROBE_OFFSET_FROM_EXTRUDER) > 0)
         SERIAL_ECHOPGM(" (Right");
-      #elif X_PROBE_OFFSET_FROM_EXTRUDER < 0
+      else if ((X_PROBE_OFFSET_FROM_EXTRUDER) < 0)
         SERIAL_ECHOPGM(" (Left");
-      #elif Y_PROBE_OFFSET_FROM_EXTRUDER != 0
+      else if ((Y_PROBE_OFFSET_FROM_EXTRUDER) != 0)
         SERIAL_ECHOPGM(" (Middle");
-      #else
+      else
         SERIAL_ECHOPGM(" (Aligned With");
-      #endif
-      #if Y_PROBE_OFFSET_FROM_EXTRUDER > 0
+
+      if ((Y_PROBE_OFFSET_FROM_EXTRUDER) > 0) {
         #if IS_SCARA
           SERIAL_ECHOPGM("-Distal");
         #else
           SERIAL_ECHOPGM("-Back");
         #endif
-      #elif Y_PROBE_OFFSET_FROM_EXTRUDER < 0
+      }
+      else if ((Y_PROBE_OFFSET_FROM_EXTRUDER) < 0) {
         #if IS_SCARA
           SERIAL_ECHOPGM("-Proximal");
         #else
           SERIAL_ECHOPGM("-Front");
         #endif
-      #elif X_PROBE_OFFSET_FROM_EXTRUDER != 0
+      }
+      else if ((X_PROBE_OFFSET_FROM_EXTRUDER) != 0)
         SERIAL_ECHOPGM("-Center");
-      #endif
+
       if (zprobe_zoffset < 0)
         SERIAL_ECHOPGM(" & Below");
       else if (zprobe_zoffset > 0)
         SERIAL_ECHOPGM(" & Above");
       else
         SERIAL_ECHOPGM(" & Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
     #endif
 
     #if HAS_ABL

commit 67a3c5a16ad0c202352ef19b5993ac0c7f52862d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 18 11:34:52 2018 -0500

    Alternative info screen (Prusa-style) (#12132)
    
    * Fix Z value display
    * Add HAS_PRINT_PROGRESS
    * Alternative Info Screen option
    * Add LCD_INFO_SCREEN_STYLE to example configs

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index e143cc9709..e10d8f6a58 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -224,39 +224,40 @@ void safe_delay(millis_t ms) {
     conv[4] = '.';
     conv[5] = DIGIMOD(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return conv;
   }
 
   // Convert signed float to space-padded string with -_23.4_ format
   char* ftostr52sp(const float &f) {
     long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
     uint8_t dig;
-    conv[1] = MINUSOR(i, RJDIGIT(i, 10000));
+    conv[0] = MINUSOR(i, ' ');
+    conv[1] = RJDIGIT(i, 10000);
     conv[2] = RJDIGIT(i, 1000);
     conv[3] = DIGIMOD(i, 100);
 
     if ((dig = i % 10)) {          // second digit after decimal point?
       conv[4] = '.';
       conv[5] = DIGIMOD(i, 10);
       conv[6] = DIGIT(dig);
     }
     else {
       if ((dig = (i / 10) % 10)) { // first digit after decimal point?
         conv[4] = '.';
         conv[5] = DIGIT(dig);
       }
       else                          // nothing after decimal point
         conv[4] = conv[5] = ' ';
       conv[6] = ' ';
     }
-    return &conv[1];
+    return conv;
   }
 
 #endif // ULTRA_LCD
 
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
   #include "../feature/bedlevel/bedlevel.h"

commit f98f4ac7eaab5f509da5cd94420821f23fe7aeea
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Tue Oct 16 15:58:29 2018 -0600

    Fix and improve EXTENSIBLE_UI (#12117)
    
    - Add methods to access print counter data
    - Clean up some inconsistent method names
    - Clear lcd status after filament change
    - Implement `lcd_reset_status` so it works like UltraLCD

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index ba374f7593..e143cc9709 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -41,21 +41,21 @@ void safe_delay(millis_t ms) {
     uint8_t *ptr = (uint8_t *)data;
     while (cnt--) {
       *crc = (uint16_t)(*crc ^ (uint16_t)(((uint16_t)*ptr++) << 8));
       for (uint8_t i = 0; i < 8; i++)
         *crc = (uint16_t)((*crc & 0x8000) ? ((uint16_t)(*crc << 1) ^ 0x1021) : (*crc << 1));
     }
   }
 
 #endif // EEPROM_SETTINGS
 
-#if ENABLED(ULTRA_LCD) || ENABLED(DEBUG_LEVELING_FEATURE)
+#if ENABLED(ULTRA_LCD) || ENABLED(DEBUG_LEVELING_FEATURE) || ENABLED(EXTENSIBLE_UI)
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 
   // Convert unsigned int to string 123 format
   char* i8tostr3(const uint8_t i) {

commit e2b8fc4f176ea3619096255fb7183d5ef9f701a5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Aug 24 21:03:21 2018 -0500

    Reduce some debug strings

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 7ec3fde5e8..ba374f7593 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -255,51 +255,52 @@ void safe_delay(millis_t ms) {
 #endif // ULTRA_LCD
 
 #if ENABLED(DEBUG_LEVELING_FEATURE)
 
   #include "../module/probe.h"
   #include "../module/motion.h"
   #include "../module/stepper.h"
   #include "../feature/bedlevel/bedlevel.h"
 
   void log_machine_info() {
-    SERIAL_ECHOPGM("Machine Type: ");
-    #if ENABLED(DELTA)
-      SERIAL_ECHOLNPGM("Delta");
-    #elif IS_SCARA
-      SERIAL_ECHOLNPGM("SCARA");
-    #elif IS_CORE
-      SERIAL_ECHOLNPGM("Core");
-    #else
-      SERIAL_ECHOLNPGM("Cartesian");
-    #endif
-
-    SERIAL_ECHOPGM("Probe: ");
-    #if ENABLED(PROBE_MANUALLY)
-      SERIAL_ECHOLNPGM("PROBE_MANUALLY");
-    #elif ENABLED(FIX_MOUNTED_PROBE)
-      SERIAL_ECHOLNPGM("FIX_MOUNTED_PROBE");
-    #elif ENABLED(BLTOUCH)
-      SERIAL_ECHOLNPGM("BLTOUCH");
-    #elif HAS_Z_SERVO_PROBE
-      SERIAL_ECHOLNPGM("SERVO PROBE");
-    #elif ENABLED(Z_PROBE_SLED)
-      SERIAL_ECHOLNPGM("Z_PROBE_SLED");
-    #elif ENABLED(Z_PROBE_ALLEN_KEY)
-      SERIAL_ECHOLNPGM("Z_PROBE_ALLEN_KEY");
-    #else
-      SERIAL_ECHOLNPGM("NONE");
-    #endif
+    SERIAL_ECHOLNPGM("Machine Type: "
+      #if ENABLED(DELTA)
+        "Delta"
+      #elif IS_SCARA
+        "SCARA"
+      #elif IS_CORE
+        "Core"
+      #else
+        "Cartesian"
+      #endif
+    );
+
+    SERIAL_ECHOLNPGM("Probe: "
+      #if ENABLED(PROBE_MANUALLY)
+        "PROBE_MANUALLY"
+      #elif ENABLED(FIX_MOUNTED_PROBE)
+        "FIX_MOUNTED_PROBE"
+      #elif ENABLED(BLTOUCH)
+        "BLTOUCH"
+      #elif HAS_Z_SERVO_PROBE
+        "SERVO PROBE"
+      #elif ENABLED(Z_PROBE_SLED)
+        "Z_PROBE_SLED"
+      #elif ENABLED(Z_PROBE_ALLEN_KEY)
+        "Z_PROBE_ALLEN_KEY"
+      #else
+        "NONE"
+      #endif
+    );
 
     #if HAS_BED_PROBE
-      SERIAL_ECHOPAIR("Probe Offset X:", X_PROBE_OFFSET_FROM_EXTRUDER);
-      SERIAL_ECHOPAIR(" Y:", Y_PROBE_OFFSET_FROM_EXTRUDER);
+      SERIAL_ECHOPGM("Probe Offset X:" STRINGIFY(X_PROBE_OFFSET_FROM_EXTRUDER) " Y:" STRINGIFY(Y_PROBE_OFFSET_FROM_EXTRUDER));
       SERIAL_ECHOPAIR(" Z:", zprobe_zoffset);
       #if X_PROBE_OFFSET_FROM_EXTRUDER > 0
         SERIAL_ECHOPGM(" (Right");
       #elif X_PROBE_OFFSET_FROM_EXTRUDER < 0
         SERIAL_ECHOPGM(" (Left");
       #elif Y_PROBE_OFFSET_FROM_EXTRUDER != 0
         SERIAL_ECHOPGM(" (Middle");
       #else
         SERIAL_ECHOPGM(" (Aligned With");
       #endif
@@ -321,30 +322,31 @@ void safe_delay(millis_t ms) {
       if (zprobe_zoffset < 0)
         SERIAL_ECHOPGM(" & Below");
       else if (zprobe_zoffset > 0)
         SERIAL_ECHOPGM(" & Above");
       else
         SERIAL_ECHOPGM(" & Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");
     #endif
 
     #if HAS_ABL
-      SERIAL_ECHOPGM("Auto Bed Leveling: ");
-      #if ENABLED(AUTO_BED_LEVELING_LINEAR)
-        SERIAL_ECHOPGM("LINEAR");
-      #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
-        SERIAL_ECHOPGM("BILINEAR");
-      #elif ENABLED(AUTO_BED_LEVELING_3POINT)
-        SERIAL_ECHOPGM("3POINT");
-      #elif ENABLED(AUTO_BED_LEVELING_UBL)
-        SERIAL_ECHOPGM("UBL");
-      #endif
+      SERIAL_ECHOLNPGM("Auto Bed Leveling: "
+        #if ENABLED(AUTO_BED_LEVELING_LINEAR)
+          "LINEAR"
+        #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
+          "BILINEAR"
+        #elif ENABLED(AUTO_BED_LEVELING_3POINT)
+          "3POINT"
+        #elif ENABLED(AUTO_BED_LEVELING_UBL)
+          "UBL"
+        #endif
+      );
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           const float diff[XYZ] = {
             planner.get_axis_position_mm(X_AXIS) - current_position[X_AXIS],
             planner.get_axis_position_mm(Y_AXIS) - current_position[Y_AXIS],

commit d3c473002a5168429e4310463e5fce80283fc97a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 29 21:55:53 2018 -0500

    For SCARA probe Y offset is proximal/distal

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index db1c50725e..7ec3fde5e8 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -297,23 +297,31 @@ void safe_delay(millis_t ms) {
       #if X_PROBE_OFFSET_FROM_EXTRUDER > 0
         SERIAL_ECHOPGM(" (Right");
       #elif X_PROBE_OFFSET_FROM_EXTRUDER < 0
         SERIAL_ECHOPGM(" (Left");
       #elif Y_PROBE_OFFSET_FROM_EXTRUDER != 0
         SERIAL_ECHOPGM(" (Middle");
       #else
         SERIAL_ECHOPGM(" (Aligned With");
       #endif
       #if Y_PROBE_OFFSET_FROM_EXTRUDER > 0
-        SERIAL_ECHOPGM("-Back");
+        #if IS_SCARA
+          SERIAL_ECHOPGM("-Distal");
+        #else
+          SERIAL_ECHOPGM("-Back");
+        #endif
       #elif Y_PROBE_OFFSET_FROM_EXTRUDER < 0
-        SERIAL_ECHOPGM("-Front");
+        #if IS_SCARA
+          SERIAL_ECHOPGM("-Proximal");
+        #else
+          SERIAL_ECHOPGM("-Front");
+        #endif
       #elif X_PROBE_OFFSET_FROM_EXTRUDER != 0
         SERIAL_ECHOPGM("-Center");
       #endif
       if (zprobe_zoffset < 0)
         SERIAL_ECHOPGM(" & Below");
       else if (zprobe_zoffset > 0)
         SERIAL_ECHOPGM(" & Above");
       else
         SERIAL_ECHOPGM(" & Same Z as");
       SERIAL_ECHOLNPGM(" Nozzle)");

commit 3bb950c69a181dd01922da040fbaaae021e1ac84
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 22 00:43:15 2018 -0500

    Fix DEBUG_LEVELING_FEATURE for MBL
    
    As noted in #10777

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 89d22caeb2..db1c50725e 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -371,21 +371,25 @@ void safe_delay(millis_t ms) {
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
-        SERIAL_ECHOPAIR("MBL Adjustment Z", ftostr43sign(mbl.get_z(current_position[X_AXIS], current_position[Y_AXIS], 1.0), '+'));
+        SERIAL_ECHOPAIR("MBL Adjustment Z", ftostr43sign(mbl.get_z(current_position[X_AXIS], current_position[Y_AXIS]
+          #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
+            , 1.0
+          #endif
+        ), '+'));
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height) {
             SERIAL_ECHOPAIR(" (", ftostr43sign(
               mbl.get_z(current_position[X_AXIS], current_position[Y_AXIS], planner.fade_scaling_factor_for_z(current_position[Z_AXIS])), '+'
             ));
             SERIAL_CHAR(')');
           }
         #endif
       }
       else

commit 8f8c6a9bc4f1c8b2d927e74339a48217d9b48ec7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 12 09:59:11 2018 -0500

    Move get_axis_position_mm to Planner (#10718)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 16bc78d92f..89d22caeb2 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -331,23 +331,23 @@ void safe_delay(millis_t ms) {
         SERIAL_ECHOPGM("UBL");
       #endif
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
           if (planner.z_fade_height)
             SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
         #endif
         #if ABL_PLANAR
           const float diff[XYZ] = {
-            stepper.get_axis_position_mm(X_AXIS) - current_position[X_AXIS],
-            stepper.get_axis_position_mm(Y_AXIS) - current_position[Y_AXIS],
-            stepper.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]
+            planner.get_axis_position_mm(X_AXIS) - current_position[X_AXIS],
+            planner.get_axis_position_mm(Y_AXIS) - current_position[Y_AXIS],
+            planner.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]
           };
           SERIAL_ECHOPGM("ABL Adjustment X");
           if (diff[X_AXIS] > 0) SERIAL_CHAR('+');
           SERIAL_ECHO(diff[X_AXIS]);
           SERIAL_ECHOPGM(" Y");
           if (diff[Y_AXIS] > 0) SERIAL_CHAR('+');
           SERIAL_ECHO(diff[Y_AXIS]);
           SERIAL_ECHOPGM(" Z");
           if (diff[Z_AXIS] > 0) SERIAL_CHAR('+');
           SERIAL_ECHO(diff[Z_AXIS]);

commit a90d99c27c0a52f7232ce23e2f250798c53e1b34
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 1 07:08:47 2018 -0500

    Rename float32 => float52, etc.

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index e5f9d841a5..16bc78d92f 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -118,21 +118,21 @@ void safe_delay(millis_t ms) {
   char* ftostr12ns(const float &f) {
     const long i = ((f < 0 ? -f : f) * 1000 + 5) / 10;
     conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[3];
   }
 
   // Convert signed float to fixed-length string with 023.45 / -23.45 format
-  char* ftostr32(const float &f) {
+  char* ftostr52(const float &f) {
     long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
     conv[1] = MINUSOR(i, DIGIMOD(i, 10000));
     conv[2] = DIGIMOD(i, 1000);
     conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(i, 10);
     conv[6] = DIGIMOD(i, 1);
     return &conv[1];
   }
 

commit a73cece36032340c471a7b7b6e22b53d3caf6265
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Apr 30 03:40:50 2018 -0500

    Fix utility.cpp for DEBUG_LEVELING_FEATURE
    
    As mentioned in https://github.com/MarlinFirmware/Marlin/issues/9429#issuecomment-385305597
    
    Co-Authored-By: Jack Bradach <jack@bradach.net>

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index aa5ddfd9b6..e5f9d841a5 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -41,21 +41,21 @@ void safe_delay(millis_t ms) {
     uint8_t *ptr = (uint8_t *)data;
     while (cnt--) {
       *crc = (uint16_t)(*crc ^ (uint16_t)(((uint16_t)*ptr++) << 8));
       for (uint8_t i = 0; i < 8; i++)
         *crc = (uint16_t)((*crc & 0x8000) ? ((uint16_t)(*crc << 1) ^ 0x1021) : (*crc << 1));
     }
   }
 
 #endif // EEPROM_SETTINGS
 
-#if ENABLED(ULTRA_LCD)
+#if ENABLED(ULTRA_LCD) || ENABLED(DEBUG_LEVELING_FEATURE)
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 
   // Convert unsigned int to string 123 format
   char* i8tostr3(const uint8_t i) {

commit 63e4afc9105301ed33c8e2c85e02893da0456b1c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 29 19:14:18 2018 -0500

    Do rounding in integer (instead of FIXFLOAT)
    
    Co-Authored-By: Bob-the-Kuhn <bob-the-kuhn@users.noreply.github.com>

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 6043123a1e..aa5ddfd9b6 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -34,224 +34,221 @@ void safe_delay(millis_t ms) {
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
 
 #if ENABLED(EEPROM_SETTINGS)
 
   void crc16(uint16_t *crc, const void * const data, uint16_t cnt) {
     uint8_t *ptr = (uint8_t *)data;
     while (cnt--) {
       *crc = (uint16_t)(*crc ^ (uint16_t)(((uint16_t)*ptr++) << 8));
-      for (uint8_t x = 0; x < 8; x++)
+      for (uint8_t i = 0; i < 8; i++)
         *crc = (uint16_t)((*crc & 0x8000) ? ((uint16_t)(*crc << 1) ^ 0x1021) : (*crc << 1));
     }
   }
 
 #endif // EEPROM_SETTINGS
 
 #if ENABLED(ULTRA_LCD)
 
   char conv[8] = { 0 };
 
   #define DIGIT(n) ('0' + (n))
   #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
   #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
   #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
 
   // Convert unsigned int to string 123 format
-  char* i8tostr3(const uint8_t xx) {
-    conv[4] = RJDIGIT(xx, 100);
-    conv[5] = RJDIGIT(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
+  char* i8tostr3(const uint8_t i) {
+    conv[4] = RJDIGIT(i, 100);
+    conv[5] = RJDIGIT(i, 10);
+    conv[6] = DIGIMOD(i, 1);
     return &conv[4];
   }
 
   // Convert signed int to rj string with 123 or -12 format
-  char* itostr3(const int x) {
-    int xx = x;
-    conv[4] = MINUSOR(xx, RJDIGIT(xx, 100));
-    conv[5] = RJDIGIT(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
+  char* itostr3(int i) {
+    conv[4] = MINUSOR(i, RJDIGIT(i, 100));
+    conv[5] = RJDIGIT(i, 10);
+    conv[6] = DIGIMOD(i, 1);
     return &conv[4];
   }
 
   // Convert unsigned int to lj string with 123 format
-  char* itostr3left(const int xx) {
+  char* itostr3left(const int i) {
     char *str = &conv[6];
-    *str = DIGIMOD(xx, 1);
-    if (xx >= 10) {
-      *(--str) = DIGIMOD(xx, 10);
-      if (xx >= 100)
-        *(--str) = DIGIMOD(xx, 100);
+    *str = DIGIMOD(i, 1);
+    if (i >= 10) {
+      *(--str) = DIGIMOD(i, 10);
+      if (i >= 100)
+        *(--str) = DIGIMOD(i, 100);
     }
     return str;
   }
 
   // Convert signed int to rj string with 1234, _123, -123, _-12, or __-1 format
-  char* itostr4sign(const int x) {
-    const bool neg = x < 0;
-    const int xx = neg ? -x : x;
-    if (x >= 1000) {
-      conv[3] = DIGIMOD(xx, 1000);
-      conv[4] = DIGIMOD(xx, 100);
-      conv[5] = DIGIMOD(xx, 10);
+  char* itostr4sign(const int i) {
+    const bool neg = i < 0;
+    const int ii = neg ? -i : i;
+    if (i >= 1000) {
+      conv[3] = DIGIMOD(ii, 1000);
+      conv[4] = DIGIMOD(ii, 100);
+      conv[5] = DIGIMOD(ii, 10);
+    }
+    else if (ii >= 100) {
+      conv[3] = neg ? '-' : ' ';
+      conv[4] = DIGIMOD(ii, 100);
+      conv[5] = DIGIMOD(ii, 10);
     }
     else {
-      if (xx >= 100) {
-        conv[3] = neg ? '-' : ' ';
-        conv[4] = DIGIMOD(xx, 100);
-        conv[5] = DIGIMOD(xx, 10);
+      conv[3] = ' ';
+      conv[4] = ' ';
+      if (ii >= 10) {
+        conv[4] = neg ? '-' : ' ';
+        conv[5] = DIGIMOD(ii, 10);
       }
       else {
-        conv[3] = ' ';
-        conv[4] = ' ';
-        if (xx >= 10) {
-          conv[4] = neg ? '-' : ' ';
-          conv[5] = DIGIMOD(xx, 10);
-        }
-        else {
-          conv[5] = neg ? '-' : ' ';
-        }
+        conv[5] = neg ? '-' : ' ';
       }
     }
-    conv[6] = DIGIMOD(xx, 1);
+    conv[6] = DIGIMOD(ii, 1);
     return &conv[3];
   }
 
   // Convert unsigned float to string with 1.23 format
-  char* ftostr12ns(const float &x) {
-    const long xx = ((x < 0 ? -x : x) + 0.001) * 100;
-    conv[3] = DIGIMOD(xx, 100);
+  char* ftostr12ns(const float &f) {
+    const long i = ((f < 0 ? -f : f) * 1000 + 5) / 10;
+    conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
-    conv[5] = DIGIMOD(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
+    conv[5] = DIGIMOD(i, 10);
+    conv[6] = DIGIMOD(i, 1);
     return &conv[3];
   }
 
   // Convert signed float to fixed-length string with 023.45 / -23.45 format
-  char* ftostr32(const float &x) {
-    long xx = FIXFLOAT(x) * 100;
-    conv[1] = MINUSOR(xx, DIGIMOD(xx, 10000));
-    conv[2] = DIGIMOD(xx, 1000);
-    conv[3] = DIGIMOD(xx, 100);
+  char* ftostr32(const float &f) {
+    long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
+    conv[1] = MINUSOR(i, DIGIMOD(i, 10000));
+    conv[2] = DIGIMOD(i, 1000);
+    conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
-    conv[5] = DIGIMOD(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
+    conv[5] = DIGIMOD(i, 10);
+    conv[6] = DIGIMOD(i, 1);
     return &conv[1];
   }
 
   #if ENABLED(LCD_DECIMAL_SMALL_XY)
 
     // Convert float to rj string with 1234, _123, -123, _-12, 12.3, _1.2, or -1.2 format
-    char* ftostr4sign(const float &fx) {
-      const int x = FIXFLOAT(fx) * 10;
-      if (!WITHIN(x, -99, 999)) return itostr4sign((int)fx);
-      const bool neg = x < 0;
-      const int xx = neg ? -x : x;
-      conv[3] = neg ? '-' : (xx >= 100 ? DIGIMOD(xx, 100) : ' ');
-      conv[4] = DIGIMOD(xx, 10);
+    char* ftostr4sign(const float &f) {
+      const int i = (f * 100 + (f < 0 ? -5: 5)) / 10;
+      if (!WITHIN(i, -99, 999)) return itostr4sign((int)f);
+      const bool neg = i < 0;
+      const int ii = neg ? -i : i;
+      conv[3] = neg ? '-' : (ii >= 100 ? DIGIMOD(ii, 100) : ' ');
+      conv[4] = DIGIMOD(ii, 10);
       conv[5] = '.';
-      conv[6] = DIGIMOD(xx, 1);
+      conv[6] = DIGIMOD(ii, 1);
       return &conv[3];
     }
 
   #endif // LCD_DECIMAL_SMALL_XY
 
   // Convert float to fixed-length string with +123.4 / -123.4 format
-  char* ftostr41sign(const float &x) {
-    int xx = FIXFLOAT(x) * 10;
-    conv[1] = MINUSOR(xx, '+');
-    conv[2] = DIGIMOD(xx, 1000);
-    conv[3] = DIGIMOD(xx, 100);
-    conv[4] = DIGIMOD(xx, 10);
+  char* ftostr41sign(const float &f) {
+    int i = (f * 100 + (f < 0 ? -5: 5)) / 10;
+    conv[1] = MINUSOR(i, '+');
+    conv[2] = DIGIMOD(i, 1000);
+    conv[3] = DIGIMOD(i, 100);
+    conv[4] = DIGIMOD(i, 10);
     conv[5] = '.';
-    conv[6] = DIGIMOD(xx, 1);
+    conv[6] = DIGIMOD(i, 1);
     return &conv[1];
   }
 
   // Convert signed float to string (6 digit) with -1.234 / _0.000 / +1.234 format
-  char* ftostr43sign(const float &x, char plus/*=' '*/) {
-    long xx = FIXFLOAT(x) * 1000;
-    conv[1] = xx ? MINUSOR(xx, plus) : ' ';
-    conv[2] = DIGIMOD(xx, 1000);
+  char* ftostr43sign(const float &f, char plus/*=' '*/) {
+    long i = (f * 10000 + (f < 0 ? -5: 5)) / 10;
+    conv[1] = i ? MINUSOR(i, plus) : ' ';
+    conv[2] = DIGIMOD(i, 1000);
     conv[3] = '.';
-    conv[4] = DIGIMOD(xx, 100);
-    conv[5] = DIGIMOD(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
+    conv[4] = DIGIMOD(i, 100);
+    conv[5] = DIGIMOD(i, 10);
+    conv[6] = DIGIMOD(i, 1);
     return &conv[1];
   }
 
   // Convert unsigned float to rj string with 12345 format
-  char* ftostr5rj(const float &x) {
-    const long xx = x < 0 ? -x : x;
-    conv[2] = RJDIGIT(xx, 10000);
-    conv[3] = RJDIGIT(xx, 1000);
-    conv[4] = RJDIGIT(xx, 100);
-    conv[5] = RJDIGIT(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
+  char* ftostr5rj(const float &f) {
+    const long i = ((f < 0 ? -f : f) * 10 + 5) / 10;
+    conv[2] = RJDIGIT(i, 10000);
+    conv[3] = RJDIGIT(i, 1000);
+    conv[4] = RJDIGIT(i, 100);
+    conv[5] = RJDIGIT(i, 10);
+    conv[6] = DIGIMOD(i, 1);
     return &conv[2];
   }
 
   // Convert signed float to string with +1234.5 format
-  char* ftostr51sign(const float &x) {
-    long xx = FIXFLOAT(x) * 10;
-    conv[0] = MINUSOR(xx, '+');
-    conv[1] = DIGIMOD(xx, 10000);
-    conv[2] = DIGIMOD(xx, 1000);
-    conv[3] = DIGIMOD(xx, 100);
-    conv[4] = DIGIMOD(xx, 10);
+  char* ftostr51sign(const float &f) {
+    long i = (f * 100 + (f < 0 ? -5: 5)) / 10;
+    conv[0] = MINUSOR(i, '+');
+    conv[1] = DIGIMOD(i, 10000);
+    conv[2] = DIGIMOD(i, 1000);
+    conv[3] = DIGIMOD(i, 100);
+    conv[4] = DIGIMOD(i, 10);
     conv[5] = '.';
-    conv[6] = DIGIMOD(xx, 1);
+    conv[6] = DIGIMOD(i, 1);
     return conv;
   }
 
   // Convert signed float to string with +123.45 format
-  char* ftostr52sign(const float &x) {
-    long xx = FIXFLOAT(x) * 100;
-    conv[0] = MINUSOR(xx, '+');
-    conv[1] = DIGIMOD(xx, 10000);
-    conv[2] = DIGIMOD(xx, 1000);
-    conv[3] = DIGIMOD(xx, 100);
+  char* ftostr52sign(const float &f) {
+    long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
+    conv[0] = MINUSOR(i, '+');
+    conv[1] = DIGIMOD(i, 10000);
+    conv[2] = DIGIMOD(i, 1000);
+    conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
-    conv[5] = DIGIMOD(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
+    conv[5] = DIGIMOD(i, 10);
+    conv[6] = DIGIMOD(i, 1);
     return conv;
   }
 
   // Convert unsigned float to string with 1234.56 format omitting trailing zeros
-  char* ftostr62rj(const float &x) {
-    const long xx = ((x < 0 ? -x : x) + 0.001) * 100;
-    conv[0] = RJDIGIT(xx, 100000);
-    conv[1] = RJDIGIT(xx, 10000);
-    conv[2] = RJDIGIT(xx, 1000);
-    conv[3] = DIGIMOD(xx, 100);
+  char* ftostr62rj(const float &f) {
+    const long i = ((f < 0 ? -f : f) * 1000 + 5) / 10;
+    conv[0] = RJDIGIT(i, 100000);
+    conv[1] = RJDIGIT(i, 10000);
+    conv[2] = RJDIGIT(i, 1000);
+    conv[3] = DIGIMOD(i, 100);
     conv[4] = '.';
-    conv[5] = DIGIMOD(xx, 10);
-    conv[6] = DIGIMOD(xx, 1);
+    conv[5] = DIGIMOD(i, 10);
+    conv[6] = DIGIMOD(i, 1);
     return conv;
   }
 
   // Convert signed float to space-padded string with -_23.4_ format
-  char* ftostr52sp(const float &x) {
-    long xx = FIXFLOAT(x) * 100;
+  char* ftostr52sp(const float &f) {
+    long i = (f * 1000 + (f < 0 ? -5: 5)) / 10;
     uint8_t dig;
-    conv[1] = MINUSOR(xx, RJDIGIT(xx, 10000));
-    conv[2] = RJDIGIT(xx, 1000);
-    conv[3] = DIGIMOD(xx, 100);
+    conv[1] = MINUSOR(i, RJDIGIT(i, 10000));
+    conv[2] = RJDIGIT(i, 1000);
+    conv[3] = DIGIMOD(i, 100);
 
-    if ((dig = xx % 10)) {          // second digit after decimal point?
+    if ((dig = i % 10)) {          // second digit after decimal point?
       conv[4] = '.';
-      conv[5] = DIGIMOD(xx, 10);
+      conv[5] = DIGIMOD(i, 10);
       conv[6] = DIGIT(dig);
     }
     else {
-      if ((dig = (xx / 10) % 10)) { // first digit after decimal point?
+      if ((dig = (i / 10) % 10)) { // first digit after decimal point?
         conv[4] = '.';
         conv[5] = DIGIT(dig);
       }
       else                          // nothing after decimal point
         conv[4] = conv[5] = ' ';
       conv[6] = ' ';
     }
     return &conv[1];
   }
 

commit 9e0d99c0c61686b55347678633a44ff7ce680158
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 29 00:51:36 2018 -0500

    Round all floats in string conversion functions (#10566)

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index d8873173ef..6043123a1e 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -80,21 +80,21 @@ void safe_delay(millis_t ms) {
     *str = DIGIMOD(xx, 1);
     if (xx >= 10) {
       *(--str) = DIGIMOD(xx, 10);
       if (xx >= 100)
         *(--str) = DIGIMOD(xx, 100);
     }
     return str;
   }
 
   // Convert signed int to rj string with 1234, _123, -123, _-12, or __-1 format
-  char *itostr4sign(const int x) {
+  char* itostr4sign(const int x) {
     const bool neg = x < 0;
     const int xx = neg ? -x : x;
     if (x >= 1000) {
       conv[3] = DIGIMOD(xx, 1000);
       conv[4] = DIGIMOD(xx, 100);
       conv[5] = DIGIMOD(xx, 10);
     }
     else {
       if (xx >= 100) {
         conv[3] = neg ? '-' : ' ';
@@ -112,72 +112,72 @@ void safe_delay(millis_t ms) {
           conv[5] = neg ? '-' : ' ';
         }
       }
     }
     conv[6] = DIGIMOD(xx, 1);
     return &conv[3];
   }
 
   // Convert unsigned float to string with 1.23 format
   char* ftostr12ns(const float &x) {
-    const long xx = (x < 0 ? -x : x) * 100;
+    const long xx = ((x < 0 ? -x : x) + 0.001) * 100;
     conv[3] = DIGIMOD(xx, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(xx, 10);
     conv[6] = DIGIMOD(xx, 1);
     return &conv[3];
   }
 
   // Convert signed float to fixed-length string with 023.45 / -23.45 format
-  char *ftostr32(const float &x) {
-    long xx = x * 100;
+  char* ftostr32(const float &x) {
+    long xx = FIXFLOAT(x) * 100;
     conv[1] = MINUSOR(xx, DIGIMOD(xx, 10000));
     conv[2] = DIGIMOD(xx, 1000);
     conv[3] = DIGIMOD(xx, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(xx, 10);
     conv[6] = DIGIMOD(xx, 1);
     return &conv[1];
   }
 
   #if ENABLED(LCD_DECIMAL_SMALL_XY)
 
     // Convert float to rj string with 1234, _123, -123, _-12, 12.3, _1.2, or -1.2 format
-    char *ftostr4sign(const float &fx) {
-      const int x = fx * 10;
+    char* ftostr4sign(const float &fx) {
+      const int x = FIXFLOAT(fx) * 10;
       if (!WITHIN(x, -99, 999)) return itostr4sign((int)fx);
       const bool neg = x < 0;
       const int xx = neg ? -x : x;
       conv[3] = neg ? '-' : (xx >= 100 ? DIGIMOD(xx, 100) : ' ');
       conv[4] = DIGIMOD(xx, 10);
       conv[5] = '.';
       conv[6] = DIGIMOD(xx, 1);
       return &conv[3];
     }
 
   #endif // LCD_DECIMAL_SMALL_XY
 
   // Convert float to fixed-length string with +123.4 / -123.4 format
   char* ftostr41sign(const float &x) {
-    int xx = x * 10;
+    int xx = FIXFLOAT(x) * 10;
     conv[1] = MINUSOR(xx, '+');
     conv[2] = DIGIMOD(xx, 1000);
     conv[3] = DIGIMOD(xx, 100);
     conv[4] = DIGIMOD(xx, 10);
     conv[5] = '.';
     conv[6] = DIGIMOD(xx, 1);
     return &conv[1];
   }
 
   // Convert signed float to string (6 digit) with -1.234 / _0.000 / +1.234 format
   char* ftostr43sign(const float &x, char plus/*=' '*/) {
-    long xx = x * 1000;
+    long xx = FIXFLOAT(x) * 1000;
     conv[1] = xx ? MINUSOR(xx, plus) : ' ';
     conv[2] = DIGIMOD(xx, 1000);
     conv[3] = '.';
     conv[4] = DIGIMOD(xx, 100);
     conv[5] = DIGIMOD(xx, 10);
     conv[6] = DIGIMOD(xx, 1);
     return &conv[1];
   }
 
   // Convert unsigned float to rj string with 12345 format
@@ -186,60 +186,60 @@ void safe_delay(millis_t ms) {
     conv[2] = RJDIGIT(xx, 10000);
     conv[3] = RJDIGIT(xx, 1000);
     conv[4] = RJDIGIT(xx, 100);
     conv[5] = RJDIGIT(xx, 10);
     conv[6] = DIGIMOD(xx, 1);
     return &conv[2];
   }
 
   // Convert signed float to string with +1234.5 format
   char* ftostr51sign(const float &x) {
-    long xx = x * 10;
+    long xx = FIXFLOAT(x) * 10;
     conv[0] = MINUSOR(xx, '+');
     conv[1] = DIGIMOD(xx, 10000);
     conv[2] = DIGIMOD(xx, 1000);
     conv[3] = DIGIMOD(xx, 100);
     conv[4] = DIGIMOD(xx, 10);
     conv[5] = '.';
     conv[6] = DIGIMOD(xx, 1);
     return conv;
   }
 
   // Convert signed float to string with +123.45 format
   char* ftostr52sign(const float &x) {
-    long xx = x * 100;
+    long xx = FIXFLOAT(x) * 100;
     conv[0] = MINUSOR(xx, '+');
     conv[1] = DIGIMOD(xx, 10000);
     conv[2] = DIGIMOD(xx, 1000);
     conv[3] = DIGIMOD(xx, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(xx, 10);
     conv[6] = DIGIMOD(xx, 1);
     return conv;
   }
 
   // Convert unsigned float to string with 1234.56 format omitting trailing zeros
   char* ftostr62rj(const float &x) {
-    const long xx = (x < 0 ? -x : x) * 100;
+    const long xx = ((x < 0 ? -x : x) + 0.001) * 100;
     conv[0] = RJDIGIT(xx, 100000);
     conv[1] = RJDIGIT(xx, 10000);
     conv[2] = RJDIGIT(xx, 1000);
     conv[3] = DIGIMOD(xx, 100);
     conv[4] = '.';
     conv[5] = DIGIMOD(xx, 10);
     conv[6] = DIGIMOD(xx, 1);
     return conv;
   }
 
   // Convert signed float to space-padded string with -_23.4_ format
   char* ftostr52sp(const float &x) {
-    long xx = x * 100;
+    long xx = FIXFLOAT(x) * 100;
     uint8_t dig;
     conv[1] = MINUSOR(xx, RJDIGIT(xx, 10000));
     conv[2] = RJDIGIT(xx, 1000);
     conv[3] = DIGIMOD(xx, 100);
 
     if ((dig = xx % 10)) {          // second digit after decimal point?
       conv[4] = '.';
       conv[5] = DIGIMOD(xx, 10);
       conv[6] = DIGIT(dig);
     }

commit adcb87f0db47672c28cfec9fda3354adac81fa99
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 1 23:54:12 2018 -0500

    Z Endstop Servo => Z Probe Servo

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 3a566a16e7..d8873173ef 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -276,21 +276,21 @@ void safe_delay(millis_t ms) {
       SERIAL_ECHOLNPGM("Cartesian");
     #endif
 
     SERIAL_ECHOPGM("Probe: ");
     #if ENABLED(PROBE_MANUALLY)
       SERIAL_ECHOLNPGM("PROBE_MANUALLY");
     #elif ENABLED(FIX_MOUNTED_PROBE)
       SERIAL_ECHOLNPGM("FIX_MOUNTED_PROBE");
     #elif ENABLED(BLTOUCH)
       SERIAL_ECHOLNPGM("BLTOUCH");
-    #elif HAS_Z_SERVO_ENDSTOP
+    #elif HAS_Z_SERVO_PROBE
       SERIAL_ECHOLNPGM("SERVO PROBE");
     #elif ENABLED(Z_PROBE_SLED)
       SERIAL_ECHOLNPGM("Z_PROBE_SLED");
     #elif ENABLED(Z_PROBE_ALLEN_KEY)
       SERIAL_ECHOLNPGM("Z_PROBE_ALLEN_KEY");
     #else
       SERIAL_ECHOLNPGM("NONE");
     #endif
 
     #if HAS_BED_PROBE

commit 696f8eb4c6c100170e6e749c65f6ce0204b412c3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 23 11:43:38 2018 -0600

    Include Z Fade in log_machine_info

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index d44cd1ab9b..3a566a16e7 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -328,54 +328,75 @@ void safe_delay(millis_t ms) {
         SERIAL_ECHOPGM("LINEAR");
       #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
         SERIAL_ECHOPGM("BILINEAR");
       #elif ENABLED(AUTO_BED_LEVELING_3POINT)
         SERIAL_ECHOPGM("3POINT");
       #elif ENABLED(AUTO_BED_LEVELING_UBL)
         SERIAL_ECHOPGM("UBL");
       #endif
       if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
+        #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
+          if (planner.z_fade_height)
+            SERIAL_ECHOLNPAIR("Z Fade: ", planner.z_fade_height);
+        #endif
         #if ABL_PLANAR
           const float diff[XYZ] = {
             stepper.get_axis_position_mm(X_AXIS) - current_position[X_AXIS],
             stepper.get_axis_position_mm(Y_AXIS) - current_position[Y_AXIS],
             stepper.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]
           };
           SERIAL_ECHOPGM("ABL Adjustment X");
           if (diff[X_AXIS] > 0) SERIAL_CHAR('+');
           SERIAL_ECHO(diff[X_AXIS]);
           SERIAL_ECHOPGM(" Y");
           if (diff[Y_AXIS] > 0) SERIAL_CHAR('+');
           SERIAL_ECHO(diff[Y_AXIS]);
           SERIAL_ECHOPGM(" Z");
           if (diff[Z_AXIS] > 0) SERIAL_CHAR('+');
           SERIAL_ECHO(diff[Z_AXIS]);
-        #elif ENABLED(AUTO_BED_LEVELING_UBL)
-          SERIAL_ECHOPAIR("UBL Adjustment Z", stepper.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]);
-        #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
-          SERIAL_ECHOPAIR("ABL Adjustment Z", bilinear_z_offset(current_position));
+        #else
+          #if ENABLED(AUTO_BED_LEVELING_UBL)
+            SERIAL_ECHOPGM("UBL Adjustment Z");
+            const float rz = ubl.get_z_correction(current_position[X_AXIS], current_position[Y_AXIS]);
+          #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
+            SERIAL_ECHOPGM("ABL Adjustment Z");
+            const float rz = bilinear_z_offset(current_position);
+          #endif
+          SERIAL_ECHO(ftostr43sign(rz, '+'));
+          #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
+            if (planner.z_fade_height) {
+              SERIAL_ECHOPAIR(" (", ftostr43sign(rz * planner.fade_scaling_factor_for_z(current_position[Z_AXIS]), '+'));
+              SERIAL_CHAR(')');
+            }
+          #endif
         #endif
       }
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
       if (planner.leveling_active) {
-        float rz = current_position[Z_AXIS];
-        planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], rz);
         SERIAL_ECHOLNPGM(" (enabled)");
-        SERIAL_ECHOPAIR("MBL Adjustment Z", rz);
+        SERIAL_ECHOPAIR("MBL Adjustment Z", ftostr43sign(mbl.get_z(current_position[X_AXIS], current_position[Y_AXIS], 1.0), '+'));
+        #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
+          if (planner.z_fade_height) {
+            SERIAL_ECHOPAIR(" (", ftostr43sign(
+              mbl.get_z(current_position[X_AXIS], current_position[Y_AXIS], planner.fade_scaling_factor_for_z(current_position[Z_AXIS])), '+'
+            ));
+            SERIAL_CHAR(')');
+          }
+        #endif
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #endif // MESH_BED_LEVELING
   }
 
 #endif // DEBUG_LEVELING_FEATURE

commit f8393a09086f01eafbb8563411da3b237c96b982
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 2 23:59:42 2017 -0500

    Operate in Native Machine Space

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 8206dc319f..d44cd1ab9b 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -358,24 +358,24 @@ void safe_delay(millis_t ms) {
       }
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
       if (planner.leveling_active) {
-        float lz = current_position[Z_AXIS];
-        planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], lz);
+        float rz = current_position[Z_AXIS];
+        planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], rz);
         SERIAL_ECHOLNPGM(" (enabled)");
-        SERIAL_ECHOPAIR("MBL Adjustment Z", lz);
+        SERIAL_ECHOPAIR("MBL Adjustment Z", rz);
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #endif // MESH_BED_LEVELING
   }
 
 #endif // DEBUG_LEVELING_FEATURE

commit 3e3911fb81cef6f17f7e77c54f520e2a4579225b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 13 17:21:25 2017 -0500

    Use planner.leveling_active for all leveling systems

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index c220368fe2..8206dc319f 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -326,21 +326,21 @@ void safe_delay(millis_t ms) {
       SERIAL_ECHOPGM("Auto Bed Leveling: ");
       #if ENABLED(AUTO_BED_LEVELING_LINEAR)
         SERIAL_ECHOPGM("LINEAR");
       #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
         SERIAL_ECHOPGM("BILINEAR");
       #elif ENABLED(AUTO_BED_LEVELING_3POINT)
         SERIAL_ECHOPGM("3POINT");
       #elif ENABLED(AUTO_BED_LEVELING_UBL)
         SERIAL_ECHOPGM("UBL");
       #endif
-      if (LEVELING_IS_ACTIVE()) {
+      if (planner.leveling_active) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ABL_PLANAR
           const float diff[XYZ] = {
             stepper.get_axis_position_mm(X_AXIS) - current_position[X_AXIS],
             stepper.get_axis_position_mm(Y_AXIS) - current_position[Y_AXIS],
             stepper.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]
           };
           SERIAL_ECHOPGM("ABL Adjustment X");
           if (diff[X_AXIS] > 0) SERIAL_CHAR('+');
           SERIAL_ECHO(diff[X_AXIS]);
@@ -357,21 +357,21 @@ void safe_delay(millis_t ms) {
         #endif
       }
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
-      if (LEVELING_IS_ACTIVE()) {
+      if (planner.leveling_active) {
         float lz = current_position[Z_AXIS];
         planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], lz);
         SERIAL_ECHOLNPGM(" (enabled)");
         SERIAL_ECHOPAIR("MBL Adjustment Z", lz);
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 

commit 9a930ebec27008d2e47161d050e7d1f9dd534b66
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 13 10:25:05 2017 -0500

    Make leveling_is_active a macro

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index f970c46a67..c220368fe2 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -326,21 +326,21 @@ void safe_delay(millis_t ms) {
       SERIAL_ECHOPGM("Auto Bed Leveling: ");
       #if ENABLED(AUTO_BED_LEVELING_LINEAR)
         SERIAL_ECHOPGM("LINEAR");
       #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
         SERIAL_ECHOPGM("BILINEAR");
       #elif ENABLED(AUTO_BED_LEVELING_3POINT)
         SERIAL_ECHOPGM("3POINT");
       #elif ENABLED(AUTO_BED_LEVELING_UBL)
         SERIAL_ECHOPGM("UBL");
       #endif
-      if (leveling_is_active()) {
+      if (LEVELING_IS_ACTIVE()) {
         SERIAL_ECHOLNPGM(" (enabled)");
         #if ABL_PLANAR
           const float diff[XYZ] = {
             stepper.get_axis_position_mm(X_AXIS) - current_position[X_AXIS],
             stepper.get_axis_position_mm(Y_AXIS) - current_position[Y_AXIS],
             stepper.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]
           };
           SERIAL_ECHOPGM("ABL Adjustment X");
           if (diff[X_AXIS] > 0) SERIAL_CHAR('+');
           SERIAL_ECHO(diff[X_AXIS]);
@@ -357,21 +357,21 @@ void safe_delay(millis_t ms) {
         #endif
       }
       else
         SERIAL_ECHOLNPGM(" (disabled)");
 
       SERIAL_EOL();
 
     #elif ENABLED(MESH_BED_LEVELING)
 
       SERIAL_ECHOPGM("Mesh Bed Leveling");
-      if (leveling_is_active()) {
+      if (LEVELING_IS_ACTIVE()) {
         float lz = current_position[Z_AXIS];
         planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], lz);
         SERIAL_ECHOLNPGM(" (enabled)");
         SERIAL_ECHOPAIR("MBL Adjustment Z", lz);
       }
       else
         SERIAL_ECHOPGM(" (disabled)");
 
       SERIAL_EOL();
 

commit f52a31a27517eaf5773f6ab443596e29c573f6e7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:32 2017 -0500

    Core updates

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
index 0f59193553..f970c46a67 100644
--- a/Marlin/src/core/utility.cpp
+++ b/Marlin/src/core/utility.cpp
@@ -13,23 +13,24 @@
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 
-#include "Marlin.h"
 #include "utility.h"
-#include "temperature.h"
+
+#include "../Marlin.h"
+#include "../module/temperature.h"
 
 void safe_delay(millis_t ms) {
   while (ms > 50) {
     ms -= 50;
     delay(50);
     thermalManager.manage_heater();
   }
   delay(ms);
   thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
 }
@@ -248,10 +249,133 @@ void safe_delay(millis_t ms) {
         conv[5] = DIGIT(dig);
       }
       else                          // nothing after decimal point
         conv[4] = conv[5] = ' ';
       conv[6] = ' ';
     }
     return &conv[1];
   }
 
 #endif // ULTRA_LCD
+
+#if ENABLED(DEBUG_LEVELING_FEATURE)
+
+  #include "../module/probe.h"
+  #include "../module/motion.h"
+  #include "../module/stepper.h"
+  #include "../feature/bedlevel/bedlevel.h"
+
+  void log_machine_info() {
+    SERIAL_ECHOPGM("Machine Type: ");
+    #if ENABLED(DELTA)
+      SERIAL_ECHOLNPGM("Delta");
+    #elif IS_SCARA
+      SERIAL_ECHOLNPGM("SCARA");
+    #elif IS_CORE
+      SERIAL_ECHOLNPGM("Core");
+    #else
+      SERIAL_ECHOLNPGM("Cartesian");
+    #endif
+
+    SERIAL_ECHOPGM("Probe: ");
+    #if ENABLED(PROBE_MANUALLY)
+      SERIAL_ECHOLNPGM("PROBE_MANUALLY");
+    #elif ENABLED(FIX_MOUNTED_PROBE)
+      SERIAL_ECHOLNPGM("FIX_MOUNTED_PROBE");
+    #elif ENABLED(BLTOUCH)
+      SERIAL_ECHOLNPGM("BLTOUCH");
+    #elif HAS_Z_SERVO_ENDSTOP
+      SERIAL_ECHOLNPGM("SERVO PROBE");
+    #elif ENABLED(Z_PROBE_SLED)
+      SERIAL_ECHOLNPGM("Z_PROBE_SLED");
+    #elif ENABLED(Z_PROBE_ALLEN_KEY)
+      SERIAL_ECHOLNPGM("Z_PROBE_ALLEN_KEY");
+    #else
+      SERIAL_ECHOLNPGM("NONE");
+    #endif
+
+    #if HAS_BED_PROBE
+      SERIAL_ECHOPAIR("Probe Offset X:", X_PROBE_OFFSET_FROM_EXTRUDER);
+      SERIAL_ECHOPAIR(" Y:", Y_PROBE_OFFSET_FROM_EXTRUDER);
+      SERIAL_ECHOPAIR(" Z:", zprobe_zoffset);
+      #if X_PROBE_OFFSET_FROM_EXTRUDER > 0
+        SERIAL_ECHOPGM(" (Right");
+      #elif X_PROBE_OFFSET_FROM_EXTRUDER < 0
+        SERIAL_ECHOPGM(" (Left");
+      #elif Y_PROBE_OFFSET_FROM_EXTRUDER != 0
+        SERIAL_ECHOPGM(" (Middle");
+      #else
+        SERIAL_ECHOPGM(" (Aligned With");
+      #endif
+      #if Y_PROBE_OFFSET_FROM_EXTRUDER > 0
+        SERIAL_ECHOPGM("-Back");
+      #elif Y_PROBE_OFFSET_FROM_EXTRUDER < 0
+        SERIAL_ECHOPGM("-Front");
+      #elif X_PROBE_OFFSET_FROM_EXTRUDER != 0
+        SERIAL_ECHOPGM("-Center");
+      #endif
+      if (zprobe_zoffset < 0)
+        SERIAL_ECHOPGM(" & Below");
+      else if (zprobe_zoffset > 0)
+        SERIAL_ECHOPGM(" & Above");
+      else
+        SERIAL_ECHOPGM(" & Same Z as");
+      SERIAL_ECHOLNPGM(" Nozzle)");
+    #endif
+
+    #if HAS_ABL
+      SERIAL_ECHOPGM("Auto Bed Leveling: ");
+      #if ENABLED(AUTO_BED_LEVELING_LINEAR)
+        SERIAL_ECHOPGM("LINEAR");
+      #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
+        SERIAL_ECHOPGM("BILINEAR");
+      #elif ENABLED(AUTO_BED_LEVELING_3POINT)
+        SERIAL_ECHOPGM("3POINT");
+      #elif ENABLED(AUTO_BED_LEVELING_UBL)
+        SERIAL_ECHOPGM("UBL");
+      #endif
+      if (leveling_is_active()) {
+        SERIAL_ECHOLNPGM(" (enabled)");
+        #if ABL_PLANAR
+          const float diff[XYZ] = {
+            stepper.get_axis_position_mm(X_AXIS) - current_position[X_AXIS],
+            stepper.get_axis_position_mm(Y_AXIS) - current_position[Y_AXIS],
+            stepper.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]
+          };
+          SERIAL_ECHOPGM("ABL Adjustment X");
+          if (diff[X_AXIS] > 0) SERIAL_CHAR('+');
+          SERIAL_ECHO(diff[X_AXIS]);
+          SERIAL_ECHOPGM(" Y");
+          if (diff[Y_AXIS] > 0) SERIAL_CHAR('+');
+          SERIAL_ECHO(diff[Y_AXIS]);
+          SERIAL_ECHOPGM(" Z");
+          if (diff[Z_AXIS] > 0) SERIAL_CHAR('+');
+          SERIAL_ECHO(diff[Z_AXIS]);
+        #elif ENABLED(AUTO_BED_LEVELING_UBL)
+          SERIAL_ECHOPAIR("UBL Adjustment Z", stepper.get_axis_position_mm(Z_AXIS) - current_position[Z_AXIS]);
+        #elif ENABLED(AUTO_BED_LEVELING_BILINEAR)
+          SERIAL_ECHOPAIR("ABL Adjustment Z", bilinear_z_offset(current_position));
+        #endif
+      }
+      else
+        SERIAL_ECHOLNPGM(" (disabled)");
+
+      SERIAL_EOL();
+
+    #elif ENABLED(MESH_BED_LEVELING)
+
+      SERIAL_ECHOPGM("Mesh Bed Leveling");
+      if (leveling_is_active()) {
+        float lz = current_position[Z_AXIS];
+        planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], lz);
+        SERIAL_ECHOLNPGM(" (enabled)");
+        SERIAL_ECHOPAIR("MBL Adjustment Z", lz);
+      }
+      else
+        SERIAL_ECHOPGM(" (disabled)");
+
+      SERIAL_EOL();
+
+    #endif // MESH_BED_LEVELING
+  }
+
+#endif // DEBUG_LEVELING_FEATURE

commit 4e4d16c92ecca1f92efdce3c8da2d62d4df1cf84
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:30 2017 -0500

    Move 'core' files

diff --git a/Marlin/src/core/utility.cpp b/Marlin/src/core/utility.cpp
new file mode 100644
index 0000000000..0f59193553
--- /dev/null
+++ b/Marlin/src/core/utility.cpp
@@ -0,0 +1,257 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "Marlin.h"
+#include "utility.h"
+#include "temperature.h"
+
+void safe_delay(millis_t ms) {
+  while (ms > 50) {
+    ms -= 50;
+    delay(50);
+    thermalManager.manage_heater();
+  }
+  delay(ms);
+  thermalManager.manage_heater(); // This keeps us safe if too many small safe_delay() calls are made
+}
+
+#if ENABLED(EEPROM_SETTINGS)
+
+  void crc16(uint16_t *crc, const void * const data, uint16_t cnt) {
+    uint8_t *ptr = (uint8_t *)data;
+    while (cnt--) {
+      *crc = (uint16_t)(*crc ^ (uint16_t)(((uint16_t)*ptr++) << 8));
+      for (uint8_t x = 0; x < 8; x++)
+        *crc = (uint16_t)((*crc & 0x8000) ? ((uint16_t)(*crc << 1) ^ 0x1021) : (*crc << 1));
+    }
+  }
+
+#endif // EEPROM_SETTINGS
+
+#if ENABLED(ULTRA_LCD)
+
+  char conv[8] = { 0 };
+
+  #define DIGIT(n) ('0' + (n))
+  #define DIGIMOD(n, f) DIGIT((n)/(f) % 10)
+  #define RJDIGIT(n, f) ((n) >= (f) ? DIGIMOD(n, f) : ' ')
+  #define MINUSOR(n, alt) (n >= 0 ? (alt) : (n = -n, '-'))
+
+  // Convert unsigned int to string 123 format
+  char* i8tostr3(const uint8_t xx) {
+    conv[4] = RJDIGIT(xx, 100);
+    conv[5] = RJDIGIT(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[4];
+  }
+
+  // Convert signed int to rj string with 123 or -12 format
+  char* itostr3(const int x) {
+    int xx = x;
+    conv[4] = MINUSOR(xx, RJDIGIT(xx, 100));
+    conv[5] = RJDIGIT(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[4];
+  }
+
+  // Convert unsigned int to lj string with 123 format
+  char* itostr3left(const int xx) {
+    char *str = &conv[6];
+    *str = DIGIMOD(xx, 1);
+    if (xx >= 10) {
+      *(--str) = DIGIMOD(xx, 10);
+      if (xx >= 100)
+        *(--str) = DIGIMOD(xx, 100);
+    }
+    return str;
+  }
+
+  // Convert signed int to rj string with 1234, _123, -123, _-12, or __-1 format
+  char *itostr4sign(const int x) {
+    const bool neg = x < 0;
+    const int xx = neg ? -x : x;
+    if (x >= 1000) {
+      conv[3] = DIGIMOD(xx, 1000);
+      conv[4] = DIGIMOD(xx, 100);
+      conv[5] = DIGIMOD(xx, 10);
+    }
+    else {
+      if (xx >= 100) {
+        conv[3] = neg ? '-' : ' ';
+        conv[4] = DIGIMOD(xx, 100);
+        conv[5] = DIGIMOD(xx, 10);
+      }
+      else {
+        conv[3] = ' ';
+        conv[4] = ' ';
+        if (xx >= 10) {
+          conv[4] = neg ? '-' : ' ';
+          conv[5] = DIGIMOD(xx, 10);
+        }
+        else {
+          conv[5] = neg ? '-' : ' ';
+        }
+      }
+    }
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[3];
+  }
+
+  // Convert unsigned float to string with 1.23 format
+  char* ftostr12ns(const float &x) {
+    const long xx = (x < 0 ? -x : x) * 100;
+    conv[3] = DIGIMOD(xx, 100);
+    conv[4] = '.';
+    conv[5] = DIGIMOD(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[3];
+  }
+
+  // Convert signed float to fixed-length string with 023.45 / -23.45 format
+  char *ftostr32(const float &x) {
+    long xx = x * 100;
+    conv[1] = MINUSOR(xx, DIGIMOD(xx, 10000));
+    conv[2] = DIGIMOD(xx, 1000);
+    conv[3] = DIGIMOD(xx, 100);
+    conv[4] = '.';
+    conv[5] = DIGIMOD(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[1];
+  }
+
+  #if ENABLED(LCD_DECIMAL_SMALL_XY)
+
+    // Convert float to rj string with 1234, _123, -123, _-12, 12.3, _1.2, or -1.2 format
+    char *ftostr4sign(const float &fx) {
+      const int x = fx * 10;
+      if (!WITHIN(x, -99, 999)) return itostr4sign((int)fx);
+      const bool neg = x < 0;
+      const int xx = neg ? -x : x;
+      conv[3] = neg ? '-' : (xx >= 100 ? DIGIMOD(xx, 100) : ' ');
+      conv[4] = DIGIMOD(xx, 10);
+      conv[5] = '.';
+      conv[6] = DIGIMOD(xx, 1);
+      return &conv[3];
+    }
+
+  #endif // LCD_DECIMAL_SMALL_XY
+
+  // Convert float to fixed-length string with +123.4 / -123.4 format
+  char* ftostr41sign(const float &x) {
+    int xx = x * 10;
+    conv[1] = MINUSOR(xx, '+');
+    conv[2] = DIGIMOD(xx, 1000);
+    conv[3] = DIGIMOD(xx, 100);
+    conv[4] = DIGIMOD(xx, 10);
+    conv[5] = '.';
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[1];
+  }
+
+  // Convert signed float to string (6 digit) with -1.234 / _0.000 / +1.234 format
+  char* ftostr43sign(const float &x, char plus/*=' '*/) {
+    long xx = x * 1000;
+    conv[1] = xx ? MINUSOR(xx, plus) : ' ';
+    conv[2] = DIGIMOD(xx, 1000);
+    conv[3] = '.';
+    conv[4] = DIGIMOD(xx, 100);
+    conv[5] = DIGIMOD(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[1];
+  }
+
+  // Convert unsigned float to rj string with 12345 format
+  char* ftostr5rj(const float &x) {
+    const long xx = x < 0 ? -x : x;
+    conv[2] = RJDIGIT(xx, 10000);
+    conv[3] = RJDIGIT(xx, 1000);
+    conv[4] = RJDIGIT(xx, 100);
+    conv[5] = RJDIGIT(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return &conv[2];
+  }
+
+  // Convert signed float to string with +1234.5 format
+  char* ftostr51sign(const float &x) {
+    long xx = x * 10;
+    conv[0] = MINUSOR(xx, '+');
+    conv[1] = DIGIMOD(xx, 10000);
+    conv[2] = DIGIMOD(xx, 1000);
+    conv[3] = DIGIMOD(xx, 100);
+    conv[4] = DIGIMOD(xx, 10);
+    conv[5] = '.';
+    conv[6] = DIGIMOD(xx, 1);
+    return conv;
+  }
+
+  // Convert signed float to string with +123.45 format
+  char* ftostr52sign(const float &x) {
+    long xx = x * 100;
+    conv[0] = MINUSOR(xx, '+');
+    conv[1] = DIGIMOD(xx, 10000);
+    conv[2] = DIGIMOD(xx, 1000);
+    conv[3] = DIGIMOD(xx, 100);
+    conv[4] = '.';
+    conv[5] = DIGIMOD(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return conv;
+  }
+
+  // Convert unsigned float to string with 1234.56 format omitting trailing zeros
+  char* ftostr62rj(const float &x) {
+    const long xx = (x < 0 ? -x : x) * 100;
+    conv[0] = RJDIGIT(xx, 100000);
+    conv[1] = RJDIGIT(xx, 10000);
+    conv[2] = RJDIGIT(xx, 1000);
+    conv[3] = DIGIMOD(xx, 100);
+    conv[4] = '.';
+    conv[5] = DIGIMOD(xx, 10);
+    conv[6] = DIGIMOD(xx, 1);
+    return conv;
+  }
+
+  // Convert signed float to space-padded string with -_23.4_ format
+  char* ftostr52sp(const float &x) {
+    long xx = x * 100;
+    uint8_t dig;
+    conv[1] = MINUSOR(xx, RJDIGIT(xx, 10000));
+    conv[2] = RJDIGIT(xx, 1000);
+    conv[3] = DIGIMOD(xx, 100);
+
+    if ((dig = xx % 10)) {          // second digit after decimal point?
+      conv[4] = '.';
+      conv[5] = DIGIMOD(xx, 10);
+      conv[6] = DIGIT(dig);
+    }
+    else {
+      if ((dig = (xx / 10) % 10)) { // first digit after decimal point?
+        conv[4] = '.';
+        conv[5] = DIGIT(dig);
+      }
+      else                          // nothing after decimal point
+        conv[4] = conv[5] = ' ';
+      conv[6] = ' ';
+    }
+    return &conv[1];
+  }
+
+#endif // ULTRA_LCD
