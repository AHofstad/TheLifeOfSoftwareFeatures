commit eaf6777a6643a6fab23ceaaa4699cb2466ea6b83
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 16 19:36:25 2020 -0500

    Rename ultralcd => marlinui

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
deleted file mode 100644
index bf9e47e0c8..0000000000
--- a/Marlin/src/lcd/ultralcd.h
+++ /dev/null
@@ -1,716 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- */
-#pragma once
-
-#include "../inc/MarlinConfig.h"
-
-#if HAS_BUZZER
-  #include "../libs/buzzer.h"
-#endif
-
-#if ENABLED(SDSUPPORT)
-  #include "../sd/cardreader.h"
-#endif
-
-#if EITHER(HAS_LCD_MENU, ULTIPANEL_FEEDMULTIPLY)
-  #define HAS_ENCODER_ACTION 1
-#endif
-#if ((!HAS_ADC_BUTTONS && IS_NEWPANEL) || BUTTONS_EXIST(EN1, EN2)) && !IS_TFTGLCD_PANEL
-  #define HAS_ENCODER_WHEEL 1
-#endif
-#if HAS_ENCODER_WHEEL || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT)
-  #define HAS_DIGITAL_BUTTONS 1
-#endif
-#if !HAS_ADC_BUTTONS && (IS_RRW_KEYPAD || (HAS_WIRED_LCD && !IS_NEWPANEL))
-  #define HAS_SHIFT_ENCODER 1
-#endif
-
-// I2C buttons must be read in the main thread
-#if ANY(LCD_I2C_VIKI, LCD_I2C_PANELOLU2, IS_TFTGLCD_PANEL)
-  #define HAS_SLOW_BUTTONS 1
-#endif
-
-#if E_MANUAL > 1
-  #define MULTI_MANUAL 1
-#endif
-
-#if HAS_WIRED_LCD
-
-  #include "../MarlinCore.h"
-
-  #if ENABLED(ADVANCED_PAUSE_FEATURE)
-    #include "../feature/pause.h"
-    #include "../module/motion.h" // for active_extruder
-  #endif
-
-  enum LCDViewAction : uint8_t {
-    LCDVIEW_NONE,
-    LCDVIEW_REDRAW_NOW,
-    LCDVIEW_CALL_REDRAW_NEXT,
-    LCDVIEW_CLEAR_CALL_REDRAW,
-    LCDVIEW_CALL_NO_REDRAW
-  };
-
-  #if HAS_ADC_BUTTONS
-    uint8_t get_ADC_keyValue();
-  #endif
-
-  #define LCD_UPDATE_INTERVAL TERN(HAS_TOUCH_XPT2046, 50, 100)
-
-  #if HAS_LCD_MENU
-
-    #include "lcdprint.h"
-
-    void _wrap_string(uint8_t &col, uint8_t &row, const char * const string, read_byte_cb_t cb_read_byte, const bool wordwrap=false);
-    inline void wrap_string_P(uint8_t &col, uint8_t &row, PGM_P const pstr, const bool wordwrap=false) { _wrap_string(col, row, pstr, read_byte_rom, wordwrap); }
-    inline void wrap_string(uint8_t &col, uint8_t &row, const char * const string, const bool wordwrap=false) { _wrap_string(col, row, string, read_byte_ram, wordwrap); }
-
-    #if ENABLED(SDSUPPORT)
-      #include "../sd/cardreader.h"
-    #endif
-
-    typedef void (*screenFunc_t)();
-    typedef void (*menuAction_t)();
-
-    #if ENABLED(ADVANCED_PAUSE_FEATURE)
-      void lcd_pause_show_message(const PauseMessage message,
-                                  const PauseMode mode=PAUSE_MODE_SAME,
-                                  const uint8_t extruder=active_extruder);
-    #endif
-
-    #if ENABLED(AUTO_BED_LEVELING_UBL)
-      void lcd_mesh_edit_setup(const float &initial);
-      float lcd_mesh_edit();
-    #endif
-
-  #endif // HAS_LCD_MENU
-
-#endif // HAS_WIRED_LCD
-
-#if IS_RRW_KEYPAD
-  #define BTN_OFFSET          0 // Bit offset into buttons for shift register values
-
-  #define BLEN_KEYPAD_F3      0
-  #define BLEN_KEYPAD_F2      1
-  #define BLEN_KEYPAD_F1      2
-  #define BLEN_KEYPAD_DOWN    3
-  #define BLEN_KEYPAD_RIGHT   4
-  #define BLEN_KEYPAD_MIDDLE  5
-  #define BLEN_KEYPAD_UP      6
-  #define BLEN_KEYPAD_LEFT    7
-
-  #define EN_KEYPAD_F1      _BV(BTN_OFFSET + BLEN_KEYPAD_F1)
-  #define EN_KEYPAD_F2      _BV(BTN_OFFSET + BLEN_KEYPAD_F2)
-  #define EN_KEYPAD_F3      _BV(BTN_OFFSET + BLEN_KEYPAD_F3)
-  #define EN_KEYPAD_DOWN    _BV(BTN_OFFSET + BLEN_KEYPAD_DOWN)
-  #define EN_KEYPAD_RIGHT   _BV(BTN_OFFSET + BLEN_KEYPAD_RIGHT)
-  #define EN_KEYPAD_MIDDLE  _BV(BTN_OFFSET + BLEN_KEYPAD_MIDDLE)
-  #define EN_KEYPAD_UP      _BV(BTN_OFFSET + BLEN_KEYPAD_UP)
-  #define EN_KEYPAD_LEFT    _BV(BTN_OFFSET + BLEN_KEYPAD_LEFT)
-
-  #define RRK(B) (keypad_buttons & (B))
-
-  #ifdef EN_C
-    #define BUTTON_CLICK() ((buttons & EN_C) || RRK(EN_KEYPAD_MIDDLE))
-  #else
-    #define BUTTON_CLICK() RRK(EN_KEYPAD_MIDDLE)
-  #endif
-
-#endif // IS_RRW_KEYPAD
-
-#if HAS_DIGITAL_BUTTONS
-
-  // Wheel spin pins where BA is 00, 10, 11, 01 (1 bit always changes)
-  #define BLEN_A 0
-  #define BLEN_B 1
-
-  #define EN_A _BV(BLEN_A)
-  #define EN_B _BV(BLEN_B)
-
-  #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
-
-  #if BUTTON_EXISTS(ENC) || HAS_TOUCH_XPT2046
-    #define BLEN_C 2
-    #define EN_C _BV(BLEN_C)
-  #endif
-
-  #if ENABLED(LCD_I2C_VIKI)
-
-    #include <LiquidTWI2.h>
-
-    #define B_I2C_BTN_OFFSET 3 // (the first three bit positions reserved for EN_A, EN_B, EN_C)
-
-    // button and encoder bit positions within 'buttons'
-    #define B_LE (BUTTON_LEFT   << B_I2C_BTN_OFFSET)      // The remaining normalized buttons are all read via I2C
-    #define B_UP (BUTTON_UP     << B_I2C_BTN_OFFSET)
-    #define B_MI (BUTTON_SELECT << B_I2C_BTN_OFFSET)
-    #define B_DW (BUTTON_DOWN   << B_I2C_BTN_OFFSET)
-    #define B_RI (BUTTON_RIGHT  << B_I2C_BTN_OFFSET)
-
-    #if BUTTON_EXISTS(ENC)                                // The pause/stop/restart button is connected to BTN_ENC when used
-      #define B_ST (EN_C)                                 // Map the pause/stop/resume button into its normalized functional name
-      #define BUTTON_CLICK() (buttons & (B_MI|B_RI|B_ST)) // Pause/stop also acts as click until a proper pause/stop is implemented.
-    #else
-      #define BUTTON_CLICK() (buttons & (B_MI|B_RI))
-    #endif
-
-    // I2C buttons take too long to read inside an interrupt context and so we read them during lcd_update
-
-  #elif ENABLED(LCD_I2C_PANELOLU2)
-
-    #if !BUTTON_EXISTS(ENC) // Use I2C if not directly connected to a pin
-
-      #define B_I2C_BTN_OFFSET 3 // (the first three bit positions reserved for EN_A, EN_B, EN_C)
-
-      #define B_MI (PANELOLU2_ENCODER_C << B_I2C_BTN_OFFSET) // requires LiquidTWI2 library v1.2.3 or later
-
-      #define BUTTON_CLICK() (buttons & B_MI)
-
-    #endif
-
-  #endif
-
-#else
-
-  #undef BUTTON_EXISTS
-  #define BUTTON_EXISTS(...) false
-
-  // Shift register bits correspond to buttons:
-  #define BL_LE 7   // Left
-  #define BL_UP 6   // Up
-  #define BL_MI 5   // Middle
-  #define BL_DW 4   // Down
-  #define BL_RI 3   // Right
-  #define BL_ST 2   // Red Button
-  #define B_LE _BV(BL_LE)
-  #define B_UP _BV(BL_UP)
-  #define B_MI _BV(BL_MI)
-  #define B_DW _BV(BL_DW)
-  #define B_RI _BV(BL_RI)
-  #define B_ST _BV(BL_ST)
-
-  #ifndef BUTTON_CLICK
-    #define BUTTON_CLICK() (buttons & (B_MI|B_ST))
-  #endif
-
-#endif
-
-#if BUTTON_EXISTS(BACK) || EITHER(HAS_TOUCH_XPT2046, IS_TFTGLCD_PANEL)
-  #define BLEN_D 3
-  #define EN_D _BV(BLEN_D)
-  #define LCD_BACK_CLICKED() (buttons & EN_D)
-#else
-  #define LCD_BACK_CLICKED() false
-#endif
-
-#ifndef BUTTON_CLICK
-  #ifdef EN_C
-    #define BUTTON_CLICK() (buttons & EN_C)
-  #else
-    #define BUTTON_CLICK() false
-  #endif
-#endif
-
-#if HAS_MARLINUI_U8GLIB
-  enum MarlinFont : uint8_t {
-    FONT_STATUSMENU = 1,
-    FONT_EDIT,
-    FONT_MENU
-  };
-#else
-  enum HD44780CharSet : uint8_t {
-    CHARSET_MENU,
-    CHARSET_INFO,
-    CHARSET_BOOT
-  };
-#endif
-
-#if PREHEAT_COUNT
-  typedef struct {
-    TERN_(HAS_HOTEND,     uint16_t hotend_temp);
-    TERN_(HAS_HEATED_BED, uint16_t bed_temp   );
-    TERN_(HAS_FAN,        uint16_t fan_speed  );
-  } preheat_t;
-#endif
-
-#if HAS_LCD_MENU
-
-  // Manual Movement class
-  class ManualMove {
-  public:
-    static millis_t start_time;
-    static float menu_scale;
-    TERN_(IS_KINEMATIC, static float offset);
-    #if IS_KINEMATIC
-      static bool processing;
-    #else
-      static bool constexpr processing = false;
-    #endif
-    #if MULTI_MANUAL
-      static int8_t e_index;
-    #else
-      static int8_t constexpr e_index = 0;
-    #endif
-    static uint8_t axis;
-    static void task();
-    static void soon(AxisEnum axis
-      #if MULTI_MANUAL
-        , const int8_t eindex=-1
-      #endif
-    );
-  };
-
-#endif
-
-////////////////////////////////////////////
-//////////// MarlinUI Singleton ////////////
-////////////////////////////////////////////
-
-class MarlinUI {
-public:
-
-  MarlinUI() {
-    TERN_(HAS_LCD_MENU, currentScreen = status_screen);
-  }
-
-  #if HAS_BUZZER
-    static void buzz(const long duration, const uint16_t freq);
-  #endif
-
-  FORCE_INLINE static void chirp() {
-    TERN_(HAS_CHIRP, buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ));
-  }
-
-  #if ENABLED(LCD_HAS_STATUS_INDICATORS)
-    static void update_indicators();
-  #endif
-
-  // LCD implementations
-  static void clear_lcd();
-
-  #if ENABLED(SDSUPPORT)
-    static void media_changed(const uint8_t old_stat, const uint8_t stat);
-  #endif
-
-  #if ENABLED(DWIN_CREALITY_LCD)
-    static void refresh();
-  #else
-    FORCE_INLINE static void refresh() {
-      TERN_(HAS_WIRED_LCD, refresh(LCDVIEW_CLEAR_CALL_REDRAW));
-    }
-  #endif
-
-  #if HAS_WIRED_LCD
-    static bool detected();
-    static void init_lcd();
-  #else
-    static inline bool detected() { return true; }
-    static inline void init_lcd() {}
-  #endif
-
-  #if HAS_PRINT_PROGRESS
-    #if HAS_PRINT_PROGRESS_PERMYRIAD
-      typedef uint16_t progress_t;
-      #define PROGRESS_SCALE 100U
-      #define PROGRESS_MASK 0x7FFF
-    #else
-      typedef uint8_t progress_t;
-      #define PROGRESS_SCALE 1U
-      #define PROGRESS_MASK 0x7F
-    #endif
-    #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
-      static progress_t progress_override;
-      static void set_progress(const progress_t p) { progress_override = _MIN(p, 100U * (PROGRESS_SCALE)); }
-      static void set_progress_done() { progress_override = (PROGRESS_MASK + 1U) + 100U * (PROGRESS_SCALE); }
-      static void progress_reset() { if (progress_override & (PROGRESS_MASK + 1U)) set_progress(0); }
-      #if BOTH(LCD_SET_PROGRESS_MANUALLY, USE_M73_REMAINING_TIME)
-        static uint32_t remaining_time;
-        FORCE_INLINE static void set_remaining_time(const uint32_t r) { remaining_time = r; }
-        FORCE_INLINE static uint32_t get_remaining_time() { return remaining_time; }
-        FORCE_INLINE static void reset_remaining_time() { set_remaining_time(0); }
-      #endif
-    #endif
-    static progress_t _get_progress();
-    #if HAS_PRINT_PROGRESS_PERMYRIAD
-      FORCE_INLINE static uint16_t get_progress_permyriad() { return _get_progress(); }
-    #endif
-    static uint8_t get_progress_percent() { return uint8_t(_get_progress() / (PROGRESS_SCALE)); }
-  #else
-    static constexpr uint8_t get_progress_percent() { return 0; }
-  #endif
-
-  #if HAS_DISPLAY
-
-    static void init();
-    static void update();
-    static void set_alert_status_P(PGM_P const message);
-
-    static char status_message[];
-    static bool has_status();
-
-    static uint8_t alert_level; // Higher levels block lower levels
-    static inline void reset_alert_level() { alert_level = 0; }
-
-    #if ENABLED(STATUS_MESSAGE_SCROLLING)
-      static uint8_t status_scroll_offset;
-      static void advance_status_scroll();
-      static char* status_and_len(uint8_t &len);
-    #endif
-
-    static void abort_print();
-    static void pause_print();
-    static void resume_print();
-
-    #if HAS_WIRED_LCD
-
-      static millis_t next_button_update_ms;
-
-      static LCDViewAction lcdDrawUpdate;
-      FORCE_INLINE static bool should_draw() { return bool(lcdDrawUpdate); }
-      FORCE_INLINE static void refresh(const LCDViewAction type) { lcdDrawUpdate = type; }
-
-      #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
-        static void draw_custom_bootscreen(const uint8_t frame=0);
-        static void show_custom_bootscreen();
-      #endif
-
-      #if ENABLED(SHOW_BOOTSCREEN)
-        #ifndef BOOTSCREEN_TIMEOUT
-          #define BOOTSCREEN_TIMEOUT 2500
-        #endif
-        static void draw_marlin_bootscreen(const bool line2=false);
-        static void show_marlin_bootscreen();
-        static void show_bootscreen();
-      #endif
-
-      #if HAS_MARLINUI_U8GLIB
-
-        static void set_font(const MarlinFont font_nr);
-
-      #else
-
-        static void set_custom_characters(const HD44780CharSet screen_charset=CHARSET_INFO);
-
-        #if ENABLED(LCD_PROGRESS_BAR)
-          static millis_t progress_bar_ms;  // Start time for the current progress bar cycle
-          static void draw_progress_bar(const uint8_t percent);
-          #if PROGRESS_MSG_EXPIRE > 0
-            static millis_t expire_status_ms; // = 0
-            FORCE_INLINE static void reset_progress_bar_timeout() { expire_status_ms = 0; }
-          #endif
-        #endif
-
-      #endif
-
-      static uint8_t lcd_status_update_delay;
-
-      #if HAS_LCD_CONTRAST
-        static int16_t contrast;
-        static void set_contrast(const int16_t value);
-        FORCE_INLINE static void refresh_contrast() { set_contrast(contrast); }
-      #endif
-
-      #if BOTH(FILAMENT_LCD_DISPLAY, SDSUPPORT)
-        static millis_t next_filament_display;
-      #endif
-
-      static void quick_feedback(const bool clear_buttons=true);
-      #if HAS_BUZZER
-        static void completion_feedback(const bool good=true);
-      #else
-        static inline void completion_feedback(const bool=true) {}
-      #endif
-
-      #if DISABLED(LIGHTWEIGHT_UI)
-        static void draw_status_message(const bool blink);
-      #endif
-
-      #if ENABLED(ADVANCED_PAUSE_FEATURE)
-        static void draw_hotend_status(const uint8_t row, const uint8_t extruder);
-      #endif
-
-      #if HAS_TOUCH_XPT2046
-        static bool on_edit_screen;
-        static void screen_click(const uint8_t row, const uint8_t col, const uint8_t x, const uint8_t y);
-      #endif
-
-      static void status_screen();
-
-    #endif
-
-    #if HAS_MARLINUI_U8GLIB
-      static bool drawing_screen, first_page;
-    #else
-      static constexpr bool drawing_screen = false, first_page = true;
-    #endif
-
-    static bool get_blink();
-    static void kill_screen(PGM_P const lcd_error, PGM_P const lcd_component);
-    static void draw_kill_screen();
-    static void set_status(const char* const message, const bool persist=false);
-    static void set_status_P(PGM_P const message, const int8_t level=0);
-    static void status_printf_P(const uint8_t level, PGM_P const fmt, ...);
-    static void reset_status(const bool no_welcome=false);
-
-  #else // No LCD
-
-    // Send status to host as a notification
-    static void set_status(const char* message, const bool=false);
-    static void set_status_P(PGM_P message, const int8_t=0);
-    static void status_printf_P(const uint8_t, PGM_P message, ...);
-
-    static inline void init() {}
-    static inline void update() {}
-    static inline void return_to_status() {}
-    static inline void set_alert_status_P(PGM_P const) {}
-    static inline void reset_status(const bool=false) {}
-    static inline void reset_alert_level() {}
-    static constexpr bool has_status() { return false; }
-
-  #endif
-
-  #if ENABLED(SDSUPPORT)
-    #if BOTH(SCROLL_LONG_FILENAMES, HAS_LCD_MENU)
-      #define MARLINUI_SCROLL_NAME 1
-    #endif
-    #if MARLINUI_SCROLL_NAME
-      static uint8_t filename_scroll_pos, filename_scroll_max;
-    #endif
-    static const char * scrolled_filename(CardReader &theCard, const uint8_t maxlen, uint8_t hash, const bool doScroll);
-  #endif
-
-  #if PREHEAT_COUNT
-    static preheat_t material_preset[PREHEAT_COUNT];
-    static PGM_P get_preheat_label(const uint8_t m);
-  #endif
-
-  #if HAS_LCD_MENU
-    #if LCD_TIMEOUT_TO_STATUS
-      static millis_t return_to_status_ms;
-    #endif
-
-    #if HAS_TOUCH_XPT2046
-      static uint8_t touch_buttons;
-      static uint8_t repeat_delay;
-    #endif
-
-    #if ENABLED(ENCODER_RATE_MULTIPLIER)
-      static bool encoderRateMultiplierEnabled;
-      static millis_t lastEncoderMovementMillis;
-      static void enable_encoder_multiplier(const bool onoff);
-      #define ENCODER_RATE_MULTIPLY(F) (ui.encoderRateMultiplierEnabled = F)
-    #else
-      #define ENCODER_RATE_MULTIPLY(F) NOOP
-    #endif
-
-    // Manual Movement
-    static ManualMove manual_move;
-
-    // Select Screen (modal NO/YES style dialog)
-    static bool selection;
-    static void set_selection(const bool sel) { selection = sel; }
-    static bool update_selection();
-
-    static bool lcd_clicked;
-    static bool use_click();
-
-    static void synchronize(PGM_P const msg=nullptr);
-
-    static screenFunc_t currentScreen;
-    static bool screen_changed;
-    static void goto_screen(const screenFunc_t screen, const uint16_t encoder=0, const uint8_t top=0, const uint8_t items=0);
-    static void save_previous_screen();
-
-    // goto_previous_screen and go_back may also be used as menu item callbacks
-    static void _goto_previous_screen(TERN_(TURBO_BACK_MENU_ITEM, const bool is_back));
-    static inline void goto_previous_screen() { _goto_previous_screen(TERN_(TURBO_BACK_MENU_ITEM, false)); }
-    static inline void go_back()              { _goto_previous_screen(TERN_(TURBO_BACK_MENU_ITEM, true)); }
-
-    static void return_to_status();
-    static inline bool on_status_screen() { return currentScreen == status_screen; }
-    FORCE_INLINE static void run_current_screen() { (*currentScreen)(); }
-
-    #if ENABLED(LIGHTWEIGHT_UI)
-      static void lcd_in_status(const bool inStatus);
-    #endif
-
-    FORCE_INLINE static void defer_status_screen(const bool defer=true) {
-      #if LCD_TIMEOUT_TO_STATUS > 0
-        defer_return_to_status = defer;
-      #else
-        UNUSED(defer);
-      #endif
-    }
-
-    static inline void goto_previous_screen_no_defer() {
-      defer_status_screen(false);
-      goto_previous_screen();
-    }
-
-    #if ENABLED(SD_REPRINT_LAST_SELECTED_FILE)
-      static void reselect_last_file();
-    #endif
-
-    #if ENABLED(AUTO_BED_LEVELING_UBL)
-      static void ubl_plot(const uint8_t x_plot, const uint8_t y_plot);
-    #endif
-
-    static void draw_select_screen_prompt(PGM_P const pref, const char * const string=nullptr, PGM_P const suff=nullptr);
-
-  #elif HAS_WIRED_LCD
-
-    static constexpr bool lcd_clicked = false;
-    static constexpr bool on_status_screen() { return true; }
-    FORCE_INLINE static void run_current_screen() { status_screen(); }
-
-  #endif
-
-  //
-  // EEPROM: Reset / Init / Load / Store
-  //
-  #if HAS_LCD_MENU
-    static void reset_settings();
-  #endif
-
-  #if ENABLED(EEPROM_SETTINGS)
-    #if HAS_LCD_MENU
-      static void init_eeprom();
-      static void load_settings();
-      static void store_settings();
-    #endif
-    #if DISABLED(EEPROM_AUTO_INIT)
-      static void eeprom_alert(const uint8_t msgid);
-      static inline void eeprom_alert_crc()     { eeprom_alert(0); }
-      static inline void eeprom_alert_index()   { eeprom_alert(1); }
-      static inline void eeprom_alert_version() { eeprom_alert(2); }
-    #endif
-  #endif
-
-  //
-  // Special handling if a move is underway
-  //
-  #if EITHER(DELTA_CALIBRATION_MENU, DELTA_AUTO_CALIBRATION) || (ENABLED(LCD_BED_LEVELING) && EITHER(PROBE_MANUALLY, MESH_BED_LEVELING))
-    #define LCD_HAS_WAIT_FOR_MOVE 1
-    static bool wait_for_move;
-  #else
-    static constexpr bool wait_for_move = false;
-  #endif
-
-  //
-  // Block interaction while under external control
-  //
-  #if HAS_LCD_MENU && EITHER(AUTO_BED_LEVELING_UBL, G26_MESH_VALIDATION)
-    static bool external_control;
-    FORCE_INLINE static void capture() { external_control = true; }
-    FORCE_INLINE static void release() { external_control = false; }
-    #if ENABLED(AUTO_BED_LEVELING_UBL)
-      static void external_encoder();
-    #endif
-  #else
-    static constexpr bool external_control = false;
-  #endif
-
-  #if HAS_ENCODER_ACTION
-
-    static volatile uint8_t buttons;
-    #if IS_RRW_KEYPAD
-      static volatile uint8_t keypad_buttons;
-      static bool handle_keypad();
-    #endif
-    #if HAS_SLOW_BUTTONS
-      static volatile uint8_t slow_buttons;
-      static uint8_t read_slow_buttons();
-    #endif
-
-    static void update_buttons();
-    static inline bool button_pressed() { return BUTTON_CLICK() || TERN(TOUCH_SCREEN, touch_pressed(), false); }
-    #if EITHER(AUTO_BED_LEVELING_UBL, G26_MESH_VALIDATION)
-      static void wait_for_release();
-    #endif
-
-    static uint32_t encoderPosition;
-
-    #define ENCODERBASE (TERN(REVERSE_ENCODER_DIRECTION, -1, +1))
-
-    #if EITHER(REVERSE_MENU_DIRECTION, REVERSE_SELECT_DIRECTION)
-      static int8_t encoderDirection;
-    #else
-      static constexpr int8_t encoderDirection = ENCODERBASE;
-    #endif
-
-    FORCE_INLINE static void encoder_direction_normal() {
-      #if EITHER(REVERSE_MENU_DIRECTION, REVERSE_SELECT_DIRECTION)
-        encoderDirection = ENCODERBASE;
-      #endif
-    }
-
-    FORCE_INLINE static void encoder_direction_menus() {
-      TERN_(REVERSE_MENU_DIRECTION, encoderDirection = -(ENCODERBASE));
-    }
-
-    FORCE_INLINE static void encoder_direction_select() {
-      TERN_(REVERSE_SELECT_DIRECTION, encoderDirection = -(ENCODERBASE));
-    }
-
-  #else
-
-    static inline void update_buttons() {}
-
-  #endif
-
-  #if ENABLED(TOUCH_SCREEN_CALIBRATION)
-    static void touch_calibration();
-  #endif
-
-  #if HAS_GRAPHICAL_TFT
-    static void move_axis_screen();
-  #endif
-
-private:
-
-  #if HAS_DISPLAY
-    static void finish_status(const bool persist);
-  #endif
-
-  #if HAS_WIRED_LCD
-    #if HAS_LCD_MENU && LCD_TIMEOUT_TO_STATUS > 0
-      static bool defer_return_to_status;
-    #else
-      static constexpr bool defer_return_to_status = false;
-    #endif
-    static void draw_status_screen();
-    #if HAS_GRAPHICAL_TFT
-      static void tft_idle();
-      #if ENABLED(TOUCH_SCREEN)
-        static bool touch_pressed();
-      #endif
-    #endif
-  #endif
-};
-
-extern MarlinUI ui;
-
-#define LCD_MESSAGEPGM_P(x)      ui.set_status_P(x)
-#define LCD_ALERTMESSAGEPGM_P(x) ui.set_alert_status_P(x)
-
-#define LCD_MESSAGEPGM(x)        LCD_MESSAGEPGM_P(GET_TEXT(x))
-#define LCD_ALERTMESSAGEPGM(x)   LCD_ALERTMESSAGEPGM_P(GET_TEXT(x))

commit f6ffbe548c81abfeecc996c8f2bffd27cabe0014
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 15 03:00:27 2020 -0500

    TFT Presets, Generic options, Sanity checks (#19723)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index c7ef41596d..bf9e47e0c8 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -34,13 +34,13 @@
 #if EITHER(HAS_LCD_MENU, ULTIPANEL_FEEDMULTIPLY)
   #define HAS_ENCODER_ACTION 1
 #endif
-#if ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTONS_EXIST(EN1, EN2)) && !IS_TFTGLCD_PANEL
+#if ((!HAS_ADC_BUTTONS && IS_NEWPANEL) || BUTTONS_EXIST(EN1, EN2)) && !IS_TFTGLCD_PANEL
   #define HAS_ENCODER_WHEEL 1
 #endif
 #if HAS_ENCODER_WHEEL || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT)
   #define HAS_DIGITAL_BUTTONS 1
 #endif
-#if !HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_WIRED_LCD && DISABLED(NEWPANEL)))
+#if !HAS_ADC_BUTTONS && (IS_RRW_KEYPAD || (HAS_WIRED_LCD && !IS_NEWPANEL))
   #define HAS_SHIFT_ENCODER 1
 #endif
 
@@ -106,8 +106,7 @@
 
 #endif // HAS_WIRED_LCD
 
-// REPRAPWORLD_KEYPAD (and ADC_KEYPAD)
-#if ENABLED(REPRAPWORLD_KEYPAD)
+#if IS_RRW_KEYPAD
   #define BTN_OFFSET          0 // Bit offset into buttons for shift register values
 
   #define BLEN_KEYPAD_F3      0
@@ -136,7 +135,7 @@
     #define BUTTON_CLICK() RRK(EN_KEYPAD_MIDDLE)
   #endif
 
-#endif
+#endif // IS_RRW_KEYPAD
 
 #if HAS_DIGITAL_BUTTONS
 
@@ -633,7 +632,7 @@ public:
   #if HAS_ENCODER_ACTION
 
     static volatile uint8_t buttons;
-    #if ENABLED(REPRAPWORLD_KEYPAD)
+    #if IS_RRW_KEYPAD
       static volatile uint8_t keypad_buttons;
       static bool handle_keypad();
     #endif

commit 27bdf4b24e8da06ea7923b6382f38b5fb6292914
Author: Serhiy-K <52166448+Serhiy-K@users.noreply.github.com>
Date:   Mon Sep 28 09:52:38 2020 +0300

    MarlinUI for SPI/I2C TFT-GLCD character-based display bridge (#19375)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index c23dc5d84e..c7ef41596d 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -34,7 +34,7 @@
 #if EITHER(HAS_LCD_MENU, ULTIPANEL_FEEDMULTIPLY)
   #define HAS_ENCODER_ACTION 1
 #endif
-#if (!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTONS_EXIST(EN1, EN2)
+#if ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTONS_EXIST(EN1, EN2)) && !IS_TFTGLCD_PANEL
   #define HAS_ENCODER_WHEEL 1
 #endif
 #if HAS_ENCODER_WHEEL || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT)
@@ -45,7 +45,7 @@
 #endif
 
 // I2C buttons must be read in the main thread
-#if EITHER(LCD_I2C_VIKI, LCD_I2C_PANELOLU2)
+#if ANY(LCD_I2C_VIKI, LCD_I2C_PANELOLU2, IS_TFTGLCD_PANEL)
   #define HAS_SLOW_BUTTONS 1
 #endif
 
@@ -215,7 +215,7 @@
 
 #endif
 
-#if BUTTON_EXISTS(BACK) || HAS_TOUCH_XPT2046
+#if BUTTON_EXISTS(BACK) || EITHER(HAS_TOUCH_XPT2046, IS_TFTGLCD_PANEL)
   #define BLEN_D 3
   #define EN_D _BV(BLEN_D)
   #define LCD_BACK_CLICKED() (buttons & EN_D)

commit c2c6a679ea4bdf48ce1800a8831fcec36c09ce53
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 28 01:13:27 2020 -0500

    Rename LCD conditionals (#19533)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 59e7cbe7d1..c23dc5d84e 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -40,7 +40,7 @@
 #if HAS_ENCODER_WHEEL || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT)
   #define HAS_DIGITAL_BUTTONS 1
 #endif
-#if !HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_SPI_LCD && DISABLED(NEWPANEL)))
+#if !HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_WIRED_LCD && DISABLED(NEWPANEL)))
   #define HAS_SHIFT_ENCODER 1
 #endif
 
@@ -53,7 +53,7 @@
   #define MULTI_MANUAL 1
 #endif
 
-#if HAS_SPI_LCD
+#if HAS_WIRED_LCD
 
   #include "../MarlinCore.h"
 
@@ -104,7 +104,7 @@
 
   #endif // HAS_LCD_MENU
 
-#endif // HAS_SPI_LCD
+#endif // HAS_WIRED_LCD
 
 // REPRAPWORLD_KEYPAD (and ADC_KEYPAD)
 #if ENABLED(REPRAPWORLD_KEYPAD)
@@ -231,7 +231,7 @@
   #endif
 #endif
 
-#if HAS_GRAPHICAL_LCD
+#if HAS_MARLINUI_U8GLIB
   enum MarlinFont : uint8_t {
     FONT_STATUSMENU = 1,
     FONT_EDIT,
@@ -316,11 +316,11 @@ public:
     static void refresh();
   #else
     FORCE_INLINE static void refresh() {
-      TERN_(HAS_SPI_LCD, refresh(LCDVIEW_CLEAR_CALL_REDRAW));
+      TERN_(HAS_WIRED_LCD, refresh(LCDVIEW_CLEAR_CALL_REDRAW));
     }
   #endif
 
-  #if HAS_SPI_LCD
+  #if HAS_WIRED_LCD
     static bool detected();
     static void init_lcd();
   #else
@@ -381,7 +381,7 @@ public:
     static void pause_print();
     static void resume_print();
 
-    #if HAS_SPI_LCD
+    #if HAS_WIRED_LCD
 
       static millis_t next_button_update_ms;
 
@@ -403,7 +403,7 @@ public:
         static void show_bootscreen();
       #endif
 
-      #if HAS_GRAPHICAL_LCD
+      #if HAS_MARLINUI_U8GLIB
 
         static void set_font(const MarlinFont font_nr);
 
@@ -458,7 +458,7 @@ public:
 
     #endif
 
-    #if HAS_GRAPHICAL_LCD
+    #if HAS_MARLINUI_U8GLIB
       static bool drawing_screen, first_page;
     #else
       static constexpr bool drawing_screen = false, first_page = true;
@@ -577,7 +577,7 @@ public:
 
     static void draw_select_screen_prompt(PGM_P const pref, const char * const string=nullptr, PGM_P const suff=nullptr);
 
-  #elif HAS_SPI_LCD
+  #elif HAS_WIRED_LCD
 
     static constexpr bool lcd_clicked = false;
     static constexpr bool on_status_screen() { return true; }
@@ -692,7 +692,7 @@ private:
     static void finish_status(const bool persist);
   #endif
 
-  #if HAS_SPI_LCD
+  #if HAS_WIRED_LCD
     #if HAS_LCD_MENU && LCD_TIMEOUT_TO_STATUS > 0
       static bool defer_return_to_status;
     #else

commit 5b56d6698a2a9b78a5dd40446bcb606cbfff010d
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Thu Sep 17 08:52:21 2020 -0300

    Move screen for Color UI (#19386)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index ee7f50dabf..59e7cbe7d1 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -682,6 +682,10 @@ public:
     static void touch_calibration();
   #endif
 
+  #if HAS_GRAPHICAL_TFT
+    static void move_axis_screen();
+  #endif
+
 private:
 
   #if HAS_DISPLAY

commit 56ed55ddba555b6550ee4da0a1accfc5418e0f3e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Sep 16 05:52:01 2020 -0500

    MarlinUI percent methods for all

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0200d39014..ee7f50dabf 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -328,6 +328,37 @@ public:
     static inline void init_lcd() {}
   #endif
 
+  #if HAS_PRINT_PROGRESS
+    #if HAS_PRINT_PROGRESS_PERMYRIAD
+      typedef uint16_t progress_t;
+      #define PROGRESS_SCALE 100U
+      #define PROGRESS_MASK 0x7FFF
+    #else
+      typedef uint8_t progress_t;
+      #define PROGRESS_SCALE 1U
+      #define PROGRESS_MASK 0x7F
+    #endif
+    #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
+      static progress_t progress_override;
+      static void set_progress(const progress_t p) { progress_override = _MIN(p, 100U * (PROGRESS_SCALE)); }
+      static void set_progress_done() { progress_override = (PROGRESS_MASK + 1U) + 100U * (PROGRESS_SCALE); }
+      static void progress_reset() { if (progress_override & (PROGRESS_MASK + 1U)) set_progress(0); }
+      #if BOTH(LCD_SET_PROGRESS_MANUALLY, USE_M73_REMAINING_TIME)
+        static uint32_t remaining_time;
+        FORCE_INLINE static void set_remaining_time(const uint32_t r) { remaining_time = r; }
+        FORCE_INLINE static uint32_t get_remaining_time() { return remaining_time; }
+        FORCE_INLINE static void reset_remaining_time() { set_remaining_time(0); }
+      #endif
+    #endif
+    static progress_t _get_progress();
+    #if HAS_PRINT_PROGRESS_PERMYRIAD
+      FORCE_INLINE static uint16_t get_progress_permyriad() { return _get_progress(); }
+    #endif
+    static uint8_t get_progress_percent() { return uint8_t(_get_progress() / (PROGRESS_SCALE)); }
+  #else
+    static constexpr uint8_t get_progress_percent() { return 0; }
+  #endif
+
   #if HAS_DISPLAY
 
     static void init();
@@ -350,37 +381,6 @@ public:
     static void pause_print();
     static void resume_print();
 
-    #if HAS_PRINT_PROGRESS
-      #if HAS_PRINT_PROGRESS_PERMYRIAD
-        typedef uint16_t progress_t;
-        #define PROGRESS_SCALE 100U
-        #define PROGRESS_MASK 0x7FFF
-      #else
-        typedef uint8_t progress_t;
-        #define PROGRESS_SCALE 1U
-        #define PROGRESS_MASK 0x7F
-      #endif
-      #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
-        static progress_t progress_override;
-        static void set_progress(const progress_t p) { progress_override = _MIN(p, 100U * (PROGRESS_SCALE)); }
-        static void set_progress_done() { progress_override = (PROGRESS_MASK + 1U) + 100U * (PROGRESS_SCALE); }
-        static void progress_reset() { if (progress_override & (PROGRESS_MASK + 1U)) set_progress(0); }
-        #if BOTH(LCD_SET_PROGRESS_MANUALLY, USE_M73_REMAINING_TIME)
-          static uint32_t remaining_time;
-          FORCE_INLINE static void set_remaining_time(const uint32_t r) { remaining_time = r; }
-          FORCE_INLINE static uint32_t get_remaining_time() { return remaining_time; }
-          FORCE_INLINE static void reset_remaining_time() { set_remaining_time(0); }
-        #endif
-      #endif
-      static progress_t _get_progress();
-      #if HAS_PRINT_PROGRESS_PERMYRIAD
-        FORCE_INLINE static uint16_t get_progress_permyriad() { return _get_progress(); }
-      #endif
-      static uint8_t get_progress_percent() { return uint8_t(_get_progress() / (PROGRESS_SCALE)); }
-    #else
-      static constexpr uint8_t get_progress_percent() { return 0; }
-    #endif
-
     #if HAS_SPI_LCD
 
       static millis_t next_button_update_ms;

commit a445746a8b6dd752de725eb67d264153c3b393d7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 6 21:40:58 2020 -0500

    Clean up LCD conditionals, DWIN

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index d6a9f31e6c..0200d39014 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -312,16 +312,18 @@ public:
     static void media_changed(const uint8_t old_stat, const uint8_t stat);
   #endif
 
+  #if ENABLED(DWIN_CREALITY_LCD)
+    static void refresh();
+  #else
+    FORCE_INLINE static void refresh() {
+      TERN_(HAS_SPI_LCD, refresh(LCDVIEW_CLEAR_CALL_REDRAW));
+    }
+  #endif
+
   #if HAS_SPI_LCD
     static bool detected();
     static void init_lcd();
-    FORCE_INLINE static void refresh() { refresh(LCDVIEW_CLEAR_CALL_REDRAW); }
   #else
-    #if ENABLED(DWIN_CREALITY_LCD)
-      static void refresh();
-    #else
-      static inline void refresh()  {}
-    #endif
     static inline bool detected() { return true; }
     static inline void init_lcd() {}
   #endif
@@ -403,14 +405,10 @@ public:
 
       #if HAS_GRAPHICAL_LCD
 
-        static bool drawing_screen, first_page;
-
         static void set_font(const MarlinFont font_nr);
 
       #else
 
-        static constexpr bool drawing_screen = false, first_page = true;
-
         static void set_custom_characters(const HD44780CharSet screen_charset=CHARSET_INFO);
 
         #if ENABLED(LCD_PROGRESS_BAR)
@@ -460,6 +458,12 @@ public:
 
     #endif
 
+    #if HAS_GRAPHICAL_LCD
+      static bool drawing_screen, first_page;
+    #else
+      static constexpr bool drawing_screen = false, first_page = true;
+    #endif
+
     static bool get_blink();
     static void kill_screen(PGM_P const lcd_error, PGM_P const lcd_component);
     static void draw_kill_screen();

commit 4f67642122059a9270f9e3690978248355f88e72
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Aug 21 05:21:34 2020 -0500

    Header for individual menus

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 662adef0c5..d6a9f31e6c 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -514,6 +514,9 @@ public:
       static bool encoderRateMultiplierEnabled;
       static millis_t lastEncoderMovementMillis;
       static void enable_encoder_multiplier(const bool onoff);
+      #define ENCODER_RATE_MULTIPLY(F) (ui.encoderRateMultiplierEnabled = F)
+    #else
+      #define ENCODER_RATE_MULTIPLY(F) NOOP
     #endif
 
     // Manual Movement

commit 117df87d193994f6fbcd46c45573095adf921784
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Thu Jul 30 09:43:19 2020 +0300

    Support for TFT & Touch Screens (#18130)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index f3c06177bb..662adef0c5 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -74,7 +74,7 @@
     uint8_t get_ADC_keyValue();
   #endif
 
-  #define LCD_UPDATE_INTERVAL TERN(TOUCH_BUTTONS, 50, 100)
+  #define LCD_UPDATE_INTERVAL TERN(HAS_TOUCH_XPT2046, 50, 100)
 
   #if HAS_LCD_MENU
 
@@ -149,7 +149,7 @@
 
   #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
-  #if BUTTON_EXISTS(ENC) || ENABLED(TOUCH_BUTTONS)
+  #if BUTTON_EXISTS(ENC) || HAS_TOUCH_XPT2046
     #define BLEN_C 2
     #define EN_C _BV(BLEN_C)
   #endif
@@ -215,7 +215,7 @@
 
 #endif
 
-#if BUTTON_EXISTS(BACK) || ENABLED(TOUCH_BUTTONS)
+#if BUTTON_EXISTS(BACK) || HAS_TOUCH_XPT2046
   #define BLEN_D 3
   #define EN_D _BV(BLEN_D)
   #define LCD_BACK_CLICKED() (buttons & EN_D)
@@ -451,7 +451,7 @@ public:
         static void draw_hotend_status(const uint8_t row, const uint8_t extruder);
       #endif
 
-      #if ENABLED(TOUCH_BUTTONS)
+      #if HAS_TOUCH_XPT2046
         static bool on_edit_screen;
         static void screen_click(const uint8_t row, const uint8_t col, const uint8_t x, const uint8_t y);
       #endif
@@ -501,8 +501,11 @@ public:
   #endif
 
   #if HAS_LCD_MENU
+    #if LCD_TIMEOUT_TO_STATUS
+      static millis_t return_to_status_ms;
+    #endif
 
-    #if ENABLED(TOUCH_BUTTONS)
+    #if HAS_TOUCH_XPT2046
       static uint8_t touch_buttons;
       static uint8_t repeat_delay;
     #endif
@@ -633,7 +636,7 @@ public:
     #endif
 
     static void update_buttons();
-    static inline bool button_pressed() { return BUTTON_CLICK(); }
+    static inline bool button_pressed() { return BUTTON_CLICK() || TERN(TOUCH_SCREEN, touch_pressed(), false); }
     #if EITHER(AUTO_BED_LEVELING_UBL, G26_MESH_VALIDATION)
       static void wait_for_release();
     #endif
@@ -668,6 +671,10 @@ public:
 
   #endif
 
+  #if ENABLED(TOUCH_SCREEN_CALIBRATION)
+    static void touch_calibration();
+  #endif
+
 private:
 
   #if HAS_DISPLAY
@@ -681,6 +688,12 @@ private:
       static constexpr bool defer_return_to_status = false;
     #endif
     static void draw_status_screen();
+    #if HAS_GRAPHICAL_TFT
+      static void tft_idle();
+      #if ENABLED(TOUCH_SCREEN)
+        static bool touch_pressed();
+      #endif
+    #endif
   #endif
 };
 

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2b9efab359..f3c06177bb 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit b0c6cfb0511b8d71fec26ab91cd945f3d623b3c0
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Jul 9 10:11:57 2020 +0200

    MarlinUI support for up to 5 Material Presets (#18488)
    
    - Add `I` preset parameter to `G26`, `M106`, `M140`, and `M190`.
    - Extend menu items to permit a string interpolation.
    - Keep material names in a list and interpolate in menu items.
    - Extend material presets to support up to 5 predefined materials.
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 6ebd43a37d..2b9efab359 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -78,14 +78,6 @@
 
   #if HAS_LCD_MENU
 
-    #if HAS_GRAPHICAL_LCD
-      #define SETCURSOR(col, row) lcd_moveto(col * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
-      #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - (len) * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
-    #else
-      #define SETCURSOR(col, row) lcd_moveto(col, row)
-      #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - (len), row)
-    #endif
-
     #include "lcdprint.h"
 
     void _wrap_string(uint8_t &col, uint8_t &row, const char * const string, read_byte_cb_t cb_read_byte, const bool wordwrap=false);
@@ -505,6 +497,7 @@ public:
 
   #if PREHEAT_COUNT
     static preheat_t material_preset[PREHEAT_COUNT];
+    static PGM_P get_preheat_label(const uint8_t m);
   #endif
 
   #if HAS_LCD_MENU

commit f6a2b6409192c4e349321f42a5c0ebfd4e278b82
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jul 3 09:53:22 2020 -0500

    Clean up LCD Manual Move / UBL Mesh Edit (#18373)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 7641643409..6ebd43a37d 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -99,9 +99,6 @@
     typedef void (*screenFunc_t)();
     typedef void (*menuAction_t)();
 
-    // Manual Movement
-    extern float move_menu_scale;
-
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       void lcd_pause_show_message(const PauseMessage message,
                                   const PauseMode mode=PAUSE_MODE_SAME,
@@ -264,6 +261,35 @@
   } preheat_t;
 #endif
 
+#if HAS_LCD_MENU
+
+  // Manual Movement class
+  class ManualMove {
+  public:
+    static millis_t start_time;
+    static float menu_scale;
+    TERN_(IS_KINEMATIC, static float offset);
+    #if IS_KINEMATIC
+      static bool processing;
+    #else
+      static bool constexpr processing = false;
+    #endif
+    #if MULTI_MANUAL
+      static int8_t e_index;
+    #else
+      static int8_t constexpr e_index = 0;
+    #endif
+    static uint8_t axis;
+    static void task();
+    static void soon(AxisEnum axis
+      #if MULTI_MANUAL
+        , const int8_t eindex=-1
+      #endif
+    );
+  };
+
+#endif
+
 ////////////////////////////////////////////
 //////////// MarlinUI Singleton ////////////
 ////////////////////////////////////////////
@@ -494,29 +520,14 @@ public:
       static void enable_encoder_multiplier(const bool onoff);
     #endif
 
-    static int8_t manual_move_axis;
-    static millis_t manual_move_start_time;
-
-    #if IS_KINEMATIC
-      static float manual_move_offset;
-      static bool processing_manual_move;
-    #else
-      static constexpr bool processing_manual_move = false;
-    #endif
-
-    #if E_MANUAL > 1
-      static int8_t manual_move_e_index;
-    #else
-      static constexpr int8_t manual_move_e_index = 0;
-    #endif
+    // Manual Movement
+    static ManualMove manual_move;
 
     // Select Screen (modal NO/YES style dialog)
     static bool selection;
     static void set_selection(const bool sel) { selection = sel; }
     static bool update_selection();
 
-    static void manage_manual_move();
-
     static bool lcd_clicked;
     static bool use_click();
 
@@ -609,6 +620,9 @@ public:
     static bool external_control;
     FORCE_INLINE static void capture() { external_control = true; }
     FORCE_INLINE static void release() { external_control = false; }
+    #if ENABLED(AUTO_BED_LEVELING_UBL)
+      static void external_encoder();
+    #endif
   #else
     static constexpr bool external_control = false;
   #endif

commit f445bc26e52de36239e595ee3fbd2d25abc97258
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 25 16:39:22 2020 -0500

    Minor LCD cleanup, improvement

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 4faeea63f6..7641643409 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -494,7 +494,11 @@ public:
       static void enable_encoder_multiplier(const bool onoff);
     #endif
 
+    static int8_t manual_move_axis;
+    static millis_t manual_move_start_time;
+
     #if IS_KINEMATIC
+      static float manual_move_offset;
       static bool processing_manual_move;
     #else
       static constexpr bool processing_manual_move = false;

commit 4275466f4930ce554419f5f03f07119b8a9aec04
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 24 19:44:50 2020 -0500

    Fix issues with no hotend / bed / fan (#18395)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 6eaca31c71..4faeea63f6 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -256,6 +256,14 @@
   };
 #endif
 
+#if PREHEAT_COUNT
+  typedef struct {
+    TERN_(HAS_HOTEND,     uint16_t hotend_temp);
+    TERN_(HAS_HEATED_BED, uint16_t bed_temp   );
+    TERN_(HAS_FAN,        uint16_t fan_speed  );
+  } preheat_t;
+#endif
+
 ////////////////////////////////////////////
 //////////// MarlinUI Singleton ////////////
 ////////////////////////////////////////////
@@ -469,6 +477,10 @@ public:
     static const char * scrolled_filename(CardReader &theCard, const uint8_t maxlen, uint8_t hash, const bool doScroll);
   #endif
 
+  #if PREHEAT_COUNT
+    static preheat_t material_preset[PREHEAT_COUNT];
+  #endif
+
   #if HAS_LCD_MENU
 
     #if ENABLED(TOUCH_BUTTONS)
@@ -494,9 +506,6 @@ public:
       static constexpr int8_t manual_move_e_index = 0;
     #endif
 
-    static int16_t preheat_hotend_temp[2], preheat_bed_temp[2];
-    static uint8_t preheat_fan_speed[2];
-
     // Select Screen (modal NO/YES style dialog)
     static bool selection;
     static void set_selection(const bool sel) { selection = sel; }

commit f4c258dc2355fee871bec6e11095c7c4777b160d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 16 01:45:27 2020 -0500

    Creality Ender 3 v2 (#17719)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 6ddacaf706..6eaca31c71 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -27,6 +27,10 @@
   #include "../libs/buzzer.h"
 #endif
 
+#if ENABLED(SDSUPPORT)
+  #include "../sd/cardreader.h"
+#endif
+
 #if EITHER(HAS_LCD_MENU, ULTIPANEL_FEEDMULTIPLY)
   #define HAS_ENCODER_ACTION 1
 #endif
@@ -111,7 +115,7 @@
 
   #endif // HAS_LCD_MENU
 
-#endif
+#endif // HAS_SPI_LCD
 
 // REPRAPWORLD_KEYPAD (and ADC_KEYPAD)
 #if ENABLED(REPRAPWORLD_KEYPAD)
@@ -287,9 +291,13 @@ public:
     static void init_lcd();
     FORCE_INLINE static void refresh() { refresh(LCDVIEW_CLEAR_CALL_REDRAW); }
   #else
+    #if ENABLED(DWIN_CREALITY_LCD)
+      static void refresh();
+    #else
+      static inline void refresh()  {}
+    #endif
     static inline bool detected() { return true; }
     static inline void init_lcd() {}
-    static inline void refresh()  {}
   #endif
 
   #if HAS_DISPLAY
@@ -451,6 +459,16 @@ public:
 
   #endif
 
+  #if ENABLED(SDSUPPORT)
+    #if BOTH(SCROLL_LONG_FILENAMES, HAS_LCD_MENU)
+      #define MARLINUI_SCROLL_NAME 1
+    #endif
+    #if MARLINUI_SCROLL_NAME
+      static uint8_t filename_scroll_pos, filename_scroll_max;
+    #endif
+    static const char * scrolled_filename(CardReader &theCard, const uint8_t maxlen, uint8_t hash, const bool doScroll);
+  #endif
+
   #if HAS_LCD_MENU
 
     #if ENABLED(TOUCH_BUTTONS)
@@ -464,13 +482,6 @@ public:
       static void enable_encoder_multiplier(const bool onoff);
     #endif
 
-    #if ENABLED(SDSUPPORT)
-      #if ENABLED(SCROLL_LONG_FILENAMES)
-        static uint8_t filename_scroll_pos, filename_scroll_max;
-      #endif
-      static const char * scrolled_filename(CardReader &theCard, const uint8_t maxlen, uint8_t hash, const bool doScroll);
-    #endif
-
     #if IS_KINEMATIC
       static bool processing_manual_move;
     #else

commit 1d504e596df79b0572de23f628af457a017b6be3
Author: Victor <rhapsodyv@gmail.com>
Date:   Thu Jun 11 23:21:18 2020 -0300

    Touch-to-jog on edit screens (#18266)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 1b3ffd7660..6ddacaf706 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -418,6 +418,7 @@ public:
       #endif
 
       #if ENABLED(TOUCH_BUTTONS)
+        static bool on_edit_screen;
         static void screen_click(const uint8_t row, const uint8_t col, const uint8_t x, const uint8_t y);
       #endif
 

commit c6f3511d8492b54eac1829ec7a9cc39595b85d7b
Author: Victor <rhapsodyv@gmail.com>
Date:   Thu Jun 11 18:13:52 2020 -0300

    Touch-select MarlinUI menu items (#18239)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b17e11086f..1b3ffd7660 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -417,6 +417,10 @@ public:
         static void draw_hotend_status(const uint8_t row, const uint8_t extruder);
       #endif
 
+      #if ENABLED(TOUCH_BUTTONS)
+        static void screen_click(const uint8_t row, const uint8_t col, const uint8_t x, const uint8_t y);
+      #endif
+
       static void status_screen();
 
     #endif

commit 4724af1011010d6efe273688e2aca523b8c083b4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 27 13:38:37 2020 -0500

    Better home for 'chirp'

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 619b9baf27..b17e11086f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -267,6 +267,10 @@ public:
     static void buzz(const long duration, const uint16_t freq);
   #endif
 
+  FORCE_INLINE static void chirp() {
+    TERN_(HAS_CHIRP, buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ));
+  }
+
   #if ENABLED(LCD_HAS_STATUS_INDICATORS)
     static void update_indicators();
   #endif
@@ -398,12 +402,6 @@ public:
         static millis_t next_filament_display;
       #endif
 
-      FORCE_INLINE static void chirp() {
-        #if HAS_CHIRP
-          buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ);
-        #endif
-      }
-
       static void quick_feedback(const bool clear_buttons=true);
       #if HAS_BUZZER
         static void completion_feedback(const bool good=true);

commit 3bf0d8d1617cd2cf088499963e49662a3fd9c2fd
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 27 13:12:08 2020 -0500

    Allow disable of LCD click

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b5e1696239..619b9baf27 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -398,6 +398,12 @@ public:
         static millis_t next_filament_display;
       #endif
 
+      FORCE_INLINE static void chirp() {
+        #if HAS_CHIRP
+          buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ);
+        #endif
+      }
+
       static void quick_feedback(const bool clear_buttons=true);
       #if HAS_BUZZER
         static void completion_feedback(const bool good=true);
@@ -524,12 +530,6 @@ public:
       static void reselect_last_file();
     #endif
 
-    #if ENABLED(G26_MESH_VALIDATION)
-      FORCE_INLINE static void chirp() {
-        TERN_(HAS_BUZZER, buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ));
-      }
-    #endif
-
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       static void ubl_plot(const uint8_t x_plot, const uint8_t y_plot);
     #endif

commit 52aa459a2dc08a8f803ad9ffb7aa173dc449637f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 10 00:12:56 2020 -0500

    Improved EEPROM boot error (#17916)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 7df6b42e00..b5e1696239 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -544,14 +544,40 @@ public:
 
   #endif
 
-  #define LCD_HAS_WAIT_FOR_MOVE EITHER(DELTA_CALIBRATION_MENU, DELTA_AUTO_CALIBRATION) || (ENABLED(LCD_BED_LEVELING) && EITHER(PROBE_MANUALLY, MESH_BED_LEVELING))
+  //
+  // EEPROM: Reset / Init / Load / Store
+  //
+  #if HAS_LCD_MENU
+    static void reset_settings();
+  #endif
+
+  #if ENABLED(EEPROM_SETTINGS)
+    #if HAS_LCD_MENU
+      static void init_eeprom();
+      static void load_settings();
+      static void store_settings();
+    #endif
+    #if DISABLED(EEPROM_AUTO_INIT)
+      static void eeprom_alert(const uint8_t msgid);
+      static inline void eeprom_alert_crc()     { eeprom_alert(0); }
+      static inline void eeprom_alert_index()   { eeprom_alert(1); }
+      static inline void eeprom_alert_version() { eeprom_alert(2); }
+    #endif
+  #endif
 
-  #if LCD_HAS_WAIT_FOR_MOVE
+  //
+  // Special handling if a move is underway
+  //
+  #if EITHER(DELTA_CALIBRATION_MENU, DELTA_AUTO_CALIBRATION) || (ENABLED(LCD_BED_LEVELING) && EITHER(PROBE_MANUALLY, MESH_BED_LEVELING))
+    #define LCD_HAS_WAIT_FOR_MOVE 1
     static bool wait_for_move;
   #else
     static constexpr bool wait_for_move = false;
   #endif
 
+  //
+  // Block interaction while under external control
+  //
   #if HAS_LCD_MENU && EITHER(AUTO_BED_LEVELING_UBL, G26_MESH_VALIDATION)
     static bool external_control;
     FORCE_INLINE static void capture() { external_control = true; }
@@ -615,12 +641,10 @@ private:
   #endif
 
   #if HAS_SPI_LCD
-    #if HAS_LCD_MENU
-      #if LCD_TIMEOUT_TO_STATUS > 0
-        static bool defer_return_to_status;
-      #else
-        static constexpr bool defer_return_to_status = false;
-      #endif
+    #if HAS_LCD_MENU && LCD_TIMEOUT_TO_STATUS > 0
+      static bool defer_return_to_status;
+    #else
+      static constexpr bool defer_return_to_status = false;
     #endif
     static void draw_status_screen();
   #endif

commit 7c26a54d3f2434c4d578f58af011a76dd298d4e3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 6 03:34:05 2020 -0500

    Fix, clarify LCD_TIMEOUT_TO_STATUS
    
    Replaces #17887
    
    Co-Authored-By: Daniel Callander <knifa@users.noreply.github.com>

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 33d7de2748..7df6b42e00 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -508,7 +508,11 @@ public:
     #endif
 
     FORCE_INLINE static void defer_status_screen(const bool defer=true) {
-      TERN(LCD_TIMEOUT_TO_STATUS, defer_return_to_status = defer, UNUSED(defer));
+      #if LCD_TIMEOUT_TO_STATUS > 0
+        defer_return_to_status = defer;
+      #else
+        UNUSED(defer);
+      #endif
     }
 
     static inline void goto_previous_screen_no_defer() {
@@ -612,7 +616,7 @@ private:
 
   #if HAS_SPI_LCD
     #if HAS_LCD_MENU
-      #if LCD_TIMEOUT_TO_STATUS
+      #if LCD_TIMEOUT_TO_STATUS > 0
         static bool defer_return_to_status;
       #else
         static constexpr bool defer_return_to_status = false;

commit c536b8de629807b489f054051bb120457f112a11
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Apr 25 17:53:06 2020 -0500

    Apply ternary macros

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index f6d2e86cfd..33d7de2748 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -45,6 +45,10 @@
   #define HAS_SLOW_BUTTONS 1
 #endif
 
+#if E_MANUAL > 1
+  #define MULTI_MANUAL 1
+#endif
+
 #if HAS_SPI_LCD
 
   #include "../MarlinCore.h"
@@ -491,15 +495,9 @@ public:
     static void save_previous_screen();
 
     // goto_previous_screen and go_back may also be used as menu item callbacks
-    #if ENABLED(TURBO_BACK_MENU_ITEM)
-      static void _goto_previous_screen(const bool is_back);
-      static inline void goto_previous_screen() { _goto_previous_screen(false); }
-      static inline void go_back()              { _goto_previous_screen(true); }
-    #else
-      static void _goto_previous_screen();
-      FORCE_INLINE static void goto_previous_screen() { _goto_previous_screen(); }
-      FORCE_INLINE static void go_back()              { _goto_previous_screen(); }
-    #endif
+    static void _goto_previous_screen(TERN_(TURBO_BACK_MENU_ITEM, const bool is_back));
+    static inline void goto_previous_screen() { _goto_previous_screen(TERN_(TURBO_BACK_MENU_ITEM, false)); }
+    static inline void go_back()              { _goto_previous_screen(TERN_(TURBO_BACK_MENU_ITEM, true)); }
 
     static void return_to_status();
     static inline bool on_status_screen() { return currentScreen == status_screen; }
@@ -510,11 +508,7 @@ public:
     #endif
 
     FORCE_INLINE static void defer_status_screen(const bool defer=true) {
-      #if LCD_TIMEOUT_TO_STATUS
-        defer_return_to_status = defer;
-      #else
-        UNUSED(defer);
-      #endif
+      TERN(LCD_TIMEOUT_TO_STATUS, defer_return_to_status = defer, UNUSED(defer));
     }
 
     static inline void goto_previous_screen_no_defer() {
@@ -582,11 +576,7 @@ public:
 
     static uint32_t encoderPosition;
 
-    #if ENABLED(REVERSE_ENCODER_DIRECTION)
-      #define ENCODERBASE -1
-    #else
-      #define ENCODERBASE +1
-    #endif
+    #define ENCODERBASE (TERN(REVERSE_ENCODER_DIRECTION, -1, +1))
 
     #if EITHER(REVERSE_MENU_DIRECTION, REVERSE_SELECT_DIRECTION)
       static int8_t encoderDirection;

commit ab2b98e4255b0b9579af9627e884ac3dfc1d30bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 21:42:38 2020 -0500

    Apply composite tests

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 1258d9f30e..f6d2e86cfd 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -27,7 +27,7 @@
   #include "../libs/buzzer.h"
 #endif
 
-#if HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY)
+#if EITHER(HAS_LCD_MENU, ULTIPANEL_FEEDMULTIPLY)
   #define HAS_ENCODER_ACTION 1
 #endif
 #if (!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTONS_EXIST(EN1, EN2)

commit 69f211cf78c1b25469fbd1f6e4c28e0aa6dd6b0a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 23 15:14:32 2020 -0500

    Add empty ui.completion_feedback

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 5a4805edf7..1258d9f30e 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -397,6 +397,8 @@ public:
       static void quick_feedback(const bool clear_buttons=true);
       #if HAS_BUZZER
         static void completion_feedback(const bool good=true);
+      #else
+        static inline void completion_feedback(const bool=true) {}
       #endif
 
       #if DISABLED(LIGHTWEIGHT_UI)

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0c7c03372f..5a4805edf7 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -41,7 +41,9 @@
 #endif
 
 // I2C buttons must be read in the main thread
-#define HAS_SLOW_BUTTONS EITHER(LCD_I2C_VIKI, LCD_I2C_PANELOLU2)
+#if EITHER(LCD_I2C_VIKI, LCD_I2C_PANELOLU2)
+  #define HAS_SLOW_BUTTONS 1
+#endif
 
 #if HAS_SPI_LCD
 
@@ -64,11 +66,7 @@
     uint8_t get_ADC_keyValue();
   #endif
 
-  #if ENABLED(TOUCH_BUTTONS)
-    #define LCD_UPDATE_INTERVAL 50
-  #else
-    #define LCD_UPDATE_INTERVAL 100
-  #endif
+  #define LCD_UPDATE_INTERVAL TERN(TOUCH_BUTTONS, 50, 100)
 
   #if HAS_LCD_MENU
 
@@ -207,12 +205,12 @@
   #define BL_DW 4   // Down
   #define BL_RI 3   // Right
   #define BL_ST 2   // Red Button
-  #define B_LE (_BV(BL_LE))
-  #define B_UP (_BV(BL_UP))
-  #define B_MI (_BV(BL_MI))
-  #define B_DW (_BV(BL_DW))
-  #define B_RI (_BV(BL_RI))
-  #define B_ST (_BV(BL_ST))
+  #define B_LE _BV(BL_LE)
+  #define B_UP _BV(BL_UP)
+  #define B_MI _BV(BL_MI)
+  #define B_DW _BV(BL_DW)
+  #define B_RI _BV(BL_RI)
+  #define B_ST _BV(BL_ST)
 
   #ifndef BUTTON_CLICK
     #define BUTTON_CLICK() (buttons & (B_MI|B_ST))
@@ -258,9 +256,7 @@ class MarlinUI {
 public:
 
   MarlinUI() {
-    #if HAS_LCD_MENU
-      currentScreen = status_screen;
-    #endif
+    TERN_(HAS_LCD_MENU, currentScreen = status_screen);
   }
 
   #if HAS_BUZZER
@@ -530,9 +526,7 @@ public:
 
     #if ENABLED(G26_MESH_VALIDATION)
       FORCE_INLINE static void chirp() {
-        #if HAS_BUZZER
-          buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ);
-        #endif
+        TERN_(HAS_BUZZER, buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ));
       }
     #endif
 
@@ -605,15 +599,11 @@ public:
     }
 
     FORCE_INLINE static void encoder_direction_menus() {
-      #if ENABLED(REVERSE_MENU_DIRECTION)
-        encoderDirection = -(ENCODERBASE);
-      #endif
+      TERN_(REVERSE_MENU_DIRECTION, encoderDirection = -(ENCODERBASE));
     }
 
     FORCE_INLINE static void encoder_direction_select() {
-      #if ENABLED(REVERSE_SELECT_DIRECTION)
-        encoderDirection = -(ENCODERBASE);
-      #endif
+      TERN_(REVERSE_SELECT_DIRECTION, encoderDirection = -(ENCODERBASE));
     }
 
   #else

commit e4903396d4ac2fa9b89dd535dae9c3e8a68b3526
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 11 20:36:17 2020 -0500

    Fix up pausing / parking display (#17460)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0be82ff1f6..0c7c03372f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -624,8 +624,6 @@ public:
 
 private:
 
-  static void _synchronize();
-
   #if HAS_DISPLAY
     static void finish_status(const bool persist);
   #endif

commit 65f6a373b0a77da23f0758d5d1520e404436cec0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 4 00:08:25 2020 -0500

    Refactor SD detect handler (#17380)
    
    Co-Authored-By: Eric Ptak <trouch@users.noreply.github.com>

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2737a1a648..0be82ff1f6 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -274,6 +274,10 @@ public:
   // LCD implementations
   static void clear_lcd();
 
+  #if ENABLED(SDSUPPORT)
+    static void media_changed(const uint8_t old_stat, const uint8_t stat);
+  #endif
+
   #if HAS_SPI_LCD
     static bool detected();
     static void init_lcd();

commit 9f86dde19525af511b07239c23d93d586a045122
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 2 01:22:48 2020 -0500

    Clean up UI declarations, apply TERN_

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 1bcf9956fe..2737a1a648 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -273,7 +273,16 @@ public:
 
   // LCD implementations
   static void clear_lcd();
-  static void init_lcd();
+
+  #if HAS_SPI_LCD
+    static bool detected();
+    static void init_lcd();
+    FORCE_INLINE static void refresh() { refresh(LCDVIEW_CLEAR_CALL_REDRAW); }
+  #else
+    static inline bool detected() { return true; }
+    static inline void init_lcd() {}
+    static inline void refresh()  {}
+  #endif
 
   #if HAS_DISPLAY
 
@@ -332,12 +341,9 @@ public:
 
       static millis_t next_button_update_ms;
 
-      static bool detected();
-
       static LCDViewAction lcdDrawUpdate;
       FORCE_INLINE static bool should_draw() { return bool(lcdDrawUpdate); }
       FORCE_INLINE static void refresh(const LCDViewAction type) { lcdDrawUpdate = type; }
-      FORCE_INLINE static void refresh() { refresh(LCDVIEW_CLEAR_CALL_REDRAW); }
 
       #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
         static void draw_custom_bootscreen(const uint8_t frame=0);
@@ -403,8 +409,6 @@ public:
 
       static void status_screen();
 
-    #else
-      static void refresh() {}
     #endif
 
     static bool get_blink();
@@ -418,13 +422,12 @@ public:
   #else // No LCD
 
     // Send status to host as a notification
-    void set_status(const char* message, const bool=false);
-    void set_status_P(PGM_P message, const int8_t=0);
-    void status_printf_P(const uint8_t, PGM_P message, ...);
+    static void set_status(const char* message, const bool=false);
+    static void set_status_P(PGM_P message, const int8_t=0);
+    static void status_printf_P(const uint8_t, PGM_P message, ...);
 
     static inline void init() {}
     static inline void update() {}
-    static inline void refresh() {}
     static inline void return_to_status() {}
     static inline void set_alert_status_P(PGM_P const) {}
     static inline void reset_status(const bool=false) {}

commit 0f39386d9b7458ac10e3186521d398a4cb88f988
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Mar 9 15:03:57 2020 -0500

    Make BOOTSCREEN_TIMEOUT generally available

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index a16103ba41..1bcf9956fe 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -345,6 +345,9 @@ public:
       #endif
 
       #if ENABLED(SHOW_BOOTSCREEN)
+        #ifndef BOOTSCREEN_TIMEOUT
+          #define BOOTSCREEN_TIMEOUT 2500
+        #endif
         static void draw_marlin_bootscreen(const bool line2=false);
         static void show_marlin_bootscreen();
         static void show_bootscreen();

commit 64d092935b27ff89955f0430eef5815b15e5a92d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 7 22:20:41 2020 -0600

    More useful ENABLED / DISABLED macros (#17054)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index f614e2009b..a16103ba41 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -27,10 +27,18 @@
   #include "../libs/buzzer.h"
 #endif
 
-#define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
-#define HAS_ENCODER_WHEEL  ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTONS_EXIST(EN1, EN2))
-#define HAS_DIGITAL_BUTTONS (HAS_ENCODER_WHEEL || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT))
-#define HAS_SHIFT_ENCODER   (!HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_SPI_LCD && DISABLED(NEWPANEL))))
+#if HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY)
+  #define HAS_ENCODER_ACTION 1
+#endif
+#if (!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTONS_EXIST(EN1, EN2)
+  #define HAS_ENCODER_WHEEL 1
+#endif
+#if HAS_ENCODER_WHEEL || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT)
+  #define HAS_DIGITAL_BUTTONS 1
+#endif
+#if !HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_SPI_LCD && DISABLED(NEWPANEL)))
+  #define HAS_SHIFT_ENCODER 1
+#endif
 
 // I2C buttons must be read in the main thread
 #define HAS_SLOW_BUTTONS EITHER(LCD_I2C_VIKI, LCD_I2C_PANELOLU2)

commit cdcd45d651adb4b8997ea27d8815fa59b3efea14
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Wed Feb 26 04:04:02 2020 -0500

    Set LCD status for EEPROM errors (#16977)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 8a328c4b91..f614e2009b 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -402,7 +402,7 @@ public:
     static void set_status(const char* const message, const bool persist=false);
     static void set_status_P(PGM_P const message, const int8_t level=0);
     static void status_printf_P(const uint8_t level, PGM_P const fmt, ...);
-    static void reset_status();
+    static void reset_status(const bool no_welcome=false);
 
   #else // No LCD
 
@@ -416,7 +416,7 @@ public:
     static inline void refresh() {}
     static inline void return_to_status() {}
     static inline void set_alert_status_P(PGM_P const) {}
-    static inline void reset_status() {}
+    static inline void reset_status(const bool=false) {}
     static inline void reset_alert_level() {}
     static constexpr bool has_status() { return false; }
 

commit 0268c1d02c33e6568aa579cfb9e4058603cbcb3c
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Tue Feb 4 01:24:11 2020 -0600

    STM32duino - Use SDIO for onboard SD (#16756)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 3317ac805b..8a328c4b91 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -28,7 +28,7 @@
 #endif
 
 #define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
-#define HAS_ENCODER_WHEEL  ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTON_EXISTS(EN1, EN2))
+#define HAS_ENCODER_WHEEL  ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTONS_EXIST(EN1, EN2))
 #define HAS_DIGITAL_BUTTONS (HAS_ENCODER_WHEEL || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT))
 #define HAS_SHIFT_ENCODER   (!HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_SPI_LCD && DISABLED(NEWPANEL))))
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index c98d3d5627..3317ac805b 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 95d5a0c480d655bf96a6989ad3df0f240ae343b2
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sat Jan 25 22:02:06 2020 -0800

    Fix DELTA_CALIBRATION_MENU recursive call (#16656)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index c56f0b8350..c98d3d5627 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -532,10 +532,12 @@ public:
 
   #endif
 
-  #if ENABLED(LCD_BED_LEVELING) && EITHER(PROBE_MANUALLY, MESH_BED_LEVELING)
-    static bool wait_for_bl_move;
+  #define LCD_HAS_WAIT_FOR_MOVE EITHER(DELTA_CALIBRATION_MENU, DELTA_AUTO_CALIBRATION) || (ENABLED(LCD_BED_LEVELING) && EITHER(PROBE_MANUALLY, MESH_BED_LEVELING))
+
+  #if LCD_HAS_WAIT_FOR_MOVE
+    static bool wait_for_move;
   #else
-    static constexpr bool wait_for_bl_move = false;
+    static constexpr bool wait_for_move = false;
   #endif
 
   #if HAS_LCD_MENU && EITHER(AUTO_BED_LEVELING_UBL, G26_MESH_VALIDATION)

commit d0e1166cce60381fbdad1105d13765806a525d99
Author: Dirk O. Kaar <19971886+dok-net@users.noreply.github.com>
Date:   Fri Jan 3 02:01:38 2020 +0100

    Fix Visual Micro "Arduino IDE for Visual Studio" support (#16418)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 71e820e57f..c56f0b8350 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -37,7 +37,7 @@
 
 #if HAS_SPI_LCD
 
-  #include "../Marlin.h"
+  #include "../MarlinCore.h"
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     #include "../feature/pause.h"

commit ab61c09bffd8d9fa0bf696e9fbd057a85185dcad
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Fri Dec 6 07:47:50 2019 +0100

    Improve touch buttons behavior (#16109)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 7fc3a5f731..71e820e57f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -27,10 +27,10 @@
   #include "../libs/buzzer.h"
 #endif
 
-#define HAS_DIGITAL_BUTTONS (!HAS_ADC_BUTTONS && ENABLED(NEWPANEL) || BUTTON_EXISTS(EN1, EN2) || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT))
-#define HAS_SHIFT_ENCODER   (!HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_SPI_LCD && DISABLED(NEWPANEL))))
-#define HAS_ENCODER_WHEEL  ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTON_EXISTS(EN1, EN2))
 #define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
+#define HAS_ENCODER_WHEEL  ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTON_EXISTS(EN1, EN2))
+#define HAS_DIGITAL_BUTTONS (HAS_ENCODER_WHEEL || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT))
+#define HAS_SHIFT_ENCODER   (!HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_SPI_LCD && DISABLED(NEWPANEL))))
 
 // I2C buttons must be read in the main thread
 #define HAS_SLOW_BUTTONS EITHER(LCD_I2C_VIKI, LCD_I2C_PANELOLU2)
@@ -425,6 +425,7 @@ public:
   #if HAS_LCD_MENU
 
     #if ENABLED(TOUCH_BUTTONS)
+      static uint8_t touch_buttons;
       static uint8_t repeat_delay;
     #endif
 

commit 7126a5e5a7f2bcab61fd4ae89224fdb0cac9502e
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Dec 1 18:39:28 2019 -0500

    Add Host Prompt Notification Method (#15942)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 47d5a87ab7..7fc3a5f731 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -406,14 +406,16 @@ public:
 
   #else // No LCD
 
+    // Send status to host as a notification
+    void set_status(const char* message, const bool=false);
+    void set_status_P(PGM_P message, const int8_t=0);
+    void status_printf_P(const uint8_t, PGM_P message, ...);
+
     static inline void init() {}
     static inline void update() {}
     static inline void refresh() {}
     static inline void return_to_status() {}
     static inline void set_alert_status_P(PGM_P const) {}
-    static inline void set_status(const char* const, const bool=false) {}
-    static inline void set_status_P(PGM_P const, const int8_t=0) {}
-    static inline void status_printf_P(const uint8_t, PGM_P const, ...) {}
     static inline void reset_status() {}
     static inline void reset_alert_level() {}
     static constexpr bool has_status() { return false; }

commit 27cb4db80eae73eb842f1a944260517bb8783eb3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 14 20:30:30 2019 -0600

    Reduced string storage using tokens (#15593)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 752fd1642d..47d5a87ab7 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -467,6 +467,7 @@ public:
     static void synchronize(PGM_P const msg=nullptr);
 
     static screenFunc_t currentScreen;
+    static bool screen_changed;
     static void goto_screen(const screenFunc_t screen, const uint16_t encoder=0, const uint8_t top=0, const uint8_t items=0);
     static void save_previous_screen();
 

commit 602ca5dea6b613af44629023bd438285abd0fe45
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 13 02:07:09 2019 -0600

    No USE_M73_REMAINING_TIME without LCD_SET_PROGRESS_MANUALLY

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 48bfe3500d..752fd1642d 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -304,7 +304,7 @@ public:
         static void set_progress(const progress_t p) { progress_override = _MIN(p, 100U * (PROGRESS_SCALE)); }
         static void set_progress_done() { progress_override = (PROGRESS_MASK + 1U) + 100U * (PROGRESS_SCALE); }
         static void progress_reset() { if (progress_override & (PROGRESS_MASK + 1U)) set_progress(0); }
-        #if ENABLED(USE_M73_REMAINING_TIME)
+        #if BOTH(LCD_SET_PROGRESS_MANUALLY, USE_M73_REMAINING_TIME)
           static uint32_t remaining_time;
           FORCE_INLINE static void set_remaining_time(const uint32_t r) { remaining_time = r; }
           FORCE_INLINE static uint32_t get_remaining_time() { return remaining_time; }

commit e110f5abce90d139a768242780780832b09aa297
Author: Roman Moravčík <roman.moravcik@gmail.com>
Date:   Wed Nov 13 02:36:54 2019 +0100

    M73 R : Set Remaining Time (#15549)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index d8f9e43a95..48bfe3500d 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -304,10 +304,16 @@ public:
         static void set_progress(const progress_t p) { progress_override = _MIN(p, 100U * (PROGRESS_SCALE)); }
         static void set_progress_done() { progress_override = (PROGRESS_MASK + 1U) + 100U * (PROGRESS_SCALE); }
         static void progress_reset() { if (progress_override & (PROGRESS_MASK + 1U)) set_progress(0); }
+        #if ENABLED(USE_M73_REMAINING_TIME)
+          static uint32_t remaining_time;
+          FORCE_INLINE static void set_remaining_time(const uint32_t r) { remaining_time = r; }
+          FORCE_INLINE static uint32_t get_remaining_time() { return remaining_time; }
+          FORCE_INLINE static void reset_remaining_time() { set_remaining_time(0); }
+        #endif
       #endif
       static progress_t _get_progress();
       #if HAS_PRINT_PROGRESS_PERMYRIAD
-        static uint16_t get_progress_permyriad() { return _get_progress(); }
+        FORCE_INLINE static uint16_t get_progress_permyriad() { return _get_progress(); }
       #endif
       static uint8_t get_progress_percent() { return uint8_t(_get_progress() / (PROGRESS_SCALE)); }
     #else
@@ -321,9 +327,9 @@ public:
       static bool detected();
 
       static LCDViewAction lcdDrawUpdate;
-      static inline bool should_draw() { return bool(lcdDrawUpdate); }
-      static inline void refresh(const LCDViewAction type) { lcdDrawUpdate = type; }
-      static inline void refresh() { refresh(LCDVIEW_CLEAR_CALL_REDRAW); }
+      FORCE_INLINE static bool should_draw() { return bool(lcdDrawUpdate); }
+      FORCE_INLINE static void refresh(const LCDViewAction type) { lcdDrawUpdate = type; }
+      FORCE_INLINE static void refresh() { refresh(LCDVIEW_CLEAR_CALL_REDRAW); }
 
       #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
         static void draw_custom_bootscreen(const uint8_t frame=0);
@@ -353,7 +359,7 @@ public:
           static void draw_progress_bar(const uint8_t percent);
           #if PROGRESS_MSG_EXPIRE > 0
             static millis_t expire_status_ms; // = 0
-            static inline void reset_progress_bar_timeout() { expire_status_ms = 0; }
+            FORCE_INLINE static void reset_progress_bar_timeout() { expire_status_ms = 0; }
           #endif
         #endif
 
@@ -364,7 +370,7 @@ public:
       #if HAS_LCD_CONTRAST
         static int16_t contrast;
         static void set_contrast(const int16_t value);
-        static inline void refresh_contrast() { set_contrast(contrast); }
+        FORCE_INLINE static void refresh_contrast() { set_contrast(contrast); }
       #endif
 
       #if BOTH(FILAMENT_LCD_DISPLAY, SDSUPPORT)
@@ -477,13 +483,13 @@ public:
 
     static void return_to_status();
     static inline bool on_status_screen() { return currentScreen == status_screen; }
-    static inline void run_current_screen() { (*currentScreen)(); }
+    FORCE_INLINE static void run_current_screen() { (*currentScreen)(); }
 
     #if ENABLED(LIGHTWEIGHT_UI)
       static void lcd_in_status(const bool inStatus);
     #endif
 
-    static inline void defer_status_screen(const bool defer=true) {
+    FORCE_INLINE static void defer_status_screen(const bool defer=true) {
       #if LCD_TIMEOUT_TO_STATUS
         defer_return_to_status = defer;
       #else
@@ -501,7 +507,7 @@ public:
     #endif
 
     #if ENABLED(G26_MESH_VALIDATION)
-      static inline void chirp() {
+      FORCE_INLINE static void chirp() {
         #if HAS_BUZZER
           buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ);
         #endif
@@ -518,7 +524,7 @@ public:
 
     static constexpr bool lcd_clicked = false;
     static constexpr bool on_status_screen() { return true; }
-    static inline void run_current_screen() { status_screen(); }
+    FORCE_INLINE static void run_current_screen() { status_screen(); }
 
   #endif
 
@@ -564,22 +570,27 @@ public:
 
     #if EITHER(REVERSE_MENU_DIRECTION, REVERSE_SELECT_DIRECTION)
       static int8_t encoderDirection;
-      static inline void encoder_direction_normal() { encoderDirection = ENCODERBASE; }
     #else
       static constexpr int8_t encoderDirection = ENCODERBASE;
-      static inline void encoder_direction_normal() {}
     #endif
 
-    #if ENABLED(REVERSE_MENU_DIRECTION)
-      static inline void encoder_direction_menus()  { encoderDirection = -(ENCODERBASE); }
-    #else
-      static inline void encoder_direction_menus()  {}
-    #endif
-    #if ENABLED(REVERSE_SELECT_DIRECTION)
-      static inline void encoder_direction_select()  { encoderDirection = -(ENCODERBASE); }
-    #else
-      static inline void encoder_direction_select()  {}
-    #endif
+    FORCE_INLINE static void encoder_direction_normal() {
+      #if EITHER(REVERSE_MENU_DIRECTION, REVERSE_SELECT_DIRECTION)
+        encoderDirection = ENCODERBASE;
+      #endif
+    }
+
+    FORCE_INLINE static void encoder_direction_menus() {
+      #if ENABLED(REVERSE_MENU_DIRECTION)
+        encoderDirection = -(ENCODERBASE);
+      #endif
+    }
+
+    FORCE_INLINE static void encoder_direction_select() {
+      #if ENABLED(REVERSE_SELECT_DIRECTION)
+        encoderDirection = -(ENCODERBASE);
+      #endif
+    }
 
   #else
 

commit b3f81eead5179d70e4e205f3ff0c9a8617ad780d
Author: Jason Smith <jason.inet@gmail.com>
Date:   Sat Nov 9 17:27:30 2019 -0800

    Fix/improve TURBO_BACK_MENU_ITEM (#15856)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 9af9be4194..d8f9e43a95 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -463,16 +463,16 @@ public:
     static screenFunc_t currentScreen;
     static void goto_screen(const screenFunc_t screen, const uint16_t encoder=0, const uint8_t top=0, const uint8_t items=0);
     static void save_previous_screen();
-    static void goto_previous_screen(
-      #if ENABLED(TURBO_BACK_MENU_ITEM)
-        const bool is_back
-      #endif
-    );
 
+    // goto_previous_screen and go_back may also be used as menu item callbacks
     #if ENABLED(TURBO_BACK_MENU_ITEM)
-      // Various menu items require a "void (*)()" to point to
-      // this function so a default argument *won't* work
-      static inline void goto_previous_screen() { goto_previous_screen(false); }
+      static void _goto_previous_screen(const bool is_back);
+      static inline void goto_previous_screen() { _goto_previous_screen(false); }
+      static inline void go_back()              { _goto_previous_screen(true); }
+    #else
+      static void _goto_previous_screen();
+      FORCE_INLINE static void goto_previous_screen() { _goto_previous_screen(); }
+      FORCE_INLINE static void go_back()              { _goto_previous_screen(); }
     #endif
 
     static void return_to_status();

commit 786617e3754d704c201e7231ea647dbb90a5450a
Author: Axel <ansepulveda@uc.cl>
Date:   Wed Nov 6 19:52:28 2019 -0300

    Fix RAMPS + VIKI i2c (#15811)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 27212835f1..9af9be4194 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -153,6 +153,8 @@
 
   #if ENABLED(LCD_I2C_VIKI)
 
+    #include <LiquidTWI2.h>
+
     #define B_I2C_BTN_OFFSET 3 // (the first three bit positions reserved for EN_A, EN_B, EN_C)
 
     // button and encoder bit positions within 'buttons'

commit f00b48f9a8da77d0d603b74c843359b82ee306e3
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 21 18:34:29 2019 -0500

    Expand encoder value range

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 31a94a124d..27212835f1 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -552,7 +552,7 @@ public:
       static void wait_for_release();
     #endif
 
-    static uint16_t encoderPosition;
+    static uint32_t encoderPosition;
 
     #if ENABLED(REVERSE_ENCODER_DIRECTION)
       #define ENCODERBASE -1

commit b20d5a7cc627164877c95859baaa614f8afc7b99
Author: LinFor <linfor@gmail.com>
Date:   Fri Oct 11 05:03:33 2019 +0300

    Estimate Remaining Time (graphical display) (#15497)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b963d90e54..31a94a124d 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -288,15 +288,28 @@ public:
     static void resume_print();
 
     #if HAS_PRINT_PROGRESS
+      #if HAS_PRINT_PROGRESS_PERMYRIAD
+        typedef uint16_t progress_t;
+        #define PROGRESS_SCALE 100U
+        #define PROGRESS_MASK 0x7FFF
+      #else
+        typedef uint8_t progress_t;
+        #define PROGRESS_SCALE 1U
+        #define PROGRESS_MASK 0x7F
+      #endif
       #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
-        static uint8_t progress_override;
-        static void set_progress(const uint8_t progress) { progress_override = _MIN(progress, 100); }
-        static void set_progress_done() { set_progress(0x80 + 100); }
-        static void progress_reset() { if (progress_override & 0x80) set_progress(0); }
+        static progress_t progress_override;
+        static void set_progress(const progress_t p) { progress_override = _MIN(p, 100U * (PROGRESS_SCALE)); }
+        static void set_progress_done() { progress_override = (PROGRESS_MASK + 1U) + 100U * (PROGRESS_SCALE); }
+        static void progress_reset() { if (progress_override & (PROGRESS_MASK + 1U)) set_progress(0); }
+      #endif
+      static progress_t _get_progress();
+      #if HAS_PRINT_PROGRESS_PERMYRIAD
+        static uint16_t get_progress_permyriad() { return _get_progress(); }
       #endif
-      static uint8_t get_progress();
+      static uint8_t get_progress_percent() { return uint8_t(_get_progress() / (PROGRESS_SCALE)); }
     #else
-      static constexpr uint8_t get_progress() { return 0; }
+      static constexpr uint8_t get_progress_percent() { return 0; }
     #endif
 
     #if HAS_SPI_LCD

commit b119c1401749037bc23352633f629268217ee5bf
Author: ANMay-ru <49490265+ANMay-ru@users.noreply.github.com>
Date:   Thu Oct 10 08:41:44 2019 +0700

    Clean up LCD print, align (#15498)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0e27e7eb19..b963d90e54 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -67,13 +67,9 @@
     #if HAS_GRAPHICAL_LCD
       #define SETCURSOR(col, row) lcd_moveto(col * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
       #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - (len) * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
-      #define LCDPRINT(p) u8g.print(p)
-      #define LCDWRITE(c) u8g.print(c)
     #else
       #define SETCURSOR(col, row) lcd_moveto(col, row)
       #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - (len), row)
-      #define LCDPRINT(p) lcd_put_u8str(p)
-      #define LCDWRITE(c) lcd_put_wchar(c)
     #endif
 
     #include "lcdprint.h"

commit 6a865a614620d71521bd3dc032adffe0bf82378c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Oct 9 18:46:10 2019 -0600

    Multi-language support (#15453)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 72f6ec2cb9..0e27e7eb19 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -380,7 +380,7 @@ public:
     #endif
 
     static bool get_blink();
-    static void kill_screen(PGM_P const lcd_msg);
+    static void kill_screen(PGM_P const lcd_error, PGM_P const lcd_component);
     static void draw_kill_screen();
     static void set_status(const char* const message, const bool persist=false);
     static void set_status_P(PGM_P const message, const int8_t level=0);
@@ -598,5 +598,8 @@ private:
 
 extern MarlinUI ui;
 
-#define LCD_MESSAGEPGM(x)      ui.set_status_P(PSTR(x))
-#define LCD_ALERTMESSAGEPGM(x) ui.set_alert_status_P(PSTR(x))
+#define LCD_MESSAGEPGM_P(x)      ui.set_status_P(x)
+#define LCD_ALERTMESSAGEPGM_P(x) ui.set_alert_status_P(x)
+
+#define LCD_MESSAGEPGM(x)        LCD_MESSAGEPGM_P(GET_TEXT(x))
+#define LCD_ALERTMESSAGEPGM(x)   LCD_ALERTMESSAGEPGM_P(GET_TEXT(x))

commit 58f81f8e7ed43091d8589d6e1e972d750c6de987
Author: LinFor <linfor@gmail.com>
Date:   Tue Oct 8 23:24:14 2019 +0300

    Followup to progress override (#15488)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index c33337df8c..72f6ec2cb9 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -293,10 +293,10 @@ public:
 
     #if HAS_PRINT_PROGRESS
       #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
-        static uint8_t progress_bar_percent;
-        static void set_progress(const uint8_t progress) { progress_bar_percent = _MIN(progress, 100); }
+        static uint8_t progress_override;
+        static void set_progress(const uint8_t progress) { progress_override = _MIN(progress, 100); }
         static void set_progress_done() { set_progress(0x80 + 100); }
-        static void progress_reset() { if (progress_bar_percent & 0x80) set_progress(0); }
+        static void progress_reset() { if (progress_override & 0x80) set_progress(0); }
       #endif
       static uint8_t get_progress();
     #else

commit e3fd0519b323182a3d096eca8209c4eaf56b6802
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 30 21:44:07 2019 -0500

    Reduce need for UNUSED

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 32c51cd249..c33337df8c 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -273,7 +273,7 @@ public:
 
     static void init();
     static void update();
-    static void set_alert_status_P(PGM_P message);
+    static void set_alert_status_P(PGM_P const message);
 
     static char status_message[];
     static bool has_status();
@@ -393,10 +393,10 @@ public:
     static inline void update() {}
     static inline void refresh() {}
     static inline void return_to_status() {}
-    static inline void set_alert_status_P(PGM_P message) { UNUSED(message); }
-    static inline void set_status(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
-    static inline void set_status_P(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
-    static inline void status_printf_P(const uint8_t level, PGM_P const fmt, ...) { UNUSED(level); UNUSED(fmt); }
+    static inline void set_alert_status_P(PGM_P const) {}
+    static inline void set_status(const char* const, const bool=false) {}
+    static inline void set_status_P(PGM_P const, const int8_t=0) {}
+    static inline void status_printf_P(const uint8_t, PGM_P const, ...) {}
     static inline void reset_status() {}
     static inline void reset_alert_level() {}
     static constexpr bool has_status() { return false; }

commit 50e4545255605eb506c20eb107270038b0fe7bdb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 29 04:25:39 2019 -0500

    Add custom types for position (#15204)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index f3dcb3a381..32c51cd249 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -90,7 +90,6 @@
     typedef void (*menuAction_t)();
 
     // Manual Movement
-    constexpr feedRate_t manual_feedrate_mm_m[XYZE] = MANUAL_FEEDRATE;
     extern float move_menu_scale;
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)

commit 455dabb18334c89878a75be62bccebd9f537574d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 26 01:28:09 2019 -0500

    Add a feedRate_t data type (#15349)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 47f5806a2f..f3dcb3a381 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -90,7 +90,7 @@
     typedef void (*menuAction_t)();
 
     // Manual Movement
-    constexpr float manual_feedrate_mm_m[XYZE] = MANUAL_FEEDRATE;
+    constexpr feedRate_t manual_feedrate_mm_m[XYZE] = MANUAL_FEEDRATE;
     extern float move_menu_scale;
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)

commit 3f129b657466d31757ed41369015a772ca9f09f7
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Fri Sep 13 10:14:24 2019 +0700

    Touch Buttons variable repeat delay (#15236)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index a6be315e60..47f5806a2f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -406,6 +406,10 @@ public:
 
   #if HAS_LCD_MENU
 
+    #if ENABLED(TOUCH_BUTTONS)
+      static uint8_t repeat_delay;
+    #endif
+
     #if ENABLED(ENCODER_RATE_MULTIPLIER)
       static bool encoderRateMultiplierEnabled;
       static millis_t lastEncoderMovementMillis;

commit 841c8ce0d9bdc67af010692014800431a278dd46
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 9 15:43:06 2019 -0500

    Remove PROMPT_INFO / PROMPT_GCODE_INFO (#15210)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 973fbc451e..a6be315e60 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -95,8 +95,8 @@
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       void lcd_pause_show_message(const PauseMessage message,
-                                           const PauseMode mode=PAUSE_MODE_SAME,
-                                           const uint8_t extruder=active_extruder);
+                                  const PauseMode mode=PAUSE_MODE_SAME,
+                                  const uint8_t extruder=active_extruder);
     #endif
 
     #if ENABLED(AUTO_BED_LEVELING_UBL)

commit 6b05d5d65d0b4f557021c0ed5c47ec4e5e97b43c
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Thu Sep 5 01:13:05 2019 +0700

    Allow TOUCH_BUTTONS to be swapped (#15100)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 26e9261bd5..973fbc451e 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -306,6 +306,8 @@ public:
 
     #if HAS_SPI_LCD
 
+      static millis_t next_button_update_ms;
+
       static bool detected();
 
       static LCDViewAction lcdDrawUpdate;
@@ -531,10 +533,6 @@ public:
       static volatile uint8_t slow_buttons;
       static uint8_t read_slow_buttons();
     #endif
-    #if ENABLED(TOUCH_BUTTONS)
-      static volatile uint8_t touch_buttons;
-      static uint8_t read_touch_buttons();
-    #endif
 
     static void update_buttons();
     static inline bool button_pressed() { return BUTTON_CLICK(); }

commit 3f77d6a5511c4c4fba92ddc63557cedd94be7c5c
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Thu Aug 29 23:05:22 2019 +0200

    Fix expire_status warning (#15094)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index a46e48396c..26e9261bd5 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -340,7 +340,7 @@ public:
           static millis_t progress_bar_ms;  // Start time for the current progress bar cycle
           static void draw_progress_bar(const uint8_t percent);
           #if PROGRESS_MSG_EXPIRE > 0
-            static millis_t MarlinUI::expire_status_ms; // = 0
+            static millis_t expire_status_ms; // = 0
             static inline void reset_progress_bar_timeout() { expire_status_ms = 0; }
           #endif
         #endif

commit 38983fdfa9773faf7006ef392110aca01ad006d5
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Thu Aug 29 13:19:07 2019 +0700

    Add 'Back' Button for Touch TFT 320x240 (#15060)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 732ef63d6f..a46e48396c 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -215,7 +215,7 @@
 
 #endif
 
-#if BUTTON_EXISTS(BACK)
+#if BUTTON_EXISTS(BACK) || ENABLED(TOUCH_BUTTONS)
   #define BLEN_D 3
   #define EN_D _BV(BLEN_D)
   #define LCD_BACK_CLICKED() (buttons & EN_D)

commit 3ac76f048973e1ecb5ea6f2c50eb5990bbd6a5b9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Aug 28 07:40:18 2019 -0500

    Invariant Marlin bootscreen (#15057)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 9c9084dd76..732ef63d6f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -319,7 +319,7 @@ public:
       #endif
 
       #if ENABLED(SHOW_BOOTSCREEN)
-        static void draw_marlin_bootscreen();
+        static void draw_marlin_bootscreen(const bool line2=false);
         static void show_marlin_bootscreen();
         static void show_bootscreen();
       #endif

commit e61e54acfd55e4c2908eeb04bc490744615a790c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Fri Aug 23 21:29:00 2019 -0600

    Fix TURBO_BACK_MENU_ITEM compile error (#15019)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 565ff2f792..9c9084dd76 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -449,10 +449,16 @@ public:
     static void save_previous_screen();
     static void goto_previous_screen(
       #if ENABLED(TURBO_BACK_MENU_ITEM)
-        const bool is_back=false
+        const bool is_back
       #endif
     );
 
+    #if ENABLED(TURBO_BACK_MENU_ITEM)
+      // Various menu items require a "void (*)()" to point to
+      // this function so a default argument *won't* work
+      static inline void goto_previous_screen() { goto_previous_screen(false); }
+    #endif
+
     static void return_to_status();
     static inline bool on_status_screen() { return currentScreen == status_screen; }
     static inline void run_current_screen() { (*currentScreen)(); }

commit 5e777601f3c9816dd1ff349886c748add245bea4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Aug 20 19:37:03 2019 -0500

    Add TURBO_BACK_MENU_ITEM option (#14991)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 4d0a541e19..565ff2f792 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -447,7 +447,12 @@ public:
     static screenFunc_t currentScreen;
     static void goto_screen(const screenFunc_t screen, const uint16_t encoder=0, const uint8_t top=0, const uint8_t items=0);
     static void save_previous_screen();
-    static void goto_previous_screen();
+    static void goto_previous_screen(
+      #if ENABLED(TURBO_BACK_MENU_ITEM)
+        const bool is_back=false
+      #endif
+    );
+
     static void return_to_status();
     static inline bool on_status_screen() { return currentScreen == status_screen; }
     static inline void run_current_screen() { (*currentScreen)(); }

commit 05995d1fd6c3b85717d428ff5c0c269f7872857b
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Tue Aug 20 09:01:37 2019 +0200

    Unify buzz methods as MarlinUI::buzz (#14803)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 3d893ed0f9..4d0a541e19 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -259,15 +259,11 @@ public:
   }
 
   #if HAS_BUZZER
-    static inline void buzz(const long duration, const uint16_t freq) {
-      #if ENABLED(LCD_USE_I2C_BUZZER)
-        lcd.buzz(duration, freq);
-      #elif PIN_EXISTS(BEEPER)
-        buzzer.tone(duration, freq);
-      #elif ENABLED(PCA9632_BUZZER)
-        pca9632_buzz(duration, freq);
-      #endif
-    }
+    static void buzz(const long duration, const uint16_t freq);
+  #endif
+
+  #if ENABLED(LCD_HAS_STATUS_INDICATORS)
+    static void update_indicators();
   #endif
 
   // LCD implementations

commit 823178c272b06f2cdcdb087e8f6c7b2ef0e3e6ed
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Sun Aug 18 07:58:38 2019 +0700

    Use u8g int type for screen coordinates (#14965)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 60a111d1c4..3d893ed0f9 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -76,11 +76,11 @@
       #define LCDWRITE(c) lcd_put_wchar(c)
     #endif
 
-    #include "fontutils.h"
+    #include "lcdprint.h"
 
-    void _wrap_string(uint8_t &x, uint8_t &y, const char * const string, read_byte_cb_t cb_read_byte, const bool wordwrap=false);
-    inline void wrap_string_P(uint8_t &x, uint8_t &y, PGM_P const pstr, const bool wordwrap=false) { _wrap_string(x, y, pstr, read_byte_rom, wordwrap); }
-    inline void wrap_string(uint8_t &x, uint8_t &y, const char * const string, const bool wordwrap=false) { _wrap_string(x, y, string, read_byte_ram, wordwrap); }
+    void _wrap_string(uint8_t &col, uint8_t &row, const char * const string, read_byte_cb_t cb_read_byte, const bool wordwrap=false);
+    inline void wrap_string_P(uint8_t &col, uint8_t &row, PGM_P const pstr, const bool wordwrap=false) { _wrap_string(col, row, pstr, read_byte_rom, wordwrap); }
+    inline void wrap_string(uint8_t &col, uint8_t &row, const char * const string, const bool wordwrap=false) { _wrap_string(col, row, string, read_byte_ram, wordwrap); }
 
     #if ENABLED(SDSUPPORT)
       #include "../sd/cardreader.h"
@@ -486,7 +486,7 @@ public:
     #endif
 
     #if ENABLED(AUTO_BED_LEVELING_UBL)
-      static void ubl_plot(const uint8_t x, const uint8_t inverted_y);
+      static void ubl_plot(const uint8_t x_plot, const uint8_t y_plot);
     #endif
 
     static void draw_select_screen_prompt(PGM_P const pref, const char * const string=nullptr, PGM_P const suff=nullptr);

commit d2d71caa3bfef08fb422f09d5088709313c6757c
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Sat Aug 10 13:42:52 2019 +0700

    Clean up Touch pins. Better up/down touch response. (#14900)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2eb8c79f2f..60a111d1c4 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -151,7 +151,7 @@
 
   #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
-  #if BUTTON_EXISTS(ENC)
+  #if BUTTON_EXISTS(ENC) || ENABLED(TOUCH_BUTTONS)
     #define BLEN_C 2
     #define EN_C _BV(BLEN_C)
   #endif

commit 528c9885f204cf9cad8dd77df2c365cb2fab81ac
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Thu Aug 8 08:52:20 2019 +0200

    Fix wait_for_user + PAUSE_BEFORE_DEPLOY_STOW issue (#14831)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0d66e2073e..2eb8c79f2f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -395,6 +395,7 @@ public:
     static inline void init() {}
     static inline void update() {}
     static inline void refresh() {}
+    static inline void return_to_status() {}
     static inline void set_alert_status_P(PGM_P message) { UNUSED(message); }
     static inline void set_status(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
     static inline void set_status_P(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }

commit 940c59d9dad5af071052f5c0cd1ec98c48c2778c
Author: Tim Moore <tim@youngmoores.com>
Date:   Fri Aug 2 04:19:45 2019 -0700

    Overlord i2c LCD with LEDs and buzzer (#14801)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index be58ebfe06..0d66e2073e 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -264,6 +264,8 @@ public:
         lcd.buzz(duration, freq);
       #elif PIN_EXISTS(BEEPER)
         buzzer.tone(duration, freq);
+      #elif ENABLED(PCA9632_BUZZER)
+        pca9632_buzz(duration, freq);
       #endif
     }
   #endif

commit 128eed6b57a8dd67d0fe02511e9437755e326c31
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Wed Jul 31 05:42:57 2019 +0700

    Option to reverse select direction/buttons (#14693)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 3a4710dfe3..be58ebfe06 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -539,15 +539,25 @@ public:
     #else
       #define ENCODERBASE +1
     #endif
-    #if ENABLED(REVERSE_MENU_DIRECTION)
+
+    #if EITHER(REVERSE_MENU_DIRECTION, REVERSE_SELECT_DIRECTION)
       static int8_t encoderDirection;
-      static inline void encoder_direction_normal() { encoderDirection = +(ENCODERBASE); }
-      static inline void encoder_direction_menus()  { encoderDirection = -(ENCODERBASE); }
+      static inline void encoder_direction_normal() { encoderDirection = ENCODERBASE; }
     #else
       static constexpr int8_t encoderDirection = ENCODERBASE;
       static inline void encoder_direction_normal() {}
+    #endif
+
+    #if ENABLED(REVERSE_MENU_DIRECTION)
+      static inline void encoder_direction_menus()  { encoderDirection = -(ENCODERBASE); }
+    #else
       static inline void encoder_direction_menus()  {}
     #endif
+    #if ENABLED(REVERSE_SELECT_DIRECTION)
+      static inline void encoder_direction_select()  { encoderDirection = -(ENCODERBASE); }
+    #else
+      static inline void encoder_direction_select()  {}
+    #endif
 
   #else
 

commit eefe3f595ae98ed2b32a9a60a5b27ed307993a7d
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Sun Jul 28 21:47:20 2019 -0600

    New options: Bootscreen as Info, game Easter-egg (#13829)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 10f37b36aa..3a4710dfe3 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -315,7 +315,14 @@ public:
       static inline void refresh(const LCDViewAction type) { lcdDrawUpdate = type; }
       static inline void refresh() { refresh(LCDVIEW_CLEAR_CALL_REDRAW); }
 
+      #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)
+        static void draw_custom_bootscreen(const uint8_t frame=0);
+        static void show_custom_bootscreen();
+      #endif
+
       #if ENABLED(SHOW_BOOTSCREEN)
+        static void draw_marlin_bootscreen();
+        static void show_marlin_bootscreen();
         static void show_bootscreen();
       #endif
 

commit c4bb458763c810f29025fc6b2c5829022ed509c7
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Mon Jul 29 02:14:50 2019 +0200

    BUZZ cleanup (#14760)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 5c5cee4fc1..10f37b36aa 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -258,15 +258,15 @@ public:
     #endif
   }
 
-  static inline void buzz(const long duration, const uint16_t freq) {
-    #if ENABLED(LCD_USE_I2C_BUZZER)
-      lcd.buzz(duration, freq);
-    #elif PIN_EXISTS(BEEPER)
-      buzzer.tone(duration, freq);
-    #else
-      UNUSED(duration); UNUSED(freq);
-    #endif
-  }
+  #if HAS_BUZZER
+    static inline void buzz(const long duration, const uint16_t freq) {
+      #if ENABLED(LCD_USE_I2C_BUZZER)
+        lcd.buzz(duration, freq);
+      #elif PIN_EXISTS(BEEPER)
+        buzzer.tone(duration, freq);
+      #endif
+    }
+  #endif
 
   // LCD implementations
   static void clear_lcd();
@@ -355,7 +355,9 @@ public:
       #endif
 
       static void quick_feedback(const bool clear_buttons=true);
-      static void completion_feedback(const bool good=true);
+      #if HAS_BUZZER
+        static void completion_feedback(const bool good=true);
+      #endif
 
       #if DISABLED(LIGHTWEIGHT_UI)
         static void draw_status_message(const bool blink);
@@ -466,7 +468,11 @@ public:
     #endif
 
     #if ENABLED(G26_MESH_VALIDATION)
-      static inline void chirp() { buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ); }
+      static inline void chirp() {
+        #if HAS_BUZZER
+          buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ);
+        #endif
+      }
     #endif
 
     #if ENABLED(AUTO_BED_LEVELING_UBL)

commit ca4d6f44709a979932c59664fac8cbec97aa1566
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Jul 17 18:49:26 2019 -0600

    Fix compile error (bad return type) (#14660)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2abc562283..5c5cee4fc1 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -299,7 +299,7 @@ public:
         static uint8_t progress_bar_percent;
         static void set_progress(const uint8_t progress) { progress_bar_percent = _MIN(progress, 100); }
         static void set_progress_done() { set_progress(0x80 + 100); }
-        static bool progress_reset() { if (progress_bar_percent & 0x80) set_progress(0); }
+        static void progress_reset() { if (progress_bar_percent & 0x80) set_progress(0); }
       #endif
       static uint8_t get_progress();
     #else

commit c9aa68ef7aa358bb633b6d87232a94bfa6b7d7c8
Author: Robby Candra <robbycandra.mail@gmail.com>
Date:   Thu Jul 18 07:41:15 2019 +0700

    Encoder direction: Wrangle, Revert select screen change (#14628)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index f0fdbf764f..2abc562283 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -424,6 +424,11 @@ public:
     static int16_t preheat_hotend_temp[2], preheat_bed_temp[2];
     static uint8_t preheat_fan_speed[2];
 
+    // Select Screen (modal NO/YES style dialog)
+    static bool selection;
+    static void set_selection(const bool sel) { selection = sel; }
+    static bool update_selection();
+
     static void manage_manual_move();
 
     static bool lcd_clicked;

commit 27c487bab744a22aeb580a0471591adba040bc68
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Jul 17 02:12:39 2019 -0600

    Print progress enhancements (#14647)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2325b5b959..f0fdbf764f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -298,6 +298,8 @@ public:
       #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
         static uint8_t progress_bar_percent;
         static void set_progress(const uint8_t progress) { progress_bar_percent = _MIN(progress, 100); }
+        static void set_progress_done() { set_progress(0x80 + 100); }
+        static bool progress_reset() { if (progress_bar_percent & 0x80) set_progress(0); }
       #endif
       static uint8_t get_progress();
     #else

commit 81d629bc471dcf926337836d1dd76910d9ff4bfe
Author: Tanguy Pruvot <tpruvot@users.noreply.github.com>
Date:   Mon Jul 15 01:16:26 2019 +0200

    Robin & Longer3D SPI TFT driver (#14595)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 5a63f67e87..2325b5b959 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -56,7 +56,11 @@
     uint8_t get_ADC_keyValue();
   #endif
 
-  #define LCD_UPDATE_INTERVAL 100
+  #if ENABLED(TOUCH_BUTTONS)
+    #define LCD_UPDATE_INTERVAL 50
+  #else
+    #define LCD_UPDATE_INTERVAL 100
+  #endif
 
   #if HAS_LCD_MENU
 
@@ -497,6 +501,11 @@ public:
       static volatile uint8_t slow_buttons;
       static uint8_t read_slow_buttons();
     #endif
+    #if ENABLED(TOUCH_BUTTONS)
+      static volatile uint8_t touch_buttons;
+      static uint8_t read_touch_buttons();
+    #endif
+
     static void update_buttons();
     static inline bool button_pressed() { return BUTTON_CLICK(); }
     #if EITHER(AUTO_BED_LEVELING_UBL, G26_MESH_VALIDATION)

commit 750a16ad385dca893d482cb51d8af2ac3f8a1da1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jul 5 18:01:21 2019 -0500

    Fix MIN/MAX function collision with macros

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 270005ee35..5a63f67e87 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -293,7 +293,7 @@ public:
     #if HAS_PRINT_PROGRESS
       #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
         static uint8_t progress_bar_percent;
-        static void set_progress(const uint8_t progress) { progress_bar_percent = MIN(progress, 100); }
+        static void set_progress(const uint8_t progress) { progress_bar_percent = _MIN(progress, 100); }
       #endif
       static uint8_t get_progress();
     #else

commit 10b85be4055aee35ef649f6bc5444a67082a6024
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jul 1 00:44:39 2019 -0500

    status_message_level => alert_level

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0b4a91fdb7..270005ee35 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -277,8 +277,8 @@ public:
     static char status_message[];
     static bool has_status();
 
-    static uint8_t status_message_level;      // Higher levels block lower levels
-    static inline void reset_alert_level() { status_message_level = 0; }
+    static uint8_t alert_level; // Higher levels block lower levels
+    static inline void reset_alert_level() { alert_level = 0; }
 
     #if ENABLED(STATUS_MESSAGE_SCROLLING)
       static uint8_t status_scroll_offset;

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index aa4cc47766..0b4a91fdb7 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 651f3eeed06175b798ed3619ca325825541a9ac1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jun 17 20:08:51 2019 -0500

    Clean up trailing whitespace

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 97c87dfe11..aa4cc47766 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -289,7 +289,7 @@ public:
     static void abort_print();
     static void pause_print();
     static void resume_print();
-    
+
     #if HAS_PRINT_PROGRESS
       #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
         static uint8_t progress_bar_percent;

commit b7eeb5b13b4f299b8e1b994d678e35262a1c09b0
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Jun 10 18:46:42 2019 -0400

    Move BLTouch options to adv config (#14131)
    
    Plus other BLTouch and menu enhancements.

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 630539a986..97c87dfe11 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -74,9 +74,9 @@
 
     #include "fontutils.h"
 
-    void _wrap_string(uint8_t &x, uint8_t &y, const char * const string, read_byte_cb_t cb_read_byte);
-    inline void wrap_string_P(uint8_t &x, uint8_t &y, PGM_P const pstr) { _wrap_string(x, y, pstr, read_byte_rom); }
-    inline void wrap_string(uint8_t &x, uint8_t &y, const char * const string) { _wrap_string(x, y, string, read_byte_ram); }
+    void _wrap_string(uint8_t &x, uint8_t &y, const char * const string, read_byte_cb_t cb_read_byte, const bool wordwrap=false);
+    inline void wrap_string_P(uint8_t &x, uint8_t &y, PGM_P const pstr, const bool wordwrap=false) { _wrap_string(x, y, pstr, read_byte_rom, wordwrap); }
+    inline void wrap_string(uint8_t &x, uint8_t &y, const char * const string, const bool wordwrap=false) { _wrap_string(x, y, string, read_byte_ram, wordwrap); }
 
     #if ENABLED(SDSUPPORT)
       #include "../sd/cardreader.h"

commit f889cc6ea62ff07cf2d61de400f403cd55676630
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Thu May 30 17:24:13 2019 -0400

    ExtUI parity with SPI LCDs (#14172)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index fc573211b3..630539a986 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -286,6 +286,10 @@ public:
       static char* status_and_len(uint8_t &len);
     #endif
 
+    static void abort_print();
+    static void pause_print();
+    static void resume_print();
+    
     #if HAS_PRINT_PROGRESS
       #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
         static uint8_t progress_bar_percent;

commit ad4ffa1d2fbd17ac09c816ba2052cdf714261042
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 9 11:45:55 2019 -0500

    Use C++ language supported 'nullptr' (#13944)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 95235d031a..fc573211b3 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -419,7 +419,7 @@ public:
     static bool lcd_clicked;
     static bool use_click();
 
-    static void synchronize(PGM_P const msg=NULL);
+    static void synchronize(PGM_P const msg=nullptr);
 
     static screenFunc_t currentScreen;
     static void goto_screen(const screenFunc_t screen, const uint16_t encoder=0, const uint8_t top=0, const uint8_t items=0);
@@ -458,7 +458,7 @@ public:
       static void ubl_plot(const uint8_t x, const uint8_t inverted_y);
     #endif
 
-    static void draw_select_screen_prompt(PGM_P const pref, const char * const string=NULL, PGM_P const suff=NULL);
+    static void draw_select_screen_prompt(PGM_P const pref, const char * const string=nullptr, PGM_P const suff=nullptr);
 
   #elif HAS_SPI_LCD
 

commit 23ec6504103a99a0d769346e2a503a1d1764cf7b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 7 20:32:50 2019 -0500

    Consolidate Malyan LCD and ExtUI

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2ea7f45279..95235d031a 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -268,17 +268,11 @@ public:
   static void clear_lcd();
   static void init_lcd();
 
-  #if HAS_SPI_LCD || EITHER(MALYAN_LCD, EXTENSIBLE_UI)
+  #if HAS_DISPLAY
+
     static void init();
     static void update();
     static void set_alert_status_P(PGM_P message);
-  #else // NO LCD
-    static inline void init() {}
-    static inline void update() {}
-    static inline void set_alert_status_P(PGM_P message) { UNUSED(message); }
-  #endif
-
-  #if HAS_SPI_LCD || ENABLED(EXTENSIBLE_UI)
 
     static char status_message[];
     static bool has_status();
@@ -375,9 +369,12 @@ public:
     static void status_printf_P(const uint8_t level, PGM_P const fmt, ...);
     static void reset_status();
 
-  #else // MALYAN_LCD or NO LCD
+  #else // No LCD
 
+    static inline void init() {}
+    static inline void update() {}
     static inline void refresh() {}
+    static inline void set_alert_status_P(PGM_P message) { UNUSED(message); }
     static inline void set_status(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
     static inline void set_status_P(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
     static inline void status_printf_P(const uint8_t level, PGM_P const fmt, ...) { UNUSED(level); UNUSED(fmt); }
@@ -529,7 +526,7 @@ private:
 
   static void _synchronize();
 
-  #if HAS_SPI_LCD || ENABLED(EXTENSIBLE_UI)
+  #if HAS_DISPLAY
     static void finish_status(const bool persist);
   #endif
 

commit 5051909c3c43ae42c14765d0adce4405b8e9a423
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 24 10:13:44 2019 -0500

    Update do_select_screen for general use (#13800)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index be694ddfe4..2ea7f45279 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -72,7 +72,11 @@
       #define LCDWRITE(c) lcd_put_wchar(c)
     #endif
 
-    void wrap_string(uint8_t y, const char * const string);
+    #include "fontutils.h"
+
+    void _wrap_string(uint8_t &x, uint8_t &y, const char * const string, read_byte_cb_t cb_read_byte);
+    inline void wrap_string_P(uint8_t &x, uint8_t &y, PGM_P const pstr) { _wrap_string(x, y, pstr, read_byte_rom); }
+    inline void wrap_string(uint8_t &x, uint8_t &y, const char * const string) { _wrap_string(x, y, string, read_byte_ram); }
 
     #if ENABLED(SDSUPPORT)
       #include "../sd/cardreader.h"
@@ -457,6 +461,8 @@ public:
       static void ubl_plot(const uint8_t x, const uint8_t inverted_y);
     #endif
 
+    static void draw_select_screen_prompt(PGM_P const pref, const char * const string=NULL, PGM_P const suff=NULL);
+
   #elif HAS_SPI_LCD
 
     static constexpr bool lcd_clicked = false;

commit 321a5e65805f51e6817ff51db448dc5d8f28c900
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 8 21:10:41 2019 -0500

    Fix SD card reselect when scrolled (#13624)
    
    - Change encoder position to 16-bit integer.
    - Fix `SD_REPRINT_LAST_SELECTED_FILE` when the screen is scrolled.

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index a1d155dc85..be694ddfe4 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -421,7 +421,7 @@ public:
     static void synchronize(PGM_P const msg=NULL);
 
     static screenFunc_t currentScreen;
-    static void goto_screen(const screenFunc_t screen, const uint32_t encoder=0, const uint8_t top=0, const uint8_t items=0);
+    static void goto_screen(const screenFunc_t screen, const uint16_t encoder=0, const uint8_t top=0, const uint8_t items=0);
     static void save_previous_screen();
     static void goto_previous_screen();
     static void return_to_status();
@@ -496,7 +496,7 @@ public:
       static void wait_for_release();
     #endif
 
-    static uint32_t encoderPosition;
+    static uint16_t encoderPosition;
 
     #if ENABLED(REVERSE_ENCODER_DIRECTION)
       #define ENCODERBASE -1

commit 9abe9aff56d44d42c9dc52679cc9f17592cd0bd4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 8 13:44:35 2019 -0500

    Confirm before starting SD print (#13616)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 190e35fd43..a1d155dc85 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -56,22 +56,24 @@
     uint8_t get_ADC_keyValue();
   #endif
 
-  #if HAS_GRAPHICAL_LCD
-    #define SETCURSOR(col, row) lcd_moveto(col * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
-    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - (len) * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
-    #define LCDPRINT(p) u8g.print(p)
-    #define LCDWRITE(c) u8g.print(c)
-  #else
-    #define SETCURSOR(col, row) lcd_moveto(col, row)
-    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - (len), row)
-    #define LCDPRINT(p) lcd_put_u8str(p)
-    #define LCDWRITE(c) lcd_put_wchar(c)
-  #endif
-
   #define LCD_UPDATE_INTERVAL 100
 
   #if HAS_LCD_MENU
 
+    #if HAS_GRAPHICAL_LCD
+      #define SETCURSOR(col, row) lcd_moveto(col * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
+      #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - (len) * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
+      #define LCDPRINT(p) u8g.print(p)
+      #define LCDWRITE(c) u8g.print(c)
+    #else
+      #define SETCURSOR(col, row) lcd_moveto(col, row)
+      #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - (len), row)
+      #define LCDPRINT(p) lcd_put_u8str(p)
+      #define LCDWRITE(c) lcd_put_wchar(c)
+    #endif
+
+    void wrap_string(uint8_t y, const char * const string);
+
     #if ENABLED(SDSUPPORT)
       #include "../sd/cardreader.h"
     #endif

commit 7e0008f5b3fd3974200af2161e88f5a1d14eb7a4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Apr 7 20:24:58 2019 -0500

    Fix SETCURSOR_RJ

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index df36256ba1..190e35fd43 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -58,12 +58,12 @@
 
   #if HAS_GRAPHICAL_LCD
     #define SETCURSOR(col, row) lcd_moveto(col * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
-    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
+    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - (len) * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
     #define LCDPRINT(p) u8g.print(p)
     #define LCDWRITE(c) u8g.print(c)
   #else
     #define SETCURSOR(col, row) lcd_moveto(col, row)
-    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - len, row)
+    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - (len), row)
     #define LCDPRINT(p) lcd_put_u8str(p)
     #define LCDWRITE(c) lcd_put_wchar(c)
   #endif

commit 10b9632bed6ef78ef2460b71526111d89b4113c2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Apr 4 02:29:44 2019 -0500

    Fix menu history item selection

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index f8899f1175..df36256ba1 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -419,7 +419,7 @@ public:
     static void synchronize(PGM_P const msg=NULL);
 
     static screenFunc_t currentScreen;
-    static void goto_screen(const screenFunc_t screen, const uint32_t encoder=0);
+    static void goto_screen(const screenFunc_t screen, const uint32_t encoder=0, const uint8_t top=0, const uint8_t items=0);
     static void save_previous_screen();
     static void goto_previous_screen();
     static void return_to_status();

commit d8329d858d7d2c2b2a9107f99df39a93816c0841
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Mar 23 16:30:43 2019 -0500

    Default argument to defer_status_screen

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0458913405..f8899f1175 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -430,7 +430,7 @@ public:
       static void lcd_in_status(const bool inStatus);
     #endif
 
-    static inline void defer_status_screen(const bool defer) {
+    static inline void defer_status_screen(const bool defer=true) {
       #if LCD_TIMEOUT_TO_STATUS
         defer_return_to_status = defer;
       #else

commit 58bca6788374e6a0fcd8b3a5c513e1ad520b9a10
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Mar 17 05:32:12 2019 -0500

    Unify status scrolling further

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 4847b33b0b..0458913405 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -277,10 +277,15 @@ public:
     static char status_message[];
     static bool has_status();
 
-
     static uint8_t status_message_level;      // Higher levels block lower levels
     static inline void reset_alert_level() { status_message_level = 0; }
 
+    #if ENABLED(STATUS_MESSAGE_SCROLLING)
+      static uint8_t status_scroll_offset;
+      static void advance_status_scroll();
+      static char* status_and_len(uint8_t &len);
+    #endif
+
     #if HAS_PRINT_PROGRESS
       #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
         static uint8_t progress_bar_percent;
@@ -327,9 +332,6 @@ public:
 
       #endif
 
-      #if ENABLED(STATUS_MESSAGE_SCROLLING)
-        static uint8_t status_scroll_offset;
-      #endif
       static uint8_t lcd_status_update_delay;
 
       #if HAS_LCD_CONTRAST
@@ -520,7 +522,7 @@ private:
   static void _synchronize();
 
   #if HAS_SPI_LCD || ENABLED(EXTENSIBLE_UI)
-    static void finishstatus(const bool persist);
+    static void finish_status(const bool persist);
   #endif
 
   #if HAS_SPI_LCD

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index d830c9687e..4847b33b0b 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -27,18 +27,13 @@
   #include "../libs/buzzer.h"
 #endif
 
-#define HAS_DIGITAL_BUTTONS (!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)        \
-                            || (BUTTON_EXISTS(EN1) && BUTTON_EXISTS(EN2)) \
-                            || BUTTON_EXISTS(ENC) || BUTTON_EXISTS(BACK)  \
-                            || BUTTON_EXISTS(UP)  || BUTTON_EXISTS(DWN)   \
-                            || BUTTON_EXISTS(LFT) || BUTTON_EXISTS(RT))
-
+#define HAS_DIGITAL_BUTTONS (!HAS_ADC_BUTTONS && ENABLED(NEWPANEL) || BUTTON_EXISTS(EN1, EN2) || ANY_BUTTON(ENC, BACK, UP, DWN, LFT, RT))
 #define HAS_SHIFT_ENCODER   (!HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_SPI_LCD && DISABLED(NEWPANEL))))
-#define HAS_ENCODER_WHEEL  ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || (BUTTON_EXISTS(EN1) && BUTTON_EXISTS(EN2)) )
+#define HAS_ENCODER_WHEEL  ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || BUTTON_EXISTS(EN1, EN2))
 #define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
 
 // I2C buttons must be read in the main thread
-#define HAS_SLOW_BUTTONS (ENABLED(LCD_I2C_VIKI) || ENABLED(LCD_I2C_PANELOLU2))
+#define HAS_SLOW_BUTTONS EITHER(LCD_I2C_VIKI, LCD_I2C_PANELOLU2)
 
 #if HAS_SPI_LCD
 
@@ -188,7 +183,7 @@
 #else
 
   #undef BUTTON_EXISTS
-  #define BUTTON_EXISTS(BN) false
+  #define BUTTON_EXISTS(...) false
 
   // Shift register bits correspond to buttons:
   #define BL_LE 7   // Left
@@ -267,7 +262,7 @@ public:
   static void clear_lcd();
   static void init_lcd();
 
-  #if HAS_SPI_LCD || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
+  #if HAS_SPI_LCD || EITHER(MALYAN_LCD, EXTENSIBLE_UI)
     static void init();
     static void update();
     static void set_alert_status_P(PGM_P message);
@@ -343,7 +338,7 @@ public:
         static inline void refresh_contrast() { set_contrast(contrast); }
       #endif
 
-      #if ENABLED(FILAMENT_LCD_DISPLAY) && ENABLED(SDSUPPORT)
+      #if BOTH(FILAMENT_LCD_DISPLAY, SDSUPPORT)
         static millis_t next_filament_display;
       #endif
 
@@ -466,13 +461,13 @@ public:
 
   #endif
 
-  #if ENABLED(LCD_BED_LEVELING) && (ENABLED(PROBE_MANUALLY) || ENABLED(MESH_BED_LEVELING))
+  #if ENABLED(LCD_BED_LEVELING) && EITHER(PROBE_MANUALLY, MESH_BED_LEVELING)
     static bool wait_for_bl_move;
   #else
     static constexpr bool wait_for_bl_move = false;
   #endif
 
-  #if HAS_LCD_MENU && (ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION))
+  #if HAS_LCD_MENU && EITHER(AUTO_BED_LEVELING_UBL, G26_MESH_VALIDATION)
     static bool external_control;
     FORCE_INLINE static void capture() { external_control = true; }
     FORCE_INLINE static void release() { external_control = false; }
@@ -493,7 +488,7 @@ public:
     #endif
     static void update_buttons();
     static inline bool button_pressed() { return BUTTON_CLICK(); }
-    #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
+    #if EITHER(AUTO_BED_LEVELING_UBL, G26_MESH_VALIDATION)
       static void wait_for_release();
     #endif
 

commit 59353546e81bc7f54724c04ae597f7663eff798d
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Sat Mar 16 17:59:12 2019 +0100

    Fix BUTTON_EXISTS and misplaced comma (#13411)
    
    Fixes #13410 and redeclaration of `BUTTON_EXISTS`

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 00c7b74d55..d830c9687e 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -187,6 +187,7 @@
 
 #else
 
+  #undef BUTTON_EXISTS
   #define BUTTON_EXISTS(BN) false
 
   // Shift register bits correspond to buttons:

commit 9a515cbd3268b30eb7a4dc9ea0f96f3a253d9063
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 14 02:26:07 2019 -0500

    Fix Pause Print message and behavior (#13394)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 56d097bb93..00c7b74d55 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -89,8 +89,8 @@
     extern float move_menu_scale;
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
-      void lcd_advanced_pause_show_message(const AdvancedPauseMessage message,
-                                           const AdvancedPauseMode mode=ADVANCED_PAUSE_MODE_SAME,
+      void lcd_pause_show_message(const PauseMessage message,
+                                           const PauseMode mode=PAUSE_MODE_SAME,
                                            const uint8_t extruder=active_extruder);
     #endif
 

commit 10c8c034bdc529ced1d0b70b5f8a1079cccc5f66
Author: 7eggert <7eggert@gmx.de>
Date:   Tue Mar 12 00:10:56 2019 +0100

    Allow both encoder and ADC keypad (#13355)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b50272ae9e..56d097bb93 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -27,8 +27,19 @@
   #include "../libs/buzzer.h"
 #endif
 
+#define HAS_DIGITAL_BUTTONS (!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)        \
+                            || (BUTTON_EXISTS(EN1) && BUTTON_EXISTS(EN2)) \
+                            || BUTTON_EXISTS(ENC) || BUTTON_EXISTS(BACK)  \
+                            || BUTTON_EXISTS(UP)  || BUTTON_EXISTS(DWN)   \
+                            || BUTTON_EXISTS(LFT) || BUTTON_EXISTS(RT))
+
+#define HAS_SHIFT_ENCODER   (!HAS_ADC_BUTTONS && (ENABLED(REPRAPWORLD_KEYPAD) || (HAS_SPI_LCD && DISABLED(NEWPANEL))))
+#define HAS_ENCODER_WHEEL  ((!HAS_ADC_BUTTONS && ENABLED(NEWPANEL)) || (BUTTON_EXISTS(EN1) && BUTTON_EXISTS(EN2)) )
 #define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
 
+// I2C buttons must be read in the main thread
+#define HAS_SLOW_BUTTONS (ENABLED(LCD_I2C_VIKI) || ENABLED(LCD_I2C_PANELOLU2))
+
 #if HAS_SPI_LCD
 
   #include "../Marlin.h"
@@ -133,7 +144,6 @@
   #define EN_A _BV(BLEN_A)
   #define EN_B _BV(BLEN_B)
 
-  #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
   #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
   #if BUTTON_EXISTS(ENC)

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0f70dff621..b50272ae9e 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 6de3d3437849c0710881311bc9ad4069b0aee55d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 10 04:54:23 2019 -0600

    M166 Gradients, LCD Menu for 2-channel Mixer (Geeetech A10M/A20M) (#13022)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 77e001362c..0f70dff621 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -53,9 +53,13 @@
   #if HAS_GRAPHICAL_LCD
     #define SETCURSOR(col, row) lcd_moveto(col * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
     #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
+    #define LCDPRINT(p) u8g.print(p)
+    #define LCDWRITE(c) u8g.print(c)
   #else
     #define SETCURSOR(col, row) lcd_moveto(col, row)
     #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - len, row)
+    #define LCDPRINT(p) lcd_put_u8str(p)
+    #define LCDWRITE(c) lcd_put_wchar(c)
   #endif
 
   #define LCD_UPDATE_INTERVAL 100

commit 902d5b0f8ba2f46f30fa063b7d2ab8b6193339cc
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Dec 12 16:21:37 2018 -0700

    Allow ExtUI to use LCD_SET_PROGRESS_MANUALLY (#12628)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 54eb239b9d..77e001362c 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -271,6 +271,16 @@ public:
     static uint8_t status_message_level;      // Higher levels block lower levels
     static inline void reset_alert_level() { status_message_level = 0; }
 
+    #if HAS_PRINT_PROGRESS
+      #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
+        static uint8_t progress_bar_percent;
+        static void set_progress(const uint8_t progress) { progress_bar_percent = MIN(progress, 100); }
+      #endif
+      static uint8_t get_progress();
+    #else
+      static constexpr uint8_t get_progress() { return 0; }
+    #endif
+
     #if HAS_SPI_LCD
 
       static bool detected();
@@ -312,16 +322,6 @@ public:
       #endif
       static uint8_t lcd_status_update_delay;
 
-      #if HAS_PRINT_PROGRESS
-        #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
-          static uint8_t progress_bar_percent;
-          static void set_progress(const uint8_t progress) { progress_bar_percent = MIN(progress, 100); }
-        #endif
-        static uint8_t get_progress();
-      #else
-        static constexpr uint8_t get_progress() { return 0; }
-      #endif
-
       #if HAS_LCD_CONTRAST
         static int16_t contrast;
         static void set_contrast(const int16_t value);

commit fd2998efd5fb888eb1deb432c6790c3d506060c0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 22 06:00:00 2018 -0600

    Revert ADC_KEYPAD direction behavior (#12508)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index a79b43bb27..54eb239b9d 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -188,7 +188,10 @@
   #define B_DW (_BV(BL_DW))
   #define B_RI (_BV(BL_RI))
   #define B_ST (_BV(BL_ST))
-  #define BUTTON_CLICK() (buttons & (B_MI|B_ST))
+
+  #ifndef BUTTON_CLICK
+    #define BUTTON_CLICK() (buttons & (B_MI|B_ST))
+  #endif
 
 #endif
 

commit c5642a894fb3e9bb16433d40b9ae152bfe204a6f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Nov 20 21:39:30 2018 -0600

    Fix ADC_KEYPAD middle button (#12493)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 61524a082b..a79b43bb27 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -88,28 +88,36 @@
 
 #endif
 
+// REPRAPWORLD_KEYPAD (and ADC_KEYPAD)
 #if ENABLED(REPRAPWORLD_KEYPAD)
-  #define REPRAPWORLD_BTN_OFFSET          0 // Bit offset into buttons for shift register values
-
-  #define BLEN_REPRAPWORLD_KEYPAD_F3      0
-  #define BLEN_REPRAPWORLD_KEYPAD_F2      1
-  #define BLEN_REPRAPWORLD_KEYPAD_F1      2
-  #define BLEN_REPRAPWORLD_KEYPAD_DOWN    3
-  #define BLEN_REPRAPWORLD_KEYPAD_RIGHT   4
-  #define BLEN_REPRAPWORLD_KEYPAD_MIDDLE  5
-  #define BLEN_REPRAPWORLD_KEYPAD_UP      6
-  #define BLEN_REPRAPWORLD_KEYPAD_LEFT    7
-
-  #define EN_REPRAPWORLD_KEYPAD_F1        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F1))
-  #define EN_REPRAPWORLD_KEYPAD_F2        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F2))
-  #define EN_REPRAPWORLD_KEYPAD_F3        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F3))
-  #define EN_REPRAPWORLD_KEYPAD_DOWN      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_DOWN))
-  #define EN_REPRAPWORLD_KEYPAD_RIGHT     (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_RIGHT))
-  #define EN_REPRAPWORLD_KEYPAD_MIDDLE    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_MIDDLE))
-  #define EN_REPRAPWORLD_KEYPAD_UP        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_UP))
-  #define EN_REPRAPWORLD_KEYPAD_LEFT      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_LEFT))
+  #define BTN_OFFSET          0 // Bit offset into buttons for shift register values
+
+  #define BLEN_KEYPAD_F3      0
+  #define BLEN_KEYPAD_F2      1
+  #define BLEN_KEYPAD_F1      2
+  #define BLEN_KEYPAD_DOWN    3
+  #define BLEN_KEYPAD_RIGHT   4
+  #define BLEN_KEYPAD_MIDDLE  5
+  #define BLEN_KEYPAD_UP      6
+  #define BLEN_KEYPAD_LEFT    7
+
+  #define EN_KEYPAD_F1      _BV(BTN_OFFSET + BLEN_KEYPAD_F1)
+  #define EN_KEYPAD_F2      _BV(BTN_OFFSET + BLEN_KEYPAD_F2)
+  #define EN_KEYPAD_F3      _BV(BTN_OFFSET + BLEN_KEYPAD_F3)
+  #define EN_KEYPAD_DOWN    _BV(BTN_OFFSET + BLEN_KEYPAD_DOWN)
+  #define EN_KEYPAD_RIGHT   _BV(BTN_OFFSET + BLEN_KEYPAD_RIGHT)
+  #define EN_KEYPAD_MIDDLE  _BV(BTN_OFFSET + BLEN_KEYPAD_MIDDLE)
+  #define EN_KEYPAD_UP      _BV(BTN_OFFSET + BLEN_KEYPAD_UP)
+  #define EN_KEYPAD_LEFT    _BV(BTN_OFFSET + BLEN_KEYPAD_LEFT)
 
   #define RRK(B) (keypad_buttons & (B))
+
+  #ifdef EN_C
+    #define BUTTON_CLICK() ((buttons & EN_C) || RRK(EN_KEYPAD_MIDDLE))
+  #else
+    #define BUTTON_CLICK() RRK(EN_KEYPAD_MIDDLE)
+  #endif
+
 #endif
 
 #if HAS_DIGITAL_BUTTONS
@@ -129,26 +137,12 @@
     #define EN_C _BV(BLEN_C)
   #endif
 
-  #if BUTTON_EXISTS(BACK)
-    #define BLEN_D 3
-    #define EN_D _BV(BLEN_D)
-    #define LCD_BACK_CLICKED() (buttons & EN_D)
-  #endif
-
-  #if ENABLED(REPRAPWORLD_KEYPAD)
-
-    #ifdef EN_C
-      #define BUTTON_CLICK() ((buttons & EN_C) || RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE))
-    #else
-      #define BUTTON_CLICK() RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE)
-    #endif
-
-  #elif ENABLED(LCD_I2C_VIKI)
+  #if ENABLED(LCD_I2C_VIKI)
 
     #define B_I2C_BTN_OFFSET 3 // (the first three bit positions reserved for EN_A, EN_B, EN_C)
 
     // button and encoder bit positions within 'buttons'
-    #define B_LE (BUTTON_LEFT   << B_I2C_BTN_OFFSET)    // The remaining normalized buttons are all read via I2C
+    #define B_LE (BUTTON_LEFT   << B_I2C_BTN_OFFSET)      // The remaining normalized buttons are all read via I2C
     #define B_UP (BUTTON_UP     << B_I2C_BTN_OFFSET)
     #define B_MI (BUTTON_SELECT << B_I2C_BTN_OFFSET)
     #define B_DW (BUTTON_DOWN   << B_I2C_BTN_OFFSET)
@@ -156,13 +150,12 @@
 
     #if BUTTON_EXISTS(ENC)                                // The pause/stop/restart button is connected to BTN_ENC when used
       #define B_ST (EN_C)                                 // Map the pause/stop/resume button into its normalized functional name
-      #define BUTTON_CLICK() (buttons & (B_MI|B_RI|B_ST))  // Pause/stop also acts as click until a proper pause/stop is implemented.
+      #define BUTTON_CLICK() (buttons & (B_MI|B_RI|B_ST)) // Pause/stop also acts as click until a proper pause/stop is implemented.
     #else
       #define BUTTON_CLICK() (buttons & (B_MI|B_RI))
     #endif
 
     // I2C buttons take too long to read inside an interrupt context and so we read them during lcd_update
-    #define LCD_HAS_SLOW_BUTTONS
 
   #elif ENABLED(LCD_I2C_PANELOLU2)
 
@@ -174,16 +167,13 @@
 
       #define BUTTON_CLICK() (buttons & B_MI)
 
-      // I2C buttons take too long to read inside an interrupt context and so we read them during lcd_update
-      #define LCD_HAS_SLOW_BUTTONS
-
     #endif
 
   #endif
 
 #else
 
-  #define BUTTON_EXISTS(BN) 0
+  #define BUTTON_EXISTS(BN) false
 
   // Shift register bits correspond to buttons:
   #define BL_LE 7   // Left
@@ -202,6 +192,14 @@
 
 #endif
 
+#if BUTTON_EXISTS(BACK)
+  #define BLEN_D 3
+  #define EN_D _BV(BLEN_D)
+  #define LCD_BACK_CLICKED() (buttons & EN_D)
+#else
+  #define LCD_BACK_CLICKED() false
+#endif
+
 #ifndef BUTTON_CLICK
   #ifdef EN_C
     #define BUTTON_CLICK() (buttons & EN_C)
@@ -471,7 +469,7 @@ public:
       static volatile uint8_t keypad_buttons;
       static bool handle_keypad();
     #endif
-    #if ENABLED(LCD_HAS_SLOW_BUTTONS)
+    #if HAS_SLOW_BUTTONS
       static volatile uint8_t slow_buttons;
       static uint8_t read_slow_buttons();
     #endif

commit 817a37169a0ef397a82209d981d59db6b7f75146
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 20 06:44:11 2018 -0600

    Apply/unapply const here and there

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 9465dc6161..61524a082b 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -380,7 +380,7 @@ public:
       #if ENABLED(SCROLL_LONG_FILENAMES)
         static uint8_t filename_scroll_pos, filename_scroll_max;
       #endif
-      static const char * const scrolled_filename(CardReader &theCard, const uint8_t maxlen, uint8_t hash, const bool doScroll);
+      static const char * scrolled_filename(CardReader &theCard, const uint8_t maxlen, uint8_t hash, const bool doScroll);
     #endif
 
     #if IS_KINEMATIC

commit 1f93d2bcf70f1cbe63ac9f21892543663723c8f3
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Mon Nov 19 03:39:49 2018 +0100

    Fix LCD compile error, etc. (#12472)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 67f6606aa0..9465dc6161 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -46,7 +46,7 @@
     LCDVIEW_CALL_NO_REDRAW
   };
 
-  #if ENABLED(ADC_KEYPAD)
+  #if HAS_ADC_BUTTONS
     uint8_t get_ADC_keyValue();
   #endif
 
@@ -88,6 +88,30 @@
 
 #endif
 
+#if ENABLED(REPRAPWORLD_KEYPAD)
+  #define REPRAPWORLD_BTN_OFFSET          0 // Bit offset into buttons for shift register values
+
+  #define BLEN_REPRAPWORLD_KEYPAD_F3      0
+  #define BLEN_REPRAPWORLD_KEYPAD_F2      1
+  #define BLEN_REPRAPWORLD_KEYPAD_F1      2
+  #define BLEN_REPRAPWORLD_KEYPAD_DOWN    3
+  #define BLEN_REPRAPWORLD_KEYPAD_RIGHT   4
+  #define BLEN_REPRAPWORLD_KEYPAD_MIDDLE  5
+  #define BLEN_REPRAPWORLD_KEYPAD_UP      6
+  #define BLEN_REPRAPWORLD_KEYPAD_LEFT    7
+
+  #define EN_REPRAPWORLD_KEYPAD_F1        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F1))
+  #define EN_REPRAPWORLD_KEYPAD_F2        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F2))
+  #define EN_REPRAPWORLD_KEYPAD_F3        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F3))
+  #define EN_REPRAPWORLD_KEYPAD_DOWN      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_DOWN))
+  #define EN_REPRAPWORLD_KEYPAD_RIGHT     (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_RIGHT))
+  #define EN_REPRAPWORLD_KEYPAD_MIDDLE    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_MIDDLE))
+  #define EN_REPRAPWORLD_KEYPAD_UP        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_UP))
+  #define EN_REPRAPWORLD_KEYPAD_LEFT      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_LEFT))
+
+  #define RRK(B) (keypad_buttons & (B))
+#endif
+
 #if HAS_DIGITAL_BUTTONS
 
   // Wheel spin pins where BA is 00, 10, 11, 01 (1 bit always changes)
@@ -112,27 +136,6 @@
   #endif
 
   #if ENABLED(REPRAPWORLD_KEYPAD)
-    #define REPRAPWORLD_BTN_OFFSET          0 // Bit offset into buttons for shift register values
-
-    #define BLEN_REPRAPWORLD_KEYPAD_F3      0
-    #define BLEN_REPRAPWORLD_KEYPAD_F2      1
-    #define BLEN_REPRAPWORLD_KEYPAD_F1      2
-    #define BLEN_REPRAPWORLD_KEYPAD_DOWN    3
-    #define BLEN_REPRAPWORLD_KEYPAD_RIGHT   4
-    #define BLEN_REPRAPWORLD_KEYPAD_MIDDLE  5
-    #define BLEN_REPRAPWORLD_KEYPAD_UP      6
-    #define BLEN_REPRAPWORLD_KEYPAD_LEFT    7
-
-    #define EN_REPRAPWORLD_KEYPAD_F1        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F1))
-    #define EN_REPRAPWORLD_KEYPAD_F2        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F2))
-    #define EN_REPRAPWORLD_KEYPAD_F3        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F3))
-    #define EN_REPRAPWORLD_KEYPAD_DOWN      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_DOWN))
-    #define EN_REPRAPWORLD_KEYPAD_RIGHT     (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_RIGHT))
-    #define EN_REPRAPWORLD_KEYPAD_MIDDLE    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_MIDDLE))
-    #define EN_REPRAPWORLD_KEYPAD_UP        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_UP))
-    #define EN_REPRAPWORLD_KEYPAD_LEFT      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_LEFT))
-
-    #define RRK(B) (buttons_reprapworld_keypad & (B))
 
     #ifdef EN_C
       #define BUTTON_CLICK() ((buttons & EN_C) || RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE))
@@ -180,6 +183,8 @@
 
 #else
 
+  #define BUTTON_EXISTS(BN) 0
+
   // Shift register bits correspond to buttons:
   #define BL_LE 7   // Left
   #define BL_UP 6   // Up
@@ -463,7 +468,7 @@ public:
 
     static volatile uint8_t buttons;
     #if ENABLED(REPRAPWORLD_KEYPAD)
-      static volatile uint8_t buttons_reprapworld_keypad;
+      static volatile uint8_t keypad_buttons;
       static bool handle_keypad();
     #endif
     #if ENABLED(LCD_HAS_SLOW_BUTTONS)

commit 826d5701627f4c725ab9e0c61a53643008c5dbbf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 18 19:58:02 2018 -0600

    Combine Travis CI option-setting commands (#12474)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b190e3c4b3..67f6606aa0 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -211,6 +211,12 @@
     FONT_EDIT,
     FONT_MENU
   };
+#else
+  enum HD44780CharSet : uint8_t {
+    CHARSET_MENU,
+    CHARSET_INFO,
+    CHARSET_BOOT
+  };
 #endif
 
 ////////////////////////////////////////////
@@ -282,23 +288,15 @@ public:
 
         static constexpr bool drawing_screen = false, first_page = true;
 
-        enum HD44780CharSet : uint8_t { CHARSET_MENU, CHARSET_INFO, CHARSET_BOOT };
-
-        static void set_custom_characters(
-          #if ENABLED(LCD_PROGRESS_BAR) || ENABLED(SHOW_BOOTSCREEN)
-            const HD44780CharSet screen_charset=CHARSET_INFO
-          #endif
-        );
+        static void set_custom_characters(const HD44780CharSet screen_charset=CHARSET_INFO);
 
         #if ENABLED(LCD_PROGRESS_BAR)
           static millis_t progress_bar_ms;  // Start time for the current progress bar cycle
+          static void draw_progress_bar(const uint8_t percent);
           #if PROGRESS_MSG_EXPIRE > 0
             static millis_t MarlinUI::expire_status_ms; // = 0
             static inline void reset_progress_bar_timeout() { expire_status_ms = 0; }
           #endif
-          #define LCD_SET_CHARSET(C) set_custom_characters(C)
-        #else
-          #define LCD_SET_CHARSET(C) set_custom_characters()
         #endif
 
       #endif

commit c1e17037e55cfb3220a0f3b190d3f2df8fd72724
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Sat Nov 17 21:21:44 2018 -0700

    Various fixes for MarlinUI and ExtUI (#12439)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 4723eb5032..b190e3c4b3 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -243,15 +243,22 @@ public:
   #if HAS_SPI_LCD || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
     static void init();
     static void update();
-    static void setalertstatusPGM(PGM_P message);
+    static void set_alert_status_P(PGM_P message);
   #else // NO LCD
     static inline void init() {}
     static inline void update() {}
-    static inline void setalertstatusPGM(PGM_P message) { UNUSED(message); }
+    static inline void set_alert_status_P(PGM_P message) { UNUSED(message); }
   #endif
 
   #if HAS_SPI_LCD || ENABLED(EXTENSIBLE_UI)
 
+    static char status_message[];
+    static bool has_status();
+
+
+    static uint8_t status_message_level;      // Higher levels block lower levels
+    static inline void reset_alert_level() { status_message_level = 0; }
+
     #if HAS_SPI_LCD
 
       static bool detected();
@@ -296,16 +303,10 @@ public:
 
       #endif
 
-      // Status message
-      static char status_message[];
       #if ENABLED(STATUS_MESSAGE_SCROLLING)
         static uint8_t status_scroll_offset;
       #endif
-      static bool has_status();
-
       static uint8_t lcd_status_update_delay;
-      static uint8_t status_message_level;      // Higher levels block lower levels
-      static inline void reset_alert_level() { status_message_level = 0; }
 
       #if HAS_PRINT_PROGRESS
         #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
@@ -341,26 +342,22 @@ public:
       static void status_screen();
 
     #else
-
       static void refresh() {}
-      static inline void reset_alert_level() {}
-      static constexpr bool has_status() { return true; }
-
     #endif
 
     static bool get_blink();
     static void kill_screen(PGM_P const lcd_msg);
     static void draw_kill_screen();
-    static void setstatus(const char* const message, const bool persist=false);
-    static void setstatusPGM(PGM_P const message, const int8_t level=0);
+    static void set_status(const char* const message, const bool persist=false);
+    static void set_status_P(PGM_P const message, const int8_t level=0);
     static void status_printf_P(const uint8_t level, PGM_P const fmt, ...);
     static void reset_status();
 
   #else // MALYAN_LCD or NO LCD
 
     static inline void refresh() {}
-    static inline void setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
-    static inline void setstatusPGM(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
+    static inline void set_status(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
+    static inline void set_status_P(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
     static inline void status_printf_P(const uint8_t level, PGM_P const fmt, ...) { UNUSED(level); UNUSED(fmt); }
     static inline void reset_status() {}
     static inline void reset_alert_level() {}
@@ -508,6 +505,10 @@ private:
 
   static void _synchronize();
 
+  #if HAS_SPI_LCD || ENABLED(EXTENSIBLE_UI)
+    static void finishstatus(const bool persist);
+  #endif
+
   #if HAS_SPI_LCD
     #if HAS_LCD_MENU
       #if LCD_TIMEOUT_TO_STATUS
@@ -517,13 +518,10 @@ private:
       #endif
     #endif
     static void draw_status_screen();
-    static void finishstatus(const bool persist);
-  #else
-    static inline void finishstatus(const bool persist) { UNUSED(persist); refresh(); }
   #endif
 };
 
 extern MarlinUI ui;
 
-#define LCD_MESSAGEPGM(x)      ui.setstatusPGM(PSTR(x))
-#define LCD_ALERTMESSAGEPGM(x) ui.setalertstatusPGM(PSTR(x))
+#define LCD_MESSAGEPGM(x)      ui.set_status_P(PSTR(x))
+#define LCD_ALERTMESSAGEPGM(x) ui.set_alert_status_P(PSTR(x))

commit 93e958f6958b85476eb60d9966f8299aea8464c4
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Sun Nov 18 04:21:30 2018 +0100

    Fix compile error with ZONESTAR_LCD+NO_LCD_MENUS (#12466)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index af15a158e4..4723eb5032 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -88,7 +88,7 @@
 
 #endif
 
-#if HAS_DIGITAL_ENCODER
+#if HAS_DIGITAL_BUTTONS
 
   // Wheel spin pins where BA is 00, 10, 11, 01 (1 bit always changes)
   #define BLEN_A 0

commit 3e9ffaddb679c6eadd37123fd2d6e1ec0bee4e44
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 16 21:44:48 2018 -0600

    Consolidate, optimize some LCD menu code (#12450)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index dcafb30eea..af15a158e4 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -23,6 +23,12 @@
 
 #include "../inc/MarlinConfig.h"
 
+#if HAS_BUZZER
+  #include "../libs/buzzer.h"
+#endif
+
+#define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
+
 #if HAS_SPI_LCD
 
   #include "../Marlin.h"
@@ -32,16 +38,6 @@
     #include "../module/motion.h" // for active_extruder
   #endif
 
-#endif
-
-#if HAS_BUZZER
-  #include "../libs/buzzer.h"
-#endif
-
-#define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
-
-#if HAS_SPI_LCD
-
   enum LCDViewAction : uint8_t {
     LCDVIEW_NONE,
     LCDVIEW_REDRAW_NOW,
@@ -66,6 +62,10 @@
 
   #if HAS_LCD_MENU
 
+    #if ENABLED(SDSUPPORT)
+      #include "../sd/cardreader.h"
+    #endif
+
     typedef void (*screenFunc_t)();
     typedef void (*menuAction_t)();
 
@@ -213,9 +213,6 @@
   };
 #endif
 
-#define LCD_MESSAGEPGM(x)      ui.setstatusPGM(PSTR(x))
-#define LCD_ALERTMESSAGEPGM(x) ui.setalertstatusPGM(PSTR(x))
-
 ////////////////////////////////////////////
 //////////// MarlinUI Singleton ////////////
 ////////////////////////////////////////////
@@ -379,8 +376,11 @@ public:
       static void enable_encoder_multiplier(const bool onoff);
     #endif
 
-    #if ENABLED(SCROLL_LONG_FILENAMES)
-      static uint8_t filename_scroll_pos, filename_scroll_max;
+    #if ENABLED(SDSUPPORT)
+      #if ENABLED(SCROLL_LONG_FILENAMES)
+        static uint8_t filename_scroll_pos, filename_scroll_max;
+      #endif
+      static const char * const scrolled_filename(CardReader &theCard, const uint8_t maxlen, uint8_t hash, const bool doScroll);
     #endif
 
     #if IS_KINEMATIC
@@ -524,3 +524,6 @@ private:
 };
 
 extern MarlinUI ui;
+
+#define LCD_MESSAGEPGM(x)      ui.setstatusPGM(PSTR(x))
+#define LCD_ALERTMESSAGEPGM(x) ui.setalertstatusPGM(PSTR(x))

commit f4c128ecaa8f0355f6ecd359f06dbc2cfeed344b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 14 06:00:21 2018 -0600

    Move RRW keypad code to a common method (#12429)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b67b6e96a7..dcafb30eea 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -63,8 +63,6 @@
   #endif
 
   #define LCD_UPDATE_INTERVAL 100
-  #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
-  #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
   #if HAS_LCD_MENU
 
@@ -99,6 +97,9 @@
   #define EN_A _BV(BLEN_A)
   #define EN_B _BV(BLEN_B)
 
+  #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
+  #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
+
   #if BUTTON_EXISTS(ENC)
     #define BLEN_C 2
     #define EN_C _BV(BLEN_C)
@@ -466,6 +467,10 @@ public:
   #if HAS_ENCODER_ACTION
 
     static volatile uint8_t buttons;
+    #if ENABLED(REPRAPWORLD_KEYPAD)
+      static volatile uint8_t buttons_reprapworld_keypad;
+      static bool handle_keypad();
+    #endif
     #if ENABLED(LCD_HAS_SLOW_BUTTONS)
       static volatile uint8_t slow_buttons;
       static uint8_t read_slow_buttons();

commit 54ec5528a0d8ebf4573af3ec78d8141d8a90dceb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 14 01:34:16 2018 -0600

    hasstatus => has_status

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 7e1db1f807..b67b6e96a7 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -303,7 +303,7 @@ public:
       #if ENABLED(STATUS_MESSAGE_SCROLLING)
         static uint8_t status_scroll_offset;
       #endif
-      static bool hasstatus();
+      static bool has_status();
 
       static uint8_t lcd_status_update_delay;
       static uint8_t status_message_level;      // Higher levels block lower levels
@@ -346,7 +346,7 @@ public:
 
       static void refresh() {}
       static inline void reset_alert_level() {}
-      static constexpr bool hasstatus() { return true; }
+      static constexpr bool has_status() { return true; }
 
     #endif
 
@@ -366,7 +366,7 @@ public:
     static inline void status_printf_P(const uint8_t level, PGM_P const fmt, ...) { UNUSED(level); UNUSED(fmt); }
     static inline void reset_status() {}
     static inline void reset_alert_level() {}
-    static constexpr bool hasstatus() { return false; }
+    static constexpr bool has_status() { return false; }
 
   #endif
 

commit 0ee1a92971bba0fe5ed290e2562bca71cfb5ea46
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Nov 13 01:47:45 2018 -0600

    Group status methods, share reset_status with Extensible UI (#12414)
    
    * Group status methods, share reset_status with Extensible UI
    * Move common DOGM code to headers

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b3a7038c95..7e1db1f807 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -38,166 +38,6 @@
   #include "../libs/buzzer.h"
 #endif
 
-#if HAS_GRAPHICAL_LCD
-
-  #ifndef LCD_PIXEL_WIDTH
-    #define LCD_PIXEL_WIDTH 128
-  #endif
-  #ifndef LCD_PIXEL_HEIGHT
-    #define LCD_PIXEL_HEIGHT 64
-  #endif
-
-  // LCD selection
-  #if ENABLED(REPRAPWORLD_GRAPHICAL_LCD)
-    #define U8G_CLASS U8GLIB_ST7920_128X64_4X
-    #if DISABLED(SDSUPPORT) && (LCD_PINS_D4 == SCK_PIN) && (LCD_PINS_ENABLE == MOSI_PIN)
-      #define U8G_PARAM LCD_PINS_RS
-    #else
-      #define U8G_PARAM LCD_PINS_D4, LCD_PINS_ENABLE, LCD_PINS_RS
-    #endif
-
-  #elif ENABLED(U8GLIB_ST7920)
-    // RepRap Discount Full Graphics Smart Controller
-    #if DISABLED(SDSUPPORT) && (LCD_PINS_D4 == SCK_PIN) && (LCD_PINS_ENABLE == MOSI_PIN)
-      #define U8G_CLASS U8GLIB_ST7920_128X64_4X_HAL
-      #define U8G_PARAM LCD_PINS_RS // 2 stripes, HW SPI (shared with SD card, on AVR does not use standard LCD adapter)
-    #else
-      //#define U8G_CLASS U8GLIB_ST7920_128X64_4X
-      //#define U8G_PARAM LCD_PINS_D4, LCD_PINS_ENABLE, LCD_PINS_RS     // Original u8glib device. 2 stripes, SW SPI
-      #define U8G_CLASS U8GLIB_ST7920_128X64_RRD
-      #define U8G_PARAM LCD_PINS_D4, LCD_PINS_ENABLE, LCD_PINS_RS       // Number of stripes can be adjusted in ultralcd_st7920_u8glib_rrd.h with PAGE_HEIGHT
-                                                                        // AVR version ignores these pin settings
-                                                                        // HAL version uses these pin settings
-    #endif
-
-  #elif ENABLED(CARTESIO_UI)
-    // The CartesioUI display
-    //#define U8G_CLASS U8GLIB_DOGM128_2X
-    //#define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // 4 stripes
-    #define U8G_CLASS U8GLIB_DOGM128_2X
-    #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                              // 4 stripes
-
-  #elif ENABLED(U8GLIB_LM6059_AF)
-    // Based on the Adafruit ST7565 (http://www.adafruit.com/products/250)
-    //#define U8G_CLASS U8GLIB_LM6059
-    //#define U8G_PARAM DOGLCD_CS, DOGLCD_A0                            // 8 stripes
-    #define U8G_CLASS U8GLIB_LM6059_2X
-    #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                              // 4 stripes
-
-  #elif ENABLED(U8GLIB_ST7565_64128N)
-    // The MaKrPanel, Mini Viki, Viki 2.0 & AZSMZ 12864 ST7565 controller
-    #define SMART_RAMPS (MB(RAMPS_SMART_EFB) || MB(RAMPS_SMART_EEB) || MB(RAMPS_SMART_EFF) || MB(RAMPS_SMART_EEF) || MB(RAMPS_SMART_SF))
-    #if DOGLCD_SCK == SCK_PIN && DOGLCD_MOSI == MOSI_PIN && !SMART_RAMPS
-      #define U8G_CLASS U8GLIB_64128N_2X_HAL
-      #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                            // using HW-SPI
-    #else
-      #define U8G_CLASS U8GLIB_64128N_2X_HAL
-      #define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // using SW-SPI
-    #endif
-
-  #elif ENABLED(MKS_12864OLED_SSD1306)
-    // MKS 128x64 (SSD1306) OLED I2C LCD
-    #define U8G_CLASS U8GLIB_SSD1306_128X64
-    #define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0     // 8 stripes
-    //#define U8G_CLASS U8GLIB_SSD1306_128X64_2X
-    //#define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // 4 stripes
-
-  #elif ENABLED(U8GLIB_SSD1306)
-    // Generic support for SSD1306 OLED I2C LCDs
-    //#define U8G_CLASS U8GLIB_SSD1306_128X64_2X_I2C_2_WIRE
-    //#define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)           // 4 stripes
-    #define U8G_CLASS U8GLIB_SSD1306_128X64_2X
-    #define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)             // 4 stripes
-
-  #elif ENABLED(MKS_12864OLED)
-    // MKS 128x64 (SH1106) OLED I2C LCD
-    #define U8G_CLASS U8GLIB_SH1106_128X64
-    #define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0     // 8 stripes
-    //#define U8G_CLASS U8GLIB_SH1106_128X64_2X
-    //#define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // 4 stripes
-  #elif ENABLED(U8GLIB_SH1106)
-    // Generic support for SH1106 OLED I2C LCDs
-    //#define U8G_CLASS U8GLIB_SH1106_128X64_2X_I2C_2_WIRE
-    //#define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)           // 4 stripes
-    #define U8G_CLASS U8GLIB_SH1106_128X64_2X
-    #define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)             // 4 stripes
-  #elif ENABLED(U8GLIB_SSD1309)
-    // Generic support for SSD1309 OLED I2C LCDs
-    #define U8G_CLASS U8GLIB_SSD1309_128X64
-    #define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)
-  #elif ENABLED(MINIPANEL)
-    // The MINIPanel display
-    //#define U8G_CLASS U8GLIB_MINI12864
-    //#define U8G_PARAM DOGLCD_CS, DOGLCD_A0                            // 8 stripes
-    #define U8G_CLASS U8GLIB_MINI12864_2X
-    #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                              // 4 stripes
-  #elif ENABLED(U8GLIB_SH1106_EINSTART)
-    // Connected via motherboard header
-    #define U8G_CLASS U8GLIB_SH1106_128X64
-    #define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, LCD_PINS_DC, LCD_PINS_RS
-  #else
-    // for regular DOGM128 display with HW-SPI
-    //#define U8G_CLASS U8GLIB_DOGM128
-    //#define U8G_PARAM DOGLCD_CS, DOGLCD_A0                            // HW-SPI Com: CS, A0  // 8 stripes
-    #define U8G_CLASS U8GLIB_DOGM128_2X
-    #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                              // HW-SPI Com: CS, A0 // 4 stripes
-  #endif
-
-  #include <U8glib.h>
-  #include "dogm/HAL_LCD_class_defines.h"
-  extern U8G_CLASS u8g;
-
-  // For selective rendering within a Y range
-  #define PAGE_UNDER(yb) (u8g.getU8g()->current_page.y0 <= (yb))
-  #define PAGE_CONTAINS(ya, yb) (PAGE_UNDER(yb) && u8g.getU8g()->current_page.y1 >= (ya))
-
-  // Only Western languages support big / small fonts
-  #if DISABLED(DISPLAY_CHARSET_ISO10646_1)
-    #undef USE_BIG_EDIT_FONT
-    #undef USE_SMALL_INFOFONT
-  #endif
-
-  #define MENU_FONT_NAME    ISO10646_1_5x7
-  #define MENU_FONT_WIDTH    6
-  #define MENU_FONT_ASCENT  10
-  #define MENU_FONT_DESCENT  2
-  #define MENU_FONT_HEIGHT  (MENU_FONT_ASCENT + MENU_FONT_DESCENT)
-
-  #if ENABLED(USE_BIG_EDIT_FONT)
-    #define EDIT_FONT_NAME    u8g_font_9x18
-    #define EDIT_FONT_WIDTH    9
-    #define EDIT_FONT_ASCENT  10
-    #define EDIT_FONT_DESCENT  3
-  #else
-    #define EDIT_FONT_NAME    MENU_FONT_NAME
-    #define EDIT_FONT_WIDTH   MENU_FONT_WIDTH
-    #define EDIT_FONT_ASCENT  MENU_FONT_ASCENT
-    #define EDIT_FONT_DESCENT MENU_FONT_DESCENT
-  #endif
-  #define EDIT_FONT_HEIGHT (EDIT_FONT_ASCENT + EDIT_FONT_DESCENT)
-
-  // Get the Ascent, Descent, and total Height for the Info Screen font
-  #if ENABLED(USE_SMALL_INFOFONT)
-    extern const u8g_fntpgm_uint8_t u8g_font_6x9[];
-    #define INFO_FONT_ASCENT 7
-  #else
-    #define INFO_FONT_ASCENT 8
-  #endif
-  #define INFO_FONT_DESCENT 2
-  #define INFO_FONT_HEIGHT (INFO_FONT_ASCENT + INFO_FONT_DESCENT)
-
-  enum MarlinFont : uint8_t {
-    FONT_STATUSMENU = 1,
-    FONT_EDIT,
-    FONT_MENU
-  };
-
-  #if ENABLED(LIGHTWEIGHT_UI)
-    void lcd_in_status(const bool inStatus);
-  #endif
-
-#endif // HAS_GRAPHICAL_LCD
-
 #define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
 
 #if HAS_SPI_LCD
@@ -364,6 +204,14 @@
   #endif
 #endif
 
+#if HAS_GRAPHICAL_LCD
+  enum MarlinFont : uint8_t {
+    FONT_STATUSMENU = 1,
+    FONT_EDIT,
+    FONT_MENU
+  };
+#endif
+
 #define LCD_MESSAGEPGM(x)      ui.setstatusPGM(PSTR(x))
 #define LCD_ALERTMESSAGEPGM(x) ui.setalertstatusPGM(PSTR(x))
 
@@ -397,12 +245,10 @@ public:
   #if HAS_SPI_LCD || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
     static void init();
     static void update();
-    static bool detected();
     static void setalertstatusPGM(PGM_P message);
   #else // NO LCD
     static inline void init() {}
     static inline void update() {}
-    static constexpr bool detected() { return true; }
     static inline void setalertstatusPGM(PGM_P message) { UNUSED(message); }
   #endif
 
@@ -410,6 +256,8 @@ public:
 
     #if HAS_SPI_LCD
 
+      static bool detected();
+
       static LCDViewAction lcdDrawUpdate;
       static inline bool should_draw() { return bool(lcdDrawUpdate); }
       static inline void refresh(const LCDViewAction type) { lcdDrawUpdate = type; }
@@ -455,6 +303,7 @@ public:
       #if ENABLED(STATUS_MESSAGE_SCROLLING)
         static uint8_t status_scroll_offset;
       #endif
+      static bool hasstatus();
 
       static uint8_t lcd_status_update_delay;
       static uint8_t status_message_level;      // Higher levels block lower levels
@@ -495,15 +344,15 @@ public:
 
     #else
 
-      static void refresh();
-      static void reset_alert_level();
+      static void refresh() {}
+      static inline void reset_alert_level() {}
+      static constexpr bool hasstatus() { return true; }
 
     #endif
 
     static bool get_blink();
     static void kill_screen(PGM_P const lcd_msg);
     static void draw_kill_screen();
-    static bool hasstatus();
     static void setstatus(const char* const message, const bool persist=false);
     static void setstatusPGM(PGM_P const message, const int8_t level=0);
     static void status_printf_P(const uint8_t level, PGM_P const fmt, ...);
@@ -512,12 +361,12 @@ public:
   #else // MALYAN_LCD or NO LCD
 
     static inline void refresh() {}
-    static constexpr bool hasstatus() { return false; }
     static inline void setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
     static inline void setstatusPGM(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
     static inline void status_printf_P(const uint8_t level, PGM_P const fmt, ...) { UNUSED(level); UNUSED(fmt); }
     static inline void reset_status() {}
     static inline void reset_alert_level() {}
+    static constexpr bool hasstatus() { return false; }
 
   #endif
 
@@ -563,6 +412,10 @@ public:
     static inline bool on_status_screen() { return currentScreen == status_screen; }
     static inline void run_current_screen() { (*currentScreen)(); }
 
+    #if ENABLED(LIGHTWEIGHT_UI)
+      static void lcd_in_status(const bool inStatus);
+    #endif
+
     static inline void defer_status_screen(const bool defer) {
       #if LCD_TIMEOUT_TO_STATUS
         defer_return_to_status = defer;
@@ -636,13 +489,13 @@ public:
       static inline void encoder_direction_menus()  { encoderDirection = -(ENCODERBASE); }
     #else
       static constexpr int8_t encoderDirection = ENCODERBASE;
-      static inline void encoder_direction_normal() { }
-      static inline void encoder_direction_menus()  { }
+      static inline void encoder_direction_normal() {}
+      static inline void encoder_direction_menus()  {}
     #endif
 
   #else
 
-    static inline void update_buttons() { }
+    static inline void update_buttons() {}
 
   #endif
 
@@ -660,6 +513,8 @@ private:
     #endif
     static void draw_status_screen();
     static void finishstatus(const bool persist);
+  #else
+    static inline void finishstatus(const bool persist) { UNUSED(persist); refresh(); }
   #endif
 };
 

commit a0c795b097a30eff006c8dff178abf5f1f1907fa
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 11 12:16:24 2018 -0600

    Encapsulate common display code in a singleton (#12395)
    
    * Encapsulate common LCD code in a singleton
    * Depend more UBL code on UBL_DEVEL_DEBUGGING
      - Since most users don't need the debugging on at all times, this helps reduce the default build size for UBL by over 2K, a little closer to fitting on 128K boards.

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 42f8e82bf7..b3a7038c95 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -23,6 +23,21 @@
 
 #include "../inc/MarlinConfig.h"
 
+#if HAS_SPI_LCD
+
+  #include "../Marlin.h"
+
+  #if ENABLED(ADVANCED_PAUSE_FEATURE)
+    #include "../feature/pause.h"
+    #include "../module/motion.h" // for active_extruder
+  #endif
+
+#endif
+
+#if HAS_BUZZER
+  #include "../libs/buzzer.h"
+#endif
+
 #if HAS_GRAPHICAL_LCD
 
   #ifndef LCD_PIXEL_WIDTH
@@ -171,13 +186,11 @@
   #define INFO_FONT_DESCENT 2
   #define INFO_FONT_HEIGHT (INFO_FONT_ASCENT + INFO_FONT_DESCENT)
 
-  // Font IDs
   enum MarlinFont : uint8_t {
     FONT_STATUSMENU = 1,
     FONT_EDIT,
     FONT_MENU
   };
-  void lcd_setFont(const MarlinFont font_nr);
 
   #if ENABLED(LIGHTWEIGHT_UI)
     void lcd_in_status(const bool inStatus);
@@ -185,46 +198,10 @@
 
 #endif // HAS_GRAPHICAL_LCD
 
-#if HAS_SPI_LCD || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
-  void lcd_init();
-  bool lcd_detected();
-  void lcd_update();
-  void lcd_setalertstatusPGM(PGM_P message);
-  void kill_screen(PGM_P lcd_msg);
-#else
-  inline void lcd_init() {}
-  inline bool lcd_detected() { return true; }
-  inline void lcd_update() {}
-  inline void lcd_setalertstatusPGM(PGM_P message) { UNUSED(message); }
-#endif
-
 #define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
 
-#if HAS_ENCODER_ACTION
-  extern uint32_t encoderPosition;
-#endif
-
 #if HAS_SPI_LCD
 
-  #include "../Marlin.h"
-
-  #if ENABLED(ADVANCED_PAUSE_FEATURE)
-    #include "../feature/pause.h"
-    #include "../module/motion.h" // for active_extruder
-  #endif
-
-  void lcd_status_screen();
-  void lcd_return_to_status();
-  bool lcd_hasstatus();
-  void lcd_setstatus(const char* message, const bool persist=false);
-  void lcd_setstatusPGM(PGM_P message, const int8_t level=0);
-  void lcd_setalertstatusPGM(PGM_P message);
-  void lcd_reset_alert_level();
-  void lcd_reset_status();
-  void lcd_status_printf_P(const uint8_t level, PGM_P const fmt, ...);
-  void lcd_kill_screen();
-  void kill_screen(PGM_P lcd_msg);
-
   enum LCDViewAction : uint8_t {
     LCDVIEW_NONE,
     LCDVIEW_REDRAW_NOW,
@@ -233,37 +210,10 @@
     LCDVIEW_CALL_NO_REDRAW
   };
 
-  extern LCDViewAction lcdDrawUpdate;
-  inline void lcd_refresh() { lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; }
-
-  #if HAS_BUZZER
-    void lcd_buzz(const long duration, const uint16_t freq);
-  #else
-    inline void lcd_buzz(const long duration, const uint16_t freq) { UNUSED(duration); UNUSED(freq); }
-  #endif
-
-  void lcd_quick_feedback(const bool clear_buttons=true); // Audible feedback for a button click - could also be visual
-
-  #if ENABLED(LCD_PROGRESS_BAR)
-    extern millis_t progress_bar_ms;  // Start time for the current progress bar cycle
-    #if PROGRESS_MSG_EXPIRE > 0
-      void dontExpireStatus();
-    #endif
-  #endif
-
-  #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
-    extern uint8_t progress_bar_percent;
-  #endif
-
   #if ENABLED(ADC_KEYPAD)
     uint8_t get_ADC_keyValue();
   #endif
 
-  #if HAS_LCD_CONTRAST
-    extern int16_t lcd_contrast;
-    void set_lcd_contrast(const int16_t value);
-  #endif
-
   #if HAS_GRAPHICAL_LCD
     #define SETCURSOR(col, row) lcd_moveto(col * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
     #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
@@ -272,10 +222,6 @@
     #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - len, row)
   #endif
 
-  #if ENABLED(SHOW_BOOTSCREEN)
-    void lcd_bootscreen();
-  #endif
-
   #define LCD_UPDATE_INTERVAL 100
   #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
   #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
@@ -284,41 +230,10 @@
 
     typedef void (*screenFunc_t)();
     typedef void (*menuAction_t)();
-    extern screenFunc_t currentScreen;
-    void lcd_goto_screen(const screenFunc_t screen, const uint32_t encoder=0);
-
-    extern bool lcd_clicked;
-    #if LCD_TIMEOUT_TO_STATUS
-      extern bool defer_return_to_status;
-      inline void set_defer_return_to_status(const bool defer) { defer_return_to_status = defer; }
-    #else
-      constexpr bool defer_return_to_status = false;
-      #define set_defer_return_to_status(D) NOOP
-    #endif
-
-    extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2];
-    extern uint8_t lcd_preheat_fan_speed[2];
-
-    #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
-      extern bool lcd_external_control;
-    #else
-      constexpr bool lcd_external_control = false;
-    #endif
-
-    #if ENABLED(LCD_BED_LEVELING)
-      extern bool lcd_wait_for_move;
-    #else
-      constexpr bool lcd_wait_for_move = false;
-    #endif
 
     // Manual Movement
     constexpr float manual_feedrate_mm_m[XYZE] = MANUAL_FEEDRATE;
     extern float move_menu_scale;
-    #if IS_KINEMATIC
-      extern bool processing_manual_move;
-    #else
-      constexpr bool processing_manual_move = false;
-    #endif
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       void lcd_advanced_pause_show_message(const AdvancedPauseMessage message,
@@ -326,65 +241,15 @@
                                            const uint8_t extruder=active_extruder);
     #endif
 
-    #if ENABLED(G26_MESH_VALIDATION)
-      void lcd_chirp();
-    #endif
-
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       void lcd_mesh_edit_setup(const float &initial);
       float lcd_mesh_edit();
     #endif
 
-    #if ENABLED(SCROLL_LONG_FILENAMES)
-      extern uint8_t filename_scroll_pos, filename_scroll_max;
-    #endif
-
   #endif // HAS_LCD_MENU
 
-  #if ENABLED(FILAMENT_LCD_DISPLAY) && ENABLED(SDSUPPORT)
-    extern millis_t previous_lcd_status_ms;
-  #endif
-
-  #if ENABLED(STATUS_MESSAGE_SCROLLING)
-    extern uint8_t status_scroll_offset;
-  #endif
-
-  bool lcd_blink();
-
-  bool use_click();
-
-  #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
-    bool is_lcd_clicked();
-    void wait_for_release();
-  #endif
-
-#elif ENABLED(EXTENSIBLE_UI)
-
-  // These functions are defined elsewhere
-  void lcd_setstatus(const char* const message, const bool persist=false);
-  void lcd_setstatusPGM(const char* const message, const int8_t level=0);
-  void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...);
-  void lcd_reset_status();
-  void lcd_refresh();
-  void lcd_reset_alert_level();
-  bool lcd_hasstatus();
-
-#else // MALYAN_LCD or no LCD
-
-  constexpr bool lcd_wait_for_move = false;
-
-  inline void lcd_refresh() {}
-  inline bool lcd_hasstatus() { return false; }
-  inline void lcd_setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
-  inline void lcd_setstatusPGM(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
-  inline void lcd_status_printf_P(const uint8_t level, PGM_P const fmt, ...) { UNUSED(level); UNUSED(fmt); }
-  inline void lcd_reset_alert_level() {}
-  inline void lcd_reset_status() {}
-
 #endif
 
-#define HAS_DIGITAL_ENCODER (HAS_SPI_LCD && ENABLED(NEWPANEL))
-
 #if HAS_DIGITAL_ENCODER
 
   // Wheel spin pins where BA is 00, 10, 11, 01 (1 bit always changes)
@@ -402,103 +267,400 @@
   #if BUTTON_EXISTS(BACK)
     #define BLEN_D 3
     #define EN_D _BV(BLEN_D)
-    #define LCD_BACK_CLICKED (buttons & EN_D)
+    #define LCD_BACK_CLICKED() (buttons & EN_D)
   #endif
 
-#endif // HAS_DIGITAL_ENCODER
+  #if ENABLED(REPRAPWORLD_KEYPAD)
+    #define REPRAPWORLD_BTN_OFFSET          0 // Bit offset into buttons for shift register values
+
+    #define BLEN_REPRAPWORLD_KEYPAD_F3      0
+    #define BLEN_REPRAPWORLD_KEYPAD_F2      1
+    #define BLEN_REPRAPWORLD_KEYPAD_F1      2
+    #define BLEN_REPRAPWORLD_KEYPAD_DOWN    3
+    #define BLEN_REPRAPWORLD_KEYPAD_RIGHT   4
+    #define BLEN_REPRAPWORLD_KEYPAD_MIDDLE  5
+    #define BLEN_REPRAPWORLD_KEYPAD_UP      6
+    #define BLEN_REPRAPWORLD_KEYPAD_LEFT    7
+
+    #define EN_REPRAPWORLD_KEYPAD_F1        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F1))
+    #define EN_REPRAPWORLD_KEYPAD_F2        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F2))
+    #define EN_REPRAPWORLD_KEYPAD_F3        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F3))
+    #define EN_REPRAPWORLD_KEYPAD_DOWN      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_DOWN))
+    #define EN_REPRAPWORLD_KEYPAD_RIGHT     (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_RIGHT))
+    #define EN_REPRAPWORLD_KEYPAD_MIDDLE    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_MIDDLE))
+    #define EN_REPRAPWORLD_KEYPAD_UP        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_UP))
+    #define EN_REPRAPWORLD_KEYPAD_LEFT      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_LEFT))
+
+    #define RRK(B) (buttons_reprapworld_keypad & (B))
+
+    #ifdef EN_C
+      #define BUTTON_CLICK() ((buttons & EN_C) || RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE))
+    #else
+      #define BUTTON_CLICK() RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE)
+    #endif
 
-#if HAS_LCD_MENU
+  #elif ENABLED(LCD_I2C_VIKI)
 
-  extern volatile uint8_t buttons;  // The last-checked buttons in a bit array.
-  void lcd_buttons_update();
+    #define B_I2C_BTN_OFFSET 3 // (the first three bit positions reserved for EN_A, EN_B, EN_C)
 
-#else
+    // button and encoder bit positions within 'buttons'
+    #define B_LE (BUTTON_LEFT   << B_I2C_BTN_OFFSET)    // The remaining normalized buttons are all read via I2C
+    #define B_UP (BUTTON_UP     << B_I2C_BTN_OFFSET)
+    #define B_MI (BUTTON_SELECT << B_I2C_BTN_OFFSET)
+    #define B_DW (BUTTON_DOWN   << B_I2C_BTN_OFFSET)
+    #define B_RI (BUTTON_RIGHT  << B_I2C_BTN_OFFSET)
 
-  inline void lcd_buttons_update() {}
+    #if BUTTON_EXISTS(ENC)                                // The pause/stop/restart button is connected to BTN_ENC when used
+      #define B_ST (EN_C)                                 // Map the pause/stop/resume button into its normalized functional name
+      #define BUTTON_CLICK() (buttons & (B_MI|B_RI|B_ST))  // Pause/stop also acts as click until a proper pause/stop is implemented.
+    #else
+      #define BUTTON_CLICK() (buttons & (B_MI|B_RI))
+    #endif
 
-#endif
+    // I2C buttons take too long to read inside an interrupt context and so we read them during lcd_update
+    #define LCD_HAS_SLOW_BUTTONS
 
-#if ENABLED(LCD_HAS_SLOW_BUTTONS)
-  extern volatile uint8_t slow_buttons;
-#endif
+  #elif ENABLED(LCD_I2C_PANELOLU2)
 
-#if ENABLED(REPRAPWORLD_KEYPAD)
-  #define REPRAPWORLD_BTN_OFFSET          0 // Bit offset into buttons for shift register values
-
-  #define BLEN_REPRAPWORLD_KEYPAD_F3      0
-  #define BLEN_REPRAPWORLD_KEYPAD_F2      1
-  #define BLEN_REPRAPWORLD_KEYPAD_F1      2
-  #define BLEN_REPRAPWORLD_KEYPAD_DOWN    3
-  #define BLEN_REPRAPWORLD_KEYPAD_RIGHT   4
-  #define BLEN_REPRAPWORLD_KEYPAD_MIDDLE  5
-  #define BLEN_REPRAPWORLD_KEYPAD_UP      6
-  #define BLEN_REPRAPWORLD_KEYPAD_LEFT    7
-
-  #define EN_REPRAPWORLD_KEYPAD_F1        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F1))
-  #define EN_REPRAPWORLD_KEYPAD_F2        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F2))
-  #define EN_REPRAPWORLD_KEYPAD_F3        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F3))
-  #define EN_REPRAPWORLD_KEYPAD_DOWN      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_DOWN))
-  #define EN_REPRAPWORLD_KEYPAD_RIGHT     (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_RIGHT))
-  #define EN_REPRAPWORLD_KEYPAD_MIDDLE    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_MIDDLE))
-  #define EN_REPRAPWORLD_KEYPAD_UP        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_UP))
-  #define EN_REPRAPWORLD_KEYPAD_LEFT      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_LEFT))
-
-  #define RRK(B) (buttons_reprapworld_keypad & (B))
+    #if !BUTTON_EXISTS(ENC) // Use I2C if not directly connected to a pin
+
+      #define B_I2C_BTN_OFFSET 3 // (the first three bit positions reserved for EN_A, EN_B, EN_C)
+
+      #define B_MI (PANELOLU2_ENCODER_C << B_I2C_BTN_OFFSET) // requires LiquidTWI2 library v1.2.3 or later
+
+      #define BUTTON_CLICK() (buttons & B_MI)
+
+      // I2C buttons take too long to read inside an interrupt context and so we read them during lcd_update
+      #define LCD_HAS_SLOW_BUTTONS
+
+    #endif
 
-  #ifdef EN_C
-    #define LCD_CLICKED() ((buttons & EN_C) || RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE))
-  #else
-    #define LCD_CLICKED() RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE)
   #endif
 
-#endif // REPRAPWORLD_KEYPAD
+#else
+
+  // Shift register bits correspond to buttons:
+  #define BL_LE 7   // Left
+  #define BL_UP 6   // Up
+  #define BL_MI 5   // Middle
+  #define BL_DW 4   // Down
+  #define BL_RI 3   // Right
+  #define BL_ST 2   // Red Button
+  #define B_LE (_BV(BL_LE))
+  #define B_UP (_BV(BL_UP))
+  #define B_MI (_BV(BL_MI))
+  #define B_DW (_BV(BL_DW))
+  #define B_RI (_BV(BL_RI))
+  #define B_ST (_BV(BL_ST))
+  #define BUTTON_CLICK() (buttons & (B_MI|B_ST))
+
+#endif
 
-#ifndef LCD_CLICKED
+#ifndef BUTTON_CLICK
   #ifdef EN_C
-    #define LCD_CLICKED() (buttons & EN_C)
+    #define BUTTON_CLICK() (buttons & EN_C)
   #else
-    #define LCD_CLICKED() false
+    #define BUTTON_CLICK() false
   #endif
 #endif
 
-extern uint8_t lcd_status_update_delay;
-extern char lcd_status_message[];
+#define LCD_MESSAGEPGM(x)      ui.setstatusPGM(PSTR(x))
+#define LCD_ALERTMESSAGEPGM(x) ui.setalertstatusPGM(PSTR(x))
 
-#define LCD_MESSAGEPGM(x)      lcd_setstatusPGM(PSTR(x))
-#define LCD_ALERTMESSAGEPGM(x) lcd_setalertstatusPGM(PSTR(x))
+////////////////////////////////////////////
+//////////// MarlinUI Singleton ////////////
+////////////////////////////////////////////
 
-// For i2c define BUZZ to use lcd_buzz
-#if ENABLED(LCD_USE_I2C_BUZZER)
-  #define BUZZ(d,f) lcd_buzz(d, f)
-#endif
+class MarlinUI {
+public:
 
-#if ENABLED(SD_REPRINT_LAST_SELECTED_FILE)
-  void lcd_reselect_last_file();
-#endif
+  MarlinUI() {
+    #if HAS_LCD_MENU
+      currentScreen = status_screen;
+    #endif
+  }
 
-#if HAS_GRAPHICAL_LCD
-  extern bool drawing_screen, first_page;
-#elif HAS_SPI_LCD
-  constexpr bool first_page = true;
-#endif
+  static inline void buzz(const long duration, const uint16_t freq) {
+    #if ENABLED(LCD_USE_I2C_BUZZER)
+      lcd.buzz(duration, freq);
+    #elif PIN_EXISTS(BEEPER)
+      buzzer.tone(duration, freq);
+    #else
+      UNUSED(duration); UNUSED(freq);
+    #endif
+  }
+
+  // LCD implementations
+  static void clear_lcd();
+  static void init_lcd();
+
+  #if HAS_SPI_LCD || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
+    static void init();
+    static void update();
+    static bool detected();
+    static void setalertstatusPGM(PGM_P message);
+  #else // NO LCD
+    static inline void init() {}
+    static inline void update() {}
+    static constexpr bool detected() { return true; }
+    static inline void setalertstatusPGM(PGM_P message) { UNUSED(message); }
+  #endif
+
+  #if HAS_SPI_LCD || ENABLED(EXTENSIBLE_UI)
+
+    #if HAS_SPI_LCD
+
+      static LCDViewAction lcdDrawUpdate;
+      static inline bool should_draw() { return bool(lcdDrawUpdate); }
+      static inline void refresh(const LCDViewAction type) { lcdDrawUpdate = type; }
+      static inline void refresh() { refresh(LCDVIEW_CLEAR_CALL_REDRAW); }
+
+      #if ENABLED(SHOW_BOOTSCREEN)
+        static void show_bootscreen();
+      #endif
+
+      #if HAS_GRAPHICAL_LCD
+
+        static bool drawing_screen, first_page;
+
+        static void set_font(const MarlinFont font_nr);
+
+      #else
+
+        static constexpr bool drawing_screen = false, first_page = true;
+
+        enum HD44780CharSet : uint8_t { CHARSET_MENU, CHARSET_INFO, CHARSET_BOOT };
+
+        static void set_custom_characters(
+          #if ENABLED(LCD_PROGRESS_BAR) || ENABLED(SHOW_BOOTSCREEN)
+            const HD44780CharSet screen_charset=CHARSET_INFO
+          #endif
+        );
+
+        #if ENABLED(LCD_PROGRESS_BAR)
+          static millis_t progress_bar_ms;  // Start time for the current progress bar cycle
+          #if PROGRESS_MSG_EXPIRE > 0
+            static millis_t MarlinUI::expire_status_ms; // = 0
+            static inline void reset_progress_bar_timeout() { expire_status_ms = 0; }
+          #endif
+          #define LCD_SET_CHARSET(C) set_custom_characters(C)
+        #else
+          #define LCD_SET_CHARSET(C) set_custom_characters()
+        #endif
+
+      #endif
+
+      // Status message
+      static char status_message[];
+      #if ENABLED(STATUS_MESSAGE_SCROLLING)
+        static uint8_t status_scroll_offset;
+      #endif
+
+      static uint8_t lcd_status_update_delay;
+      static uint8_t status_message_level;      // Higher levels block lower levels
+      static inline void reset_alert_level() { status_message_level = 0; }
+
+      #if HAS_PRINT_PROGRESS
+        #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
+          static uint8_t progress_bar_percent;
+          static void set_progress(const uint8_t progress) { progress_bar_percent = MIN(progress, 100); }
+        #endif
+        static uint8_t get_progress();
+      #else
+        static constexpr uint8_t get_progress() { return 0; }
+      #endif
+
+      #if HAS_LCD_CONTRAST
+        static int16_t contrast;
+        static void set_contrast(const int16_t value);
+        static inline void refresh_contrast() { set_contrast(contrast); }
+      #endif
+
+      #if ENABLED(FILAMENT_LCD_DISPLAY) && ENABLED(SDSUPPORT)
+        static millis_t next_filament_display;
+      #endif
+
+      static void quick_feedback(const bool clear_buttons=true);
+      static void completion_feedback(const bool good=true);
+
+      #if DISABLED(LIGHTWEIGHT_UI)
+        static void draw_status_message(const bool blink);
+      #endif
+
+      #if ENABLED(ADVANCED_PAUSE_FEATURE)
+        static void draw_hotend_status(const uint8_t row, const uint8_t extruder);
+      #endif
+
+      static void status_screen();
+
+    #else
+
+      static void refresh();
+      static void reset_alert_level();
+
+    #endif
+
+    static bool get_blink();
+    static void kill_screen(PGM_P const lcd_msg);
+    static void draw_kill_screen();
+    static bool hasstatus();
+    static void setstatus(const char* const message, const bool persist=false);
+    static void setstatusPGM(PGM_P const message, const int8_t level=0);
+    static void status_printf_P(const uint8_t level, PGM_P const fmt, ...);
+    static void reset_status();
+
+  #else // MALYAN_LCD or NO LCD
+
+    static inline void refresh() {}
+    static constexpr bool hasstatus() { return false; }
+    static inline void setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
+    static inline void setstatusPGM(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
+    static inline void status_printf_P(const uint8_t level, PGM_P const fmt, ...) { UNUSED(level); UNUSED(fmt); }
+    static inline void reset_status() {}
+    static inline void reset_alert_level() {}
+
+  #endif
+
+  #if HAS_LCD_MENU
+
+    #if ENABLED(ENCODER_RATE_MULTIPLIER)
+      static bool encoderRateMultiplierEnabled;
+      static millis_t lastEncoderMovementMillis;
+      static void enable_encoder_multiplier(const bool onoff);
+    #endif
+
+    #if ENABLED(SCROLL_LONG_FILENAMES)
+      static uint8_t filename_scroll_pos, filename_scroll_max;
+    #endif
+
+    #if IS_KINEMATIC
+      static bool processing_manual_move;
+    #else
+      static constexpr bool processing_manual_move = false;
+    #endif
+
+    #if E_MANUAL > 1
+      static int8_t manual_move_e_index;
+    #else
+      static constexpr int8_t manual_move_e_index = 0;
+    #endif
 
-// LCD implementations
-void lcd_implementation_clear();
-void lcd_implementation_init();
+    static int16_t preheat_hotend_temp[2], preheat_bed_temp[2];
+    static uint8_t preheat_fan_speed[2];
 
-#if HAS_CHARACTER_LCD
+    static void manage_manual_move();
 
-  enum HD44780CharSet : uint8_t { CHARSET_MENU, CHARSET_INFO, CHARSET_BOOT };
+    static bool lcd_clicked;
+    static bool use_click();
 
-  void lcd_set_custom_characters(
-    #if ENABLED(LCD_PROGRESS_BAR) || ENABLED(SHOW_BOOTSCREEN)
-      const HD44780CharSet screen_charset=CHARSET_INFO
+    static void synchronize(PGM_P const msg=NULL);
+
+    static screenFunc_t currentScreen;
+    static void goto_screen(const screenFunc_t screen, const uint32_t encoder=0);
+    static void save_previous_screen();
+    static void goto_previous_screen();
+    static void return_to_status();
+    static inline bool on_status_screen() { return currentScreen == status_screen; }
+    static inline void run_current_screen() { (*currentScreen)(); }
+
+    static inline void defer_status_screen(const bool defer) {
+      #if LCD_TIMEOUT_TO_STATUS
+        defer_return_to_status = defer;
+      #else
+        UNUSED(defer);
+      #endif
+    }
+
+    static inline void goto_previous_screen_no_defer() {
+      defer_status_screen(false);
+      goto_previous_screen();
+    }
+
+    #if ENABLED(SD_REPRINT_LAST_SELECTED_FILE)
+      static void reselect_last_file();
     #endif
-  );
-  #if ENABLED(LCD_PROGRESS_BAR)
-    #define LCD_SET_CHARSET(C) lcd_set_custom_characters(C)
+
+    #if ENABLED(G26_MESH_VALIDATION)
+      static inline void chirp() { buzz(LCD_FEEDBACK_FREQUENCY_DURATION_MS, LCD_FEEDBACK_FREQUENCY_HZ); }
+    #endif
+
+    #if ENABLED(AUTO_BED_LEVELING_UBL)
+      static void ubl_plot(const uint8_t x, const uint8_t inverted_y);
+    #endif
+
+  #elif HAS_SPI_LCD
+
+    static constexpr bool lcd_clicked = false;
+    static constexpr bool on_status_screen() { return true; }
+    static inline void run_current_screen() { status_screen(); }
+
+  #endif
+
+  #if ENABLED(LCD_BED_LEVELING) && (ENABLED(PROBE_MANUALLY) || ENABLED(MESH_BED_LEVELING))
+    static bool wait_for_bl_move;
   #else
-    #define LCD_SET_CHARSET(C) lcd_set_custom_characters()
+    static constexpr bool wait_for_bl_move = false;
   #endif
 
-#endif
+  #if HAS_LCD_MENU && (ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION))
+    static bool external_control;
+    FORCE_INLINE static void capture() { external_control = true; }
+    FORCE_INLINE static void release() { external_control = false; }
+  #else
+    static constexpr bool external_control = false;
+  #endif
+
+  #if HAS_ENCODER_ACTION
+
+    static volatile uint8_t buttons;
+    #if ENABLED(LCD_HAS_SLOW_BUTTONS)
+      static volatile uint8_t slow_buttons;
+      static uint8_t read_slow_buttons();
+    #endif
+    static void update_buttons();
+    static inline bool button_pressed() { return BUTTON_CLICK(); }
+    #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
+      static void wait_for_release();
+    #endif
+
+    static uint32_t encoderPosition;
+
+    #if ENABLED(REVERSE_ENCODER_DIRECTION)
+      #define ENCODERBASE -1
+    #else
+      #define ENCODERBASE +1
+    #endif
+    #if ENABLED(REVERSE_MENU_DIRECTION)
+      static int8_t encoderDirection;
+      static inline void encoder_direction_normal() { encoderDirection = +(ENCODERBASE); }
+      static inline void encoder_direction_menus()  { encoderDirection = -(ENCODERBASE); }
+    #else
+      static constexpr int8_t encoderDirection = ENCODERBASE;
+      static inline void encoder_direction_normal() { }
+      static inline void encoder_direction_menus()  { }
+    #endif
+
+  #else
+
+    static inline void update_buttons() { }
+
+  #endif
+
+private:
+
+  static void _synchronize();
+
+  #if HAS_SPI_LCD
+    #if HAS_LCD_MENU
+      #if LCD_TIMEOUT_TO_STATUS
+        static bool defer_return_to_status;
+      #else
+        static constexpr bool defer_return_to_status = false;
+      #endif
+    #endif
+    static void draw_status_screen();
+    static void finishstatus(const bool persist);
+  #endif
+};
+
+extern MarlinUI ui;

commit 6093df11dc91273764d0bf5607fa4314391793a2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Nov 10 18:07:38 2018 -0600

    Allow G26 to use the active extruder (#12387)
    
    * Make lcd_quick_feedback argument optional
    * Add click_to_cancel option to wait_for_hotend/bed
    * Have G26 use the active nozzle and wait_for_hotend/bed
    * Use wait_for_release in UBL G29
    * Add 'T' parameter to G26 for an initial tool-change

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index a8b3826907..42f8e82bf7 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -242,7 +242,7 @@
     inline void lcd_buzz(const long duration, const uint16_t freq) { UNUSED(duration); UNUSED(freq); }
   #endif
 
-  void lcd_quick_feedback(const bool clear_buttons); // Audible feedback for a button click - could also be visual
+  void lcd_quick_feedback(const bool clear_buttons=true); // Audible feedback for a button click - could also be visual
 
   #if ENABLED(LCD_PROGRESS_BAR)
     extern millis_t progress_bar_ms;  // Start time for the current progress bar cycle
@@ -351,6 +351,8 @@
 
   bool lcd_blink();
 
+  bool use_click();
+
   #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
     bool is_lcd_clicked();
     void wait_for_release();

commit 4ed6397e5df428c1b6881fe0780e098362f40b0f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 9 00:07:16 2018 -0600

    More comprehensive NO_LCD_MENUS (#12367)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index a14ee117fa..a8b3826907 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -198,6 +198,12 @@
   inline void lcd_setalertstatusPGM(PGM_P message) { UNUSED(message); }
 #endif
 
+#define HAS_ENCODER_ACTION (HAS_LCD_MENU || ENABLED(ULTIPANEL_FEEDMULTIPLY))
+
+#if HAS_ENCODER_ACTION
+  extern uint32_t encoderPosition;
+#endif
+
 #if HAS_SPI_LCD
 
   #include "../Marlin.h"
@@ -375,29 +381,31 @@
 
 #endif
 
-#if HAS_LCD_MENU
+#define HAS_DIGITAL_ENCODER (HAS_SPI_LCD && ENABLED(NEWPANEL))
 
-  #if HAS_DIGITAL_ENCODER
+#if HAS_DIGITAL_ENCODER
 
-    // Wheel spin pins where BA is 00, 10, 11, 01 (1 bit always changes)
-    #define BLEN_A 0
-    #define BLEN_B 1
+  // Wheel spin pins where BA is 00, 10, 11, 01 (1 bit always changes)
+  #define BLEN_A 0
+  #define BLEN_B 1
 
-    #define EN_A _BV(BLEN_A)
-    #define EN_B _BV(BLEN_B)
+  #define EN_A _BV(BLEN_A)
+  #define EN_B _BV(BLEN_B)
 
-    #if BUTTON_EXISTS(ENC)
-      #define BLEN_C 2
-      #define EN_C _BV(BLEN_C)
-    #endif
+  #if BUTTON_EXISTS(ENC)
+    #define BLEN_C 2
+    #define EN_C _BV(BLEN_C)
+  #endif
 
-    #if BUTTON_EXISTS(BACK)
-      #define BLEN_D 3
-      #define EN_D _BV(BLEN_D)
-      #define LCD_BACK_CLICKED (buttons & EN_D)
-    #endif
+  #if BUTTON_EXISTS(BACK)
+    #define BLEN_D 3
+    #define EN_D _BV(BLEN_D)
+    #define LCD_BACK_CLICKED (buttons & EN_D)
+  #endif
 
-  #endif // NEWPANEL
+#endif // HAS_DIGITAL_ENCODER
+
+#if HAS_LCD_MENU
 
   extern volatile uint8_t buttons;  // The last-checked buttons in a bit array.
   void lcd_buttons_update();

commit e574f015680f88137b2ccb0fa159ebd5749c26fb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Nov 6 19:25:57 2018 -0600

    More advanced pause tweaks (#12356)
    
    * Followup to LCD_TIMEOUT_TO_STATUS=0
    * Make continuous purge screen fit 20x4
    * Unify purge message modes
    * Preserve last-set pause header mode

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 8216e3761a..a14ee117fa 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -281,7 +281,14 @@
     extern screenFunc_t currentScreen;
     void lcd_goto_screen(const screenFunc_t screen, const uint32_t encoder=0);
 
-    extern bool lcd_clicked, defer_return_to_status;
+    extern bool lcd_clicked;
+    #if LCD_TIMEOUT_TO_STATUS
+      extern bool defer_return_to_status;
+      inline void set_defer_return_to_status(const bool defer) { defer_return_to_status = defer; }
+    #else
+      constexpr bool defer_return_to_status = false;
+      #define set_defer_return_to_status(D) NOOP
+    #endif
 
     extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2];
     extern uint8_t lcd_preheat_fan_speed[2];
@@ -309,7 +316,7 @@
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       void lcd_advanced_pause_show_message(const AdvancedPauseMessage message,
-                                           const AdvancedPauseMode mode=ADVANCED_PAUSE_MODE_PAUSE_PRINT,
+                                           const AdvancedPauseMode mode=ADVANCED_PAUSE_MODE_SAME,
                                            const uint8_t extruder=active_extruder);
     #endif
 

commit 8517d5f91560cb3c6ee32f5220759ee535d64fb7
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Mon Nov 5 21:51:10 2018 -0700

    LCD menu code refactoring and cleanup (#12308)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 49cb32fdcf..8216e3761a 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -279,7 +279,7 @@
     typedef void (*screenFunc_t)();
     typedef void (*menuAction_t)();
     extern screenFunc_t currentScreen;
-    void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder=0);
+    void lcd_goto_screen(const screenFunc_t screen, const uint32_t encoder=0);
 
     extern bool lcd_clicked, defer_return_to_status;
 

commit 44fa7fb18cf1e72569215d6425ddc43063d9e37e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Nov 3 02:13:10 2018 -0500

    Cleanups for leveling-related code

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 7d36aaeae4..49cb32fdcf 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -320,8 +320,6 @@
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       void lcd_mesh_edit_setup(const float &initial);
       float lcd_mesh_edit();
-      void lcd_z_offset_edit_setup(const float &initial);
-      float lcd_z_offset_edit();
     #endif
 
     #if ENABLED(SCROLL_LONG_FILENAMES)

commit 5ba6607181470006c5903e414c678506ca81b22d
Author: Ludy <Ludy87@users.noreply.github.com>
Date:   Sat Nov 3 04:29:32 2018 +0100

    Fix keypad-related compile error (#12306)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b6aa0091c2..7d36aaeae4 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -408,15 +408,42 @@
 #endif
 
 #if ENABLED(REPRAPWORLD_KEYPAD)
+  #define REPRAPWORLD_BTN_OFFSET          0 // Bit offset into buttons for shift register values
+
+  #define BLEN_REPRAPWORLD_KEYPAD_F3      0
+  #define BLEN_REPRAPWORLD_KEYPAD_F2      1
+  #define BLEN_REPRAPWORLD_KEYPAD_F1      2
+  #define BLEN_REPRAPWORLD_KEYPAD_DOWN    3
+  #define BLEN_REPRAPWORLD_KEYPAD_RIGHT   4
+  #define BLEN_REPRAPWORLD_KEYPAD_MIDDLE  5
+  #define BLEN_REPRAPWORLD_KEYPAD_UP      6
+  #define BLEN_REPRAPWORLD_KEYPAD_LEFT    7
+
+  #define EN_REPRAPWORLD_KEYPAD_F1        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F1))
+  #define EN_REPRAPWORLD_KEYPAD_F2        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F2))
+  #define EN_REPRAPWORLD_KEYPAD_F3        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F3))
+  #define EN_REPRAPWORLD_KEYPAD_DOWN      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_DOWN))
+  #define EN_REPRAPWORLD_KEYPAD_RIGHT     (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_RIGHT))
+  #define EN_REPRAPWORLD_KEYPAD_MIDDLE    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_MIDDLE))
+  #define EN_REPRAPWORLD_KEYPAD_UP        (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_UP))
+  #define EN_REPRAPWORLD_KEYPAD_LEFT      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_LEFT))
+
+  #define RRK(B) (buttons_reprapworld_keypad & (B))
+
   #ifdef EN_C
-    #define LCD_CLICKED() ((buttons & EN_C) || REPRAPWORLD_KEYPAD_MOVE_MENU)
+    #define LCD_CLICKED() ((buttons & EN_C) || RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE))
   #else
-    #define LCD_CLICKED() REPRAPWORLD_KEYPAD_MOVE_MENU
+    #define LCD_CLICKED() RRK(EN_REPRAPWORLD_KEYPAD_MIDDLE)
+  #endif
+
+#endif // REPRAPWORLD_KEYPAD
+
+#ifndef LCD_CLICKED
+  #ifdef EN_C
+    #define LCD_CLICKED() (buttons & EN_C)
+  #else
+    #define LCD_CLICKED() false
   #endif
-#elif defined(EN_C)
-  #define LCD_CLICKED() (buttons & EN_C)
-#else
-  #define LCD_CLICKED() false
 #endif
 
 extern uint8_t lcd_status_update_delay;

commit eb5600acd2bfcd141022fb49c0b43e3eb46dcdfe
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 1 15:05:59 2018 -0500

    Add parentheses to LCD_CLICKED

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index f7d2e3a773..b6aa0091c2 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -409,14 +409,14 @@
 
 #if ENABLED(REPRAPWORLD_KEYPAD)
   #ifdef EN_C
-    #define LCD_CLICKED ((buttons & EN_C) || REPRAPWORLD_KEYPAD_MOVE_MENU)
+    #define LCD_CLICKED() ((buttons & EN_C) || REPRAPWORLD_KEYPAD_MOVE_MENU)
   #else
-    #define LCD_CLICKED REPRAPWORLD_KEYPAD_MOVE_MENU
+    #define LCD_CLICKED() REPRAPWORLD_KEYPAD_MOVE_MENU
   #endif
 #elif defined(EN_C)
-  #define LCD_CLICKED (buttons & EN_C)
+  #define LCD_CLICKED() (buttons & EN_C)
 #else
-  #define LCD_CLICKED false
+  #define LCD_CLICKED() false
 #endif
 
 extern uint8_t lcd_status_update_delay;

commit b780b69c62b64c7298531255345a28701ffdd47b
Author: N95JPL <37276225+N95JPL@users.noreply.github.com>
Date:   Wed Oct 31 03:39:44 2018 +0000

    Use font ascent and descent for line positioning (#12224)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 5cd870393b..f7d2e3a773 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -132,25 +132,9 @@
   #include "dogm/HAL_LCD_class_defines.h"
   extern U8G_CLASS u8g;
 
-  // DOGM font sizes
-  #define DOG_CHAR_WIDTH         6
-  #define DOG_CHAR_HEIGHT        12
-  #if ENABLED(USE_BIG_EDIT_FONT)
-    #define FONT_MENU_EDIT_NAME u8g_font_9x18
-    #define DOG_CHAR_WIDTH_EDIT  9
-    #define DOG_CHAR_HEIGHT_EDIT 18
-  #else
-    #define FONT_MENU_EDIT_NAME FONT_MENU_NAME
-    #define DOG_CHAR_WIDTH_EDIT  DOG_CHAR_WIDTH
-    #define DOG_CHAR_HEIGHT_EDIT DOG_CHAR_HEIGHT
-  #endif
-
-  enum MarlinFont : uint8_t {
-    FONT_STATUSMENU = 1,
-    FONT_SPECIAL,
-    FONT_MENU_EDIT,
-    FONT_MENU,
-  };
+  // For selective rendering within a Y range
+  #define PAGE_UNDER(yb) (u8g.getU8g()->current_page.y0 <= (yb))
+  #define PAGE_CONTAINS(ya, yb) (PAGE_UNDER(yb) && u8g.getU8g()->current_page.y1 >= (ya))
 
   // Only Western languages support big / small fonts
   #if DISABLED(DISPLAY_CHARSET_ISO10646_1)
@@ -158,17 +142,41 @@
     #undef USE_SMALL_INFOFONT
   #endif
 
+  #define MENU_FONT_NAME    ISO10646_1_5x7
+  #define MENU_FONT_WIDTH    6
+  #define MENU_FONT_ASCENT  10
+  #define MENU_FONT_DESCENT  2
+  #define MENU_FONT_HEIGHT  (MENU_FONT_ASCENT + MENU_FONT_DESCENT)
+
+  #if ENABLED(USE_BIG_EDIT_FONT)
+    #define EDIT_FONT_NAME    u8g_font_9x18
+    #define EDIT_FONT_WIDTH    9
+    #define EDIT_FONT_ASCENT  10
+    #define EDIT_FONT_DESCENT  3
+  #else
+    #define EDIT_FONT_NAME    MENU_FONT_NAME
+    #define EDIT_FONT_WIDTH   MENU_FONT_WIDTH
+    #define EDIT_FONT_ASCENT  MENU_FONT_ASCENT
+    #define EDIT_FONT_DESCENT MENU_FONT_DESCENT
+  #endif
+  #define EDIT_FONT_HEIGHT (EDIT_FONT_ASCENT + EDIT_FONT_DESCENT)
+
+  // Get the Ascent, Descent, and total Height for the Info Screen font
   #if ENABLED(USE_SMALL_INFOFONT)
     extern const u8g_fntpgm_uint8_t u8g_font_6x9[];
-    #define INFO_FONT_HEIGHT 7
+    #define INFO_FONT_ASCENT 7
   #else
-    #define INFO_FONT_HEIGHT 8
+    #define INFO_FONT_ASCENT 8
   #endif
+  #define INFO_FONT_DESCENT 2
+  #define INFO_FONT_HEIGHT (INFO_FONT_ASCENT + INFO_FONT_DESCENT)
 
-  // For selective rendering within a Y range
-  #define PAGE_UNDER(yb) (u8g.getU8g()->current_page.y0 <= (yb))
-  #define PAGE_CONTAINS(ya, yb) (PAGE_UNDER(yb) && u8g.getU8g()->current_page.y1 >= (ya))
-
+  // Font IDs
+  enum MarlinFont : uint8_t {
+    FONT_STATUSMENU = 1,
+    FONT_EDIT,
+    FONT_MENU
+  };
   void lcd_setFont(const MarlinFont font_nr);
 
   #if ENABLED(LIGHTWEIGHT_UI)
@@ -251,8 +259,8 @@
   #endif
 
   #if HAS_GRAPHICAL_LCD
-    #define SETCURSOR(col, row) lcd_moveto(col * (DOG_CHAR_WIDTH), (row + 1) * (DOG_CHAR_HEIGHT))
-    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (DOG_CHAR_WIDTH), (row + 1) * (DOG_CHAR_HEIGHT))
+    #define SETCURSOR(col, row) lcd_moveto(col * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
+    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (MENU_FONT_WIDTH), (row + 1) * (MENU_FONT_HEIGHT))
   #else
     #define SETCURSOR(col, row) lcd_moveto(col, row)
     #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - len, row)

commit 3583e2b4490e8fd6778d18003641c2fdd333e8a5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Oct 30 16:34:45 2018 -0500

    Followup to Menu Refactor (#12275)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index e24673c25c..5cd870393b 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -89,7 +89,7 @@
 
   #elif ENABLED(U8GLIB_SSD1306)
     // Generic support for SSD1306 OLED I2C LCDs
-    //#define U8G_CLASS U8GLIB_SSD1306_128X64_2X_I2C_2_WIRE 
+    //#define U8G_CLASS U8GLIB_SSD1306_128X64_2X_I2C_2_WIRE
     //#define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)           // 4 stripes
     #define U8G_CLASS U8GLIB_SSD1306_128X64_2X
     #define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)             // 4 stripes
@@ -102,7 +102,7 @@
     //#define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // 4 stripes
   #elif ENABLED(U8GLIB_SH1106)
     // Generic support for SH1106 OLED I2C LCDs
-    //#define U8G_CLASS U8GLIB_SH1106_128X64_2X_I2C_2_WIRE 
+    //#define U8G_CLASS U8GLIB_SH1106_128X64_2X_I2C_2_WIRE
     //#define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)           // 4 stripes
     #define U8G_CLASS U8GLIB_SH1106_128X64_2X
     #define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)             // 4 stripes
@@ -199,6 +199,7 @@
     #include "../module/motion.h" // for active_extruder
   #endif
 
+  void lcd_status_screen();
   void lcd_return_to_status();
   bool lcd_hasstatus();
   void lcd_setstatus(const char* message, const bool persist=false);
@@ -229,8 +230,11 @@
 
   void lcd_quick_feedback(const bool clear_buttons); // Audible feedback for a button click - could also be visual
 
-  #if ENABLED(LCD_PROGRESS_BAR) && PROGRESS_MSG_EXPIRE > 0
-    void dontExpireStatus();
+  #if ENABLED(LCD_PROGRESS_BAR)
+    extern millis_t progress_bar_ms;  // Start time for the current progress bar cycle
+    #if PROGRESS_MSG_EXPIRE > 0
+      void dontExpireStatus();
+    #endif
   #endif
 
   #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
@@ -246,7 +250,7 @@
     void set_lcd_contrast(const int16_t value);
   #endif
 
-  #if ENABLED(DOGLCD)
+  #if HAS_GRAPHICAL_LCD
     #define SETCURSOR(col, row) lcd_moveto(col * (DOG_CHAR_WIDTH), (row + 1) * (DOG_CHAR_HEIGHT))
     #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (DOG_CHAR_WIDTH), (row + 1) * (DOG_CHAR_HEIGHT))
   #else
@@ -316,7 +320,7 @@
       extern uint8_t filename_scroll_pos, filename_scroll_max;
     #endif
 
-  #endif // ULTIPANEL
+  #endif // HAS_LCD_MENU
 
   #if ENABLED(FILAMENT_LCD_DISPLAY) && ENABLED(SDSUPPORT)
     extern millis_t previous_lcd_status_ms;
@@ -422,22 +426,29 @@ extern char lcd_status_message[];
   void lcd_reselect_last_file();
 #endif
 
-// LCD implementations
-void lcd_implementation_clear();
-void lcd_implementation_init();
-
 #if HAS_GRAPHICAL_LCD
   extern bool drawing_screen, first_page;
 #elif HAS_SPI_LCD
   constexpr bool first_page = true;
 #endif
 
+// LCD implementations
+void lcd_implementation_clear();
+void lcd_implementation_init();
+
 #if HAS_CHARACTER_LCD
 
-  enum HD44780CharSet : uint8_t {
-    CHARSET_MENU,
-    CHARSET_INFO,
-    CHARSET_BOOT
-  };
+  enum HD44780CharSet : uint8_t { CHARSET_MENU, CHARSET_INFO, CHARSET_BOOT };
+
+  void lcd_set_custom_characters(
+    #if ENABLED(LCD_PROGRESS_BAR) || ENABLED(SHOW_BOOTSCREEN)
+      const HD44780CharSet screen_charset=CHARSET_INFO
+    #endif
+  );
+  #if ENABLED(LCD_PROGRESS_BAR)
+    #define LCD_SET_CHARSET(C) lcd_set_custom_characters(C)
+  #else
+    #define LCD_SET_CHARSET(C) lcd_set_custom_characters()
+  #endif
 
 #endif

commit a489c9fa52261cd5836771f0f0c5f3dff20f696d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 27 16:45:37 2018 -0500

    Move Motion Menu to its own file

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 106510e0b0..e24673c25c 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -288,6 +288,7 @@
 
     // Manual Movement
     constexpr float manual_feedrate_mm_m[XYZE] = MANUAL_FEEDRATE;
+    extern float move_menu_scale;
     #if IS_KINEMATIC
       extern bool processing_manual_move;
     #else

commit a964f098b33300b23ce133bc48438684dae91efe
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 27 22:06:25 2018 -0500

    Make dogm status screen a CPP

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 67f9e05b7c..106510e0b0 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -25,6 +25,13 @@
 
 #if HAS_GRAPHICAL_LCD
 
+  #ifndef LCD_PIXEL_WIDTH
+    #define LCD_PIXEL_WIDTH 128
+  #endif
+  #ifndef LCD_PIXEL_HEIGHT
+    #define LCD_PIXEL_HEIGHT 64
+  #endif
+
   // LCD selection
   #if ENABLED(REPRAPWORLD_GRAPHICAL_LCD)
     #define U8G_CLASS U8GLIB_ST7920_128X64_4X
@@ -125,6 +132,19 @@
   #include "dogm/HAL_LCD_class_defines.h"
   extern U8G_CLASS u8g;
 
+  // DOGM font sizes
+  #define DOG_CHAR_WIDTH         6
+  #define DOG_CHAR_HEIGHT        12
+  #if ENABLED(USE_BIG_EDIT_FONT)
+    #define FONT_MENU_EDIT_NAME u8g_font_9x18
+    #define DOG_CHAR_WIDTH_EDIT  9
+    #define DOG_CHAR_HEIGHT_EDIT 18
+  #else
+    #define FONT_MENU_EDIT_NAME FONT_MENU_NAME
+    #define DOG_CHAR_WIDTH_EDIT  DOG_CHAR_WIDTH
+    #define DOG_CHAR_HEIGHT_EDIT DOG_CHAR_HEIGHT
+  #endif
+
   enum MarlinFont : uint8_t {
     FONT_STATUSMENU = 1,
     FONT_SPECIAL,
@@ -132,6 +152,23 @@
     FONT_MENU,
   };
 
+  // Only Western languages support big / small fonts
+  #if DISABLED(DISPLAY_CHARSET_ISO10646_1)
+    #undef USE_BIG_EDIT_FONT
+    #undef USE_SMALL_INFOFONT
+  #endif
+
+  #if ENABLED(USE_SMALL_INFOFONT)
+    extern const u8g_fntpgm_uint8_t u8g_font_6x9[];
+    #define INFO_FONT_HEIGHT 7
+  #else
+    #define INFO_FONT_HEIGHT 8
+  #endif
+
+  // For selective rendering within a Y range
+  #define PAGE_UNDER(yb) (u8g.getU8g()->current_page.y0 <= (yb))
+  #define PAGE_CONTAINS(ya, yb) (PAGE_UNDER(yb) && u8g.getU8g()->current_page.y1 >= (ya))
+
   void lcd_setFont(const MarlinFont font_nr);
 
   #if ENABLED(LIGHTWEIGHT_UI)

commit 774a6e81995b23c383bbc2fdcb5f6f5c014043f2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 27 13:07:03 2018 -0500

    Drop TALL_FONT_CORRECTION

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 9d0197b27e..67f9e05b7c 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -210,8 +210,8 @@
   #endif
 
   #if ENABLED(DOGLCD)
-    #define SETCURSOR(col, row) lcd_moveto(col * (DOG_CHAR_WIDTH), (row + 1) * row_height)
-    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (DOG_CHAR_WIDTH), (row + 1) * row_height)
+    #define SETCURSOR(col, row) lcd_moveto(col * (DOG_CHAR_WIDTH), (row + 1) * (DOG_CHAR_HEIGHT))
+    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (DOG_CHAR_WIDTH), (row + 1) * (DOG_CHAR_HEIGHT))
   #else
     #define SETCURSOR(col, row) lcd_moveto(col, row)
     #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - len, row)

commit c825c419d4e1d10600148bd7c927bef0fc4c6baa
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 24 02:27:19 2018 -0500

    Convert DOGM / HD44780 impl to CPP files

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 7bda5a8255..9d0197b27e 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -23,18 +23,124 @@
 
 #include "../inc/MarlinConfig.h"
 
-#if ENABLED(DOGLCD)
-  extern bool first_page;
-#else
-  constexpr bool first_page = true;
-  enum HD44780CharSet : uint8_t {
-    CHARSET_MENU,
-    CHARSET_INFO,
-    CHARSET_BOOT
+#if HAS_GRAPHICAL_LCD
+
+  // LCD selection
+  #if ENABLED(REPRAPWORLD_GRAPHICAL_LCD)
+    #define U8G_CLASS U8GLIB_ST7920_128X64_4X
+    #if DISABLED(SDSUPPORT) && (LCD_PINS_D4 == SCK_PIN) && (LCD_PINS_ENABLE == MOSI_PIN)
+      #define U8G_PARAM LCD_PINS_RS
+    #else
+      #define U8G_PARAM LCD_PINS_D4, LCD_PINS_ENABLE, LCD_PINS_RS
+    #endif
+
+  #elif ENABLED(U8GLIB_ST7920)
+    // RepRap Discount Full Graphics Smart Controller
+    #if DISABLED(SDSUPPORT) && (LCD_PINS_D4 == SCK_PIN) && (LCD_PINS_ENABLE == MOSI_PIN)
+      #define U8G_CLASS U8GLIB_ST7920_128X64_4X_HAL
+      #define U8G_PARAM LCD_PINS_RS // 2 stripes, HW SPI (shared with SD card, on AVR does not use standard LCD adapter)
+    #else
+      //#define U8G_CLASS U8GLIB_ST7920_128X64_4X
+      //#define U8G_PARAM LCD_PINS_D4, LCD_PINS_ENABLE, LCD_PINS_RS     // Original u8glib device. 2 stripes, SW SPI
+      #define U8G_CLASS U8GLIB_ST7920_128X64_RRD
+      #define U8G_PARAM LCD_PINS_D4, LCD_PINS_ENABLE, LCD_PINS_RS       // Number of stripes can be adjusted in ultralcd_st7920_u8glib_rrd.h with PAGE_HEIGHT
+                                                                        // AVR version ignores these pin settings
+                                                                        // HAL version uses these pin settings
+    #endif
+
+  #elif ENABLED(CARTESIO_UI)
+    // The CartesioUI display
+    //#define U8G_CLASS U8GLIB_DOGM128_2X
+    //#define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // 4 stripes
+    #define U8G_CLASS U8GLIB_DOGM128_2X
+    #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                              // 4 stripes
+
+  #elif ENABLED(U8GLIB_LM6059_AF)
+    // Based on the Adafruit ST7565 (http://www.adafruit.com/products/250)
+    //#define U8G_CLASS U8GLIB_LM6059
+    //#define U8G_PARAM DOGLCD_CS, DOGLCD_A0                            // 8 stripes
+    #define U8G_CLASS U8GLIB_LM6059_2X
+    #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                              // 4 stripes
+
+  #elif ENABLED(U8GLIB_ST7565_64128N)
+    // The MaKrPanel, Mini Viki, Viki 2.0 & AZSMZ 12864 ST7565 controller
+    #define SMART_RAMPS (MB(RAMPS_SMART_EFB) || MB(RAMPS_SMART_EEB) || MB(RAMPS_SMART_EFF) || MB(RAMPS_SMART_EEF) || MB(RAMPS_SMART_SF))
+    #if DOGLCD_SCK == SCK_PIN && DOGLCD_MOSI == MOSI_PIN && !SMART_RAMPS
+      #define U8G_CLASS U8GLIB_64128N_2X_HAL
+      #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                            // using HW-SPI
+    #else
+      #define U8G_CLASS U8GLIB_64128N_2X_HAL
+      #define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // using SW-SPI
+    #endif
+
+  #elif ENABLED(MKS_12864OLED_SSD1306)
+    // MKS 128x64 (SSD1306) OLED I2C LCD
+    #define U8G_CLASS U8GLIB_SSD1306_128X64
+    #define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0     // 8 stripes
+    //#define U8G_CLASS U8GLIB_SSD1306_128X64_2X
+    //#define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // 4 stripes
+
+  #elif ENABLED(U8GLIB_SSD1306)
+    // Generic support for SSD1306 OLED I2C LCDs
+    //#define U8G_CLASS U8GLIB_SSD1306_128X64_2X_I2C_2_WIRE 
+    //#define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)           // 4 stripes
+    #define U8G_CLASS U8GLIB_SSD1306_128X64_2X
+    #define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)             // 4 stripes
+
+  #elif ENABLED(MKS_12864OLED)
+    // MKS 128x64 (SH1106) OLED I2C LCD
+    #define U8G_CLASS U8GLIB_SH1106_128X64
+    #define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0     // 8 stripes
+    //#define U8G_CLASS U8GLIB_SH1106_128X64_2X
+    //#define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, DOGLCD_A0   // 4 stripes
+  #elif ENABLED(U8GLIB_SH1106)
+    // Generic support for SH1106 OLED I2C LCDs
+    //#define U8G_CLASS U8GLIB_SH1106_128X64_2X_I2C_2_WIRE 
+    //#define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)           // 4 stripes
+    #define U8G_CLASS U8GLIB_SH1106_128X64_2X
+    #define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)             // 4 stripes
+  #elif ENABLED(U8GLIB_SSD1309)
+    // Generic support for SSD1309 OLED I2C LCDs
+    #define U8G_CLASS U8GLIB_SSD1309_128X64
+    #define U8G_PARAM (U8G_I2C_OPT_NONE | U8G_I2C_OPT_FAST)
+  #elif ENABLED(MINIPANEL)
+    // The MINIPanel display
+    //#define U8G_CLASS U8GLIB_MINI12864
+    //#define U8G_PARAM DOGLCD_CS, DOGLCD_A0                            // 8 stripes
+    #define U8G_CLASS U8GLIB_MINI12864_2X
+    #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                              // 4 stripes
+  #elif ENABLED(U8GLIB_SH1106_EINSTART)
+    // Connected via motherboard header
+    #define U8G_CLASS U8GLIB_SH1106_128X64
+    #define U8G_PARAM DOGLCD_SCK, DOGLCD_MOSI, DOGLCD_CS, LCD_PINS_DC, LCD_PINS_RS
+  #else
+    // for regular DOGM128 display with HW-SPI
+    //#define U8G_CLASS U8GLIB_DOGM128
+    //#define U8G_PARAM DOGLCD_CS, DOGLCD_A0                            // HW-SPI Com: CS, A0  // 8 stripes
+    #define U8G_CLASS U8GLIB_DOGM128_2X
+    #define U8G_PARAM DOGLCD_CS, DOGLCD_A0                              // HW-SPI Com: CS, A0 // 4 stripes
+  #endif
+
+  #include <U8glib.h>
+  #include "dogm/HAL_LCD_class_defines.h"
+  extern U8G_CLASS u8g;
+
+  enum MarlinFont : uint8_t {
+    FONT_STATUSMENU = 1,
+    FONT_SPECIAL,
+    FONT_MENU_EDIT,
+    FONT_MENU,
   };
-#endif
 
-#if ENABLED(ULTRA_LCD) || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
+  void lcd_setFont(const MarlinFont font_nr);
+
+  #if ENABLED(LIGHTWEIGHT_UI)
+    void lcd_in_status(const bool inStatus);
+  #endif
+
+#endif // HAS_GRAPHICAL_LCD
+
+#if HAS_SPI_LCD || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
   void lcd_init();
   bool lcd_detected();
   void lcd_update();
@@ -47,7 +153,7 @@
   inline void lcd_setalertstatusPGM(PGM_P message) { UNUSED(message); }
 #endif
 
-#if ENABLED(ULTRA_LCD)
+#if HAS_SPI_LCD
 
   #include "../Marlin.h"
 
@@ -168,72 +274,29 @@
       float lcd_z_offset_edit();
     #endif
 
-  #endif
+    #if ENABLED(SCROLL_LONG_FILENAMES)
+      extern uint8_t filename_scroll_pos, filename_scroll_max;
+    #endif
+
+  #endif // ULTIPANEL
 
   #if ENABLED(FILAMENT_LCD_DISPLAY) && ENABLED(SDSUPPORT)
     extern millis_t previous_lcd_status_ms;
   #endif
 
-  bool lcd_blink();
-
-  #if ENABLED(REPRAPWORLD_KEYPAD) // is also ULTIPANEL and NEWPANEL
-
-    #define REPRAPWORLD_BTN_OFFSET 0 // bit offset into buttons for shift register values
-
-    #define BLEN_REPRAPWORLD_KEYPAD_F3     0
-    #define BLEN_REPRAPWORLD_KEYPAD_F2     1
-    #define BLEN_REPRAPWORLD_KEYPAD_F1     2
-    #define BLEN_REPRAPWORLD_KEYPAD_DOWN   3
-    #define BLEN_REPRAPWORLD_KEYPAD_RIGHT  4
-    #define BLEN_REPRAPWORLD_KEYPAD_MIDDLE 5
-    #define BLEN_REPRAPWORLD_KEYPAD_UP     6
-    #define BLEN_REPRAPWORLD_KEYPAD_LEFT   7
-
-    #define EN_REPRAPWORLD_KEYPAD_F3      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F3))
-    #define EN_REPRAPWORLD_KEYPAD_F2      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F2))
-    #define EN_REPRAPWORLD_KEYPAD_F1      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F1))
-    #define EN_REPRAPWORLD_KEYPAD_DOWN    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_DOWN))
-    #define EN_REPRAPWORLD_KEYPAD_RIGHT   (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_RIGHT))
-    #define EN_REPRAPWORLD_KEYPAD_MIDDLE  (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_MIDDLE))
-    #define EN_REPRAPWORLD_KEYPAD_UP      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_UP))
-    #define EN_REPRAPWORLD_KEYPAD_LEFT    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_LEFT))
-
-    #define REPRAPWORLD_KEYPAD_MOVE_Z_DOWN  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F3)
-    #define REPRAPWORLD_KEYPAD_MOVE_Z_UP    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F2)
-    #define REPRAPWORLD_KEYPAD_MOVE_Y_DOWN  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_DOWN)
-    #define REPRAPWORLD_KEYPAD_MOVE_X_RIGHT (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_RIGHT)
-    #define REPRAPWORLD_KEYPAD_MOVE_Y_UP    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_UP)
-    #define REPRAPWORLD_KEYPAD_MOVE_X_LEFT  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_LEFT)
-
-    #if ENABLED(ADC_KEYPAD)
-      #define KEYPAD_HOME EN_REPRAPWORLD_KEYPAD_F1
-      #define KEYPAD_EN_C EN_REPRAPWORLD_KEYPAD_MIDDLE
-    #else
-      #define KEYPAD_HOME EN_REPRAPWORLD_KEYPAD_MIDDLE
-      #define KEYPAD_EN_C EN_REPRAPWORLD_KEYPAD_F1
-    #endif
-    #define REPRAPWORLD_KEYPAD_MOVE_HOME    (buttons_reprapworld_keypad & KEYPAD_HOME)
-    #define REPRAPWORLD_KEYPAD_MOVE_MENU    (buttons_reprapworld_keypad & KEYPAD_EN_C)
-
-    #define REPRAPWORLD_KEYPAD_PRESSED      (buttons_reprapworld_keypad & ( \
-                                              EN_REPRAPWORLD_KEYPAD_F3 | \
-                                              EN_REPRAPWORLD_KEYPAD_F2 | \
-                                              EN_REPRAPWORLD_KEYPAD_F1 | \
-                                              EN_REPRAPWORLD_KEYPAD_DOWN | \
-                                              EN_REPRAPWORLD_KEYPAD_RIGHT | \
-                                              EN_REPRAPWORLD_KEYPAD_MIDDLE | \
-                                              EN_REPRAPWORLD_KEYPAD_UP | \
-                                              EN_REPRAPWORLD_KEYPAD_LEFT) \
-                                            )
-
+  #if ENABLED(STATUS_MESSAGE_SCROLLING)
+    extern uint8_t status_scroll_offset;
   #endif
 
+  bool lcd_blink();
+
   #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
     bool is_lcd_clicked();
     void wait_for_release();
   #endif
 
 #elif ENABLED(EXTENSIBLE_UI)
+
   // These functions are defined elsewhere
   void lcd_setstatus(const char* const message, const bool persist=false);
   void lcd_setstatusPGM(const char* const message, const int8_t level=0);
@@ -242,6 +305,7 @@
   void lcd_refresh();
   void lcd_reset_alert_level();
   bool lcd_hasstatus();
+
 #else // MALYAN_LCD or no LCD
 
   constexpr bool lcd_wait_for_move = false;
@@ -254,11 +318,11 @@
   inline void lcd_reset_alert_level() {}
   inline void lcd_reset_status() {}
 
-#endif // ULTRA_LCD
+#endif
 
-#if ENABLED(ULTIPANEL)
+#if HAS_LCD_MENU
 
-  #if ENABLED(NEWPANEL) // Uses digital switches, not a shift register
+  #if HAS_DIGITAL_ENCODER
 
     // Wheel spin pins where BA is 00, 10, 11, 01 (1 bit always changes)
     #define BLEN_A 0
@@ -305,6 +369,9 @@
   #define LCD_CLICKED false
 #endif
 
+extern uint8_t lcd_status_update_delay;
+extern char lcd_status_message[];
+
 #define LCD_MESSAGEPGM(x)      lcd_setstatusPGM(PSTR(x))
 #define LCD_ALERTMESSAGEPGM(x) lcd_setalertstatusPGM(PSTR(x))
 
@@ -320,3 +387,19 @@
 // LCD implementations
 void lcd_implementation_clear();
 void lcd_implementation_init();
+
+#if HAS_GRAPHICAL_LCD
+  extern bool drawing_screen, first_page;
+#elif HAS_SPI_LCD
+  constexpr bool first_page = true;
+#endif
+
+#if HAS_CHARACTER_LCD
+
+  enum HD44780CharSet : uint8_t {
+    CHARSET_MENU,
+    CHARSET_INFO,
+    CHARSET_BOOT
+  };
+
+#endif

commit 2bf18950ab2070e842c91057d5812dcaa1bff9a2
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 23 16:00:34 2018 -0500

    Refactor LCD menus

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 85f2701ae7..7bda5a8255 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -19,12 +19,21 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
-
-#ifndef ULTRALCD_H
-#define ULTRALCD_H
+#pragma once
 
 #include "../inc/MarlinConfig.h"
 
+#if ENABLED(DOGLCD)
+  extern bool first_page;
+#else
+  constexpr bool first_page = true;
+  enum HD44780CharSet : uint8_t {
+    CHARSET_MENU,
+    CHARSET_INFO,
+    CHARSET_BOOT
+  };
+#endif
+
 #if ENABLED(ULTRA_LCD) || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
   void lcd_init();
   bool lcd_detected();
@@ -71,6 +80,8 @@
 
   #if HAS_BUZZER
     void lcd_buzz(const long duration, const uint16_t freq);
+  #else
+    inline void lcd_buzz(const long duration, const uint16_t freq) { UNUSED(duration); UNUSED(freq); }
   #endif
 
   void lcd_quick_feedback(const bool clear_buttons); // Audible feedback for a button click - could also be visual
@@ -108,13 +119,14 @@
   #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
   #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
-  #if ENABLED(ULTIPANEL) // LCD with a click-wheel input
+  #if HAS_LCD_MENU
 
-    extern bool defer_return_to_status;
-
-    // Function pointer to menu functions.
     typedef void (*screenFunc_t)();
     typedef void (*menuAction_t)();
+    extern screenFunc_t currentScreen;
+    void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder=0);
+
+    extern bool lcd_clicked, defer_return_to_status;
 
     extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2];
     extern uint8_t lcd_preheat_fan_speed[2];
@@ -131,9 +143,13 @@
       constexpr bool lcd_wait_for_move = false;
     #endif
 
-    void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder=0);
-
-    void lcd_completion_feedback(const bool good=true);
+    // Manual Movement
+    constexpr float manual_feedrate_mm_m[XYZE] = MANUAL_FEEDRATE;
+    #if IS_KINEMATIC
+      extern bool processing_manual_move;
+    #else
+      constexpr bool processing_manual_move = false;
+    #endif
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       void lcd_advanced_pause_show_message(const AdvancedPauseMessage message,
@@ -273,6 +289,10 @@
 
 #endif
 
+#if ENABLED(LCD_HAS_SLOW_BUTTONS)
+  extern volatile uint8_t slow_buttons;
+#endif
+
 #if ENABLED(REPRAPWORLD_KEYPAD)
   #ifdef EN_C
     #define LCD_CLICKED ((buttons & EN_C) || REPRAPWORLD_KEYPAD_MOVE_MENU)
@@ -297,5 +317,6 @@
   void lcd_reselect_last_file();
 #endif
 
-
-#endif // ULTRALCD_H
+// LCD implementations
+void lcd_implementation_clear();
+void lcd_implementation_init();

commit bf9dd4f4cf67cdb925a9fbf455ddf49826f56fd1
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 25 15:17:53 2018 -0500

    Add helpers for custom text in menu items (#12214)
    
    For some features it can be useful to write custom text in a menu item. This commit provides helpers to make this easier.

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 9f5f5200ee..85f2701ae7 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -87,11 +87,19 @@
     uint8_t get_ADC_keyValue();
   #endif
 
-  #if ENABLED(DOGLCD)
+  #if HAS_LCD_CONTRAST
     extern int16_t lcd_contrast;
     void set_lcd_contrast(const int16_t value);
   #endif
 
+  #if ENABLED(DOGLCD)
+    #define SETCURSOR(col, row) lcd_moveto(col * (DOG_CHAR_WIDTH), (row + 1) * row_height)
+    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_PIXEL_WIDTH - len * (DOG_CHAR_WIDTH), (row + 1) * row_height)
+  #else
+    #define SETCURSOR(col, row) lcd_moveto(col, row)
+    #define SETCURSOR_RJ(len, row) lcd_moveto(LCD_WIDTH - len, row)
+  #endif
+
   #if ENABLED(SHOW_BOOTSCREEN)
     void lcd_bootscreen();
   #endif

commit fc31da1114e219cfd573f17d0abb5ffee4e3d244
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Mon Oct 22 18:37:48 2018 -0600

    Implement custom delay/millis for EXTENSIBLE_UI (#12188)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b1d9490ecf..9f5f5200ee 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -30,6 +30,7 @@
   bool lcd_detected();
   void lcd_update();
   void lcd_setalertstatusPGM(PGM_P message);
+  void kill_screen(PGM_P lcd_msg);
 #else
   inline void lcd_init() {}
   inline bool lcd_detected() { return true; }

commit 1fb9b299d4d96276ff1fb6cd2ee5e73e753e2b23
Author: TheSFReader <TheSFReader@gmail.com>
Date:   Fri Oct 19 21:25:07 2018 +0200

    Add M524 to abort SD printing (#12155)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2b262f6af1..b1d9490ecf 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -288,10 +288,5 @@
   void lcd_reselect_last_file();
 #endif
 
-#if (ENABLED(EXTENSIBLE_UI) || ENABLED(ULTIPANEL)) && ENABLED(SDSUPPORT)
-  extern bool abort_sd_printing;
-#else
-  constexpr bool abort_sd_printing = false;
-#endif
 
 #endif // ULTRALCD_H

commit 906a24fa81586e3d9aeb60e7a3fb179a8b616b9b
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Mon Oct 8 14:44:05 2018 -0600

    Extensible user interface API (#11193)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 58863a4d3d..2b262f6af1 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -25,7 +25,7 @@
 
 #include "../inc/MarlinConfig.h"
 
-#if ENABLED(ULTRA_LCD) || ENABLED(MALYAN_LCD)
+#if ENABLED(ULTRA_LCD) || ENABLED(MALYAN_LCD) || ENABLED(EXTENSIBLE_UI)
   void lcd_init();
   bool lcd_detected();
   void lcd_update();
@@ -208,6 +208,15 @@
     void wait_for_release();
   #endif
 
+#elif ENABLED(EXTENSIBLE_UI)
+  // These functions are defined elsewhere
+  void lcd_setstatus(const char* const message, const bool persist=false);
+  void lcd_setstatusPGM(const char* const message, const int8_t level=0);
+  void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...);
+  void lcd_reset_status();
+  void lcd_refresh();
+  void lcd_reset_alert_level();
+  bool lcd_hasstatus();
 #else // MALYAN_LCD or no LCD
 
   constexpr bool lcd_wait_for_move = false;
@@ -279,7 +288,7 @@
   void lcd_reselect_last_file();
 #endif
 
-#if ENABLED(ULTIPANEL) && ENABLED(SDSUPPORT)
+#if (ENABLED(EXTENSIBLE_UI) || ENABLED(ULTIPANEL)) && ENABLED(SDSUPPORT)
   extern bool abort_sd_printing;
 #else
   constexpr bool abort_sd_printing = false;

commit d6b0fbd7715da67a2aaeeeafb0d4dc7c1563ef98
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Oct 7 15:34:41 2018 -0500

    Use uint8_t for all fan speeds (#12032)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0468dcdfdd..58863a4d3d 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -107,7 +107,8 @@
     typedef void (*screenFunc_t)();
     typedef void (*menuAction_t)();
 
-    extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2], lcd_preheat_fan_speed[2];
+    extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2];
+    extern uint8_t lcd_preheat_fan_speed[2];
 
     #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
       extern bool lcd_external_control;

commit 30197134027d0b831fe370c9d0a047b8e8a333f8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 1 05:19:35 2018 -0500

    Reorganize some enums

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 05376cd2ce..0468dcdfdd 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -57,7 +57,15 @@
   void lcd_kill_screen();
   void kill_screen(PGM_P lcd_msg);
 
-  extern uint8_t lcdDrawUpdate;
+  enum LCDViewAction : uint8_t {
+    LCDVIEW_NONE,
+    LCDVIEW_REDRAW_NOW,
+    LCDVIEW_CALL_REDRAW_NEXT,
+    LCDVIEW_CLEAR_CALL_REDRAW,
+    LCDVIEW_CALL_NO_REDRAW
+  };
+
+  extern LCDViewAction lcdDrawUpdate;
   inline void lcd_refresh() { lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; }
 
   #if HAS_BUZZER

commit 11ac75edcb34a2f90b50ca134ff40839f8c29199
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 30 23:44:33 2018 -0500

    Use PGM_P for PSTR pointers (#11977)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2cff09f0ed..05376cd2ce 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -29,12 +29,12 @@
   void lcd_init();
   bool lcd_detected();
   void lcd_update();
-  void lcd_setalertstatusPGM(const char* message);
+  void lcd_setalertstatusPGM(PGM_P message);
 #else
   inline void lcd_init() {}
   inline bool lcd_detected() { return true; }
   inline void lcd_update() {}
-  inline void lcd_setalertstatusPGM(const char* message) { UNUSED(message); }
+  inline void lcd_setalertstatusPGM(PGM_P message) { UNUSED(message); }
 #endif
 
 #if ENABLED(ULTRA_LCD)
@@ -49,13 +49,13 @@
   void lcd_return_to_status();
   bool lcd_hasstatus();
   void lcd_setstatus(const char* message, const bool persist=false);
-  void lcd_setstatusPGM(const char* message, const int8_t level=0);
-  void lcd_setalertstatusPGM(const char* message);
+  void lcd_setstatusPGM(PGM_P message, const int8_t level=0);
+  void lcd_setalertstatusPGM(PGM_P message);
   void lcd_reset_alert_level();
   void lcd_reset_status();
-  void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...);
+  void lcd_status_printf_P(const uint8_t level, PGM_P const fmt, ...);
   void lcd_kill_screen();
-  void kill_screen(const char* lcd_msg);
+  void kill_screen(PGM_P lcd_msg);
 
   extern uint8_t lcdDrawUpdate;
   inline void lcd_refresh() { lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; }
@@ -206,8 +206,8 @@
   inline void lcd_refresh() {}
   inline bool lcd_hasstatus() { return false; }
   inline void lcd_setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
-  inline void lcd_setstatusPGM(const char* const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
-  inline void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...) { UNUSED(level); UNUSED(fmt); }
+  inline void lcd_setstatusPGM(PGM_P const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
+  inline void lcd_status_printf_P(const uint8_t level, PGM_P const fmt, ...) { UNUSED(level); UNUSED(fmt); }
   inline void lcd_reset_alert_level() {}
   inline void lcd_reset_status() {}
 

commit 1104054d7347668a61e90fb6216e22afae2ef9f3
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Mon Sep 24 10:40:48 2018 -0400

    2.0 IDEX Independent z offset and other fixes (#11862)
    
    * Add Formbot Raptor board
    
    Co-Authored-By: InsanityAutomation <insanityautomation@users.noreply.github.com>
    
    * Add a second Z probe Z offset
    
    Co-Authored-By: InsanityAutomation <insanityautomation@users.noreply.github.com>
    
    * Modify method to utilize live adjustment of hotend z offset
    
    Should probably move config option to babystepping and rename as it may now apply to all multiextruder systems
    
    * Move config item and catchup other code to current method

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 2db4db0910..2cff09f0ed 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -46,6 +46,7 @@
     #include "../module/motion.h" // for active_extruder
   #endif
 
+  void lcd_return_to_status();
   bool lcd_hasstatus();
   void lcd_setstatus(const char* message, const bool persist=false);
   void lcd_setstatusPGM(const char* message, const int8_t level=0);

commit d882717d98d08ba7a47234eacf291b2d82288f13
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 10 23:09:26 2018 -0500

    Save some PROGMEM with constexpr (#11798)
    
    When possible, make `active_extruder` a `constexpr` to save some PROGMEM.

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 229f4cbce1..2db4db0910 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -43,6 +43,7 @@
 
   #if ENABLED(ADVANCED_PAUSE_FEATURE)
     #include "../feature/pause.h"
+    #include "../module/motion.h" // for active_extruder
   #endif
 
   bool lcd_hasstatus();
@@ -116,7 +117,6 @@
     void lcd_completion_feedback(const bool good=true);
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
-      extern uint8_t active_extruder;
       void lcd_advanced_pause_show_message(const AdvancedPauseMessage message,
                                            const AdvancedPauseMode mode=ADVANCED_PAUSE_MODE_PAUSE_PRINT,
                                            const uint8_t extruder=active_extruder);

commit ee333f6be2204c6a7fe9b254f567412762e62c71
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 22 20:34:59 2018 -0500

    Followup to endstops tweaks

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index d9a059c279..229f4cbce1 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -180,12 +180,6 @@
     #define REPRAPWORLD_KEYPAD_MOVE_HOME    (buttons_reprapworld_keypad & KEYPAD_HOME)
     #define REPRAPWORLD_KEYPAD_MOVE_MENU    (buttons_reprapworld_keypad & KEYPAD_EN_C)
 
-    #if BUTTON_EXISTS(ENC)
-      #define LCD_CLICKED ((buttons & EN_C) || REPRAPWORLD_KEYPAD_MOVE_MENU)
-    #else
-      #define LCD_CLICKED REPRAPWORLD_KEYPAD_MOVE_MENU
-    #endif
-
     #define REPRAPWORLD_KEYPAD_PRESSED      (buttons_reprapworld_keypad & ( \
                                               EN_REPRAPWORLD_KEYPAD_F3 | \
                                               EN_REPRAPWORLD_KEYPAD_F2 | \
@@ -197,14 +191,6 @@
                                               EN_REPRAPWORLD_KEYPAD_LEFT) \
                                             )
 
-  #elif defined(EN_C)
-
-    #define LCD_CLICKED (buttons & EN_C)
-
-  #else
-
-    #define LCD_CLICKED false
-
   #endif
 
   #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
@@ -259,6 +245,18 @@
 
 #endif
 
+#if ENABLED(REPRAPWORLD_KEYPAD)
+  #ifdef EN_C
+    #define LCD_CLICKED ((buttons & EN_C) || REPRAPWORLD_KEYPAD_MOVE_MENU)
+  #else
+    #define LCD_CLICKED REPRAPWORLD_KEYPAD_MOVE_MENU
+  #endif
+#elif defined(EN_C)
+  #define LCD_CLICKED (buttons & EN_C)
+#else
+  #define LCD_CLICKED false
+#endif
+
 #define LCD_MESSAGEPGM(x)      lcd_setstatusPGM(PSTR(x))
 #define LCD_ALERTMESSAGEPGM(x) lcd_setalertstatusPGM(PSTR(x))
 

commit 1af98519cdbb5bcb65321ff9378beb45b133d96a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon May 21 20:32:16 2018 -0500

    Group and adjust LCD buttons code

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b4b1ba44a3..d9a059c279 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -45,7 +45,6 @@
     #include "../feature/pause.h"
   #endif
 
-
   bool lcd_hasstatus();
   void lcd_setstatus(const char* message, const bool persist=false);
   void lcd_setstatusPGM(const char* message, const int8_t level=0);
@@ -90,7 +89,7 @@
   #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
   #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
-  #if ENABLED(ULTIPANEL)
+  #if ENABLED(ULTIPANEL) // LCD with a click-wheel input
 
     extern bool defer_return_to_status;
 
@@ -114,27 +113,6 @@
 
     void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder=0);
 
-    // Encoder click is directly connected
-
-    #define BLEN_A 0
-    #define BLEN_B 1
-
-    #define EN_A (_BV(BLEN_A))
-    #define EN_B (_BV(BLEN_B))
-
-    #if BUTTON_EXISTS(ENC)
-      #define BLEN_C 2
-      #define EN_C (_BV(BLEN_C))
-    #endif
-
-    #if BUTTON_EXISTS(BACK)
-      #define BLEN_D 3
-      #define EN_D _BV(BLEN_D)
-      #define LCD_BACK_CLICKED (buttons & EN_D)
-    #endif
-
-    extern volatile uint8_t buttons;  // The last-checked buttons in a bit array.
-    void lcd_buttons_update();
     void lcd_completion_feedback(const bool good=true);
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
@@ -142,7 +120,7 @@
       void lcd_advanced_pause_show_message(const AdvancedPauseMessage message,
                                            const AdvancedPauseMode mode=ADVANCED_PAUSE_MODE_PAUSE_PRINT,
                                            const uint8_t extruder=active_extruder);
-    #endif // ADVANCED_PAUSE_FEATURE
+    #endif
 
     #if ENABLED(G26_MESH_VALIDATION)
       void lcd_chirp();
@@ -155,10 +133,6 @@
       float lcd_z_offset_edit();
     #endif
 
-  #else
-
-    inline void lcd_buttons_update() {}
-
   #endif
 
   #if ENABLED(FILAMENT_LCD_DISPLAY) && ENABLED(SDSUPPORT)
@@ -243,7 +217,6 @@
   constexpr bool lcd_wait_for_move = false;
 
   inline void lcd_refresh() {}
-  inline void lcd_buttons_update() {}
   inline bool lcd_hasstatus() { return false; }
   inline void lcd_setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
   inline void lcd_setstatusPGM(const char* const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
@@ -253,6 +226,39 @@
 
 #endif // ULTRA_LCD
 
+#if ENABLED(ULTIPANEL)
+
+  #if ENABLED(NEWPANEL) // Uses digital switches, not a shift register
+
+    // Wheel spin pins where BA is 00, 10, 11, 01 (1 bit always changes)
+    #define BLEN_A 0
+    #define BLEN_B 1
+
+    #define EN_A _BV(BLEN_A)
+    #define EN_B _BV(BLEN_B)
+
+    #if BUTTON_EXISTS(ENC)
+      #define BLEN_C 2
+      #define EN_C _BV(BLEN_C)
+    #endif
+
+    #if BUTTON_EXISTS(BACK)
+      #define BLEN_D 3
+      #define EN_D _BV(BLEN_D)
+      #define LCD_BACK_CLICKED (buttons & EN_D)
+    #endif
+
+  #endif // NEWPANEL
+
+  extern volatile uint8_t buttons;  // The last-checked buttons in a bit array.
+  void lcd_buttons_update();
+
+#else
+
+  inline void lcd_buttons_update() {}
+
+#endif
+
 #define LCD_MESSAGEPGM(x)      lcd_setstatusPGM(PSTR(x))
 #define LCD_ALERTMESSAGEPGM(x) lcd_setalertstatusPGM(PSTR(x))
 

commit 0ea60d506a9d5676afe0a47c39dea32411068f1b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon May 14 23:54:50 2018 -0500

    Clear up LCD-related compile issues

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index dca13bccc4..b4b1ba44a3 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -223,7 +223,7 @@
                                               EN_REPRAPWORLD_KEYPAD_LEFT) \
                                             )
 
-  #elif ENABLED(NEWPANEL)
+  #elif defined(EN_C)
 
     #define LCD_CLICKED (buttons & EN_C)
 

commit 05c33833e70c143b726fa32d0052618d178fa0ca
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 30 21:16:31 2018 -0500

    [2.0.x] Add NO_LCD_MENUS option (#10582)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 3967c51cfb..dca13bccc4 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -45,19 +45,6 @@
     #include "../feature/pause.h"
   #endif
 
-  #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
-    extern bool lcd_external_control;
-  #else
-    constexpr bool lcd_external_control = false;
-  #endif
-
-  extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2], lcd_preheat_fan_speed[2];
-
-  #if ENABLED(LCD_BED_LEVELING)
-    extern bool lcd_wait_for_move;
-  #else
-    constexpr bool lcd_wait_for_move = false;
-  #endif
 
   bool lcd_hasstatus();
   void lcd_setstatus(const char* message, const bool persist=false);
@@ -76,6 +63,8 @@
     void lcd_buzz(const long duration, const uint16_t freq);
   #endif
 
+  void lcd_quick_feedback(const bool clear_buttons); // Audible feedback for a button click - could also be visual
+
   #if ENABLED(LCD_PROGRESS_BAR) && PROGRESS_MSG_EXPIRE > 0
     void dontExpireStatus();
   #endif
@@ -109,6 +98,20 @@
     typedef void (*screenFunc_t)();
     typedef void (*menuAction_t)();
 
+    extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2], lcd_preheat_fan_speed[2];
+
+    #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
+      extern bool lcd_external_control;
+    #else
+      constexpr bool lcd_external_control = false;
+    #endif
+
+    #if ENABLED(LCD_BED_LEVELING)
+      extern bool lcd_wait_for_move;
+    #else
+      constexpr bool lcd_wait_for_move = false;
+    #endif
+
     void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder=0);
 
     // Encoder click is directly connected
@@ -132,7 +135,6 @@
 
     extern volatile uint8_t buttons;  // The last-checked buttons in a bit array.
     void lcd_buttons_update();
-    void lcd_quick_feedback(const bool clear_buttons); // Audible feedback for a button click - could also be visual
     void lcd_completion_feedback(const bool good=true);
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)

commit 24d23ce49b6fa4dfe3a8fe76c6a3073c5df0d20e
Author: xC0000005 <32139633+xC0000005@users.noreply.github.com>
Date:   Mon Apr 23 08:08:05 2018 -0700

    Fix function definitions for Malyan LCD

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0e2ad69992..3967c51cfb 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -28,6 +28,13 @@
 #if ENABLED(ULTRA_LCD) || ENABLED(MALYAN_LCD)
   void lcd_init();
   bool lcd_detected();
+  void lcd_update();
+  void lcd_setalertstatusPGM(const char* message);
+#else
+  inline void lcd_init() {}
+  inline bool lcd_detected() { return true; }
+  inline void lcd_update() {}
+  inline void lcd_setalertstatusPGM(const char* message) { UNUSED(message); }
 #endif
 
 #if ENABLED(ULTRA_LCD)
@@ -52,7 +59,6 @@
     constexpr bool lcd_wait_for_move = false;
   #endif
 
-  void lcd_update();
   bool lcd_hasstatus();
   void lcd_setstatus(const char* message, const bool persist=false);
   void lcd_setstatusPGM(const char* message, const int8_t level=0);
@@ -230,20 +236,16 @@
     void wait_for_release();
   #endif
 
-#else // no LCD
+#else // MALYAN_LCD or no LCD
 
   constexpr bool lcd_wait_for_move = false;
 
-  inline void lcd_init() {}
-  inline bool lcd_detected() { return true; }
-  inline void lcd_update() {}
   inline void lcd_refresh() {}
   inline void lcd_buttons_update() {}
   inline bool lcd_hasstatus() { return false; }
   inline void lcd_setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
   inline void lcd_setstatusPGM(const char* const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
   inline void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...) { UNUSED(level); UNUSED(fmt); }
-  inline void lcd_setalertstatusPGM(const char* message) { UNUSED(message); }
   inline void lcd_reset_alert_level() {}
   inline void lcd_reset_status() {}
 

commit 33966710119b64f83a19075875a8d27452cca9a4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 22 00:16:30 2018 -0500

    [2.0.x] Reset LCD status to fallbacks (#10470)
    
    * Remove obsolete strings
    * Tweak some static consts
    * Reset LCD status to fallbacks

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 9af35467ae..0e2ad69992 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -58,6 +58,7 @@
   void lcd_setstatusPGM(const char* message, const int8_t level=0);
   void lcd_setalertstatusPGM(const char* message);
   void lcd_reset_alert_level();
+  void lcd_reset_status();
   void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...);
   void lcd_kill_screen();
   void kill_screen(const char* lcd_msg);
@@ -244,14 +245,13 @@
   inline void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...) { UNUSED(level); UNUSED(fmt); }
   inline void lcd_setalertstatusPGM(const char* message) { UNUSED(message); }
   inline void lcd_reset_alert_level() {}
+  inline void lcd_reset_status() {}
 
 #endif // ULTRA_LCD
 
 #define LCD_MESSAGEPGM(x)      lcd_setstatusPGM(PSTR(x))
 #define LCD_ALERTMESSAGEPGM(x) lcd_setalertstatusPGM(PSTR(x))
 
-void lcd_reset_status();
-
 // For i2c define BUZZ to use lcd_buzz
 #if ENABLED(LCD_USE_I2C_BUZZER)
   #define BUZZ(d,f) lcd_buzz(d, f)

commit 6c7a17dba6bc5b1912ff301f2e18d544badf504a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Apr 15 18:27:54 2018 -0500

    Abort SD printing more safely (#10407)
    
    Allow the current command to complete when aborting an SD print, otherwise some commands (G28, G29, etc.) will cause trouble.

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index bfbddb436f..9af35467ae 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -261,4 +261,10 @@ void lcd_reset_status();
   void lcd_reselect_last_file();
 #endif
 
+#if ENABLED(ULTIPANEL) && ENABLED(SDSUPPORT)
+  extern bool abort_sd_printing;
+#else
+  constexpr bool abort_sd_printing = false;
+#endif
+
 #endif // ULTRALCD_H

commit c96412a78fbf7be0f1f4bca17edab49d8f1040bf
Author: Yunhui Fu <yhfudev@gmail.com>
Date:   Thu Apr 12 21:14:01 2018 -0400

    [2.0.x] UTF-8 language translation support (#10213)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 3d6e5b7635..bfbddb436f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -52,8 +52,6 @@
     constexpr bool lcd_wait_for_move = false;
   #endif
 
-  int16_t lcd_strlen(const char* s);
-  int16_t lcd_strlen_P(const char* s);
   void lcd_update();
   bool lcd_hasstatus();
   void lcd_setstatus(const char* message, const bool persist=false);

commit 646aa20b433cbde61a849a2b79ddf1c0a13714ef
Author: Luc Van Daele <lvd@sound-silence.com>
Date:   Thu Apr 12 04:14:48 2018 +0200

    Overhaul of G33 Delta Calibration (#8822)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index c9373fd0b4..3d6e5b7635 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -148,10 +148,6 @@
       float lcd_z_offset_edit();
     #endif
 
-    #if ENABLED(DELTA_AUTO_CALIBRATION) && !HAS_BED_PROBE
-      float lcd_probe_pt(const float &rx, const float &ry);
-    #endif
-
   #else
 
     inline void lcd_buttons_update() {}

commit bd0967ad87ea5eec174fe1a8d4f6aeef428b49da
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 28 03:26:28 2018 -0600

    Fix BTN_BACK
    
    Followup to #9835

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 87ad3ef08f..c9373fd0b4 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -121,7 +121,7 @@
 
     #if BUTTON_EXISTS(BACK)
       #define BLEN_D 3
-      #define EN_D BIT(BLEN_D)
+      #define EN_D _BV(BLEN_D)
       #define LCD_BACK_CLICKED (buttons & EN_D)
     #endif
 

commit 35ec67885a39d1c5072b848e065f130066ce3274
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Feb 26 22:52:57 2018 -0600

    Add support for BACK button (RADDS) (#9835)

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 920cd68a16..87ad3ef08f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -44,9 +44,6 @@
     constexpr bool lcd_external_control = false;
   #endif
 
-  #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
-  #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
-
   extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2], lcd_preheat_fan_speed[2];
 
   #if ENABLED(LCD_BED_LEVELING)
@@ -96,6 +93,8 @@
   #endif
 
   #define LCD_UPDATE_INTERVAL 100
+  #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
+  #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
   #if ENABLED(ULTIPANEL)
 
@@ -107,15 +106,24 @@
 
     void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder=0);
 
+    // Encoder click is directly connected
+
     #define BLEN_A 0
     #define BLEN_B 1
-    // Encoder click is directly connected
+
+    #define EN_A (_BV(BLEN_A))
+    #define EN_B (_BV(BLEN_B))
+
     #if BUTTON_EXISTS(ENC)
       #define BLEN_C 2
+      #define EN_C (_BV(BLEN_C))
+    #endif
+
+    #if BUTTON_EXISTS(BACK)
+      #define BLEN_D 3
+      #define EN_D BIT(BLEN_D)
+      #define LCD_BACK_CLICKED (buttons & EN_D)
     #endif
-    #define EN_A (_BV(BLEN_A))
-    #define EN_B (_BV(BLEN_B))
-    #define EN_C (_BV(BLEN_C))
 
     extern volatile uint8_t buttons;  // The last-checked buttons in a bit array.
     void lcd_buttons_update();
@@ -213,9 +221,13 @@
                                             )
 
   #elif ENABLED(NEWPANEL)
+
     #define LCD_CLICKED (buttons & EN_C)
+
   #else
+
     #define LCD_CLICKED false
+
   #endif
 
   #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)

commit e5ee0b6f6c9a2236a460ca1cd104b9745d9c7a28
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 4 00:39:01 2018 -0600

    Implement MALYAN_LCD

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 27103faff0..920cd68a16 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -25,6 +25,11 @@
 
 #include "../inc/MarlinConfig.h"
 
+#if ENABLED(ULTRA_LCD) || ENABLED(MALYAN_LCD)
+  void lcd_init();
+  bool lcd_detected();
+#endif
+
 #if ENABLED(ULTRA_LCD)
 
   #include "../Marlin.h"
@@ -53,16 +58,14 @@
   int16_t lcd_strlen(const char* s);
   int16_t lcd_strlen_P(const char* s);
   void lcd_update();
-  void lcd_init();
   bool lcd_hasstatus();
   void lcd_setstatus(const char* message, const bool persist=false);
   void lcd_setstatusPGM(const char* message, const int8_t level=0);
   void lcd_setalertstatusPGM(const char* message);
-  void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...);
   void lcd_reset_alert_level();
+  void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...);
   void lcd_kill_screen();
   void kill_screen(const char* lcd_msg);
-  bool lcd_detected(void);
 
   extern uint8_t lcdDrawUpdate;
   inline void lcd_refresh() { lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; }
@@ -131,9 +134,9 @@
     #endif
 
     #if ENABLED(AUTO_BED_LEVELING_UBL)
-      void lcd_mesh_edit_setup(float initial);
+      void lcd_mesh_edit_setup(const float &initial);
       float lcd_mesh_edit();
-      void lcd_z_offset_edit_setup(float);
+      void lcd_z_offset_edit_setup(const float &initial);
       float lcd_z_offset_edit();
     #endif
 
@@ -224,17 +227,17 @@
 
   constexpr bool lcd_wait_for_move = false;
 
-  inline void lcd_update() {}
   inline void lcd_init() {}
+  inline bool lcd_detected() { return true; }
+  inline void lcd_update() {}
+  inline void lcd_refresh() {}
+  inline void lcd_buttons_update() {}
   inline bool lcd_hasstatus() { return false; }
   inline void lcd_setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
   inline void lcd_setstatusPGM(const char* const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
-  inline void lcd_setalertstatusPGM(const char* message) { UNUSED(message); }
   inline void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...) { UNUSED(level); UNUSED(fmt); }
-  inline void lcd_buttons_update() {}
+  inline void lcd_setalertstatusPGM(const char* message) { UNUSED(message); }
   inline void lcd_reset_alert_level() {}
-  inline bool lcd_detected() { return true; }
-  inline void lcd_refresh() {}
 
 #endif // ULTRA_LCD
 

commit f5f1b069ade516793995870bac4d6707cff43407
Author: Roxy-3D <Roxy-3D@users.noreply.github.com>
Date:   Tue Jan 16 11:08:00 2018 -0600

    Convert UBL mesh tilting to all use the same algorithm  (#9204)
    
    A number of regressions were patched also. The UBL G29 P2 and P4 Press and Hold had stopped working. It is very possible this is broken in the bugfix_v1.1.x branch also.
    
    The main purpose of the Pull Request is to get the 3-Point mesh tilting to use the LSF algorithm just like the grid based mesh tilt. This simplifies the logic and reduces the code size some what. But the real reason to do it is the 3-Point case can be solved exactly. And by feeding these numbers into the LSF algorithm it provides a way to check all that code for 'correctness'.

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 857d0344bb..27103faff0 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -116,7 +116,7 @@
 
     extern volatile uint8_t buttons;  // The last-checked buttons in a bit array.
     void lcd_buttons_update();
-    void lcd_quick_feedback();        // Audible feedback for a button click - could also be visual
+    void lcd_quick_feedback(const bool clear_buttons); // Audible feedback for a button click - could also be visual
     void lcd_completion_feedback(const bool good=true);
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)

commit e633ce06c723d262dc570c74dc21efcadb9ea7a8
Author: Bob-the-Kuhn <bob.kuhn@att.net>
Date:   Tue Jan 9 23:41:14 2018 -0600

    LCD contrast type mismatch  is back
    
    WORKS!

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 98e8ffa134..857d0344bb 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -84,8 +84,8 @@
   #endif
 
   #if ENABLED(DOGLCD)
-    extern uint16_t lcd_contrast;
-    void set_lcd_contrast(const uint16_t value);
+    extern int16_t lcd_contrast;
+    void set_lcd_contrast(const int16_t value);
   #endif
 
   #if ENABLED(SHOW_BOOTSCREEN)

commit 7541316bb49303ce97e062da601e26426321c4ba
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 4 05:06:34 2018 -0600

    Add M701/M702 Filament Load/Unload, M603

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 23148ae351..98e8ffa134 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -29,6 +29,10 @@
 
   #include "../Marlin.h"
 
+  #if ENABLED(ADVANCED_PAUSE_FEATURE)
+    #include "../feature/pause.h"
+  #endif
+
   #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
     extern bool lcd_external_control;
   #else
@@ -116,20 +120,11 @@
     void lcd_completion_feedback(const bool good=true);
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
-      enum AdvancedPauseMessage {
-        ADVANCED_PAUSE_MESSAGE_INIT,
-        ADVANCED_PAUSE_MESSAGE_UNLOAD,
-        ADVANCED_PAUSE_MESSAGE_INSERT,
-        ADVANCED_PAUSE_MESSAGE_LOAD,
-        ADVANCED_PAUSE_MESSAGE_EXTRUDE,
-        ADVANCED_PAUSE_MESSAGE_OPTION,
-        ADVANCED_PAUSE_MESSAGE_RESUME,
-        ADVANCED_PAUSE_MESSAGE_STATUS,
-        ADVANCED_PAUSE_MESSAGE_CLICK_TO_HEAT_NOZZLE,
-        ADVANCED_PAUSE_MESSAGE_WAIT_FOR_NOZZLES_TO_HEAT
-      };
-      void lcd_advanced_pause_show_message(const AdvancedPauseMessage message);
-    #endif
+      extern uint8_t active_extruder;
+      void lcd_advanced_pause_show_message(const AdvancedPauseMessage message,
+                                           const AdvancedPauseMode mode=ADVANCED_PAUSE_MODE_PAUSE_PRINT,
+                                           const uint8_t extruder=active_extruder);
+    #endif // ADVANCED_PAUSE_FEATURE
 
     #if ENABLED(G26_MESH_VALIDATION)
       void lcd_chirp();

commit c846388a65d96e8ce804c7682d226bb67722ac7a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Dec 6 21:28:04 2017 -0600

    Standardize LCD interface code for UBL a little

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 5e1c43934a..23148ae351 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -222,6 +222,7 @@
 
   #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
     bool is_lcd_clicked();
+    void wait_for_release();
   #endif
 
 #else // no LCD

commit 3748c289246867a5f897ee511978f8de26b579a6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Dec 5 01:57:29 2017 -0600

    Fix MBL G29 without LCD
    
    Addressing https://github.com/MarlinFirmware/Marlin/pull/8575#discussion_r154536617

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 4248218f63..5e1c43934a 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -226,6 +226,8 @@
 
 #else // no LCD
 
+  constexpr bool lcd_wait_for_move = false;
+
   inline void lcd_update() {}
   inline void lcd_init() {}
   inline bool lcd_hasstatus() { return false; }

commit 276271e72fc8b2b496fcb2c96544c91ae362cb3c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Nov 27 02:12:29 2017 -0600

    Make MBL work more like PROBE_MANUALLY

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index b0389d9e9d..4248218f63 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -40,8 +40,10 @@
 
   extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2], lcd_preheat_fan_speed[2];
 
-  #if ENABLED(LCD_BED_LEVELING) && ENABLED(PROBE_MANUALLY)
+  #if ENABLED(LCD_BED_LEVELING)
     extern bool lcd_wait_for_move;
+  #else
+    constexpr bool lcd_wait_for_move = false;
   #endif
 
   int16_t lcd_strlen(const char* s);

commit c6b0c104bbab04d4d59c4f3f8fddb728e9b99603
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 23 17:59:43 2017 -0600

    Adapt G26 to work for all meshes

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0301cf4f57..b0389d9e9d 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -29,6 +29,12 @@
 
   #include "../Marlin.h"
 
+  #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
+    extern bool lcd_external_control;
+  #else
+    constexpr bool lcd_external_control = false;
+  #endif
+
   #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
   #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
@@ -123,6 +129,10 @@
       void lcd_advanced_pause_show_message(const AdvancedPauseMessage message);
     #endif
 
+    #if ENABLED(G26_MESH_VALIDATION)
+      void lcd_chirp();
+    #endif
+
     #if ENABLED(AUTO_BED_LEVELING_UBL)
       void lcd_mesh_edit_setup(float initial);
       float lcd_mesh_edit();
@@ -208,6 +218,10 @@
     #define LCD_CLICKED false
   #endif
 
+  #if ENABLED(AUTO_BED_LEVELING_UBL) || ENABLED(G26_MESH_VALIDATION)
+    bool is_lcd_clicked();
+  #endif
+
 #else // no LCD
 
   inline void lcd_update() {}

commit 25af9decfed2c87c782595013e80233364581319
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 19 15:11:11 2017 -0600

    Remove enum.h include of MarlinConfig.h

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index e0b7b6f115..0301cf4f57 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -108,6 +108,18 @@
     void lcd_completion_feedback(const bool good=true);
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
+      enum AdvancedPauseMessage {
+        ADVANCED_PAUSE_MESSAGE_INIT,
+        ADVANCED_PAUSE_MESSAGE_UNLOAD,
+        ADVANCED_PAUSE_MESSAGE_INSERT,
+        ADVANCED_PAUSE_MESSAGE_LOAD,
+        ADVANCED_PAUSE_MESSAGE_EXTRUDE,
+        ADVANCED_PAUSE_MESSAGE_OPTION,
+        ADVANCED_PAUSE_MESSAGE_RESUME,
+        ADVANCED_PAUSE_MESSAGE_STATUS,
+        ADVANCED_PAUSE_MESSAGE_CLICK_TO_HEAT_NOZZLE,
+        ADVANCED_PAUSE_MESSAGE_WAIT_FOR_NOZZLES_TO_HEAT
+      };
       void lcd_advanced_pause_show_message(const AdvancedPauseMessage message);
     #endif
 

commit 6d6c3b1e97ccc3965aaa0abb24c07aeb6efe031f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Nov 13 22:14:54 2017 -0600

    Fix up REPRAPWORLD_KEYPAD defines

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 8d4d2ea65b..e0b7b6f115 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -158,20 +158,19 @@
 
     #define REPRAPWORLD_KEYPAD_MOVE_Z_DOWN  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F3)
     #define REPRAPWORLD_KEYPAD_MOVE_Z_UP    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F2)
-    #define REPRAPWORLD_KEYPAD_MOVE_MENU    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F1)
     #define REPRAPWORLD_KEYPAD_MOVE_Y_DOWN  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_DOWN)
     #define REPRAPWORLD_KEYPAD_MOVE_X_RIGHT (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_RIGHT)
-    #define REPRAPWORLD_KEYPAD_MOVE_HOME    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_MIDDLE)
     #define REPRAPWORLD_KEYPAD_MOVE_Y_UP    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_UP)
     #define REPRAPWORLD_KEYPAD_MOVE_X_LEFT  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_LEFT)
 
     #if ENABLED(ADC_KEYPAD)
-      #define REPRAPWORLD_KEYPAD_MOVE_HOME  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F1)
-      #define KEYPAD_EN_C                   EN_REPRAPWORLD_KEYPAD_MIDDLE
+      #define KEYPAD_HOME EN_REPRAPWORLD_KEYPAD_F1
+      #define KEYPAD_EN_C EN_REPRAPWORLD_KEYPAD_MIDDLE
     #else
-      #define REPRAPWORLD_KEYPAD_MOVE_HOME  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_MIDDLE)
-      #define KEYPAD_EN_C                   EN_REPRAPWORLD_KEYPAD_F1
+      #define KEYPAD_HOME EN_REPRAPWORLD_KEYPAD_MIDDLE
+      #define KEYPAD_EN_C EN_REPRAPWORLD_KEYPAD_F1
     #endif
+    #define REPRAPWORLD_KEYPAD_MOVE_HOME    (buttons_reprapworld_keypad & KEYPAD_HOME)
     #define REPRAPWORLD_KEYPAD_MOVE_MENU    (buttons_reprapworld_keypad & KEYPAD_EN_C)
 
     #if BUTTON_EXISTS(ENC)

commit 82f45c3e6ad00a2f8cc60f0a1f7297958c98637f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 7 19:34:34 2017 -0600

    Patch G33 misuse of PROBE_MANUALLY

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 4f87d4b86c..8d4d2ea65b 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -118,7 +118,7 @@
       float lcd_z_offset_edit();
     #endif
 
-    #if ENABLED(DELTA_CALIBRATION_MENU)
+    #if ENABLED(DELTA_AUTO_CALIBRATION) && !HAS_BED_PROBE
       float lcd_probe_pt(const float &rx, const float &ry);
     #endif
 

commit f8393a09086f01eafbb8563411da3b237c96b982
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 2 23:59:42 2017 -0500

    Operate in Native Machine Space

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 9d2474d170..4f87d4b86c 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -119,7 +119,7 @@
     #endif
 
     #if ENABLED(DELTA_CALIBRATION_MENU)
-      float lcd_probe_pt(const float &lx, const float &ly);
+      float lcd_probe_pt(const float &rx, const float &ry);
     #endif
 
   #else

commit 8949c8c0a529038eceb0a3a177b77d223c043ec6
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Oct 26 23:39:51 2017 -0500

    Move SD_REPRINT_LAST_SELECTED_FILE to ultralcd.cpp

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index ef9bc7c2b7..9d2474d170 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -223,4 +223,8 @@ void lcd_reset_status();
   #define BUZZ(d,f) lcd_buzz(d, f)
 #endif
 
+#if ENABLED(SD_REPRINT_LAST_SELECTED_FILE)
+  void lcd_reselect_last_file();
+#endif
+
 #endif // ULTRALCD_H

commit 5c4f3e010786c1a280b7a8d448426de521e369b7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 15 02:15:19 2017 -0500

    Add LCD_SET_PROGRESS_MANUALLY

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 16b3998171..ef9bc7c2b7 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -63,6 +63,10 @@
     void dontExpireStatus();
   #endif
 
+  #if ENABLED(LCD_SET_PROGRESS_MANUALLY)
+    extern uint8_t progress_bar_percent;
+  #endif
+
   #if ENABLED(ADC_KEYPAD)
     uint8_t get_ADC_keyValue();
   #endif

commit a8b8d4e85ea6c2b49563f9bccc16247c1c59b61e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 2 23:33:57 2017 -0500

    Add a typedef for MENU_ITEM(function,…) functions

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index db17e6284f..16b3998171 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -84,6 +84,7 @@
 
     // Function pointer to menu functions.
     typedef void (*screenFunc_t)();
+    typedef void (*menuAction_t)();
 
     void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder=0);
 

commit 381b17e6a91783bad1c0eed2ddbb779df2b4b6ef
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 16 23:57:09 2017 -0500

    Move M18_M84, M85 to cpp

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 1ceb972ee9..db17e6284f 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -80,6 +80,8 @@
 
   #if ENABLED(ULTIPANEL)
 
+    extern bool defer_return_to_status;
+
     // Function pointer to menu functions.
     typedef void (*screenFunc_t)();
 

commit e0a189a481b00826d4ded0cc38580fd5726e4c79
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 14 15:33:07 2017 -0500

    Consolidate Buzzer

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index ceed68eed3..1ceb972ee9 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -56,7 +56,7 @@
   inline void lcd_refresh() { lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; }
 
   #if HAS_BUZZER
-    void lcd_buzz(long duration, uint16_t freq);
+    void lcd_buzz(const long duration, const uint16_t freq);
   #endif
 
   #if ENABLED(LCD_PROGRESS_BAR) && PROGRESS_MSG_EXPIRE > 0

commit 0fcec02db56adca8b01300d6e49eed2246b8e61a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:32 2017 -0500

    LCD updates

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
index 0a50f173ae..ceed68eed3 100644
--- a/Marlin/src/lcd/ultralcd.h
+++ b/Marlin/src/lcd/ultralcd.h
@@ -23,15 +23,21 @@
 #ifndef ULTRALCD_H
 #define ULTRALCD_H
 
-#include "Marlin.h"
+#include "../inc/MarlinConfig.h"
 
 #if ENABLED(ULTRA_LCD)
 
+  #include "../Marlin.h"
+
   #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
   #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
 
   extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2], lcd_preheat_fan_speed[2];
 
+  #if ENABLED(LCD_BED_LEVELING) && ENABLED(PROBE_MANUALLY)
+    extern bool lcd_wait_for_move;
+  #endif
+
   int16_t lcd_strlen(const char* s);
   int16_t lcd_strlen_P(const char* s);
   void lcd_update();
@@ -74,6 +80,11 @@
 
   #if ENABLED(ULTIPANEL)
 
+    // Function pointer to menu functions.
+    typedef void (*screenFunc_t)();
+
+    void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder=0);
+
     #define BLEN_A 0
     #define BLEN_B 1
     // Encoder click is directly connected
@@ -91,7 +102,18 @@
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       void lcd_advanced_pause_show_message(const AdvancedPauseMessage message);
-    #endif // ADVANCED_PAUSE_FEATURE
+    #endif
+
+    #if ENABLED(AUTO_BED_LEVELING_UBL)
+      void lcd_mesh_edit_setup(float initial);
+      float lcd_mesh_edit();
+      void lcd_z_offset_edit_setup(float);
+      float lcd_z_offset_edit();
+    #endif
+
+    #if ENABLED(DELTA_CALIBRATION_MENU)
+      float lcd_probe_pt(const float &lx, const float &ly);
+    #endif
 
   #else
 
@@ -189,16 +211,9 @@
 
 void lcd_reset_status();
 
-#if ENABLED(AUTO_BED_LEVELING_UBL)
-  extern bool ubl_lcd_map_control;
-  void lcd_mesh_edit_setup(float initial);
-  float lcd_mesh_edit();
-  void lcd_z_offset_edit_setup(float);
-  float lcd_z_offset_edit();
-#endif
-
-#if ENABLED(DELTA_CALIBRATION_MENU)
-  float lcd_probe_pt(const float &lx, const float &ly);
+// For i2c define BUZZ to use lcd_buzz
+#if ENABLED(LCD_USE_I2C_BUZZER)
+  #define BUZZ(d,f) lcd_buzz(d, f)
 #endif
 
 #endif // ULTRALCD_H

commit cc92e544a58dc259a4a2f70ba57b6b48b3aa1e7b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:30 2017 -0500

    Move 'lcd' files

diff --git a/Marlin/src/lcd/ultralcd.h b/Marlin/src/lcd/ultralcd.h
new file mode 100644
index 0000000000..0a50f173ae
--- /dev/null
+++ b/Marlin/src/lcd/ultralcd.h
@@ -0,0 +1,204 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#ifndef ULTRALCD_H
+#define ULTRALCD_H
+
+#include "Marlin.h"
+
+#if ENABLED(ULTRA_LCD)
+
+  #define BUTTON_EXISTS(BN) (defined(BTN_## BN) && BTN_## BN >= 0)
+  #define BUTTON_PRESSED(BN) !READ(BTN_## BN)
+
+  extern int16_t lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2], lcd_preheat_fan_speed[2];
+
+  int16_t lcd_strlen(const char* s);
+  int16_t lcd_strlen_P(const char* s);
+  void lcd_update();
+  void lcd_init();
+  bool lcd_hasstatus();
+  void lcd_setstatus(const char* message, const bool persist=false);
+  void lcd_setstatusPGM(const char* message, const int8_t level=0);
+  void lcd_setalertstatusPGM(const char* message);
+  void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...);
+  void lcd_reset_alert_level();
+  void lcd_kill_screen();
+  void kill_screen(const char* lcd_msg);
+  bool lcd_detected(void);
+
+  extern uint8_t lcdDrawUpdate;
+  inline void lcd_refresh() { lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; }
+
+  #if HAS_BUZZER
+    void lcd_buzz(long duration, uint16_t freq);
+  #endif
+
+  #if ENABLED(LCD_PROGRESS_BAR) && PROGRESS_MSG_EXPIRE > 0
+    void dontExpireStatus();
+  #endif
+
+  #if ENABLED(ADC_KEYPAD)
+    uint8_t get_ADC_keyValue();
+  #endif
+
+  #if ENABLED(DOGLCD)
+    extern uint16_t lcd_contrast;
+    void set_lcd_contrast(const uint16_t value);
+  #endif
+
+  #if ENABLED(SHOW_BOOTSCREEN)
+    void lcd_bootscreen();
+  #endif
+
+  #define LCD_UPDATE_INTERVAL 100
+
+  #if ENABLED(ULTIPANEL)
+
+    #define BLEN_A 0
+    #define BLEN_B 1
+    // Encoder click is directly connected
+    #if BUTTON_EXISTS(ENC)
+      #define BLEN_C 2
+    #endif
+    #define EN_A (_BV(BLEN_A))
+    #define EN_B (_BV(BLEN_B))
+    #define EN_C (_BV(BLEN_C))
+
+    extern volatile uint8_t buttons;  // The last-checked buttons in a bit array.
+    void lcd_buttons_update();
+    void lcd_quick_feedback();        // Audible feedback for a button click - could also be visual
+    void lcd_completion_feedback(const bool good=true);
+
+    #if ENABLED(ADVANCED_PAUSE_FEATURE)
+      void lcd_advanced_pause_show_message(const AdvancedPauseMessage message);
+    #endif // ADVANCED_PAUSE_FEATURE
+
+  #else
+
+    inline void lcd_buttons_update() {}
+
+  #endif
+
+  #if ENABLED(FILAMENT_LCD_DISPLAY) && ENABLED(SDSUPPORT)
+    extern millis_t previous_lcd_status_ms;
+  #endif
+
+  bool lcd_blink();
+
+  #if ENABLED(REPRAPWORLD_KEYPAD) // is also ULTIPANEL and NEWPANEL
+
+    #define REPRAPWORLD_BTN_OFFSET 0 // bit offset into buttons for shift register values
+
+    #define BLEN_REPRAPWORLD_KEYPAD_F3     0
+    #define BLEN_REPRAPWORLD_KEYPAD_F2     1
+    #define BLEN_REPRAPWORLD_KEYPAD_F1     2
+    #define BLEN_REPRAPWORLD_KEYPAD_DOWN   3
+    #define BLEN_REPRAPWORLD_KEYPAD_RIGHT  4
+    #define BLEN_REPRAPWORLD_KEYPAD_MIDDLE 5
+    #define BLEN_REPRAPWORLD_KEYPAD_UP     6
+    #define BLEN_REPRAPWORLD_KEYPAD_LEFT   7
+
+    #define EN_REPRAPWORLD_KEYPAD_F3      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F3))
+    #define EN_REPRAPWORLD_KEYPAD_F2      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F2))
+    #define EN_REPRAPWORLD_KEYPAD_F1      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_F1))
+    #define EN_REPRAPWORLD_KEYPAD_DOWN    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_DOWN))
+    #define EN_REPRAPWORLD_KEYPAD_RIGHT   (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_RIGHT))
+    #define EN_REPRAPWORLD_KEYPAD_MIDDLE  (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_MIDDLE))
+    #define EN_REPRAPWORLD_KEYPAD_UP      (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_UP))
+    #define EN_REPRAPWORLD_KEYPAD_LEFT    (_BV(REPRAPWORLD_BTN_OFFSET + BLEN_REPRAPWORLD_KEYPAD_LEFT))
+
+    #define REPRAPWORLD_KEYPAD_MOVE_Z_DOWN  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F3)
+    #define REPRAPWORLD_KEYPAD_MOVE_Z_UP    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F2)
+    #define REPRAPWORLD_KEYPAD_MOVE_MENU    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F1)
+    #define REPRAPWORLD_KEYPAD_MOVE_Y_DOWN  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_DOWN)
+    #define REPRAPWORLD_KEYPAD_MOVE_X_RIGHT (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_RIGHT)
+    #define REPRAPWORLD_KEYPAD_MOVE_HOME    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_MIDDLE)
+    #define REPRAPWORLD_KEYPAD_MOVE_Y_UP    (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_UP)
+    #define REPRAPWORLD_KEYPAD_MOVE_X_LEFT  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_LEFT)
+
+    #if ENABLED(ADC_KEYPAD)
+      #define REPRAPWORLD_KEYPAD_MOVE_HOME  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_F1)
+      #define KEYPAD_EN_C                   EN_REPRAPWORLD_KEYPAD_MIDDLE
+    #else
+      #define REPRAPWORLD_KEYPAD_MOVE_HOME  (buttons_reprapworld_keypad & EN_REPRAPWORLD_KEYPAD_MIDDLE)
+      #define KEYPAD_EN_C                   EN_REPRAPWORLD_KEYPAD_F1
+    #endif
+    #define REPRAPWORLD_KEYPAD_MOVE_MENU    (buttons_reprapworld_keypad & KEYPAD_EN_C)
+
+    #if BUTTON_EXISTS(ENC)
+      #define LCD_CLICKED ((buttons & EN_C) || REPRAPWORLD_KEYPAD_MOVE_MENU)
+    #else
+      #define LCD_CLICKED REPRAPWORLD_KEYPAD_MOVE_MENU
+    #endif
+
+    #define REPRAPWORLD_KEYPAD_PRESSED      (buttons_reprapworld_keypad & ( \
+                                              EN_REPRAPWORLD_KEYPAD_F3 | \
+                                              EN_REPRAPWORLD_KEYPAD_F2 | \
+                                              EN_REPRAPWORLD_KEYPAD_F1 | \
+                                              EN_REPRAPWORLD_KEYPAD_DOWN | \
+                                              EN_REPRAPWORLD_KEYPAD_RIGHT | \
+                                              EN_REPRAPWORLD_KEYPAD_MIDDLE | \
+                                              EN_REPRAPWORLD_KEYPAD_UP | \
+                                              EN_REPRAPWORLD_KEYPAD_LEFT) \
+                                            )
+
+  #elif ENABLED(NEWPANEL)
+    #define LCD_CLICKED (buttons & EN_C)
+  #else
+    #define LCD_CLICKED false
+  #endif
+
+#else // no LCD
+
+  inline void lcd_update() {}
+  inline void lcd_init() {}
+  inline bool lcd_hasstatus() { return false; }
+  inline void lcd_setstatus(const char* const message, const bool persist=false) { UNUSED(message); UNUSED(persist); }
+  inline void lcd_setstatusPGM(const char* const message, const int8_t level=0) { UNUSED(message); UNUSED(level); }
+  inline void lcd_setalertstatusPGM(const char* message) { UNUSED(message); }
+  inline void lcd_status_printf_P(const uint8_t level, const char * const fmt, ...) { UNUSED(level); UNUSED(fmt); }
+  inline void lcd_buttons_update() {}
+  inline void lcd_reset_alert_level() {}
+  inline bool lcd_detected() { return true; }
+  inline void lcd_refresh() {}
+
+#endif // ULTRA_LCD
+
+#define LCD_MESSAGEPGM(x)      lcd_setstatusPGM(PSTR(x))
+#define LCD_ALERTMESSAGEPGM(x) lcd_setalertstatusPGM(PSTR(x))
+
+void lcd_reset_status();
+
+#if ENABLED(AUTO_BED_LEVELING_UBL)
+  extern bool ubl_lcd_map_control;
+  void lcd_mesh_edit_setup(float initial);
+  float lcd_mesh_edit();
+  void lcd_z_offset_edit_setup(float);
+  float lcd_z_offset_edit();
+#endif
+
+#if ENABLED(DELTA_CALIBRATION_MENU)
+  float lcd_probe_pt(const float &lx, const float &ly);
+#endif
+
+#endif // ULTRALCD_H
