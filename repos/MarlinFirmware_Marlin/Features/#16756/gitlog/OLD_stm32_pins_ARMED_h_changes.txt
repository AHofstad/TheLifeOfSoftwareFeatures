commit 04cea864bcc197a91a162f8cc48cd6588260f8af
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 20 23:45:00 2020 -0500

    Split up STM32 pins files (#17212)

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
deleted file mode 100644
index 1e33336512..0000000000
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ /dev/null
@@ -1,231 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-//  https://github.com/ktand/Armed
-
-#pragma once
-
-#ifndef STM32F4
-  #error "Oops! Select an STM32F4 board in 'Tools > Board.'"
-#elif HOTENDS > 2 || E_STEPPERS > 2
-  #error "Arm'ed supports up to 2 hotends / E-steppers."
-#endif
-
-#ifndef ARMED_V1_0
-  #define ARMED_V1_1
-#endif
-
-#undef BOARD_INFO_NAME // Defined on the command line by Arduino Core STM32
-#define BOARD_INFO_NAME      "Arm'ed"
-#define DEFAULT_MACHINE_NAME BOARD_INFO_NAME
-
-#define I2C_EEPROM
-
-#undef E2END // Defined in Arduino Core STM32 to be used with EEPROM emulation. This board uses a real EEPROM.
-#define E2END 0xFFF // 4KB
-
-//
-// Limit Switches
-//
-#define X_STOP_PIN         PE0
-#define Y_STOP_PIN         PE1
-#define Z_STOP_PIN         PE14
-
-//
-// Z Probe (when not Z_MIN_PIN)
-//
-//#ifndef Z_MIN_PROBE_PIN
-//  #define Z_MIN_PROBE_PIN  PA4
-//#endif
-
-//
-// Filament Runout Sensor
-//
-#ifndef FIL_RUNOUT_PIN
-  #define FIL_RUNOUT_PIN   PA3
-#endif
-
-//
-// Steppers
-//
-
-#ifdef ARMED_SWAP_X_E1
-  #define X_STEP_PIN       PE4
-  #define X_DIR_PIN        PE2
-  #define X_ENABLE_PIN     PE3
-  #define X_CS_PIN         PE5
-#else
-  #define X_STEP_PIN       PD3
-  #define X_DIR_PIN        PD2
-  #define X_ENABLE_PIN     PD0
-  #define X_CS_PIN         PD1
-#endif
-
-#define Y_STEP_PIN         PE11
-#define Y_DIR_PIN          PE10
-#define Y_ENABLE_PIN       PE13
-#define Y_CS_PIN           PE12
-
-#define Z_STEP_PIN         PD6
-#define Z_DIR_PIN          PD7
-#define Z_ENABLE_PIN       PD4
-#define Z_CS_PIN           PD5
-
-#define E0_STEP_PIN        PB5
-#define E0_DIR_PIN         PB6
-#ifdef ARMED_V1_1
-  #define E0_ENABLE_PIN    PC12
-#else
-  #define E0_ENABLE_PIN    PB3
-#endif
-#define E0_CS_PIN          PB4
-
-#ifdef ARMED_SWAP_X_E1
-  #define E1_STEP_PIN      PD3
-  #define E1_DIR_PIN       PD2
-  #define E1_ENABLE_PIN    PD0
-  #define E1_CS_PIN        PD1
-#else
-  #define E1_STEP_PIN      PE4
-  #define E1_DIR_PIN       PE2
-  #define E1_ENABLE_PIN    PE3
-  #define E1_CS_PIN        PE5
-#endif
-
-//
-// Temperature Sensors
-//
-#define TEMP_0_PIN         PC0   // Analog Input
-#define TEMP_1_PIN         PC1   // Analog Input
-#define TEMP_BED_PIN       PC2   // Analog Input
-
-#if HOTENDS == 1 && TEMP_SENSOR_PROBE
-  #define TEMP_PROBE_PIN   PC1
-#endif
-
-//
-// Heaters / Fans
-//
-#define HEATER_0_PIN       PA1   // Hardware PWM
-#define HEATER_1_PIN       PA2   // Hardware PWM
-#define HEATER_BED_PIN     PA0   // Hardware PWM
-
-#define FAN_PIN            PC6   // Hardware PWM, Part cooling fan
-#define FAN1_PIN           PC7   // Hardware PWM, Extruder fan
-#define FAN2_PIN           PC8   // Hardware PWM, Controller fan
-
-//
-// Misc functions
-//
-#define SDSS               PE7
-#define LED_PIN            PB7   // Heart beat
-#define PS_ON_PIN          PA10
-#define KILL_PIN           PA8
-#define PWR_LOSS           PA4   // Power loss / nAC_FAULT
-
-//
-// LCD / Controller
-//
-#define SD_DETECT_PIN      PA15
-#define BEEPER_PIN         PC9
-
-#if ENABLED(FYSETC_MINI_12864)
-  //
-  // See https://wiki.fysetc.com/Mini12864_Panel/?fbclid=IwAR1FyjuNdVOOy9_xzky3qqo_WeM5h-4gpRnnWhQr_O1Ef3h0AFnFXmCehK8
-  //
-  #define DOGLCD_A0        PE9
-  #define DOGLCD_CS        PE8
-
-  #define LCD_BACKLIGHT_PIN -1
-
-  #define LCD_RESET_PIN    PB12   // Must be high or open for LCD to operate normally.
-
-  #if EITHER(FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0)
-    #ifndef RGB_LED_R_PIN
-      #define RGB_LED_R_PIN PB13
-    #endif
-    #ifndef RGB_LED_G_PIN
-      #define RGB_LED_G_PIN PB14
-    #endif
-    #ifndef RGB_LED_B_PIN
-      #define RGB_LED_B_PIN PB15
-    #endif
-  #elif ENABLED(FYSETC_MINI_12864_2_1)
-    #define NEOPIXEL_PIN   PB13
-  #endif
-#else
-  #define LCD_PINS_RS      PE9
-  #define LCD_PINS_ENABLE  PE8
-  #define LCD_PINS_D4      PB12
-  #define LCD_PINS_D5      PB13
-  #define LCD_PINS_D6      PB14
-  #define LCD_PINS_D7      PB15
-
-  #if ENABLED(MKS_MINI_12864)
-    #define DOGLCD_CS      PB13
-    #define DOGLCD_A0      PB14
-  #endif
-#endif
-
-#define BTN_EN1            PC4
-#define BTN_EN2            PC5
-#define BTN_ENC            PC3
-
-//
-// Extension pins
-//
-#define EXT0_PIN           PB0
-#define EXT1_PIN           PB1
-#define EXT2_PIN           PB2
-#define EXT3_PIN           PD8
-#define EXT4_PIN           PD9
-#define EXT5_PIN           PD10
-#define EXT6_PIN           PD11
-#define EXT7_PIN           PD12
-#define EXT8_PIN           PB10
-#define EXT9_PIN           PB11
-
-#if HAS_TMC_UART
-  // TMC2208/TMC2209 stepper drivers
-  //
-  // Software serial
-  //
-  #define X_SERIAL_TX_PIN EXT0_PIN
-  #define X_SERIAL_RX_PIN EXT0_PIN
-
-  #define Y_SERIAL_TX_PIN EXT1_PIN
-  #define Y_SERIAL_RX_PIN EXT1_PIN
-
-  #define Z_SERIAL_TX_PIN EXT2_PIN
-  #define Z_SERIAL_RX_PIN EXT2_PIN
-
-  #define E0_SERIAL_TX_PIN EXT3_PIN
-  #define E0_SERIAL_RX_PIN EXT3_PIN
-
-  #define E1_SERIAL_RX_PIN EXT4_PIN
-  #define E1_SERIAL_TX_PIN EXT4_PIN
-
-  #define Z2_SERIAL_RX_PIN EXT4_PIN
-  #define Z2_SERIAL_TX_PIN EXT4_PIN
-
-  #define TMC_BAUD_RATE 19200
-#endif

commit e5dcab8fd26e0c755969450f738b1e7a2ad21d9f
Author: Karl Andersson <karl@iaccess.se>
Date:   Tue Mar 17 21:05:12 2020 +0100

    ARMED support for TMC UART, probe temp (#17186)

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
index 03f267a3a4..1e33336512 100644
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -118,6 +118,10 @@
 #define TEMP_1_PIN         PC1   // Analog Input
 #define TEMP_BED_PIN       PC2   // Analog Input
 
+#if HOTENDS == 1 && TEMP_SENSOR_PROBE
+  #define TEMP_PROBE_PIN   PC1
+#endif
+
 //
 // Heaters / Fans
 //
@@ -199,3 +203,29 @@
 #define EXT7_PIN           PD12
 #define EXT8_PIN           PB10
 #define EXT9_PIN           PB11
+
+#if HAS_TMC_UART
+  // TMC2208/TMC2209 stepper drivers
+  //
+  // Software serial
+  //
+  #define X_SERIAL_TX_PIN EXT0_PIN
+  #define X_SERIAL_RX_PIN EXT0_PIN
+
+  #define Y_SERIAL_TX_PIN EXT1_PIN
+  #define Y_SERIAL_RX_PIN EXT1_PIN
+
+  #define Z_SERIAL_TX_PIN EXT2_PIN
+  #define Z_SERIAL_RX_PIN EXT2_PIN
+
+  #define E0_SERIAL_TX_PIN EXT3_PIN
+  #define E0_SERIAL_RX_PIN EXT3_PIN
+
+  #define E1_SERIAL_RX_PIN EXT4_PIN
+  #define E1_SERIAL_TX_PIN EXT4_PIN
+
+  #define Z2_SERIAL_RX_PIN EXT4_PIN
+  #define Z2_SERIAL_TX_PIN EXT4_PIN
+
+  #define TMC_BAUD_RATE 19200
+#endif

commit 0268c1d02c33e6568aa579cfb9e4058603cbcb3c
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Tue Feb 4 01:24:11 2020 -0600

    STM32duino - Use SDIO for onboard SD (#16756)

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
index 23ccccdc03..03f267a3a4 100644
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -19,6 +19,9 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+
+//  https://github.com/ktand/Armed
+
 #pragma once
 
 #ifndef STM32F4

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
index 495654a82c..23ccccdc03 100644
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 0cc524b84f3e640da4b8c2fdfdb9ab87dac251bf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Aug 20 19:08:58 2019 -0500

    Prevent BOARD_NAME conflict with env

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
index ea1c11f39b..495654a82c 100644
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -31,9 +31,9 @@
   #define ARMED_V1_1
 #endif
 
-#undef BOARD_NAME // Defined on the command line by Arduino Core STM32
-#define BOARD_NAME           "Arm'ed"
-#define DEFAULT_MACHINE_NAME BOARD_NAME
+#undef BOARD_INFO_NAME // Defined on the command line by Arduino Core STM32
+#define BOARD_INFO_NAME      "Arm'ed"
+#define DEFAULT_MACHINE_NAME BOARD_INFO_NAME
 
 #define I2C_EEPROM
 

commit d472934a70366d096686e2d95cb2a04d30ac8d34
Author: Karl Andersson <karl@iaccess.se>
Date:   Thu Jul 18 12:42:16 2019 +0200

    FYSETC Mini 12864 for HAL_STM32 (#14639)

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
index 8bf8bb4faf..ea1c11f39b 100644
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -43,19 +43,23 @@
 //
 // Limit Switches
 //
-#define X_MIN_PIN          PE0
-#define X_MAX_PIN          -1
-#define Y_MIN_PIN          PE1
-#define Y_MAX_PIN          -1
-#define Z_MIN_PIN          PE14
-#define Z_MAX_PIN          -1
+#define X_STOP_PIN         PE0
+#define Y_STOP_PIN         PE1
+#define Z_STOP_PIN         PE14
 
 //
 // Z Probe (when not Z_MIN_PIN)
 //
-// #ifndef Z_MIN_PROBE_PIN
-//   #define Z_MIN_PROBE_PIN  PA4
-// #endif
+//#ifndef Z_MIN_PROBE_PIN
+//  #define Z_MIN_PROBE_PIN  PA4
+//#endif
+
+//
+// Filament Runout Sensor
+//
+#ifndef FIL_RUNOUT_PIN
+  #define FIL_RUNOUT_PIN   PA3
+#endif
 
 //
 // Steppers
@@ -85,13 +89,12 @@
 
 #define E0_STEP_PIN        PB5
 #define E0_DIR_PIN         PB6
-#define E0_CS_PIN          PB4
-
 #ifdef ARMED_V1_1
   #define E0_ENABLE_PIN    PC12
 #else
   #define E0_ENABLE_PIN    PB3
 #endif
+#define E0_CS_PIN          PB4
 
 #ifdef ARMED_SWAP_X_E1
   #define E1_STEP_PIN      PD3
@@ -137,21 +140,49 @@
 //
 #define SD_DETECT_PIN      PA15
 #define BEEPER_PIN         PC9
-#define LCD_PINS_RS        PE9
-#define LCD_PINS_ENABLE    PE8
-#define LCD_PINS_D4        PB12
-#define LCD_PINS_D5        PB13
-#define LCD_PINS_D6        PB14
-#define LCD_PINS_D7        PB15
+
+#if ENABLED(FYSETC_MINI_12864)
+  //
+  // See https://wiki.fysetc.com/Mini12864_Panel/?fbclid=IwAR1FyjuNdVOOy9_xzky3qqo_WeM5h-4gpRnnWhQr_O1Ef3h0AFnFXmCehK8
+  //
+  #define DOGLCD_A0        PE9
+  #define DOGLCD_CS        PE8
+
+  #define LCD_BACKLIGHT_PIN -1
+
+  #define LCD_RESET_PIN    PB12   // Must be high or open for LCD to operate normally.
+
+  #if EITHER(FYSETC_MINI_12864_1_2, FYSETC_MINI_12864_2_0)
+    #ifndef RGB_LED_R_PIN
+      #define RGB_LED_R_PIN PB13
+    #endif
+    #ifndef RGB_LED_G_PIN
+      #define RGB_LED_G_PIN PB14
+    #endif
+    #ifndef RGB_LED_B_PIN
+      #define RGB_LED_B_PIN PB15
+    #endif
+  #elif ENABLED(FYSETC_MINI_12864_2_1)
+    #define NEOPIXEL_PIN   PB13
+  #endif
+#else
+  #define LCD_PINS_RS      PE9
+  #define LCD_PINS_ENABLE  PE8
+  #define LCD_PINS_D4      PB12
+  #define LCD_PINS_D5      PB13
+  #define LCD_PINS_D6      PB14
+  #define LCD_PINS_D7      PB15
+
+  #if ENABLED(MKS_MINI_12864)
+    #define DOGLCD_CS      PB13
+    #define DOGLCD_A0      PB14
+  #endif
+#endif
+
 #define BTN_EN1            PC4
 #define BTN_EN2            PC5
 #define BTN_ENC            PC3
 
-//
-// Filament runout detection
-//
-#define FIL_RUNOUT_PIN     PA3
-
 //
 // Extension pins
 //

commit fdaa37449066ec6121d89f2fb48c0390c0600015
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Jul 14 15:34:01 2019 -0500

    Clean up pins self-checks

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
index c793d83da5..8bf8bb4faf 100644
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -23,6 +23,8 @@
 
 #ifndef STM32F4
   #error "Oops! Select an STM32F4 board in 'Tools > Board.'"
+#elif HOTENDS > 2 || E_STEPPERS > 2
+  #error "Arm'ed supports up to 2 hotends / E-steppers."
 #endif
 
 #ifndef ARMED_V1_0
@@ -38,10 +40,6 @@
 #undef E2END // Defined in Arduino Core STM32 to be used with EEPROM emulation. This board uses a real EEPROM.
 #define E2END 0xFFF // 4KB
 
-#if HOTENDS > 2 || E_STEPPERS > 2
-  #error "Arm'ed supports up to 2 hotends / E-steppers."
-#endif
-
 //
 // Limit Switches
 //

commit 82cafc9b1992541ecc61a5fb0ca426ea6e96ccc8
Author: Karl Andersson <karl@iaccess.se>
Date:   Fri Jul 12 13:06:04 2019 +0200

    pins_ARMED overrides STM32 defines (#14587)

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
index 4f9acc44b7..c793d83da5 100644
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -25,13 +25,17 @@
   #error "Oops! Select an STM32F4 board in 'Tools > Board.'"
 #endif
 
-#define ARMED_V1_1
+#ifndef ARMED_V1_0
+  #define ARMED_V1_1
+#endif
 
+#undef BOARD_NAME // Defined on the command line by Arduino Core STM32
 #define BOARD_NAME           "Arm'ed"
 #define DEFAULT_MACHINE_NAME BOARD_NAME
 
 #define I2C_EEPROM
 
+#undef E2END // Defined in Arduino Core STM32 to be used with EEPROM emulation. This board uses a real EEPROM.
 #define E2END 0xFFF // 4KB
 
 #if HOTENDS > 2 || E_STEPPERS > 2

commit 179095c387e3b9d7e16d444fc00f6b720ca66984
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jul 11 04:51:47 2019 -0500

    Pins cleanup

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
index 099b48368d..4f9acc44b7 100644
--- a/Marlin/src/pins/stm32/pins_ARMED.h
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -113,13 +113,13 @@
 //
 // Heaters / Fans
 //
-#define HEATER_0_PIN       PA1   // PWM pin
-#define HEATER_1_PIN       PA2   // PWM pin
-#define HEATER_BED_PIN     PA0   // PWM pin
+#define HEATER_0_PIN       PA1   // Hardware PWM
+#define HEATER_1_PIN       PA2   // Hardware PWM
+#define HEATER_BED_PIN     PA0   // Hardware PWM
 
-#define FAN_PIN            PC6   // PWM pin, Part cooling fan
-#define FAN1_PIN           PC7   // PWM pin, Extruder fan
-#define FAN2_PIN           PC8   // PWM pin, Controller fan
+#define FAN_PIN            PC6   // Hardware PWM, Part cooling fan
+#define FAN1_PIN           PC7   // Hardware PWM, Extruder fan
+#define FAN2_PIN           PC8   // Hardware PWM, Controller fan
 
 //
 // Misc functions

commit 7de605c5c341d2e0b2a361c4d03ec5709254fe03
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 11 02:32:24 2019 -0500

    Move pins files to subfolders #14573

diff --git a/Marlin/src/pins/stm32/pins_ARMED.h b/Marlin/src/pins/stm32/pins_ARMED.h
new file mode 100644
index 0000000000..099b48368d
--- /dev/null
+++ b/Marlin/src/pins/stm32/pins_ARMED.h
@@ -0,0 +1,165 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#ifndef STM32F4
+  #error "Oops! Select an STM32F4 board in 'Tools > Board.'"
+#endif
+
+#define ARMED_V1_1
+
+#define BOARD_NAME           "Arm'ed"
+#define DEFAULT_MACHINE_NAME BOARD_NAME
+
+#define I2C_EEPROM
+
+#define E2END 0xFFF // 4KB
+
+#if HOTENDS > 2 || E_STEPPERS > 2
+  #error "Arm'ed supports up to 2 hotends / E-steppers."
+#endif
+
+//
+// Limit Switches
+//
+#define X_MIN_PIN          PE0
+#define X_MAX_PIN          -1
+#define Y_MIN_PIN          PE1
+#define Y_MAX_PIN          -1
+#define Z_MIN_PIN          PE14
+#define Z_MAX_PIN          -1
+
+//
+// Z Probe (when not Z_MIN_PIN)
+//
+// #ifndef Z_MIN_PROBE_PIN
+//   #define Z_MIN_PROBE_PIN  PA4
+// #endif
+
+//
+// Steppers
+//
+
+#ifdef ARMED_SWAP_X_E1
+  #define X_STEP_PIN       PE4
+  #define X_DIR_PIN        PE2
+  #define X_ENABLE_PIN     PE3
+  #define X_CS_PIN         PE5
+#else
+  #define X_STEP_PIN       PD3
+  #define X_DIR_PIN        PD2
+  #define X_ENABLE_PIN     PD0
+  #define X_CS_PIN         PD1
+#endif
+
+#define Y_STEP_PIN         PE11
+#define Y_DIR_PIN          PE10
+#define Y_ENABLE_PIN       PE13
+#define Y_CS_PIN           PE12
+
+#define Z_STEP_PIN         PD6
+#define Z_DIR_PIN          PD7
+#define Z_ENABLE_PIN       PD4
+#define Z_CS_PIN           PD5
+
+#define E0_STEP_PIN        PB5
+#define E0_DIR_PIN         PB6
+#define E0_CS_PIN          PB4
+
+#ifdef ARMED_V1_1
+  #define E0_ENABLE_PIN    PC12
+#else
+  #define E0_ENABLE_PIN    PB3
+#endif
+
+#ifdef ARMED_SWAP_X_E1
+  #define E1_STEP_PIN      PD3
+  #define E1_DIR_PIN       PD2
+  #define E1_ENABLE_PIN    PD0
+  #define E1_CS_PIN        PD1
+#else
+  #define E1_STEP_PIN      PE4
+  #define E1_DIR_PIN       PE2
+  #define E1_ENABLE_PIN    PE3
+  #define E1_CS_PIN        PE5
+#endif
+
+//
+// Temperature Sensors
+//
+#define TEMP_0_PIN         PC0   // Analog Input
+#define TEMP_1_PIN         PC1   // Analog Input
+#define TEMP_BED_PIN       PC2   // Analog Input
+
+//
+// Heaters / Fans
+//
+#define HEATER_0_PIN       PA1   // PWM pin
+#define HEATER_1_PIN       PA2   // PWM pin
+#define HEATER_BED_PIN     PA0   // PWM pin
+
+#define FAN_PIN            PC6   // PWM pin, Part cooling fan
+#define FAN1_PIN           PC7   // PWM pin, Extruder fan
+#define FAN2_PIN           PC8   // PWM pin, Controller fan
+
+//
+// Misc functions
+//
+#define SDSS               PE7
+#define LED_PIN            PB7   // Heart beat
+#define PS_ON_PIN          PA10
+#define KILL_PIN           PA8
+#define PWR_LOSS           PA4   // Power loss / nAC_FAULT
+
+//
+// LCD / Controller
+//
+#define SD_DETECT_PIN      PA15
+#define BEEPER_PIN         PC9
+#define LCD_PINS_RS        PE9
+#define LCD_PINS_ENABLE    PE8
+#define LCD_PINS_D4        PB12
+#define LCD_PINS_D5        PB13
+#define LCD_PINS_D6        PB14
+#define LCD_PINS_D7        PB15
+#define BTN_EN1            PC4
+#define BTN_EN2            PC5
+#define BTN_ENC            PC3
+
+//
+// Filament runout detection
+//
+#define FIL_RUNOUT_PIN     PA3
+
+//
+// Extension pins
+//
+#define EXT0_PIN           PB0
+#define EXT1_PIN           PB1
+#define EXT2_PIN           PB2
+#define EXT3_PIN           PD8
+#define EXT4_PIN           PD9
+#define EXT5_PIN           PD10
+#define EXT6_PIN           PD11
+#define EXT7_PIN           PD12
+#define EXT8_PIN           PB10
+#define EXT9_PIN           PB11
