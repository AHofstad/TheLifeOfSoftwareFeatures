commit 78bdf34b7bc56a0a8aa193cfd824ad2841ed25dc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 14 18:06:56 2023 -0500

    üßë‚Äçüíª HostUI::continue_prompt method

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 3f75562398..c030ebad01 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -28,20 +28,22 @@
 
   enum PromptReason : uint8_t {
     PROMPT_NOT_DEFINED,
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 
+  extern const char CONTINUE_STR[], DISMISS_STR[];
+
 #endif
 
 class HostUI {
   public:
 
   static void action(FSTR_P const fstr, const bool eol=true);
 
   #ifdef ACTION_ON_KILL
     static void kill();
   #endif
@@ -104,25 +106,26 @@ class HostUI {
     static void prompt_end();
 
     static void prompt_button(FSTR_P const fstr);
     static void prompt_button(const char * const cstr);
 
     static void prompt_do(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
     static void prompt_do(const PromptReason reason, const char * const cstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
     static void prompt_do(const PromptReason reason, FSTR_P const pstr, const char extra_char, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
     static void prompt_do(const PromptReason reason, const char * const cstr, const char extra_char, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
 
+    static void continue_prompt(FSTR_P const fstr) { prompt_do(PROMPT_USER_CONTINUE, fstr, FPSTR(CONTINUE_STR)); }
+    static void continue_prompt(const char * const cstr) { prompt_do(PROMPT_USER_CONTINUE, cstr, FPSTR(CONTINUE_STR)); }
+
     static void prompt_open(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr) {
       if (host_prompt_reason == PROMPT_NOT_DEFINED) prompt_do(reason, pstr, btn1, btn2);
     }
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       static void filament_load_prompt();
     #endif
 
   #endif
 
 };
 
 extern HostUI hostui;
-
-extern const char CONTINUE_STR[], DISMISS_STR[];

commit 5a80fc261736f6e88ec87b5544228383e2937894
Author: Dan Royer <dan@marginallyclever.com>
Date:   Sat Oct 15 22:03:42 2022 -0700

    üêõ Fix and improve Polargraph (#24847)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 41d66b82ec..3f75562398 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -72,38 +72,52 @@ class HostUI {
       static void g29_recover();
     #endif
     #ifdef ACTION_ON_G29_FAILURE
       static void g29_failure();
     #endif
   #endif
 
   #if ENABLED(HOST_PROMPT_SUPPORT)
     private:
     static void prompt(FSTR_P const ptype, const bool eol=true);
-    static void prompt_plus(FSTR_P const ptype, FSTR_P const fstr, const char extra_char='\0');
+    static void prompt_plus(const bool pgm, FSTR_P const ptype, const char * const str, const char extra_char='\0');
+    static void prompt_plus(FSTR_P const ptype, FSTR_P const fstr, const char extra_char='\0') {
+      prompt_plus(true, ptype, FTOP(fstr), extra_char);
+    }
+    static void prompt_plus(FSTR_P const ptype, const char * const cstr, const char extra_char='\0') {
+      prompt_plus(false, ptype, cstr, extra_char);
+    }
+
     static void prompt_show();
     static void _prompt_show(FSTR_P const btn1, FSTR_P const btn2);
 
     public:
     static PromptReason host_prompt_reason;
 
     static void handle_response(const uint8_t response);
 
     static void notify_P(PGM_P const message);
     static void notify(FSTR_P const fmsg) { notify_P(FTOP(fmsg)); }
     static void notify(const char * const message);
 
     static void prompt_begin(const PromptReason reason, FSTR_P const fstr, const char extra_char='\0');
-    static void prompt_button(FSTR_P const fstr);
+    static void prompt_begin(const PromptReason reason, const char * const cstr, const char extra_char='\0');
     static void prompt_end();
+
+    static void prompt_button(FSTR_P const fstr);
+    static void prompt_button(const char * const cstr);
+
     static void prompt_do(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
+    static void prompt_do(const PromptReason reason, const char * const cstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
     static void prompt_do(const PromptReason reason, FSTR_P const pstr, const char extra_char, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
+    static void prompt_do(const PromptReason reason, const char * const cstr, const char extra_char, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
+
     static void prompt_open(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr) {
       if (host_prompt_reason == PROMPT_NOT_DEFINED) prompt_do(reason, pstr, btn1, btn2);
     }
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       static void filament_load_prompt();
     #endif
 
   #endif
 

commit 2d04e5733aad05a3646ebc3b37ecde25d479589d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 8 18:02:28 2022 -0600

    üßë‚Äçüíª Drop hostui.flag

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 78a7821eba..41d66b82ec 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -17,44 +17,36 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 #include "../inc/MarlinConfigPre.h"
 #include "../HAL/shared/Marduino.h"
 
-typedef union {
-  uint8_t bits;
-  struct { bool info:1, errors:1, debug:1; };
-} flag_t;
-
 #if ENABLED(HOST_PROMPT_SUPPORT)
 
   enum PromptReason : uint8_t {
     PROMPT_NOT_DEFINED,
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 
 #endif
 
 class HostUI {
   public:
 
-  static flag_t flag;
-  HostUI() { flag.bits = 0xFF; }
-
   static void action(FSTR_P const fstr, const bool eol=true);
 
   #ifdef ACTION_ON_KILL
     static void kill();
   #endif
   #ifdef ACTION_ON_PAUSE
     static void pause(const bool eol=true);
   #endif
   #ifdef ACTION_ON_PAUSED
     static void paused(const bool eol=true);

commit 6fb2d8a25f096d084348a6f6930f515d947474d4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 02:57:24 2021 -0600

    üßë‚Äçüíª Remove extraneous 'inline' hints

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 45379afc29..78a7821eba 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -90,29 +90,29 @@ class HostUI {
     static void prompt_plus(FSTR_P const ptype, FSTR_P const fstr, const char extra_char='\0');
     static void prompt_show();
     static void _prompt_show(FSTR_P const btn1, FSTR_P const btn2);
 
     public:
     static PromptReason host_prompt_reason;
 
     static void handle_response(const uint8_t response);
 
     static void notify_P(PGM_P const message);
-    static inline void notify(FSTR_P const fmsg) { notify_P(FTOP(fmsg)); }
+    static void notify(FSTR_P const fmsg) { notify_P(FTOP(fmsg)); }
     static void notify(const char * const message);
 
     static void prompt_begin(const PromptReason reason, FSTR_P const fstr, const char extra_char='\0');
     static void prompt_button(FSTR_P const fstr);
     static void prompt_end();
     static void prompt_do(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
     static void prompt_do(const PromptReason reason, FSTR_P const pstr, const char extra_char, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
-    static inline void prompt_open(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr) {
+    static void prompt_open(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr) {
       if (host_prompt_reason == PROMPT_NOT_DEFINED) prompt_do(reason, pstr, btn1, btn2);
     }
 
     #if ENABLED(ADVANCED_PAUSE_FEATURE)
       static void filament_load_prompt();
     #endif
 
   #endif
 
 };

commit 75e0b7f8ff668217889b770a83990c532998ca95
Author: aalku <aalku7@gmail.com>
Date:   Sat Oct 30 07:17:20 2021 +0200

    ‚ú® Shutdown Host Action (#22908)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 6671072139..45379afc29 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -64,20 +64,23 @@ class HostUI {
   #endif
   #ifdef ACTION_ON_RESUMED
     static void resumed();
   #endif
   #ifdef ACTION_ON_CANCEL
     static void cancel();
   #endif
   #ifdef ACTION_ON_START
     static void start();
   #endif
+  #ifdef SHUTDOWN_ACTION
+    static void shutdown();
+  #endif
 
   #if ENABLED(G29_RETRY_AND_RECOVER)
     #ifdef ACTION_ON_G29_RECOVER
       static void g29_recover();
     #endif
     #ifdef ACTION_ON_G29_FAILURE
       static void g29_failure();
     #endif
   #endif
 

commit ee28a14e8e7f6b33fe5813dbedcd85380207c345
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 15 00:24:08 2021 -0500

    üé® Refactor Host Actions as singleton

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index fb19618b1a..6671072139 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -17,65 +17,103 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 #include "../inc/MarlinConfigPre.h"
 #include "../HAL/shared/Marduino.h"
 
-void host_action(FSTR_P const fstr, const bool eol=true);
-
-#ifdef ACTION_ON_KILL
-  void host_action_kill();
-#endif
-#ifdef ACTION_ON_PAUSE
-  void host_action_pause(const bool eol=true);
-#endif
-#ifdef ACTION_ON_PAUSED
-  void host_action_paused(const bool eol=true);
-#endif
-#ifdef ACTION_ON_RESUME
-  void host_action_resume();
-#endif
-#ifdef ACTION_ON_RESUMED
-  void host_action_resumed();
-#endif
-#ifdef ACTION_ON_CANCEL
-  void host_action_cancel();
-#endif
-#ifdef ACTION_ON_START
-  void host_action_start();
-#endif
+typedef union {
+  uint8_t bits;
+  struct { bool info:1, errors:1, debug:1; };
+} flag_t;
 
 #if ENABLED(HOST_PROMPT_SUPPORT)
 
-  extern const char CONTINUE_STR[], DISMISS_STR[];
-
   enum PromptReason : uint8_t {
     PROMPT_NOT_DEFINED,
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 
-  extern PromptReason host_prompt_reason;
+#endif
 
-  void host_response_handler(const uint8_t response);
-  void host_action_notify(const char * const cstr);
-  void host_action_notify(FSTR_P const fstr);
-  void host_action_prompt_begin(const PromptReason reason, FSTR_P const fstr, const char extra_char='\0');
-  void host_action_prompt_button(FSTR_P const fstr);
-  void host_action_prompt_end();
-  void host_action_prompt_show();
-  void host_prompt_do(const PromptReason reason, FSTR_P const fstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
-  void host_prompt_do(const PromptReason reason, FSTR_P const fstr, const char extra_char, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
-  inline void host_prompt_open(const PromptReason reason, FSTR_P const fstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr) {
-    if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, fstr, btn1, btn2);
-  }
+class HostUI {
+  public:
 
-  void filament_load_host_prompt();
+  static flag_t flag;
+  HostUI() { flag.bits = 0xFF; }
 
-#endif
+  static void action(FSTR_P const fstr, const bool eol=true);
+
+  #ifdef ACTION_ON_KILL
+    static void kill();
+  #endif
+  #ifdef ACTION_ON_PAUSE
+    static void pause(const bool eol=true);
+  #endif
+  #ifdef ACTION_ON_PAUSED
+    static void paused(const bool eol=true);
+  #endif
+  #ifdef ACTION_ON_RESUME
+    static void resume();
+  #endif
+  #ifdef ACTION_ON_RESUMED
+    static void resumed();
+  #endif
+  #ifdef ACTION_ON_CANCEL
+    static void cancel();
+  #endif
+  #ifdef ACTION_ON_START
+    static void start();
+  #endif
+
+  #if ENABLED(G29_RETRY_AND_RECOVER)
+    #ifdef ACTION_ON_G29_RECOVER
+      static void g29_recover();
+    #endif
+    #ifdef ACTION_ON_G29_FAILURE
+      static void g29_failure();
+    #endif
+  #endif
+
+  #if ENABLED(HOST_PROMPT_SUPPORT)
+    private:
+    static void prompt(FSTR_P const ptype, const bool eol=true);
+    static void prompt_plus(FSTR_P const ptype, FSTR_P const fstr, const char extra_char='\0');
+    static void prompt_show();
+    static void _prompt_show(FSTR_P const btn1, FSTR_P const btn2);
+
+    public:
+    static PromptReason host_prompt_reason;
+
+    static void handle_response(const uint8_t response);
+
+    static void notify_P(PGM_P const message);
+    static inline void notify(FSTR_P const fmsg) { notify_P(FTOP(fmsg)); }
+    static void notify(const char * const message);
+
+    static void prompt_begin(const PromptReason reason, FSTR_P const fstr, const char extra_char='\0');
+    static void prompt_button(FSTR_P const fstr);
+    static void prompt_end();
+    static void prompt_do(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
+    static void prompt_do(const PromptReason reason, FSTR_P const pstr, const char extra_char, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
+    static inline void prompt_open(const PromptReason reason, FSTR_P const pstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr) {
+      if (host_prompt_reason == PROMPT_NOT_DEFINED) prompt_do(reason, pstr, btn1, btn2);
+    }
+
+    #if ENABLED(ADVANCED_PAUSE_FEATURE)
+      static void filament_load_prompt();
+    #endif
+
+  #endif
+
+};
+
+extern HostUI hostui;
+
+extern const char CONTINUE_STR[], DISMISS_STR[];

commit 008bf1bcaef181cd1b74638692e2465bb9e07a4d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 11:55:08 2021 -0500

    üé® Apply F() to Host Actions strings

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 065b59d755..fb19618b1a 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -17,21 +17,21 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 #include "../inc/MarlinConfigPre.h"
 #include "../HAL/shared/Marduino.h"
 
-void host_action(PGM_P const pstr, const bool eol=true);
+void host_action(FSTR_P const fstr, const bool eol=true);
 
 #ifdef ACTION_ON_KILL
   void host_action_kill();
 #endif
 #ifdef ACTION_ON_PAUSE
   void host_action_pause(const bool eol=true);
 #endif
 #ifdef ACTION_ON_PAUSED
   void host_action_paused(const bool eol=true);
 #endif
@@ -57,25 +57,25 @@ void host_action(PGM_P const pstr, const bool eol=true);
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 
   extern PromptReason host_prompt_reason;
 
   void host_response_handler(const uint8_t response);
-  void host_action_notify(const char * const message);
-  void host_action_notify_P(PGM_P const message);
-  void host_action_prompt_begin(const PromptReason reason, PGM_P const pstr, const char extra_char='\0');
-  void host_action_prompt_button(PGM_P const pstr);
+  void host_action_notify(const char * const cstr);
+  void host_action_notify(FSTR_P const fstr);
+  void host_action_prompt_begin(const PromptReason reason, FSTR_P const fstr, const char extra_char='\0');
+  void host_action_prompt_button(FSTR_P const fstr);
   void host_action_prompt_end();
   void host_action_prompt_show();
-  void host_prompt_do(const PromptReason reason, PGM_P const pstr, PGM_P const btn1=nullptr, PGM_P const btn2=nullptr);
-  void host_prompt_do(const PromptReason reason, PGM_P const pstr, const char extra_char, PGM_P const btn1=nullptr, PGM_P const btn2=nullptr);
-  inline void host_prompt_open(const PromptReason reason, PGM_P const pstr, PGM_P const btn1=nullptr, PGM_P const btn2=nullptr) {
-    if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, pstr, btn1, btn2);
+  void host_prompt_do(const PromptReason reason, FSTR_P const fstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
+  void host_prompt_do(const PromptReason reason, FSTR_P const fstr, const char extra_char, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr);
+  inline void host_prompt_open(const PromptReason reason, FSTR_P const fstr, FSTR_P const btn1=nullptr, FSTR_P const btn2=nullptr) {
+    if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, fstr, btn1, btn2);
   }
 
   void filament_load_host_prompt();
 
 #endif

commit 35b9e9b4a5628252b22d78dc0657531ccbb3d8e8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 19 00:25:51 2020 -0500

    Tweak a host prompt call

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 09eeed23e2..065b59d755 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -64,17 +64,18 @@ void host_action(PGM_P const pstr, const bool eol=true);
   extern PromptReason host_prompt_reason;
 
   void host_response_handler(const uint8_t response);
   void host_action_notify(const char * const message);
   void host_action_notify_P(PGM_P const message);
   void host_action_prompt_begin(const PromptReason reason, PGM_P const pstr, const char extra_char='\0');
   void host_action_prompt_button(PGM_P const pstr);
   void host_action_prompt_end();
   void host_action_prompt_show();
   void host_prompt_do(const PromptReason reason, PGM_P const pstr, PGM_P const btn1=nullptr, PGM_P const btn2=nullptr);
+  void host_prompt_do(const PromptReason reason, PGM_P const pstr, const char extra_char, PGM_P const btn1=nullptr, PGM_P const btn2=nullptr);
   inline void host_prompt_open(const PromptReason reason, PGM_P const pstr, PGM_P const btn1=nullptr, PGM_P const btn2=nullptr) {
     if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, pstr, btn1, btn2);
   }
 
   void filament_load_host_prompt();
 
 #endif

commit 62206c03864746456f09767d4af351820b30a43a
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Thu Sep 17 07:36:21 2020 -0400

    Host Action: Start (#19398)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index a6ad2c0485..09eeed23e2 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -37,20 +37,23 @@ void host_action(PGM_P const pstr, const bool eol=true);
 #endif
 #ifdef ACTION_ON_RESUME
   void host_action_resume();
 #endif
 #ifdef ACTION_ON_RESUMED
   void host_action_resumed();
 #endif
 #ifdef ACTION_ON_CANCEL
   void host_action_cancel();
 #endif
+#ifdef ACTION_ON_START
+  void host_action_start();
+#endif
 
 #if ENABLED(HOST_PROMPT_SUPPORT)
 
   extern const char CONTINUE_STR[], DISMISS_STR[];
 
   enum PromptReason : uint8_t {
     PROMPT_NOT_DEFINED,
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 81ef8227ae..a6ad2c0485 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 #include "../inc/MarlinConfigPre.h"
 #include "../HAL/shared/Marduino.h"
 
 void host_action(PGM_P const pstr, const bool eol=true);
 
 #ifdef ACTION_ON_KILL

commit 0fbedf5b4ccf84344f54429811bf239f75e2f189
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon May 11 22:15:19 2020 -0500

    Fix LPC host actions, add tests
    
    Fixes #17955

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 07309274b0..81ef8227ae 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -14,21 +14,22 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
-#include "../inc/MarlinConfig.h"
+#include "../inc/MarlinConfigPre.h"
+#include "../HAL/shared/Marduino.h"
 
 void host_action(PGM_P const pstr, const bool eol=true);
 
 #ifdef ACTION_ON_KILL
   void host_action_kill();
 #endif
 #ifdef ACTION_ON_PAUSE
   void host_action_pause(const bool eol=true);
 #endif
 #ifdef ACTION_ON_PAUSED

commit 00e7599c8caaf9d76024bcb000df169bfe3bfe8a
Author: Desuuuu <contact@desuuuu.com>
Date:   Mon May 11 02:19:23 2020 +0000

    Fix host_action_notify and string types (#17953)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 3667b7f430..07309274b0 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -14,23 +14,23 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
-#include "../inc/MarlinConfigPre.h"
+#include "../inc/MarlinConfig.h"
 
-void host_action(const char * const pstr, const bool eol=true);
+void host_action(PGM_P const pstr, const bool eol=true);
 
 #ifdef ACTION_ON_KILL
   void host_action_kill();
 #endif
 #ifdef ACTION_ON_PAUSE
   void host_action_pause(const bool eol=true);
 #endif
 #ifdef ACTION_ON_PAUSED
   void host_action_paused(const bool eol=true);
 #endif
@@ -54,22 +54,23 @@ void host_action(const char * const pstr, const bool eol=true);
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 
   extern PromptReason host_prompt_reason;
 
   void host_response_handler(const uint8_t response);
   void host_action_notify(const char * const message);
-  void host_action_prompt_begin(const PromptReason reason, const char * const pstr, const char extra_char='\0');
-  void host_action_prompt_button(const char * const pstr);
+  void host_action_notify_P(PGM_P const message);
+  void host_action_prompt_begin(const PromptReason reason, PGM_P const pstr, const char extra_char='\0');
+  void host_action_prompt_button(PGM_P const pstr);
   void host_action_prompt_end();
   void host_action_prompt_show();
-  void host_prompt_do(const PromptReason reason, const char * const pstr, const char * const btn1=nullptr, const char * const btn2=nullptr);
-  inline void host_prompt_open(const PromptReason reason, const char * const pstr, const char * const btn1=nullptr, const char * const btn2=nullptr) {
+  void host_prompt_do(const PromptReason reason, PGM_P const pstr, PGM_P const btn1=nullptr, PGM_P const btn2=nullptr);
+  inline void host_prompt_open(const PromptReason reason, PGM_P const pstr, PGM_P const btn1=nullptr, PGM_P const btn2=nullptr) {
     if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, pstr, btn1, btn2);
   }
 
   void filament_load_host_prompt();
 
 #endif

commit 073e4443e8b8624078138a0c6f422cccc2959a86
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Feb 14 00:05:06 2020 -0600

    Optimize "Dismiss" string

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index d90a21b1f1..3667b7f430 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -39,21 +39,21 @@ void host_action(const char * const pstr, const bool eol=true);
 #endif
 #ifdef ACTION_ON_RESUMED
   void host_action_resumed();
 #endif
 #ifdef ACTION_ON_CANCEL
   void host_action_cancel();
 #endif
 
 #if ENABLED(HOST_PROMPT_SUPPORT)
 
-  extern const char CONTINUE_STR[];
+  extern const char CONTINUE_STR[], DISMISS_STR[];
 
   enum PromptReason : uint8_t {
     PROMPT_NOT_DEFINED,
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 

commit 00ba053c90ebbe6d430a48912bc3e00c8a1041c8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 13 23:39:27 2020 -0600

    Clean up host actions code (#16856)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 939f0be2de..d90a21b1f1 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -54,20 +54,22 @@ void host_action(const char * const pstr, const bool eol=true);
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 
   extern PromptReason host_prompt_reason;
 
   void host_response_handler(const uint8_t response);
   void host_action_notify(const char * const message);
-  void host_action_prompt_begin(const char * const pstr, const bool eol=true);
+  void host_action_prompt_begin(const PromptReason reason, const char * const pstr, const char extra_char='\0');
   void host_action_prompt_button(const char * const pstr);
   void host_action_prompt_end();
   void host_action_prompt_show();
-  void host_prompt_do(const PromptReason type, const char * const pstr, const char * const pbtn=nullptr);
-  inline void host_prompt_open(const PromptReason reason, const char * const pstr, const char * const pbtn=nullptr) {
-    if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, pstr, pbtn);
+  void host_prompt_do(const PromptReason reason, const char * const pstr, const char * const btn1=nullptr, const char * const btn2=nullptr);
+  inline void host_prompt_open(const PromptReason reason, const char * const pstr, const char * const btn1=nullptr, const char * const btn2=nullptr) {
+    if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, pstr, btn1, btn2);
   }
 
+  void filament_load_host_prompt();
+
 #endif

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 57af59eb2e..939f0be2de 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 7126a5e5a7f2bcab61fd4ae89224fdb0cac9502e
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Dec 1 18:39:28 2019 -0500

    Add Host Prompt Notification Method (#15942)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index b742d0f081..57af59eb2e 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -53,20 +53,21 @@ void host_action(const char * const pstr, const bool eol=true);
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 
   extern PromptReason host_prompt_reason;
 
   void host_response_handler(const uint8_t response);
+  void host_action_notify(const char * const message);
   void host_action_prompt_begin(const char * const pstr, const bool eol=true);
   void host_action_prompt_button(const char * const pstr);
   void host_action_prompt_end();
   void host_action_prompt_show();
   void host_prompt_do(const PromptReason type, const char * const pstr, const char * const pbtn=nullptr);
   inline void host_prompt_open(const PromptReason reason, const char * const pstr, const char * const pbtn=nullptr) {
     if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, pstr, pbtn);
   }
 
 #endif

commit f83bc0aa13e8cf2d92ec138576cc3a620e74a982
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Nov 29 04:45:07 2019 -0600

    Optimize common strings
    
    Saves 128 bytes in testing with `mftest mega 1 -y`

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 7477b6e6df..b742d0f081 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -39,20 +39,22 @@ void host_action(const char * const pstr, const bool eol=true);
 #endif
 #ifdef ACTION_ON_RESUMED
   void host_action_resumed();
 #endif
 #ifdef ACTION_ON_CANCEL
   void host_action_cancel();
 #endif
 
 #if ENABLED(HOST_PROMPT_SUPPORT)
 
+  extern const char CONTINUE_STR[];
+
   enum PromptReason : uint8_t {
     PROMPT_NOT_DEFINED,
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
     PROMPT_PAUSE_RESUME,
     PROMPT_INFO
   };
 
   extern PromptReason host_prompt_reason;

commit 5221e2d991ccae7ff4283a60afb240165c8f0199
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Fri Sep 27 18:06:26 2019 -0400

    Restore Host Prompt Info (#15387)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 11078ce20f..7477b6e6df 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -44,21 +44,22 @@ void host_action(const char * const pstr, const bool eol=true);
   void host_action_cancel();
 #endif
 
 #if ENABLED(HOST_PROMPT_SUPPORT)
 
   enum PromptReason : uint8_t {
     PROMPT_NOT_DEFINED,
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
-    PROMPT_PAUSE_RESUME
+    PROMPT_PAUSE_RESUME,
+    PROMPT_INFO
   };
 
   extern PromptReason host_prompt_reason;
 
   void host_response_handler(const uint8_t response);
   void host_action_prompt_begin(const char * const pstr, const bool eol=true);
   void host_action_prompt_button(const char * const pstr);
   void host_action_prompt_end();
   void host_action_prompt_show();
   void host_prompt_do(const PromptReason type, const char * const pstr, const char * const pbtn=nullptr);

commit c353eaa14630eb9d74f185e2b6aae1630ca21525
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 17 18:16:28 2019 -0500

    Misc changes from struct refactor (#15289)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index fa3c43ab6e..11078ce20f 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -16,22 +16,20 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 #include "../inc/MarlinConfigPre.h"
 
-#include <stddef.h>
-
 void host_action(const char * const pstr, const bool eol=true);
 
 #ifdef ACTION_ON_KILL
   void host_action_kill();
 #endif
 #ifdef ACTION_ON_PAUSE
   void host_action_pause(const bool eol=true);
 #endif
 #ifdef ACTION_ON_PAUSED
   void host_action_paused(const bool eol=true);

commit 841c8ce0d9bdc67af010692014800431a278dd46
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 9 15:43:06 2019 -0500

    Remove PROMPT_INFO / PROMPT_GCODE_INFO (#15210)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index c93d3a16db..fa3c43ab6e 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -46,22 +46,21 @@ void host_action(const char * const pstr, const bool eol=true);
   void host_action_cancel();
 #endif
 
 #if ENABLED(HOST_PROMPT_SUPPORT)
 
   enum PromptReason : uint8_t {
     PROMPT_NOT_DEFINED,
     PROMPT_FILAMENT_RUNOUT,
     PROMPT_USER_CONTINUE,
     PROMPT_FILAMENT_RUNOUT_REHEAT,
-    PROMPT_PAUSE_RESUME,
-    PROMPT_INFO
+    PROMPT_PAUSE_RESUME
   };
 
   extern PromptReason host_prompt_reason;
 
   void host_response_handler(const uint8_t response);
   void host_action_prompt_begin(const char * const pstr, const bool eol=true);
   void host_action_prompt_button(const char * const pstr);
   void host_action_prompt_end();
   void host_action_prompt_show();
   void host_prompt_do(const PromptReason type, const char * const pstr, const char * const pbtn=nullptr);

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 149c47d819..c93d3a16db 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -1,16 +1,16 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

commit 51acbb2201b7f436f8b4b91c25e3db2fbdc451ad
Author: ManuelMcLure <manuel@mclure.org>
Date:   Thu May 9 09:48:31 2019 -0700

    Prevent HOST_PROMPT_SUPPORT compile error (#13943)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 19f9f16ab7..149c47d819 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -16,21 +16,21 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 #include "../inc/MarlinConfigPre.h"
 
-#include <stdint.h>
+#include <stddef.h>
 
 void host_action(const char * const pstr, const bool eol=true);
 
 #ifdef ACTION_ON_KILL
   void host_action_kill();
 #endif
 #ifdef ACTION_ON_PAUSE
   void host_action_pause(const bool eol=true);
 #endif
 #ifdef ACTION_ON_PAUSED

commit ad4ffa1d2fbd17ac09c816ba2052cdf714261042
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 9 11:45:55 2019 -0500

    Use C++ language supported 'nullptr' (#13944)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index b521f26a35..19f9f16ab7 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -57,16 +57,16 @@ void host_action(const char * const pstr, const bool eol=true);
     PROMPT_INFO
   };
 
   extern PromptReason host_prompt_reason;
 
   void host_response_handler(const uint8_t response);
   void host_action_prompt_begin(const char * const pstr, const bool eol=true);
   void host_action_prompt_button(const char * const pstr);
   void host_action_prompt_end();
   void host_action_prompt_show();
-  void host_prompt_do(const PromptReason type, const char * const pstr, const char * const pbtn=NULL);
-  inline void host_prompt_open(const PromptReason reason, const char * const pstr, const char * const pbtn=NULL) {
+  void host_prompt_do(const PromptReason type, const char * const pstr, const char * const pbtn=nullptr);
+  inline void host_prompt_open(const PromptReason reason, const char * const pstr, const char * const pbtn=nullptr) {
     if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, pstr, pbtn);
   }
 
 #endif

commit 09f1b581460529a807b0a6f6e18d5359b280f2e4
Author: ManuelMcLure <manuel@mclure.org>
Date:   Sat May 4 20:55:51 2019 -0700

    Fix HOST_PROMPT_SUPPORT compile issue (#13847)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index e6f77cb63c..b521f26a35 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -14,21 +14,23 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
-#include "../inc/MarlinConfig.h"
+#include "../inc/MarlinConfigPre.h"
+
+#include <stdint.h>
 
 void host_action(const char * const pstr, const bool eol=true);
 
 #ifdef ACTION_ON_KILL
   void host_action_kill();
 #endif
 #ifdef ACTION_ON_PAUSE
   void host_action_pause(const bool eol=true);
 #endif
 #ifdef ACTION_ON_PAUSED

commit 7e58d33a2e7c7a7690a9c0fa926b73c511560827
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Apr 12 13:03:16 2019 -0500

    Update some headers

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
index 4aee3ef1f5..e6f77cb63c 100644
--- a/Marlin/src/feature/host_actions.h
+++ b/Marlin/src/feature/host_actions.h
@@ -1,13 +1,13 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,

commit 7f1b69b0c83ae914ed9ae35fdad9f79814069652
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Feb 12 16:55:47 2019 -0500

    Add HOST_PROMPT_SUPPORT (#13039)

diff --git a/Marlin/src/feature/host_actions.h b/Marlin/src/feature/host_actions.h
new file mode 100644
index 0000000000..4aee3ef1f5
--- /dev/null
+++ b/Marlin/src/feature/host_actions.h
@@ -0,0 +1,70 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#include "../inc/MarlinConfig.h"
+
+void host_action(const char * const pstr, const bool eol=true);
+
+#ifdef ACTION_ON_KILL
+  void host_action_kill();
+#endif
+#ifdef ACTION_ON_PAUSE
+  void host_action_pause(const bool eol=true);
+#endif
+#ifdef ACTION_ON_PAUSED
+  void host_action_paused(const bool eol=true);
+#endif
+#ifdef ACTION_ON_RESUME
+  void host_action_resume();
+#endif
+#ifdef ACTION_ON_RESUMED
+  void host_action_resumed();
+#endif
+#ifdef ACTION_ON_CANCEL
+  void host_action_cancel();
+#endif
+
+#if ENABLED(HOST_PROMPT_SUPPORT)
+
+  enum PromptReason : uint8_t {
+    PROMPT_NOT_DEFINED,
+    PROMPT_FILAMENT_RUNOUT,
+    PROMPT_USER_CONTINUE,
+    PROMPT_FILAMENT_RUNOUT_REHEAT,
+    PROMPT_PAUSE_RESUME,
+    PROMPT_INFO
+  };
+
+  extern PromptReason host_prompt_reason;
+
+  void host_response_handler(const uint8_t response);
+  void host_action_prompt_begin(const char * const pstr, const bool eol=true);
+  void host_action_prompt_button(const char * const pstr);
+  void host_action_prompt_end();
+  void host_action_prompt_show();
+  void host_prompt_do(const PromptReason type, const char * const pstr, const char * const pbtn=NULL);
+  inline void host_prompt_open(const PromptReason reason, const char * const pstr, const char * const pbtn=NULL) {
+    if (host_prompt_reason == PROMPT_NOT_DEFINED) host_prompt_do(reason, pstr, pbtn);
+  }
+
+#endif
