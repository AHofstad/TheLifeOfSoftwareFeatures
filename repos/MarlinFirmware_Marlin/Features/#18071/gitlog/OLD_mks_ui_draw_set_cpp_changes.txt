commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
deleted file mode 100644
index 6b06793f28..0000000000
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ /dev/null
@@ -1,135 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- */
-#include "../../../../inc/MarlinConfigPre.h"
-
-#if HAS_TFT_LVGL_UI
-
-#include "draw_ready_print.h"
-#include "draw_set.h"
-#include "draw_ui.h"
-#include <lv_conf.h>
-
-#include "pic_manager.h"
-
-#include "../../../../gcode/queue.h"
-#include "../../../../inc/MarlinConfig.h"
-
-#if HAS_SUICIDE
-  #include "../../../../MarlinCore.h"
-#endif
-
-static lv_obj_t *scr;
-extern lv_group_t*  g;
-
-enum {
-  ID_S_WIFI = 1,
-  ID_S_FAN,
-  ID_S_ABOUT,
-  ID_S_CONTINUE,
-  ID_S_MOTOR_OFF,
-  ID_S_LANGUAGE,
-  ID_S_MACHINE_PARA,
-  ID_S_EEPROM_SET,
-  ID_S_RETURN
-};
-
-static void event_handler(lv_obj_t *obj, lv_event_t event) {
-  if (event != LV_EVENT_RELEASED) return;
-  if (obj->mks_obj_id == ID_S_CONTINUE) return;
-  if (obj->mks_obj_id == ID_S_MOTOR_OFF) {
-    TERN(HAS_SUICIDE, suicide(), queue.enqueue_now_P(PSTR("M84")));
-    return;
-  }
-  lv_clear_set();
-  switch (obj->mks_obj_id) {
-    case ID_S_FAN:
-      lv_draw_fan();
-      break;
-    case ID_S_ABOUT:
-      lv_draw_about();
-      break;
-    case ID_S_LANGUAGE:
-      lv_draw_language();
-      break;
-    case ID_S_MACHINE_PARA:
-      lv_draw_machine_para();
-      break;
-    case ID_S_EEPROM_SET:
-      lv_draw_eeprom_settings();
-      break;
-    case ID_S_RETURN:
-      lv_draw_ready_print();
-      break;
-
-    #if ENABLED(MKS_WIFI_MODULE)
-      case ID_S_WIFI:
-        if (gCfgItems.wifi_mode_sel == STA_MODEL) {
-          if (wifi_link_state == WIFI_CONNECTED) {
-            last_disp_state = SET_UI;
-            lv_draw_wifi();
-          }
-          else {
-            if (uiCfg.command_send) {
-              uint8_t cmd_wifi_list[] = { 0xA5, 0x07, 0x00, 0x00, 0xFC };
-              raw_send_to_wifi(cmd_wifi_list, COUNT(cmd_wifi_list));
-              last_disp_state = SET_UI;
-              lv_draw_wifi_list();
-            }
-            else {
-              last_disp_state = SET_UI;
-              lv_draw_dialog(DIALOG_WIFI_ENABLE_TIPS);
-            }
-          }
-        }
-        else {
-          last_disp_state = SET_UI;
-          lv_draw_wifi();
-        }
-        break;
-    #endif
-  }
-}
-
-void lv_draw_set() {
-  scr = lv_screen_create(SET_UI);
-  lv_big_button_create(scr, "F:/bmp_eeprom_settings.bin", set_menu.eepromSet, INTERVAL_V, titleHeight, event_handler, ID_S_EEPROM_SET);
-  lv_big_button_create(scr, "F:/bmp_fan.bin", set_menu.fan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_S_FAN);
-  lv_big_button_create(scr, "F:/bmp_about.bin", set_menu.about, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_S_ABOUT);
-  lv_big_button_create(scr, ENABLED(HAS_SUICIDE) ? "F:/bmp_manual_off.bin" : "F:/bmp_function1.bin", set_menu.TERN(HAS_SUICIDE, shutdown, motoroff), BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_S_MOTOR_OFF);
-  lv_big_button_create(scr, "F:/bmp_machine_para.bin", set_menu.machine_para, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_MACHINE_PARA);
-  #if HAS_LANG_SELECT_SCREEN
-    lv_big_button_create(scr, "F:/bmp_language.bin", set_menu.language, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_LANGUAGE);
-  #endif
-  #if ENABLED(MKS_WIFI_MODULE)
-    lv_big_button_create(scr, "F:/bmp_wifi.bin", set_menu.wifi, BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_WIFI);
-  #endif
-  lv_big_button_create(scr, "F:/bmp_return.bin", common_menu.text_back, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_RETURN);
-}
-
-void lv_clear_set() {
-  #if HAS_ROTARY_ENCODER
-    if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
-  #endif
-  lv_obj_del(scr);
-}
-
-#endif // HAS_TFT_LVGL_UI

commit 40c8f2001d2274dd34868d2e83ba65a09bcfba17
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 16 20:43:46 2021 -0600

    Apply bool to some MKS UI

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index f6702b559e..6b06793f28 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -81,21 +81,21 @@ static void event_handler(lv_obj_t *obj, lv_event_t event) {
       break;
 
     #if ENABLED(MKS_WIFI_MODULE)
       case ID_S_WIFI:
         if (gCfgItems.wifi_mode_sel == STA_MODEL) {
           if (wifi_link_state == WIFI_CONNECTED) {
             last_disp_state = SET_UI;
             lv_draw_wifi();
           }
           else {
-            if (uiCfg.command_send == 1) {
+            if (uiCfg.command_send) {
               uint8_t cmd_wifi_list[] = { 0xA5, 0x07, 0x00, 0x00, 0xFC };
               raw_send_to_wifi(cmd_wifi_list, COUNT(cmd_wifi_list));
               last_disp_state = SET_UI;
               lv_draw_wifi_list();
             }
             else {
               last_disp_state = SET_UI;
               lv_draw_dialog(DIALOG_WIFI_ENABLE_TIPS);
             }
           }

commit c753fc690f6cdd181213304224eee029988ffd34
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 14 00:23:56 2021 -0600

    More MKS UI prelim. cleanup

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index fa8622e69d..f6702b559e 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -102,21 +102,21 @@ static void event_handler(lv_obj_t *obj, lv_event_t event) {
         }
         else {
           last_disp_state = SET_UI;
           lv_draw_wifi();
         }
         break;
     #endif
   }
 }
 
-void lv_draw_set(void) {
+void lv_draw_set() {
   scr = lv_screen_create(SET_UI);
   lv_big_button_create(scr, "F:/bmp_eeprom_settings.bin", set_menu.eepromSet, INTERVAL_V, titleHeight, event_handler, ID_S_EEPROM_SET);
   lv_big_button_create(scr, "F:/bmp_fan.bin", set_menu.fan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_S_FAN);
   lv_big_button_create(scr, "F:/bmp_about.bin", set_menu.about, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_S_ABOUT);
   lv_big_button_create(scr, ENABLED(HAS_SUICIDE) ? "F:/bmp_manual_off.bin" : "F:/bmp_function1.bin", set_menu.TERN(HAS_SUICIDE, shutdown, motoroff), BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_S_MOTOR_OFF);
   lv_big_button_create(scr, "F:/bmp_machine_para.bin", set_menu.machine_para, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_MACHINE_PARA);
   #if HAS_LANG_SELECT_SCREEN
     lv_big_button_create(scr, "F:/bmp_language.bin", set_menu.language, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_LANGUAGE);
   #endif
   #if ENABLED(MKS_WIFI_MODULE)

commit 44c57ab05a8f909b85f51e08c90316b41e50c455
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jan 12 21:02:35 2021 -0600

    MKS UI prelim. cleanup (#20763)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index 0ccb274153..fa8622e69d 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -20,24 +20,20 @@
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
 #if HAS_TFT_LVGL_UI
 
 #include "draw_ready_print.h"
 #include "draw_set.h"
 #include "draw_ui.h"
 #include <lv_conf.h>
-//#include "../lvgl/src/lv_objx/lv_imgbtn.h"
-//#include "../lvgl/src/lv_objx/lv_img.h"
-//#include "../lvgl/src/lv_core/lv_disp.h"
-//#include "../lvgl/src/lv_core/lv_refr.h"
 
 #include "pic_manager.h"
 
 #include "../../../../gcode/queue.h"
 #include "../../../../inc/MarlinConfig.h"
 
 #if HAS_SUICIDE
   #include "../../../../MarlinCore.h"
 #endif
 
@@ -51,84 +47,68 @@ enum {
   ID_S_CONTINUE,
   ID_S_MOTOR_OFF,
   ID_S_LANGUAGE,
   ID_S_MACHINE_PARA,
   ID_S_EEPROM_SET,
   ID_S_RETURN
 };
 
 static void event_handler(lv_obj_t *obj, lv_event_t event) {
   if (event != LV_EVENT_RELEASED) return;
-  #if ENABLED(MKS_WIFI_MODULE)
-    char buf[6] = { 0 };
-  #endif
+  if (obj->mks_obj_id == ID_S_CONTINUE) return;
+  if (obj->mks_obj_id == ID_S_MOTOR_OFF) {
+    TERN(HAS_SUICIDE, suicide(), queue.enqueue_now_P(PSTR("M84")));
+    return;
+  }
+  lv_clear_set();
   switch (obj->mks_obj_id) {
     case ID_S_FAN:
-      lv_clear_set();
       lv_draw_fan();
       break;
     case ID_S_ABOUT:
-      lv_clear_set();
       lv_draw_about();
       break;
-    case ID_S_CONTINUE: break;
-    case ID_S_MOTOR_OFF:
-      TERN(HAS_SUICIDE, suicide(), queue.enqueue_now_P(PSTR("M84")));
-      break;
     case ID_S_LANGUAGE:
-      lv_clear_set();
       lv_draw_language();
       break;
     case ID_S_MACHINE_PARA:
-      lv_clear_set();
       lv_draw_machine_para();
       break;
     case ID_S_EEPROM_SET:
-      lv_clear_set();
       lv_draw_eeprom_settings();
       break;
     case ID_S_RETURN:
-      lv_clear_set();
       lv_draw_ready_print();
       break;
 
     #if ENABLED(MKS_WIFI_MODULE)
       case ID_S_WIFI:
         if (gCfgItems.wifi_mode_sel == STA_MODEL) {
           if (wifi_link_state == WIFI_CONNECTED) {
             last_disp_state = SET_UI;
-            lv_clear_set();
             lv_draw_wifi();
           }
           else {
             if (uiCfg.command_send == 1) {
-              buf[0] = 0xA5;
-              buf[1] = 0x07;
-              buf[2] = 0x00;
-              buf[3] = 0x00;
-              buf[4] = 0xFC;
-              raw_send_to_wifi(buf, 5);
-
+              uint8_t cmd_wifi_list[] = { 0xA5, 0x07, 0x00, 0x00, 0xFC };
+              raw_send_to_wifi(cmd_wifi_list, COUNT(cmd_wifi_list));
               last_disp_state = SET_UI;
-              lv_clear_set();
               lv_draw_wifi_list();
             }
             else {
               last_disp_state = SET_UI;
-              lv_clear_set();
               lv_draw_dialog(DIALOG_WIFI_ENABLE_TIPS);
             }
           }
         }
         else {
           last_disp_state = SET_UI;
-          lv_clear_set();
           lv_draw_wifi();
         }
         break;
     #endif
   }
 }
 
 void lv_draw_set(void) {
   scr = lv_screen_create(SET_UI);
   lv_big_button_create(scr, "F:/bmp_eeprom_settings.bin", set_menu.eepromSet, INTERVAL_V, titleHeight, event_handler, ID_S_EEPROM_SET);

commit 0e3d86579bca76e7e47a0fb89064e33514519a67
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Thu Nov 19 23:09:33 2020 -0300

    Missing header to use suicide() on LVGL UI (#20214)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index 939d91b7f1..0ccb274153 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -30,20 +30,24 @@
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 
 #include "pic_manager.h"
 
 #include "../../../../gcode/queue.h"
 #include "../../../../inc/MarlinConfig.h"
 
+#if HAS_SUICIDE
+  #include "../../../../MarlinCore.h"
+#endif
+
 static lv_obj_t *scr;
 extern lv_group_t*  g;
 
 enum {
   ID_S_WIFI = 1,
   ID_S_FAN,
   ID_S_ABOUT,
   ID_S_CONTINUE,
   ID_S_MOTOR_OFF,
   ID_S_LANGUAGE,

commit 3893114c86c195d227e023c9e702197b54b2636f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 19 15:51:53 2020 -0600

    MKS WiFi preliminary changes

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index b2211e5631..939d91b7f1 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -47,21 +47,21 @@ enum {
   ID_S_CONTINUE,
   ID_S_MOTOR_OFF,
   ID_S_LANGUAGE,
   ID_S_MACHINE_PARA,
   ID_S_EEPROM_SET,
   ID_S_RETURN
 };
 
 static void event_handler(lv_obj_t *obj, lv_event_t event) {
   if (event != LV_EVENT_RELEASED) return;
-  #if ENABLED(USE_WIFI_FUNCTION)
+  #if ENABLED(MKS_WIFI_MODULE)
     char buf[6] = { 0 };
   #endif
   switch (obj->mks_obj_id) {
     case ID_S_FAN:
       lv_clear_set();
       lv_draw_fan();
       break;
     case ID_S_ABOUT:
       lv_clear_set();
       lv_draw_about();
@@ -80,21 +80,21 @@ static void event_handler(lv_obj_t *obj, lv_event_t event) {
       break;
     case ID_S_EEPROM_SET:
       lv_clear_set();
       lv_draw_eeprom_settings();
       break;
     case ID_S_RETURN:
       lv_clear_set();
       lv_draw_ready_print();
       break;
 
-    #if ENABLED(USE_WIFI_FUNCTION)
+    #if ENABLED(MKS_WIFI_MODULE)
       case ID_S_WIFI:
         if (gCfgItems.wifi_mode_sel == STA_MODEL) {
           if (wifi_link_state == WIFI_CONNECTED) {
             last_disp_state = SET_UI;
             lv_clear_set();
             lv_draw_wifi();
           }
           else {
             if (uiCfg.command_send == 1) {
               buf[0] = 0xA5;
@@ -128,21 +128,21 @@ static void event_handler(lv_obj_t *obj, lv_event_t event) {
 void lv_draw_set(void) {
   scr = lv_screen_create(SET_UI);
   lv_big_button_create(scr, "F:/bmp_eeprom_settings.bin", set_menu.eepromSet, INTERVAL_V, titleHeight, event_handler, ID_S_EEPROM_SET);
   lv_big_button_create(scr, "F:/bmp_fan.bin", set_menu.fan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_S_FAN);
   lv_big_button_create(scr, "F:/bmp_about.bin", set_menu.about, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_S_ABOUT);
   lv_big_button_create(scr, ENABLED(HAS_SUICIDE) ? "F:/bmp_manual_off.bin" : "F:/bmp_function1.bin", set_menu.TERN(HAS_SUICIDE, shutdown, motoroff), BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_S_MOTOR_OFF);
   lv_big_button_create(scr, "F:/bmp_machine_para.bin", set_menu.machine_para, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_MACHINE_PARA);
   #if HAS_LANG_SELECT_SCREEN
     lv_big_button_create(scr, "F:/bmp_language.bin", set_menu.language, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_LANGUAGE);
   #endif
-  #if ENABLED(USE_WIFI_FUNCTION)
+  #if ENABLED(MKS_WIFI_MODULE)
     lv_big_button_create(scr, "F:/bmp_wifi.bin", set_menu.wifi, BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_WIFI);
   #endif
   lv_big_button_create(scr, "F:/bmp_return.bin", common_menu.text_back, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_RETURN);
 }
 
 void lv_clear_set() {
   #if HAS_ROTARY_ENCODER
     if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
   #endif
   lv_obj_del(scr);

commit 853d01de683ab3efcbb15ef95db869e279053ee0
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Oct 24 19:28:31 2020 -0300

    More LVGL UI code reduction (#19879)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index 46ea04deaf..b2211e5631 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -119,32 +119,21 @@ static void event_handler(lv_obj_t *obj, lv_event_t event) {
           last_disp_state = SET_UI;
           lv_clear_set();
           lv_draw_wifi();
         }
         break;
     #endif
   }
 }
 
 void lv_draw_set(void) {
-  if (disp_state_stack._disp_state[disp_state_stack._disp_index] != SET_UI) {
-    disp_state_stack._disp_index++;
-    disp_state_stack._disp_state[disp_state_stack._disp_index] = SET_UI;
-  }
-  disp_state = SET_UI;
-
-  scr = lv_screen_create();
-
-  (void)lv_label_create(scr, TITLE_XPOS, TITLE_YPOS, creat_title_text());
-
-  lv_refr_now(lv_refr_get_disp_refreshing());
-
+  scr = lv_screen_create(SET_UI);
   lv_big_button_create(scr, "F:/bmp_eeprom_settings.bin", set_menu.eepromSet, INTERVAL_V, titleHeight, event_handler, ID_S_EEPROM_SET);
   lv_big_button_create(scr, "F:/bmp_fan.bin", set_menu.fan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_S_FAN);
   lv_big_button_create(scr, "F:/bmp_about.bin", set_menu.about, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_S_ABOUT);
   lv_big_button_create(scr, ENABLED(HAS_SUICIDE) ? "F:/bmp_manual_off.bin" : "F:/bmp_function1.bin", set_menu.TERN(HAS_SUICIDE, shutdown, motoroff), BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_S_MOTOR_OFF);
   lv_big_button_create(scr, "F:/bmp_machine_para.bin", set_menu.machine_para, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_MACHINE_PARA);
   #if HAS_LANG_SELECT_SCREEN
     lv_big_button_create(scr, "F:/bmp_language.bin", set_menu.language, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_LANGUAGE);
   #endif
   #if ENABLED(USE_WIFI_FUNCTION)
     lv_big_button_create(scr, "F:/bmp_wifi.bin", set_menu.wifi, BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_WIFI);

commit 9630c2683c39468bf885c560a1768d8b377d9462
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Oct 24 01:37:45 2020 -0300

    More MKS UI cleanup, optimization (#19869)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index e4896866cf..46ea04deaf 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -30,114 +30,72 @@
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 
 #include "pic_manager.h"
 
 #include "../../../../gcode/queue.h"
 #include "../../../../inc/MarlinConfig.h"
 
-static lv_obj_t * scr;
+static lv_obj_t *scr;
 extern lv_group_t*  g;
 
-#define ID_S_WIFI         1
-#define ID_S_FAN          2
-#define ID_S_ABOUT        3
-#define ID_S_CONTINUE     4
-#define ID_S_MOTOR_OFF    5
-#define ID_S_LANGUAGE     6
-#define ID_S_MACHINE_PARA 7
-#define ID_S_EEPROM_SET   8
-#define ID_S_RETURN       9
-
-static void event_handler(lv_obj_t * obj, lv_event_t event) {
+enum {
+  ID_S_WIFI = 1,
+  ID_S_FAN,
+  ID_S_ABOUT,
+  ID_S_CONTINUE,
+  ID_S_MOTOR_OFF,
+  ID_S_LANGUAGE,
+  ID_S_MACHINE_PARA,
+  ID_S_EEPROM_SET,
+  ID_S_RETURN
+};
+
+static void event_handler(lv_obj_t *obj, lv_event_t event) {
+  if (event != LV_EVENT_RELEASED) return;
   #if ENABLED(USE_WIFI_FUNCTION)
     char buf[6] = { 0 };
   #endif
   switch (obj->mks_obj_id) {
-
     case ID_S_FAN:
-      if (event == LV_EVENT_CLICKED) {
-        // nothing to do
-      }
-      else if (event == LV_EVENT_RELEASED) {
-        lv_clear_set();
-        lv_draw_fan();
-      }
+      lv_clear_set();
+      lv_draw_fan();
       break;
     case ID_S_ABOUT:
-      if (event == LV_EVENT_CLICKED) {
-        // nothing to do
-      }
-      else if (event == LV_EVENT_RELEASED) {
-        lv_clear_set();
-        lv_draw_about();
-      }
-      break;
-    case ID_S_CONTINUE:
-
+      lv_clear_set();
+      lv_draw_about();
       break;
+    case ID_S_CONTINUE: break;
     case ID_S_MOTOR_OFF:
-      if (event == LV_EVENT_CLICKED) {
-        // nothing to do
-      }
-      else if (event == LV_EVENT_RELEASED) {
-        #if HAS_SUICIDE
-          suicide();
-        #else
-          queue.enqueue_now_P(PSTR("M84"));
-        #endif
-      }
+      TERN(HAS_SUICIDE, suicide(), queue.enqueue_now_P(PSTR("M84")));
       break;
     case ID_S_LANGUAGE:
-      if (event == LV_EVENT_CLICKED) {
-        // nothing to do
-      }
-      else if (event == LV_EVENT_RELEASED) {
-        lv_clear_set();
-        lv_draw_language();
-      }
+      lv_clear_set();
+      lv_draw_language();
       break;
     case ID_S_MACHINE_PARA:
-      if (event == LV_EVENT_CLICKED) {
-
-      }
-      else if (event == LV_EVENT_RELEASED) {
-        lv_clear_set();
-        lv_draw_machine_para();
-      }
+      lv_clear_set();
+      lv_draw_machine_para();
       break;
     case ID_S_EEPROM_SET:
-      if (event == LV_EVENT_CLICKED) {
-
-      }
-      else if (event == LV_EVENT_RELEASED) {
-        lv_clear_set();
-        lv_draw_eeprom_settings();
-      }
+      lv_clear_set();
+      lv_draw_eeprom_settings();
       break;
     case ID_S_RETURN:
-      if (event == LV_EVENT_CLICKED) {
-        // nothing to do
-      }
-      else if (event == LV_EVENT_RELEASED) {
-        lv_clear_set();
-        lv_draw_ready_print();
-      }
+      lv_clear_set();
+      lv_draw_ready_print();
       break;
+
     #if ENABLED(USE_WIFI_FUNCTION)
       case ID_S_WIFI:
-        if (event == LV_EVENT_CLICKED) {
-
-        }
-        else if (event == LV_EVENT_RELEASED) {
         if (gCfgItems.wifi_mode_sel == STA_MODEL) {
           if (wifi_link_state == WIFI_CONNECTED) {
             last_disp_state = SET_UI;
             lv_clear_set();
             lv_draw_wifi();
           }
           else {
             if (uiCfg.command_send == 1) {
               buf[0] = 0xA5;
               buf[1] = 0x07;
@@ -146,154 +104,59 @@ static void event_handler(lv_obj_t * obj, lv_event_t event) {
               buf[4] = 0xFC;
               raw_send_to_wifi(buf, 5);
 
               last_disp_state = SET_UI;
               lv_clear_set();
               lv_draw_wifi_list();
             }
             else {
               last_disp_state = SET_UI;
               lv_clear_set();
-              lv_draw_dialog(WIFI_ENABLE_TIPS);
+              lv_draw_dialog(DIALOG_WIFI_ENABLE_TIPS);
             }
           }
         }
         else {
           last_disp_state = SET_UI;
           lv_clear_set();
           lv_draw_wifi();
         }
-      }
-      break;
+        break;
     #endif
   }
 }
 
 void lv_draw_set(void) {
-  lv_obj_t *buttonFan, *buttonAbout;
-  lv_obj_t *buMotorOff, *buttonBack;
-  #if HAS_LANG_SELECT_SCREEN
-    lv_obj_t *buttonLanguage;
-  #endif
-  lv_obj_t *buttonMachinePara;
-  lv_obj_t *buttonEepromSet;
-  #if ENABLED(USE_WIFI_FUNCTION)
-    lv_obj_t *buttonWifi;
-  #endif
-
   if (disp_state_stack._disp_state[disp_state_stack._disp_index] != SET_UI) {
     disp_state_stack._disp_index++;
     disp_state_stack._disp_state[disp_state_stack._disp_index] = SET_UI;
   }
   disp_state = SET_UI;
 
-  scr = lv_obj_create(NULL, NULL);
-
-  //static lv_style_t tool_style;
-
-  lv_obj_set_style(scr, &tft_style_scr);
-  lv_scr_load(scr);
-  lv_obj_clean(scr);
+  scr = lv_screen_create();
 
   (void)lv_label_create(scr, TITLE_XPOS, TITLE_YPOS, creat_title_text());
 
   lv_refr_now(lv_refr_get_disp_refreshing());
 
-  // Create image buttons
-  buttonEepromSet = lv_imgbtn_create(scr, "F:/bmp_eeprom_settings.bin", INTERVAL_V, titleHeight, event_handler, ID_S_EEPROM_SET);
-  //buttonWifi = lv_imgbtn_create(scr, NULL);
-  buttonFan = lv_imgbtn_create(scr, "F:/bmp_fan.bin", BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_S_FAN);
-  buttonAbout = lv_imgbtn_create(scr, "F:/bmp_about.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_S_ABOUT);
-  //buttonContinue = lv_imgbtn_create(scr, NULL);
-  buMotorOff = lv_imgbtn_create(scr, ENABLED(HAS_SUICIDE) ? "F:/bmp_manual_off.bin" : "F:/bmp_function1.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_S_MOTOR_OFF);
-  buttonMachinePara = lv_imgbtn_create(scr, "F:/bmp_machine_para.bin", INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_MACHINE_PARA);
+  lv_big_button_create(scr, "F:/bmp_eeprom_settings.bin", set_menu.eepromSet, INTERVAL_V, titleHeight, event_handler, ID_S_EEPROM_SET);
+  lv_big_button_create(scr, "F:/bmp_fan.bin", set_menu.fan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_S_FAN);
+  lv_big_button_create(scr, "F:/bmp_about.bin", set_menu.about, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_S_ABOUT);
+  lv_big_button_create(scr, ENABLED(HAS_SUICIDE) ? "F:/bmp_manual_off.bin" : "F:/bmp_function1.bin", set_menu.TERN(HAS_SUICIDE, shutdown, motoroff), BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_S_MOTOR_OFF);
+  lv_big_button_create(scr, "F:/bmp_machine_para.bin", set_menu.machine_para, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_MACHINE_PARA);
   #if HAS_LANG_SELECT_SCREEN
-    buttonLanguage = lv_imgbtn_create(scr, "F:/bmp_language.bin", BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_LANGUAGE);
+    lv_big_button_create(scr, "F:/bmp_language.bin", set_menu.language, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_LANGUAGE);
   #endif
   #if ENABLED(USE_WIFI_FUNCTION)
-    buttonWifi = lv_imgbtn_create(scr, "F:/bmp_wifi.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_WIFI);
-  #endif
-  buttonBack = lv_imgbtn_create(scr, "F:/bmp_return.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_RETURN);
-
-  /*lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
-  lv_obj_set_pos(buttonFan,BTN_X_PIXEL+INTERVAL_V*2,titleHeight);
-  lv_obj_set_pos(buttonAbout,BTN_X_PIXEL*2+INTERVAL_V*3,titleHeight);
-  lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
-  lv_obj_set_pos(buMotorOff,INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H+titleHeight);
-  lv_obj_set_pos(buttonLanguage,BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H+titleHeight);
-  lv_obj_set_pos(buttonBack,BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H+titleHeight);*/
-
-  //lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
-  //lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
-
-  /// Create labels on the buttons
-  //lv_obj_t *labelWifi= lv_label_create_empty(buttonWifi);
-  lv_obj_t *label_EepromSet   = lv_label_create_empty(buttonEepromSet);
-  lv_obj_t *labelFan          = lv_label_create_empty(buttonFan);
-  lv_obj_t *label_About       = lv_label_create_empty(buttonAbout);
-  //lv_obj_t *label_Continue  = lv_label_create_empty(buttonContinue);
-  lv_obj_t *label_MotorOff    = lv_label_create_empty(buMotorOff);
-  lv_obj_t *label_MachinePara = lv_label_create_empty(buttonMachinePara);
-  #if HAS_LANG_SELECT_SCREEN
-    lv_obj_t *label_Language  = lv_label_create_empty(buttonLanguage);
-  #endif
-  #if ENABLED(USE_WIFI_FUNCTION)
-    lv_obj_t *label_Wifi      = lv_label_create_empty(buttonWifi);
-  #endif
-  lv_obj_t *label_Back        = lv_label_create_empty(buttonBack);
-
-  if (gCfgItems.multiple_language) {
-
-    lv_label_set_text(label_EepromSet, set_menu.eepromSet);
-    lv_obj_align(label_EepromSet, buttonEepromSet, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-
-    lv_label_set_text(labelFan, set_menu.fan);
-    lv_obj_align(labelFan, buttonFan, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-
-    lv_label_set_text(label_About, set_menu.about);
-    lv_obj_align(label_About, buttonAbout, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-
-    //lv_label_set_text(label_Continue, set_menu.breakpoint);
-    //lv_obj_align(label_Continue, buttonContinue, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
-    lv_label_set_text(label_MotorOff, set_menu.TERN(HAS_SUICIDE, shutdown, motoroff));
-    lv_obj_align(label_MotorOff, buMotorOff, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-
-    lv_label_set_text(label_MachinePara, set_menu.machine_para);
-    lv_obj_align(label_MachinePara, buttonMachinePara, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-
-    #if HAS_LANG_SELECT_SCREEN
-      lv_label_set_text(label_Language, set_menu.language);
-      lv_obj_align(label_Language, buttonLanguage, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-    #endif
-
-    #if ENABLED(USE_WIFI_FUNCTION)
-      lv_label_set_text(label_Wifi, set_menu.wifi);
-      lv_obj_align(label_Wifi, buttonWifi, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
-    #endif
-
-    lv_label_set_text(label_Back, common_menu.text_back);
-    lv_obj_align(label_Back, buttonBack, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
-  }
-  #if HAS_ROTARY_ENCODER
-    if (gCfgItems.encoder_enable) {
-      lv_group_add_obj(g, buttonEepromSet);
-      lv_group_add_obj(g, buttonFan);
-      lv_group_add_obj(g, buttonAbout);
-      lv_group_add_obj(g, buMotorOff);
-      lv_group_add_obj(g, buttonMachinePara);
-      lv_group_add_obj(g, buttonLanguage);
-      #if ENABLED(USE_WIFI_FUNCTION)
-        lv_group_add_obj(g, buttonWifi);
-      #endif
-      lv_group_add_obj(g, buttonBack);
-    }
+    lv_big_button_create(scr, "F:/bmp_wifi.bin", set_menu.wifi, BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_WIFI);
   #endif
+  lv_big_button_create(scr, "F:/bmp_return.bin", common_menu.text_back, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_RETURN);
 }
 
 void lv_clear_set() {
   #if HAS_ROTARY_ENCODER
     if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
   #endif
   lv_obj_del(scr);
 }
 
 #endif // HAS_TFT_LVGL_UI

commit 4533a197d59ffcaccc4d476f06df7754b11b9b0c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 22 20:22:17 2020 -0500

    Slim down MKS UI code (#19843)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index d23fe40182..e4896866cf 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -187,158 +187,66 @@ void lv_draw_set(void) {
   disp_state = SET_UI;
 
   scr = lv_obj_create(NULL, NULL);
 
   //static lv_style_t tool_style;
 
   lv_obj_set_style(scr, &tft_style_scr);
   lv_scr_load(scr);
   lv_obj_clean(scr);
 
-  lv_obj_t * title = lv_label_create(scr, NULL);
-  lv_obj_set_style(title, &tft_style_label_rel);
-  lv_obj_set_pos(title, TITLE_XPOS, TITLE_YPOS);
-  lv_label_set_text(title, creat_title_text());
+  (void)lv_label_create(scr, TITLE_XPOS, TITLE_YPOS, creat_title_text());
 
   lv_refr_now(lv_refr_get_disp_refreshing());
 
   // Create image buttons
-  buttonEepromSet   = lv_imgbtn_create(scr, NULL);
-  //buttonWifi      = lv_imgbtn_create(scr, NULL);
-  buttonFan         = lv_imgbtn_create(scr, NULL);
-  buttonAbout       = lv_imgbtn_create(scr, NULL);
-  //buttonContinue  = lv_imgbtn_create(scr, NULL);
-  buMotorOff        = lv_imgbtn_create(scr, NULL);
-  buttonMachinePara = lv_imgbtn_create(scr, NULL);
+  buttonEepromSet = lv_imgbtn_create(scr, "F:/bmp_eeprom_settings.bin", INTERVAL_V, titleHeight, event_handler, ID_S_EEPROM_SET);
+  //buttonWifi = lv_imgbtn_create(scr, NULL);
+  buttonFan = lv_imgbtn_create(scr, "F:/bmp_fan.bin", BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_S_FAN);
+  buttonAbout = lv_imgbtn_create(scr, "F:/bmp_about.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_S_ABOUT);
+  //buttonContinue = lv_imgbtn_create(scr, NULL);
+  buMotorOff = lv_imgbtn_create(scr, ENABLED(HAS_SUICIDE) ? "F:/bmp_manual_off.bin" : "F:/bmp_function1.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_S_MOTOR_OFF);
+  buttonMachinePara = lv_imgbtn_create(scr, "F:/bmp_machine_para.bin", INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_MACHINE_PARA);
   #if HAS_LANG_SELECT_SCREEN
-    buttonLanguage  = lv_imgbtn_create(scr, NULL);
+    buttonLanguage = lv_imgbtn_create(scr, "F:/bmp_language.bin", BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_LANGUAGE);
   #endif
   #if ENABLED(USE_WIFI_FUNCTION)
-  buttonWifi        = lv_imgbtn_create(scr, NULL);
+    buttonWifi = lv_imgbtn_create(scr, "F:/bmp_wifi.bin", BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_WIFI);
   #endif
-  buttonBack        = lv_imgbtn_create(scr, NULL);
-
-  lv_obj_set_event_cb_mks(buttonEepromSet, event_handler, ID_S_EEPROM_SET, NULL, 0);
-  lv_imgbtn_set_src(buttonEepromSet, LV_BTN_STATE_REL, "F:/bmp_eeprom_settings.bin");
-  lv_imgbtn_set_src(buttonEepromSet, LV_BTN_STATE_PR, "F:/bmp_eeprom_settings.bin");
-  lv_imgbtn_set_style(buttonEepromSet, LV_BTN_STATE_PR, &tft_style_label_pre);
-  lv_imgbtn_set_style(buttonEepromSet, LV_BTN_STATE_REL, &tft_style_label_rel);
-
-  #if 1
-    lv_obj_set_event_cb_mks(buttonFan, event_handler, ID_S_FAN, NULL, 0);
-    lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_REL, "F:/bmp_fan.bin");
-    lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_PR, "F:/bmp_fan.bin");
-    lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_PR, &tft_style_label_pre);
-    lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_REL, &tft_style_label_rel);
-
-    lv_obj_set_event_cb_mks(buttonAbout, event_handler, ID_S_ABOUT, NULL, 0);
-    lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_REL, "F:/bmp_about.bin");
-    lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_PR, "F:/bmp_about.bin");
-    lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_PR, &tft_style_label_pre);
-    lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_REL, &tft_style_label_rel);
-
-    lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, NULL, 0);
-
-    #if HAS_SUICIDE
-      lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_REL, "F:/bmp_manual_off.bin");
-      lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_PR, "F:/bmp_manual_off.bin");
-    #else
-      lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_REL, "F:/bmp_function1.bin");
-      lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_PR, "F:/bmp_function1.bin");
-    #endif
-    lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_PR, &tft_style_label_pre);
-    lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_REL, &tft_style_label_rel);
-
-    lv_obj_set_event_cb_mks(buttonMachinePara, event_handler, ID_S_MACHINE_PARA, NULL, 0);
-    lv_imgbtn_set_src(buttonMachinePara, LV_BTN_STATE_REL, "F:/bmp_machine_para.bin");
-    lv_imgbtn_set_src(buttonMachinePara, LV_BTN_STATE_PR, "F:/bmp_machine_para.bin");
-    lv_imgbtn_set_style(buttonMachinePara, LV_BTN_STATE_PR, &tft_style_label_pre);
-    lv_imgbtn_set_style(buttonMachinePara, LV_BTN_STATE_REL, &tft_style_label_rel);
-
-    #if HAS_LANG_SELECT_SCREEN
-      lv_obj_set_event_cb_mks(buttonLanguage, event_handler, ID_S_LANGUAGE, NULL, 0);
-      lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_REL, "F:/bmp_language.bin");
-      lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_PR, "F:/bmp_language.bin");
-      lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_PR, &tft_style_label_pre);
-      lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_REL, &tft_style_label_rel);
-    #endif
-
-    #if ENABLED(USE_WIFI_FUNCTION)
-      lv_obj_set_event_cb_mks(buttonWifi, event_handler,ID_S_WIFI,NULL,0);
-      lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_REL, "F:/bmp_wifi.bin");
-      lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_PR, "F:/bmp_wifi.bin");
-      lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_PR, &tft_style_label_pre);
-      lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_REL, &tft_style_label_rel);
-    #endif
-
-    lv_obj_set_event_cb_mks(buttonBack, event_handler, ID_S_RETURN,NULL , 0);
-    lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_REL, "F:/bmp_return.bin");
-    lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_PR, "F:/bmp_return.bin");
-    lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_PR, &tft_style_label_pre);
-    lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_REL, &tft_style_label_rel);
-
-  #endif // if 1
+  buttonBack = lv_imgbtn_create(scr, "F:/bmp_return.bin", BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_S_RETURN);
 
   /*lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
   lv_obj_set_pos(buttonFan,BTN_X_PIXEL+INTERVAL_V*2,titleHeight);
   lv_obj_set_pos(buttonAbout,BTN_X_PIXEL*2+INTERVAL_V*3,titleHeight);
   lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
   lv_obj_set_pos(buMotorOff,INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H+titleHeight);
   lv_obj_set_pos(buttonLanguage,BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H+titleHeight);
   lv_obj_set_pos(buttonBack,BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H+titleHeight);*/
 
   //lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
-  lv_obj_set_pos(buttonEepromSet, INTERVAL_V, titleHeight);
-  lv_obj_set_pos(buttonFan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight);
-  lv_obj_set_pos(buttonAbout, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight);
   //lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
-  lv_obj_set_pos(buMotorOff, BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight);
-
-  lv_obj_set_pos(buttonMachinePara, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
-  #if HAS_LANG_SELECT_SCREEN
-    lv_obj_set_pos(buttonLanguage, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
-  #endif
-  #if ENABLED(USE_WIFI_FUNCTION)
-    lv_obj_set_pos(buttonWifi,BTN_X_PIXEL*2+INTERVAL_V*3,BTN_Y_PIXEL+INTERVAL_H+titleHeight);
-  #endif
-  lv_obj_set_pos(buttonBack, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
 
   /// Create labels on the buttons
-  //lv_btn_set_layout(buttonWifi, LV_LAYOUT_OFF);
-  lv_btn_set_layout(buttonEepromSet, LV_LAYOUT_OFF);
-  lv_btn_set_layout(buttonFan, LV_LAYOUT_OFF);
-  lv_btn_set_layout(buttonAbout, LV_LAYOUT_OFF);
-  //lv_btn_set_layout(buttonContinue, LV_LAYOUT_OFF);
-  lv_btn_set_layout(buMotorOff, LV_LAYOUT_OFF);
-  lv_btn_set_layout(buttonMachinePara, LV_LAYOUT_OFF);
-  #if HAS_LANG_SELECT_SCREEN
-    lv_btn_set_layout(buttonLanguage, LV_LAYOUT_OFF);
-  #endif
-  #if ENABLED(USE_WIFI_FUNCTION)
-    lv_btn_set_layout(buttonWifi, LV_LAYOUT_OFF);
-  #endif
-  lv_btn_set_layout(buttonBack, LV_LAYOUT_OFF);
-
-  //lv_obj_t *labelWifi= lv_label_create(buttonWifi, NULL);
-  lv_obj_t *label_EepromSet   = lv_label_create(buttonEepromSet, NULL);
-  lv_obj_t *labelFan          = lv_label_create(buttonFan, NULL);
-  lv_obj_t *label_About       = lv_label_create(buttonAbout, NULL);
-  //lv_obj_t *label_Continue  = lv_label_create(buttonContinue, NULL);
-  lv_obj_t *label_MotorOff    = lv_label_create(buMotorOff, NULL);
-  lv_obj_t *label_MachinePara = lv_label_create(buttonMachinePara, NULL);
+  //lv_obj_t *labelWifi= lv_label_create_empty(buttonWifi);
+  lv_obj_t *label_EepromSet   = lv_label_create_empty(buttonEepromSet);
+  lv_obj_t *labelFan          = lv_label_create_empty(buttonFan);
+  lv_obj_t *label_About       = lv_label_create_empty(buttonAbout);
+  //lv_obj_t *label_Continue  = lv_label_create_empty(buttonContinue);
+  lv_obj_t *label_MotorOff    = lv_label_create_empty(buMotorOff);
+  lv_obj_t *label_MachinePara = lv_label_create_empty(buttonMachinePara);
   #if HAS_LANG_SELECT_SCREEN
-    lv_obj_t *label_Language  = lv_label_create(buttonLanguage, NULL);
+    lv_obj_t *label_Language  = lv_label_create_empty(buttonLanguage);
   #endif
   #if ENABLED(USE_WIFI_FUNCTION)
-    lv_obj_t *label_Wifi      = lv_label_create(buttonWifi, NULL);
+    lv_obj_t *label_Wifi      = lv_label_create_empty(buttonWifi);
   #endif
-  lv_obj_t *label_Back        = lv_label_create(buttonBack, NULL);
+  lv_obj_t *label_Back        = lv_label_create_empty(buttonBack);
 
   if (gCfgItems.multiple_language) {
 
     lv_label_set_text(label_EepromSet, set_menu.eepromSet);
     lv_obj_align(label_EepromSet, buttonEepromSet, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(labelFan, set_menu.fan);
     lv_obj_align(labelFan, buttonFan, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(label_About, set_menu.about);

commit 072f996af70b5ac635893eca2d4bd4bbb4f00acc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Oct 21 12:45:27 2020 -0500

    General cleanup, mostly MKS UI (#19825)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index 6c10713d8a..d23fe40182 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -16,32 +16,34 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
 #if HAS_TFT_LVGL_UI
 
-#include "../../../../MarlinCore.h"
 #include "draw_ready_print.h"
 #include "draw_set.h"
-#include "lv_conf.h"
+#include "draw_ui.h"
+#include <lv_conf.h>
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
-#include "draw_ui.h"
-#include "../../../../gcode/queue.h"
+
 #include "pic_manager.h"
 
+#include "../../../../gcode/queue.h"
+#include "../../../../inc/MarlinConfig.h"
+
 static lv_obj_t * scr;
 extern lv_group_t*  g;
 
 #define ID_S_WIFI         1
 #define ID_S_FAN          2
 #define ID_S_ABOUT        3
 #define ID_S_CONTINUE     4
 #define ID_S_MOTOR_OFF    5
 #define ID_S_LANGUAGE     6
 #define ID_S_MACHINE_PARA 7
@@ -324,21 +326,21 @@ void lv_draw_set(void) {
   lv_obj_t *label_MotorOff    = lv_label_create(buMotorOff, NULL);
   lv_obj_t *label_MachinePara = lv_label_create(buttonMachinePara, NULL);
   #if HAS_LANG_SELECT_SCREEN
     lv_obj_t *label_Language  = lv_label_create(buttonLanguage, NULL);
   #endif
   #if ENABLED(USE_WIFI_FUNCTION)
     lv_obj_t *label_Wifi      = lv_label_create(buttonWifi, NULL);
   #endif
   lv_obj_t *label_Back        = lv_label_create(buttonBack, NULL);
 
-  if (gCfgItems.multiple_language != 0) {
+  if (gCfgItems.multiple_language) {
 
     lv_label_set_text(label_EepromSet, set_menu.eepromSet);
     lv_obj_align(label_EepromSet, buttonEepromSet, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(labelFan, set_menu.fan);
     lv_obj_align(labelFan, buttonFan, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(label_About, set_menu.about);
     lv_obj_align(label_About, buttonAbout, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 

commit d8ed74904559aa8bdccc8b68acbccfbf1bf779d3
Author: makerbase <4164049@qq.com>
Date:   Mon Sep 21 09:55:02 2020 +0800

    Add MKS Robin E3P, improve LVGL UI (#19442)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index eebb9fcf1c..6c10713d8a 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -29,55 +29,53 @@
 #include "lv_conf.h"
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 #include "draw_ui.h"
 #include "../../../../gcode/queue.h"
 #include "pic_manager.h"
 
 static lv_obj_t * scr;
+extern lv_group_t*  g;
 
 #define ID_S_WIFI         1
 #define ID_S_FAN          2
 #define ID_S_ABOUT        3
 #define ID_S_CONTINUE     4
 #define ID_S_MOTOR_OFF    5
 #define ID_S_LANGUAGE     6
 #define ID_S_MACHINE_PARA 7
 #define ID_S_EEPROM_SET   8
 #define ID_S_RETURN       9
 
 static void event_handler(lv_obj_t * obj, lv_event_t event) {
+  #if ENABLED(USE_WIFI_FUNCTION)
+    char buf[6] = { 0 };
+  #endif
   switch (obj->mks_obj_id) {
-    case ID_S_WIFI:
-      if (event == LV_EVENT_CLICKED) {
-        // nothing to do
-      }
-      else if (event == LV_EVENT_RELEASED) {
-      }
-      break;
+
     case ID_S_FAN:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
       else if (event == LV_EVENT_RELEASED) {
-        lv_obj_del(scr);
+        lv_clear_set();
         lv_draw_fan();
       }
       break;
     case ID_S_ABOUT:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
       else if (event == LV_EVENT_RELEASED) {
-        lv_obj_del(scr);
+        lv_clear_set();
         lv_draw_about();
       }
       break;
     case ID_S_CONTINUE:
 
       break;
     case ID_S_MOTOR_OFF:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
@@ -87,63 +85,105 @@ static void event_handler(lv_obj_t * obj, lv_event_t event) {
         #else
           queue.enqueue_now_P(PSTR("M84"));
         #endif
       }
       break;
     case ID_S_LANGUAGE:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
       else if (event == LV_EVENT_RELEASED) {
-        lv_obj_del(scr);
+        lv_clear_set();
         lv_draw_language();
       }
       break;
     case ID_S_MACHINE_PARA:
       if (event == LV_EVENT_CLICKED) {
 
       }
       else if (event == LV_EVENT_RELEASED) {
-        lv_obj_del(scr);
+        lv_clear_set();
         lv_draw_machine_para();
       }
       break;
     case ID_S_EEPROM_SET:
       if (event == LV_EVENT_CLICKED) {
 
       }
       else if (event == LV_EVENT_RELEASED) {
-        lv_obj_del(scr);
+        lv_clear_set();
         lv_draw_eeprom_settings();
       }
       break;
     case ID_S_RETURN:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
       else if (event == LV_EVENT_RELEASED) {
-        lv_obj_del(scr);
+        lv_clear_set();
         lv_draw_ready_print();
       }
       break;
-
+    #if ENABLED(USE_WIFI_FUNCTION)
+      case ID_S_WIFI:
+        if (event == LV_EVENT_CLICKED) {
+
+        }
+        else if (event == LV_EVENT_RELEASED) {
+        if (gCfgItems.wifi_mode_sel == STA_MODEL) {
+          if (wifi_link_state == WIFI_CONNECTED) {
+            last_disp_state = SET_UI;
+            lv_clear_set();
+            lv_draw_wifi();
+          }
+          else {
+            if (uiCfg.command_send == 1) {
+              buf[0] = 0xA5;
+              buf[1] = 0x07;
+              buf[2] = 0x00;
+              buf[3] = 0x00;
+              buf[4] = 0xFC;
+              raw_send_to_wifi(buf, 5);
+
+              last_disp_state = SET_UI;
+              lv_clear_set();
+              lv_draw_wifi_list();
+            }
+            else {
+              last_disp_state = SET_UI;
+              lv_clear_set();
+              lv_draw_dialog(WIFI_ENABLE_TIPS);
+            }
+          }
+        }
+        else {
+          last_disp_state = SET_UI;
+          lv_clear_set();
+          lv_draw_wifi();
+        }
+      }
+      break;
+    #endif
   }
 }
 
 void lv_draw_set(void) {
   lv_obj_t *buttonFan, *buttonAbout;
   lv_obj_t *buMotorOff, *buttonBack;
   #if HAS_LANG_SELECT_SCREEN
     lv_obj_t *buttonLanguage;
   #endif
   lv_obj_t *buttonMachinePara;
   lv_obj_t *buttonEepromSet;
+  #if ENABLED(USE_WIFI_FUNCTION)
+    lv_obj_t *buttonWifi;
+  #endif
 
   if (disp_state_stack._disp_state[disp_state_stack._disp_index] != SET_UI) {
     disp_state_stack._disp_index++;
     disp_state_stack._disp_state[disp_state_stack._disp_index] = SET_UI;
   }
   disp_state = SET_UI;
 
   scr = lv_obj_create(NULL, NULL);
 
   //static lv_style_t tool_style;
@@ -152,167 +192,198 @@ void lv_draw_set(void) {
   lv_scr_load(scr);
   lv_obj_clean(scr);
 
   lv_obj_t * title = lv_label_create(scr, NULL);
   lv_obj_set_style(title, &tft_style_label_rel);
   lv_obj_set_pos(title, TITLE_XPOS, TITLE_YPOS);
   lv_label_set_text(title, creat_title_text());
 
   lv_refr_now(lv_refr_get_disp_refreshing());
 
-  LV_IMG_DECLARE(bmp_pic);
-
-  /*Create an Image button*/
-  //buttonWifi = lv_imgbtn_create(scr, NULL);
-  buttonFan   = lv_imgbtn_create(scr, NULL);
-  buttonAbout = lv_imgbtn_create(scr, NULL);
-  //buttonContinue = lv_imgbtn_create(scr, NULL);
-  buMotorOff = lv_imgbtn_create(scr, NULL);
+  // Create image buttons
+  buttonEepromSet   = lv_imgbtn_create(scr, NULL);
+  //buttonWifi      = lv_imgbtn_create(scr, NULL);
+  buttonFan         = lv_imgbtn_create(scr, NULL);
+  buttonAbout       = lv_imgbtn_create(scr, NULL);
+  //buttonContinue  = lv_imgbtn_create(scr, NULL);
+  buMotorOff        = lv_imgbtn_create(scr, NULL);
+  buttonMachinePara = lv_imgbtn_create(scr, NULL);
   #if HAS_LANG_SELECT_SCREEN
-    buttonLanguage = lv_imgbtn_create(scr, NULL);
+    buttonLanguage  = lv_imgbtn_create(scr, NULL);
+  #endif
+  #if ENABLED(USE_WIFI_FUNCTION)
+  buttonWifi        = lv_imgbtn_create(scr, NULL);
   #endif
-  buttonMachinePara = lv_imgbtn_create(scr, NULL);
-  buttonEepromSet   = lv_imgbtn_create(scr, NULL);
   buttonBack        = lv_imgbtn_create(scr, NULL);
 
+  lv_obj_set_event_cb_mks(buttonEepromSet, event_handler, ID_S_EEPROM_SET, NULL, 0);
+  lv_imgbtn_set_src(buttonEepromSet, LV_BTN_STATE_REL, "F:/bmp_eeprom_settings.bin");
+  lv_imgbtn_set_src(buttonEepromSet, LV_BTN_STATE_PR, "F:/bmp_eeprom_settings.bin");
+  lv_imgbtn_set_style(buttonEepromSet, LV_BTN_STATE_PR, &tft_style_label_pre);
+  lv_imgbtn_set_style(buttonEepromSet, LV_BTN_STATE_REL, &tft_style_label_rel);
 
-  //lv_obj_set_event_cb_mks(buttonWifi, event_handler,ID_S_WIFI,"bmp_Wifi.bin",0);
-  //lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_REL, &bmp_pic);
-  //lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_PR, &bmp_pic);
-  //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_PR, &tft_style_label_pre);
-  //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_REL, &tft_style_label_rel);
-  //lv_obj_clear_protect(buttonWifi, LV_PROTECT_FOLLOW);
   #if 1
-    lv_obj_set_event_cb_mks(buttonFan, event_handler, ID_S_FAN, "bmp_fan.bin", 0);
-    lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_REL, &bmp_pic);
-    lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_PR, &bmp_pic);
+    lv_obj_set_event_cb_mks(buttonFan, event_handler, ID_S_FAN, NULL, 0);
+    lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_REL, "F:/bmp_fan.bin");
+    lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_PR, "F:/bmp_fan.bin");
     lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_PR, &tft_style_label_pre);
     lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_REL, &tft_style_label_rel);
 
-    lv_obj_set_event_cb_mks(buttonAbout, event_handler, ID_S_ABOUT, "bmp_about.bin", 0);
-    lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_REL, &bmp_pic);
-    lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_PR, &bmp_pic);
+    lv_obj_set_event_cb_mks(buttonAbout, event_handler, ID_S_ABOUT, NULL, 0);
+    lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_REL, "F:/bmp_about.bin");
+    lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_PR, "F:/bmp_about.bin");
     lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_PR, &tft_style_label_pre);
     lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_REL, &tft_style_label_rel);
 
-    //lv_obj_set_event_cb_mks(buttonContinue, event_handler,ID_S_CONTINUE,"bmp_Breakpoint.bin",0);
-    //lv_imgbtn_set_src(buttonContinue, LV_BTN_STATE_REL, &bmp_pic);
-    //lv_imgbtn_set_src(buttonContinue, LV_BTN_STATE_PR, &bmp_pic);
-    //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_PR, &tft_style_label_pre);
-    //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_REL, &tft_style_label_rel);
+    lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, NULL, 0);
+
     #if HAS_SUICIDE
-      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_Mamual.bin", 0);
+      lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_REL, "F:/bmp_manual_off.bin");
+      lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_PR, "F:/bmp_manual_off.bin");
     #else
-      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_function1.bin", 0);
+      lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_REL, "F:/bmp_function1.bin");
+      lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_PR, "F:/bmp_function1.bin");
     #endif
-    lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_REL, &bmp_pic);
-    lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_PR, &bmp_pic);
     lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_PR, &tft_style_label_pre);
     lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_REL, &tft_style_label_rel);
 
+    lv_obj_set_event_cb_mks(buttonMachinePara, event_handler, ID_S_MACHINE_PARA, NULL, 0);
+    lv_imgbtn_set_src(buttonMachinePara, LV_BTN_STATE_REL, "F:/bmp_machine_para.bin");
+    lv_imgbtn_set_src(buttonMachinePara, LV_BTN_STATE_PR, "F:/bmp_machine_para.bin");
+    lv_imgbtn_set_style(buttonMachinePara, LV_BTN_STATE_PR, &tft_style_label_pre);
+    lv_imgbtn_set_style(buttonMachinePara, LV_BTN_STATE_REL, &tft_style_label_rel);
+
     #if HAS_LANG_SELECT_SCREEN
-      lv_obj_set_event_cb_mks(buttonLanguage, event_handler, ID_S_LANGUAGE, "bmp_language.bin", 0);
-      lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_REL, &bmp_pic);
-      lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_PR, &bmp_pic);
+      lv_obj_set_event_cb_mks(buttonLanguage, event_handler, ID_S_LANGUAGE, NULL, 0);
+      lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_REL, "F:/bmp_language.bin");
+      lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_PR, "F:/bmp_language.bin");
       lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_PR, &tft_style_label_pre);
       lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_REL, &tft_style_label_rel);
     #endif
-    lv_obj_set_event_cb_mks(buttonMachinePara, event_handler, ID_S_MACHINE_PARA, "bmp_machine_para.bin", 0);
-    lv_imgbtn_set_src(buttonMachinePara, LV_BTN_STATE_REL, &bmp_pic);
-    lv_imgbtn_set_src(buttonMachinePara, LV_BTN_STATE_PR, &bmp_pic);
-    lv_imgbtn_set_style(buttonMachinePara, LV_BTN_STATE_PR, &tft_style_label_pre);
-    lv_imgbtn_set_style(buttonMachinePara, LV_BTN_STATE_REL, &tft_style_label_rel);
 
-    lv_obj_set_event_cb_mks(buttonEepromSet, event_handler, ID_S_EEPROM_SET, "bmp_eeprom_settings.bin", 0);
-    lv_imgbtn_set_src(buttonEepromSet, LV_BTN_STATE_REL, &bmp_pic);
-    lv_imgbtn_set_src(buttonEepromSet, LV_BTN_STATE_PR, &bmp_pic);
-    lv_imgbtn_set_style(buttonEepromSet, LV_BTN_STATE_PR, &tft_style_label_pre);
-    lv_imgbtn_set_style(buttonEepromSet, LV_BTN_STATE_REL, &tft_style_label_rel);
-    lv_obj_set_event_cb_mks(buttonBack, event_handler, ID_S_RETURN, "bmp_return.bin", 0);
-    lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_REL, &bmp_pic);
-    lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_PR, &bmp_pic);
+    #if ENABLED(USE_WIFI_FUNCTION)
+      lv_obj_set_event_cb_mks(buttonWifi, event_handler,ID_S_WIFI,NULL,0);
+      lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_REL, "F:/bmp_wifi.bin");
+      lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_PR, "F:/bmp_wifi.bin");
+      lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_PR, &tft_style_label_pre);
+      lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_REL, &tft_style_label_rel);
+    #endif
+
+    lv_obj_set_event_cb_mks(buttonBack, event_handler, ID_S_RETURN,NULL , 0);
+    lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_REL, "F:/bmp_return.bin");
+    lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_PR, "F:/bmp_return.bin");
     lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_PR, &tft_style_label_pre);
     lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_REL, &tft_style_label_rel);
+
   #endif // if 1
 
   /*lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
   lv_obj_set_pos(buttonFan,BTN_X_PIXEL+INTERVAL_V*2,titleHeight);
   lv_obj_set_pos(buttonAbout,BTN_X_PIXEL*2+INTERVAL_V*3,titleHeight);
   lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
   lv_obj_set_pos(buMotorOff,INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H+titleHeight);
   lv_obj_set_pos(buttonLanguage,BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H+titleHeight);
   lv_obj_set_pos(buttonBack,BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H+titleHeight);*/
 
   //lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
+  lv_obj_set_pos(buttonEepromSet, INTERVAL_V, titleHeight);
   lv_obj_set_pos(buttonFan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight);
   lv_obj_set_pos(buttonAbout, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight);
   //lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
   lv_obj_set_pos(buMotorOff, BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight);
+
+  lv_obj_set_pos(buttonMachinePara, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
   #if HAS_LANG_SELECT_SCREEN
-    lv_obj_set_pos(buttonLanguage, INTERVAL_V, titleHeight);
+    lv_obj_set_pos(buttonLanguage, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
+  #endif
+  #if ENABLED(USE_WIFI_FUNCTION)
+    lv_obj_set_pos(buttonWifi,BTN_X_PIXEL*2+INTERVAL_V*3,BTN_Y_PIXEL+INTERVAL_H+titleHeight);
   #endif
-  lv_obj_set_pos(buttonMachinePara, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
-  lv_obj_set_pos(buttonEepromSet, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
   lv_obj_set_pos(buttonBack, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
 
-  /*Create a label on the Image button*/
+  /// Create labels on the buttons
   //lv_btn_set_layout(buttonWifi, LV_LAYOUT_OFF);
+  lv_btn_set_layout(buttonEepromSet, LV_LAYOUT_OFF);
   lv_btn_set_layout(buttonFan, LV_LAYOUT_OFF);
   lv_btn_set_layout(buttonAbout, LV_LAYOUT_OFF);
   //lv_btn_set_layout(buttonContinue, LV_LAYOUT_OFF);
   lv_btn_set_layout(buMotorOff, LV_LAYOUT_OFF);
+  lv_btn_set_layout(buttonMachinePara, LV_LAYOUT_OFF);
   #if HAS_LANG_SELECT_SCREEN
     lv_btn_set_layout(buttonLanguage, LV_LAYOUT_OFF);
   #endif
-  lv_btn_set_layout(buttonMachinePara, LV_LAYOUT_OFF);
-  lv_btn_set_layout(buttonEepromSet, LV_LAYOUT_OFF);
+  #if ENABLED(USE_WIFI_FUNCTION)
+    lv_btn_set_layout(buttonWifi, LV_LAYOUT_OFF);
+  #endif
   lv_btn_set_layout(buttonBack, LV_LAYOUT_OFF);
 
-  //lv_obj_t * labelWifi= lv_label_create(buttonWifi, NULL);
-  lv_obj_t * labelFan    = lv_label_create(buttonFan, NULL);
-  lv_obj_t * label_About = lv_label_create(buttonAbout, NULL);
-  //lv_obj_t * label_Continue = lv_label_create(buttonContinue, NULL);
-  lv_obj_t * label_MotorOff = lv_label_create(buMotorOff, NULL);
+  //lv_obj_t *labelWifi= lv_label_create(buttonWifi, NULL);
+  lv_obj_t *label_EepromSet   = lv_label_create(buttonEepromSet, NULL);
+  lv_obj_t *labelFan          = lv_label_create(buttonFan, NULL);
+  lv_obj_t *label_About       = lv_label_create(buttonAbout, NULL);
+  //lv_obj_t *label_Continue  = lv_label_create(buttonContinue, NULL);
+  lv_obj_t *label_MotorOff    = lv_label_create(buMotorOff, NULL);
+  lv_obj_t *label_MachinePara = lv_label_create(buttonMachinePara, NULL);
   #if HAS_LANG_SELECT_SCREEN
-    lv_obj_t * label_Language = lv_label_create(buttonLanguage, NULL);
+    lv_obj_t *label_Language  = lv_label_create(buttonLanguage, NULL);
   #endif
-  lv_obj_t * label_MachinePara = lv_label_create(buttonMachinePara, NULL);
-  lv_obj_t * label_EepromSet   = lv_label_create(buttonEepromSet, NULL);
-  lv_obj_t * label_Back        = lv_label_create(buttonBack, NULL);
+  #if ENABLED(USE_WIFI_FUNCTION)
+    lv_obj_t *label_Wifi      = lv_label_create(buttonWifi, NULL);
+  #endif
+  lv_obj_t *label_Back        = lv_label_create(buttonBack, NULL);
 
   if (gCfgItems.multiple_language != 0) {
-    //lv_label_set_text(labelWifi, set_menu.wifi);
-    //lv_obj_align(labelWifi, buttonWifi, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
+
+    lv_label_set_text(label_EepromSet, set_menu.eepromSet);
+    lv_obj_align(label_EepromSet, buttonEepromSet, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(labelFan, set_menu.fan);
     lv_obj_align(labelFan, buttonFan, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(label_About, set_menu.about);
     lv_obj_align(label_About, buttonAbout, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     //lv_label_set_text(label_Continue, set_menu.breakpoint);
     //lv_obj_align(label_Continue, buttonContinue, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
-    #if HAS_SUICIDE
-      lv_label_set_text(label_MotorOff, set_menu.shutdown);
-    #else
-      lv_label_set_text(label_MotorOff, set_menu.motoroff);
-    #endif
+    lv_label_set_text(label_MotorOff, set_menu.TERN(HAS_SUICIDE, shutdown, motoroff));
     lv_obj_align(label_MotorOff, buMotorOff, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
+    lv_label_set_text(label_MachinePara, set_menu.machine_para);
+    lv_obj_align(label_MachinePara, buttonMachinePara, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+
     #if HAS_LANG_SELECT_SCREEN
       lv_label_set_text(label_Language, set_menu.language);
       lv_obj_align(label_Language, buttonLanguage, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
-    lv_label_set_text(label_MachinePara, set_menu.machine_para);
-    lv_obj_align(label_MachinePara, buttonMachinePara, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
-    lv_label_set_text(label_EepromSet, set_menu.eepromSet);
-    lv_obj_align(label_EepromSet, buttonEepromSet, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #if ENABLED(USE_WIFI_FUNCTION)
+      lv_label_set_text(label_Wifi, set_menu.wifi);
+      lv_obj_align(label_Wifi, buttonWifi, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
+    #endif
 
     lv_label_set_text(label_Back, common_menu.text_back);
     lv_obj_align(label_Back, buttonBack, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
   }
+  #if HAS_ROTARY_ENCODER
+    if (gCfgItems.encoder_enable) {
+      lv_group_add_obj(g, buttonEepromSet);
+      lv_group_add_obj(g, buttonFan);
+      lv_group_add_obj(g, buttonAbout);
+      lv_group_add_obj(g, buMotorOff);
+      lv_group_add_obj(g, buttonMachinePara);
+      lv_group_add_obj(g, buttonLanguage);
+      #if ENABLED(USE_WIFI_FUNCTION)
+        lv_group_add_obj(g, buttonWifi);
+      #endif
+      lv_group_add_obj(g, buttonBack);
+    }
+  #endif
 }
 
-void lv_clear_set() { lv_obj_del(scr); }
+void lv_clear_set() {
+  #if HAS_ROTARY_ENCODER
+    if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
+  #endif
+  lv_obj_del(scr);
+}
 
 #endif // HAS_TFT_LVGL_UI

commit d20d4591321aa467c062f0050355d2aca84e03ad
Author: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
Date:   Sat Jul 25 13:52:07 2020 +0800

    Robin nano V2, TFT LVGL UI parameters, and more (#18500)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index 6c7f83405b..eebb9fcf1c 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -14,43 +14,45 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
-#if ENABLED(TFT_LVGL_UI)
+#if HAS_TFT_LVGL_UI
 
 #include "../../../../MarlinCore.h"
 #include "draw_ready_print.h"
 #include "draw_set.h"
 #include "lv_conf.h"
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 #include "draw_ui.h"
 #include "../../../../gcode/queue.h"
 #include "pic_manager.h"
 
 static lv_obj_t * scr;
 
-#define ID_S_WIFI       1
-#define ID_S_FAN        2
-#define ID_S_ABOUT      3
-#define ID_S_CONTINUE   4
-#define ID_S_MOTOR_OFF  5
-#define ID_S_LANGUAGE   6
-#define ID_S_RETURN     7
+#define ID_S_WIFI         1
+#define ID_S_FAN          2
+#define ID_S_ABOUT        3
+#define ID_S_CONTINUE     4
+#define ID_S_MOTOR_OFF    5
+#define ID_S_LANGUAGE     6
+#define ID_S_MACHINE_PARA 7
+#define ID_S_EEPROM_SET   8
+#define ID_S_RETURN       9
 
 static void event_handler(lv_obj_t * obj, lv_event_t event) {
   switch (obj->mks_obj_id) {
     case ID_S_WIFI:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
       else if (event == LV_EVENT_RELEASED) {
       }
       break;
@@ -76,176 +78,213 @@ static void event_handler(lv_obj_t * obj, lv_event_t event) {
 
       break;
     case ID_S_MOTOR_OFF:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
       else if (event == LV_EVENT_RELEASED) {
         #if HAS_SUICIDE
           suicide();
         #else
-          queue.enqueue_one_now(PSTR("M84"));
+          queue.enqueue_now_P(PSTR("M84"));
         #endif
       }
       break;
     case ID_S_LANGUAGE:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
       else if (event == LV_EVENT_RELEASED) {
         lv_obj_del(scr);
         lv_draw_language();
       }
       break;
+    case ID_S_MACHINE_PARA:
+      if (event == LV_EVENT_CLICKED) {
+
+      }
+      else if (event == LV_EVENT_RELEASED) {
+        lv_obj_del(scr);
+        lv_draw_machine_para();
+      }
+      break;
+    case ID_S_EEPROM_SET:
+      if (event == LV_EVENT_CLICKED) {
+
+      }
+      else if (event == LV_EVENT_RELEASED) {
+        lv_obj_del(scr);
+        lv_draw_eeprom_settings();
+      }
+      break;
     case ID_S_RETURN:
       if (event == LV_EVENT_CLICKED) {
         // nothing to do
       }
       else if (event == LV_EVENT_RELEASED) {
         lv_obj_del(scr);
         lv_draw_ready_print();
       }
       break;
 
   }
 }
 
 void lv_draw_set(void) {
   lv_obj_t *buttonFan, *buttonAbout;
   lv_obj_t *buMotorOff, *buttonBack;
   #if HAS_LANG_SELECT_SCREEN
     lv_obj_t *buttonLanguage;
   #endif
+  lv_obj_t *buttonMachinePara;
+  lv_obj_t *buttonEepromSet;
 
   if (disp_state_stack._disp_state[disp_state_stack._disp_index] != SET_UI) {
     disp_state_stack._disp_index++;
     disp_state_stack._disp_state[disp_state_stack._disp_index] = SET_UI;
   }
   disp_state = SET_UI;
 
   scr = lv_obj_create(NULL, NULL);
 
   //static lv_style_t tool_style;
 
   lv_obj_set_style(scr, &tft_style_scr);
   lv_scr_load(scr);
   lv_obj_clean(scr);
 
   lv_obj_t * title = lv_label_create(scr, NULL);
-  lv_obj_set_style(title, &tft_style_lable_rel);
+  lv_obj_set_style(title, &tft_style_label_rel);
   lv_obj_set_pos(title, TITLE_XPOS, TITLE_YPOS);
   lv_label_set_text(title, creat_title_text());
 
   lv_refr_now(lv_refr_get_disp_refreshing());
 
   LV_IMG_DECLARE(bmp_pic);
 
   /*Create an Image button*/
   //buttonWifi = lv_imgbtn_create(scr, NULL);
-  buttonFan = lv_imgbtn_create(scr, NULL);
+  buttonFan   = lv_imgbtn_create(scr, NULL);
   buttonAbout = lv_imgbtn_create(scr, NULL);
   //buttonContinue = lv_imgbtn_create(scr, NULL);
   buMotorOff = lv_imgbtn_create(scr, NULL);
   #if HAS_LANG_SELECT_SCREEN
     buttonLanguage = lv_imgbtn_create(scr, NULL);
   #endif
-  buttonBack = lv_imgbtn_create(scr, NULL);
+  buttonMachinePara = lv_imgbtn_create(scr, NULL);
+  buttonEepromSet   = lv_imgbtn_create(scr, NULL);
+  buttonBack        = lv_imgbtn_create(scr, NULL);
 
 
   //lv_obj_set_event_cb_mks(buttonWifi, event_handler,ID_S_WIFI,"bmp_Wifi.bin",0);
   //lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_REL, &bmp_pic);
   //lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_PR, &bmp_pic);
-  //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_PR, &tft_style_lable_pre);
-  //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_REL, &tft_style_lable_rel);
+  //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_PR, &tft_style_label_pre);
+  //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_REL, &tft_style_label_rel);
   //lv_obj_clear_protect(buttonWifi, LV_PROTECT_FOLLOW);
   #if 1
-    lv_obj_set_event_cb_mks(buttonFan, event_handler, ID_S_FAN, "bmp_Fan.bin", 0);
+    lv_obj_set_event_cb_mks(buttonFan, event_handler, ID_S_FAN, "bmp_fan.bin", 0);
     lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_REL, &bmp_pic);
     lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_PR, &bmp_pic);
-    lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_PR, &tft_style_lable_pre);
-    lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_REL, &tft_style_lable_rel);
+    lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_PR, &tft_style_label_pre);
+    lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_REL, &tft_style_label_rel);
 
-    lv_obj_set_event_cb_mks(buttonAbout, event_handler, ID_S_ABOUT, "bmp_About.bin", 0);
+    lv_obj_set_event_cb_mks(buttonAbout, event_handler, ID_S_ABOUT, "bmp_about.bin", 0);
     lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_REL, &bmp_pic);
     lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_PR, &bmp_pic);
-    lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_PR, &tft_style_lable_pre);
-    lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_REL, &tft_style_lable_rel);
+    lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_PR, &tft_style_label_pre);
+    lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_REL, &tft_style_label_rel);
 
     //lv_obj_set_event_cb_mks(buttonContinue, event_handler,ID_S_CONTINUE,"bmp_Breakpoint.bin",0);
     //lv_imgbtn_set_src(buttonContinue, LV_BTN_STATE_REL, &bmp_pic);
     //lv_imgbtn_set_src(buttonContinue, LV_BTN_STATE_PR, &bmp_pic);
-    //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_PR, &tft_style_lable_pre);
-    //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_REL, &tft_style_lable_rel);
+    //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_PR, &tft_style_label_pre);
+    //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_REL, &tft_style_label_rel);
     #if HAS_SUICIDE
-      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_manual_off.bin", 0);
+      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_Mamual.bin", 0);
     #else
-      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_manual_off.bin", 0);
+      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_function1.bin", 0);
     #endif
     lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_REL, &bmp_pic);
     lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_PR, &bmp_pic);
-    lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_PR, &tft_style_lable_pre);
-    lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_REL, &tft_style_lable_rel);
+    lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_PR, &tft_style_label_pre);
+    lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_REL, &tft_style_label_rel);
 
     #if HAS_LANG_SELECT_SCREEN
-      lv_obj_set_event_cb_mks(buttonLanguage, event_handler, ID_S_LANGUAGE, "bmp_Language.bin", 0);
+      lv_obj_set_event_cb_mks(buttonLanguage, event_handler, ID_S_LANGUAGE, "bmp_language.bin", 0);
       lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_REL, &bmp_pic);
       lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_PR, &bmp_pic);
-      lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_PR, &tft_style_lable_pre);
-      lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_REL, &tft_style_lable_rel);
+      lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_PR, &tft_style_label_pre);
+      lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_REL, &tft_style_label_rel);
     #endif
-
-    lv_obj_set_event_cb_mks(buttonBack, event_handler, ID_S_RETURN, "bmp_Return.bin", 0);
+    lv_obj_set_event_cb_mks(buttonMachinePara, event_handler, ID_S_MACHINE_PARA, "bmp_machine_para.bin", 0);
+    lv_imgbtn_set_src(buttonMachinePara, LV_BTN_STATE_REL, &bmp_pic);
+    lv_imgbtn_set_src(buttonMachinePara, LV_BTN_STATE_PR, &bmp_pic);
+    lv_imgbtn_set_style(buttonMachinePara, LV_BTN_STATE_PR, &tft_style_label_pre);
+    lv_imgbtn_set_style(buttonMachinePara, LV_BTN_STATE_REL, &tft_style_label_rel);
+
+    lv_obj_set_event_cb_mks(buttonEepromSet, event_handler, ID_S_EEPROM_SET, "bmp_eeprom_settings.bin", 0);
+    lv_imgbtn_set_src(buttonEepromSet, LV_BTN_STATE_REL, &bmp_pic);
+    lv_imgbtn_set_src(buttonEepromSet, LV_BTN_STATE_PR, &bmp_pic);
+    lv_imgbtn_set_style(buttonEepromSet, LV_BTN_STATE_PR, &tft_style_label_pre);
+    lv_imgbtn_set_style(buttonEepromSet, LV_BTN_STATE_REL, &tft_style_label_rel);
+    lv_obj_set_event_cb_mks(buttonBack, event_handler, ID_S_RETURN, "bmp_return.bin", 0);
     lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_REL, &bmp_pic);
     lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_PR, &bmp_pic);
-    lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_PR, &tft_style_lable_pre);
-    lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_REL, &tft_style_lable_rel);
-  #endif
+    lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_PR, &tft_style_label_pre);
+    lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_REL, &tft_style_label_rel);
+  #endif // if 1
 
   /*lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
   lv_obj_set_pos(buttonFan,BTN_X_PIXEL+INTERVAL_V*2,titleHeight);
   lv_obj_set_pos(buttonAbout,BTN_X_PIXEL*2+INTERVAL_V*3,titleHeight);
   lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
-  lv_obj_set_pos(buMotorOff,INTERVAL_V,  BTN_Y_PIXEL+INTERVAL_H+titleHeight);
+  lv_obj_set_pos(buMotorOff,INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H+titleHeight);
   lv_obj_set_pos(buttonLanguage,BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H+titleHeight);
-  lv_obj_set_pos(buttonBack,BTN_X_PIXEL*3+INTERVAL_V*4,  BTN_Y_PIXEL+INTERVAL_H+titleHeight);*/
+  lv_obj_set_pos(buttonBack,BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H+titleHeight);*/
 
   //lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
   lv_obj_set_pos(buttonFan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight);
   lv_obj_set_pos(buttonAbout, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight);
   //lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
   lv_obj_set_pos(buMotorOff, BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight);
   #if HAS_LANG_SELECT_SCREEN
     lv_obj_set_pos(buttonLanguage, INTERVAL_V, titleHeight);
   #endif
-  lv_obj_set_pos(buttonBack, BTN_X_PIXEL * 3 + INTERVAL_V * 4,  BTN_Y_PIXEL + INTERVAL_H + titleHeight);
+  lv_obj_set_pos(buttonMachinePara, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
+  lv_obj_set_pos(buttonEepromSet, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
+  lv_obj_set_pos(buttonBack, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight);
 
   /*Create a label on the Image button*/
   //lv_btn_set_layout(buttonWifi, LV_LAYOUT_OFF);
   lv_btn_set_layout(buttonFan, LV_LAYOUT_OFF);
   lv_btn_set_layout(buttonAbout, LV_LAYOUT_OFF);
   //lv_btn_set_layout(buttonContinue, LV_LAYOUT_OFF);
   lv_btn_set_layout(buMotorOff, LV_LAYOUT_OFF);
   #if HAS_LANG_SELECT_SCREEN
     lv_btn_set_layout(buttonLanguage, LV_LAYOUT_OFF);
   #endif
+  lv_btn_set_layout(buttonMachinePara, LV_LAYOUT_OFF);
+  lv_btn_set_layout(buttonEepromSet, LV_LAYOUT_OFF);
   lv_btn_set_layout(buttonBack, LV_LAYOUT_OFF);
 
   //lv_obj_t * labelWifi= lv_label_create(buttonWifi, NULL);
-  lv_obj_t * labelFan = lv_label_create(buttonFan, NULL);
+  lv_obj_t * labelFan    = lv_label_create(buttonFan, NULL);
   lv_obj_t * label_About = lv_label_create(buttonAbout, NULL);
   //lv_obj_t * label_Continue = lv_label_create(buttonContinue, NULL);
   lv_obj_t * label_MotorOff = lv_label_create(buMotorOff, NULL);
   #if HAS_LANG_SELECT_SCREEN
     lv_obj_t * label_Language = lv_label_create(buttonLanguage, NULL);
   #endif
-  lv_obj_t * label_Back = lv_label_create(buttonBack, NULL);
-
+  lv_obj_t * label_MachinePara = lv_label_create(buttonMachinePara, NULL);
+  lv_obj_t * label_EepromSet   = lv_label_create(buttonEepromSet, NULL);
+  lv_obj_t * label_Back        = lv_label_create(buttonBack, NULL);
 
   if (gCfgItems.multiple_language != 0) {
     //lv_label_set_text(labelWifi, set_menu.wifi);
     //lv_obj_align(labelWifi, buttonWifi, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(labelFan, set_menu.fan);
     lv_obj_align(labelFan, buttonFan, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(label_About, set_menu.about);
     lv_obj_align(label_About, buttonAbout, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
@@ -256,19 +295,24 @@ void lv_draw_set(void) {
       lv_label_set_text(label_MotorOff, set_menu.shutdown);
     #else
       lv_label_set_text(label_MotorOff, set_menu.motoroff);
     #endif
     lv_obj_align(label_MotorOff, buMotorOff, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     #if HAS_LANG_SELECT_SCREEN
       lv_label_set_text(label_Language, set_menu.language);
       lv_obj_align(label_Language, buttonLanguage, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
     #endif
+    lv_label_set_text(label_MachinePara, set_menu.machine_para);
+    lv_obj_align(label_MachinePara, buttonMachinePara, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+
+    lv_label_set_text(label_EepromSet, set_menu.eepromSet);
+    lv_obj_align(label_EepromSet, buttonEepromSet, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(label_Back, common_menu.text_back);
     lv_obj_align(label_Back, buttonBack, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
   }
 }
 
 void lv_clear_set() { lv_obj_del(scr); }
 
-#endif // TFT_LVGL_UI
+#endif // HAS_TFT_LVGL_UI

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index 45354def65..6c7f83405b 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
 #if ENABLED(TFT_LVGL_UI)
 
 #include "../../../../MarlinCore.h"
 #include "draw_ready_print.h"
 #include "draw_set.h"
 #include "lv_conf.h"

commit e5bc9d31cc87be5c7ef2bd3cd70c2599f76d2bd7
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Wed Jul 1 03:30:24 2020 -0300

    Add TFT_LVGL_UI support (#18438)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
index e41e943e8c..45354def65 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -14,32 +14,33 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
-#if ENABLED(TFT_LITTLE_VGL_UI)
+#if ENABLED(TFT_LVGL_UI)
 
 #include "../../../../MarlinCore.h"
 #include "draw_ready_print.h"
 #include "draw_set.h"
 #include "lv_conf.h"
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 #include "draw_ui.h"
 #include "../../../../gcode/queue.h"
+#include "pic_manager.h"
 
 static lv_obj_t * scr;
 
 #define ID_S_WIFI       1
 #define ID_S_FAN        2
 #define ID_S_ABOUT      3
 #define ID_S_CONTINUE   4
 #define ID_S_MOTOR_OFF  5
 #define ID_S_LANGUAGE   6
 #define ID_S_RETURN     7
@@ -103,21 +104,24 @@ static void event_handler(lv_obj_t * obj, lv_event_t event) {
         lv_obj_del(scr);
         lv_draw_ready_print();
       }
       break;
 
   }
 }
 
 void lv_draw_set(void) {
   lv_obj_t *buttonFan, *buttonAbout;
-  lv_obj_t *buMotorOff, *buttonLanguage, *buttonBack;
+  lv_obj_t *buMotorOff, *buttonBack;
+  #if HAS_LANG_SELECT_SCREEN
+    lv_obj_t *buttonLanguage;
+  #endif
 
   if (disp_state_stack._disp_state[disp_state_stack._disp_index] != SET_UI) {
     disp_state_stack._disp_index++;
     disp_state_stack._disp_state[disp_state_stack._disp_index] = SET_UI;
   }
   disp_state = SET_UI;
 
   scr = lv_obj_create(NULL, NULL);
 
   //static lv_style_t tool_style;
@@ -134,21 +138,23 @@ void lv_draw_set(void) {
   lv_refr_now(lv_refr_get_disp_refreshing());
 
   LV_IMG_DECLARE(bmp_pic);
 
   /*Create an Image button*/
   //buttonWifi = lv_imgbtn_create(scr, NULL);
   buttonFan = lv_imgbtn_create(scr, NULL);
   buttonAbout = lv_imgbtn_create(scr, NULL);
   //buttonContinue = lv_imgbtn_create(scr, NULL);
   buMotorOff = lv_imgbtn_create(scr, NULL);
-  buttonLanguage = lv_imgbtn_create(scr, NULL);
+  #if HAS_LANG_SELECT_SCREEN
+    buttonLanguage = lv_imgbtn_create(scr, NULL);
+  #endif
   buttonBack = lv_imgbtn_create(scr, NULL);
 
 
   //lv_obj_set_event_cb_mks(buttonWifi, event_handler,ID_S_WIFI,"bmp_Wifi.bin",0);
   //lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_REL, &bmp_pic);
   //lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_PR, &bmp_pic);
   //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_PR, &tft_style_lable_pre);
   //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_REL, &tft_style_lable_rel);
   //lv_obj_clear_protect(buttonWifi, LV_PROTECT_FOLLOW);
   #if 1
@@ -163,34 +169,36 @@ void lv_draw_set(void) {
     lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_PR, &bmp_pic);
     lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_PR, &tft_style_lable_pre);
     lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_REL, &tft_style_lable_rel);
 
     //lv_obj_set_event_cb_mks(buttonContinue, event_handler,ID_S_CONTINUE,"bmp_Breakpoint.bin",0);
     //lv_imgbtn_set_src(buttonContinue, LV_BTN_STATE_REL, &bmp_pic);
     //lv_imgbtn_set_src(buttonContinue, LV_BTN_STATE_PR, &bmp_pic);
     //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_PR, &tft_style_lable_pre);
     //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_REL, &tft_style_lable_rel);
     #if HAS_SUICIDE
-      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_Mamual.bin", 0);
+      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_manual_off.bin", 0);
     #else
-      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_Motor_off.bin", 0);
+      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_manual_off.bin", 0);
     #endif
     lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_REL, &bmp_pic);
     lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_PR, &bmp_pic);
     lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_PR, &tft_style_lable_pre);
     lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_REL, &tft_style_lable_rel);
 
-    lv_obj_set_event_cb_mks(buttonLanguage, event_handler, ID_S_LANGUAGE, "bmp_Language.bin", 0);
-    lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_REL, &bmp_pic);
-    lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_PR, &bmp_pic);
-    lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_PR, &tft_style_lable_pre);
-    lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_REL, &tft_style_lable_rel);
+    #if HAS_LANG_SELECT_SCREEN
+      lv_obj_set_event_cb_mks(buttonLanguage, event_handler, ID_S_LANGUAGE, "bmp_Language.bin", 0);
+      lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_REL, &bmp_pic);
+      lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_PR, &bmp_pic);
+      lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_PR, &tft_style_lable_pre);
+      lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_REL, &tft_style_lable_rel);
+    #endif
 
     lv_obj_set_event_cb_mks(buttonBack, event_handler, ID_S_RETURN, "bmp_Return.bin", 0);
     lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_REL, &bmp_pic);
     lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_PR, &bmp_pic);
     lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_PR, &tft_style_lable_pre);
     lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_REL, &tft_style_lable_rel);
   #endif
 
   /*lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
   lv_obj_set_pos(buttonFan,BTN_X_PIXEL+INTERVAL_V*2,titleHeight);
@@ -198,38 +206,44 @@ void lv_draw_set(void) {
   lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
   lv_obj_set_pos(buMotorOff,INTERVAL_V,  BTN_Y_PIXEL+INTERVAL_H+titleHeight);
   lv_obj_set_pos(buttonLanguage,BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H+titleHeight);
   lv_obj_set_pos(buttonBack,BTN_X_PIXEL*3+INTERVAL_V*4,  BTN_Y_PIXEL+INTERVAL_H+titleHeight);*/
 
   //lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
   lv_obj_set_pos(buttonFan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight);
   lv_obj_set_pos(buttonAbout, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight);
   //lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
   lv_obj_set_pos(buMotorOff, BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight);
-  lv_obj_set_pos(buttonLanguage, INTERVAL_V, titleHeight);
+  #if HAS_LANG_SELECT_SCREEN
+    lv_obj_set_pos(buttonLanguage, INTERVAL_V, titleHeight);
+  #endif
   lv_obj_set_pos(buttonBack, BTN_X_PIXEL * 3 + INTERVAL_V * 4,  BTN_Y_PIXEL + INTERVAL_H + titleHeight);
 
   /*Create a label on the Image button*/
   //lv_btn_set_layout(buttonWifi, LV_LAYOUT_OFF);
   lv_btn_set_layout(buttonFan, LV_LAYOUT_OFF);
   lv_btn_set_layout(buttonAbout, LV_LAYOUT_OFF);
   //lv_btn_set_layout(buttonContinue, LV_LAYOUT_OFF);
   lv_btn_set_layout(buMotorOff, LV_LAYOUT_OFF);
-  lv_btn_set_layout(buttonLanguage, LV_LAYOUT_OFF);
+  #if HAS_LANG_SELECT_SCREEN
+    lv_btn_set_layout(buttonLanguage, LV_LAYOUT_OFF);
+  #endif
   lv_btn_set_layout(buttonBack, LV_LAYOUT_OFF);
 
   //lv_obj_t * labelWifi= lv_label_create(buttonWifi, NULL);
   lv_obj_t * labelFan = lv_label_create(buttonFan, NULL);
   lv_obj_t * label_About = lv_label_create(buttonAbout, NULL);
   //lv_obj_t * label_Continue = lv_label_create(buttonContinue, NULL);
   lv_obj_t * label_MotorOff = lv_label_create(buMotorOff, NULL);
-  lv_obj_t * label_Language = lv_label_create(buttonLanguage, NULL);
+  #if HAS_LANG_SELECT_SCREEN
+    lv_obj_t * label_Language = lv_label_create(buttonLanguage, NULL);
+  #endif
   lv_obj_t * label_Back = lv_label_create(buttonBack, NULL);
 
 
   if (gCfgItems.multiple_language != 0) {
     //lv_label_set_text(labelWifi, set_menu.wifi);
     //lv_obj_align(labelWifi, buttonWifi, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
 
     lv_label_set_text(labelFan, set_menu.fan);
     lv_obj_align(labelFan, buttonFan, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
@@ -238,21 +252,23 @@ void lv_draw_set(void) {
 
     //lv_label_set_text(label_Continue, set_menu.breakpoint);
     //lv_obj_align(label_Continue, buttonContinue, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
     #if HAS_SUICIDE
       lv_label_set_text(label_MotorOff, set_menu.shutdown);
     #else
       lv_label_set_text(label_MotorOff, set_menu.motoroff);
     #endif
     lv_obj_align(label_MotorOff, buMotorOff, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
 
-    lv_label_set_text(label_Language, set_menu.language);
-    lv_obj_align(label_Language, buttonLanguage, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #if HAS_LANG_SELECT_SCREEN
+      lv_label_set_text(label_Language, set_menu.language);
+      lv_obj_align(label_Language, buttonLanguage, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    #endif
 
     lv_label_set_text(label_Back, common_menu.text_back);
     lv_obj_align(label_Back, buttonBack, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
   }
 }
 
 void lv_clear_set() { lv_obj_del(scr); }
 
-#endif // TFT_LITTLE_VGL_UI
+#endif // TFT_LVGL_UI

commit 642112d3eb7c1af9a52feec8134c85ed3e34891c
Author: makerbase <4164049@qq.com>
Date:   Tue Jun 16 10:05:33 2020 +0800

    Add MKS UI (TFT_LITTLE_VGL_UI) (#18071)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
new file mode 100644
index 0000000000..e41e943e8c
--- /dev/null
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_set.cpp
@@ -0,0 +1,258 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#include "../../../../inc/MarlinConfigPre.h"
+
+#if ENABLED(TFT_LITTLE_VGL_UI)
+
+#include "../../../../MarlinCore.h"
+#include "draw_ready_print.h"
+#include "draw_set.h"
+#include "lv_conf.h"
+//#include "../lvgl/src/lv_objx/lv_imgbtn.h"
+//#include "../lvgl/src/lv_objx/lv_img.h"
+//#include "../lvgl/src/lv_core/lv_disp.h"
+//#include "../lvgl/src/lv_core/lv_refr.h"
+#include "draw_ui.h"
+#include "../../../../gcode/queue.h"
+
+static lv_obj_t * scr;
+
+#define ID_S_WIFI       1
+#define ID_S_FAN        2
+#define ID_S_ABOUT      3
+#define ID_S_CONTINUE   4
+#define ID_S_MOTOR_OFF  5
+#define ID_S_LANGUAGE   6
+#define ID_S_RETURN     7
+
+static void event_handler(lv_obj_t * obj, lv_event_t event) {
+  switch (obj->mks_obj_id) {
+    case ID_S_WIFI:
+      if (event == LV_EVENT_CLICKED) {
+        // nothing to do
+      }
+      else if (event == LV_EVENT_RELEASED) {
+      }
+      break;
+    case ID_S_FAN:
+      if (event == LV_EVENT_CLICKED) {
+        // nothing to do
+      }
+      else if (event == LV_EVENT_RELEASED) {
+        lv_obj_del(scr);
+        lv_draw_fan();
+      }
+      break;
+    case ID_S_ABOUT:
+      if (event == LV_EVENT_CLICKED) {
+        // nothing to do
+      }
+      else if (event == LV_EVENT_RELEASED) {
+        lv_obj_del(scr);
+        lv_draw_about();
+      }
+      break;
+    case ID_S_CONTINUE:
+
+      break;
+    case ID_S_MOTOR_OFF:
+      if (event == LV_EVENT_CLICKED) {
+        // nothing to do
+      }
+      else if (event == LV_EVENT_RELEASED) {
+        #if HAS_SUICIDE
+          suicide();
+        #else
+          queue.enqueue_one_now(PSTR("M84"));
+        #endif
+      }
+      break;
+    case ID_S_LANGUAGE:
+      if (event == LV_EVENT_CLICKED) {
+        // nothing to do
+      }
+      else if (event == LV_EVENT_RELEASED) {
+        lv_obj_del(scr);
+        lv_draw_language();
+      }
+      break;
+    case ID_S_RETURN:
+      if (event == LV_EVENT_CLICKED) {
+        // nothing to do
+      }
+      else if (event == LV_EVENT_RELEASED) {
+        lv_obj_del(scr);
+        lv_draw_ready_print();
+      }
+      break;
+
+  }
+}
+
+void lv_draw_set(void) {
+  lv_obj_t *buttonFan, *buttonAbout;
+  lv_obj_t *buMotorOff, *buttonLanguage, *buttonBack;
+
+  if (disp_state_stack._disp_state[disp_state_stack._disp_index] != SET_UI) {
+    disp_state_stack._disp_index++;
+    disp_state_stack._disp_state[disp_state_stack._disp_index] = SET_UI;
+  }
+  disp_state = SET_UI;
+
+  scr = lv_obj_create(NULL, NULL);
+
+  //static lv_style_t tool_style;
+
+  lv_obj_set_style(scr, &tft_style_scr);
+  lv_scr_load(scr);
+  lv_obj_clean(scr);
+
+  lv_obj_t * title = lv_label_create(scr, NULL);
+  lv_obj_set_style(title, &tft_style_lable_rel);
+  lv_obj_set_pos(title, TITLE_XPOS, TITLE_YPOS);
+  lv_label_set_text(title, creat_title_text());
+
+  lv_refr_now(lv_refr_get_disp_refreshing());
+
+  LV_IMG_DECLARE(bmp_pic);
+
+  /*Create an Image button*/
+  //buttonWifi = lv_imgbtn_create(scr, NULL);
+  buttonFan = lv_imgbtn_create(scr, NULL);
+  buttonAbout = lv_imgbtn_create(scr, NULL);
+  //buttonContinue = lv_imgbtn_create(scr, NULL);
+  buMotorOff = lv_imgbtn_create(scr, NULL);
+  buttonLanguage = lv_imgbtn_create(scr, NULL);
+  buttonBack = lv_imgbtn_create(scr, NULL);
+
+
+  //lv_obj_set_event_cb_mks(buttonWifi, event_handler,ID_S_WIFI,"bmp_Wifi.bin",0);
+  //lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_REL, &bmp_pic);
+  //lv_imgbtn_set_src(buttonWifi, LV_BTN_STATE_PR, &bmp_pic);
+  //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_PR, &tft_style_lable_pre);
+  //lv_imgbtn_set_style(buttonWifi, LV_BTN_STATE_REL, &tft_style_lable_rel);
+  //lv_obj_clear_protect(buttonWifi, LV_PROTECT_FOLLOW);
+  #if 1
+    lv_obj_set_event_cb_mks(buttonFan, event_handler, ID_S_FAN, "bmp_Fan.bin", 0);
+    lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_REL, &bmp_pic);
+    lv_imgbtn_set_src(buttonFan, LV_BTN_STATE_PR, &bmp_pic);
+    lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_PR, &tft_style_lable_pre);
+    lv_imgbtn_set_style(buttonFan, LV_BTN_STATE_REL, &tft_style_lable_rel);
+
+    lv_obj_set_event_cb_mks(buttonAbout, event_handler, ID_S_ABOUT, "bmp_About.bin", 0);
+    lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_REL, &bmp_pic);
+    lv_imgbtn_set_src(buttonAbout, LV_BTN_STATE_PR, &bmp_pic);
+    lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_PR, &tft_style_lable_pre);
+    lv_imgbtn_set_style(buttonAbout, LV_BTN_STATE_REL, &tft_style_lable_rel);
+
+    //lv_obj_set_event_cb_mks(buttonContinue, event_handler,ID_S_CONTINUE,"bmp_Breakpoint.bin",0);
+    //lv_imgbtn_set_src(buttonContinue, LV_BTN_STATE_REL, &bmp_pic);
+    //lv_imgbtn_set_src(buttonContinue, LV_BTN_STATE_PR, &bmp_pic);
+    //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_PR, &tft_style_lable_pre);
+    //lv_imgbtn_set_style(buttonContinue, LV_BTN_STATE_REL, &tft_style_lable_rel);
+    #if HAS_SUICIDE
+      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_Mamual.bin", 0);
+    #else
+      lv_obj_set_event_cb_mks(buMotorOff, event_handler, ID_S_MOTOR_OFF, "bmp_Motor_off.bin", 0);
+    #endif
+    lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_REL, &bmp_pic);
+    lv_imgbtn_set_src(buMotorOff, LV_BTN_STATE_PR, &bmp_pic);
+    lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_PR, &tft_style_lable_pre);
+    lv_imgbtn_set_style(buMotorOff, LV_BTN_STATE_REL, &tft_style_lable_rel);
+
+    lv_obj_set_event_cb_mks(buttonLanguage, event_handler, ID_S_LANGUAGE, "bmp_Language.bin", 0);
+    lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_REL, &bmp_pic);
+    lv_imgbtn_set_src(buttonLanguage, LV_BTN_STATE_PR, &bmp_pic);
+    lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_PR, &tft_style_lable_pre);
+    lv_imgbtn_set_style(buttonLanguage, LV_BTN_STATE_REL, &tft_style_lable_rel);
+
+    lv_obj_set_event_cb_mks(buttonBack, event_handler, ID_S_RETURN, "bmp_Return.bin", 0);
+    lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_REL, &bmp_pic);
+    lv_imgbtn_set_src(buttonBack, LV_BTN_STATE_PR, &bmp_pic);
+    lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_PR, &tft_style_lable_pre);
+    lv_imgbtn_set_style(buttonBack, LV_BTN_STATE_REL, &tft_style_lable_rel);
+  #endif
+
+  /*lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
+  lv_obj_set_pos(buttonFan,BTN_X_PIXEL+INTERVAL_V*2,titleHeight);
+  lv_obj_set_pos(buttonAbout,BTN_X_PIXEL*2+INTERVAL_V*3,titleHeight);
+  lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
+  lv_obj_set_pos(buMotorOff,INTERVAL_V,  BTN_Y_PIXEL+INTERVAL_H+titleHeight);
+  lv_obj_set_pos(buttonLanguage,BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H+titleHeight);
+  lv_obj_set_pos(buttonBack,BTN_X_PIXEL*3+INTERVAL_V*4,  BTN_Y_PIXEL+INTERVAL_H+titleHeight);*/
+
+  //lv_obj_set_pos(buttonWifi,INTERVAL_V,titleHeight);
+  lv_obj_set_pos(buttonFan, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight);
+  lv_obj_set_pos(buttonAbout, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight);
+  //lv_obj_set_pos(buttonContinue,BTN_X_PIXEL*3+INTERVAL_V*4,titleHeight);
+  lv_obj_set_pos(buMotorOff, BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight);
+  lv_obj_set_pos(buttonLanguage, INTERVAL_V, titleHeight);
+  lv_obj_set_pos(buttonBack, BTN_X_PIXEL * 3 + INTERVAL_V * 4,  BTN_Y_PIXEL + INTERVAL_H + titleHeight);
+
+  /*Create a label on the Image button*/
+  //lv_btn_set_layout(buttonWifi, LV_LAYOUT_OFF);
+  lv_btn_set_layout(buttonFan, LV_LAYOUT_OFF);
+  lv_btn_set_layout(buttonAbout, LV_LAYOUT_OFF);
+  //lv_btn_set_layout(buttonContinue, LV_LAYOUT_OFF);
+  lv_btn_set_layout(buMotorOff, LV_LAYOUT_OFF);
+  lv_btn_set_layout(buttonLanguage, LV_LAYOUT_OFF);
+  lv_btn_set_layout(buttonBack, LV_LAYOUT_OFF);
+
+  //lv_obj_t * labelWifi= lv_label_create(buttonWifi, NULL);
+  lv_obj_t * labelFan = lv_label_create(buttonFan, NULL);
+  lv_obj_t * label_About = lv_label_create(buttonAbout, NULL);
+  //lv_obj_t * label_Continue = lv_label_create(buttonContinue, NULL);
+  lv_obj_t * label_MotorOff = lv_label_create(buMotorOff, NULL);
+  lv_obj_t * label_Language = lv_label_create(buttonLanguage, NULL);
+  lv_obj_t * label_Back = lv_label_create(buttonBack, NULL);
+
+
+  if (gCfgItems.multiple_language != 0) {
+    //lv_label_set_text(labelWifi, set_menu.wifi);
+    //lv_obj_align(labelWifi, buttonWifi, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
+
+    lv_label_set_text(labelFan, set_menu.fan);
+    lv_obj_align(labelFan, buttonFan, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+
+    lv_label_set_text(label_About, set_menu.about);
+    lv_obj_align(label_About, buttonAbout, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+
+    //lv_label_set_text(label_Continue, set_menu.breakpoint);
+    //lv_obj_align(label_Continue, buttonContinue, LV_ALIGN_IN_BOTTOM_MID,0, BUTTON_TEXT_Y_OFFSET);
+    #if HAS_SUICIDE
+      lv_label_set_text(label_MotorOff, set_menu.shutdown);
+    #else
+      lv_label_set_text(label_MotorOff, set_menu.motoroff);
+    #endif
+    lv_obj_align(label_MotorOff, buMotorOff, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+
+    lv_label_set_text(label_Language, set_menu.language);
+    lv_obj_align(label_Language, buttonLanguage, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+
+    lv_label_set_text(label_Back, common_menu.text_back);
+    lv_obj_align(label_Back, buttonBack, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+  }
+}
+
+void lv_clear_set() { lv_obj_del(scr); }
+
+#endif // TFT_LITTLE_VGL_UI
