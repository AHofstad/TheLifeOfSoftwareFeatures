commit 6909f5fa4f292743f2d6070484125b5d0c30c472
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Fri Aug 19 11:37:43 2022 -0700

    ðŸ“º Add to MKS UI About Screen (#24610)

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_about.cpp b/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
index 49ee6eee73..e254523e12 100644
--- a/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
@@ -24,42 +24,51 @@
 
 #if HAS_TFT_LVGL_UI
 
 #include "draw_ui.h"
 #include <lv_conf.h>
 
 #include "../../../inc/MarlinConfig.h"
 
 extern lv_group_t *g;
 static lv_obj_t *scr;
-static lv_obj_t *fw_type, *board;
+static lv_obj_t *fw_type, *board, *website, *uuid, *protocol;
 
 enum { ID_A_RETURN = 1 };
 
 static void event_handler(lv_obj_t *obj, lv_event_t event) {
   if (event != LV_EVENT_RELEASED) return;
   switch (obj->mks_obj_id) {
     case ID_A_RETURN:
       goto_previous_ui();
       break;
   }
 }
 
 void lv_draw_about() {
   scr = lv_screen_create(ABOUT_UI);
   lv_big_button_create(scr, "F:/bmp_return.bin", common_menu.text_back, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_A_RETURN);
 
-  fw_type = lv_label_create(scr, "Firmware: Marlin " SHORT_BUILD_VERSION);
-  lv_obj_align(fw_type, nullptr, LV_ALIGN_CENTER, 0, -20);
+  board = lv_label_create(scr, BOARD_INFO_NAME);
+  lv_obj_align(board, nullptr, LV_ALIGN_CENTER, 0, -80);
 
-  board = lv_label_create(scr, "Board: " BOARD_INFO_NAME);
-  lv_obj_align(board, nullptr, LV_ALIGN_CENTER, 0, -60);
+  fw_type = lv_label_create(scr, "Marlin " SHORT_BUILD_VERSION " (" STRING_DISTRIBUTION_DATE ")");
+  lv_obj_align(fw_type, nullptr, LV_ALIGN_CENTER, 0, -50);
+
+  website = lv_label_create(scr, WEBSITE_URL);
+  lv_obj_align(website, nullptr, LV_ALIGN_CENTER, 0, -20);
+
+  uuid = lv_label_create(scr, "UUID: " DEFAULT_MACHINE_UUID);
+  lv_obj_align(uuid, nullptr, LV_ALIGN_CENTER, 0, 10);
+
+  protocol = lv_label_create(scr, "Protocol: " PROTOCOL_VERSION);
+  lv_obj_align(protocol, nullptr, LV_ALIGN_CENTER, 0, 40);
 }
 
 void lv_clear_about() {
   #if HAS_ROTARY_ENCODER
     if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
   #endif
   lv_obj_del(scr);
 }
 
 #endif // HAS_TFT_LVGL_UI

commit 2e0bde37d77c8c0d8274d74f18cb27be2c232278
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 17 22:10:08 2021 -0500

    ðŸŽ¨ Add MKS UI goto_previous_ui

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_about.cpp b/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
index 3424bf7a0e..49ee6eee73 100644
--- a/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
@@ -32,22 +32,21 @@
 extern lv_group_t *g;
 static lv_obj_t *scr;
 static lv_obj_t *fw_type, *board;
 
 enum { ID_A_RETURN = 1 };
 
 static void event_handler(lv_obj_t *obj, lv_event_t event) {
   if (event != LV_EVENT_RELEASED) return;
   switch (obj->mks_obj_id) {
     case ID_A_RETURN:
-      clear_cur_ui();
-      draw_return_ui();
+      goto_previous_ui();
       break;
   }
 }
 
 void lv_draw_about() {
   scr = lv_screen_create(ABOUT_UI);
   lv_big_button_create(scr, "F:/bmp_return.bin", common_menu.text_back, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_A_RETURN);
 
   fw_type = lv_label_create(scr, "Firmware: Marlin " SHORT_BUILD_VERSION);
   lv_obj_align(fw_type, nullptr, LV_ALIGN_CENTER, 0, -20);

commit 323b38ee88dbf2a4691a20439dbb95a824822199
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 16 04:36:26 2021 -0500

    ðŸ’¡ Adjust headers, formatting

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_about.cpp b/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
index 54a8ede64e..3424bf7a0e 100644
--- a/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
@@ -12,20 +12,21 @@
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
+
 #include "../../../inc/MarlinConfigPre.h"
 
 #if HAS_TFT_LVGL_UI
 
 #include "draw_ui.h"
 #include <lv_conf.h>
 
 #include "../../../inc/MarlinConfig.h"
 
 extern lv_group_t *g;

commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_about.cpp b/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
new file mode 100644
index 0000000000..54a8ede64e
--- /dev/null
+++ b/Marlin/src/lcd/extui/mks_ui/draw_about.cpp
@@ -0,0 +1,65 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#include "../../../inc/MarlinConfigPre.h"
+
+#if HAS_TFT_LVGL_UI
+
+#include "draw_ui.h"
+#include <lv_conf.h>
+
+#include "../../../inc/MarlinConfig.h"
+
+extern lv_group_t *g;
+static lv_obj_t *scr;
+static lv_obj_t *fw_type, *board;
+
+enum { ID_A_RETURN = 1 };
+
+static void event_handler(lv_obj_t *obj, lv_event_t event) {
+  if (event != LV_EVENT_RELEASED) return;
+  switch (obj->mks_obj_id) {
+    case ID_A_RETURN:
+      clear_cur_ui();
+      draw_return_ui();
+      break;
+  }
+}
+
+void lv_draw_about() {
+  scr = lv_screen_create(ABOUT_UI);
+  lv_big_button_create(scr, "F:/bmp_return.bin", common_menu.text_back, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_A_RETURN);
+
+  fw_type = lv_label_create(scr, "Firmware: Marlin " SHORT_BUILD_VERSION);
+  lv_obj_align(fw_type, nullptr, LV_ALIGN_CENTER, 0, -20);
+
+  board = lv_label_create(scr, "Board: " BOARD_INFO_NAME);
+  lv_obj_align(board, nullptr, LV_ALIGN_CENTER, 0, -60);
+}
+
+void lv_clear_about() {
+  #if HAS_ROTARY_ENCODER
+    if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
+  #endif
+  lv_obj_del(scr);
+}
+
+#endif // HAS_TFT_LVGL_UI
