commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
deleted file mode 100644
index f3be3dc0ba..0000000000
--- a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
+++ /dev/null
@@ -1,43 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- */
-#pragma once
-
-#include "../../../../inc/MarlinConfigPre.h"
-
-#if HAS_TFT_LVGL_UI
-
-#include "../../../tft_io/tft_io.h"
-
-class TFT {
-public:
-  TFT_IO tftio;
-  void spi_init(uint8_t spiRate);
-  void SetPoint(uint16_t x, uint16_t y, uint16_t point);
-  void setWindow(uint16_t x, uint16_t y, uint16_t with, uint16_t height);
-  void LCD_init();
-  void LCD_clear(uint16_t color);
-  void LCD_Draw_Logo();
-};
-
-extern TFT SPI_TFT;
-
-#endif // HAS_TFT_LVGL_UI

commit 75b0e3246a00c04c5bf04607d030775f1d8d1e0c
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Tue Oct 27 17:09:19 2020 -0300

    Fix some LVGL bugs (#19904)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
index 696bc16974..f3be3dc0ba 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
@@ -14,21 +14,21 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
-#include "../../inc/MarlinConfigPre.h"
+#include "../../../../inc/MarlinConfigPre.h"
 
 #if HAS_TFT_LVGL_UI
 
 #include "../../../tft_io/tft_io.h"
 
 class TFT {
 public:
   TFT_IO tftio;
   void spi_init(uint8_t spiRate);
   void SetPoint(uint16_t x, uint16_t y, uint16_t point);

commit c0920bbf6a2490b7ea66d2a9e828c0f527a6c77b
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Mon Oct 12 18:38:07 2020 -0300

    TFT Refactoring (#19192)
    
    * split tft folder in two: tft for color ui; tft_io for shared tft code
    
    * after the files got moved, now the code was moved to the right place
    
    * classic ui using TFT IO init lcd codes
    
    * feature to compile tft_io when enabled
    
    * compiling fix
    
    * lvgl spi tft working with tft io init codes
    
    * there is no need for separeted fsmc and spi class in lvgl anymore, as tft io handle everything
    
    * remove debug
    
    * base for TFT rotation and mirroring API, and ILI9488 support
    
    * ST7796S rotate and mirror support
    
    * ST7789V rotate and mirror support
    
    * ST7735 rotate and mirror support
    
    * ILI9341 rotate and mirror support
    
    * ILI9328 rotate and mirror support
    
    * R61505 rotate and mirror support
    
    * MKS TFT definitions
    
    * more configs for mks tfts
    
    * update config
    
    * naming typo
    
    * to configure the user interface
    
    * ANYCUBIC_TFT35
    
    * tft configs
    
    * support for SSD1963
    
    * tft display types
    
    * updated conditionals lcd; first board fully working with the new code - all 3 ui!
    
    * compatiblity
    
    * changed name
    
    * move classic ui file name
    
    * rename TURN -> ROTATE
    
    * GRAPHICAL_TFT_ROTATE_180 deprecated
    
    * first fsmc board fully working - chitu v5
    
    * mks robin nano v1.2 + tft 35 ok!
    
    * right pin name
    
    * anycubic tft tested in a TRIGORILLA_PRO
    
    * chitu v6
    
    * nano 32 tft orientation
    
    * mks tft43
    
    * mks tft43 rotation
    
    * fixed LONGER LK tft setup
    
    * GRAPHICAL_TFT_UPSCALE defined by the display type
    
    * better offsets defaults
    
    * Update Configuration.h
    
    * Update tft_fsmc.cpp
    
    * Update Conditionals_LCD.h
    
    * Tweak comments
    
    * update nano tests
    
    * Revert "update nano tests"
    
    This reverts commit a071ebbfad30e28855a4a5695ec8a726542a1a65.
    
    * default tft
    
    * outdated comments
    
    * to not break non-vscode builds
    
    * upscale tft 35
    
    * support tft 180 rotation for color ui
    
    * Each TFT Driver is responsible for its default color mode.
    
    * use auto detect in mks displays, because some of them could be shipped with diferent drivers
    
    * extra s
    
    * unused code
    
    * wrong -1
    
    * missing mirror options
    
    * Smaller regex pattern
    
    * Comment updates
    
    * Clean up old defines
    
    * Apply pins formatting
    
    * GRAPHICAL_TFT_ROTATE_180 => TFT_ROTATE_180
    
    * MKS_ROBIN_TFT_V1_1R
    
    * merge fix
    
    * correct resolution
    
    * auto is default, dont need be there, and it will allow the user to configure it even for named displays
    
    * to not use rotation with MKS_ROBIN_TFT_V1_1R
    
    * i like () in macros
    
    * avoid sleepy commits
    
    * default for st7789 is rgb
    
    * nano follow up
    
    * to allow ili9328 rotation
    
    * default is rgb
    
    * boards merge follow up
    
    * to match bootloader orientation
    
    * HAS_TOUCH_XPT2046 is not hal specific anymore
    
    * lets not forget LPC
    
    * 180 rotation for ili9328 and R61505
    
    * Clean up whitespace
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
index e40039fe86..696bc16974 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
@@ -16,36 +16,28 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 #include "../../inc/MarlinConfigPre.h"
 
-#if ENABLED(TFT_LVGL_UI_SPI)
-  #include HAL_PATH(../../HAL, tft/tft_spi.h)
-#elif ENABLED(TFT_LVGL_UI_FSMC)
-  #include HAL_PATH(../../HAL, tft/tft_fsmc.h)
-#endif
+#if HAS_TFT_LVGL_UI
 
-#define TFT_RST_H OUT_WRITE(TFT_RESET_PIN, HIGH)
-#define TFT_RST_L OUT_WRITE(TFT_RESET_PIN, LOW)
-
-#define TFT_BLK_H OUT_WRITE(LCD_BACKLIGHT_PIN, HIGH)
-#define TFT_BLK_L OUT_WRITE(LCD_BACKLIGHT_PIN, LOW)
+#include "../../../tft_io/tft_io.h"
 
 class TFT {
 public:
   TFT_IO tftio;
   void spi_init(uint8_t spiRate);
-  void LCD_WR_REG(uint8_t cmd);
-  void LCD_WR_DATA(uint8_t data);
   void SetPoint(uint16_t x, uint16_t y, uint16_t point);
-  void SetWindows(uint16_t x, uint16_t y, uint16_t with, uint16_t height);
+  void setWindow(uint16_t x, uint16_t y, uint16_t with, uint16_t height);
   void LCD_init();
   void LCD_clear(uint16_t color);
   void LCD_Draw_Logo();
 };
 
 extern TFT SPI_TFT;
+
+#endif // HAS_TFT_LVGL_UI

commit a37cf2490054ece3c16f0caca26a02c3d33057c8
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Fri Aug 21 20:54:21 2020 -0300

    Emulated DOGM via HAL TFT, XPT IO (#19017)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
index c4b04e1c21..e40039fe86 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
@@ -22,25 +22,25 @@
 #pragma once
 
 #include "../../inc/MarlinConfigPre.h"
 
 #if ENABLED(TFT_LVGL_UI_SPI)
   #include HAL_PATH(../../HAL, tft/tft_spi.h)
 #elif ENABLED(TFT_LVGL_UI_FSMC)
   #include HAL_PATH(../../HAL, tft/tft_fsmc.h)
 #endif
 
-#define SPI_TFT_RST_H OUT_WRITE(SPI_TFT_RST_PIN, HIGH)
-#define SPI_TFT_RST_L OUT_WRITE(SPI_TFT_RST_PIN, LOW)
+#define TFT_RST_H OUT_WRITE(TFT_RESET_PIN, HIGH)
+#define TFT_RST_L OUT_WRITE(TFT_RESET_PIN, LOW)
 
-#define SPI_TFT_BLK_H OUT_WRITE(LCD_BACKLIGHT_PIN, HIGH)
-#define SPI_TFT_BLK_L OUT_WRITE(LCD_BACKLIGHT_PIN, LOW)
+#define TFT_BLK_H OUT_WRITE(LCD_BACKLIGHT_PIN, HIGH)
+#define TFT_BLK_L OUT_WRITE(LCD_BACKLIGHT_PIN, LOW)
 
 class TFT {
 public:
   TFT_IO tftio;
   void spi_init(uint8_t spiRate);
   void LCD_WR_REG(uint8_t cmd);
   void LCD_WR_DATA(uint8_t data);
   void SetPoint(uint16_t x, uint16_t y, uint16_t point);
   void SetWindows(uint16_t x, uint16_t y, uint16_t with, uint16_t height);
   void LCD_init();

commit ff5c8d35705df99f385a6b27163380a249c2e646
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Thu Aug 13 20:31:59 2020 -0300

    Optimize LVGL with HAL TFT IO (SPI and FSMC) (#18974)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
index 9b67684313..c4b04e1c21 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
@@ -14,44 +14,38 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
-#include <stdint.h>
+#include "../../inc/MarlinConfigPre.h"
 
-#define SPI_TFT_CS_H  OUT_WRITE(SPI_TFT_CS_PIN, HIGH)
-#define SPI_TFT_CS_L  OUT_WRITE(SPI_TFT_CS_PIN, LOW)
-
-#define SPI_TFT_DC_H  OUT_WRITE(SPI_TFT_DC_PIN, HIGH)
-#define SPI_TFT_DC_L  OUT_WRITE(SPI_TFT_DC_PIN, LOW)
+#if ENABLED(TFT_LVGL_UI_SPI)
+  #include HAL_PATH(../../HAL, tft/tft_spi.h)
+#elif ENABLED(TFT_LVGL_UI_FSMC)
+  #include HAL_PATH(../../HAL, tft/tft_fsmc.h)
+#endif
 
 #define SPI_TFT_RST_H OUT_WRITE(SPI_TFT_RST_PIN, HIGH)
 #define SPI_TFT_RST_L OUT_WRITE(SPI_TFT_RST_PIN, LOW)
 
 #define SPI_TFT_BLK_H OUT_WRITE(LCD_BACKLIGHT_PIN, HIGH)
 #define SPI_TFT_BLK_L OUT_WRITE(LCD_BACKLIGHT_PIN, LOW)
 
 class TFT {
 public:
+  TFT_IO tftio;
   void spi_init(uint8_t spiRate);
-  uint8_t spi_Rec();
-  uint8_t spi_read_write_byte(uint8_t data);
-  void spi_Read(uint8_t* buf, uint16_t nbyte);
-  void spi_Send(uint8_t b);
-  void spi_SendBlock(uint8_t token, const uint8_t* buf);
   void LCD_WR_REG(uint8_t cmd);
   void LCD_WR_DATA(uint8_t data);
-  void SetCursor(uint16_t x, uint16_t y);
   void SetPoint(uint16_t x, uint16_t y, uint16_t point);
   void SetWindows(uint16_t x, uint16_t y, uint16_t with, uint16_t height);
   void LCD_init();
   void LCD_clear(uint16_t color);
-  void LCD_WriteRAM_Prepare();
   void LCD_Draw_Logo();
 };
 
 extern TFT SPI_TFT;

commit d20d4591321aa467c062f0050355d2aca84e03ad
Author: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
Date:   Sat Jul 25 13:52:07 2020 +0800

    Robin nano V2, TFT LVGL UI parameters, and more (#18500)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
index 4466f4d33b..9b67684313 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
@@ -39,17 +39,19 @@ class TFT {
 public:
   void spi_init(uint8_t spiRate);
   uint8_t spi_Rec();
   uint8_t spi_read_write_byte(uint8_t data);
   void spi_Read(uint8_t* buf, uint16_t nbyte);
   void spi_Send(uint8_t b);
   void spi_SendBlock(uint8_t token, const uint8_t* buf);
   void LCD_WR_REG(uint8_t cmd);
   void LCD_WR_DATA(uint8_t data);
   void SetCursor(uint16_t x, uint16_t y);
+  void SetPoint(uint16_t x, uint16_t y, uint16_t point);
   void SetWindows(uint16_t x, uint16_t y, uint16_t with, uint16_t height);
   void LCD_init();
   void LCD_clear(uint16_t color);
   void LCD_WriteRAM_Prepare();
+  void LCD_Draw_Logo();
 };
 
 extern TFT SPI_TFT;

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
index 7d01d7ac37..4466f4d33b 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 #include <stdint.h>
 
 #define SPI_TFT_CS_H  OUT_WRITE(SPI_TFT_CS_PIN, HIGH)
 #define SPI_TFT_CS_L  OUT_WRITE(SPI_TFT_CS_PIN, LOW)
 
 #define SPI_TFT_DC_H  OUT_WRITE(SPI_TFT_DC_PIN, HIGH)

commit 642112d3eb7c1af9a52feec8134c85ed3e34891c
Author: makerbase <4164049@qq.com>
Date:   Tue Jun 16 10:05:33 2020 +0800

    Add MKS UI (TFT_LITTLE_VGL_UI) (#18071)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
new file mode 100644
index 0000000000..7d01d7ac37
--- /dev/null
+++ b/Marlin/src/lcd/extui/lib/mks_ui/SPI_TFT.h
@@ -0,0 +1,55 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#include <stdint.h>
+
+#define SPI_TFT_CS_H  OUT_WRITE(SPI_TFT_CS_PIN, HIGH)
+#define SPI_TFT_CS_L  OUT_WRITE(SPI_TFT_CS_PIN, LOW)
+
+#define SPI_TFT_DC_H  OUT_WRITE(SPI_TFT_DC_PIN, HIGH)
+#define SPI_TFT_DC_L  OUT_WRITE(SPI_TFT_DC_PIN, LOW)
+
+#define SPI_TFT_RST_H OUT_WRITE(SPI_TFT_RST_PIN, HIGH)
+#define SPI_TFT_RST_L OUT_WRITE(SPI_TFT_RST_PIN, LOW)
+
+#define SPI_TFT_BLK_H OUT_WRITE(LCD_BACKLIGHT_PIN, HIGH)
+#define SPI_TFT_BLK_L OUT_WRITE(LCD_BACKLIGHT_PIN, LOW)
+
+class TFT {
+public:
+  void spi_init(uint8_t spiRate);
+  uint8_t spi_Rec();
+  uint8_t spi_read_write_byte(uint8_t data);
+  void spi_Read(uint8_t* buf, uint16_t nbyte);
+  void spi_Send(uint8_t b);
+  void spi_SendBlock(uint8_t token, const uint8_t* buf);
+  void LCD_WR_REG(uint8_t cmd);
+  void LCD_WR_DATA(uint8_t data);
+  void SetCursor(uint16_t x, uint16_t y);
+  void SetWindows(uint16_t x, uint16_t y, uint16_t with, uint16_t height);
+  void LCD_init();
+  void LCD_clear(uint16_t color);
+  void LCD_WriteRAM_Prepare();
+};
+
+extern TFT SPI_TFT;
