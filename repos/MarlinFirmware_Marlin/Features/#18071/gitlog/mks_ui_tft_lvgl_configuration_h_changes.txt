commit a3960dfa53394f9d105cbd23dc260ed81ff884f4
Author: David Buezas <dbuezas@users.noreply.github.com>
Date:   Thu May 9 23:20:57 2024 +0200

    üö∏ New encoder logic & debounce (#26723)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
index d847cfb193..43e82bd34d 100644
--- a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
@@ -34,21 +34,20 @@
 
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
 void tft_lvgl_init();
 void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
 void lcdClear(uint16_t color);
-void lv_encoder_pin_init();
 void lv_update_encoder();
 
 lv_fs_res_t spi_flash_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
 lv_fs_res_t spi_flash_close_cb(lv_fs_drv_t * drv, void * file_p);
 lv_fs_res_t spi_flash_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
 lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
 lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
 lv_fs_res_t sd_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
 lv_fs_res_t sd_close_cb(lv_fs_drv_t * drv, void * file_p);

commit 5639237e2b174715413f9ffc6f6421db9150d9d6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jan 29 20:38:03 2024 -0600

    üé® Misc. cleanup 29-01

diff --git a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
index 80335b7370..d847cfb193 100644
--- a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
@@ -33,25 +33,21 @@
 #include <lvgl.h>
 
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
 void tft_lvgl_init();
 void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
-void LCD_Clear(uint16_t color);
-void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
-void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t height);
-void LCD_WriteRAM_Prepare();
-void lcd_draw_logo();
+void lcdClear(uint16_t color);
 void lv_encoder_pin_init();
 void lv_update_encoder();
 
 lv_fs_res_t spi_flash_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
 lv_fs_res_t spi_flash_close_cb(lv_fs_drv_t * drv, void * file_p);
 lv_fs_res_t spi_flash_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
 lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
 lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
 lv_fs_res_t sd_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);

commit c3694f1c038fa20ad749118b0a1c7aa88e3dd5f2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 14 17:24:50 2023 -0500

    üé® Lowercase methods, functions, data members (#25939)
    
    For: TFT, DGUS, MarlinUI, Anycubic, JyersUI, CrealityUI

diff --git a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
index a71bdc9db7..80335b7370 100644
--- a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
@@ -33,21 +33,21 @@
 #include <lvgl.h>
 
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
 void tft_lvgl_init();
 void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
-void LCD_Clear(uint16_t Color);
+void LCD_Clear(uint16_t color);
 void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
 void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t height);
 void LCD_WriteRAM_Prepare();
 void lcd_draw_logo();
 void lv_encoder_pin_init();
 void lv_update_encoder();
 
 lv_fs_res_t spi_flash_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
 lv_fs_res_t spi_flash_close_cb(lv_fs_drv_t * drv, void * file_p);
 lv_fs_res_t spi_flash_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);

commit 7642bfbf8b997308e691034aa294a061c5fc5426
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Wed May 3 14:19:32 2023 -0700

    üêõ Fix TFT Touch Calibration overrides (#25579)
    
    ‚Ä¶and other misc. display-related updates
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
index 0368140b28..a71bdc9db7 100644
--- a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
@@ -25,22 +25,20 @@
  * @file lcd/extui/mks_ui/tft_lvgl_configuration.h
  * @date 2020-02-21
  */
 
 #ifdef __cplusplus
   extern "C" {
 #endif
 
 #include <lvgl.h>
 
-//#define TFT_ROTATION TFT_ROTATE_180
-
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
 void tft_lvgl_init();
 void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
 void LCD_Clear(uint16_t Color);
 void tft_set_point(uint16_t x, uint16_t y, uint16_t point);

commit c79174e862f30d2a1e808c2cfc40bd8a8e819166
Author: Sola <42537573+solawc@users.noreply.github.com>
Date:   Sun Jan 16 13:07:37 2022 +0800

    ‚ö°Ô∏è SPI+DMA+interrupt method (STM32 / MKS UI) (#23464)

diff --git a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
index 0790d8323c..0368140b28 100644
--- a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
@@ -57,13 +57,15 @@ lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
 lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
 lv_fs_res_t sd_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
 lv_fs_res_t sd_close_cb(lv_fs_drv_t * drv, void * file_p);
 lv_fs_res_t sd_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
 lv_fs_res_t sd_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
 lv_fs_res_t sd_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
 void lv_fill_rect(lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2, lv_color_t bk_color);
 
+bool get_lcd_dma_lock();
+
 #ifdef __cplusplus
   } /* C-declarations for C++ */
 #endif

commit f1af475253941e4ee4cc2bdf05989c623c27a663
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 17 13:01:44 2021 -0600

    üé® Misc formatting

diff --git a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
index e2786fd452..0790d8323c 100644
--- a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
@@ -20,21 +20,21 @@
  *
  */
 #pragma once
 
 /**
  * @file lcd/extui/mks_ui/tft_lvgl_configuration.h
  * @date 2020-02-21
  */
 
 #ifdef __cplusplus
-  extern "C" { /* C-declarations for C++ */
+  extern "C" {
 #endif
 
 #include <lvgl.h>
 
 //#define TFT_ROTATION TFT_ROTATE_180
 
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
 void tft_lvgl_init();

commit 8a7673ac1e4df933cfe1a0254af03af4118e66e4
Author: luzpaz <luzpaz@users.noreply.github.com>
Date:   Sun Aug 8 03:26:54 2021 -0400

    üé® Spellcheck code (#22531)

diff --git a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
index 49f6ea0900..e2786fd452 100644
--- a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
@@ -37,21 +37,21 @@
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
 void tft_lvgl_init();
 void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
 void LCD_Clear(uint16_t Color);
 void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
-void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
+void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t height);
 void LCD_WriteRAM_Prepare();
 void lcd_draw_logo();
 void lv_encoder_pin_init();
 void lv_update_encoder();
 
 lv_fs_res_t spi_flash_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
 lv_fs_res_t spi_flash_close_cb(lv_fs_drv_t * drv, void * file_p);
 lv_fs_res_t spi_flash_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
 lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
 lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);

commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
new file mode 100644
index 0000000000..49f6ea0900
--- /dev/null
+++ b/Marlin/src/lcd/extui/mks_ui/tft_lvgl_configuration.h
@@ -0,0 +1,69 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+/**
+ * @file lcd/extui/mks_ui/tft_lvgl_configuration.h
+ * @date 2020-02-21
+ */
+
+#ifdef __cplusplus
+  extern "C" { /* C-declarations for C++ */
+#endif
+
+#include <lvgl.h>
+
+//#define TFT_ROTATION TFT_ROTATE_180
+
+extern uint8_t bmp_public_buf[14 * 1024];
+extern uint8_t public_buf[513];
+
+void tft_lvgl_init();
+void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
+bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
+bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
+
+void LCD_Clear(uint16_t Color);
+void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
+void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
+void LCD_WriteRAM_Prepare();
+void lcd_draw_logo();
+void lv_encoder_pin_init();
+void lv_update_encoder();
+
+lv_fs_res_t spi_flash_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
+lv_fs_res_t spi_flash_close_cb(lv_fs_drv_t * drv, void * file_p);
+lv_fs_res_t spi_flash_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
+lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
+lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
+
+lv_fs_res_t sd_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
+lv_fs_res_t sd_close_cb(lv_fs_drv_t * drv, void * file_p);
+lv_fs_res_t sd_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
+lv_fs_res_t sd_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
+lv_fs_res_t sd_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
+
+void lv_fill_rect(lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2, lv_color_t bk_color);
+
+#ifdef __cplusplus
+  } /* C-declarations for C++ */
+#endif
