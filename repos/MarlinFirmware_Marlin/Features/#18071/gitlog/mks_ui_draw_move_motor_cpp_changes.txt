commit 2e0bde37d77c8c0d8274d74f18cb27be2c232278
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Oct 17 22:10:08 2021 -0500

    ðŸŽ¨ Add MKS UI goto_previous_ui

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
index baa8d48da3..635421b4c3 100644
--- a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
@@ -76,22 +76,21 @@ static void event_handler(lv_obj_t *obj, lv_event_t event) {
 
   switch (obj->mks_obj_id) {
     case ID_M_STEP:
       if (ABS(10 * (int)uiCfg.move_dist) == 100)
         uiCfg.move_dist = 0.1;
       else
         uiCfg.move_dist *= 10.0f;
       disp_move_dist();
       break;
     case ID_M_RETURN:
-      clear_cur_ui();
-      draw_return_ui();
+      goto_previous_ui();
       return;
   }
   disp_cur_pos();
 }
 
 void refresh_pos(lv_task_t *) {
   switch (cur_label) {
     case 'X': cur_pos = current_position.x; break;
     case 'Y': cur_pos = current_position.y; break;
     case 'Z': cur_pos = current_position.z; break;

commit 323b38ee88dbf2a4691a20439dbb95a824822199
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 16 04:36:26 2021 -0500

    ðŸ’¡ Adjust headers, formatting

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
index 7a37dc6a15..baa8d48da3 100644
--- a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
@@ -12,20 +12,21 @@
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
+
 #include "../../../inc/MarlinConfigPre.h"
 
 #if HAS_TFT_LVGL_UI
 
 #include "draw_ui.h"
 #include <lv_conf.h>
 
 #include "../../../gcode/queue.h"
 #include "../../../module/motion.h"
 #include "../../../inc/MarlinConfig.h"

commit 84ca21edf76d1e2e4830b5fcc3b454db05cbe871
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jul 29 23:40:27 2021 -0500

    ðŸŽ¨ abs => ABS

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
index 19abb855f5..7a37dc6a15 100644
--- a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
@@ -68,21 +68,21 @@ static void event_handler(lv_obj_t *obj, lv_event_t event) {
       default: do_inject = false;
     }
     if (do_inject) {
       sprintf_P(public_buf_l, PSTR("G91\nG1 %c%s F%d\nG90"), cur_label, dtostrf(dist, 1, 3, str_1), uiCfg.moveSpeed);
       queue.inject(public_buf_l);
     }
   }
 
   switch (obj->mks_obj_id) {
     case ID_M_STEP:
-      if (abs(10 * (int)uiCfg.move_dist) == 100)
+      if (ABS(10 * (int)uiCfg.move_dist) == 100)
         uiCfg.move_dist = 0.1;
       else
         uiCfg.move_dist *= 10.0f;
       disp_move_dist();
       break;
     case ID_M_RETURN:
       clear_cur_ui();
       draw_return_ui();
       return;
   }

commit 27f5e64acf0a8b087c899db677618785028bb06f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Jul 24 15:55:45 2021 -0500

    ðŸŽ¨ NULL => nullptr

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
index 4b413c5c62..19abb855f5 100644
--- a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
@@ -112,24 +112,24 @@ void lv_draw_move_motor() {
   // button with image and label changed dynamically by disp_move_dist
   buttonV = lv_imgbtn_create(scr, nullptr, BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_M_STEP);
   labelV = lv_label_create_empty(buttonV);
   #if HAS_ROTARY_ENCODER
     if (gCfgItems.encoder_enable) lv_group_add_obj(g, buttonV);
   #endif
 
   lv_big_button_create(scr, "F:/bmp_return.bin", common_menu.text_back, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_M_RETURN);
 
   // We need to patch the title to leave some space on the right for displaying the status
-  lv_obj_t * title = lv_obj_get_child_back(scr, NULL);
-  if (title != NULL) lv_obj_set_width(title, TFT_WIDTH - 101);
+  lv_obj_t * title = lv_obj_get_child_back(scr, nullptr);
+  if (title != nullptr) lv_obj_set_width(title, TFT_WIDTH - 101);
   labelP = lv_label_create(scr, TFT_WIDTH - 100, TITLE_YPOS, "Z:0.0mm");
-  if (labelP != NULL)
+  if (labelP != nullptr)
     updatePosTask = lv_task_create(refresh_pos, 300, LV_TASK_PRIO_LOWEST, 0);
 
   disp_move_dist();
   disp_cur_pos();
 }
 
 void disp_move_dist() {
   if ((int)(10 * uiCfg.move_dist) == 1)
     lv_imgbtn_set_src_both(buttonV, "F:/bmp_step_move0_1.bin");
   else if ((int)(10 * uiCfg.move_dist) == 10)

commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
new file mode 100644
index 0000000000..4b413c5c62
--- /dev/null
+++ b/Marlin/src/lcd/extui/mks_ui/draw_move_motor.cpp
@@ -0,0 +1,164 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#include "../../../inc/MarlinConfigPre.h"
+
+#if HAS_TFT_LVGL_UI
+
+#include "draw_ui.h"
+#include <lv_conf.h>
+
+#include "../../../gcode/queue.h"
+#include "../../../module/motion.h"
+#include "../../../inc/MarlinConfig.h"
+
+extern lv_group_t *g;
+static lv_obj_t *scr;
+
+static lv_obj_t *labelV, *buttonV, *labelP;
+static lv_task_t *updatePosTask;
+static char cur_label = 'Z';
+static float cur_pos = 0;
+
+enum {
+  ID_M_X_P = 1,
+  ID_M_X_N,
+  ID_M_Y_P,
+  ID_M_Y_N,
+  ID_M_Z_P,
+  ID_M_Z_N,
+  ID_M_STEP,
+  ID_M_RETURN
+};
+
+void disp_cur_pos() {
+  char str_1[16];
+  sprintf_P(public_buf_l, PSTR("%c:%s mm"), cur_label, dtostrf(cur_pos, 1, 1, str_1));
+  if (labelP) lv_label_set_text(labelP, public_buf_l);
+}
+
+static void event_handler(lv_obj_t *obj, lv_event_t event) {
+  char str_1[16];
+  if (event != LV_EVENT_RELEASED) return;
+  if (!queue.ring_buffer.full(3)) {
+    bool do_inject = true;
+    float dist = uiCfg.move_dist;
+    switch (obj->mks_obj_id) {
+      case ID_M_X_N: dist *= -1; case ID_M_X_P: cur_label = 'X'; break;
+      case ID_M_Y_N: dist *= -1; case ID_M_Y_P: cur_label = 'Y'; break;
+      case ID_M_Z_N: dist *= -1; case ID_M_Z_P: cur_label = 'Z'; break;
+      default: do_inject = false;
+    }
+    if (do_inject) {
+      sprintf_P(public_buf_l, PSTR("G91\nG1 %c%s F%d\nG90"), cur_label, dtostrf(dist, 1, 3, str_1), uiCfg.moveSpeed);
+      queue.inject(public_buf_l);
+    }
+  }
+
+  switch (obj->mks_obj_id) {
+    case ID_M_STEP:
+      if (abs(10 * (int)uiCfg.move_dist) == 100)
+        uiCfg.move_dist = 0.1;
+      else
+        uiCfg.move_dist *= 10.0f;
+      disp_move_dist();
+      break;
+    case ID_M_RETURN:
+      clear_cur_ui();
+      draw_return_ui();
+      return;
+  }
+  disp_cur_pos();
+}
+
+void refresh_pos(lv_task_t *) {
+  switch (cur_label) {
+    case 'X': cur_pos = current_position.x; break;
+    case 'Y': cur_pos = current_position.y; break;
+    case 'Z': cur_pos = current_position.z; break;
+    default: return;
+  }
+  disp_cur_pos();
+}
+
+void lv_draw_move_motor() {
+  scr = lv_screen_create(MOVE_MOTOR_UI);
+  lv_obj_t *buttonXI = lv_big_button_create(scr, "F:/bmp_xAdd.bin", move_menu.x_add, INTERVAL_V, titleHeight, event_handler, ID_M_X_P);
+  lv_obj_clear_protect(buttonXI, LV_PROTECT_FOLLOW);
+  lv_big_button_create(scr, "F:/bmp_xDec.bin", move_menu.x_dec, INTERVAL_V, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_M_X_N);
+  lv_big_button_create(scr, "F:/bmp_yAdd.bin", move_menu.y_add, BTN_X_PIXEL + INTERVAL_V * 2, titleHeight, event_handler, ID_M_Y_P);
+  lv_big_button_create(scr, "F:/bmp_yDec.bin", move_menu.y_dec, BTN_X_PIXEL + INTERVAL_V * 2, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_M_Y_N);
+  lv_big_button_create(scr, "F:/bmp_zAdd.bin", move_menu.z_add, BTN_X_PIXEL * 2 + INTERVAL_V * 3, titleHeight, event_handler, ID_M_Z_P);
+  lv_big_button_create(scr, "F:/bmp_zDec.bin", move_menu.z_dec, BTN_X_PIXEL * 2 + INTERVAL_V * 3, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_M_Z_N);
+
+  // button with image and label changed dynamically by disp_move_dist
+  buttonV = lv_imgbtn_create(scr, nullptr, BTN_X_PIXEL * 3 + INTERVAL_V * 4, titleHeight, event_handler, ID_M_STEP);
+  labelV = lv_label_create_empty(buttonV);
+  #if HAS_ROTARY_ENCODER
+    if (gCfgItems.encoder_enable) lv_group_add_obj(g, buttonV);
+  #endif
+
+  lv_big_button_create(scr, "F:/bmp_return.bin", common_menu.text_back, BTN_X_PIXEL * 3 + INTERVAL_V * 4, BTN_Y_PIXEL + INTERVAL_H + titleHeight, event_handler, ID_M_RETURN);
+
+  // We need to patch the title to leave some space on the right for displaying the status
+  lv_obj_t * title = lv_obj_get_child_back(scr, NULL);
+  if (title != NULL) lv_obj_set_width(title, TFT_WIDTH - 101);
+  labelP = lv_label_create(scr, TFT_WIDTH - 100, TITLE_YPOS, "Z:0.0mm");
+  if (labelP != NULL)
+    updatePosTask = lv_task_create(refresh_pos, 300, LV_TASK_PRIO_LOWEST, 0);
+
+  disp_move_dist();
+  disp_cur_pos();
+}
+
+void disp_move_dist() {
+  if ((int)(10 * uiCfg.move_dist) == 1)
+    lv_imgbtn_set_src_both(buttonV, "F:/bmp_step_move0_1.bin");
+  else if ((int)(10 * uiCfg.move_dist) == 10)
+    lv_imgbtn_set_src_both(buttonV, "F:/bmp_step_move1.bin");
+  else if ((int)(10 * uiCfg.move_dist) == 100)
+    lv_imgbtn_set_src_both(buttonV, "F:/bmp_step_move10.bin");
+
+  if (gCfgItems.multiple_language) {
+    if ((int)(10 * uiCfg.move_dist) == 1) {
+      lv_label_set_text(labelV, move_menu.step_01mm);
+      lv_obj_align(labelV, buttonV, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    }
+    else if ((int)(10 * uiCfg.move_dist) == 10) {
+      lv_label_set_text(labelV, move_menu.step_1mm);
+      lv_obj_align(labelV, buttonV, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    }
+    else if ((int)(10 * uiCfg.move_dist) == 100) {
+      lv_label_set_text(labelV, move_menu.step_10mm);
+      lv_obj_align(labelV, buttonV, LV_ALIGN_IN_BOTTOM_MID, 0, BUTTON_TEXT_Y_OFFSET);
+    }
+  }
+}
+
+void lv_clear_move_motor() {
+  #if HAS_ROTARY_ENCODER
+    if (gCfgItems.encoder_enable) lv_group_remove_all_objs(g);
+  #endif
+  lv_task_del(updatePosTask);
+  lv_obj_del(scr);
+}
+
+#endif // HAS_TFT_LVGL_UI
