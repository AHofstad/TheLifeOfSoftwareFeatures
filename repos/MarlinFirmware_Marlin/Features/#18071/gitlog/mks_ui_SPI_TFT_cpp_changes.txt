commit 4cddc61eda70d9e78ef7767fc052995855e34a79
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Mon Jan 8 03:18:18 2024 +0300

    üêõ Fix SPI TFT for STM32F1/F4 (#26052)

diff --git a/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp b/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
index 6cbe13e9fd..236ff3f615 100644
--- a/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
@@ -56,23 +56,21 @@ void TFT::lcdInit() {
   tftio.initTFT();
   #if PIN_EXISTS(TFT_BACKLIGHT)
     OUT_WRITE(TFT_BACKLIGHT_PIN, LOW);
   #endif
   delay(100);
   lcdClear(0x0000);
   lcdDrawLogo();
   #if PIN_EXISTS(TFT_BACKLIGHT)
     OUT_WRITE(TFT_BACKLIGHT_PIN, HIGH);
   #endif
-  #if HAS_LOGO_IN_FLASH
-    delay(2000);
-  #endif
+  TERN_(HAS_LOGO_IN_FLASH, delay(2000));
 }
 
 void TFT::lcdClear(uint16_t color) {
   setWindow(0, 0, TFT_WIDTH, TFT_HEIGHT);
   tftio.writeMultiple(color, uint32_t(TFT_WIDTH) * uint32_t(TFT_HEIGHT));
 }
 
 void TFT::lcdDrawLogo() {
   #if HAS_LOGO_IN_FLASH
     setWindow(0, 0, TFT_WIDTH, TFT_HEIGHT);

commit c3694f1c038fa20ad749118b0a1c7aa88e3dd5f2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 14 17:24:50 2023 -0500

    üé® Lowercase methods, functions, data members (#25939)
    
    For: TFT, DGUS, MarlinUI, Anycubic, JyersUI, CrealityUI

diff --git a/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp b/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
index 42abd4bf64..6cbe13e9fd 100644
--- a/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
@@ -30,57 +30,57 @@
 
 #include "../../../inc/MarlinConfig.h"
 
 #include <SPI.h>
 
 #include "draw_ui.h"
 
 TFT SPI_TFT;
 
 // use SPI1 for the spi tft.
-void TFT::spi_init(uint8_t spiRate) {
-  tftio.Init();
+void TFT::spiInit(uint8_t spiRate) {
+  tftio.init();
 }
 
-void TFT::SetPoint(uint16_t x, uint16_t y, uint16_t point) {
+void TFT::setPoint(uint16_t x, uint16_t y, uint16_t point) {
   if ((x > 480) || (y > 320)) return;
 
   setWindow(x, y, 1, 1);
-  tftio.WriteMultiple(point, (uint16_t)1);
+  tftio.writeMultiple(point, (uint16_t)1);
 }
 
 void TFT::setWindow(uint16_t x, uint16_t y, uint16_t with, uint16_t height) {
   tftio.set_window(x, y, (x + with - 1), (y + height - 1));
 }
 
-void TFT::LCD_init() {
-  tftio.InitTFT();
+void TFT::lcdInit() {
+  tftio.initTFT();
   #if PIN_EXISTS(TFT_BACKLIGHT)
     OUT_WRITE(TFT_BACKLIGHT_PIN, LOW);
   #endif
   delay(100);
-  LCD_clear(0x0000);
-  LCD_Draw_Logo();
+  lcdClear(0x0000);
+  lcdDrawLogo();
   #if PIN_EXISTS(TFT_BACKLIGHT)
     OUT_WRITE(TFT_BACKLIGHT_PIN, HIGH);
   #endif
   #if HAS_LOGO_IN_FLASH
     delay(2000);
   #endif
 }
 
-void TFT::LCD_clear(uint16_t color) {
+void TFT::lcdClear(uint16_t color) {
   setWindow(0, 0, TFT_WIDTH, TFT_HEIGHT);
-  tftio.WriteMultiple(color, uint32_t(TFT_WIDTH) * uint32_t(TFT_HEIGHT));
+  tftio.writeMultiple(color, uint32_t(TFT_WIDTH) * uint32_t(TFT_HEIGHT));
 }
 
-void TFT::LCD_Draw_Logo() {
+void TFT::lcdDrawLogo() {
   #if HAS_LOGO_IN_FLASH
     setWindow(0, 0, TFT_WIDTH, TFT_HEIGHT);
     for (uint16_t i = 0; i < (TFT_HEIGHT); i++) {
-      Pic_Logo_Read((uint8_t *)"", (uint8_t *)bmp_public_buf, (TFT_WIDTH) * 2);
-      tftio.WriteSequence((uint16_t *)bmp_public_buf, TFT_WIDTH);
+      picLogoRead((uint8_t *)"", (uint8_t *)bmp_public_buf, (TFT_WIDTH) * 2);
+      tftio.writeSequence((uint16_t *)bmp_public_buf, TFT_WIDTH);
     }
   #endif
 }
 
 #endif // HAS_TFT_LVGL_UI

commit 8df3e62c89f94f68465ac30e276333940e069ff7
Author: Sola <42537573+solawc@users.noreply.github.com>
Date:   Thu Sep 16 19:48:24 2021 +0800

    üö∏ Fix and improve MKS LVGL UI (#22783)
    
    Co-authored-by: makerbase <4164049@qq.com>
    Co-authored-by: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp b/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
index 68e4d9de04..42abd4bf64 100644
--- a/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
+++ b/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
@@ -62,25 +62,25 @@ void TFT::LCD_init() {
   LCD_Draw_Logo();
   #if PIN_EXISTS(TFT_BACKLIGHT)
     OUT_WRITE(TFT_BACKLIGHT_PIN, HIGH);
   #endif
   #if HAS_LOGO_IN_FLASH
     delay(2000);
   #endif
 }
 
 void TFT::LCD_clear(uint16_t color) {
-  setWindow(0, 0, (TFT_WIDTH), (TFT_HEIGHT));
-  tftio.WriteMultiple(color, (uint32_t)(TFT_WIDTH) * (TFT_HEIGHT));
+  setWindow(0, 0, TFT_WIDTH, TFT_HEIGHT);
+  tftio.WriteMultiple(color, uint32_t(TFT_WIDTH) * uint32_t(TFT_HEIGHT));
 }
 
 void TFT::LCD_Draw_Logo() {
   #if HAS_LOGO_IN_FLASH
     setWindow(0, 0, TFT_WIDTH, TFT_HEIGHT);
-    for (uint16_t i = 0; i < (TFT_HEIGHT); i ++) {
+    for (uint16_t i = 0; i < (TFT_HEIGHT); i++) {
       Pic_Logo_Read((uint8_t *)"", (uint8_t *)bmp_public_buf, (TFT_WIDTH) * 2);
       tftio.WriteSequence((uint16_t *)bmp_public_buf, TFT_WIDTH);
     }
   #endif
 }
 
 #endif // HAS_TFT_LVGL_UI

commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp b/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
new file mode 100644
index 0000000000..68e4d9de04
--- /dev/null
+++ b/Marlin/src/lcd/extui/mks_ui/SPI_TFT.cpp
@@ -0,0 +1,86 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../../inc/MarlinConfigPre.h"
+
+#if HAS_TFT_LVGL_UI
+
+#include "SPI_TFT.h"
+#include "pic_manager.h"
+#include "tft_lvgl_configuration.h"
+
+#include "../../../inc/MarlinConfig.h"
+
+#include <SPI.h>
+
+#include "draw_ui.h"
+
+TFT SPI_TFT;
+
+// use SPI1 for the spi tft.
+void TFT::spi_init(uint8_t spiRate) {
+  tftio.Init();
+}
+
+void TFT::SetPoint(uint16_t x, uint16_t y, uint16_t point) {
+  if ((x > 480) || (y > 320)) return;
+
+  setWindow(x, y, 1, 1);
+  tftio.WriteMultiple(point, (uint16_t)1);
+}
+
+void TFT::setWindow(uint16_t x, uint16_t y, uint16_t with, uint16_t height) {
+  tftio.set_window(x, y, (x + with - 1), (y + height - 1));
+}
+
+void TFT::LCD_init() {
+  tftio.InitTFT();
+  #if PIN_EXISTS(TFT_BACKLIGHT)
+    OUT_WRITE(TFT_BACKLIGHT_PIN, LOW);
+  #endif
+  delay(100);
+  LCD_clear(0x0000);
+  LCD_Draw_Logo();
+  #if PIN_EXISTS(TFT_BACKLIGHT)
+    OUT_WRITE(TFT_BACKLIGHT_PIN, HIGH);
+  #endif
+  #if HAS_LOGO_IN_FLASH
+    delay(2000);
+  #endif
+}
+
+void TFT::LCD_clear(uint16_t color) {
+  setWindow(0, 0, (TFT_WIDTH), (TFT_HEIGHT));
+  tftio.WriteMultiple(color, (uint32_t)(TFT_WIDTH) * (TFT_HEIGHT));
+}
+
+void TFT::LCD_Draw_Logo() {
+  #if HAS_LOGO_IN_FLASH
+    setWindow(0, 0, TFT_WIDTH, TFT_HEIGHT);
+    for (uint16_t i = 0; i < (TFT_HEIGHT); i ++) {
+      Pic_Logo_Read((uint8_t *)"", (uint8_t *)bmp_public_buf, (TFT_WIDTH) * 2);
+      tftio.WriteSequence((uint16_t *)bmp_public_buf, TFT_WIDTH);
+    }
+  #endif
+}
+
+#endif // HAS_TFT_LVGL_UI
