commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
deleted file mode 100644
index 308162b799..0000000000
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ /dev/null
@@ -1,69 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- */
-#pragma once
-
-/**
- * @file lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
- * @date 2020-02-21
- */
-
-#ifdef __cplusplus
-  extern "C" { /* C-declarations for C++ */
-#endif
-
-#include <lvgl.h>
-
-//#define TFT_ROTATION TFT_ROTATE_180
-
-extern uint8_t bmp_public_buf[14 * 1024];
-extern uint8_t public_buf[513];
-
-void tft_lvgl_init();
-void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
-bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
-bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
-
-void LCD_Clear(uint16_t Color);
-void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
-void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
-void LCD_WriteRAM_Prepare();
-void lcd_draw_logo();
-void lv_encoder_pin_init();
-void lv_update_encoder();
-
-lv_fs_res_t spi_flash_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
-lv_fs_res_t spi_flash_close_cb(lv_fs_drv_t * drv, void * file_p);
-lv_fs_res_t spi_flash_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
-lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
-lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
-
-lv_fs_res_t sd_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
-lv_fs_res_t sd_close_cb(lv_fs_drv_t * drv, void * file_p);
-lv_fs_res_t sd_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
-lv_fs_res_t sd_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
-lv_fs_res_t sd_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
-
-void lv_fill_rect(lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2, lv_color_t bk_color);
-
-#ifdef __cplusplus
-  } /* C-declarations for C++ */
-#endif

commit c2b72c0e73a59c7b0915253c775eb6253032f0b0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 2 14:22:43 2021 -0500

    Remove extraneous 'extern' hints (#21516)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index d0ea4e376f..308162b799 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -30,40 +30,40 @@
   extern "C" { /* C-declarations for C++ */
 #endif
 
 #include <lvgl.h>
 
 //#define TFT_ROTATION TFT_ROTATE_180
 
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
-extern void tft_lvgl_init();
-extern void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
-extern bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
-extern bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
+void tft_lvgl_init();
+void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
+bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
+bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
-extern void LCD_Clear(uint16_t Color);
-extern void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
-extern void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
-extern void LCD_WriteRAM_Prepare();
-extern void lcd_draw_logo();
-extern void lv_encoder_pin_init();
-extern void lv_update_encoder();
+void LCD_Clear(uint16_t Color);
+void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
+void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
+void LCD_WriteRAM_Prepare();
+void lcd_draw_logo();
+void lv_encoder_pin_init();
+void lv_update_encoder();
 
-extern lv_fs_res_t spi_flash_open_cb (lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
-extern lv_fs_res_t spi_flash_close_cb (lv_fs_drv_t * drv, void * file_p);
-extern lv_fs_res_t spi_flash_read_cb (lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
-extern lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
-extern lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
+lv_fs_res_t spi_flash_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
+lv_fs_res_t spi_flash_close_cb(lv_fs_drv_t * drv, void * file_p);
+lv_fs_res_t spi_flash_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
+lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
+lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
-extern lv_fs_res_t sd_open_cb (lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
-extern lv_fs_res_t sd_close_cb (lv_fs_drv_t * drv, void * file_p);
-extern lv_fs_res_t sd_read_cb (lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
-extern lv_fs_res_t sd_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
-extern lv_fs_res_t sd_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
+lv_fs_res_t sd_open_cb(lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
+lv_fs_res_t sd_close_cb(lv_fs_drv_t * drv, void * file_p);
+lv_fs_res_t sd_read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
+lv_fs_res_t sd_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
+lv_fs_res_t sd_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
-extern void lv_fill_rect(lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2, lv_color_t bk_color);
+void lv_fill_rect(lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2, lv_color_t bk_color);
 
 #ifdef __cplusplus
   } /* C-declarations for C++ */
 #endif

commit c753fc690f6cdd181213304224eee029988ffd34
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jan 14 00:23:56 2021 -0600

    More MKS UI prelim. cleanup

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index 0d4ea1f404..d0ea4e376f 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -30,32 +30,29 @@
   extern "C" { /* C-declarations for C++ */
 #endif
 
 #include <lvgl.h>
 
 //#define TFT_ROTATION TFT_ROTATE_180
 
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
-extern uint8_t bmp_public_buf[14 * 1024];
-extern uint8_t public_buf[513];
-
 extern void tft_lvgl_init();
 extern void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 extern bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 extern bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
 extern void LCD_Clear(uint16_t Color);
 extern void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
 extern void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
-extern void LCD_WriteRAM_Prepare(void);
+extern void LCD_WriteRAM_Prepare();
 extern void lcd_draw_logo();
 extern void lv_encoder_pin_init();
 extern void lv_update_encoder();
 
 extern lv_fs_res_t spi_flash_open_cb (lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
 extern lv_fs_res_t spi_flash_close_cb (lv_fs_drv_t * drv, void * file_p);
 extern lv_fs_res_t spi_flash_read_cb (lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
 extern lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
 extern lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 

commit 35c1b330ec62e698a455176330e7d75600af461d
Author: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
Date:   Thu Jan 14 12:41:09 2021 +0800

    MKS WiFi for TFT_LVGL_UI (#20191)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index 20fa3242e6..0d4ea1f404 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -26,21 +26,23 @@
  * @date 2020-02-21
  */
 
 #ifdef __cplusplus
   extern "C" { /* C-declarations for C++ */
 #endif
 
 #include <lvgl.h>
 
 //#define TFT_ROTATION TFT_ROTATE_180
-#define MKS_WIFI_MODULE 0
+
+extern uint8_t bmp_public_buf[14 * 1024];
+extern uint8_t public_buf[513];
 
 extern uint8_t bmp_public_buf[14 * 1024];
 extern uint8_t public_buf[513];
 
 extern void tft_lvgl_init();
 extern void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 extern bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 extern bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
 extern void LCD_Clear(uint16_t Color);
@@ -56,13 +58,15 @@ extern lv_fs_res_t spi_flash_close_cb (lv_fs_drv_t * drv, void * file_p);
 extern lv_fs_res_t spi_flash_read_cb (lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
 extern lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
 extern lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
 extern lv_fs_res_t sd_open_cb (lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
 extern lv_fs_res_t sd_close_cb (lv_fs_drv_t * drv, void * file_p);
 extern lv_fs_res_t sd_read_cb (lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
 extern lv_fs_res_t sd_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
 extern lv_fs_res_t sd_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
+extern void lv_fill_rect(lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2, lv_color_t bk_color);
+
 #ifdef __cplusplus
   } /* C-declarations for C++ */
 #endif

commit 44c57ab05a8f909b85f51e08c90316b41e50c455
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jan 12 21:02:35 2021 -0600

    MKS UI prelim. cleanup (#20763)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index df28893f41..20fa3242e6 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -28,20 +28,23 @@
 
 #ifdef __cplusplus
   extern "C" { /* C-declarations for C++ */
 #endif
 
 #include <lvgl.h>
 
 //#define TFT_ROTATION TFT_ROTATE_180
 #define MKS_WIFI_MODULE 0
 
+extern uint8_t bmp_public_buf[14 * 1024];
+extern uint8_t public_buf[513];
+
 extern void tft_lvgl_init();
 extern void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 extern bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 extern bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
 extern void LCD_Clear(uint16_t Color);
 extern void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
 extern void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
 extern void LCD_WriteRAM_Prepare(void);
 extern void lcd_draw_logo();

commit 3893114c86c195d227e023c9e702197b54b2636f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Nov 19 15:51:53 2020 -0600

    MKS WiFi preliminary changes

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index 727ab33aea..df28893f41 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -26,21 +26,21 @@
  * @date 2020-02-21
  */
 
 #ifdef __cplusplus
   extern "C" { /* C-declarations for C++ */
 #endif
 
 #include <lvgl.h>
 
 //#define TFT_ROTATION TFT_ROTATE_180
-#define USE_WIFI_FUNCTION 0
+#define MKS_WIFI_MODULE 0
 
 extern void tft_lvgl_init();
 extern void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 extern bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 extern bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
 extern void LCD_Clear(uint16_t Color);
 extern void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
 extern void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
 extern void LCD_WriteRAM_Prepare(void);

commit c0920bbf6a2490b7ea66d2a9e828c0f527a6c77b
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Mon Oct 12 18:38:07 2020 -0300

    TFT Refactoring (#19192)
    
    * split tft folder in two: tft for color ui; tft_io for shared tft code
    
    * after the files got moved, now the code was moved to the right place
    
    * classic ui using TFT IO init lcd codes
    
    * feature to compile tft_io when enabled
    
    * compiling fix
    
    * lvgl spi tft working with tft io init codes
    
    * there is no need for separeted fsmc and spi class in lvgl anymore, as tft io handle everything
    
    * remove debug
    
    * base for TFT rotation and mirroring API, and ILI9488 support
    
    * ST7796S rotate and mirror support
    
    * ST7789V rotate and mirror support
    
    * ST7735 rotate and mirror support
    
    * ILI9341 rotate and mirror support
    
    * ILI9328 rotate and mirror support
    
    * R61505 rotate and mirror support
    
    * MKS TFT definitions
    
    * more configs for mks tfts
    
    * update config
    
    * naming typo
    
    * to configure the user interface
    
    * ANYCUBIC_TFT35
    
    * tft configs
    
    * support for SSD1963
    
    * tft display types
    
    * updated conditionals lcd; first board fully working with the new code - all 3 ui!
    
    * compatiblity
    
    * changed name
    
    * move classic ui file name
    
    * rename TURN -> ROTATE
    
    * GRAPHICAL_TFT_ROTATE_180 deprecated
    
    * first fsmc board fully working - chitu v5
    
    * mks robin nano v1.2 + tft 35 ok!
    
    * right pin name
    
    * anycubic tft tested in a TRIGORILLA_PRO
    
    * chitu v6
    
    * nano 32 tft orientation
    
    * mks tft43
    
    * mks tft43 rotation
    
    * fixed LONGER LK tft setup
    
    * GRAPHICAL_TFT_UPSCALE defined by the display type
    
    * better offsets defaults
    
    * Update Configuration.h
    
    * Update tft_fsmc.cpp
    
    * Update Conditionals_LCD.h
    
    * Tweak comments
    
    * update nano tests
    
    * Revert "update nano tests"
    
    This reverts commit a071ebbfad30e28855a4a5695ec8a726542a1a65.
    
    * default tft
    
    * outdated comments
    
    * to not break non-vscode builds
    
    * upscale tft 35
    
    * support tft 180 rotation for color ui
    
    * Each TFT Driver is responsible for its default color mode.
    
    * use auto detect in mks displays, because some of them could be shipped with diferent drivers
    
    * extra s
    
    * unused code
    
    * wrong -1
    
    * missing mirror options
    
    * Smaller regex pattern
    
    * Comment updates
    
    * Clean up old defines
    
    * Apply pins formatting
    
    * GRAPHICAL_TFT_ROTATE_180 => TFT_ROTATE_180
    
    * MKS_ROBIN_TFT_V1_1R
    
    * merge fix
    
    * correct resolution
    
    * auto is default, dont need be there, and it will allow the user to configure it even for named displays
    
    * to not use rotation with MKS_ROBIN_TFT_V1_1R
    
    * i like () in macros
    
    * avoid sleepy commits
    
    * default for st7789 is rgb
    
    * nano follow up
    
    * to allow ili9328 rotation
    
    * default is rgb
    
    * boards merge follow up
    
    * to match bootloader orientation
    
    * HAS_TOUCH_XPT2046 is not hal specific anymore
    
    * lets not forget LPC
    
    * 180 rotation for ili9328 and R61505
    
    * Clean up whitespace
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index 7e24f948fd..727ab33aea 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -25,21 +25,21 @@
  * @file lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
  * @date 2020-02-21
  */
 
 #ifdef __cplusplus
   extern "C" { /* C-declarations for C++ */
 #endif
 
 #include <lvgl.h>
 
-//#define GRAPHICAL_TFT_ROTATE_180
+//#define TFT_ROTATION TFT_ROTATE_180
 #define USE_WIFI_FUNCTION 0
 
 extern void tft_lvgl_init();
 extern void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 extern bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 extern bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
 
 extern void LCD_Clear(uint16_t Color);
 extern void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
 extern void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);

commit d8ed74904559aa8bdccc8b68acbccfbf1bf779d3
Author: makerbase <4164049@qq.com>
Date:   Mon Sep 21 09:55:02 2020 +0800

    Add MKS Robin E3P, improve LVGL UI (#19442)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index 1b33d6e6bf..7e24f948fd 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -15,32 +15,51 @@
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
- * @file tft_lvgl_configuration.h
- * @date    2020-02-21
- * */
+ * @file lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+ * @date 2020-02-21
+ */
 
-//#ifdef __cplusplus
-//extern "C" {
-//#endif
+#ifdef __cplusplus
+  extern "C" { /* C-declarations for C++ */
+#endif
 
 #include <lvgl.h>
 
-void tft_lvgl_init();
-void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
-bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
+//#define GRAPHICAL_TFT_ROTATE_180
+#define USE_WIFI_FUNCTION 0
+
+extern void tft_lvgl_init();
+extern void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
+extern bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
+extern bool my_mousewheel_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
+
+extern void LCD_Clear(uint16_t Color);
+extern void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
+extern void LCD_setWindowArea(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
+extern void LCD_WriteRAM_Prepare(void);
+extern void lcd_draw_logo();
+extern void lv_encoder_pin_init();
+extern void lv_update_encoder();
+
+extern lv_fs_res_t spi_flash_open_cb (lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
+extern lv_fs_res_t spi_flash_close_cb (lv_fs_drv_t * drv, void * file_p);
+extern lv_fs_res_t spi_flash_read_cb (lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
+extern lv_fs_res_t spi_flash_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
+extern lv_fs_res_t spi_flash_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
-void LCD_Clear(uint16_t Color);
-void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
-void ili9320_SetWindows(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
-void LCD_WriteRAM_Prepare(void);
+extern lv_fs_res_t sd_open_cb (lv_fs_drv_t * drv, void * file_p, const char * path, lv_fs_mode_t mode);
+extern lv_fs_res_t sd_close_cb (lv_fs_drv_t * drv, void * file_p);
+extern lv_fs_res_t sd_read_cb (lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);
+extern lv_fs_res_t sd_seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos);
+extern lv_fs_res_t sd_tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);
 
-//#ifdef __cplusplus
-//} /* extern "C" */
-//#endif
+#ifdef __cplusplus
+  } /* C-declarations for C++ */
+#endif

commit d20d4591321aa467c062f0050355d2aca84e03ad
Author: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
Date:   Sat Jul 25 13:52:07 2020 +0800

    Robin nano V2, TFT LVGL UI parameters, and more (#18500)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index 81ff4b1b03..1b33d6e6bf 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -23,21 +23,21 @@
 
 /**
  * @file tft_lvgl_configuration.h
  * @date    2020-02-21
  * */
 
 //#ifdef __cplusplus
 //extern "C" {
 //#endif
 
-#include "lvgl.h"
+#include <lvgl.h>
 
 void tft_lvgl_init();
 void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
 bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
 
 void LCD_Clear(uint16_t Color);
 void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
 void ili9320_SetWindows(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
 void LCD_WriteRAM_Prepare(void);
 

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
index c1e40e77f3..81ff4b1b03 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once
 
 /**
  * @file tft_lvgl_configuration.h
  * @date    2020-02-21
  * */
 
 //#ifdef __cplusplus

commit 642112d3eb7c1af9a52feec8134c85ed3e34891c
Author: makerbase <4164049@qq.com>
Date:   Tue Jun 16 10:05:33 2020 +0800

    Add MKS UI (TFT_LITTLE_VGL_UI) (#18071)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
new file mode 100644
index 0000000000..c1e40e77f3
--- /dev/null
+++ b/Marlin/src/lcd/extui/lib/mks_ui/tft_lvgl_configuration.h
@@ -0,0 +1,46 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+/**
+ * @file tft_lvgl_configuration.h
+ * @date    2020-02-21
+ * */
+
+//#ifdef __cplusplus
+//extern "C" {
+//#endif
+
+#include "lvgl.h"
+
+void tft_lvgl_init();
+void my_disp_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
+bool my_touchpad_read(lv_indev_drv_t * indev_driver, lv_indev_data_t * data);
+
+void LCD_Clear(uint16_t Color);
+void tft_set_point(uint16_t x, uint16_t y, uint16_t point);
+void ili9320_SetWindows(uint16_t StartX, uint16_t StartY, uint16_t width, uint16_t heigh);
+void LCD_WriteRAM_Prepare(void);
+
+//#ifdef __cplusplus
+//} /* extern "C" */
+//#endif
