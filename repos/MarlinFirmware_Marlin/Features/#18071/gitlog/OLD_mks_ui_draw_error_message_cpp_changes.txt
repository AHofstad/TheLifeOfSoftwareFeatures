commit 8d9021e8069c0550e9a31107adf44b9112b87471
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 6 04:17:59 2021 -0500

    Move ExtUI subfolders up a level (#21820)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
deleted file mode 100644
index bdae725cbb..0000000000
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ /dev/null
@@ -1,46 +0,0 @@
-/**
- * Marlin 3D Printer Firmware
- * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
- *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <https://www.gnu.org/licenses/>.
- *
- */
-#include "../../../../inc/MarlinConfigPre.h"
-
-#if HAS_TFT_LVGL_UI
-
-#include "draw_ui.h"
-#include <lv_conf.h>
-
-#include "tft_lvgl_configuration.h"
-
-#include "SPI_TFT.h"
-#include "mks_hardware_test.h"
-#include "../../../../inc/MarlinConfig.h"
-
-static lv_obj_t *scr;
-
-void lv_draw_error_message(PGM_P const msg) {
-  SPI_TFT.LCD_clear(0x0000);
-  if (msg) disp_string((TFT_WIDTH - strlen(msg) * 16) / 2, 100, msg, 0xFFFF, 0x0000);
-  disp_string((TFT_WIDTH - strlen("PRINTER HALTED") * 16) / 2, 140, "PRINTER HALTED", 0xFFFF, 0x0000);
-  disp_string((TFT_WIDTH - strlen("Please Reset") * 16) / 2, 180, "Please Reset", 0xFFFF, 0x0000);
-}
-
-void lv_clear_error_message() { lv_obj_del(scr); }
-
-#endif // HAS_TFT_LVGL_UI

commit 44c57ab05a8f909b85f51e08c90316b41e50c455
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jan 12 21:02:35 2021 -0600

    MKS UI prelim. cleanup (#20763)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index a484f14087..bdae725cbb 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -20,50 +20,27 @@
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
 #if HAS_TFT_LVGL_UI
 
 #include "draw_ui.h"
 #include <lv_conf.h>
 
 #include "tft_lvgl_configuration.h"
-//#include "../lvgl/src/lv_objx/lv_imgbtn.h"
-//#include "../lvgl/src/lv_objx/lv_img.h"
-//#include "../lvgl/src/lv_core/lv_disp.h"
-//#include "../lvgl/src/lv_core/lv_refr.h"
 
 #include "SPI_TFT.h"
 #include "mks_hardware_test.h"
 #include "../../../../inc/MarlinConfig.h"
 
 static lv_obj_t *scr;
 
 void lv_draw_error_message(PGM_P const msg) {
-  #if 0
-    static lv_obj_t *message = nullptr, *kill_message = nullptr, *reset_tips = nullptr;
-
-    scr = lv_screen_create(ERROR_MESSAGE_UI, "");
-
-    if (msg) {
-      message = lv_label_create(scr, msg);
-      lv_obj_align(message, nullptr, LV_ALIGN_CENTER, 0, -50);
-    }
-
-    kill_message = lv_label_create(scr, "PRINTER HALTED");
-    lv_obj_align(kill_message, nullptr, LV_ALIGN_CENTER, 0, -10);
-
-    reset_tips = lv_label_create(scr, "Please Reset");
-    lv_obj_align(reset_tips, nullptr, LV_ALIGN_CENTER, 0, 30);
-
-    lv_task_handler();
-  #endif
-
   SPI_TFT.LCD_clear(0x0000);
   if (msg) disp_string((TFT_WIDTH - strlen(msg) * 16) / 2, 100, msg, 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("PRINTER HALTED") * 16) / 2, 140, "PRINTER HALTED", 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("Please Reset") * 16) / 2, 180, "Please Reset", 0xFFFF, 0x0000);
 }
 
 void lv_clear_error_message() { lv_obj_del(scr); }
 
 #endif // HAS_TFT_LVGL_UI

commit 853d01de683ab3efcbb15ef95db869e279053ee0
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Oct 24 19:28:31 2020 -0300

    More LVGL UI code reduction (#19879)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index e82229c909..a484f14087 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -34,29 +34,22 @@
 
 #include "SPI_TFT.h"
 #include "mks_hardware_test.h"
 #include "../../../../inc/MarlinConfig.h"
 
 static lv_obj_t *scr;
 
 void lv_draw_error_message(PGM_P const msg) {
   #if 0
     static lv_obj_t *message = nullptr, *kill_message = nullptr, *reset_tips = nullptr;
-    if (disp_state_stack._disp_state[disp_state_stack._disp_index] != ERROR_MESSAGE_UI) {
-      disp_state_stack._disp_index++;
-      disp_state_stack._disp_state[disp_state_stack._disp_index] = ERROR_MESSAGE_UI;
-    }
-    disp_state = ERROR_MESSAGE_UI;
-
-    scr = lv_screen_create();
 
-    lv_refr_now(lv_refr_get_disp_refreshing());
+    scr = lv_screen_create(ERROR_MESSAGE_UI, "");
 
     if (msg) {
       message = lv_label_create(scr, msg);
       lv_obj_align(message, nullptr, LV_ALIGN_CENTER, 0, -50);
     }
 
     kill_message = lv_label_create(scr, "PRINTER HALTED");
     lv_obj_align(kill_message, nullptr, LV_ALIGN_CENTER, 0, -10);
 
     reset_tips = lv_label_create(scr, "Please Reset");

commit 9630c2683c39468bf885c560a1768d8b377d9462
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Oct 24 01:37:45 2020 -0300

    More MKS UI cleanup, optimization (#19869)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index 435b91e1d8..e82229c909 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -29,49 +29,45 @@
 #include "tft_lvgl_configuration.h"
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 
 #include "SPI_TFT.h"
 #include "mks_hardware_test.h"
 #include "../../../../inc/MarlinConfig.h"
 
-static lv_obj_t * scr;
+static lv_obj_t *scr;
 
 void lv_draw_error_message(PGM_P const msg) {
   #if 0
-    static lv_obj_t * message = NULL, *kill_message = NULL, *reset_tips = NULL;
+    static lv_obj_t *message = nullptr, *kill_message = nullptr, *reset_tips = nullptr;
     if (disp_state_stack._disp_state[disp_state_stack._disp_index] != ERROR_MESSAGE_UI) {
       disp_state_stack._disp_index++;
       disp_state_stack._disp_state[disp_state_stack._disp_index] = ERROR_MESSAGE_UI;
     }
     disp_state = ERROR_MESSAGE_UI;
 
-    scr = lv_obj_create(NULL, NULL);
-
-    lv_obj_set_style(scr, &tft_style_scr);
-    lv_scr_load(scr);
-    lv_obj_clean(scr);
+    scr = lv_screen_create();
 
     lv_refr_now(lv_refr_get_disp_refreshing());
 
     if (msg) {
       message = lv_label_create(scr, msg);
-      lv_obj_align(message, NULL, LV_ALIGN_CENTER, 0, -50);
+      lv_obj_align(message, nullptr, LV_ALIGN_CENTER, 0, -50);
     }
 
     kill_message = lv_label_create(scr, "PRINTER HALTED");
-    lv_obj_align(kill_message, NULL, LV_ALIGN_CENTER, 0, -10);
+    lv_obj_align(kill_message, nullptr, LV_ALIGN_CENTER, 0, -10);
 
     reset_tips = lv_label_create(scr, "Please Reset");
-    lv_obj_align(reset_tips, NULL, LV_ALIGN_CENTER, 0, 30);
+    lv_obj_align(reset_tips, nullptr, LV_ALIGN_CENTER, 0, 30);
 
     lv_task_handler();
   #endif
 
   SPI_TFT.LCD_clear(0x0000);
   if (msg) disp_string((TFT_WIDTH - strlen(msg) * 16) / 2, 100, msg, 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("PRINTER HALTED") * 16) / 2, 140, "PRINTER HALTED", 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("Please Reset") * 16) / 2, 180, "Please Reset", 0xFFFF, 0x0000);
 }
 

commit 4533a197d59ffcaccc4d476f06df7754b11b9b0c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Oct 22 20:22:17 2020 -0500

    Slim down MKS UI code (#19843)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index 2a20fe39f4..435b91e1d8 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -49,34 +49,28 @@ void lv_draw_error_message(PGM_P const msg) {
 
     scr = lv_obj_create(NULL, NULL);
 
     lv_obj_set_style(scr, &tft_style_scr);
     lv_scr_load(scr);
     lv_obj_clean(scr);
 
     lv_refr_now(lv_refr_get_disp_refreshing());
 
     if (msg) {
-      message = lv_label_create(scr, NULL);
-      lv_obj_set_style(message, &tft_style_label_rel);
-      lv_label_set_text(message, msg);
+      message = lv_label_create(scr, msg);
       lv_obj_align(message, NULL, LV_ALIGN_CENTER, 0, -50);
     }
 
-    kill_message = lv_label_create(scr, NULL);
-    lv_obj_set_style(kill_message, &tft_style_label_rel);
-    lv_label_set_text(kill_message, "PRINTER HALTED");
+    kill_message = lv_label_create(scr, "PRINTER HALTED");
     lv_obj_align(kill_message, NULL, LV_ALIGN_CENTER, 0, -10);
 
-    reset_tips = lv_label_create(scr, NULL);
-    lv_obj_set_style(reset_tips, &tft_style_label_rel);
-    lv_label_set_text(reset_tips, "Please Reset");
+    reset_tips = lv_label_create(scr, "Please Reset");
     lv_obj_align(reset_tips, NULL, LV_ALIGN_CENTER, 0, 30);
 
     lv_task_handler();
   #endif
 
   SPI_TFT.LCD_clear(0x0000);
   if (msg) disp_string((TFT_WIDTH - strlen(msg) * 16) / 2, 100, msg, 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("PRINTER HALTED") * 16) / 2, 140, "PRINTER HALTED", 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("Please Reset") * 16) / 2, 180, "Please Reset", 0xFFFF, 0x0000);
 }

commit 072f996af70b5ac635893eca2d4bd4bbb4f00acc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Oct 21 12:45:27 2020 -0500

    General cleanup, mostly MKS UI (#19825)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index c21ee3612c..2a20fe39f4 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -16,32 +16,32 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
 #if HAS_TFT_LVGL_UI
 
-#include "SPI_TFT.h"
-
-#include "lv_conf.h"
 #include "draw_ui.h"
+#include <lv_conf.h>
+
 #include "tft_lvgl_configuration.h"
-#include "mks_hardware_test.h"
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 
-#include "../../../../MarlinCore.h"
+#include "SPI_TFT.h"
+#include "mks_hardware_test.h"
+#include "../../../../inc/MarlinConfig.h"
 
 static lv_obj_t * scr;
 
 void lv_draw_error_message(PGM_P const msg) {
   #if 0
     static lv_obj_t * message = NULL, *kill_message = NULL, *reset_tips = NULL;
     if (disp_state_stack._disp_state[disp_state_stack._disp_index] != ERROR_MESSAGE_UI) {
       disp_state_stack._disp_index++;
       disp_state_stack._disp_state[disp_state_stack._disp_index] = ERROR_MESSAGE_UI;
     }

commit c0920bbf6a2490b7ea66d2a9e828c0f527a6c77b
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Mon Oct 12 18:38:07 2020 -0300

    TFT Refactoring (#19192)
    
    * split tft folder in two: tft for color ui; tft_io for shared tft code
    
    * after the files got moved, now the code was moved to the right place
    
    * classic ui using TFT IO init lcd codes
    
    * feature to compile tft_io when enabled
    
    * compiling fix
    
    * lvgl spi tft working with tft io init codes
    
    * there is no need for separeted fsmc and spi class in lvgl anymore, as tft io handle everything
    
    * remove debug
    
    * base for TFT rotation and mirroring API, and ILI9488 support
    
    * ST7796S rotate and mirror support
    
    * ST7789V rotate and mirror support
    
    * ST7735 rotate and mirror support
    
    * ILI9341 rotate and mirror support
    
    * ILI9328 rotate and mirror support
    
    * R61505 rotate and mirror support
    
    * MKS TFT definitions
    
    * more configs for mks tfts
    
    * update config
    
    * naming typo
    
    * to configure the user interface
    
    * ANYCUBIC_TFT35
    
    * tft configs
    
    * support for SSD1963
    
    * tft display types
    
    * updated conditionals lcd; first board fully working with the new code - all 3 ui!
    
    * compatiblity
    
    * changed name
    
    * move classic ui file name
    
    * rename TURN -> ROTATE
    
    * GRAPHICAL_TFT_ROTATE_180 deprecated
    
    * first fsmc board fully working - chitu v5
    
    * mks robin nano v1.2 + tft 35 ok!
    
    * right pin name
    
    * anycubic tft tested in a TRIGORILLA_PRO
    
    * chitu v6
    
    * nano 32 tft orientation
    
    * mks tft43
    
    * mks tft43 rotation
    
    * fixed LONGER LK tft setup
    
    * GRAPHICAL_TFT_UPSCALE defined by the display type
    
    * better offsets defaults
    
    * Update Configuration.h
    
    * Update tft_fsmc.cpp
    
    * Update Conditionals_LCD.h
    
    * Tweak comments
    
    * update nano tests
    
    * Revert "update nano tests"
    
    This reverts commit a071ebbfad30e28855a4a5695ec8a726542a1a65.
    
    * default tft
    
    * outdated comments
    
    * to not break non-vscode builds
    
    * upscale tft 35
    
    * support tft 180 rotation for color ui
    
    * Each TFT Driver is responsible for its default color mode.
    
    * use auto detect in mks displays, because some of them could be shipped with diferent drivers
    
    * extra s
    
    * unused code
    
    * wrong -1
    
    * missing mirror options
    
    * Smaller regex pattern
    
    * Comment updates
    
    * Clean up old defines
    
    * Apply pins formatting
    
    * GRAPHICAL_TFT_ROTATE_180 => TFT_ROTATE_180
    
    * MKS_ROBIN_TFT_V1_1R
    
    * merge fix
    
    * correct resolution
    
    * auto is default, dont need be there, and it will allow the user to configure it even for named displays
    
    * to not use rotation with MKS_ROBIN_TFT_V1_1R
    
    * i like () in macros
    
    * avoid sleepy commits
    
    * default for st7789 is rgb
    
    * nano follow up
    
    * to allow ili9328 rotation
    
    * default is rgb
    
    * boards merge follow up
    
    * to match bootloader orientation
    
    * HAS_TOUCH_XPT2046 is not hal specific anymore
    
    * lets not forget LPC
    
    * 180 rotation for ili9328 and R61505
    
    * Clean up whitespace
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index 1bcdccda41..c21ee3612c 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -16,23 +16,21 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
 #if HAS_TFT_LVGL_UI
 
-#if ENABLED(TFT_LVGL_UI_SPI)
-  #include "SPI_TFT.h"
-#endif
+#include "SPI_TFT.h"
 
 #include "lv_conf.h"
 #include "draw_ui.h"
 #include "tft_lvgl_configuration.h"
 #include "mks_hardware_test.h"
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 
@@ -70,19 +68,19 @@ void lv_draw_error_message(PGM_P const msg) {
     lv_obj_align(kill_message, NULL, LV_ALIGN_CENTER, 0, -10);
 
     reset_tips = lv_label_create(scr, NULL);
     lv_obj_set_style(reset_tips, &tft_style_label_rel);
     lv_label_set_text(reset_tips, "Please Reset");
     lv_obj_align(reset_tips, NULL, LV_ALIGN_CENTER, 0, 30);
 
     lv_task_handler();
   #endif
 
-  TERN(TFT_LVGL_UI_SPI, SPI_TFT.LCD_clear, LCD_Clear)(0x0000);
+  SPI_TFT.LCD_clear(0x0000);
   if (msg) disp_string((TFT_WIDTH - strlen(msg) * 16) / 2, 100, msg, 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("PRINTER HALTED") * 16) / 2, 140, "PRINTER HALTED", 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("Please Reset") * 16) / 2, 180, "Please Reset", 0xFFFF, 0x0000);
 }
 
 void lv_clear_error_message() { lv_obj_del(scr); }
 
 #endif // HAS_TFT_LVGL_UI

commit d20d4591321aa467c062f0050355d2aca84e03ad
Author: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
Date:   Sat Jul 25 13:52:07 2020 +0800

    Robin nano V2, TFT LVGL UI parameters, and more (#18500)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index f72cb2ab32..1bcdccda41 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -14,21 +14,25 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
-#if ENABLED(TFT_LVGL_UI)
+#if HAS_TFT_LVGL_UI
+
+#if ENABLED(TFT_LVGL_UI_SPI)
+  #include "SPI_TFT.h"
+#endif
 
 #include "lv_conf.h"
 #include "draw_ui.h"
 #include "tft_lvgl_configuration.h"
 #include "mks_hardware_test.h"
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 
@@ -48,37 +52,37 @@ void lv_draw_error_message(PGM_P const msg) {
     scr = lv_obj_create(NULL, NULL);
 
     lv_obj_set_style(scr, &tft_style_scr);
     lv_scr_load(scr);
     lv_obj_clean(scr);
 
     lv_refr_now(lv_refr_get_disp_refreshing());
 
     if (msg) {
       message = lv_label_create(scr, NULL);
-      lv_obj_set_style(message, &tft_style_lable_rel);
+      lv_obj_set_style(message, &tft_style_label_rel);
       lv_label_set_text(message, msg);
       lv_obj_align(message, NULL, LV_ALIGN_CENTER, 0, -50);
     }
 
     kill_message = lv_label_create(scr, NULL);
-    lv_obj_set_style(kill_message, &tft_style_lable_rel);
+    lv_obj_set_style(kill_message, &tft_style_label_rel);
     lv_label_set_text(kill_message, "PRINTER HALTED");
     lv_obj_align(kill_message, NULL, LV_ALIGN_CENTER, 0, -10);
 
     reset_tips = lv_label_create(scr, NULL);
-    lv_obj_set_style(reset_tips, &tft_style_lable_rel);
+    lv_obj_set_style(reset_tips, &tft_style_label_rel);
     lv_label_set_text(reset_tips, "Please Reset");
     lv_obj_align(reset_tips, NULL, LV_ALIGN_CENTER, 0, 30);
 
     lv_task_handler();
   #endif
-  LCD_Clear(0x0000);
+
+  TERN(TFT_LVGL_UI_SPI, SPI_TFT.LCD_clear, LCD_Clear)(0x0000);
   if (msg) disp_string((TFT_WIDTH - strlen(msg) * 16) / 2, 100, msg, 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("PRINTER HALTED") * 16) / 2, 140, "PRINTER HALTED", 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("Please Reset") * 16) / 2, 180, "Please Reset", 0xFFFF, 0x0000);
-
 }
 
 void lv_clear_error_message() { lv_obj_del(scr); }
 
-#endif // TFT_LVGL_UI
+#endif // HAS_TFT_LVGL_UI

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index 6c7a73d8cf..f72cb2ab32 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -9,21 +9,21 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
 #if ENABLED(TFT_LVGL_UI)
 
 #include "lv_conf.h"
 #include "draw_ui.h"
 #include "tft_lvgl_configuration.h"
 #include "mks_hardware_test.h"

commit e5bc9d31cc87be5c7ef2bd3cd70c2599f76d2bd7
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Wed Jul 1 03:30:24 2020 -0300

    Add TFT_LVGL_UI support (#18438)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
index de57804c2d..6c7a73d8cf 100644
--- a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -14,21 +14,21 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
 #include "../../../../inc/MarlinConfigPre.h"
 
-#if ENABLED(TFT_LITTLE_VGL_UI)
+#if ENABLED(TFT_LVGL_UI)
 
 #include "lv_conf.h"
 #include "draw_ui.h"
 #include "tft_lvgl_configuration.h"
 #include "mks_hardware_test.h"
 //#include "../lvgl/src/lv_objx/lv_imgbtn.h"
 //#include "../lvgl/src/lv_objx/lv_img.h"
 //#include "../lvgl/src/lv_core/lv_disp.h"
 //#include "../lvgl/src/lv_core/lv_refr.h"
 
@@ -74,11 +74,11 @@ void lv_draw_error_message(PGM_P const msg) {
   #endif
   LCD_Clear(0x0000);
   if (msg) disp_string((TFT_WIDTH - strlen(msg) * 16) / 2, 100, msg, 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("PRINTER HALTED") * 16) / 2, 140, "PRINTER HALTED", 0xFFFF, 0x0000);
   disp_string((TFT_WIDTH - strlen("Please Reset") * 16) / 2, 180, "Please Reset", 0xFFFF, 0x0000);
 
 }
 
 void lv_clear_error_message() { lv_obj_del(scr); }
 
-#endif // TFT_LITTLE_VGL_UI
+#endif // TFT_LVGL_UI

commit 642112d3eb7c1af9a52feec8134c85ed3e34891c
Author: makerbase <4164049@qq.com>
Date:   Tue Jun 16 10:05:33 2020 +0800

    Add MKS UI (TFT_LITTLE_VGL_UI) (#18071)

diff --git a/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
new file mode 100644
index 0000000000..de57804c2d
--- /dev/null
+++ b/Marlin/src/lcd/extui/lib/mks_ui/draw_error_message.cpp
@@ -0,0 +1,84 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#include "../../../../inc/MarlinConfigPre.h"
+
+#if ENABLED(TFT_LITTLE_VGL_UI)
+
+#include "lv_conf.h"
+#include "draw_ui.h"
+#include "tft_lvgl_configuration.h"
+#include "mks_hardware_test.h"
+//#include "../lvgl/src/lv_objx/lv_imgbtn.h"
+//#include "../lvgl/src/lv_objx/lv_img.h"
+//#include "../lvgl/src/lv_core/lv_disp.h"
+//#include "../lvgl/src/lv_core/lv_refr.h"
+
+#include "../../../../MarlinCore.h"
+
+static lv_obj_t * scr;
+
+void lv_draw_error_message(PGM_P const msg) {
+  #if 0
+    static lv_obj_t * message = NULL, *kill_message = NULL, *reset_tips = NULL;
+    if (disp_state_stack._disp_state[disp_state_stack._disp_index] != ERROR_MESSAGE_UI) {
+      disp_state_stack._disp_index++;
+      disp_state_stack._disp_state[disp_state_stack._disp_index] = ERROR_MESSAGE_UI;
+    }
+    disp_state = ERROR_MESSAGE_UI;
+
+    scr = lv_obj_create(NULL, NULL);
+
+    lv_obj_set_style(scr, &tft_style_scr);
+    lv_scr_load(scr);
+    lv_obj_clean(scr);
+
+    lv_refr_now(lv_refr_get_disp_refreshing());
+
+    if (msg) {
+      message = lv_label_create(scr, NULL);
+      lv_obj_set_style(message, &tft_style_lable_rel);
+      lv_label_set_text(message, msg);
+      lv_obj_align(message, NULL, LV_ALIGN_CENTER, 0, -50);
+    }
+
+    kill_message = lv_label_create(scr, NULL);
+    lv_obj_set_style(kill_message, &tft_style_lable_rel);
+    lv_label_set_text(kill_message, "PRINTER HALTED");
+    lv_obj_align(kill_message, NULL, LV_ALIGN_CENTER, 0, -10);
+
+    reset_tips = lv_label_create(scr, NULL);
+    lv_obj_set_style(reset_tips, &tft_style_lable_rel);
+    lv_label_set_text(reset_tips, "Please Reset");
+    lv_obj_align(reset_tips, NULL, LV_ALIGN_CENTER, 0, 30);
+
+    lv_task_handler();
+  #endif
+  LCD_Clear(0x0000);
+  if (msg) disp_string((TFT_WIDTH - strlen(msg) * 16) / 2, 100, msg, 0xFFFF, 0x0000);
+  disp_string((TFT_WIDTH - strlen("PRINTER HALTED") * 16) / 2, 140, "PRINTER HALTED", 0xFFFF, 0x0000);
+  disp_string((TFT_WIDTH - strlen("Please Reset") * 16) / 2, 180, "Please Reset", 0xFFFF, 0x0000);
+
+}
+
+void lv_clear_error_message() { lv_obj_del(scr); }
+
+#endif // TFT_LITTLE_VGL_UI
