commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index c6137b45c3..7a31ca685d 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -30,7 +30,7 @@
 #include <string.h>
 
 // A white component can be passed
-#if EITHER(RGBW_LED, PCA9632_RGBW)
+#if ANY(RGBW_LED, PCA9632_RGBW)
   #define HAS_WHITE_LED 1
 #endif
 
@@ -164,7 +164,7 @@ public:
   #if ENABLED(LED_CONTROL_MENU)
     static void toggle();  // swap "off" with color
   #endif
-  #if EITHER(LED_CONTROL_MENU, CASE_LIGHT_USE_RGB_LED) || LED_POWEROFF_TIMEOUT > 0
+  #if ANY(LED_CONTROL_MENU, CASE_LIGHT_USE_RGB_LED) || LED_POWEROFF_TIMEOUT > 0
     static void update() { set_color(color); }
   #endif
 

commit e283f15720bcdfca56a989beffc8328fda42c018
Author: Justin Hartmann <zadarimm@gmail.com>
Date:   Mon Nov 14 00:50:02 2022 -0500

    ü©π Fix Overlord compile (#24947)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 572fd0dfac..c6137b45c3 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -40,6 +40,18 @@
   #undef _NEOPIXEL_INCLUDE_
 #endif
 
+#if ENABLED(BLINKM)
+  #include "blinkm.h"
+#endif
+
+#if ENABLED(PCA9533)
+  #include "pca9533.h"
+#endif
+
+#if ENABLED(PCA9632)
+  #include "pca9632.h"
+#endif
+
 /**
  * LEDcolor type for use with leds.set_color
  */

commit a80d2f065e31248a10d3c8b1c4d4492f6b6196fc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 4 20:00:56 2022 -0500

    ü©π leds.update needed for reset_timeout
    
    Followup to #23590

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 8649dd014f..572fd0dfac 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -107,6 +107,13 @@ typedef struct LEDColor {
 
 class LEDLights {
 public:
+  #if ANY(LED_CONTROL_MENU, PRINTER_EVENT_LEDS, CASE_LIGHT_IS_COLOR_LED)
+    static LEDColor color; // last non-off color
+    static bool lights_on; // the last set color was "on"
+  #else
+    static constexpr bool lights_on = true;
+  #endif
+
   LEDLights() {} // ctor
 
   static void setup(); // init()
@@ -142,15 +149,10 @@ public:
     static LEDColor get_color() { return lights_on ? color : LEDColorOff(); }
   #endif
 
-  #if ANY(LED_CONTROL_MENU, PRINTER_EVENT_LEDS, CASE_LIGHT_IS_COLOR_LED)
-    static LEDColor color; // last non-off color
-    static bool lights_on; // the last set color was "on"
-  #endif
-
   #if ENABLED(LED_CONTROL_MENU)
     static void toggle();  // swap "off" with color
   #endif
-  #if EITHER(LED_CONTROL_MENU, CASE_LIGHT_USE_RGB_LED)
+  #if EITHER(LED_CONTROL_MENU, CASE_LIGHT_USE_RGB_LED) || LED_POWEROFF_TIMEOUT > 0
     static void update() { set_color(color); }
   #endif
 

commit cbf8622670a20f967106d2dccd380cc25763c64b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 1 16:48:24 2022 -0600

    üé® Use LEDColor default C-CTOR

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index bce9052424..8649dd014f 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -54,6 +54,8 @@ typedef struct LEDColor {
     OPTARG(NEOPIXEL_LED, i(NEOPIXEL_BRIGHTNESS))
   {}
 
+  LEDColor(const LEDColor&) = default;
+
   LEDColor(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED, uint8_t w=0) OPTARG(NEOPIXEL_LED, uint8_t i=NEOPIXEL_BRIGHTNESS))
     : r(r), g(g), b(b) OPTARG(HAS_WHITE_LED, w(w)) OPTARG(NEOPIXEL_LED, i(i)) {}
 
@@ -68,11 +70,6 @@ typedef struct LEDColor {
     return *this;
   }
 
-  LEDColor& operator=(const LEDColor &right) {
-    if (this != &right) memcpy(this, &right, sizeof(LEDColor));
-    return *this;
-  }
-
   bool operator==(const LEDColor &right) {
     if (this == &right) return true;
     return 0 == memcmp(this, &right, sizeof(LEDColor));

commit f07fc7e96f512f4900619049761f75d28f9e0403
Author: GHGiampy <83699429+GHGiampy@users.noreply.github.com>
Date:   Wed Feb 2 00:35:38 2022 +0100

    üö∏ Case Light, LED menus for E3V2 DWIN Enhanced UI (#23590)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 7110a9ba82..bce9052424 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -157,12 +157,12 @@ public:
     static void update() { set_color(color); }
   #endif
 
-  #ifdef LED_BACKLIGHT_TIMEOUT
+  #if LED_POWEROFF_TIMEOUT > 0
     private:
       static millis_t led_off_time;
     public:
       static void reset_timeout(const millis_t &ms) {
-        led_off_time = ms + LED_BACKLIGHT_TIMEOUT;
+        led_off_time = ms + LED_POWEROFF_TIMEOUT;
         if (!lights_on) update();
       }
       static void update_timeout(const bool power_on);

commit 6fb2d8a25f096d084348a6f6930f515d947474d4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Dec 28 02:57:24 2021 -0600

    üßë‚Äçüíª Remove extraneous 'inline' hints

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 74964b51a8..7110a9ba82 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -118,7 +118,7 @@ public:
     OPTARG(NEOPIXEL_IS_SEQUENTIAL, bool isSequence=false)
   );
 
-  static inline void set_color(uint8_t r, uint8_t g, uint8_t b
+  static void set_color(uint8_t r, uint8_t g, uint8_t b
     OPTARG(HAS_WHITE_LED, uint8_t w=0)
     OPTARG(NEOPIXEL_LED, uint8_t i=NEOPIXEL_BRIGHTNESS)
     OPTARG(NEOPIXEL_IS_SEQUENTIAL, bool isSequence=false)
@@ -126,23 +126,23 @@ public:
     set_color(LEDColor(r, g, b OPTARG(HAS_WHITE_LED, w) OPTARG(NEOPIXEL_LED, i)) OPTARG(NEOPIXEL_IS_SEQUENTIAL, isSequence));
   }
 
-  static inline void set_off()   { set_color(LEDColorOff()); }
-  static inline void set_green() { set_color(LEDColorGreen()); }
-  static inline void set_white() { set_color(LEDColorWhite()); }
+  static void set_off()   { set_color(LEDColorOff()); }
+  static void set_green() { set_color(LEDColorGreen()); }
+  static void set_white() { set_color(LEDColorWhite()); }
 
   #if ENABLED(LED_COLOR_PRESETS)
     static const LEDColor defaultLEDColor;
-    static inline void set_default()  { set_color(defaultLEDColor); }
-    static inline void set_red()      { set_color(LEDColorRed()); }
-    static inline void set_orange()   { set_color(LEDColorOrange()); }
-    static inline void set_yellow()   { set_color(LEDColorYellow()); }
-    static inline void set_blue()     { set_color(LEDColorBlue()); }
-    static inline void set_indigo()   { set_color(LEDColorIndigo()); }
-    static inline void set_violet()   { set_color(LEDColorViolet()); }
+    static void set_default()  { set_color(defaultLEDColor); }
+    static void set_red()      { set_color(LEDColorRed()); }
+    static void set_orange()   { set_color(LEDColorOrange()); }
+    static void set_yellow()   { set_color(LEDColorYellow()); }
+    static void set_blue()     { set_color(LEDColorBlue()); }
+    static void set_indigo()   { set_color(LEDColorIndigo()); }
+    static void set_violet()   { set_color(LEDColorViolet()); }
   #endif
 
   #if ENABLED(PRINTER_EVENT_LEDS)
-    static inline LEDColor get_color() { return lights_on ? color : LEDColorOff(); }
+    static LEDColor get_color() { return lights_on ? color : LEDColorOff(); }
   #endif
 
   #if ANY(LED_CONTROL_MENU, PRINTER_EVENT_LEDS, CASE_LIGHT_IS_COLOR_LED)
@@ -154,14 +154,14 @@ public:
     static void toggle();  // swap "off" with color
   #endif
   #if EITHER(LED_CONTROL_MENU, CASE_LIGHT_USE_RGB_LED)
-    static inline void update() { set_color(color); }
+    static void update() { set_color(color); }
   #endif
 
   #ifdef LED_BACKLIGHT_TIMEOUT
     private:
       static millis_t led_off_time;
     public:
-      static inline void reset_timeout(const millis_t &ms) {
+      static void reset_timeout(const millis_t &ms) {
         led_off_time = ms + LED_BACKLIGHT_TIMEOUT;
         if (!lights_on) update();
       }
@@ -181,7 +181,7 @@ extern LEDLights leds;
 
     static void set_color(const LEDColor &color);
 
-    static inline void set_color(uint8_t r, uint8_t g, uint8_t b
+    static void set_color(uint8_t r, uint8_t g, uint8_t b
       OPTARG(HAS_WHITE_LED, uint8_t w=0)
       OPTARG(NEOPIXEL_LED, uint8_t i=NEOPIXEL_BRIGHTNESS)
     ) {
@@ -191,26 +191,26 @@ extern LEDLights leds;
       ));
     }
 
-    static inline void set_off()   { set_color(LEDColorOff()); }
-    static inline void set_green() { set_color(LEDColorGreen()); }
-    static inline void set_white() { set_color(LEDColorWhite()); }
+    static void set_off()   { set_color(LEDColorOff()); }
+    static void set_green() { set_color(LEDColorGreen()); }
+    static void set_white() { set_color(LEDColorWhite()); }
 
     #if ENABLED(NEO2_COLOR_PRESETS)
       static const LEDColor defaultLEDColor;
-      static inline void set_default()  { set_color(defaultLEDColor); }
-      static inline void set_red()      { set_color(LEDColorRed()); }
-      static inline void set_orange()   { set_color(LEDColorOrange()); }
-      static inline void set_yellow()   { set_color(LEDColorYellow()); }
-      static inline void set_blue()     { set_color(LEDColorBlue()); }
-      static inline void set_indigo()   { set_color(LEDColorIndigo()); }
-      static inline void set_violet()   { set_color(LEDColorViolet()); }
+      static void set_default()  { set_color(defaultLEDColor); }
+      static void set_red()      { set_color(LEDColorRed()); }
+      static void set_orange()   { set_color(LEDColorOrange()); }
+      static void set_yellow()   { set_color(LEDColorYellow()); }
+      static void set_blue()     { set_color(LEDColorBlue()); }
+      static void set_indigo()   { set_color(LEDColorIndigo()); }
+      static void set_violet()   { set_color(LEDColorViolet()); }
     #endif
 
     #if ENABLED(NEOPIXEL2_SEPARATE)
       static LEDColor color; // last non-off color
       static bool lights_on; // the last set color was "on"
       static void toggle();  // swap "off" with color
-      static inline void update() { set_color(color); }
+      static void update() { set_color(color); }
     #endif
   };
 

commit e60c38b6220678b3b9f3a3b31516852f8d25b3b0
Author: ellensp <ellensp@hotmail.com>
Date:   Wed May 26 11:38:23 2021 +1200

    ‚ôªÔ∏è LEDs refactor and extend (#21962)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 4157ff816e..74964b51a8 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -29,15 +29,17 @@
 
 #include <string.h>
 
-#if ENABLED(NEOPIXEL_LED)
-  #include "neopixel.h"
-#endif
-
 // A white component can be passed
-#if ANY(RGBW_LED, NEOPIXEL_LED, PCA9632_RGBW)
+#if EITHER(RGBW_LED, PCA9632_RGBW)
   #define HAS_WHITE_LED 1
 #endif
 
+#if ENABLED(NEOPIXEL_LED)
+  #define _NEOPIXEL_INCLUDE_
+  #include "neopixel.h"
+  #undef _NEOPIXEL_INCLUDE_
+#endif
+
 /**
  * LEDcolor type for use with leds.set_color
  */
@@ -84,9 +86,8 @@ typedef struct LEDColor {
 } LEDColor;
 
 /**
- * Color helpers and presets
+ * Color presets
  */
-#define MakeLEDColor(R,G,B,W,I)   LEDColor(R, G, B OPTARG(HAS_WHITE_LED, W) OPTARG(NEOPIXEL_LED, I))
 
 #define LEDColorOff()             LEDColor(  0,   0,   0)
 #define LEDColorRed()             LEDColor(255,   0,   0)
@@ -114,15 +115,15 @@ public:
   static void setup(); // init()
 
   static void set_color(const LEDColor &color
-    OPTARG(NEOPIXEL_LED, bool isSequence=false)
+    OPTARG(NEOPIXEL_IS_SEQUENTIAL, bool isSequence=false)
   );
 
   static inline void set_color(uint8_t r, uint8_t g, uint8_t b
     OPTARG(HAS_WHITE_LED, uint8_t w=0)
     OPTARG(NEOPIXEL_LED, uint8_t i=NEOPIXEL_BRIGHTNESS)
-    OPTARG(NEOPIXEL_LED, bool isSequence=false)
+    OPTARG(NEOPIXEL_IS_SEQUENTIAL, bool isSequence=false)
   ) {
-    set_color(MakeLEDColor(r, g, b, w, i) OPTARG(NEOPIXEL_LED, isSequence));
+    set_color(LEDColor(r, g, b OPTARG(HAS_WHITE_LED, w) OPTARG(NEOPIXEL_LED, i)) OPTARG(NEOPIXEL_IS_SEQUENTIAL, isSequence));
   }
 
   static inline void set_off()   { set_color(LEDColorOff()); }
@@ -180,8 +181,14 @@ extern LEDLights leds;
 
     static void set_color(const LEDColor &color);
 
-    inline void set_color(uint8_t r, uint8_t g, uint8_t b, uint8_t w=0, uint8_t i=NEOPIXEL2_BRIGHTNESS) {
-      set_color(MakeLEDColor(r, g, b, w, i));
+    static inline void set_color(uint8_t r, uint8_t g, uint8_t b
+      OPTARG(HAS_WHITE_LED, uint8_t w=0)
+      OPTARG(NEOPIXEL_LED, uint8_t i=NEOPIXEL_BRIGHTNESS)
+    ) {
+      set_color(LEDColor(r, g, b
+        OPTARG(HAS_WHITE_LED, w)
+        OPTARG(NEOPIXEL_LED, i)
+      ));
     }
 
     static inline void set_off()   { set_color(LEDColorOff()); }

commit 84fd0eff17d089e3f75f6585d4bba47f15c00ba7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 23 21:33:22 2021 -0500

    üé® Macros for optional arguments (#21969)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index cec95102d7..4157ff816e 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -43,46 +43,21 @@
  */
 typedef struct LEDColor {
   uint8_t r, g, b
-    #if HAS_WHITE_LED
-      , w
-      #if ENABLED(NEOPIXEL_LED)
-        , i
-      #endif
-    #endif
+    OPTARG(HAS_WHITE_LED, w)
+    OPTARG(NEOPIXEL_LED, i)
   ;
 
   LEDColor() : r(255), g(255), b(255)
-    #if HAS_WHITE_LED
-      , w(255)
-      #if ENABLED(NEOPIXEL_LED)
-        , i(NEOPIXEL_BRIGHTNESS)
-      #endif
-    #endif
+    OPTARG(HAS_WHITE_LED, w(255))
+    OPTARG(NEOPIXEL_LED, i(NEOPIXEL_BRIGHTNESS))
   {}
 
-  LEDColor(uint8_t r, uint8_t g, uint8_t b
-    #if HAS_WHITE_LED
-      , uint8_t w=0
-      #if ENABLED(NEOPIXEL_LED)
-        , uint8_t i=NEOPIXEL_BRIGHTNESS
-      #endif
-    #endif
-    ) : r(r), g(g), b(b)
-    #if HAS_WHITE_LED
-      , w(w)
-      #if ENABLED(NEOPIXEL_LED)
-        , i(i)
-      #endif
-    #endif
-  {}
+  LEDColor(uint8_t r, uint8_t g, uint8_t b OPTARG(HAS_WHITE_LED, uint8_t w=0) OPTARG(NEOPIXEL_LED, uint8_t i=NEOPIXEL_BRIGHTNESS))
+    : r(r), g(g), b(b) OPTARG(HAS_WHITE_LED, w(w)) OPTARG(NEOPIXEL_LED, i(i)) {}
 
   LEDColor(const uint8_t (&rgbw)[4]) : r(rgbw[0]), g(rgbw[1]), b(rgbw[2])
-    #if HAS_WHITE_LED
-      , w(rgbw[3])
-      #if ENABLED(NEOPIXEL_LED)
-        , i(NEOPIXEL_BRIGHTNESS)
-      #endif
-    #endif
+    OPTARG(HAS_WHITE_LED, w(rgbw[3]))
+    OPTARG(NEOPIXEL_LED, i(NEOPIXEL_BRIGHTNESS))
   {}
 
   LEDColor& operator=(const uint8_t (&rgbw)[4]) {
@@ -111,15 +86,7 @@ typedef struct LEDColor {
 /**
  * Color helpers and presets
  */
-#if HAS_WHITE_LED
-  #if ENABLED(NEOPIXEL_LED)
-    #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B, W, I)
-  #else
-    #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B, W)
-  #endif
-#else
-  #define MakeLEDColor(R,G,B,W,I)   LEDColor(R, G, B)
-#endif
+#define MakeLEDColor(R,G,B,W,I)   LEDColor(R, G, B OPTARG(HAS_WHITE_LED, W) OPTARG(NEOPIXEL_LED, I))
 
 #define LEDColorOff()             LEDColor(  0,   0,   0)
 #define LEDColorRed()             LEDColor(255,   0,   0)
@@ -147,25 +114,15 @@ public:
   static void setup(); // init()
 
   static void set_color(const LEDColor &color
-    #if ENABLED(NEOPIXEL_LED)
-      , bool isSequence=false
-    #endif
+    OPTARG(NEOPIXEL_LED, bool isSequence=false)
   );
 
   static inline void set_color(uint8_t r, uint8_t g, uint8_t b
-    #if HAS_WHITE_LED
-      , uint8_t w=0
-    #endif
-    #if ENABLED(NEOPIXEL_LED)
-      , uint8_t i=NEOPIXEL_BRIGHTNESS
-      , bool isSequence=false
-    #endif
+    OPTARG(HAS_WHITE_LED, uint8_t w=0)
+    OPTARG(NEOPIXEL_LED, uint8_t i=NEOPIXEL_BRIGHTNESS)
+    OPTARG(NEOPIXEL_LED, bool isSequence=false)
   ) {
-    set_color(MakeLEDColor(r, g, b, w, i)
-      #if ENABLED(NEOPIXEL_LED)
-        , isSequence
-      #endif
-    );
+    set_color(MakeLEDColor(r, g, b, w, i) OPTARG(NEOPIXEL_LED, isSequence));
   }
 
   static inline void set_off()   { set_color(LEDColorOff()); }

commit 9485d44903579f90a3831d8f71a2d1bc97052cb3
Author: sanek88lbl <42996016+sanek88lbl@users.noreply.github.com>
Date:   Thu May 6 14:10:18 2021 +0300

    Patches for CASE_LIGHT_USE_RGB_LED (#21811)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index c34eb57f44..cec95102d7 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -187,7 +187,7 @@ public:
     static inline LEDColor get_color() { return lights_on ? color : LEDColorOff(); }
   #endif
 
-  #if EITHER(LED_CONTROL_MENU, PRINTER_EVENT_LEDS)
+  #if ANY(LED_CONTROL_MENU, PRINTER_EVENT_LEDS, CASE_LIGHT_IS_COLOR_LED)
     static LEDColor color; // last non-off color
     static bool lights_on; // the last set color was "on"
   #endif

commit e0aa9ce372710d2bd1147ab0779072e6a02b61c9
Author: LinFor <linfor@gmail.com>
Date:   Sun Feb 28 01:06:48 2021 +0300

    RGB Caselight (#20341)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index d41c61144a..c34eb57f44 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -194,6 +194,8 @@ public:
 
   #if ENABLED(LED_CONTROL_MENU)
     static void toggle();  // swap "off" with color
+  #endif
+  #if EITHER(LED_CONTROL_MENU, CASE_LIGHT_USE_RGB_LED)
     static inline void update() { set_color(color); }
   #endif
 

commit 6dcb77f7b59ce894bbb1ffec9064681155a3da4b
Author: ellensp <ellensp@hotmail.com>
Date:   Mon Feb 8 15:36:04 2021 +1300

    Fix mini12864 v2.1 + PSU control + NeoPixel backlight (#21021)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 57b21d576c..d41c61144a 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -203,7 +203,7 @@ public:
     public:
       static inline void reset_timeout(const millis_t &ms) {
         led_off_time = ms + LED_BACKLIGHT_TIMEOUT;
-        if (!lights_on) set_default();
+        if (!lights_on) update();
       }
       static void update_timeout(const bool power_on);
   #endif

commit de9c0eda3665c8db3c291bd1b756a09a1518bf53
Author: Jan Krajdl <spm@spamik.cz>
Date:   Tue Dec 22 15:27:14 2020 +0100

    Support RGBW on PCA9632 (#20455)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 055ea0df37..57b21d576c 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -34,7 +34,7 @@
 #endif
 
 // A white component can be passed
-#if EITHER(RGBW_LED, NEOPIXEL_LED)
+#if ANY(RGBW_LED, NEOPIXEL_LED, PCA9632_RGBW)
   #define HAS_WHITE_LED 1
 #endif
 

commit 5ea7a8373ab03ece1179b45d9205dcf8dd737240
Author: Zachary Annand <baconfixation@gmail.com>
Date:   Sun Sep 6 20:00:24 2020 -0500

    Menu items for Separate NeoPixel (#19280)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index a13f960a3b..055ea0df37 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -240,7 +240,7 @@ extern LEDLights leds;
       static inline void set_violet()   { set_color(LEDColorViolet()); }
     #endif
 
-    #if ENABLED(LED_CONTROL_MENU)
+    #if ENABLED(NEOPIXEL2_SEPARATE)
       static LEDColor color; // last non-off color
       static bool lights_on; // the last set color was "on"
       static void toggle();  // swap "off" with color

commit 97ec6c1be6f7b3b2e185be9f1637639815acbb1a
Author: Zachary Annand <baconfixation@gmail.com>
Date:   Thu Aug 27 14:18:16 2020 -0500

    Independent Neopixel option (#19115)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 1302f63c15..a13f960a3b 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -155,11 +155,9 @@ public:
   static inline void set_color(uint8_t r, uint8_t g, uint8_t b
     #if HAS_WHITE_LED
       , uint8_t w=0
-      #if ENABLED(NEOPIXEL_LED)
-        , uint8_t i=NEOPIXEL_BRIGHTNESS
-      #endif
     #endif
     #if ENABLED(NEOPIXEL_LED)
+      , uint8_t i=NEOPIXEL_BRIGHTNESS
       , bool isSequence=false
     #endif
   ) {
@@ -212,3 +210,44 @@ public:
 };
 
 extern LEDLights leds;
+
+#if ENABLED(NEOPIXEL2_SEPARATE)
+
+  class LEDLights2 {
+  public:
+    LEDLights2() {}
+
+    static void setup(); // init()
+
+    static void set_color(const LEDColor &color);
+
+    inline void set_color(uint8_t r, uint8_t g, uint8_t b, uint8_t w=0, uint8_t i=NEOPIXEL2_BRIGHTNESS) {
+      set_color(MakeLEDColor(r, g, b, w, i));
+    }
+
+    static inline void set_off()   { set_color(LEDColorOff()); }
+    static inline void set_green() { set_color(LEDColorGreen()); }
+    static inline void set_white() { set_color(LEDColorWhite()); }
+
+    #if ENABLED(NEO2_COLOR_PRESETS)
+      static const LEDColor defaultLEDColor;
+      static inline void set_default()  { set_color(defaultLEDColor); }
+      static inline void set_red()      { set_color(LEDColorRed()); }
+      static inline void set_orange()   { set_color(LEDColorOrange()); }
+      static inline void set_yellow()   { set_color(LEDColorYellow()); }
+      static inline void set_blue()     { set_color(LEDColorBlue()); }
+      static inline void set_indigo()   { set_color(LEDColorIndigo()); }
+      static inline void set_violet()   { set_color(LEDColorViolet()); }
+    #endif
+
+    #if ENABLED(LED_CONTROL_MENU)
+      static LEDColor color; // last non-off color
+      static bool lights_on; // the last set color was "on"
+      static void toggle();  // swap "off" with color
+      static inline void update() { set_color(color); }
+    #endif
+  };
+
+  extern LEDLights2 leds2;
+
+#endif // NEOPIXEL2_SEPARATE

commit c488070859c1995fe957938b1b6302c4eeef1ea3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 23 23:57:51 2020 -0500

    Minor cleanup w/r/t LEDs

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 577c94752f..1302f63c15 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -104,11 +104,7 @@ typedef struct LEDColor {
   bool operator!=(const LEDColor &right) { return !operator==(right); }
 
   bool is_off() const {
-    return 3 > r + g + b
-      #if HAS_WHITE_LED
-        + w
-      #endif
-    ;
+    return 3 > r + g + b + TERN0(HAS_WHITE_LED, w);
   }
 } LEDColor;
 
@@ -156,7 +152,7 @@ public:
     #endif
   );
 
-  inline void set_color(uint8_t r, uint8_t g, uint8_t b
+  static inline void set_color(uint8_t r, uint8_t g, uint8_t b
     #if HAS_WHITE_LED
       , uint8_t w=0
       #if ENABLED(NEOPIXEL_LED)

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 17bd77eb7f..577c94752f 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 22184381fc..17bd77eb7f 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -34,7 +34,9 @@
 #endif
 
 // A white component can be passed
-#define HAS_WHITE_LED EITHER(RGBW_LED, NEOPIXEL_LED)
+#if EITHER(RGBW_LED, NEOPIXEL_LED)
+  #define HAS_WHITE_LED 1
+#endif
 
 /**
  * LEDcolor type for use with leds.set_color
@@ -85,9 +87,7 @@ typedef struct LEDColor {
 
   LEDColor& operator=(const uint8_t (&rgbw)[4]) {
     r = rgbw[0]; g = rgbw[1]; b = rgbw[2];
-    #if HAS_WHITE_LED
-      w = rgbw[3];
-    #endif
+    TERN_(HAS_WHITE_LED, w = rgbw[3]);
     return *this;
   }
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 443ecdcbca..22184381fc 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 7a4758a6a29eb56c3e56c0eaed7809022459c6ae
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Feb 1 07:55:53 2020 -0600

    Fix RGB / Neopixel white color bug
    
    See #16752

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 14a50cb06f..443ecdcbca 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -33,6 +33,7 @@
   #include "neopixel.h"
 #endif
 
+// A white component can be passed
 #define HAS_WHITE_LED EITHER(RGBW_LED, NEOPIXEL_LED)
 
 /**
@@ -137,7 +138,7 @@ typedef struct LEDColor {
 #define LEDColorBlue()            LEDColor(  0,   0, 255)
 #define LEDColorIndigo()          LEDColor(  0, 255, 255)
 #define LEDColorViolet()          LEDColor(255,   0, 255)
-#if HAS_WHITE_LED
+#if HAS_WHITE_LED && DISABLED(RGB_LED)
   #define LEDColorWhite()         LEDColor(  0,   0,   0, 255)
 #else
   #define LEDColorWhite()         LEDColor(255, 255, 255)

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index e3b060e267..14a50cb06f 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 18904c42f6081391c5ffc096c8acf2ce54dc4a34
Author: MastS <51464853+MastS@users.noreply.github.com>
Date:   Thu Jun 13 04:59:39 2019 +0200

    Fysetc LCD backlight timeout (#14265)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index eafede7dc9..e3b060e267 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -201,6 +201,17 @@ public:
     static void toggle();  // swap "off" with color
     static inline void update() { set_color(color); }
   #endif
+
+  #ifdef LED_BACKLIGHT_TIMEOUT
+    private:
+      static millis_t led_off_time;
+    public:
+      static inline void reset_timeout(const millis_t &ms) {
+        led_off_time = ms + LED_BACKLIGHT_TIMEOUT;
+        if (!lights_on) set_default();
+      }
+      static void update_timeout(const bool power_on);
+  #endif
 };
 
 extern LEDLights leds;

commit 5018fdacbeb0807fc255f83049044b89323eea55
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Apr 9 18:34:29 2019 -0500

    Support FYSETC_MINI_12864_PANEL (#13365)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index bbd609c29a..eafede7dc9 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -120,19 +120,28 @@ typedef struct LEDColor {
   #else
     #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B, W)
   #endif
-  #define LEDColorWhite() LEDColor(0, 0, 0, 255)
 #else
-  #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B)
-  #define LEDColorWhite() LEDColor(255, 255, 255)
+  #define MakeLEDColor(R,G,B,W,I)   LEDColor(R, G, B)
+#endif
+
+#define LEDColorOff()             LEDColor(  0,   0,   0)
+#define LEDColorRed()             LEDColor(255,   0,   0)
+#if ENABLED(LED_COLORS_REDUCE_GREEN)
+  #define LEDColorOrange()        LEDColor(255,  25,   0)
+  #define LEDColorYellow()        LEDColor(255,  75,   0)
+#else
+  #define LEDColorOrange()        LEDColor(255,  80,   0)
+  #define LEDColorYellow()        LEDColor(255, 255,   0)
+#endif
+#define LEDColorGreen()           LEDColor(  0, 255,   0)
+#define LEDColorBlue()            LEDColor(  0,   0, 255)
+#define LEDColorIndigo()          LEDColor(  0, 255, 255)
+#define LEDColorViolet()          LEDColor(255,   0, 255)
+#if HAS_WHITE_LED
+  #define LEDColorWhite()         LEDColor(  0,   0,   0, 255)
+#else
+  #define LEDColorWhite()         LEDColor(255, 255, 255)
 #endif
-#define LEDColorOff()     LEDColor(  0,   0,   0)
-#define LEDColorRed()     LEDColor(255,   0,   0)
-#define LEDColorOrange()  LEDColor(255,  80,   0)
-#define LEDColorYellow()  LEDColor(255, 255,   0)
-#define LEDColorGreen()   LEDColor(  0, 255,   0)
-#define LEDColorBlue()    LEDColor(  0,   0, 255)
-#define LEDColorIndigo()  LEDColor(  0, 255, 255)
-#define LEDColorViolet()  LEDColor(255,   0, 255)
 
 class LEDLights {
 public:

commit 49cf92dc36424cf828436f32e72263eca39a1cc3
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 16 23:43:06 2019 -0500

    Extended condition macros (#13419)
    
    Allow `ENABLED`, `DISABLED`, `PIN_EXISTS`, and `BUTTON_EXISTS` to take multiple arguments. Also add:
    - Alias `ANY(...)` for `!DISABLED(...)`
    - Alias `ANY_PIN(...)` for `PIN_EXISTS(a) || PIN_EXISTS(b) ...`
    - Alias `EITHER(A,B)` for `ANY(...)`
    - Alias `ALL(...)` and `BOTH(A,B)` for `ENABLED(...)`
    - `NONE(...)` for `DISABLED(...)`

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 5a136cdd2b..bbd609c29a 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -33,7 +33,7 @@
   #include "neopixel.h"
 #endif
 
-#define HAS_WHITE_LED (ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_LED))
+#define HAS_WHITE_LED EITHER(RGBW_LED, NEOPIXEL_LED)
 
 /**
  * LEDcolor type for use with leds.set_color
@@ -183,7 +183,7 @@ public:
     static inline LEDColor get_color() { return lights_on ? color : LEDColorOff(); }
   #endif
 
-  #if ENABLED(LED_CONTROL_MENU) || ENABLED(PRINTER_EVENT_LEDS)
+  #if EITHER(LED_CONTROL_MENU, PRINTER_EVENT_LEDS)
     static LEDColor color; // last non-off color
     static bool lights_on; // the last set color was "on"
   #endif

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index dc58078bfd..5a136cdd2b 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 7fde8d9d1e264c09246b0c7f64fc5c56b3752cd6
Author: mikeshub <mikesbaker@gmail.com>
Date:   Mon Jan 14 14:29:55 2019 -0600

    Add CreatorPro / Makerbot / QIDI / etc and Mightboard RevE support (#12855)
    
    - Fix a bug in MAXxxxx thermocouple temp reporting.
    - Add support for 3-wire HD44780.
    - Add support for PCA9533 RGB driver.
    - Add configuration examples for FlashForge CreatorPro.

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 77654d44a3..dc58078bfd 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -187,6 +187,7 @@ public:
     static LEDColor color; // last non-off color
     static bool lights_on; // the last set color was "on"
   #endif
+
   #if ENABLED(LED_CONTROL_MENU)
     static void toggle();  // swap "off" with color
     static inline void update() { set_color(color); }

commit 471f403a671e7d095477be9a0cf2ed18d6dcbbd8
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 11 07:51:39 2018 -0600

    Reduce code size with plain inlines

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 224e3cc200..77654d44a3 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -146,7 +146,7 @@ public:
     #endif
   );
 
-  FORCE_INLINE void set_color(uint8_t r, uint8_t g, uint8_t b
+  inline void set_color(uint8_t r, uint8_t g, uint8_t b
     #if HAS_WHITE_LED
       , uint8_t w=0
       #if ENABLED(NEOPIXEL_LED)
@@ -164,23 +164,23 @@ public:
     );
   }
 
-  FORCE_INLINE static void set_off()   { set_color(LEDColorOff()); }
-  FORCE_INLINE static void set_green() { set_color(LEDColorGreen()); }
-  FORCE_INLINE static void set_white() { set_color(LEDColorWhite()); }
+  static inline void set_off()   { set_color(LEDColorOff()); }
+  static inline void set_green() { set_color(LEDColorGreen()); }
+  static inline void set_white() { set_color(LEDColorWhite()); }
 
   #if ENABLED(LED_COLOR_PRESETS)
     static const LEDColor defaultLEDColor;
-    FORCE_INLINE static void set_default()  { set_color(defaultLEDColor); }
-    FORCE_INLINE static void set_red()      { set_color(LEDColorRed()); }
-    FORCE_INLINE static void set_orange()   { set_color(LEDColorOrange()); }
-    FORCE_INLINE static void set_yellow()   { set_color(LEDColorYellow()); }
-    FORCE_INLINE static void set_blue()     { set_color(LEDColorBlue()); }
-    FORCE_INLINE static void set_indigo()   { set_color(LEDColorIndigo()); }
-    FORCE_INLINE static void set_violet()   { set_color(LEDColorViolet()); }
+    static inline void set_default()  { set_color(defaultLEDColor); }
+    static inline void set_red()      { set_color(LEDColorRed()); }
+    static inline void set_orange()   { set_color(LEDColorOrange()); }
+    static inline void set_yellow()   { set_color(LEDColorYellow()); }
+    static inline void set_blue()     { set_color(LEDColorBlue()); }
+    static inline void set_indigo()   { set_color(LEDColorIndigo()); }
+    static inline void set_violet()   { set_color(LEDColorViolet()); }
   #endif
 
   #if ENABLED(PRINTER_EVENT_LEDS)
-    FORCE_INLINE static LEDColor get_color() { return lights_on ? color : LEDColorOff(); }
+    static inline LEDColor get_color() { return lights_on ? color : LEDColorOff(); }
   #endif
 
   #if ENABLED(LED_CONTROL_MENU) || ENABLED(PRINTER_EVENT_LEDS)
@@ -189,7 +189,7 @@ public:
   #endif
   #if ENABLED(LED_CONTROL_MENU)
     static void toggle();  // swap "off" with color
-    FORCE_INLINE static void update() { set_color(color); }
+    static inline void update() { set_color(color); }
   #endif
 };
 

commit 323c0883564743409ff335f3578d9ee033163571
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Nov 1 23:44:41 2018 +0100

    Restore LED light color after pid tuning (#12082)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index a59a655fb8..224e3cc200 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -115,12 +115,12 @@ typedef struct LEDColor {
  * Color helpers and presets
  */
 #if HAS_WHITE_LED
-  #define LEDColorWhite() LEDColor(0, 0, 0, 255)
   #if ENABLED(NEOPIXEL_LED)
     #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B, W, I)
   #else
     #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B, W)
   #endif
+  #define LEDColorWhite() LEDColor(0, 0, 0, 255)
 #else
   #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B)
   #define LEDColorWhite() LEDColor(255, 255, 255)
@@ -164,9 +164,9 @@ public:
     );
   }
 
-  static void set_white();
   FORCE_INLINE static void set_off()   { set_color(LEDColorOff()); }
   FORCE_INLINE static void set_green() { set_color(LEDColorGreen()); }
+  FORCE_INLINE static void set_white() { set_color(LEDColorWhite()); }
 
   #if ENABLED(LED_COLOR_PRESETS)
     static const LEDColor defaultLEDColor;
@@ -179,9 +179,15 @@ public:
     FORCE_INLINE static void set_violet()   { set_color(LEDColorViolet()); }
   #endif
 
-  #if ENABLED(LED_CONTROL_MENU)
+  #if ENABLED(PRINTER_EVENT_LEDS)
+    FORCE_INLINE static LEDColor get_color() { return lights_on ? color : LEDColorOff(); }
+  #endif
+
+  #if ENABLED(LED_CONTROL_MENU) || ENABLED(PRINTER_EVENT_LEDS)
     static LEDColor color; // last non-off color
     static bool lights_on; // the last set color was "on"
+  #endif
+  #if ENABLED(LED_CONTROL_MENU)
     static void toggle();  // swap "off" with color
     FORCE_INLINE static void update() { set_color(color); }
   #endif

commit eeef4e630a2ed045a2975354b70d92d5a9fe0d9d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Oct 20 16:48:28 2018 -0500

    Fix compile error in leds.h

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 220de6d15d..a59a655fb8 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -27,6 +27,8 @@
 
 #include "../../inc/MarlinConfigPre.h"
 
+#include <string.h>
+
 #if ENABLED(NEOPIXEL_LED)
   #include "neopixel.h"
 #endif
@@ -45,6 +47,7 @@ typedef struct LEDColor {
       #endif
     #endif
   ;
+
   LEDColor() : r(255), g(255), b(255)
     #if HAS_WHITE_LED
       , w(255)
@@ -53,6 +56,7 @@ typedef struct LEDColor {
       #endif
     #endif
   {}
+
   LEDColor(uint8_t r, uint8_t g, uint8_t b
     #if HAS_WHITE_LED
       , uint8_t w=0
@@ -68,6 +72,7 @@ typedef struct LEDColor {
       #endif
     #endif
   {}
+
   LEDColor(const uint8_t (&rgbw)[4]) : r(rgbw[0]), g(rgbw[1]), b(rgbw[2])
     #if HAS_WHITE_LED
       , w(rgbw[3])
@@ -76,6 +81,7 @@ typedef struct LEDColor {
       #endif
     #endif
   {}
+
   LEDColor& operator=(const uint8_t (&rgbw)[4]) {
     r = rgbw[0]; g = rgbw[1]; b = rgbw[2];
     #if HAS_WHITE_LED
@@ -83,15 +89,19 @@ typedef struct LEDColor {
     #endif
     return *this;
   }
+
   LEDColor& operator=(const LEDColor &right) {
     if (this != &right) memcpy(this, &right, sizeof(LEDColor));
     return *this;
   }
+
   bool operator==(const LEDColor &right) {
     if (this == &right) return true;
     return 0 == memcmp(this, &right, sizeof(LEDColor));
   }
+
   bool operator!=(const LEDColor &right) { return !operator==(right); }
+
   bool is_off() const {
     return 3 > r + g + b
       #if HAS_WHITE_LED

commit d43d4e421977e333f1a7fbff8b939e0288b3616c
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Oct 11 04:25:43 2018 +0200

    Refactor PRINTER_EVENT_LEDS, apply to M303 (#12038)
    
    Co-Authored-By: Giuliano Zaro <gmagician@users.noreply.github.com>

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index fe00cd3c48..220de6d15d 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -19,15 +19,13 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 /**
  * leds.h - Marlin general RGB LED support
  */
 
-#ifndef __LEDS_H__
-#define __LEDS_H__
-
-#include "../../inc/MarlinConfig.h"
+#include "../../inc/MarlinConfigPre.h"
 
 #if ENABLED(NEOPIXEL_LED)
   #include "neopixel.h"
@@ -180,5 +178,3 @@ public:
 };
 
 extern LEDLights leds;
-
-#endif // __LEDS_H__

commit 8190fdb26077d43a0ebb7f7b45417bfd367355e9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 20 16:58:41 2018 -0600

    [2.0.x] Option to use Neopixel as case light (#9270)
    
    * Add option to use Neopixel as case light
    
    * Apply CASE_LIGHT_USE_NEOPIXEL to example configs

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index f5194a260f..fe00cd3c48 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -70,6 +70,21 @@ typedef struct LEDColor {
       #endif
     #endif
   {}
+  LEDColor(const uint8_t (&rgbw)[4]) : r(rgbw[0]), g(rgbw[1]), b(rgbw[2])
+    #if HAS_WHITE_LED
+      , w(rgbw[3])
+      #if ENABLED(NEOPIXEL_LED)
+        , i(NEOPIXEL_BRIGHTNESS)
+      #endif
+    #endif
+  {}
+  LEDColor& operator=(const uint8_t (&rgbw)[4]) {
+    r = rgbw[0]; g = rgbw[1]; b = rgbw[2];
+    #if HAS_WHITE_LED
+      w = rgbw[3];
+    #endif
+    return *this;
+  }
   LEDColor& operator=(const LEDColor &right) {
     if (this != &right) memcpy(this, &right, sizeof(LEDColor));
     return *this;

commit e37dd645488ffc4377b6ec818c1e38e55b5903b7
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 28 01:07:10 2017 -0600

    Apply LEDColor, language fixes

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 1691593445..f5194a260f 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -21,7 +21,7 @@
  */
 
 /**
- * Marlin general RGB LED support
+ * leds.h - Marlin general RGB LED support
  */
 
 #ifndef __LEDS_H__
@@ -30,41 +30,140 @@
 #include "../../inc/MarlinConfig.h"
 
 #if ENABLED(NEOPIXEL_LED)
-  #include <Adafruit_NeoPixel.h>
   #include "neopixel.h"
 #endif
 
-#if ENABLED(BLINKM)
-  #include "blinkm.h"
-#endif
-
-#if ENABLED(PCA9632)
-  #include "pca9632.h"
-#endif
+#define HAS_WHITE_LED (ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_LED))
 
-#if ENABLED(RGB_LED) || ENABLED(BLINKM) || ENABLED(PCA9632)
-  #define LED_WHITE 255, 255, 255
-#elif ENABLED(RGBW_LED)
-  #define LED_WHITE 0, 0, 0, 255
-#endif
+/**
+ * LEDcolor type for use with leds.set_color
+ */
+typedef struct LEDColor {
+  uint8_t r, g, b
+    #if HAS_WHITE_LED
+      , w
+      #if ENABLED(NEOPIXEL_LED)
+        , i
+      #endif
+    #endif
+  ;
+  LEDColor() : r(255), g(255), b(255)
+    #if HAS_WHITE_LED
+      , w(255)
+      #if ENABLED(NEOPIXEL_LED)
+        , i(NEOPIXEL_BRIGHTNESS)
+      #endif
+    #endif
+  {}
+  LEDColor(uint8_t r, uint8_t g, uint8_t b
+    #if HAS_WHITE_LED
+      , uint8_t w=0
+      #if ENABLED(NEOPIXEL_LED)
+        , uint8_t i=NEOPIXEL_BRIGHTNESS
+      #endif
+    #endif
+    ) : r(r), g(g), b(b)
+    #if HAS_WHITE_LED
+      , w(w)
+      #if ENABLED(NEOPIXEL_LED)
+        , i(i)
+      #endif
+    #endif
+  {}
+  LEDColor& operator=(const LEDColor &right) {
+    if (this != &right) memcpy(this, &right, sizeof(LEDColor));
+    return *this;
+  }
+  bool operator==(const LEDColor &right) {
+    if (this == &right) return true;
+    return 0 == memcmp(this, &right, sizeof(LEDColor));
+  }
+  bool operator!=(const LEDColor &right) { return !operator==(right); }
+  bool is_off() const {
+    return 3 > r + g + b
+      #if HAS_WHITE_LED
+        + w
+      #endif
+    ;
+  }
+} LEDColor;
 
-#if ENABLED(NEOPIXEL_LED)
-  #define LED_BRIGHTNESS pixels.getBrightness()
+/**
+ * Color helpers and presets
+ */
+#if HAS_WHITE_LED
+  #define LEDColorWhite() LEDColor(0, 0, 0, 255)
+  #if ENABLED(NEOPIXEL_LED)
+    #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B, W, I)
+  #else
+    #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B, W)
+  #endif
 #else
-  #define LED_BRIGHTNESS 255
+  #define MakeLEDColor(R,G,B,W,I) LEDColor(R, G, B)
+  #define LEDColorWhite() LEDColor(255, 255, 255)
 #endif
+#define LEDColorOff()     LEDColor(  0,   0,   0)
+#define LEDColorRed()     LEDColor(255,   0,   0)
+#define LEDColorOrange()  LEDColor(255,  80,   0)
+#define LEDColorYellow()  LEDColor(255, 255,   0)
+#define LEDColorGreen()   LEDColor(  0, 255,   0)
+#define LEDColorBlue()    LEDColor(  0,   0, 255)
+#define LEDColorIndigo()  LEDColor(  0, 255, 255)
+#define LEDColorViolet()  LEDColor(255,   0, 255)
+
+class LEDLights {
+public:
+  LEDLights() {} // ctor
+
+  static void setup(); // init()
 
-void set_led_color(
-  const uint8_t r, const uint8_t g, const uint8_t b
-    #if ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_LED)
-      , const uint8_t w = 0
+  static void set_color(const LEDColor &color
+    #if ENABLED(NEOPIXEL_LED)
+      , bool isSequence=false
+    #endif
+  );
+
+  FORCE_INLINE void set_color(uint8_t r, uint8_t g, uint8_t b
+    #if HAS_WHITE_LED
+      , uint8_t w=0
       #if ENABLED(NEOPIXEL_LED)
-        , const uint8_t p = NEOPIXEL_BRIGHTNESS
-        , const bool isSequence = false
+        , uint8_t i=NEOPIXEL_BRIGHTNESS
       #endif
     #endif
-);
+    #if ENABLED(NEOPIXEL_LED)
+      , bool isSequence=false
+    #endif
+  ) {
+    set_color(MakeLEDColor(r, g, b, w, i)
+      #if ENABLED(NEOPIXEL_LED)
+        , isSequence
+      #endif
+    );
+  }
+
+  static void set_white();
+  FORCE_INLINE static void set_off()   { set_color(LEDColorOff()); }
+  FORCE_INLINE static void set_green() { set_color(LEDColorGreen()); }
+
+  #if ENABLED(LED_COLOR_PRESETS)
+    static const LEDColor defaultLEDColor;
+    FORCE_INLINE static void set_default()  { set_color(defaultLEDColor); }
+    FORCE_INLINE static void set_red()      { set_color(LEDColorRed()); }
+    FORCE_INLINE static void set_orange()   { set_color(LEDColorOrange()); }
+    FORCE_INLINE static void set_yellow()   { set_color(LEDColorYellow()); }
+    FORCE_INLINE static void set_blue()     { set_color(LEDColorBlue()); }
+    FORCE_INLINE static void set_indigo()   { set_color(LEDColorIndigo()); }
+    FORCE_INLINE static void set_violet()   { set_color(LEDColorViolet()); }
+  #endif
+
+  #if ENABLED(LED_CONTROL_MENU)
+    static LEDColor color; // last non-off color
+    static bool lights_on; // the last set color was "on"
+    static void toggle();  // swap "off" with color
+    FORCE_INLINE static void update() { set_color(color); }
+  #endif
+};
 
-void set_led_white();
+extern LEDLights leds;
 
 #endif // __LEDS_H__

commit cf0f78336b7557f7aca81e841c1e6b74c3f1be07
Author: Tannoo <tannoo@msn.com>
Date:   Thu Nov 9 16:39:01 2017 -0700

    New Feature: LED_CONTROL_MENU

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index 81c822666a..1691593445 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -65,4 +65,6 @@ void set_led_color(
     #endif
 );
 
+void set_led_white();
+
 #endif // __LEDS_H__

commit 3ac581eac92d31287580ea6da5357f3d6cd82db5
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 25 15:50:36 2017 -0500

    Neopixel changes for parity with 1.1.x

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index b67e982a77..81c822666a 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -27,6 +27,8 @@
 #ifndef __LEDS_H__
 #define __LEDS_H__
 
+#include "../../inc/MarlinConfig.h"
+
 #if ENABLED(NEOPIXEL_LED)
   #include <Adafruit_NeoPixel.h>
   #include "neopixel.h"
@@ -40,14 +42,6 @@
   #include "pca9632.h"
 #endif
 
-#if ENABLED(NEOPIXEL_LED) 
-  #if NEOPIXEL_TYPE == NEO_RGB || NEOPIXEL_TYPE == NEO_RBG || NEOPIXEL_TYPE == NEO_GRB || NEOPIXEL_TYPE == NEO_GBR || NEOPIXEL_TYPE == NEO_BRG || NEOPIXEL_TYPE == NEO_BGR
-    #define NEO_WHITE 255, 255, 255
-  #else
-    #define NEO_WHITE 0, 0, 0, 255
-  #endif
-#endif
-
 #if ENABLED(RGB_LED) || ENABLED(BLINKM) || ENABLED(PCA9632)
   #define LED_WHITE 255, 255, 255
 #elif ENABLED(RGBW_LED)
@@ -61,7 +55,14 @@
 #endif
 
 void set_led_color(
-  const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w = 0, const uint8_t p = 255
+  const uint8_t r, const uint8_t g, const uint8_t b
+    #if ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_LED)
+      , const uint8_t w = 0
+      #if ENABLED(NEOPIXEL_LED)
+        , const uint8_t p = NEOPIXEL_BRIGHTNESS
+        , const bool isSequence = false
+      #endif
+    #endif
 );
 
 #endif // __LEDS_H__

commit a11e6a1022b8f70be237fad82a9b6ba22b2db7b1
Author: Slawomir Ciunczyk <s.ciunczyk@moye.eu>
Date:   Thu Oct 5 13:45:36 2017 +0200

    Different NEOPIXEL types
    
    Same as #7728 but for 2.0.x,
    Lot of cleanup and remove references in whole code to other "LED files" than leds.h. Now will be much easier to add next drivers/libraries. e.g. FastLED. But bad news, currently FastLED is suporting only RGB devices (no RGBW)

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
index c271744fe2..b67e982a77 100644
--- a/Marlin/src/feature/leds/leds.h
+++ b/Marlin/src/feature/leds/leds.h
@@ -27,7 +27,7 @@
 #ifndef __LEDS_H__
 #define __LEDS_H__
 
-#if ENABLED(NEOPIXEL_RGBW_LED)
+#if ENABLED(NEOPIXEL_LED)
   #include <Adafruit_NeoPixel.h>
   #include "neopixel.h"
 #endif
@@ -40,14 +40,28 @@
   #include "pca9632.h"
 #endif
 
-void set_led_color(
-  const uint8_t r, const uint8_t g, const uint8_t b
-  #if ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_RGBW_LED)
-    , const uint8_t w = 0
-    #if ENABLED(NEOPIXEL_RGBW_LED)
-      , bool isSequence = false
-    #endif
+#if ENABLED(NEOPIXEL_LED) 
+  #if NEOPIXEL_TYPE == NEO_RGB || NEOPIXEL_TYPE == NEO_RBG || NEOPIXEL_TYPE == NEO_GRB || NEOPIXEL_TYPE == NEO_GBR || NEOPIXEL_TYPE == NEO_BRG || NEOPIXEL_TYPE == NEO_BGR
+    #define NEO_WHITE 255, 255, 255
+  #else
+    #define NEO_WHITE 0, 0, 0, 255
   #endif
+#endif
+
+#if ENABLED(RGB_LED) || ENABLED(BLINKM) || ENABLED(PCA9632)
+  #define LED_WHITE 255, 255, 255
+#elif ENABLED(RGBW_LED)
+  #define LED_WHITE 0, 0, 0, 255
+#endif
+
+#if ENABLED(NEOPIXEL_LED)
+  #define LED_BRIGHTNESS pixels.getBrightness()
+#else
+  #define LED_BRIGHTNESS 255
+#endif
+
+void set_led_color(
+  const uint8_t r, const uint8_t g, const uint8_t b, const uint8_t w = 0, const uint8_t p = 255
 );
 
 #endif // __LEDS_H__

commit 8fbb833de9309c53abb73dba7d33b76f0068c61a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Sep 8 14:47:47 2017 -0500

    Encapsulate RGB(W) LEDs

diff --git a/Marlin/src/feature/leds/leds.h b/Marlin/src/feature/leds/leds.h
new file mode 100644
index 0000000000..c271744fe2
--- /dev/null
+++ b/Marlin/src/feature/leds/leds.h
@@ -0,0 +1,53 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Marlin general RGB LED support
+ */
+
+#ifndef __LEDS_H__
+#define __LEDS_H__
+
+#if ENABLED(NEOPIXEL_RGBW_LED)
+  #include <Adafruit_NeoPixel.h>
+  #include "neopixel.h"
+#endif
+
+#if ENABLED(BLINKM)
+  #include "blinkm.h"
+#endif
+
+#if ENABLED(PCA9632)
+  #include "pca9632.h"
+#endif
+
+void set_led_color(
+  const uint8_t r, const uint8_t g, const uint8_t b
+  #if ENABLED(RGBW_LED) || ENABLED(NEOPIXEL_RGBW_LED)
+    , const uint8_t w = 0
+    #if ENABLED(NEOPIXEL_RGBW_LED)
+      , bool isSequence = false
+    #endif
+  #endif
+);
+
+#endif // __LEDS_H__
