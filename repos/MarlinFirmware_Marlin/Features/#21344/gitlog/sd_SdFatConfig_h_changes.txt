commit 042b238dd8b54d75bad232bac0733251f8adfb11
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jun 8 14:51:40 2024 -0500

    üßë‚Äçüíª USE_SOFTWARE_SPI => SDFAT_USE_SOFTWARE_SPI

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 0979a592a3..674737c102 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -88,8 +88,8 @@
  */
 #define MEGA_SOFT_SPI 0
 
-// Set USE_SOFTWARE_SPI nonzero to ALWAYS use Software SPI.
-#define USE_SOFTWARE_SPI 0
+// Set SDFAT_USE_SOFTWARE_SPI nonzero to ALWAYS use Software SPI.
+#define SDFAT_USE_SOFTWARE_SPI 0
 
 /**
  * The __cxa_pure_virtual function is an error handler that is invoked when

commit 06d9a2ff8f4364c13dc12e36b91399de54136097
Author: Eduard Sukharev <sukharev.eh@gmail.com>
Date:   Sat Apr 1 05:45:53 2023 +0300

    üêõ Fix Long FIlename lookup (#25598)

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index dfba641295..0979a592a3 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -109,4 +109,4 @@
 #define LONG_FILENAME_CHARSIZE TERN(UTF_FILENAME_SUPPORT, 2, 1)
 
 // Total bytes needed to store a single long filename
-#define LONG_FILENAME_LENGTH (FILENAME_LENGTH * LONG_FILENAME_CHARSIZE * MAX_VFAT_ENTRIES + 1)
+#define LONG_FILENAME_LENGTH (FILENAME_LENGTH * LONG_FILENAME_CHARSIZE * VFAT_ENTRIES_LIMIT + 1)

commit 138340ee99a852bc116e2a436932bed074624fde
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Tue Apr 13 19:34:19 2021 -0300

    Multi-Volume. Select Media for LVGL (#21344)

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 13ac3a7487..dfba641295 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -39,7 +39,7 @@
  *
  * Each card requires about 550 bytes of SRAM so use of a Mega is recommended.
  */
-#define USE_MULTIPLE_CARDS 0
+#define USE_MULTIPLE_CARDS 0 //TODO? ENABLED(MULTI_VOLUME)
 
 /**
  * Call flush for endl if ENDL_CALLS_FLUSH is nonzero

commit 5b9aeb2e5f4abbe152fa4ba5dbb5dd8151d3f6f4
Author: LinFor <linfor@gmail.com>
Date:   Wed Nov 11 23:14:39 2020 +0300

    Handle UTF in long filenames (#20087)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 8f0596c5dd..13ac3a7487 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -103,5 +103,10 @@
 
 #define FILENAME_LENGTH 13 // Number of UTF-16 characters per entry
 
+// UTF-8 may use up to 3 bytes to represent single UTF-16 code point.
+// We discard 3-byte characters allowing only 2-bytes
+// or 1-byte if UTF_FILENAME_SUPPORT disabled.
+#define LONG_FILENAME_CHARSIZE TERN(UTF_FILENAME_SUPPORT, 2, 1)
+
 // Total bytes needed to store a single long filename
-#define LONG_FILENAME_LENGTH (FILENAME_LENGTH * MAX_VFAT_ENTRIES + 1)
+#define LONG_FILENAME_LENGTH (FILENAME_LENGTH * LONG_FILENAME_CHARSIZE * MAX_VFAT_ENTRIES + 1)

commit ec23e37a4a31d12febc06922d3fa68446f58d7fb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Oct 24 17:13:10 2020 -0500

    Clean up comments, USB flash, NULLs

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 2e03a4181f..8f0596c5dd 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -22,7 +22,8 @@
 #pragma once
 
 /**
- * SdFatConfig.h
+ * sd/SdFatConfig.h
+ *
  * Arduino SdFat Library
  * Copyright (c) 2009 by William Greiman
  *

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 5057d16a8d..2e03a4181f 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 8ab6aef1c6..5057d16a8d 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 8be146642f45d3f158edd8f7e1e738f7fdaa0b48
Author: GMagician <GMagician@users.noreply.github.com>
Date:   Wed Jul 3 22:42:56 2019 +0200

    Unused SPI PIN definitions

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index feaafcdc22..8ab6aef1c6 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -90,12 +90,6 @@
 // Set USE_SOFTWARE_SPI nonzero to ALWAYS use Software SPI.
 #define USE_SOFTWARE_SPI 0
 
-// Define software SPI pins so Mega can use unmodified 168/328 shields
-#define SOFT_SPI_CS_PIN   10 // Software SPI chip select pin for the SD
-#define SOFT_SPI_MOSI_PIN 11 // Software SPI Master Out Slave In pin
-#define SOFT_SPI_MISO_PIN 12 // Software SPI Master In Slave Out pin
-#define SOFT_SPI_SCK_PIN  13 // Software SPI Clock pin
-
 /**
  * The __cxa_pure_virtual function is an error handler that is invoked when
  * a pure virtual function is called.

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 1501ae6d77..feaafcdc22 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -24,7 +24,7 @@
 /**
  * SdFatConfig.h
  * Arduino SdFat Library
- * Copyright (C) 2009 by William Greiman
+ * Copyright (c) 2009 by William Greiman
  *
  * This file is part of the Arduino Sd2Card Library
  */

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index d203aa38ae..1501ae6d77 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 643e0066a05d555ce9c49e6f3f6b4964484cca76
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Nov 20 05:36:19 2018 -0600

    Followup to #12451

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 5f90b0102e..d203aa38ae 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -106,7 +106,7 @@
  * Defines for 8.3 and long (vfat) filenames
  */
 
-#define FILENAME_LENGTH 12 // Number of UTF-16 characters per entry
+#define FILENAME_LENGTH 13 // Number of UTF-16 characters per entry
 
 // Total bytes needed to store a single long filename
-#define LONG_FILENAME_LENGTH ((FILENAME_LENGTH) * (MAX_VFAT_ENTRIES))
+#define LONG_FILENAME_LENGTH (FILENAME_LENGTH * MAX_VFAT_ENTRIES + 1)

commit 66580f32c2f4d39a82b77e4b6982e7ea6dde0766
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Nov 16 22:39:16 2018 -0600

    Make CardReader class static (#12451)
    
    * Make CardReader a static class
    * Make CardReader flags into bitfields

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index d203aa38ae..5f90b0102e 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -106,7 +106,7 @@
  * Defines for 8.3 and long (vfat) filenames
  */
 
-#define FILENAME_LENGTH 13 // Number of UTF-16 characters per entry
+#define FILENAME_LENGTH 12 // Number of UTF-16 characters per entry
 
 // Total bytes needed to store a single long filename
-#define LONG_FILENAME_LENGTH (FILENAME_LENGTH * MAX_VFAT_ENTRIES + 1)
+#define LONG_FILENAME_LENGTH ((FILENAME_LENGTH) * (MAX_VFAT_ENTRIES))

commit f5eab912ed6d336f2c37a688a0ec822ed3d42fcc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Nov 4 02:25:55 2018 -0600

    Apply #pragma once, misc cleanup (#12322)
    
    * Apply #pragma once in headers
    * Adjust some thermistors formatting
    * Misc cleanup and formatting

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index d2c769a014..d203aa38ae 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -19,6 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 /**
  * SdFatConfig.h
@@ -28,12 +29,8 @@
  * This file is part of the Arduino Sd2Card Library
  */
 
-#ifndef _SDFATCONFIG_H_
-#define _SDFATCONFIG_H_
-
 #include "../inc/MarlinConfig.h"
 
-
 /**
  * To use multiple SD cards set USE_MULTIPLE_CARDS nonzero.
  *
@@ -113,5 +110,3 @@
 
 // Total bytes needed to store a single long filename
 #define LONG_FILENAME_LENGTH (FILENAME_LENGTH * MAX_VFAT_ENTRIES + 1)
-
-#endif // _SDFATCONFIG_H_

commit 8b44745bc75918fec1aae8c57666a50e773499f5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu May 24 01:18:56 2018 -0500

    Clean up and consolidate SD-related code (#10831)

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 5cedddb06d..d2c769a014 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -62,11 +62,6 @@
  */
 #define ENDL_CALLS_FLUSH 0
 
-/**
- * Allow use of deprecated functions if ALLOW_DEPRECATED_FUNCTIONS is nonzero
- */
-#define ALLOW_DEPRECATED_FUNCTIONS 1
-
 /**
  * Allow FAT12 volumes if FAT12_SUPPORT is nonzero.
  * FAT12 has not been well tested.

commit 9f8b4c5ee858e80a48c35fcf6112f92dee58df79
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Nov 15 00:06:20 2017 -0600

    Patch SD lib files for readability

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index e4d6324ecb..5cedddb06d 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -33,7 +33,6 @@
 
 #include "../inc/MarlinConfig.h"
 
-//------------------------------------------------------------------------------
 
 /**
  * To use multiple SD cards set USE_MULTIPLE_CARDS nonzero.
@@ -44,8 +43,6 @@
  */
 #define USE_MULTIPLE_CARDS 0
 
-//------------------------------------------------------------------------------
-
 /**
  * Call flush for endl if ENDL_CALLS_FLUSH is nonzero
  *
@@ -65,39 +62,29 @@
  */
 #define ENDL_CALLS_FLUSH 0
 
-//------------------------------------------------------------------------------
-
 /**
  * Allow use of deprecated functions if ALLOW_DEPRECATED_FUNCTIONS is nonzero
  */
 #define ALLOW_DEPRECATED_FUNCTIONS 1
 
-//------------------------------------------------------------------------------
-
 /**
  * Allow FAT12 volumes if FAT12_SUPPORT is nonzero.
  * FAT12 has not been well tested.
  */
 #define FAT12_SUPPORT 0
 
-//------------------------------------------------------------------------------
-
 /**
  * SPI init rate for SD initialization commands. Must be 5 (F_CPU/64)
  * or 6 (F_CPU/128).
  */
 #define SPI_SD_INIT_RATE 5
 
-//------------------------------------------------------------------------------
-
 /**
  * Set the SS pin high for hardware SPI.  If SS is chip select for another SPI
  * device this will disable that device during the SD init phase.
  */
 #define SET_SPI_SS_HIGH 1
 
-//------------------------------------------------------------------------------
-
 /**
  * Define MEGA_SOFT_SPI nonzero to use software SPI on Mega Arduinos.
  * Pins used are SS 10, MOSI 11, MISO 12, and SCK 13.
@@ -108,8 +95,6 @@
  */
 #define MEGA_SOFT_SPI 0
 
-//------------------------------------------------------------------------------
-
 // Set USE_SOFTWARE_SPI nonzero to ALWAYS use Software SPI.
 #define USE_SOFTWARE_SPI 0
 
@@ -119,8 +104,6 @@
 #define SOFT_SPI_MISO_PIN 12 // Software SPI Master In Slave Out pin
 #define SOFT_SPI_SCK_PIN  13 // Software SPI Clock pin
 
-//------------------------------------------------------------------------------
-
 /**
  * The __cxa_pure_virtual function is an error handler that is invoked when
  * a pure virtual function is called.

commit 9f89b5d876c6463d25af5e2a2ecf8a6705ad002f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 30 15:11:47 2017 -0500

    Fix for MAX_VFAT_ENTRIES sanity check

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 5d057c929f..e4d6324ecb 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -133,14 +133,6 @@
 
 #define FILENAME_LENGTH 13 // Number of UTF-16 characters per entry
 
-// Number of VFAT entries used. Each entry has 13 UTF-16 characters
-#undef MAX_VFAT_ENTRIES
-#if ENABLED(SCROLL_LONG_FILENAMES)
-  #define MAX_VFAT_ENTRIES (5)
-#else
-  #define MAX_VFAT_ENTRIES (2)
-#endif
-
 // Total bytes needed to store a single long filename
 #define LONG_FILENAME_LENGTH (FILENAME_LENGTH * MAX_VFAT_ENTRIES + 1)
 

commit 2cdde0833946ee3b04c08cf2f83f2453f4fda0a1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Oct 30 14:34:11 2017 -0500

    Apply items specified in code review
    
    Followup to #8122

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 7044920ffc..5d057c929f 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -134,9 +134,7 @@
 #define FILENAME_LENGTH 13 // Number of UTF-16 characters per entry
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
-#ifdef MAX_VFAT_ENTRIES
-  #undef MAX_VFAT_ENTRIES
-#endif  
+#undef MAX_VFAT_ENTRIES
 #if ENABLED(SCROLL_LONG_FILENAMES)
   #define MAX_VFAT_ENTRIES (5)
 #else

commit b7a66742ddbcbc2e6090dc28997f1e843d9052ac
Author: Bob-the-Kuhn <bob.kuhn@att.net>
Date:   Fri Oct 27 13:42:19 2017 -0500

    tested
    
    add sort alpha section to other LPC1768 boards

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index e4e81255d1..7044920ffc 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -134,6 +134,9 @@
 #define FILENAME_LENGTH 13 // Number of UTF-16 characters per entry
 
 // Number of VFAT entries used. Each entry has 13 UTF-16 characters
+#ifdef MAX_VFAT_ENTRIES
+  #undef MAX_VFAT_ENTRIES
+#endif  
 #if ENABLED(SCROLL_LONG_FILENAMES)
   #define MAX_VFAT_ENTRIES (5)
 #else

commit 783ddf9691f425dc1c1bd5c4e4df4461ca717a06
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 18 22:15:33 2017 -0500

    Add SCROLL_LONG_FILENAMES option

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index 8f30f5b7b4..e4e81255d1 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -21,20 +21,20 @@
  */
 
 /**
+ * SdFatConfig.h
  * Arduino SdFat Library
  * Copyright (C) 2009 by William Greiman
  *
  * This file is part of the Arduino Sd2Card Library
  */
 
-/**
- * \file
- * \brief configuration definitions
- */
-#ifndef SDFATCONFIG_H
-#define SDFATCONFIG_H
+#ifndef _SDFATCONFIG_H_
+#define _SDFATCONFIG_H_
+
+#include "../inc/MarlinConfig.h"
 
 //------------------------------------------------------------------------------
+
 /**
  * To use multiple SD cards set USE_MULTIPLE_CARDS nonzero.
  *
@@ -43,7 +43,9 @@
  * Each card requires about 550 bytes of SRAM so use of a Mega is recommended.
  */
 #define USE_MULTIPLE_CARDS 0
+
 //------------------------------------------------------------------------------
+
 /**
  * Call flush for endl if ENDL_CALLS_FLUSH is nonzero
  *
@@ -62,30 +64,40 @@
  * all data to be written to the SD.
  */
 #define ENDL_CALLS_FLUSH 0
+
 //------------------------------------------------------------------------------
+
 /**
  * Allow use of deprecated functions if ALLOW_DEPRECATED_FUNCTIONS is nonzero
  */
 #define ALLOW_DEPRECATED_FUNCTIONS 1
+
 //------------------------------------------------------------------------------
+
 /**
  * Allow FAT12 volumes if FAT12_SUPPORT is nonzero.
  * FAT12 has not been well tested.
  */
 #define FAT12_SUPPORT 0
+
 //------------------------------------------------------------------------------
+
 /**
  * SPI init rate for SD initialization commands. Must be 5 (F_CPU/64)
  * or 6 (F_CPU/128).
  */
 #define SPI_SD_INIT_RATE 5
+
 //------------------------------------------------------------------------------
+
 /**
  * Set the SS pin high for hardware SPI.  If SS is chip select for another SPI
  * device this will disable that device during the SD init phase.
  */
 #define SET_SPI_SS_HIGH 1
+
 //------------------------------------------------------------------------------
+
 /**
  * Define MEGA_SOFT_SPI nonzero to use software SPI on Mega Arduinos.
  * Pins used are SS 10, MOSI 11, MISO 12, and SCK 13.
@@ -95,36 +107,40 @@
  * but many SD cards will fail with GPS Shield V1.0.
  */
 #define MEGA_SOFT_SPI 0
+
 //------------------------------------------------------------------------------
-/**
- * Set USE_SOFTWARE_SPI nonzero to always use software SPI.
- */
+
+// Set USE_SOFTWARE_SPI nonzero to ALWAYS use Software SPI.
 #define USE_SOFTWARE_SPI 0
-// define software SPI pins so Mega can use unmodified 168/328 shields
-/** Software SPI chip select pin for the SD */
-#define SOFT_SPI_CS_PIN 10
-/** Software SPI Master Out Slave In pin */
-#define SOFT_SPI_MOSI_PIN 11
-/** Software SPI Master In Slave Out pin */
-#define SOFT_SPI_MISO_PIN 12
-/** Software SPI Clock pin */
-#define SOFT_SPI_SCK_PIN 13
+
+// Define software SPI pins so Mega can use unmodified 168/328 shields
+#define SOFT_SPI_CS_PIN   10 // Software SPI chip select pin for the SD
+#define SOFT_SPI_MOSI_PIN 11 // Software SPI Master Out Slave In pin
+#define SOFT_SPI_MISO_PIN 12 // Software SPI Master In Slave Out pin
+#define SOFT_SPI_SCK_PIN  13 // Software SPI Clock pin
+
 //------------------------------------------------------------------------------
+
 /**
  * The __cxa_pure_virtual function is an error handler that is invoked when
  * a pure virtual function is called.
  */
 #define USE_CXA_PURE_VIRTUAL 1
 
-/** Number of UTF-16 characters per entry */
-#define FILENAME_LENGTH 13
-
 /**
- * Defines for long (vfat) filenames
+ * Defines for 8.3 and long (vfat) filenames
  */
-/** Number of VFAT entries used. Every entry has 13 UTF-16 characters */
-#define MAX_VFAT_ENTRIES (2)
-/** Total size of the buffer used to store the long filenames */
-#define LONG_FILENAME_LENGTH (FILENAME_LENGTH*MAX_VFAT_ENTRIES+1)
 
-#endif // SDFATCONFIG_H
+#define FILENAME_LENGTH 13 // Number of UTF-16 characters per entry
+
+// Number of VFAT entries used. Each entry has 13 UTF-16 characters
+#if ENABLED(SCROLL_LONG_FILENAMES)
+  #define MAX_VFAT_ENTRIES (5)
+#else
+  #define MAX_VFAT_ENTRIES (2)
+#endif
+
+// Total bytes needed to store a single long filename
+#define LONG_FILENAME_LENGTH (FILENAME_LENGTH * MAX_VFAT_ENTRIES + 1)
+
+#endif // _SDFATCONFIG_H_

commit 614a86a380cb23a5e22661f71de5bc2e3168bb11
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:32 2017 -0500

    SD file updates

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
index d3406a0282..8f30f5b7b4 100644
--- a/Marlin/src/sd/SdFatConfig.h
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -26,109 +26,105 @@
  *
  * This file is part of the Arduino Sd2Card Library
  */
+
 /**
  * \file
  * \brief configuration definitions
  */
-#include "Marlin.h"
-#if ENABLED(SDSUPPORT)
-
-#ifndef SdFatConfig_h
-  #define SdFatConfig_h
-  #include <stdint.h>
-  //------------------------------------------------------------------------------
-  /**
-  * To use multiple SD cards set USE_MULTIPLE_CARDS nonzero.
-  *
-  * Using multiple cards costs 400 - 500  bytes of flash.
-  *
-  * Each card requires about 550 bytes of SRAM so use of a Mega is recommended.
-  */
-  #define USE_MULTIPLE_CARDS 0
-  //------------------------------------------------------------------------------
-  /**
-  * Call flush for endl if ENDL_CALLS_FLUSH is nonzero
-  *
-  * The standard for iostreams is to call flush.  This is very costly for
-  * SdFat.  Each call to flush causes 2048 bytes of I/O to the SD.
-  *
-  * SdFat has a single 512 byte buffer for SD I/O so it must write the current
-  * data block to the SD, read the directory block from the SD, update the
-  * directory entry, write the directory block to the SD and read the data
-  * block back into the buffer.
-  *
-  * The SD flash memory controller is not designed for this many rewrites
-  * so performance may be reduced by more than a factor of 100.
-  *
-  * If ENDL_CALLS_FLUSH is zero, you must call flush and/or close to force
-  * all data to be written to the SD.
-  */
-  #define ENDL_CALLS_FLUSH 0
-  //------------------------------------------------------------------------------
-  /**
-  * Allow use of deprecated functions if ALLOW_DEPRECATED_FUNCTIONS is nonzero
-  */
-  #define ALLOW_DEPRECATED_FUNCTIONS 1
-  //------------------------------------------------------------------------------
-  /**
-  * Allow FAT12 volumes if FAT12_SUPPORT is nonzero.
-  * FAT12 has not been well tested.
-  */
-  #define FAT12_SUPPORT 0
-  //------------------------------------------------------------------------------
-  /**
-  * SPI init rate for SD initialization commands. Must be 5 (F_CPU/64)
-  * or 6 (F_CPU/128).
-  */
-  #define SPI_SD_INIT_RATE 5
-  //------------------------------------------------------------------------------
-  /**
-  * Set the SS pin high for hardware SPI.  If SS is chip select for another SPI
-  * device this will disable that device during the SD init phase.
-  */
-  #define SET_SPI_SS_HIGH 1
-  //------------------------------------------------------------------------------
-  /**
-  * Define MEGA_SOFT_SPI nonzero to use software SPI on Mega Arduinos.
-  * Pins used are SS 10, MOSI 11, MISO 12, and SCK 13.
-  *
-  * MEGA_SOFT_SPI allows an unmodified Adafruit GPS Shield to be used
-  * on Mega Arduinos.  Software SPI works well with GPS Shield V1.1
-  * but many SD cards will fail with GPS Shield V1.0.
-  */
-  #define MEGA_SOFT_SPI 0
-  //------------------------------------------------------------------------------
-  /**
-  * Set USE_SOFTWARE_SPI nonzero to always use software SPI.
-  */
-  #define USE_SOFTWARE_SPI 0
-  // define software SPI pins so Mega can use unmodified 168/328 shields
-  /** Software SPI chip select pin for the SD */
-  #define SOFT_SPI_CS_PIN 10
-  /** Software SPI Master Out Slave In pin */
-  #define SOFT_SPI_MOSI_PIN 11
-  /** Software SPI Master In Slave Out pin */
-  #define SOFT_SPI_MISO_PIN 12
-  /** Software SPI Clock pin */
-  #define SOFT_SPI_SCK_PIN 13
-  //------------------------------------------------------------------------------
-  /**
-  * The __cxa_pure_virtual function is an error handler that is invoked when
-  * a pure virtual function is called.
-  */
-  #define USE_CXA_PURE_VIRTUAL 1
+#ifndef SDFATCONFIG_H
+#define SDFATCONFIG_H
 
-  /** Number of UTF-16 characters per entry */
-  #define FILENAME_LENGTH 13
+//------------------------------------------------------------------------------
+/**
+ * To use multiple SD cards set USE_MULTIPLE_CARDS nonzero.
+ *
+ * Using multiple cards costs 400 - 500  bytes of flash.
+ *
+ * Each card requires about 550 bytes of SRAM so use of a Mega is recommended.
+ */
+#define USE_MULTIPLE_CARDS 0
+//------------------------------------------------------------------------------
+/**
+ * Call flush for endl if ENDL_CALLS_FLUSH is nonzero
+ *
+ * The standard for iostreams is to call flush.  This is very costly for
+ * SdFat.  Each call to flush causes 2048 bytes of I/O to the SD.
+ *
+ * SdFat has a single 512 byte buffer for SD I/O so it must write the current
+ * data block to the SD, read the directory block from the SD, update the
+ * directory entry, write the directory block to the SD and read the data
+ * block back into the buffer.
+ *
+ * The SD flash memory controller is not designed for this many rewrites
+ * so performance may be reduced by more than a factor of 100.
+ *
+ * If ENDL_CALLS_FLUSH is zero, you must call flush and/or close to force
+ * all data to be written to the SD.
+ */
+#define ENDL_CALLS_FLUSH 0
+//------------------------------------------------------------------------------
+/**
+ * Allow use of deprecated functions if ALLOW_DEPRECATED_FUNCTIONS is nonzero
+ */
+#define ALLOW_DEPRECATED_FUNCTIONS 1
+//------------------------------------------------------------------------------
+/**
+ * Allow FAT12 volumes if FAT12_SUPPORT is nonzero.
+ * FAT12 has not been well tested.
+ */
+#define FAT12_SUPPORT 0
+//------------------------------------------------------------------------------
+/**
+ * SPI init rate for SD initialization commands. Must be 5 (F_CPU/64)
+ * or 6 (F_CPU/128).
+ */
+#define SPI_SD_INIT_RATE 5
+//------------------------------------------------------------------------------
+/**
+ * Set the SS pin high for hardware SPI.  If SS is chip select for another SPI
+ * device this will disable that device during the SD init phase.
+ */
+#define SET_SPI_SS_HIGH 1
+//------------------------------------------------------------------------------
+/**
+ * Define MEGA_SOFT_SPI nonzero to use software SPI on Mega Arduinos.
+ * Pins used are SS 10, MOSI 11, MISO 12, and SCK 13.
+ *
+ * MEGA_SOFT_SPI allows an unmodified Adafruit GPS Shield to be used
+ * on Mega Arduinos.  Software SPI works well with GPS Shield V1.1
+ * but many SD cards will fail with GPS Shield V1.0.
+ */
+#define MEGA_SOFT_SPI 0
+//------------------------------------------------------------------------------
+/**
+ * Set USE_SOFTWARE_SPI nonzero to always use software SPI.
+ */
+#define USE_SOFTWARE_SPI 0
+// define software SPI pins so Mega can use unmodified 168/328 shields
+/** Software SPI chip select pin for the SD */
+#define SOFT_SPI_CS_PIN 10
+/** Software SPI Master Out Slave In pin */
+#define SOFT_SPI_MOSI_PIN 11
+/** Software SPI Master In Slave Out pin */
+#define SOFT_SPI_MISO_PIN 12
+/** Software SPI Clock pin */
+#define SOFT_SPI_SCK_PIN 13
+//------------------------------------------------------------------------------
+/**
+ * The __cxa_pure_virtual function is an error handler that is invoked when
+ * a pure virtual function is called.
+ */
+#define USE_CXA_PURE_VIRTUAL 1
 
-  /**
-  * Defines for long (vfat) filenames
-  */
-  /** Number of VFAT entries used. Every entry has 13 UTF-16 characters */
-  #define MAX_VFAT_ENTRIES (2)
-  /** Total size of the buffer used to store the long filenames */
-  #define LONG_FILENAME_LENGTH (FILENAME_LENGTH*MAX_VFAT_ENTRIES+1)
-#endif  // SdFatConfig_h
+/** Number of UTF-16 characters per entry */
+#define FILENAME_LENGTH 13
 
+/**
+ * Defines for long (vfat) filenames
+ */
+/** Number of VFAT entries used. Every entry has 13 UTF-16 characters */
+#define MAX_VFAT_ENTRIES (2)
+/** Total size of the buffer used to store the long filenames */
+#define LONG_FILENAME_LENGTH (FILENAME_LENGTH*MAX_VFAT_ENTRIES+1)
 
-#endif
+#endif // SDFATCONFIG_H

commit b66d65f8657efe2ddecfe4a4c255b2d260671ce1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:31 2017 -0500

    Move 'sd' files

diff --git a/Marlin/src/sd/SdFatConfig.h b/Marlin/src/sd/SdFatConfig.h
new file mode 100644
index 0000000000..d3406a0282
--- /dev/null
+++ b/Marlin/src/sd/SdFatConfig.h
@@ -0,0 +1,134 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Arduino SdFat Library
+ * Copyright (C) 2009 by William Greiman
+ *
+ * This file is part of the Arduino Sd2Card Library
+ */
+/**
+ * \file
+ * \brief configuration definitions
+ */
+#include "Marlin.h"
+#if ENABLED(SDSUPPORT)
+
+#ifndef SdFatConfig_h
+  #define SdFatConfig_h
+  #include <stdint.h>
+  //------------------------------------------------------------------------------
+  /**
+  * To use multiple SD cards set USE_MULTIPLE_CARDS nonzero.
+  *
+  * Using multiple cards costs 400 - 500  bytes of flash.
+  *
+  * Each card requires about 550 bytes of SRAM so use of a Mega is recommended.
+  */
+  #define USE_MULTIPLE_CARDS 0
+  //------------------------------------------------------------------------------
+  /**
+  * Call flush for endl if ENDL_CALLS_FLUSH is nonzero
+  *
+  * The standard for iostreams is to call flush.  This is very costly for
+  * SdFat.  Each call to flush causes 2048 bytes of I/O to the SD.
+  *
+  * SdFat has a single 512 byte buffer for SD I/O so it must write the current
+  * data block to the SD, read the directory block from the SD, update the
+  * directory entry, write the directory block to the SD and read the data
+  * block back into the buffer.
+  *
+  * The SD flash memory controller is not designed for this many rewrites
+  * so performance may be reduced by more than a factor of 100.
+  *
+  * If ENDL_CALLS_FLUSH is zero, you must call flush and/or close to force
+  * all data to be written to the SD.
+  */
+  #define ENDL_CALLS_FLUSH 0
+  //------------------------------------------------------------------------------
+  /**
+  * Allow use of deprecated functions if ALLOW_DEPRECATED_FUNCTIONS is nonzero
+  */
+  #define ALLOW_DEPRECATED_FUNCTIONS 1
+  //------------------------------------------------------------------------------
+  /**
+  * Allow FAT12 volumes if FAT12_SUPPORT is nonzero.
+  * FAT12 has not been well tested.
+  */
+  #define FAT12_SUPPORT 0
+  //------------------------------------------------------------------------------
+  /**
+  * SPI init rate for SD initialization commands. Must be 5 (F_CPU/64)
+  * or 6 (F_CPU/128).
+  */
+  #define SPI_SD_INIT_RATE 5
+  //------------------------------------------------------------------------------
+  /**
+  * Set the SS pin high for hardware SPI.  If SS is chip select for another SPI
+  * device this will disable that device during the SD init phase.
+  */
+  #define SET_SPI_SS_HIGH 1
+  //------------------------------------------------------------------------------
+  /**
+  * Define MEGA_SOFT_SPI nonzero to use software SPI on Mega Arduinos.
+  * Pins used are SS 10, MOSI 11, MISO 12, and SCK 13.
+  *
+  * MEGA_SOFT_SPI allows an unmodified Adafruit GPS Shield to be used
+  * on Mega Arduinos.  Software SPI works well with GPS Shield V1.1
+  * but many SD cards will fail with GPS Shield V1.0.
+  */
+  #define MEGA_SOFT_SPI 0
+  //------------------------------------------------------------------------------
+  /**
+  * Set USE_SOFTWARE_SPI nonzero to always use software SPI.
+  */
+  #define USE_SOFTWARE_SPI 0
+  // define software SPI pins so Mega can use unmodified 168/328 shields
+  /** Software SPI chip select pin for the SD */
+  #define SOFT_SPI_CS_PIN 10
+  /** Software SPI Master Out Slave In pin */
+  #define SOFT_SPI_MOSI_PIN 11
+  /** Software SPI Master In Slave Out pin */
+  #define SOFT_SPI_MISO_PIN 12
+  /** Software SPI Clock pin */
+  #define SOFT_SPI_SCK_PIN 13
+  //------------------------------------------------------------------------------
+  /**
+  * The __cxa_pure_virtual function is an error handler that is invoked when
+  * a pure virtual function is called.
+  */
+  #define USE_CXA_PURE_VIRTUAL 1
+
+  /** Number of UTF-16 characters per entry */
+  #define FILENAME_LENGTH 13
+
+  /**
+  * Defines for long (vfat) filenames
+  */
+  /** Number of VFAT entries used. Every entry has 13 UTF-16 characters */
+  #define MAX_VFAT_ENTRIES (2)
+  /** Total size of the buffer used to store the long filenames */
+  #define LONG_FILENAME_LENGTH (FILENAME_LENGTH*MAX_VFAT_ENTRIES+1)
+#endif  // SdFatConfig_h
+
+
+#endif
