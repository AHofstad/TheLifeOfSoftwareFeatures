commit 27b828891db155f8b372e4efb9891bdc91bf6d33
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Apr 7 01:33:03 2023 -0500

    üé® Apply const (#25643)

diff --git a/Marlin/src/sd/disk_io_driver.h b/Marlin/src/sd/disk_io_driver.h
index 3e2d688aea..f1f49cf85f 100644
--- a/Marlin/src/sd/disk_io_driver.h
+++ b/Marlin/src/sd/disk_io_driver.h
@@ -47,18 +47,18 @@ public:
    *
    * \return true for success or false for failure.
    */
-  virtual bool readCSD(csd_t* csd) = 0;
+  virtual bool readCSD(csd_t * const csd) = 0;
 
   virtual bool readStart(const uint32_t block) = 0;
-  virtual bool readData(uint8_t* dst) = 0;
+  virtual bool readData(uint8_t * const dst) = 0;
   virtual bool readStop() = 0;
 
   virtual bool writeStart(const uint32_t block, const uint32_t) = 0;
   virtual bool writeData(const uint8_t* src) = 0;
   virtual bool writeStop() = 0;
 
-  virtual bool readBlock(uint32_t block, uint8_t* dst) = 0;
-  virtual bool writeBlock(uint32_t blockNumber, const uint8_t* src) = 0;
+  virtual bool readBlock(const uint32_t block, uint8_t * const dst) = 0;
+  virtual bool writeBlock(const uint32_t blockNumber, const uint8_t * const src) = 0;
 
   virtual uint32_t cardSize() = 0;
 

commit 218ca0530432d6b1194ccac5fc32a72bbc9a7c96
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Sat Feb 4 05:10:26 2023 -0300

    üßë‚Äçüíª General 'MediaFile' type alias (#24424)

diff --git a/Marlin/src/sd/disk_io_driver.h b/Marlin/src/sd/disk_io_driver.h
index 02e2b3c739..3e2d688aea 100644
--- a/Marlin/src/sd/disk_io_driver.h
+++ b/Marlin/src/sd/disk_io_driver.h
@@ -22,6 +22,7 @@
 #pragma once
 
 #include <stdint.h>
+#include "SdInfo.h"
 
 /**
  * DiskIO Interface

commit afca6e745932d295b88d37fa9bd4274e22705b0b
Author: luzpaz <luzpaz@users.noreply.github.com>
Date:   Tue Aug 3 20:02:34 2021 -0400

    üêõ Spellcheck comments (#22496)
    
    codespell -q 3 --builtin=clear,rare,informal,code -S ./Marlin/src/lcd/language -L alo,amin,endcode,stdio,uint

diff --git a/Marlin/src/sd/disk_io_driver.h b/Marlin/src/sd/disk_io_driver.h
index 73c12efcfa..02e2b3c739 100644
--- a/Marlin/src/sd/disk_io_driver.h
+++ b/Marlin/src/sd/disk_io_driver.h
@@ -24,7 +24,7 @@
 #include <stdint.h>
 
 /**
- * DiskIO Interace
+ * DiskIO Interface
  *
  * Interface for low level disk io
  */

commit 138340ee99a852bc116e2a436932bed074624fde
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Tue Apr 13 19:34:19 2021 -0300

    Multi-Volume. Select Media for LVGL (#21344)

diff --git a/Marlin/src/sd/disk_io_driver.h b/Marlin/src/sd/disk_io_driver.h
new file mode 100644
index 0000000000..73c12efcfa
--- /dev/null
+++ b/Marlin/src/sd/disk_io_driver.h
@@ -0,0 +1,67 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#include <stdint.h>
+
+/**
+ * DiskIO Interace
+ *
+ * Interface for low level disk io
+ */
+class DiskIODriver {
+public:
+  /**
+   * Initialize an SD flash memory card with default clock rate and chip
+   * select pin.  See sd2Card::init(uint8_t sckRateID, uint8_t chipSelectPin).
+   *
+   * \return true for success or false for failure.
+   */
+  virtual bool init(const uint8_t sckRateID, const pin_t chipSelectPin) = 0; //TODO: only for SPI
+
+  /**
+   * Read a card's CSD register. The CSD contains Card-Specific Data that
+   * provides information regarding access to the card's contents.
+   *
+   * \param[out] csd pointer to area for returned data.
+   *
+   * \return true for success or false for failure.
+   */
+  virtual bool readCSD(csd_t* csd) = 0;
+
+  virtual bool readStart(const uint32_t block) = 0;
+  virtual bool readData(uint8_t* dst) = 0;
+  virtual bool readStop() = 0;
+
+  virtual bool writeStart(const uint32_t block, const uint32_t) = 0;
+  virtual bool writeData(const uint8_t* src) = 0;
+  virtual bool writeStop() = 0;
+
+  virtual bool readBlock(uint32_t block, uint8_t* dst) = 0;
+  virtual bool writeBlock(uint32_t blockNumber, const uint8_t* src) = 0;
+
+  virtual uint32_t cardSize() = 0;
+
+  virtual bool isReady() = 0;
+
+  virtual void idle() = 0;
+};
