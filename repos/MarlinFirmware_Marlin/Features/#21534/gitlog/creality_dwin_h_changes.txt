commit dd3b5a10a09e2a83918af1cf6f8782fd0c473f98
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Jan 21 22:00:37 2024 -0600

    Misc. aesthetic adjustments
    
    Co-Authored-By: Andrew <18502096+classicrocker883@users.noreply.github.com>

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 461c57f11c..fce52d8cf4 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -244,7 +244,6 @@ void hmiStep();            // Transmission ratio
 
 void hmiInit();
 void dwinInitScreen();
-void dwinUpdate();
 void eachMomentUpdate();
 void dwinHandleScreen();
 void dwinStatusChanged(const char * const cstr=nullptr);

commit 854f3315af645775e7b0aa39bd05db66187bcc38
Author: plampix <plampix@users.noreply.github.com>
Date:   Wed Jan 10 07:33:54 2024 +0100

    ✨ EDITABLE_STEPS_PER_UNIT (#26618)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 17a7a965ee..461c57f11c 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -204,7 +204,10 @@ void hmiPrintSpeed();
 void hmiMaxFeedspeedXYZE();
 void hmiMaxAccelerationXYZE();
 void hmiMaxJerkXYZE();
-void hmiStepXYZE();
+#if ENABLED(EDITABLE_STEPS_PER_UNIT)
+  void hmiStepXYZE();
+#endif
+
 void hmiSetLanguageCache();
 
 void updateVariable();

commit f14f1be168ebf252dd458c935271aed1a57cfa0b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 30 19:16:00 2023 -0500

    🎨 Standardize naming (ProUI) (#25982)

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 0e2d42eee9..17a7a965ee 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -34,69 +34,56 @@
 
 enum processID : uint8_t {
   // Process ID
-  MainMenu,
-  SelectFile,
-  Prepare,
-  Control,
-  Leveling,
-  PrintProcess,
-  AxisMove,
-  TemperatureID,
-  Motion,
-  Info,
-  Tune,
+  ID_MainMenu,
+  ID_SelectFile,
+  ID_Prepare,
+  ID_Control,
+  ID_Leveling,
+  ID_PrintProcess,
+  ID_AxisMove,
+  ID_TemperatureID,
+  ID_Motion,
+  ID_Info,
+  ID_Tune,
   #if HAS_PREHEAT
-    PLAPreheat,
+    ID_PLAPreheat,
     #if PREHEAT_COUNT > 1
-      ABSPreheat,
+      ID_ABSPreheat,
     #endif
   #endif
-  MaxSpeed,
-  MaxSpeed_value,
-  MaxAcceleration,
-  MaxAcceleration_value,
-  MaxJerk,
-  MaxJerk_value,
-  Step,
-  Step_value,
-  HomeOff,
-  HomeOffX,
-  HomeOffY,
-  HomeOffZ,
+  ID_MaxSpeed, ID_MaxSpeedValue,
+  ID_MaxAcceleration, ID_MaxAccelerationValue,
+  ID_MaxJerk, ID_MaxJerkValue,
+  ID_Step, ID_StepValue,
+  ID_HomeOff, ID_HomeOffX, ID_HomeOffY, ID_HomeOffZ,
 
   // Last Process ID
-  Last_Prepare,
+  ID_LastPrepare,
 
   // Advance Settings
-  AdvSet,
-  ProbeOff,
-  ProbeOffX,
-  ProbeOffY,
+  ID_AdvSet,
+  ID_ProbeOff, ID_ProbeOffX, ID_ProbeOffY,
 
   // Back Process ID
-  Back_Main,
-  Back_Print,
+  ID_BackMain, ID_BackPrint,
 
   // Date variable ID
-  Move_X,
-  Move_Y,
-  Move_Z,
+  ID_MoveX, ID_MoveY, ID_MoveZ,
   #if HAS_HOTEND
-    Extruder,
-    ETemp,
+    ID_Extruder,
+    ID_ETemp,
   #endif
-  Homeoffset,
+  ID_HomeOffset,
   #if HAS_HEATED_BED
-    BedTemp,
+    ID_BedTemp,
   #endif
   #if HAS_FAN
-    FanSpeed,
+    ID_FanSpeed,
   #endif
-  PrintSpeed,
+  ID_PrintSpeed,
 
   // Window ID
-  Print_window,
-  Popup_Window
+  ID_PrintWindow, ID_PopupWindow
 };
 
 extern uint8_t checkkey;
@@ -107,32 +94,54 @@ extern millis_t dwin_heat_time;
 
 typedef struct {
   #if HAS_HOTEND
-    celsius_t E_Temp = 0;
+    celsius_t tempE = 0;
   #endif
   #if HAS_HEATED_BED
-    celsius_t Bed_Temp = 0;
+    celsius_t tempBed = 0;
   #endif
   #if HAS_FAN
-    int16_t Fan_speed = 0;
+    int16_t fanSpeed = 0;
   #endif
-  int16_t print_speed     = 100;
-  float Max_Feedspeed     = 0;
-  float Max_Acceleration  = 0;
-  float Max_Jerk_scaled   = 0;
-  float Max_Step_scaled   = 0;
-  float Move_X_scaled     = 0;
-  float Move_Y_scaled     = 0;
-  float Move_Z_scaled     = 0;
-  #if HAS_HOTEND
-    float Move_E_scaled   = 0;
-  #endif
-  float offset_value      = 0;
-  int8_t show_mode        = 0; // -1: Temperature control    0: Printing temperature
-  float Home_OffX_scaled  = 0;
-  float Home_OffY_scaled  = 0;
-  float Home_OffZ_scaled  = 0;
-  float Probe_OffX_scaled = 0;
-  float Probe_OffY_scaled = 0;
+  int16_t printSpeed    = 100;
+  float maxFeedSpeed    = 0;
+  float maxAcceleration = 0;
+  float maxJerkScaled   = 0;
+  float maxStepScaled   = 0;
+  float offset_value    = 0;
+  int8_t show_mode      = 0; // -1: Temperature control    0: Printing temperature
+  struct {
+    #if HAS_X_AXIS
+      float x = 0;
+    #endif
+    #if HAS_Y_AXIS
+      float y = 0;
+    #endif
+    #if HAS_Z_AXIS
+      float z = 0;
+    #endif
+    #if HAS_HOTEND
+      float e = 0;
+    #endif
+  } moveScaled;
+  struct {
+    #if HAS_X_AXIS
+      float x = 0;
+    #endif
+    #if HAS_Y_AXIS
+      float y = 0;
+    #endif
+    #if HAS_Z_AXIS
+      float z = 0;
+    #endif
+  } homeOffsScaled;
+  struct {
+    #if HAS_X_AXIS
+      float x = 0;
+    #endif
+    #if HAS_Y_AXIS
+      float y = 0;
+    #endif
+  } probeOffsScaled;
 } hmi_value_t;
 
 #define DWIN_CHINESE 123
@@ -198,19 +207,13 @@ void hmiMaxJerkXYZE();
 void hmiStepXYZE();
 void hmiSetLanguageCache();
 
-void update_variable();
-void dwinDrawSigned_Float(uint8_t size, uint16_t bColor, uint8_t iNum, uint8_t fNum, uint16_t x, uint16_t y, long value);
+void updateVariable();
+void dwinDrawSignedFloat(uint8_t size, uint16_t bColor, uint8_t iNum, uint8_t fNum, uint16_t x, uint16_t y, long value);
 
 // SD Card
 void hmiSDCardInit();
 void hmiSDCardUpdate();
 
-// Main Process
-void Icon_print(bool value);
-void Icon_control(bool value);
-void Icon_temperature(bool value);
-void Icon_leveling(bool value);
-
 // Other
 void drawStatusArea(const bool with_update); // Status Area
 void hmiStartFrame(const bool with_update);   // Prepare the menu view

commit c3694f1c038fa20ad749118b0a1c7aa88e3dd5f2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 14 17:24:50 2023 -0500

    🎨 Lowercase methods, functions, data members (#25939)
    
    For: TFT, DGUS, MarlinUI, Anycubic, JyersUI, CrealityUI

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 854a011c5e..0e2d42eee9 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -133,7 +133,7 @@ typedef struct {
   float Home_OffZ_scaled  = 0;
   float Probe_OffX_scaled = 0;
   float Probe_OffY_scaled = 0;
-} HMI_value_t;
+} hmi_value_t;
 
 #define DWIN_CHINESE 123
 #define DWIN_ENGLISH 0
@@ -151,59 +151,59 @@ typedef struct {
     bool cold_flag:1;
   #endif
   AxisEnum feedspeed_axis, acc_axis, jerk_axis, step_axis;
-} HMI_flag_t;
+} hmi_flag_t;
 
-extern HMI_value_t HMI_ValueStruct;
-extern HMI_flag_t HMI_flag;
+extern hmi_value_t hmiValues;
+extern hmi_flag_t hmiFlag;
 
 #if HAS_HOTEND || HAS_HEATED_BED
   // Popup message window
-  void DWIN_Popup_Temperature(const bool toohigh);
+  void dwinPopupTemperature(const bool toohigh);
 #endif
 
 #if HAS_HOTEND
-  void Popup_Window_ETempTooLow();
+  void popupWindowETempTooLow();
 #endif
 
-void Popup_Window_Resume();
-void Popup_Window_Home(const bool parking=false);
-void Popup_Window_Leveling();
+void popupWindowResume();
+void popupWindowHome(const bool parking=false);
+void popupWindowLeveling();
 
-void Goto_PrintProcess();
-void Goto_MainMenu();
+void gotoPrintProcess();
+void gotoMainMenu();
 
 // Variable control
-void HMI_Move_X();
-void HMI_Move_Y();
-void HMI_Move_Z();
-void HMI_Move_E();
+void hmiMoveX();
+void hmiMoveY();
+void hmiMoveZ();
+void hmiMoveE();
 
-void HMI_Zoffset();
+void hmiZoffset();
 
 #if HAS_HOTEND
-  void HMI_ETemp();
+  void hmiETemp();
 #endif
 #if HAS_HEATED_BED
-  void HMI_BedTemp();
+  void hmiBedTemp();
 #endif
 #if HAS_FAN
-  void HMI_FanSpeed();
+  void hmiFanSpeed();
 #endif
 
-void HMI_PrintSpeed();
+void hmiPrintSpeed();
 
-void HMI_MaxFeedspeedXYZE();
-void HMI_MaxAccelerationXYZE();
-void HMI_MaxJerkXYZE();
-void HMI_StepXYZE();
-void HMI_SetLanguageCache();
+void hmiMaxFeedspeedXYZE();
+void hmiMaxAccelerationXYZE();
+void hmiMaxJerkXYZE();
+void hmiStepXYZE();
+void hmiSetLanguageCache();
 
 void update_variable();
-void DWIN_Draw_Signed_Float(uint8_t size, uint16_t bColor, uint8_t iNum, uint8_t fNum, uint16_t x, uint16_t y, long value);
+void dwinDrawSigned_Float(uint8_t size, uint16_t bColor, uint8_t iNum, uint8_t fNum, uint16_t x, uint16_t y, long value);
 
 // SD Card
-void HMI_SDCardInit();
-void HMI_SDCardUpdate();
+void hmiSDCardInit();
+void hmiSDCardUpdate();
 
 // Main Process
 void Icon_print(bool value);
@@ -212,39 +212,39 @@ void Icon_temperature(bool value);
 void Icon_leveling(bool value);
 
 // Other
-void Draw_Status_Area(const bool with_update); // Status Area
-void HMI_StartFrame(const bool with_update);   // Prepare the menu view
-void HMI_MainMenu();    // Main process screen
-void HMI_SelectFile();  // File page
-void HMI_Printing();    // Print page
-void HMI_Prepare();     // Prepare page
-void HMI_Control();     // Control page
-void HMI_Leveling();    // Level the page
-void HMI_AxisMove();    // Axis movement menu
-void HMI_Temperature(); // Temperature menu
-void HMI_Motion();      // Sports menu
-void HMI_Info();        // Information menu
-void HMI_Tune();        // Adjust the menu
+void drawStatusArea(const bool with_update); // Status Area
+void hmiStartFrame(const bool with_update);   // Prepare the menu view
+void hmiMainMenu();    // Main process screen
+void hmiSelectFile();  // File page
+void hmiPrinting();    // Print page
+void hmiPrepare();     // Prepare page
+void hmiControl();     // Control page
+void hmiLeveling();    // Level the page
+void hmiAxisMove();    // Axis movement menu
+void hmiTemperature(); // Temperature menu
+void hmiMotion();      // Sports menu
+void hmiInfo();        // Information menu
+void hmiTune();        // Adjust the menu
 
 #if HAS_PREHEAT
-  void HMI_PLAPreheatSetting(); // PLA warm-up setting
-  void HMI_ABSPreheatSetting(); // ABS warm-up setting
+  void hmiPLAPreheatSetting(); // PLA warm-up setting
+  void hmiABSPreheatSetting(); // ABS warm-up setting
 #endif
 
-void HMI_MaxSpeed();        // Maximum speed submenu
-void HMI_MaxAcceleration(); // Maximum acceleration submenu
-void HMI_MaxJerk();         // Maximum jerk speed submenu
-void HMI_Step();            // Transmission ratio
+void hmiMaxSpeed();        // Maximum speed submenu
+void hmiMaxAcceleration(); // Maximum acceleration submenu
+void hmiMaxJerk();         // Maximum jerk speed submenu
+void hmiStep();            // Transmission ratio
 
-void HMI_Init();
-void DWIN_InitScreen();
-void DWIN_Update();
-void EachMomentUpdate();
-void DWIN_HandleScreen();
-void DWIN_StatusChanged(const char * const cstr=nullptr);
-void DWIN_StatusChanged(FSTR_P const fstr);
+void hmiInit();
+void dwinInitScreen();
+void dwinUpdate();
+void eachMomentUpdate();
+void dwinHandleScreen();
+void dwinStatusChanged(const char * const cstr=nullptr);
+void dwinStatusChanged(FSTR_P const fstr);
 
-inline void DWIN_HomingStart() { HMI_flag.home_flag = true; }
+inline void dwinHomingStart() { hmiFlag.home_flag = true; }
 
-void DWIN_HomingDone();
-void DWIN_LevelingDone();
+void dwinHomingDone();
+void dwinLevelingDone();

commit b2f372b20f375852e3e009d490260307e399792c
Author: Krzysztof Błażewicz <blazewicz.krzysztof@gmail.com>
Date:   Thu May 18 07:38:21 2023 +0200

    🚸 Unify edit limits for some E3V2 LCDs (#25045)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 487f309ed9..854a011c5e 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -27,6 +27,7 @@
 
 #include "dwin_lcd.h"
 #include "../common/encoder.h"
+#include "../common/limits.h"
 #include "../../../libs/BL24CXX.h"
 
 #include "../../../inc/MarlinConfigPre.h"

commit 623c6b720b0d9b14934fb8ccb895d421ab043cc9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 12 15:58:28 2022 -0600

    🧑‍💻 Add ExtUI::onLevelingDone, match DWIN to ExtUI

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 3ccb70e52f..487f309ed9 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -243,7 +243,7 @@ void DWIN_HandleScreen();
 void DWIN_StatusChanged(const char * const cstr=nullptr);
 void DWIN_StatusChanged(FSTR_P const fstr);
 
-inline void DWIN_StartHoming() { HMI_flag.home_flag = true; }
+inline void DWIN_HomingStart() { HMI_flag.home_flag = true; }
 
-void DWIN_CompletedHoming();
-void DWIN_CompletedLeveling();
+void DWIN_HomingDone();
+void DWIN_LevelingDone();

commit 79b38e0e14074b52e0aeb98b08a686a99a9b1aad
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Fri Mar 11 15:06:49 2022 -0500

    🚸 Update Ender3 V2/S1 Pro UI (#23878)

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 3122a6fcba..3ccb70e52f 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -236,6 +236,7 @@ void HMI_MaxJerk();         // Maximum jerk speed submenu
 void HMI_Step();            // Transmission ratio
 
 void HMI_Init();
+void DWIN_InitScreen();
 void DWIN_Update();
 void EachMomentUpdate();
 void DWIN_HandleScreen();

commit 1d80464ba77bc576426f15af28a633bf48d769ad
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 27 21:15:58 2021 -0500

    🎨 Define HAS_PREHEAT conditional

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index d9ac0aa5fa..3122a6fcba 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -31,13 +31,6 @@
 
 #include "../../../inc/MarlinConfigPre.h"
 
-#if ANY(HAS_HOTEND, HAS_HEATED_BED, HAS_FAN) && PREHEAT_COUNT
-  #define HAS_PREHEAT 1
-  #if PREHEAT_COUNT < 2
-    #error "Creality DWIN requires two material preheat presets."
-  #endif
-#endif
-
 enum processID : uint8_t {
   // Process ID
   MainMenu,
@@ -53,7 +46,9 @@ enum processID : uint8_t {
   Tune,
   #if HAS_PREHEAT
     PLAPreheat,
-    ABSPreheat,
+    #if PREHEAT_COUNT > 1
+      ABSPreheat,
+    #endif
   #endif
   MaxSpeed,
   MaxSpeed_value,

commit 7f1286a11f87065c4e666985e679cf9c77d668bf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 25 17:05:11 2021 -0500

    🎨 Apply F() to status message

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index d4afe46a7d..d9ac0aa5fa 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -244,8 +244,8 @@ void HMI_Init();
 void DWIN_Update();
 void EachMomentUpdate();
 void DWIN_HandleScreen();
-void DWIN_StatusChanged(const char *text);
-void DWIN_StatusChanged_P(PGM_P const pstr);
+void DWIN_StatusChanged(const char * const cstr=nullptr);
+void DWIN_StatusChanged(FSTR_P const fstr);
 
 inline void DWIN_StartHoming() { HMI_flag.home_flag = true; }
 

commit 5b5a8798f8fe202e86c008088f847a3edb51cc71
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Sep 15 19:48:29 2021 -0500

    🎨 Consolidate Ender-3 V2 DWIN common code (#22778)

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 69fe0d6bd6..d4afe46a7d 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -26,7 +26,7 @@
  */
 
 #include "dwin_lcd.h"
-#include "rotary_encoder.h"
+#include "../common/encoder.h"
 #include "../../../libs/BL24CXX.h"
 
 #include "../../../inc/MarlinConfigPre.h"
@@ -144,24 +144,21 @@ typedef struct {
 
 typedef struct {
   uint8_t language;
-  bool pause_flag:1;
-  bool pause_action:1;
-  bool print_finish:1;
+  bool pause_flag:1;    // printing is paused
+  bool pause_action:1;  // flag a pause action
+  bool print_finish:1;  // print was finished
+  bool select_flag:1;   // Popup button selected
+  bool home_flag:1;     // homing in course
+  bool heat_flag:1;     // 0: heating done  1: during heating
   bool done_confirm_flag:1;
-  bool select_flag:1;
-  bool home_flag:1;
-  bool heat_flag:1;  // 0: heating done  1: during heating
   #if ENABLED(PREVENT_COLD_EXTRUSION)
-    bool ETempTooLow_flag:1;
-  #endif
-  #if HAS_LEVELING
-    bool leveling_offset_flag:1;
+    bool cold_flag:1;
   #endif
   AxisEnum feedspeed_axis, acc_axis, jerk_axis, step_axis;
-} HMI_Flag_t;
+} HMI_flag_t;
 
 extern HMI_value_t HMI_ValueStruct;
-extern HMI_Flag_t HMI_flag;
+extern HMI_flag_t HMI_flag;
 
 #if HAS_HOTEND || HAS_HEATED_BED
   // Popup message window

commit 09af42e1af38b441d44ddcc71b9d6906ce68b51d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Aug 17 06:18:19 2021 -0500

    Clean up CrealityUI and MarlinUI (#22586)

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 2808fea99c..69fe0d6bd6 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -163,18 +163,6 @@ typedef struct {
 extern HMI_value_t HMI_ValueStruct;
 extern HMI_Flag_t HMI_flag;
 
-// Show ICO
-void ICON_Print(bool show);
-void ICON_Prepare(bool show);
-void ICON_Control(bool show);
-void ICON_Leveling(bool show);
-void ICON_StartInfo(bool show);
-
-void ICON_Setting(bool show);
-void ICON_Pause(bool show);
-void ICON_Continue(bool show);
-void ICON_Stop(bool show);
-
 #if HAS_HOTEND || HAS_HEATED_BED
   // Popup message window
   void DWIN_Popup_Temperature(const bool toohigh);
@@ -261,7 +249,6 @@ void EachMomentUpdate();
 void DWIN_HandleScreen();
 void DWIN_StatusChanged(const char *text);
 void DWIN_StatusChanged_P(PGM_P const pstr);
-void DWIN_Draw_Checkbox(uint16_t color, uint16_t bcolor, uint16_t x, uint16_t y, bool mode /* = false*/);
 
 inline void DWIN_StartHoming() { HMI_flag.home_flag = true; }
 

commit 59324a411f022cbe6757f15924120ad1976e850b
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Wed Aug 11 21:00:47 2021 -0500

    🐛 Fix Ender-3 v2 language init (#22550)

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
index 36948678aa..2808fea99c 100644
--- a/Marlin/src/lcd/e3v2/creality/dwin.h
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -215,6 +215,7 @@ void HMI_MaxFeedspeedXYZE();
 void HMI_MaxAccelerationXYZE();
 void HMI_MaxJerkXYZE();
 void HMI_StepXYZE();
+void HMI_SetLanguageCache();
 
 void update_variable();
 void DWIN_Draw_Signed_Float(uint8_t size, uint16_t bColor, uint8_t iNum, uint8_t fNum, uint16_t x, uint16_t y, long value);

commit 9bb5b10c0c9cf5a61d2bfb9dfdb6cfe210b6002b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jul 31 05:32:13 2021 -0500

    🚚 Relocate and adjust DWIN E3V2 (#22471)

diff --git a/Marlin/src/lcd/e3v2/creality/dwin.h b/Marlin/src/lcd/e3v2/creality/dwin.h
new file mode 100644
index 0000000000..36948678aa
--- /dev/null
+++ b/Marlin/src/lcd/e3v2/creality/dwin.h
@@ -0,0 +1,268 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+/**
+ * DWIN by Creality3D
+ */
+
+#include "dwin_lcd.h"
+#include "rotary_encoder.h"
+#include "../../../libs/BL24CXX.h"
+
+#include "../../../inc/MarlinConfigPre.h"
+
+#if ANY(HAS_HOTEND, HAS_HEATED_BED, HAS_FAN) && PREHEAT_COUNT
+  #define HAS_PREHEAT 1
+  #if PREHEAT_COUNT < 2
+    #error "Creality DWIN requires two material preheat presets."
+  #endif
+#endif
+
+enum processID : uint8_t {
+  // Process ID
+  MainMenu,
+  SelectFile,
+  Prepare,
+  Control,
+  Leveling,
+  PrintProcess,
+  AxisMove,
+  TemperatureID,
+  Motion,
+  Info,
+  Tune,
+  #if HAS_PREHEAT
+    PLAPreheat,
+    ABSPreheat,
+  #endif
+  MaxSpeed,
+  MaxSpeed_value,
+  MaxAcceleration,
+  MaxAcceleration_value,
+  MaxJerk,
+  MaxJerk_value,
+  Step,
+  Step_value,
+  HomeOff,
+  HomeOffX,
+  HomeOffY,
+  HomeOffZ,
+
+  // Last Process ID
+  Last_Prepare,
+
+  // Advance Settings
+  AdvSet,
+  ProbeOff,
+  ProbeOffX,
+  ProbeOffY,
+
+  // Back Process ID
+  Back_Main,
+  Back_Print,
+
+  // Date variable ID
+  Move_X,
+  Move_Y,
+  Move_Z,
+  #if HAS_HOTEND
+    Extruder,
+    ETemp,
+  #endif
+  Homeoffset,
+  #if HAS_HEATED_BED
+    BedTemp,
+  #endif
+  #if HAS_FAN
+    FanSpeed,
+  #endif
+  PrintSpeed,
+
+  // Window ID
+  Print_window,
+  Popup_Window
+};
+
+extern uint8_t checkkey;
+extern float zprobe_zoffset;
+extern char print_filename[16];
+
+extern millis_t dwin_heat_time;
+
+typedef struct {
+  #if HAS_HOTEND
+    celsius_t E_Temp = 0;
+  #endif
+  #if HAS_HEATED_BED
+    celsius_t Bed_Temp = 0;
+  #endif
+  #if HAS_FAN
+    int16_t Fan_speed = 0;
+  #endif
+  int16_t print_speed     = 100;
+  float Max_Feedspeed     = 0;
+  float Max_Acceleration  = 0;
+  float Max_Jerk_scaled   = 0;
+  float Max_Step_scaled   = 0;
+  float Move_X_scaled     = 0;
+  float Move_Y_scaled     = 0;
+  float Move_Z_scaled     = 0;
+  #if HAS_HOTEND
+    float Move_E_scaled   = 0;
+  #endif
+  float offset_value      = 0;
+  int8_t show_mode        = 0; // -1: Temperature control    0: Printing temperature
+  float Home_OffX_scaled  = 0;
+  float Home_OffY_scaled  = 0;
+  float Home_OffZ_scaled  = 0;
+  float Probe_OffX_scaled = 0;
+  float Probe_OffY_scaled = 0;
+} HMI_value_t;
+
+#define DWIN_CHINESE 123
+#define DWIN_ENGLISH 0
+
+typedef struct {
+  uint8_t language;
+  bool pause_flag:1;
+  bool pause_action:1;
+  bool print_finish:1;
+  bool done_confirm_flag:1;
+  bool select_flag:1;
+  bool home_flag:1;
+  bool heat_flag:1;  // 0: heating done  1: during heating
+  #if ENABLED(PREVENT_COLD_EXTRUSION)
+    bool ETempTooLow_flag:1;
+  #endif
+  #if HAS_LEVELING
+    bool leveling_offset_flag:1;
+  #endif
+  AxisEnum feedspeed_axis, acc_axis, jerk_axis, step_axis;
+} HMI_Flag_t;
+
+extern HMI_value_t HMI_ValueStruct;
+extern HMI_Flag_t HMI_flag;
+
+// Show ICO
+void ICON_Print(bool show);
+void ICON_Prepare(bool show);
+void ICON_Control(bool show);
+void ICON_Leveling(bool show);
+void ICON_StartInfo(bool show);
+
+void ICON_Setting(bool show);
+void ICON_Pause(bool show);
+void ICON_Continue(bool show);
+void ICON_Stop(bool show);
+
+#if HAS_HOTEND || HAS_HEATED_BED
+  // Popup message window
+  void DWIN_Popup_Temperature(const bool toohigh);
+#endif
+
+#if HAS_HOTEND
+  void Popup_Window_ETempTooLow();
+#endif
+
+void Popup_Window_Resume();
+void Popup_Window_Home(const bool parking=false);
+void Popup_Window_Leveling();
+
+void Goto_PrintProcess();
+void Goto_MainMenu();
+
+// Variable control
+void HMI_Move_X();
+void HMI_Move_Y();
+void HMI_Move_Z();
+void HMI_Move_E();
+
+void HMI_Zoffset();
+
+#if HAS_HOTEND
+  void HMI_ETemp();
+#endif
+#if HAS_HEATED_BED
+  void HMI_BedTemp();
+#endif
+#if HAS_FAN
+  void HMI_FanSpeed();
+#endif
+
+void HMI_PrintSpeed();
+
+void HMI_MaxFeedspeedXYZE();
+void HMI_MaxAccelerationXYZE();
+void HMI_MaxJerkXYZE();
+void HMI_StepXYZE();
+
+void update_variable();
+void DWIN_Draw_Signed_Float(uint8_t size, uint16_t bColor, uint8_t iNum, uint8_t fNum, uint16_t x, uint16_t y, long value);
+
+// SD Card
+void HMI_SDCardInit();
+void HMI_SDCardUpdate();
+
+// Main Process
+void Icon_print(bool value);
+void Icon_control(bool value);
+void Icon_temperature(bool value);
+void Icon_leveling(bool value);
+
+// Other
+void Draw_Status_Area(const bool with_update); // Status Area
+void HMI_StartFrame(const bool with_update);   // Prepare the menu view
+void HMI_MainMenu();    // Main process screen
+void HMI_SelectFile();  // File page
+void HMI_Printing();    // Print page
+void HMI_Prepare();     // Prepare page
+void HMI_Control();     // Control page
+void HMI_Leveling();    // Level the page
+void HMI_AxisMove();    // Axis movement menu
+void HMI_Temperature(); // Temperature menu
+void HMI_Motion();      // Sports menu
+void HMI_Info();        // Information menu
+void HMI_Tune();        // Adjust the menu
+
+#if HAS_PREHEAT
+  void HMI_PLAPreheatSetting(); // PLA warm-up setting
+  void HMI_ABSPreheatSetting(); // ABS warm-up setting
+#endif
+
+void HMI_MaxSpeed();        // Maximum speed submenu
+void HMI_MaxAcceleration(); // Maximum acceleration submenu
+void HMI_MaxJerk();         // Maximum jerk speed submenu
+void HMI_Step();            // Transmission ratio
+
+void HMI_Init();
+void DWIN_Update();
+void EachMomentUpdate();
+void DWIN_HandleScreen();
+void DWIN_StatusChanged(const char *text);
+void DWIN_StatusChanged_P(PGM_P const pstr);
+void DWIN_Draw_Checkbox(uint16_t color, uint16_t bcolor, uint16_t x, uint16_t y, bool mode /* = false*/);
+
+inline void DWIN_StartHoming() { HMI_flag.home_flag = true; }
+
+void DWIN_CompletedHoming();
+void DWIN_CompletedLeveling();
