commit 669814d0d408a622f020a55971ba04030e4fa4bf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Feb 7 23:40:54 2024 -0600

    ‚ú® MARLIN_SMALL_BUILD option (#26775)

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index a3938acb11..fe0eef772f 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -78,6 +78,8 @@ void GcodeSuite::M301() {
 }
 
 void GcodeSuite::M301_report(const bool forReplay/*=true*/ E_OPTARG(const int8_t eindex/*=-1*/)) {
+  TERN_(MARLIN_SMALL_BUILD, return);
+
   report_heading(forReplay, F(STR_HOTEND_PID));
   IF_DISABLED(HAS_MULTI_EXTRUDER, constexpr int8_t eindex = -1);
   HOTEND_LOOP() {

commit 094701cc71ccf1c6fcf3d768b9fcb227d0abf3b0
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sun Sep 4 02:51:53 2022 +0200

    üêõ Fix / refactor shared PID (#24673)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index fc9f1883d6..a3938acb11 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -57,19 +57,18 @@ void GcodeSuite::M301() {
 
   if (e < HOTENDS) { // catch bad input value
 
-    if (parser.seenval('P')) PID_PARAM(Kp, e) = parser.value_float();
-    if (parser.seenval('I')) PID_PARAM(Ki, e) = scalePID_i(parser.value_float());
-    if (parser.seenval('D')) PID_PARAM(Kd, e) = scalePID_d(parser.value_float());
+    if (parser.seenval('P')) SET_HOTEND_PID(Kp, e, parser.value_float());
+    if (parser.seenval('I')) SET_HOTEND_PID(Ki, e, parser.value_float());
+    if (parser.seenval('D')) SET_HOTEND_PID(Kd, e, parser.value_float());
 
     #if ENABLED(PID_EXTRUSION_SCALING)
-      if (parser.seenval('C')) PID_PARAM(Kc, e) = parser.value_float();
+      if (parser.seenval('C')) SET_HOTEND_PID(Kc, e, parser.value_float());
       if (parser.seenval('L')) thermalManager.lpq_len = parser.value_int();
-      NOMORE(thermalManager.lpq_len, LPQ_MAX_LEN);
-      NOLESS(thermalManager.lpq_len, 0);
+      LIMIT(thermalManager.lpq_len, 0, LPQ_MAX_LEN);
     #endif
 
     #if ENABLED(PID_FAN_SCALING)
-      if (parser.seenval('F')) PID_PARAM(Kf, e) = parser.value_float();
+      if (parser.seenval('F')) SET_HOTEND_PID(Kf, e, parser.value_float());
     #endif
 
     thermalManager.updatePID();
@@ -83,6 +82,7 @@ void GcodeSuite::M301_report(const bool forReplay/*=true*/ E_OPTARG(const int8_t
   IF_DISABLED(HAS_MULTI_EXTRUDER, constexpr int8_t eindex = -1);
   HOTEND_LOOP() {
     if (e == eindex || eindex == -1) {
+      const hotend_pid_t &pid = thermalManager.temp_hotend[e].pid;
       report_echo_start(forReplay);
       SERIAL_ECHOPGM_P(
         #if ENABLED(PID_PARAMS_PER_HOTEND)
@@ -90,16 +90,14 @@ void GcodeSuite::M301_report(const bool forReplay/*=true*/ E_OPTARG(const int8_t
         #else
           PSTR("  M301 P")
         #endif
-        ,                          PID_PARAM(Kp, e)
-        , PSTR(" I"), unscalePID_i(PID_PARAM(Ki, e))
-        , PSTR(" D"), unscalePID_d(PID_PARAM(Kd, e))
+        , pid.p(), PSTR(" I"), pid.i(), PSTR(" D"), pid.d()
       );
       #if ENABLED(PID_EXTRUSION_SCALING)
-        SERIAL_ECHOPGM_P(SP_C_STR, PID_PARAM(Kc, e));
+        SERIAL_ECHOPGM_P(SP_C_STR, pid.c());
         if (e == 0) SERIAL_ECHOPGM(" L", thermalManager.lpq_len);
       #endif
       #if ENABLED(PID_FAN_SCALING)
-        SERIAL_ECHOPGM(" F", PID_PARAM(Kf, e));
+        SERIAL_ECHOPGM(" F", pid.f());
       #endif
       SERIAL_EOL();
     }

commit d7fede3a6324cd6b1ec91a9c8e248fce8f0d7cf2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 13:40:01 2021 -0500

    üé® Apply F() to G-code report header

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index db882b3b65..fc9f1883d6 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -79,7 +79,7 @@ void GcodeSuite::M301() {
 }
 
 void GcodeSuite::M301_report(const bool forReplay/*=true*/ E_OPTARG(const int8_t eindex/*=-1*/)) {
-  report_heading(forReplay, PSTR(STR_HOTEND_PID));
+  report_heading(forReplay, F(STR_HOTEND_PID));
   IF_DISABLED(HAS_MULTI_EXTRUDER, constexpr int8_t eindex = -1);
   HOTEND_LOOP() {
     if (e == eindex || eindex == -1) {

commit 33e0855e2c173680865aaa6c6aa93047d63fc469
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 28 01:07:51 2021 -0500

    ‚ö°Ô∏è Handle shared enable pins (#22824)

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 19b438309c..db882b3b65 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -48,10 +48,10 @@
 void GcodeSuite::M301() {
   // multi-extruder PID patch: M301 updates or prints a single extruder's PID values
   // default behavior (omitting E parameter) is to update for extruder 0 only
-  int8_t e = parser.byteval('E', -1); // extruder being updated
+  int8_t e = E_TERN0(parser.byteval('E', -1)); // extruder being updated
 
   if (!parser.seen("PID" TERN_(PID_EXTRUSION_SCALING, "CL") TERN_(PID_FAN_SCALING, "F")))
-    return M301_report(true, e);
+    return M301_report(true E_OPTARG(e));
 
   if (e == -1) e = 0;
 
@@ -78,8 +78,9 @@ void GcodeSuite::M301() {
     SERIAL_ERROR_MSG(STR_INVALID_EXTRUDER);
 }
 
-void GcodeSuite::M301_report(const bool forReplay/*=true*/, const int8_t eindex/*=-1*/) {
+void GcodeSuite::M301_report(const bool forReplay/*=true*/ E_OPTARG(const int8_t eindex/*=-1*/)) {
   report_heading(forReplay, PSTR(STR_HOTEND_PID));
+  IF_DISABLED(HAS_MULTI_EXTRUDER, constexpr int8_t eindex = -1);
   HOTEND_LOOP() {
     if (e == eindex || eindex == -1) {
       report_echo_start(forReplay);

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 904744c958..19b438309c 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -83,7 +83,7 @@ void GcodeSuite::M301_report(const bool forReplay/*=true*/, const int8_t eindex/
   HOTEND_LOOP() {
     if (e == eindex || eindex == -1) {
       report_echo_start(forReplay);
-      SERIAL_ECHOPAIR_P(
+      SERIAL_ECHOPGM_P(
         #if ENABLED(PID_PARAMS_PER_HOTEND)
           PSTR("  M301 E"), e, SP_P_STR
         #else
@@ -94,11 +94,11 @@ void GcodeSuite::M301_report(const bool forReplay/*=true*/, const int8_t eindex/
         , PSTR(" D"), unscalePID_d(PID_PARAM(Kd, e))
       );
       #if ENABLED(PID_EXTRUSION_SCALING)
-        SERIAL_ECHOPAIR_P(SP_C_STR, PID_PARAM(Kc, e));
-        if (e == 0) SERIAL_ECHOPAIR(" L", thermalManager.lpq_len);
+        SERIAL_ECHOPGM_P(SP_C_STR, PID_PARAM(Kc, e));
+        if (e == 0) SERIAL_ECHOPGM(" L", thermalManager.lpq_len);
       #endif
       #if ENABLED(PID_FAN_SCALING)
-        SERIAL_ECHOPAIR(" F", PID_PARAM(Kf, e));
+        SERIAL_ECHOPGM(" F", PID_PARAM(Kf, e));
       #endif
       SERIAL_EOL();
     }

commit 79c72ed821564507b0ef46cbb26f9577585e2ccc
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 7 18:06:10 2021 -0500

    üé® Standardize G-code reporting

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 7b3f57608b..904744c958 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -46,46 +46,63 @@
  *   F[float] Kf term
  */
 void GcodeSuite::M301() {
-
   // multi-extruder PID patch: M301 updates or prints a single extruder's PID values
   // default behavior (omitting E parameter) is to update for extruder 0 only
-  const uint8_t e = parser.byteval('E'); // extruder being updated
+  int8_t e = parser.byteval('E', -1); // extruder being updated
+
+  if (!parser.seen("PID" TERN_(PID_EXTRUSION_SCALING, "CL") TERN_(PID_FAN_SCALING, "F")))
+    return M301_report(true, e);
+
+  if (e == -1) e = 0;
 
   if (e < HOTENDS) { // catch bad input value
-    if (parser.seen('P')) PID_PARAM(Kp, e) = parser.value_float();
-    if (parser.seen('I')) PID_PARAM(Ki, e) = scalePID_i(parser.value_float());
-    if (parser.seen('D')) PID_PARAM(Kd, e) = scalePID_d(parser.value_float());
+
+    if (parser.seenval('P')) PID_PARAM(Kp, e) = parser.value_float();
+    if (parser.seenval('I')) PID_PARAM(Ki, e) = scalePID_i(parser.value_float());
+    if (parser.seenval('D')) PID_PARAM(Kd, e) = scalePID_d(parser.value_float());
+
     #if ENABLED(PID_EXTRUSION_SCALING)
-      if (parser.seen('C')) PID_PARAM(Kc, e) = parser.value_float();
+      if (parser.seenval('C')) PID_PARAM(Kc, e) = parser.value_float();
       if (parser.seenval('L')) thermalManager.lpq_len = parser.value_int();
       NOMORE(thermalManager.lpq_len, LPQ_MAX_LEN);
       NOLESS(thermalManager.lpq_len, 0);
     #endif
 
     #if ENABLED(PID_FAN_SCALING)
-      if (parser.seen('F')) PID_PARAM(Kf, e) = parser.value_float();
+      if (parser.seenval('F')) PID_PARAM(Kf, e) = parser.value_float();
     #endif
 
     thermalManager.updatePID();
-
-    SERIAL_ECHO_START();
-    #if ENABLED(PID_PARAMS_PER_HOTEND)
-      SERIAL_ECHOPAIR(" e:", e); // specify extruder in serial output
-    #endif
-    SERIAL_ECHOPAIR(" p:", PID_PARAM(Kp, e),
-                    " i:", unscalePID_i(PID_PARAM(Ki, e)),
-                    " d:", unscalePID_d(PID_PARAM(Kd, e)));
-    #if ENABLED(PID_EXTRUSION_SCALING)
-      SERIAL_ECHOPAIR(" c:", PID_PARAM(Kc, e));
-    #endif
-    #if ENABLED(PID_FAN_SCALING)
-      SERIAL_ECHOPAIR(" f:", PID_PARAM(Kf, e));
-    #endif
-
-    SERIAL_EOL();
   }
   else
     SERIAL_ERROR_MSG(STR_INVALID_EXTRUDER);
 }
 
+void GcodeSuite::M301_report(const bool forReplay/*=true*/, const int8_t eindex/*=-1*/) {
+  report_heading(forReplay, PSTR(STR_HOTEND_PID));
+  HOTEND_LOOP() {
+    if (e == eindex || eindex == -1) {
+      report_echo_start(forReplay);
+      SERIAL_ECHOPAIR_P(
+        #if ENABLED(PID_PARAMS_PER_HOTEND)
+          PSTR("  M301 E"), e, SP_P_STR
+        #else
+          PSTR("  M301 P")
+        #endif
+        ,                          PID_PARAM(Kp, e)
+        , PSTR(" I"), unscalePID_i(PID_PARAM(Ki, e))
+        , PSTR(" D"), unscalePID_d(PID_PARAM(Kd, e))
+      );
+      #if ENABLED(PID_EXTRUSION_SCALING)
+        SERIAL_ECHOPAIR_P(SP_C_STR, PID_PARAM(Kc, e));
+        if (e == 0) SERIAL_ECHOPAIR(" L", thermalManager.lpq_len);
+      #endif
+      #if ENABLED(PID_FAN_SCALING)
+        SERIAL_ECHOPAIR(" F", PID_PARAM(Kf, e));
+      #endif
+      SERIAL_EOL();
+    }
+  }
+}
+
 #endif // PIDTEMP

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index a68b64e058..7b3f57608b 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit 70fa4c9323543dfb65d10969838899575406cae6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 1 16:18:20 2020 -0500

    Per-Hotend Default PIDs (#18483)

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 54d32c8650..a68b64e058 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -30,6 +30,8 @@
 /**
  * M301: Set PID parameters P I D (and optionally C, L)
  *
+ *   E[extruder] Default: 0
+ *
  *   P[float] Kp term
  *   I[float] Ki term (unscaled)
  *   D[float] Kd term (unscaled)
@@ -65,6 +67,7 @@ void GcodeSuite::M301() {
     #endif
 
     thermalManager.updatePID();
+
     SERIAL_ECHO_START();
     #if ENABLED(PID_PARAMS_PER_HOTEND)
       SERIAL_ECHOPAIR(" e:", e); // specify extruder in serial output

commit e78f607ef33044eecde744e77beea87532817c47
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Feb 26 03:02:03 2020 -0600

    Use a STR_ prefix for non-translated strings

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 31584d61e0..54d32c8650 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -82,7 +82,7 @@ void GcodeSuite::M301() {
     SERIAL_EOL();
   }
   else
-    SERIAL_ERROR_MSG(MSG_INVALID_EXTRUDER);
+    SERIAL_ERROR_MSG(STR_INVALID_EXTRUDER);
 }
 
 #endif // PIDTEMP

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index c0b48d0dab..31584d61e0 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit 4716dac8742e536dde12773b579407fb1ae1cb66
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 1 21:00:53 2020 -0600

    Apply REPEAT, RREPEAT, and loop macros (#16757)

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 0449293bf5..c0b48d0dab 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -68,7 +68,7 @@ void GcodeSuite::M301() {
     SERIAL_ECHO_START();
     #if ENABLED(PID_PARAMS_PER_HOTEND)
       SERIAL_ECHOPAIR(" e:", e); // specify extruder in serial output
-    #endif // PID_PARAMS_PER_HOTEND
+    #endif
     SERIAL_ECHOPAIR(" p:", PID_PARAM(Kp, e),
                     " i:", unscalePID_i(PID_PARAM(Ki, e)),
                     " d:", unscalePID_d(PID_PARAM(Kd, e)));

commit ff6518c0a891b5de5ef8d1aacff8be6228fe1104
Author: haschtl <haschtl@protonmail.com>
Date:   Tue Nov 26 10:34:43 2019 +0100

    Add PID_FAN_SCALING option (#15585)

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 25a15d7728..0449293bf5 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -38,6 +38,10 @@
  *
  *   C[float] Kc term
  *   L[int] LPQ length
+ *
+ * With PID_FAN_SCALING:
+ *
+ *   F[float] Kf term
  */
 void GcodeSuite::M301() {
 
@@ -56,6 +60,10 @@ void GcodeSuite::M301() {
       NOLESS(thermalManager.lpq_len, 0);
     #endif
 
+    #if ENABLED(PID_FAN_SCALING)
+      if (parser.seen('F')) PID_PARAM(Kf, e) = parser.value_float();
+    #endif
+
     thermalManager.updatePID();
     SERIAL_ECHO_START();
     #if ENABLED(PID_PARAMS_PER_HOTEND)
@@ -65,9 +73,12 @@ void GcodeSuite::M301() {
                     " i:", unscalePID_i(PID_PARAM(Ki, e)),
                     " d:", unscalePID_d(PID_PARAM(Kd, e)));
     #if ENABLED(PID_EXTRUSION_SCALING)
-      //Kc does not have scaling applied above, or in resetting defaults
       SERIAL_ECHOPAIR(" c:", PID_PARAM(Kc, e));
     #endif
+    #if ENABLED(PID_FAN_SCALING)
+      SERIAL_ECHOPAIR(" f:", PID_PARAM(Kf, e));
+    #endif
+
     SERIAL_EOL();
   }
   else

commit 665e45e0bad4254352330884a846c21aad2a2ff0
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 26 03:47:26 2019 -0500

    Reduce string storage, use masking 'seen'

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 6c66ab48cb..25a15d7728 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -61,9 +61,9 @@ void GcodeSuite::M301() {
     #if ENABLED(PID_PARAMS_PER_HOTEND)
       SERIAL_ECHOPAIR(" e:", e); // specify extruder in serial output
     #endif // PID_PARAMS_PER_HOTEND
-    SERIAL_ECHOPAIR(" p:", PID_PARAM(Kp, e));
-    SERIAL_ECHOPAIR(" i:", unscalePID_i(PID_PARAM(Ki, e)));
-    SERIAL_ECHOPAIR(" d:", unscalePID_d(PID_PARAM(Kd, e)));
+    SERIAL_ECHOPAIR(" p:", PID_PARAM(Kp, e),
+                    " i:", unscalePID_i(PID_PARAM(Ki, e)),
+                    " d:", unscalePID_d(PID_PARAM(Kd, e)));
     #if ENABLED(PID_EXTRUSION_SCALING)
       //Kc does not have scaling applied above, or in resetting defaults
       SERIAL_ECHOPAIR(" c:", PID_PARAM(Kc, e));

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index f9ebe9b822..6c66ab48cb 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 785c01f2bc1635ad645d868aba7cfa5a6daeb973
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 15 01:49:17 2019 -0500

    Use US spelling of 'behavior'

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 531aa88db3..f9ebe9b822 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -42,7 +42,7 @@
 void GcodeSuite::M301() {
 
   // multi-extruder PID patch: M301 updates or prints a single extruder's PID values
-  // default behaviour (omitting E parameter) is to update for extruder 0 only
+  // default behavior (omitting E parameter) is to update for extruder 0 only
   const uint8_t e = parser.byteval('E'); // extruder being updated
 
   if (e < HOTENDS) { // catch bad input value

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 73cde734ad..531aa88db3 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit c98623983774b9773800bc7dcef695c4bad81c0e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 29 16:58:58 2018 -0600

    A single SERIAL_ECHO macro type (#12557)

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index f61896ac73..73cde734ad 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -70,10 +70,8 @@ void GcodeSuite::M301() {
     #endif
     SERIAL_EOL();
   }
-  else {
-    SERIAL_ERROR_START();
-    SERIAL_ERRORLNPGM(MSG_INVALID_EXTRUDER);
-  }
+  else
+    SERIAL_ERROR_MSG(MSG_INVALID_EXTRUDER);
 }
 
 #endif // PIDTEMP

commit 625035a9cefde67da3f9f5933a2ba9e636cef5bb
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 12 02:13:40 2018 -0500

    Fix M301 access to lpq_len (#10714)
    
    Co-Authored-By: Zwaubel

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 9d876224fc..f61896ac73 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -37,7 +37,7 @@
  * With PID_EXTRUSION_SCALING:
  *
  *   C[float] Kc term
- *   L[float] LPQ length
+ *   L[int] LPQ length
  */
 void GcodeSuite::M301() {
 
@@ -51,8 +51,9 @@ void GcodeSuite::M301() {
     if (parser.seen('D')) PID_PARAM(Kd, e) = scalePID_d(parser.value_float());
     #if ENABLED(PID_EXTRUSION_SCALING)
       if (parser.seen('C')) PID_PARAM(Kc, e) = parser.value_float();
-      if (parser.seen('L')) lpq_len = parser.value_float();
-      NOMORE(lpq_len, LPQ_MAX_LEN);
+      if (parser.seenval('L')) thermalManager.lpq_len = parser.value_int();
+      NOMORE(thermalManager.lpq_len, LPQ_MAX_LEN);
+      NOLESS(thermalManager.lpq_len, 0);
     #endif
 
     thermalManager.updatePID();

commit 2bea1bda569ac7aecc87c0f79a7ceaa7a073a0b4
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Jan 23 21:17:33 2018 -0600

    Move more strings to PROGMEM

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
index 4df4a2c0e5..9d876224fc 100644
--- a/Marlin/src/gcode/config/M301.cpp
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -71,7 +71,7 @@ void GcodeSuite::M301() {
   }
   else {
     SERIAL_ERROR_START();
-    SERIAL_ERRORLN(MSG_INVALID_EXTRUDER);
+    SERIAL_ERRORLNPGM(MSG_INVALID_EXTRUDER);
   }
 }
 

commit 609c4eea3250da58c0dea79117309c7dfa92ad2b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Sep 17 03:07:35 2017 -0500

    Move M301 to cpp

diff --git a/Marlin/src/gcode/config/M301.cpp b/Marlin/src/gcode/config/M301.cpp
new file mode 100644
index 0000000000..4df4a2c0e5
--- /dev/null
+++ b/Marlin/src/gcode/config/M301.cpp
@@ -0,0 +1,78 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../inc/MarlinConfig.h"
+
+#if ENABLED(PIDTEMP)
+
+#include "../gcode.h"
+#include "../../module/temperature.h"
+
+/**
+ * M301: Set PID parameters P I D (and optionally C, L)
+ *
+ *   P[float] Kp term
+ *   I[float] Ki term (unscaled)
+ *   D[float] Kd term (unscaled)
+ *
+ * With PID_EXTRUSION_SCALING:
+ *
+ *   C[float] Kc term
+ *   L[float] LPQ length
+ */
+void GcodeSuite::M301() {
+
+  // multi-extruder PID patch: M301 updates or prints a single extruder's PID values
+  // default behaviour (omitting E parameter) is to update for extruder 0 only
+  const uint8_t e = parser.byteval('E'); // extruder being updated
+
+  if (e < HOTENDS) { // catch bad input value
+    if (parser.seen('P')) PID_PARAM(Kp, e) = parser.value_float();
+    if (parser.seen('I')) PID_PARAM(Ki, e) = scalePID_i(parser.value_float());
+    if (parser.seen('D')) PID_PARAM(Kd, e) = scalePID_d(parser.value_float());
+    #if ENABLED(PID_EXTRUSION_SCALING)
+      if (parser.seen('C')) PID_PARAM(Kc, e) = parser.value_float();
+      if (parser.seen('L')) lpq_len = parser.value_float();
+      NOMORE(lpq_len, LPQ_MAX_LEN);
+    #endif
+
+    thermalManager.updatePID();
+    SERIAL_ECHO_START();
+    #if ENABLED(PID_PARAMS_PER_HOTEND)
+      SERIAL_ECHOPAIR(" e:", e); // specify extruder in serial output
+    #endif // PID_PARAMS_PER_HOTEND
+    SERIAL_ECHOPAIR(" p:", PID_PARAM(Kp, e));
+    SERIAL_ECHOPAIR(" i:", unscalePID_i(PID_PARAM(Ki, e)));
+    SERIAL_ECHOPAIR(" d:", unscalePID_d(PID_PARAM(Kd, e)));
+    #if ENABLED(PID_EXTRUSION_SCALING)
+      //Kc does not have scaling applied above, or in resetting defaults
+      SERIAL_ECHOPAIR(" c:", PID_PARAM(Kc, e));
+    #endif
+    SERIAL_EOL();
+  }
+  else {
+    SERIAL_ERROR_START();
+    SERIAL_ERRORLN(MSG_INVALID_EXTRUDER);
+  }
+}
+
+#endif // PIDTEMP
