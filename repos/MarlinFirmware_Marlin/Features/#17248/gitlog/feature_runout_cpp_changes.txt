commit 87e94f456348e944ba4487aed436c762dd718966
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Mon Apr 1 16:05:11 2024 -0400

    üö∏ Update ProUI Plot graph - part 2 (#26563)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 1d684c6b85..2bcb47e99a 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -68,8 +68,6 @@ bool FilamentMonitorBase::enabled = true,
 
 #if ENABLED(EXTENSIBLE_UI)
   #include "../lcd/extui/ui_api.h"
-#elif ENABLED(DWIN_LCD_PROUI)
-  #include "../lcd/e3v2/proui/dwin.h"
 #endif
 
 void event_filament_runout(const uint8_t extruder) {
@@ -88,7 +86,6 @@ void event_filament_runout(const uint8_t extruder) {
   #endif
 
   TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getTool(extruder)));
-  TERN_(DWIN_LCD_PROUI, dwinFilamentRunout(extruder));
 
   #if ANY(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS, MULTI_FILAMENT_SENSOR)
     const char tool = '0' + TERN0(MULTI_FILAMENT_SENSOR, extruder);

commit 15f26b402123d087f62728e1f1763a2b96f8d21d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Dec 27 01:25:51 2023 -0600

    üßë‚Äçüíª AS_CHAR => C (#26569)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 90d3d2fd65..1d684c6b85 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -135,7 +135,7 @@ void event_filament_runout(const uint8_t extruder) {
     if (run_runout_script) {
       #if MULTI_FILAMENT_SENSOR
         MString<strlen(FILAMENT_RUNOUT_SCRIPT)> script;
-        script.setf(F(FILAMENT_RUNOUT_SCRIPT), AS_CHAR(tool));
+        script.setf(F(FILAMENT_RUNOUT_SCRIPT), C(tool));
         #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
           SERIAL_ECHOLNPGM("Runout Command: ", &script);
         #endif

commit fdad658e5feb93943b1ab0ea9bc2420258e4f2e4
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Thu Jul 27 01:38:59 2023 +0200

    üêõ Fix runout extra length (#26082)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>
    Co-authored-by: justvlade <7622616+justvlade@users.noreply.github.com>

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 7c7d61e7eb..90d3d2fd65 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -47,7 +47,7 @@ bool FilamentMonitorBase::enabled = true,
 
 #if HAS_FILAMENT_RUNOUT_DISTANCE
   float RunoutResponseDelayed::runout_distance_mm = FILAMENT_RUNOUT_DISTANCE_MM;
-  volatile countdown_t RunoutResponseDelayed::mm_countdown;
+  countdown_t RunoutResponseDelayed::mm_countdown;
   #if ENABLED(FILAMENT_MOTION_SENSOR)
     uint8_t FilamentSensorEncoder::motion_detected;
   #endif

commit 244de2458ac6fd48f3031d0179ca1bcad6808583
Author: Alexander Gavrilenko <jmz52@users.noreply.github.com>
Date:   Mon Jul 17 10:53:36 2023 +0300

    üßë‚Äçüíª Improve TFT Color UI layout / theme (#26077)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index b34e87ca5e..7c7d61e7eb 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -101,15 +101,16 @@ void event_filament_runout(const uint8_t extruder) {
 
   const bool run_runout_script = !runout.host_handling;
 
-  const bool park_or_pause = (false
-    #ifdef FILAMENT_RUNOUT_SCRIPT
-      || strstr(FILAMENT_RUNOUT_SCRIPT, "M600")
-      || strstr(FILAMENT_RUNOUT_SCRIPT, "M125")
-      || TERN0(ADVANCED_PAUSE_FEATURE, strstr(FILAMENT_RUNOUT_SCRIPT, "M25"))
-    #endif
-  );
-
   #if ENABLED(HOST_ACTION_COMMANDS)
+
+    const bool park_or_pause = (false
+      #ifdef FILAMENT_RUNOUT_SCRIPT
+        || strstr(FILAMENT_RUNOUT_SCRIPT, "M600")
+        || strstr(FILAMENT_RUNOUT_SCRIPT, "M125")
+        || TERN0(ADVANCED_PAUSE_FEATURE, strstr(FILAMENT_RUNOUT_SCRIPT, "M25"))
+      #endif
+    );
+
     if (run_runout_script && park_or_pause) {
       hostui.paused(false);
     }
@@ -127,6 +128,7 @@ void event_filament_runout(const uint8_t extruder) {
     SERIAL_ECHOPGM(" " ACTION_REASON_ON_FILAMENT_RUNOUT " ");
     SERIAL_CHAR(tool);
     SERIAL_EOL();
+
   #endif // HOST_ACTION_COMMANDS
 
   #ifdef FILAMENT_RUNOUT_SCRIPT

commit b77e2a5020714ad17fc12052093231ad4520ce14
Author: Christophe Huriaux <c.huriaux@gmail.com>
Date:   Sat Jul 1 06:06:08 2023 +0200

    ‚ú® Ender 3 S1 Pro/Plus stock touchscreen (#25905)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index db325dee7a..b34e87ca5e 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -101,13 +101,16 @@ void event_filament_runout(const uint8_t extruder) {
 
   const bool run_runout_script = !runout.host_handling;
 
+  const bool park_or_pause = (false
+    #ifdef FILAMENT_RUNOUT_SCRIPT
+      || strstr(FILAMENT_RUNOUT_SCRIPT, "M600")
+      || strstr(FILAMENT_RUNOUT_SCRIPT, "M125")
+      || TERN0(ADVANCED_PAUSE_FEATURE, strstr(FILAMENT_RUNOUT_SCRIPT, "M25"))
+    #endif
+  );
+
   #if ENABLED(HOST_ACTION_COMMANDS)
-    if (run_runout_script
-      && ( strstr(FILAMENT_RUNOUT_SCRIPT, "M600")
-        || strstr(FILAMENT_RUNOUT_SCRIPT, "M125")
-        || TERN0(ADVANCED_PAUSE_FEATURE, strstr(FILAMENT_RUNOUT_SCRIPT, "M25"))
-      )
-    ) {
+    if (run_runout_script && park_or_pause) {
       hostui.paused(false);
     }
     else {
@@ -126,22 +129,24 @@ void event_filament_runout(const uint8_t extruder) {
     SERIAL_EOL();
   #endif // HOST_ACTION_COMMANDS
 
-  if (run_runout_script) {
-    #if MULTI_FILAMENT_SENSOR
-      MString<strlen(FILAMENT_RUNOUT_SCRIPT)> script;
-      script.setf(F(FILAMENT_RUNOUT_SCRIPT), AS_CHAR(tool));
-      #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
-        SERIAL_ECHOLNPGM("Runout Command: ", &script);
-      #endif
-      queue.inject(&script);
-    #else
-      #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
-        SERIAL_ECHOPGM("Runout Command: ");
-        SERIAL_ECHOLNPGM(FILAMENT_RUNOUT_SCRIPT);
+  #ifdef FILAMENT_RUNOUT_SCRIPT
+    if (run_runout_script) {
+      #if MULTI_FILAMENT_SENSOR
+        MString<strlen(FILAMENT_RUNOUT_SCRIPT)> script;
+        script.setf(F(FILAMENT_RUNOUT_SCRIPT), AS_CHAR(tool));
+        #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
+          SERIAL_ECHOLNPGM("Runout Command: ", &script);
+        #endif
+        queue.inject(&script);
+      #else
+        #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
+          SERIAL_ECHOPGM("Runout Command: ");
+          SERIAL_ECHOLNPGM(FILAMENT_RUNOUT_SCRIPT);
+        #endif
+        queue.inject(F(FILAMENT_RUNOUT_SCRIPT));
       #endif
-      queue.inject(F(FILAMENT_RUNOUT_SCRIPT));
-    #endif
-  }
+    }
+  #endif
 }
 
 #endif // HAS_FILAMENT_SENSOR

commit f14f1be168ebf252dd458c935271aed1a57cfa0b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 30 19:16:00 2023 -0500

    üé® Standardize naming (ProUI) (#25982)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index a1d4d259b7..db325dee7a 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -88,7 +88,7 @@ void event_filament_runout(const uint8_t extruder) {
   #endif
 
   TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getTool(extruder)));
-  TERN_(DWIN_LCD_PROUI, DWIN_FilamentRunout(extruder));
+  TERN_(DWIN_LCD_PROUI, dwinFilamentRunout(extruder));
 
   #if ANY(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS, MULTI_FILAMENT_SENSOR)
     const char tool = '0' + TERN0(MULTI_FILAMENT_SENSOR, extruder);

commit 574dd34c49fde76e1e736b8a7e1ea579d724ff22
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 27 13:19:36 2023 -0500

    ‚ôªÔ∏è String helper class (#24390)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 44ebd85b32..a1d4d259b7 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -128,12 +128,12 @@ void event_filament_runout(const uint8_t extruder) {
 
   if (run_runout_script) {
     #if MULTI_FILAMENT_SENSOR
-      char script[strlen(FILAMENT_RUNOUT_SCRIPT) + 1];
-      sprintf_P(script, PSTR(FILAMENT_RUNOUT_SCRIPT), tool);
+      MString<strlen(FILAMENT_RUNOUT_SCRIPT)> script;
+      script.setf(F(FILAMENT_RUNOUT_SCRIPT), AS_CHAR(tool));
       #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
-        SERIAL_ECHOLNPGM("Runout Command: ", script);
+        SERIAL_ECHOLNPGM("Runout Command: ", &script);
       #endif
-      queue.inject(script);
+      queue.inject(&script);
     #else
       #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
         SERIAL_ECHOPGM("Runout Command: ");

commit 2ecd4cca1b694223802a53d5a7febaac4c4573b6
Author: BIGTREETECH <38851044+bigtreetech@users.noreply.github.com>
Date:   Wed Mar 22 15:46:03 2023 +0800

    ‚ú® FILAMENT_SWITCH_AND_MOTION (#25548)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 98b6bd0510..44ebd85b32 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -47,7 +47,7 @@ bool FilamentMonitorBase::enabled = true,
 
 #if HAS_FILAMENT_RUNOUT_DISTANCE
   float RunoutResponseDelayed::runout_distance_mm = FILAMENT_RUNOUT_DISTANCE_MM;
-  volatile float RunoutResponseDelayed::runout_mm_countdown[NUM_RUNOUT_SENSORS];
+  volatile countdown_t RunoutResponseDelayed::mm_countdown;
   #if ENABLED(FILAMENT_MOTION_SENSOR)
     uint8_t FilamentSensorEncoder::motion_detected;
   #endif

commit 48b5362cf02ff12c9e9fc4d5825ceebe457ea34b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 10 22:07:47 2022 -0600

    üîß DWIN_CREALITY_LCD_ENHANCED => DWIN_LCD_PROUI
    
    Followup to #23624

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 8b78b53848..98b6bd0510 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -68,7 +68,7 @@ bool FilamentMonitorBase::enabled = true,
 
 #if ENABLED(EXTENSIBLE_UI)
   #include "../lcd/extui/ui_api.h"
-#elif ENABLED(DWIN_CREALITY_LCD_ENHANCED)
+#elif ENABLED(DWIN_LCD_PROUI)
   #include "../lcd/e3v2/proui/dwin.h"
 #endif
 
@@ -88,7 +88,7 @@ void event_filament_runout(const uint8_t extruder) {
   #endif
 
   TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getTool(extruder)));
-  TERN_(DWIN_CREALITY_LCD_ENHANCED, DWIN_FilamentRunout(extruder));
+  TERN_(DWIN_LCD_PROUI, DWIN_FilamentRunout(extruder));
 
   #if ANY(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS, MULTI_FILAMENT_SENSOR)
     const char tool = '0' + TERN0(MULTI_FILAMENT_SENSOR, extruder);

commit 0564cb188f1a74dc9ecfb55b793f4225424a9ca4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 5 10:30:17 2022 -0600

    üö∏ Enhanced UI => Professional UI - with updates (#23624)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 9317e3489a..8b78b53848 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -69,7 +69,7 @@ bool FilamentMonitorBase::enabled = true,
 #if ENABLED(EXTENSIBLE_UI)
   #include "../lcd/extui/ui_api.h"
 #elif ENABLED(DWIN_CREALITY_LCD_ENHANCED)
-  #include "../lcd/e3v2/enhanced/dwin.h"
+  #include "../lcd/e3v2/proui/dwin.h"
 #endif
 
 void event_filament_runout(const uint8_t extruder) {

commit ee28a14e8e7f6b33fe5813dbedcd85380207c345
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Oct 15 00:24:08 2021 -0500

    üé® Refactor Host Actions as singleton

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index e53c229e70..9317e3489a 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -96,8 +96,7 @@ void event_filament_runout(const uint8_t extruder) {
 
   //action:out_of_filament
   #if ENABLED(HOST_PROMPT_SUPPORT)
-    host_action_prompt_begin(PROMPT_FILAMENT_RUNOUT, F("FilamentRunout T"), tool);
-    host_action_prompt_show();
+    hostui.prompt_do(PROMPT_FILAMENT_RUNOUT, F("FilamentRunout T"), tool); //action:out_of_filament
   #endif
 
   const bool run_runout_script = !runout.host_handling;
@@ -109,18 +108,18 @@ void event_filament_runout(const uint8_t extruder) {
         || TERN0(ADVANCED_PAUSE_FEATURE, strstr(FILAMENT_RUNOUT_SCRIPT, "M25"))
       )
     ) {
-      host_action_paused(false);
+      hostui.paused(false);
     }
     else {
       // Legacy Repetier command for use until newer version supports standard dialog
       // To be removed later when pause command also triggers dialog
       #ifdef ACTION_ON_FILAMENT_RUNOUT
-        host_action(F(ACTION_ON_FILAMENT_RUNOUT " T"), false);
+        hostui.action(F(ACTION_ON_FILAMENT_RUNOUT " T"), false);
         SERIAL_CHAR(tool);
         SERIAL_EOL();
       #endif
 
-      host_action_pause(false);
+      hostui.pause(false);
     }
     SERIAL_ECHOPGM(" " ACTION_REASON_ON_FILAMENT_RUNOUT " ");
     SERIAL_CHAR(tool);

commit 008bf1bcaef181cd1b74638692e2465bb9e07a4d
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 11:55:08 2021 -0500

    üé® Apply F() to Host Actions strings

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 85280d7cb1..e53c229e70 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -96,7 +96,7 @@ void event_filament_runout(const uint8_t extruder) {
 
   //action:out_of_filament
   #if ENABLED(HOST_PROMPT_SUPPORT)
-    host_action_prompt_begin(PROMPT_FILAMENT_RUNOUT, PSTR("FilamentRunout T"), tool);
+    host_action_prompt_begin(PROMPT_FILAMENT_RUNOUT, F("FilamentRunout T"), tool);
     host_action_prompt_show();
   #endif
 
@@ -115,7 +115,7 @@ void event_filament_runout(const uint8_t extruder) {
       // Legacy Repetier command for use until newer version supports standard dialog
       // To be removed later when pause command also triggers dialog
       #ifdef ACTION_ON_FILAMENT_RUNOUT
-        host_action(PSTR(ACTION_ON_FILAMENT_RUNOUT " T"), false);
+        host_action(F(ACTION_ON_FILAMENT_RUNOUT " T"), false);
         SERIAL_CHAR(tool);
         SERIAL_EOL();
       #endif

commit 417e2530ebc5b6c74ac34adaba8be552b407383a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sat Sep 25 21:11:31 2021 -0500

    üé® Apply F() to G-code suite and queue

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 1c56378359..85280d7cb1 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -140,7 +140,7 @@ void event_filament_runout(const uint8_t extruder) {
         SERIAL_ECHOPGM("Runout Command: ");
         SERIAL_ECHOLNPGM(FILAMENT_RUNOUT_SCRIPT);
       #endif
-      queue.inject_P(PSTR(FILAMENT_RUNOUT_SCRIPT));
+      queue.inject(F(FILAMENT_RUNOUT_SCRIPT));
     #endif
   }
 }

commit 754b31918a73cb08c322102be5d3926d2ac59c18
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Sep 9 04:57:05 2021 -0500

    üé® Fewer serial macros

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index ef1f876bdf..1c56378359 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -132,7 +132,7 @@ void event_filament_runout(const uint8_t extruder) {
       char script[strlen(FILAMENT_RUNOUT_SCRIPT) + 1];
       sprintf_P(script, PSTR(FILAMENT_RUNOUT_SCRIPT), tool);
       #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
-        SERIAL_ECHOLNPAIR("Runout Command: ", script);
+        SERIAL_ECHOLNPGM("Runout Command: ", script);
       #endif
       queue.inject(script);
     #else

commit 0f61d9e4dd4d4e4f27e5c688ab2c5dbd0f03af84
Author: Miguel Risco-Castillo <mriscoc@users.noreply.github.com>
Date:   Tue Sep 7 02:15:24 2021 -0500

    ‚ú® Ender-3 V2 CrealityUI Enhanced (#21942)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 531ca1081f..ef1f876bdf 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -68,6 +68,8 @@ bool FilamentMonitorBase::enabled = true,
 
 #if ENABLED(EXTENSIBLE_UI)
   #include "../lcd/extui/ui_api.h"
+#elif ENABLED(DWIN_CREALITY_LCD_ENHANCED)
+  #include "../lcd/e3v2/enhanced/dwin.h"
 #endif
 
 void event_filament_runout(const uint8_t extruder) {
@@ -86,6 +88,7 @@ void event_filament_runout(const uint8_t extruder) {
   #endif
 
   TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getTool(extruder)));
+  TERN_(DWIN_CREALITY_LCD_ENHANCED, DWIN_FilamentRunout(extruder));
 
   #if ANY(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS, MULTI_FILAMENT_SENSOR)
     const char tool = '0' + TERN0(MULTI_FILAMENT_SENSOR, extruder);

commit 713de872ce055bd10bd59b4f811136b0ec0cfbae
Author: Stephan <veigl@gmx.net>
Date:   Mon Mar 1 03:16:22 2021 +0100

    Filament Runout handling for Mixing Extruder (#20327)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 17d2c74003..531ca1081f 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -47,12 +47,12 @@ bool FilamentMonitorBase::enabled = true,
 
 #if HAS_FILAMENT_RUNOUT_DISTANCE
   float RunoutResponseDelayed::runout_distance_mm = FILAMENT_RUNOUT_DISTANCE_MM;
-  volatile float RunoutResponseDelayed::runout_mm_countdown[EXTRUDERS];
+  volatile float RunoutResponseDelayed::runout_mm_countdown[NUM_RUNOUT_SENSORS];
   #if ENABLED(FILAMENT_MOTION_SENSOR)
     uint8_t FilamentSensorEncoder::motion_detected;
   #endif
 #else
-  int8_t RunoutResponseDebounced::runout_count; // = 0
+  int8_t RunoutResponseDebounced::runout_count[NUM_RUNOUT_SENSORS]; // = 0
 #endif
 
 //
@@ -70,7 +70,7 @@ bool FilamentMonitorBase::enabled = true,
   #include "../lcd/extui/ui_api.h"
 #endif
 
-void event_filament_runout() {
+void event_filament_runout(const uint8_t extruder) {
 
   if (did_pause_print) return;  // Action already in progress. Purge triggered repeated runout.
 
@@ -85,10 +85,10 @@ void event_filament_runout() {
     }
   #endif
 
-  TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getActiveTool()));
+  TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getTool(extruder)));
 
-  #if EITHER(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS)
-    const char tool = '0' + TERN0(MULTI_FILAMENT_SENSOR, active_extruder);
+  #if ANY(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS, MULTI_FILAMENT_SENSOR)
+    const char tool = '0' + TERN0(MULTI_FILAMENT_SENSOR, extruder);
   #endif
 
   //action:out_of_filament
@@ -124,8 +124,22 @@ void event_filament_runout() {
     SERIAL_EOL();
   #endif // HOST_ACTION_COMMANDS
 
-  if (run_runout_script)
-    queue.inject_P(PSTR(FILAMENT_RUNOUT_SCRIPT));
+  if (run_runout_script) {
+    #if MULTI_FILAMENT_SENSOR
+      char script[strlen(FILAMENT_RUNOUT_SCRIPT) + 1];
+      sprintf_P(script, PSTR(FILAMENT_RUNOUT_SCRIPT), tool);
+      #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
+        SERIAL_ECHOLNPAIR("Runout Command: ", script);
+      #endif
+      queue.inject(script);
+    #else
+      #if ENABLED(FILAMENT_RUNOUT_SENSOR_DEBUG)
+        SERIAL_ECHOPGM("Runout Command: ");
+        SERIAL_ECHOLNPGM(FILAMENT_RUNOUT_SCRIPT);
+      #endif
+      queue.inject_P(PSTR(FILAMENT_RUNOUT_SCRIPT));
+    #endif
+  }
 }
 
 #endif // HAS_FILAMENT_SENSOR

commit 1aa421efe54eef40a5ba2ba7706908a4ca384586
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 28 19:50:17 2021 -0600

    Filament sensor cleanup

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index be769d2dc8..17d2c74003 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -88,11 +88,7 @@ void event_filament_runout() {
   TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getActiveTool()));
 
   #if EITHER(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS)
-    const char tool = '0'
-      #if NUM_RUNOUT_SENSORS > 1
-        + active_extruder
-      #endif
-    ;
+    const char tool = '0' + TERN0(MULTI_FILAMENT_SENSOR, active_extruder);
   #endif
 
   //action:out_of_filament

commit c0870d417a68ff4303100f165282d41be9129a5c
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jan 21 03:40:07 2021 -0600

    Move some MarlinCore and MarlinUI code (#20832)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 50e18e52ef..be769d2dc8 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -59,6 +59,7 @@ bool FilamentMonitorBase::enabled = true,
 // Filament Runout event handler
 //
 #include "../MarlinCore.h"
+#include "../feature/pause.h"
 #include "../gcode/queue.h"
 
 #if ENABLED(HOST_ACTION_COMMANDS)
@@ -71,7 +72,7 @@ bool FilamentMonitorBase::enabled = true,
 
 void event_filament_runout() {
 
-  if (TERN0(ADVANCED_PAUSE_FEATURE, did_pause_print)) return;  // Action already in progress. Purge triggered repeated runout.
+  if (did_pause_print) return;  // Action already in progress. Purge triggered repeated runout.
 
   #if ENABLED(TOOLCHANGE_MIGRATION_FEATURE)
     if (migration.in_progress) {

commit 21ce39aa9b304d627e6f2f7eecde873c7edb7af9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 19 04:24:57 2020 -0500

    Use PGM serial strings

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 71f31f2145..50e18e52ef 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -40,8 +40,9 @@ bool FilamentMonitorBase::enabled = true,
 #endif
 
 #if ENABLED(TOOLCHANGE_MIGRATION_FEATURE)
-  //#define DEBUG_TOOLCHANGE_MIGRATION_FEATURE
   #include "../module/tool_change.h"
+  #define DEBUG_OUT ENABLED(DEBUG_TOOLCHANGE_MIGRATION_FEATURE)
+  #include "../core/debug_out.h"
 #endif
 
 #if HAS_FILAMENT_RUNOUT_DISTANCE
@@ -74,15 +75,11 @@ void event_filament_runout() {
 
   #if ENABLED(TOOLCHANGE_MIGRATION_FEATURE)
     if (migration.in_progress) {
-      #if ENABLED(DEBUG_TOOLCHANGE_MIGRATION_FEATURE)
-        SERIAL_ECHOLN("Migration Already In Progress");
-      #endif
+      DEBUG_ECHOLNPGM("Migration Already In Progress");
       return;  // Action already in progress. Purge triggered repeated runout.
     }
     if (migration.automode) {
-      #if ENABLED(DEBUG_TOOLCHANGE_MIGRATION_FEATURE)
-        SERIAL_ECHOLN("Migration Starting");
-      #endif
+      DEBUG_ECHOLNPGM("Migration Starting");
       if (extruder_migration()) return;
     }
   #endif
@@ -109,9 +106,7 @@ void event_filament_runout() {
     if (run_runout_script
       && ( strstr(FILAMENT_RUNOUT_SCRIPT, "M600")
         || strstr(FILAMENT_RUNOUT_SCRIPT, "M125")
-        #if ENABLED(ADVANCED_PAUSE_FEATURE)
-          || strstr(FILAMENT_RUNOUT_SCRIPT, "M25")
-        #endif
+        || TERN0(ADVANCED_PAUSE_FEATURE, strstr(FILAMENT_RUNOUT_SCRIPT, "M25"))
       )
     ) {
       host_action_paused(false);

commit a62ae2aa2d74613fe15bf2b8ca4390fca53ebf01
Author: Steven Haigh <netwiz@crc.id.au>
Date:   Thu Aug 20 09:58:18 2020 +1000

    Default Filament Runout Sensor enabled state (#19013)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 0b5c0ebc2e..71f31f2145 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -44,14 +44,6 @@ bool FilamentMonitorBase::enabled = true,
   #include "../module/tool_change.h"
 #endif
 
-/**
- * Called by FilamentSensorSwitch::run when filament is detected.
- * Called by FilamentSensorEncoder::block_completed when motion is detected.
- */
-void FilamentSensorBase::filament_present(const uint8_t extruder) {
-  runout.filament_present(extruder); // calls response.filament_present(extruder)
-}
-
 #if HAS_FILAMENT_RUNOUT_DISTANCE
   float RunoutResponseDelayed::runout_distance_mm = FILAMENT_RUNOUT_DISTANCE_MM;
   volatile float RunoutResponseDelayed::runout_mm_countdown[EXTRUDERS];

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 80bce6d758..0b5c0ebc2e 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit c1dcc56a0b5bc110289ac9c4aeefa8263c5174d4
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sat Jun 27 22:57:01 2020 -0400

    Tool Change Migration fixes and debugging (#18448)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 452781b7f2..80bce6d758 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -40,6 +40,7 @@ bool FilamentMonitorBase::enabled = true,
 #endif
 
 #if ENABLED(TOOLCHANGE_MIGRATION_FEATURE)
+  //#define DEBUG_TOOLCHANGE_MIGRATION_FEATURE
   #include "../module/tool_change.h"
 #endif
 
@@ -80,8 +81,18 @@ void event_filament_runout() {
   if (TERN0(ADVANCED_PAUSE_FEATURE, did_pause_print)) return;  // Action already in progress. Purge triggered repeated runout.
 
   #if ENABLED(TOOLCHANGE_MIGRATION_FEATURE)
-    if (migration.in_progress) return;  // Action already in progress. Purge triggered repeated runout.
-    if (migration.automode) { extruder_migration(); return; }
+    if (migration.in_progress) {
+      #if ENABLED(DEBUG_TOOLCHANGE_MIGRATION_FEATURE)
+        SERIAL_ECHOLN("Migration Already In Progress");
+      #endif
+      return;  // Action already in progress. Purge triggered repeated runout.
+    }
+    if (migration.automode) {
+      #if ENABLED(DEBUG_TOOLCHANGE_MIGRATION_FEATURE)
+        SERIAL_ECHOLN("Migration Starting");
+      #endif
+      if (extruder_migration()) return;
+    }
   #endif
 
   TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getActiveTool()));

commit cfd31ff70ee949eb5eea61bf30eac24aef9fcb9c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue May 5 23:18:23 2020 -0500

    Add HAS_FILAMENT_RUNOUT_DISTANCE

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index bba4f4b1fa..452781b7f2 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -51,13 +51,12 @@ void FilamentSensorBase::filament_present(const uint8_t extruder) {
   runout.filament_present(extruder); // calls response.filament_present(extruder)
 }
 
-#if ENABLED(FILAMENT_MOTION_SENSOR)
-  uint8_t FilamentSensorEncoder::motion_detected;
-#endif
-
-#ifdef FILAMENT_RUNOUT_DISTANCE_MM
+#if HAS_FILAMENT_RUNOUT_DISTANCE
   float RunoutResponseDelayed::runout_distance_mm = FILAMENT_RUNOUT_DISTANCE_MM;
   volatile float RunoutResponseDelayed::runout_mm_countdown[EXTRUDERS];
+  #if ENABLED(FILAMENT_MOTION_SENSOR)
+    uint8_t FilamentSensorEncoder::motion_detected;
+  #endif
 #else
   int8_t RunoutResponseDebounced::runout_count; // = 0
 #endif

commit 2f6262c27b11598293839f6d46f3b340ee6a1f4c
Author: studiodyne <42887851+studiodyne@users.noreply.github.com>
Date:   Thu Apr 23 04:03:28 2020 +0200

    Automatic Tool Migration feature (#17248)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index f74e0c741b..bba4f4b1fa 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -39,6 +39,10 @@ bool FilamentMonitorBase::enabled = true,
   bool FilamentMonitorBase::host_handling; // = false
 #endif
 
+#if ENABLED(TOOLCHANGE_MIGRATION_FEATURE)
+  #include "../module/tool_change.h"
+#endif
+
 /**
  * Called by FilamentSensorSwitch::run when filament is detected.
  * Called by FilamentSensorEncoder::block_completed when motion is detected.
@@ -76,6 +80,11 @@ void event_filament_runout() {
 
   if (TERN0(ADVANCED_PAUSE_FEATURE, did_pause_print)) return;  // Action already in progress. Purge triggered repeated runout.
 
+  #if ENABLED(TOOLCHANGE_MIGRATION_FEATURE)
+    if (migration.in_progress) return;  // Action already in progress. Purge triggered repeated runout.
+    if (migration.automode) { extruder_migration(); return; }
+  #endif
+
   TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getActiveTool()));
 
   #if EITHER(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS)

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index bd4a653e99..f74e0c741b 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -74,13 +74,9 @@ void FilamentSensorBase::filament_present(const uint8_t extruder) {
 
 void event_filament_runout() {
 
-  #if ENABLED(ADVANCED_PAUSE_FEATURE)
-    if (did_pause_print) return;  // Action already in progress. Purge triggered repeated runout.
-  #endif
+  if (TERN0(ADVANCED_PAUSE_FEATURE, did_pause_print)) return;  // Action already in progress. Purge triggered repeated runout.
 
-  #if ENABLED(EXTENSIBLE_UI)
-    ExtUI::onFilamentRunout(ExtUI::getActiveTool());
-  #endif
+  TERN_(EXTENSIBLE_UI, ExtUI::onFilamentRunout(ExtUI::getActiveTool()));
 
   #if EITHER(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS)
     const char tool = '0'

commit 6bead0c1b04152f6a291d851f6cd4029fe0fc616
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 16:29:29 2020 -0500

    Shorter paths to HAL, ExtUI (#17156)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 3cf81303dd..bd4a653e99 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -69,7 +69,7 @@ void FilamentSensorBase::filament_present(const uint8_t extruder) {
 #endif
 
 #if ENABLED(EXTENSIBLE_UI)
-  #include "../lcd/extensible_ui/ui_api.h"
+  #include "../lcd/extui/ui_api.h"
 #endif
 
 void event_filament_runout() {

commit 00ba053c90ebbe6d430a48912bc3e00c8a1041c8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Feb 13 23:39:27 2020 -0600

    Clean up host actions code (#16856)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 3acda2f7a2..3cf81303dd 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -92,11 +92,7 @@ void event_filament_runout() {
 
   //action:out_of_filament
   #if ENABLED(HOST_PROMPT_SUPPORT)
-    host_prompt_reason = PROMPT_FILAMENT_RUNOUT;
-    host_action_prompt_end();
-    host_action_prompt_begin(PSTR("FilamentRunout T"), false);
-    SERIAL_CHAR(tool);
-    SERIAL_EOL();
+    host_action_prompt_begin(PROMPT_FILAMENT_RUNOUT, PSTR("FilamentRunout T"), tool);
     host_action_prompt_show();
   #endif
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 700854ad2d..3acda2f7a2 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm

commit d0e1166cce60381fbdad1105d13765806a525d99
Author: Dirk O. Kaar <19971886+dok-net@users.noreply.github.com>
Date:   Fri Jan 3 02:01:38 2020 +0100

    Fix Visual Micro "Arduino IDE for Visual Studio" support (#16418)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 6b8905c3b9..700854ad2d 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -61,7 +61,7 @@ void FilamentSensorBase::filament_present(const uint8_t extruder) {
 //
 // Filament Runout event handler
 //
-#include "../Marlin.h"
+#include "../MarlinCore.h"
 #include "../gcode/queue.h"
 
 #if ENABLED(HOST_ACTION_COMMANDS)

commit 0322348924cfb186ba9e9597cc3b246eb086229a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Oct 2 18:51:25 2019 -0500

    Handle runout in runout.cpp

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index a4172fc086..6b8905c3b9 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -58,4 +58,79 @@ void FilamentSensorBase::filament_present(const uint8_t extruder) {
   int8_t RunoutResponseDebounced::runout_count; // = 0
 #endif
 
+//
+// Filament Runout event handler
+//
+#include "../Marlin.h"
+#include "../gcode/queue.h"
+
+#if ENABLED(HOST_ACTION_COMMANDS)
+  #include "host_actions.h"
+#endif
+
+#if ENABLED(EXTENSIBLE_UI)
+  #include "../lcd/extensible_ui/ui_api.h"
+#endif
+
+void event_filament_runout() {
+
+  #if ENABLED(ADVANCED_PAUSE_FEATURE)
+    if (did_pause_print) return;  // Action already in progress. Purge triggered repeated runout.
+  #endif
+
+  #if ENABLED(EXTENSIBLE_UI)
+    ExtUI::onFilamentRunout(ExtUI::getActiveTool());
+  #endif
+
+  #if EITHER(HOST_PROMPT_SUPPORT, HOST_ACTION_COMMANDS)
+    const char tool = '0'
+      #if NUM_RUNOUT_SENSORS > 1
+        + active_extruder
+      #endif
+    ;
+  #endif
+
+  //action:out_of_filament
+  #if ENABLED(HOST_PROMPT_SUPPORT)
+    host_prompt_reason = PROMPT_FILAMENT_RUNOUT;
+    host_action_prompt_end();
+    host_action_prompt_begin(PSTR("FilamentRunout T"), false);
+    SERIAL_CHAR(tool);
+    SERIAL_EOL();
+    host_action_prompt_show();
+  #endif
+
+  const bool run_runout_script = !runout.host_handling;
+
+  #if ENABLED(HOST_ACTION_COMMANDS)
+    if (run_runout_script
+      && ( strstr(FILAMENT_RUNOUT_SCRIPT, "M600")
+        || strstr(FILAMENT_RUNOUT_SCRIPT, "M125")
+        #if ENABLED(ADVANCED_PAUSE_FEATURE)
+          || strstr(FILAMENT_RUNOUT_SCRIPT, "M25")
+        #endif
+      )
+    ) {
+      host_action_paused(false);
+    }
+    else {
+      // Legacy Repetier command for use until newer version supports standard dialog
+      // To be removed later when pause command also triggers dialog
+      #ifdef ACTION_ON_FILAMENT_RUNOUT
+        host_action(PSTR(ACTION_ON_FILAMENT_RUNOUT " T"), false);
+        SERIAL_CHAR(tool);
+        SERIAL_EOL();
+      #endif
+
+      host_action_pause(false);
+    }
+    SERIAL_ECHOPGM(" " ACTION_REASON_ON_FILAMENT_RUNOUT " ");
+    SERIAL_CHAR(tool);
+    SERIAL_EOL();
+  #endif // HOST_ACTION_COMMANDS
+
+  if (run_runout_script)
+    queue.inject_P(PSTR(FILAMENT_RUNOUT_SCRIPT));
+}
+
 #endif // HAS_FILAMENT_SENSOR

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index e319a7cc2f..a4172fc086 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 15357af67ceb74b14606eba9fbb75d20914f8909
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Fri May 3 22:53:15 2019 -0600

    Backlash cleanup (#13659)
    
    ‚Ä¶And save backlash, fil. sensor, ExtUI userdata to EEPROM.

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 9395dec5b4..e319a7cc2f 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -51,7 +51,7 @@ void FilamentSensorBase::filament_present(const uint8_t extruder) {
   uint8_t FilamentSensorEncoder::motion_detected;
 #endif
 
-#if FILAMENT_RUNOUT_DISTANCE_MM > 0
+#ifdef FILAMENT_RUNOUT_DISTANCE_MM
   float RunoutResponseDelayed::runout_distance_mm = FILAMENT_RUNOUT_DISTANCE_MM;
   volatile float RunoutResponseDelayed::runout_mm_countdown[EXTRUDERS];
 #else

commit 7cf9b93f26f728f0104dc9b930f6b23096639d98
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 20:08:34 2019 -0600

    Add HAS_FILAMENT_SENSOR ahead of 12962

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 8587a4c925..9395dec5b4 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -26,7 +26,7 @@
 
 #include "../inc/MarlinConfigPre.h"
 
-#if ENABLED(FILAMENT_RUNOUT_SENSOR)
+#if HAS_FILAMENT_SENSOR
 
 #include "runout.h"
 
@@ -58,4 +58,4 @@ void FilamentSensorBase::filament_present(const uint8_t extruder) {
   int8_t RunoutResponseDebounced::runout_count; // = 0
 #endif
 
-#endif // FILAMENT_RUNOUT_SENSOR
+#endif // HAS_FILAMENT_SENSOR

commit 7f1b69b0c83ae914ed9ae35fdad9f79814069652
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Tue Feb 12 16:55:47 2019 -0500

    Add HOST_PROMPT_SUPPORT (#13039)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index d4162155f2..8587a4c925 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -33,7 +33,11 @@
 FilamentMonitor runout;
 
 bool FilamentMonitorBase::enabled = true,
-     FilamentMonitorBase::filament_ran_out; // = false
+     FilamentMonitorBase::filament_ran_out;  // = false
+
+#if ENABLED(HOST_ACTION_COMMANDS)
+  bool FilamentMonitorBase::host_handling; // = false
+#endif
 
 /**
  * Called by FilamentSensorSwitch::run when filament is detected.

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 3dcb82673c..d4162155f2 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 5e586a6b393c9a99c0cfedf720f360687582a00f
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Wed Nov 14 15:54:05 2018 -0700

    Fix to runout sensor code. (#12431)
    
    - "old_state" is no longer a class static variable.

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 1a9f56cbe1..3dcb82673c 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -44,8 +44,7 @@ void FilamentSensorBase::filament_present(const uint8_t extruder) {
 }
 
 #if ENABLED(FILAMENT_MOTION_SENSOR)
-  uint8_t FilamentSensorEncoder::motion_detected,
-          FilamentSensorEncoder::old_state; // = 0
+  uint8_t FilamentSensorEncoder::motion_detected;
 #endif
 
 #if FILAMENT_RUNOUT_DISTANCE_MM > 0

commit edfd106bc5d7bc02ef5e55445ffb3dbaf48b0226
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 14 11:45:57 2018 -0600

    Rejigger Filament Runout class (#12428)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index a51cf5b9e8..1a9f56cbe1 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -30,23 +30,29 @@
 
 #include "runout.h"
 
-FilamentRunoutSensor runout;
+FilamentMonitor runout;
 
-bool FilamentSensorBase::enabled = true,
-     FilamentSensorBase::filament_ran_out; // = false
+bool FilamentMonitorBase::enabled = true,
+     FilamentMonitorBase::filament_ran_out; // = false
 
-void FilamentSensorTypeBase::filament_present(const uint8_t extruder) {
-  runout.filament_present(extruder);
+/**
+ * Called by FilamentSensorSwitch::run when filament is detected.
+ * Called by FilamentSensorEncoder::block_completed when motion is detected.
+ */
+void FilamentSensorBase::filament_present(const uint8_t extruder) {
+  runout.filament_present(extruder); // calls response.filament_present(extruder)
 }
 
-uint8_t FilamentSensorTypeEncoder::motion_detected,
-        FilamentSensorTypeEncoder::old_state; // = 0
+#if ENABLED(FILAMENT_MOTION_SENSOR)
+  uint8_t FilamentSensorEncoder::motion_detected,
+          FilamentSensorEncoder::old_state; // = 0
+#endif
 
 #if FILAMENT_RUNOUT_DISTANCE_MM > 0
   float RunoutResponseDelayed::runout_distance_mm = FILAMENT_RUNOUT_DISTANCE_MM;
-  int32_t RunoutResponseDelayed::steps_since_detection[EXTRUDERS];
+  volatile float RunoutResponseDelayed::runout_mm_countdown[EXTRUDERS];
 #else
-  uint8_t RunoutResponseDebounced::runout_count; // = 0
+  int8_t RunoutResponseDebounced::runout_count; // = 0
 #endif
 
 #endif // FILAMENT_RUNOUT_SENSOR

commit 056561df935f47ecfabc16e2ed777f3754be837c
Author: Marcio Teixeira <marcio@alephobjects.com>
Date:   Tue Oct 16 06:28:52 2018 -0600

    [2.0.x] Enhancements to FILAMENT_RUNOUT_SENSOR (#12069)
    
    - Added FILAMENT_RUNOUT_DISTANCE_MM option
    - Added FILAMENT_MOTION_SENSOR option

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 7e3301e5bd..a51cf5b9e8 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -32,36 +32,21 @@
 
 FilamentRunoutSensor runout;
 
-bool FilamentRunoutSensor::enabled = true,
-     FilamentRunoutSensor::filament_ran_out; // = false
-uint8_t FilamentRunoutSensor::runout_count; // = 0
+bool FilamentSensorBase::enabled = true,
+     FilamentSensorBase::filament_ran_out; // = false
 
-void FilamentRunoutSensor::setup() {
+void FilamentSensorTypeBase::filament_present(const uint8_t extruder) {
+  runout.filament_present(extruder);
+}
 
-  #if ENABLED(FIL_RUNOUT_PULLUP)
-    #define INIT_RUNOUT_PIN(P) SET_INPUT_PULLUP(P)
-  #elif ENABLED(FIL_RUNOUT_PULLDOWN)
-    #define INIT_RUNOUT_PIN(P) SET_INPUT_PULLDOWN(P)
-  #else
-    #define INIT_RUNOUT_PIN(P) SET_INPUT(P)
-  #endif
+uint8_t FilamentSensorTypeEncoder::motion_detected,
+        FilamentSensorTypeEncoder::old_state; // = 0
 
-  INIT_RUNOUT_PIN(FIL_RUNOUT_PIN);
-  #if NUM_RUNOUT_SENSORS > 1
-    INIT_RUNOUT_PIN(FIL_RUNOUT2_PIN);
-    #if NUM_RUNOUT_SENSORS > 2
-      INIT_RUNOUT_PIN(FIL_RUNOUT3_PIN);
-      #if NUM_RUNOUT_SENSORS > 3
-        INIT_RUNOUT_PIN(FIL_RUNOUT4_PIN);
-        #if NUM_RUNOUT_SENSORS > 4
-          INIT_RUNOUT_PIN(FIL_RUNOUT5_PIN);
-          #if NUM_RUNOUT_SENSORS > 5
-            INIT_RUNOUT_PIN(FIL_RUNOUT6_PIN);
-          #endif
-        #endif
-      #endif
-    #endif
-  #endif
-}
+#if FILAMENT_RUNOUT_DISTANCE_MM > 0
+  float RunoutResponseDelayed::runout_distance_mm = FILAMENT_RUNOUT_DISTANCE_MM;
+  int32_t RunoutResponseDelayed::steps_since_detection[EXTRUDERS];
+#else
+  uint8_t RunoutResponseDebounced::runout_count; // = 0
+#endif
 
 #endif // FILAMENT_RUNOUT_SENSOR

commit 4d5566a6b720d9cfde0073d55e551625144983fe
Author: InsanityAutomation <38436470+InsanityAutomation@users.noreply.github.com>
Date:   Sun Sep 30 22:33:46 2018 -0400

    Add filament runout sensor menu item (#11971)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 00eb97195d..7e3301e5bd 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -32,7 +32,8 @@
 
 FilamentRunoutSensor runout;
 
-bool FilamentRunoutSensor::filament_ran_out; // = false
+bool FilamentRunoutSensor::enabled = true,
+     FilamentRunoutSensor::filament_ran_out; // = false
 uint8_t FilamentRunoutSensor::runout_count; // = 0
 
 void FilamentRunoutSensor::setup() {

commit 1718eff54adefc7cc95851f28df0c7e02eae3a36
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 13 01:35:55 2018 -0500

    Code changes supporting up to 6 extruders

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index fde93e7f7a..00eb97195d 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -54,6 +54,9 @@ void FilamentRunoutSensor::setup() {
         INIT_RUNOUT_PIN(FIL_RUNOUT4_PIN);
         #if NUM_RUNOUT_SENSORS > 4
           INIT_RUNOUT_PIN(FIL_RUNOUT5_PIN);
+          #if NUM_RUNOUT_SENSORS > 5
+            INIT_RUNOUT_PIN(FIL_RUNOUT6_PIN);
+          #endif
         #endif
       #endif
     #endif

commit eb867817b5f4f74070137bad36c68c4be22b6fe7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Mar 5 01:49:30 2018 -0600

    Prevent filament runout false positives (#9946)

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 18f0eadebd..fde93e7f7a 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -32,7 +32,8 @@
 
 FilamentRunoutSensor runout;
 
-bool FilamentRunoutSensor::filament_ran_out; // = false;
+bool FilamentRunoutSensor::filament_ran_out; // = false
+uint8_t FilamentRunoutSensor::runout_count; // = 0
 
 void FilamentRunoutSensor::setup() {
 

commit d3ca82d8c24b94a0073d5839ddca6569a6d013a1
Author: Studiodyne <diabolomix@hotmail.fr>
Date:   Sun Feb 18 09:42:09 2018 +0100

    Support for multiple filament runout sensors

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
index 8bc90947e3..18f0eadebd 100644
--- a/Marlin/src/feature/runout.cpp
+++ b/Marlin/src/feature/runout.cpp
@@ -24,21 +24,39 @@
  * feature/runout.cpp - Runout sensor support
  */
 
-#include "../inc/MarlinConfig.h"
+#include "../inc/MarlinConfigPre.h"
 
 #if ENABLED(FILAMENT_RUNOUT_SENSOR)
 
-#include "../module/stepper.h"
-#include "../gcode/queue.h"
+#include "runout.h"
 
-bool filament_ran_out = false;
+FilamentRunoutSensor runout;
 
-void handle_filament_runout() {
-  if (!filament_ran_out) {
-    filament_ran_out = true;
-    enqueue_and_echo_commands_P(PSTR(FILAMENT_RUNOUT_SCRIPT));
-    stepper.synchronize();
-  }
+bool FilamentRunoutSensor::filament_ran_out; // = false;
+
+void FilamentRunoutSensor::setup() {
+
+  #if ENABLED(FIL_RUNOUT_PULLUP)
+    #define INIT_RUNOUT_PIN(P) SET_INPUT_PULLUP(P)
+  #elif ENABLED(FIL_RUNOUT_PULLDOWN)
+    #define INIT_RUNOUT_PIN(P) SET_INPUT_PULLDOWN(P)
+  #else
+    #define INIT_RUNOUT_PIN(P) SET_INPUT(P)
+  #endif
+
+  INIT_RUNOUT_PIN(FIL_RUNOUT_PIN);
+  #if NUM_RUNOUT_SENSORS > 1
+    INIT_RUNOUT_PIN(FIL_RUNOUT2_PIN);
+    #if NUM_RUNOUT_SENSORS > 2
+      INIT_RUNOUT_PIN(FIL_RUNOUT3_PIN);
+      #if NUM_RUNOUT_SENSORS > 3
+        INIT_RUNOUT_PIN(FIL_RUNOUT4_PIN);
+        #if NUM_RUNOUT_SENSORS > 4
+          INIT_RUNOUT_PIN(FIL_RUNOUT5_PIN);
+        #endif
+      #endif
+    #endif
+  #endif
 }
 
 #endif // FILAMENT_RUNOUT_SENSOR

commit f8e8fcb978e3c2eab7eb001566593aefa04c3fab
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 10 02:35:20 2017 -0500

    Move FILAMENT_RUNOUT_SENSOR to a feature

diff --git a/Marlin/src/feature/runout.cpp b/Marlin/src/feature/runout.cpp
new file mode 100644
index 0000000000..8bc90947e3
--- /dev/null
+++ b/Marlin/src/feature/runout.cpp
@@ -0,0 +1,44 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * feature/runout.cpp - Runout sensor support
+ */
+
+#include "../inc/MarlinConfig.h"
+
+#if ENABLED(FILAMENT_RUNOUT_SENSOR)
+
+#include "../module/stepper.h"
+#include "../gcode/queue.h"
+
+bool filament_ran_out = false;
+
+void handle_filament_runout() {
+  if (!filament_ran_out) {
+    filament_ran_out = true;
+    enqueue_and_echo_commands_P(PSTR(FILAMENT_RUNOUT_SCRIPT));
+    stepper.synchronize();
+  }
+}
+
+#endif // FILAMENT_RUNOUT_SENSOR
