commit 95c1b7fb31b1f22d6d330fa8ce7432adf6c80d6d
Author: Keith Bennett <13375512+thisiskeithb@users.noreply.github.com>
Date:   Sat Jul 13 10:18:47 2024 -0700

    üîß USART6 for STM32, expand port range (#27262)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index c4bc629949..862678373f 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -37,6 +37,9 @@
 #ifndef USART5
   #define USART5 UART5
 #endif
+#ifndef USART6
+  #define USART6 UART6
+#endif
 #ifndef USART7
   #define USART7 UART7
 #endif

commit b94a3354932dbcf6680e8d378219e9f41f29873e
Author: rondlh <77279634+rondlh@users.noreply.github.com>
Date:   Tue Dec 12 08:48:02 2023 +0800

    ‚ú® SERIAL_DMA (for some STM32Fx) (#26328)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 9f0b003a31..c4bc629949 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -47,10 +47,15 @@
   #define USART9 UART9
 #endif
 
-#define DECLARE_SERIAL_PORT(ser_num) \
-  void _rx_complete_irq_ ## ser_num (serial_t * obj); \
-  MSerialT MSerial ## ser_num (true, USART ## ser_num, &_rx_complete_irq_ ## ser_num); \
-  void _rx_complete_irq_ ## ser_num (serial_t * obj) { MSerial ## ser_num ._rx_complete_irq(obj); }
+#if ENABLED(SERIAL_DMA)
+  #define DECLARE_SERIAL_PORT(ser_num) \
+    MSerialT MSerial ## ser_num (true, USART ## ser_num);
+#else
+  #define DECLARE_SERIAL_PORT(ser_num) \
+    void _rx_complete_irq_ ## ser_num (serial_t * obj); \
+    MSerialT MSerial ## ser_num (true, USART ## ser_num, &_rx_complete_irq_ ## ser_num); \
+    void _rx_complete_irq_ ## ser_num (serial_t * obj) { MSerial ## ser_num ._rx_complete_irq(obj); }
+#endif
 
 #if USING_HW_SERIAL1
   DECLARE_SERIAL_PORT(1)
@@ -87,33 +92,38 @@
 #endif
 
 void MarlinSerial::begin(unsigned long baud, uint8_t config) {
-  HardwareSerial::begin(baud, config);
-  // Replace the IRQ callback with the one we have defined
-  TERN_(EMERGENCY_PARSER, _serial.rx_callback = _rx_callback);
+  #if ENABLED(SERIAL_DMA)
+    HAL_HardwareSerial::begin(baud, config);
+  #else
+    HardwareSerial::begin(baud, config);
+    // Replace the IRQ callback with the one we have defined
+    TERN_(EMERGENCY_PARSER, _serial.rx_callback = _rx_callback);
+  #endif
 }
 
-// This function is Copyright (c) 2006 Nicholas Zambetti.
-void MarlinSerial::_rx_complete_irq(serial_t *obj) {
-  // No Parity error, read byte and store it in the buffer if there is room
-  unsigned char c;
+#if DISABLED(SERIAL_DMA)
 
-  if (uart_getc(obj, &c) == 0) {
+  // This function Copyright (c) 2006 Nicholas Zambetti.
+  void MarlinSerial::_rx_complete_irq(serial_t *obj) {
+    // No Parity error, read byte and store it in the buffer if there is room
+    unsigned char c;
+    if (uart_getc(obj, &c) == 0) {
 
-    rx_buffer_index_t i = (unsigned int)(obj->rx_head + 1) % SERIAL_RX_BUFFER_SIZE;
+      rx_buffer_index_t i = (unsigned int)(obj->rx_head + 1) % SERIAL_RX_BUFFER_SIZE;
 
-    // if we should be storing the received character into the location
-    // just before the tail (meaning that the head would advance to the
-    // current location of the tail), we're about to overflow the buffer
-    // and so we don't write the character or advance the head.
-    if (i != obj->rx_tail) {
-      obj->rx_buff[obj->rx_head] = c;
-      obj->rx_head = i;
-    }
+      // If tail overlaps head the buffer is overflowed
+      // so don't write the character or advance the head.
+      if (i != obj->rx_tail) {
+        obj->rx_buff[obj->rx_head] = c;
+        obj->rx_head = i;
+      }
 
-    #if ENABLED(EMERGENCY_PARSER)
-      emergency_parser.update(static_cast<MSerialT*>(this)->emergency_state, c);
-    #endif
+      #if ENABLED(EMERGENCY_PARSER)
+        emergency_parser.update(static_cast<MSerialT*>(this)->emergency_state, c);
+      #endif
+    }
   }
-}
+
+#endif // !SERIAL_DMA
 
 #endif // HAL_STM32

commit abd1896ce2cd37a184fc1a237482b2b0a3c16ae2
Author: ellensp <530024+ellensp@users.noreply.github.com>
Date:   Sun Jul 30 11:30:56 2023 +1200

    üîß STM32 support 9 UARTs (#26072)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 37a8f40fd0..9f0b003a31 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -37,6 +37,15 @@
 #ifndef USART5
   #define USART5 UART5
 #endif
+#ifndef USART7
+  #define USART7 UART7
+#endif
+#ifndef USART8
+  #define USART8 UART8
+#endif
+#ifndef USART9
+  #define USART9 UART9
+#endif
 
 #define DECLARE_SERIAL_PORT(ser_num) \
   void _rx_complete_irq_ ## ser_num (serial_t * obj); \

commit 323b38ee88dbf2a4691a20439dbb95a824822199
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 16 04:36:26 2021 -0500

    üí° Adjust headers, formatting

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 3caedc72eb..37a8f40fd0 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -2,6 +2,9 @@
  * Marlin 3D Printer Firmware
  * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
@@ -16,6 +19,7 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
+
 #include "../platforms.h"
 
 #ifdef HAL_STM32

commit 76c10b3e02aa5a699ee68a36663337de60fea4e8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Aug 8 21:31:10 2021 -0500

    üèóÔ∏è Define HAL_STM32 for HAL/STM32 (#22537)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index d990d2f428..3caedc72eb 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -16,7 +16,9 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
-#if defined(ARDUINO_ARCH_STM32) && !defined(STM32GENERIC) && !defined(MAPLE_STM32F1)
+#include "../platforms.h"
+
+#ifdef HAL_STM32
 
 #include "../../inc/MarlinConfig.h"
 #include "MarlinSerial.h"
@@ -101,4 +103,4 @@ void MarlinSerial::_rx_complete_irq(serial_t *obj) {
   }
 }
 
-#endif // ARDUINO_ARCH_STM32 && !STM32GENERIC && !MAPLE_STM32F1
+#endif // HAL_STM32

commit 4febb2352179f3de58db2161572de4050197bd5d
Author: MKS-Sean <56996910+MKS-Sean@users.noreply.github.com>
Date:   Tue Jul 13 08:17:28 2021 +0800

    ‚ú® MKS Robin Nano v3 + TFT_LVGL_UI + WiFi module (#22109)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 265e8b5ab6..d990d2f428 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -16,7 +16,7 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
-#if defined(ARDUINO_ARCH_STM32) && !defined(STM32GENERIC)
+#if defined(ARDUINO_ARCH_STM32) && !defined(STM32GENERIC) && !defined(MAPLE_STM32F1)
 
 #include "../../inc/MarlinConfig.h"
 #include "MarlinSerial.h"
@@ -101,4 +101,4 @@ void MarlinSerial::_rx_complete_irq(serial_t *obj) {
   }
 }
 
-#endif // ARDUINO_ARCH_STM32 && !STM32GENERIC
+#endif // ARDUINO_ARCH_STM32 && !STM32GENERIC && !MAPLE_STM32F1

commit 704b8cd83c507675d6f71621e1c35172779ac9d1
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 25 16:49:04 2021 -0500

    Apply TMC UART to STM32, simplify

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 132c602a0c..265e8b5ab6 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -37,19 +37,38 @@
   MSerialT MSerial ## ser_num (true, USART ## ser_num, &_rx_complete_irq_ ## ser_num); \
   void _rx_complete_irq_ ## ser_num (serial_t * obj) { MSerial ## ser_num ._rx_complete_irq(obj); }
 
-#define DECLARE_SERIAL_PORT_EXP(ser_num) DECLARE_SERIAL_PORT(ser_num)
-
-#if defined(SERIAL_PORT) && SERIAL_PORT >= 0
-  DECLARE_SERIAL_PORT_EXP(SERIAL_PORT)
+#if USING_HW_SERIAL1
+  DECLARE_SERIAL_PORT(1)
+#endif
+#if USING_HW_SERIAL2
+  DECLARE_SERIAL_PORT(2)
+#endif
+#if USING_HW_SERIAL3
+  DECLARE_SERIAL_PORT(3)
+#endif
+#if USING_HW_SERIAL4
+  DECLARE_SERIAL_PORT(4)
+#endif
+#if USING_HW_SERIAL5
+  DECLARE_SERIAL_PORT(5)
+#endif
+#if USING_HW_SERIAL6
+  DECLARE_SERIAL_PORT(6)
+#endif
+#if USING_HW_SERIAL7
+  DECLARE_SERIAL_PORT(7)
+#endif
+#if USING_HW_SERIAL8
+  DECLARE_SERIAL_PORT(8)
 #endif
-#if defined(SERIAL_PORT_2) && SERIAL_PORT_2 >= 0
-  DECLARE_SERIAL_PORT_EXP(SERIAL_PORT_2)
+#if USING_HW_SERIAL9
+  DECLARE_SERIAL_PORT(9)
 #endif
-#if defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT >= 0
-  DECLARE_SERIAL_PORT_EXP(MMU2_SERIAL_PORT)
+#if USING_HW_SERIAL10
+  DECLARE_SERIAL_PORT(10)
 #endif
-#if defined(LCD_SERIAL_PORT) && LCD_SERIAL_PORT >= 0
-  DECLARE_SERIAL_PORT_EXP(LCD_SERIAL_PORT)
+#if USING_HW_SERIALLP1
+  DECLARE_SERIAL_PORT(LP1)
 #endif
 
 void MarlinSerial::begin(unsigned long baud, uint8_t config) {

commit 84b961cb20a4f0b2c1ad67a71d6c507a12f9da2a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Mar 25 16:19:03 2021 -0500

    Define HW serial ports needed for TMC UART (#21446)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index cfb13f5bb5..132c602a0c 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -28,7 +28,6 @@
 #ifndef USART4
   #define USART4 UART4
 #endif
-
 #ifndef USART5
   #define USART5 UART5
 #endif
@@ -43,15 +42,12 @@
 #if defined(SERIAL_PORT) && SERIAL_PORT >= 0
   DECLARE_SERIAL_PORT_EXP(SERIAL_PORT)
 #endif
-
 #if defined(SERIAL_PORT_2) && SERIAL_PORT_2 >= 0
   DECLARE_SERIAL_PORT_EXP(SERIAL_PORT_2)
 #endif
-
 #if defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT >= 0
   DECLARE_SERIAL_PORT_EXP(MMU2_SERIAL_PORT)
 #endif
-
 #if defined(LCD_SERIAL_PORT) && LCD_SERIAL_PORT >= 0
   DECLARE_SERIAL_PORT_EXP(LCD_SERIAL_PORT)
 #endif

commit 27366197f3380627af365b005702bbe16393a18a
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Mon Feb 1 00:21:27 2021 +0100

    Serial refactor followup (#20932)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index c420ce40cf..cfb13f5bb5 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -81,7 +81,7 @@ void MarlinSerial::_rx_complete_irq(serial_t *obj) {
     }
 
     #if ENABLED(EMERGENCY_PARSER)
-      emergency_parser.update(emergency_state, c);
+      emergency_parser.update(static_cast<MSerialT*>(this)->emergency_state, c);
     #endif
   }
 }

commit 3f01b222b2b4f77cff66096dd5a18a64828e1fa4
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Thu Jan 28 09:02:06 2021 +0100

    Refactor serial class with templates (#20783)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 4d9177248a..c420ce40cf 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -35,7 +35,7 @@
 
 #define DECLARE_SERIAL_PORT(ser_num) \
   void _rx_complete_irq_ ## ser_num (serial_t * obj); \
-  MarlinSerial MSerial ## ser_num (USART ## ser_num, &_rx_complete_irq_ ## ser_num); \
+  MSerialT MSerial ## ser_num (true, USART ## ser_num, &_rx_complete_irq_ ## ser_num); \
   void _rx_complete_irq_ ## ser_num (serial_t * obj) { MSerial ## ser_num ._rx_complete_irq(obj); }
 
 #define DECLARE_SERIAL_PORT_EXP(ser_num) DECLARE_SERIAL_PORT(ser_num)

commit 1d5862a39b07f0a59039109c4121ef504ee2b2c3
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Sat Jan 16 03:38:34 2021 +0100

    MMU2 as standard serial device (#20771)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 50765ee995..4d9177248a 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -48,6 +48,10 @@
   DECLARE_SERIAL_PORT_EXP(SERIAL_PORT_2)
 #endif
 
+#if defined(MMU2_SERIAL_PORT) && MMU2_SERIAL_PORT >= 0
+  DECLARE_SERIAL_PORT_EXP(MMU2_SERIAL_PORT)
+#endif
+
 #if defined(LCD_SERIAL_PORT) && LCD_SERIAL_PORT >= 0
   DECLARE_SERIAL_PORT_EXP(LCD_SERIAL_PORT)
 #endif

commit aa2ced96e05de394abf34cb5b75046f823aa4954
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 26 03:47:07 2020 -0600

    Finish HAL/STM32 cpp wrappers

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index a146664366..50765ee995 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -16,7 +16,6 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
-
 #if defined(ARDUINO_ARCH_STM32) && !defined(STM32GENERIC)
 
 #include "../../inc/MarlinConfig.h"

commit da6c8317a7e7483fcb823c06f9cf953a764eacb0
Author: Jason Smith <jason.inet@gmail.com>
Date:   Thu Sep 24 18:28:48 2020 -0700

    Fix and improve STM32F1 serial (#19464)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 2d799ea54d..a146664366 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -49,8 +49,8 @@
   DECLARE_SERIAL_PORT_EXP(SERIAL_PORT_2)
 #endif
 
-#if defined(DGUS_SERIAL_PORT) && DGUS_SERIAL_PORT >= 0
-  DECLARE_SERIAL_PORT_EXP(DGUS_SERIAL_PORT)
+#if defined(LCD_SERIAL_PORT) && LCD_SERIAL_PORT >= 0
+  DECLARE_SERIAL_PORT_EXP(LCD_SERIAL_PORT)
 #endif
 
 void MarlinSerial::begin(unsigned long baud, uint8_t config) {

commit b98946b5c1b46e9399dae8d1cc41a15b2a5ee15f
Author: Victor Oliveira <rhapsodyv@gmail.com>
Date:   Thu Sep 10 00:46:50 2020 -0300

    Raise STM32F1 UART IRQ Priority, add error handling (#19301)
    
    (Error handling for Overrun, Framing and Parity.)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 8d99ab7855..2d799ea54d 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -55,10 +55,8 @@
 
 void MarlinSerial::begin(unsigned long baud, uint8_t config) {
   HardwareSerial::begin(baud, config);
-  // replace the IRQ callback with the one we have defined
-  #if ENABLED(EMERGENCY_PARSER)
-    _serial.rx_callback = _rx_callback;
-  #endif
+  // Replace the IRQ callback with the one we have defined
+  TERN_(EMERGENCY_PARSER, _serial.rx_callback = _rx_callback);
 }
 
 // This function is Copyright (c) 2006 Nicholas Zambetti.

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 65ef91e31d..8d99ab7855 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -13,7 +13,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit 8994cc8b261d904a6e8813780f4328a2bf236750
Author: Alexander Amelkin <alexander@amelkin.msk.ru>
Date:   Mon Jun 8 11:04:52 2020 +0300

    Fix BTT SKR Pro 1.0 UART4/5 (#18222)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
index 1961791e22..65ef91e31d 100644
--- a/Marlin/src/HAL/STM32/MarlinSerial.cpp
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -26,6 +26,14 @@
   #include "../../feature/e_parser.h"
 #endif
 
+#ifndef USART4
+  #define USART4 UART4
+#endif
+
+#ifndef USART5
+  #define USART5 UART5
+#endif
+
 #define DECLARE_SERIAL_PORT(ser_num) \
   void _rx_complete_irq_ ## ser_num (serial_t * obj); \
   MarlinSerial MSerial ## ser_num (USART ## ser_num, &_rx_complete_irq_ ## ser_num); \

commit 38ccc769f79844f1e44be5167b060a5af5cc4937
Author: rudihorn <rh@rudi-horn.de>
Date:   Tue May 26 06:43:29 2020 +0100

    Emergency Parser for STM32 (#18095)

diff --git a/Marlin/src/HAL/STM32/MarlinSerial.cpp b/Marlin/src/HAL/STM32/MarlinSerial.cpp
new file mode 100644
index 0000000000..1961791e22
--- /dev/null
+++ b/Marlin/src/HAL/STM32/MarlinSerial.cpp
@@ -0,0 +1,80 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#if defined(ARDUINO_ARCH_STM32) && !defined(STM32GENERIC)
+
+#include "../../inc/MarlinConfig.h"
+#include "MarlinSerial.h"
+
+#if ENABLED(EMERGENCY_PARSER)
+  #include "../../feature/e_parser.h"
+#endif
+
+#define DECLARE_SERIAL_PORT(ser_num) \
+  void _rx_complete_irq_ ## ser_num (serial_t * obj); \
+  MarlinSerial MSerial ## ser_num (USART ## ser_num, &_rx_complete_irq_ ## ser_num); \
+  void _rx_complete_irq_ ## ser_num (serial_t * obj) { MSerial ## ser_num ._rx_complete_irq(obj); }
+
+#define DECLARE_SERIAL_PORT_EXP(ser_num) DECLARE_SERIAL_PORT(ser_num)
+
+#if defined(SERIAL_PORT) && SERIAL_PORT >= 0
+  DECLARE_SERIAL_PORT_EXP(SERIAL_PORT)
+#endif
+
+#if defined(SERIAL_PORT_2) && SERIAL_PORT_2 >= 0
+  DECLARE_SERIAL_PORT_EXP(SERIAL_PORT_2)
+#endif
+
+#if defined(DGUS_SERIAL_PORT) && DGUS_SERIAL_PORT >= 0
+  DECLARE_SERIAL_PORT_EXP(DGUS_SERIAL_PORT)
+#endif
+
+void MarlinSerial::begin(unsigned long baud, uint8_t config) {
+  HardwareSerial::begin(baud, config);
+  // replace the IRQ callback with the one we have defined
+  #if ENABLED(EMERGENCY_PARSER)
+    _serial.rx_callback = _rx_callback;
+  #endif
+}
+
+// This function is Copyright (c) 2006 Nicholas Zambetti.
+void MarlinSerial::_rx_complete_irq(serial_t *obj) {
+  // No Parity error, read byte and store it in the buffer if there is room
+  unsigned char c;
+
+  if (uart_getc(obj, &c) == 0) {
+
+    rx_buffer_index_t i = (unsigned int)(obj->rx_head + 1) % SERIAL_RX_BUFFER_SIZE;
+
+    // if we should be storing the received character into the location
+    // just before the tail (meaning that the head would advance to the
+    // current location of the tail), we're about to overflow the buffer
+    // and so we don't write the character or advance the head.
+    if (i != obj->rx_tail) {
+      obj->rx_buff[obj->rx_head] = c;
+      obj->rx_head = i;
+    }
+
+    #if ENABLED(EMERGENCY_PARSER)
+      emergency_parser.update(emergency_state, c);
+    #endif
+  }
+}
+
+#endif // ARDUINO_ARCH_STM32 && !STM32GENERIC
