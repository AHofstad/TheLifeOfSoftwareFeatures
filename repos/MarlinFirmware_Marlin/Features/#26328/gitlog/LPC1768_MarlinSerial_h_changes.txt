commit b94a3354932dbcf6680e8d378219e9f41f29873e
Author: rondlh <77279634+rondlh@users.noreply.github.com>
Date:   Tue Dec 12 08:48:02 2023 +0800

    ‚ú® SERIAL_DMA (for some STM32Fx) (#26328)

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index 3e6848a1e3..2fadd8209b 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -30,16 +30,6 @@
 #endif
 #include "../../core/serial_hook.h"
 
-#ifndef SERIAL_PORT
-  #define SERIAL_PORT 0
-#endif
-#ifndef RX_BUFFER_SIZE
-  #define RX_BUFFER_SIZE 128
-#endif
-#ifndef TX_BUFFER_SIZE
-  #define TX_BUFFER_SIZE 32
-#endif
-
 class MarlinSerial : public HardwareSerial<RX_BUFFER_SIZE, TX_BUFFER_SIZE> {
 public:
   MarlinSerial(LPC_UART_TypeDef *UARTx) : HardwareSerial<RX_BUFFER_SIZE, TX_BUFFER_SIZE>(UARTx) { }

commit 3a457c9d13701428a4a276aaf43eb7961e9503a1
Author: tome9111991 <57866234+tome9111991@users.noreply.github.com>
Date:   Sun Sep 12 21:56:40 2021 +0200

    üêõ Fix JyersUI for LPC176x (#22745)
    
    Co-authored-by: Scott Lahteine <github@thinkyhead.com>

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index 808d19f8c5..3e6848a1e3 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -46,6 +46,8 @@ public:
 
   void end() {}
 
+  uint8_t availableForWrite(void) { /* flushTX(); */ return TX_BUFFER_SIZE; }
+
   #if ENABLED(EMERGENCY_PARSER)
     bool recv_callback(const char c) override;
   #endif

commit fccfcfbe5fc222bc53dd52f7a9effa8e305fafbf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed May 5 06:32:54 2021 -0500

    Cleanup, hex formatting, includes

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index 489bd8cc6c..808d19f8c5 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -60,8 +60,8 @@ extern MSerialT MSerial1;
 extern MSerialT MSerial2;
 extern MSerialT MSerial3;
 
-// Consequently, we can't use a RuntimeSerial either. The workaround would be to use a RuntimeSerial<ForwardSerial<MarlinSerial>> type here
-// Right now, let's ignore this until it's actually required.
+// Consequently, we can't use a RuntimeSerial either. The workaround would be to use
+// a RuntimeSerial<ForwardSerial<MarlinSerial>> type here. Ignore for now until it's actually required.
 #if ENABLED(SERIAL_RUNTIME_HOOK)
   #error "SERIAL_RUNTIME_HOOK is not yet supported for LPC176x."
 #endif

commit dbd28eecc9cd4b5954a4fd1ed0c02bd9788c279b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 10 12:05:05 2021 -0600

    Number serial from 1 to match settings

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index 35c9362b9f..489bd8cc6c 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -54,8 +54,8 @@ public:
 // On LPC176x framework, HardwareSerial does not implement the same interface as Arduino's Serial, so overloads
 // of 'available' and 'read' method are not used in this multiple inheritance scenario.
 // Instead, use a ForwardSerial here that adapts the interface.
-typedef ForwardSerial0Type<MarlinSerial> MSerialT;
-extern MSerialT MSerial;
+typedef ForwardSerial1Class<MarlinSerial> MSerialT;
+extern MSerialT MSerial0;
 extern MSerialT MSerial1;
 extern MSerialT MSerial2;
 extern MSerialT MSerial3;

commit f003e52009ba649f95463a115253d6dadcf361e6
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Thu Feb 25 08:23:29 2021 +0100

    Combined LPC / Serial fixes (#21178)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index de0f62f006..35c9362b9f 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -47,15 +47,21 @@ public:
   void end() {}
 
   #if ENABLED(EMERGENCY_PARSER)
-    bool recv_callback(const char c) override {
-      emergency_parser.update(static_cast<Serial0Type<MarlinSerial> *>(this)->emergency_state, c);
-      return true; // do not discard character
-    }
+    bool recv_callback(const char c) override;
   #endif
 };
 
-typedef Serial0Type<MarlinSerial> MSerialT;
+// On LPC176x framework, HardwareSerial does not implement the same interface as Arduino's Serial, so overloads
+// of 'available' and 'read' method are not used in this multiple inheritance scenario.
+// Instead, use a ForwardSerial here that adapts the interface.
+typedef ForwardSerial0Type<MarlinSerial> MSerialT;
 extern MSerialT MSerial;
 extern MSerialT MSerial1;
 extern MSerialT MSerial2;
 extern MSerialT MSerial3;
+
+// Consequently, we can't use a RuntimeSerial either. The workaround would be to use a RuntimeSerial<ForwardSerial<MarlinSerial>> type here
+// Right now, let's ignore this until it's actually required.
+#if ENABLED(SERIAL_RUNTIME_HOOK)
+  #error "SERIAL_RUNTIME_HOOK is not yet supported for LPC176x."
+#endif

commit 3f01b222b2b4f77cff66096dd5a18a64828e1fa4
Author: X-Ryl669 <boite.pour.spam@gmail.com>
Date:   Thu Jan 28 09:02:06 2021 +0100

    Refactor serial class with templates (#20783)

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index 8d6b64378a..de0f62f006 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -28,6 +28,7 @@
 #if ENABLED(EMERGENCY_PARSER)
   #include "../../feature/e_parser.h"
 #endif
+#include "../../core/serial_hook.h"
 
 #ifndef SERIAL_PORT
   #define SERIAL_PORT 0
@@ -41,27 +42,20 @@
 
 class MarlinSerial : public HardwareSerial<RX_BUFFER_SIZE, TX_BUFFER_SIZE> {
 public:
-  MarlinSerial(LPC_UART_TypeDef *UARTx) :
-    HardwareSerial<RX_BUFFER_SIZE, TX_BUFFER_SIZE>(UARTx)
-    #if ENABLED(EMERGENCY_PARSER)
-      , emergency_state(EmergencyParser::State::EP_RESET)
-    #endif
-    { }
+  MarlinSerial(LPC_UART_TypeDef *UARTx) : HardwareSerial<RX_BUFFER_SIZE, TX_BUFFER_SIZE>(UARTx) { }
 
   void end() {}
 
   #if ENABLED(EMERGENCY_PARSER)
     bool recv_callback(const char c) override {
-      emergency_parser.update(emergency_state, c);
+      emergency_parser.update(static_cast<Serial0Type<MarlinSerial> *>(this)->emergency_state, c);
       return true; // do not discard character
     }
-
-    EmergencyParser::State emergency_state;
-    static inline bool emergency_parser_enabled() { return true; }
   #endif
 };
 
-extern MarlinSerial MSerial;
-extern MarlinSerial MSerial1;
-extern MarlinSerial MSerial2;
-extern MarlinSerial MSerial3;
+typedef Serial0Type<MarlinSerial> MSerialT;
+extern MSerialT MSerial;
+extern MSerialT MSerial1;
+extern MSerialT MSerial2;
+extern MSerialT MSerial3;

commit da6c8317a7e7483fcb823c06f9cf953a764eacb0
Author: Jason Smith <jason.inet@gmail.com>
Date:   Thu Sep 24 18:28:48 2020 -0700

    Fix and improve STM32F1 serial (#19464)

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index 98ce73d377..8d6b64378a 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -57,6 +57,7 @@ public:
     }
 
     EmergencyParser::State emergency_state;
+    static inline bool emergency_parser_enabled() { return true; }
   #endif
 };
 

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index d9c6302072..98ce73d377 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit 6d90d1e1f552dca5e21bc61b676b8e8ce731b280
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 22 16:35:03 2020 -0500

    Apply TERN to compact code (#17619)

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
index b6bbf8e453..d9c6302072 100644
--- a/Marlin/src/HAL/LPC1768/MarlinSerial.h
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -44,10 +44,9 @@ public:
   MarlinSerial(LPC_UART_TypeDef *UARTx) :
     HardwareSerial<RX_BUFFER_SIZE, TX_BUFFER_SIZE>(UARTx)
     #if ENABLED(EMERGENCY_PARSER)
-       , emergency_state(EmergencyParser::State::EP_RESET)
+      , emergency_state(EmergencyParser::State::EP_RESET)
     #endif
-    {
-    }
+    { }
 
   void end() {}
 

commit 6bead0c1b04152f6a291d851f6cd4029fe0fc616
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 16:29:29 2020 -0500

    Shorter paths to HAL, ExtUI (#17156)

diff --git a/Marlin/src/HAL/LPC1768/MarlinSerial.h b/Marlin/src/HAL/LPC1768/MarlinSerial.h
new file mode 100644
index 0000000000..b6bbf8e453
--- /dev/null
+++ b/Marlin/src/HAL/LPC1768/MarlinSerial.h
@@ -0,0 +1,67 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+#pragma once
+
+#include <HardwareSerial.h>
+#include <WString.h>
+
+#include "../../inc/MarlinConfigPre.h"
+#if ENABLED(EMERGENCY_PARSER)
+  #include "../../feature/e_parser.h"
+#endif
+
+#ifndef SERIAL_PORT
+  #define SERIAL_PORT 0
+#endif
+#ifndef RX_BUFFER_SIZE
+  #define RX_BUFFER_SIZE 128
+#endif
+#ifndef TX_BUFFER_SIZE
+  #define TX_BUFFER_SIZE 32
+#endif
+
+class MarlinSerial : public HardwareSerial<RX_BUFFER_SIZE, TX_BUFFER_SIZE> {
+public:
+  MarlinSerial(LPC_UART_TypeDef *UARTx) :
+    HardwareSerial<RX_BUFFER_SIZE, TX_BUFFER_SIZE>(UARTx)
+    #if ENABLED(EMERGENCY_PARSER)
+       , emergency_state(EmergencyParser::State::EP_RESET)
+    #endif
+    {
+    }
+
+  void end() {}
+
+  #if ENABLED(EMERGENCY_PARSER)
+    bool recv_callback(const char c) override {
+      emergency_parser.update(emergency_state, c);
+      return true; // do not discard character
+    }
+
+    EmergencyParser::State emergency_state;
+  #endif
+};
+
+extern MarlinSerial MSerial;
+extern MarlinSerial MSerial1;
+extern MarlinSerial MSerial2;
+extern MarlinSerial MSerial3;
