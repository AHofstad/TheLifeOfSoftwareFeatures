commit 5639237e2b174715413f9ffc6f6421db9150d9d6
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jan 29 20:38:03 2024 -0600

    üé® Misc. cleanup 29-01

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 9181a5b9da..c2735d27b8 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -81,7 +81,6 @@
 #define REPORT_NAME_DIGITAL(COUNTER, NAME) _ADD_PIN(NAME, COUNTER, true)
 #define REPORT_NAME_ANALOG(COUNTER, NAME) _ADD_PIN(analogInputToDigitalPin(NAME), COUNTER, false)
 
-
 typedef struct {
   PGM_P const name;
   pin_t pin;

commit 2ef71c6ebaa1f1b496eb369879fe22c69cf9adb4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jun 12 16:38:14 2023 -0500

    ‚ôªÔ∏è Simplify SERIAL_ECHO (#25928)
    
    Since this increases AVR code size, try to optimize further.

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 4d51de52c8..9181a5b9da 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -177,11 +177,11 @@ const PinInfo pin_array[] PROGMEM = {
 bool pin_is_protected(const pin_t pin);
 
 static void print_input_or_output(const bool isout) {
-  SERIAL_ECHOF(isout ? F("Output ") : F("Input  "));
+  SERIAL_ECHO(isout ? F("Output ") : F("Input  "));
 }
 
 static void print_pin_state(const bool state) {
-  SERIAL_ECHOF(state ? F("HIGH") : F("LOW"));
+  SERIAL_ECHO(state ? F("HIGH") : F("LOW"));
 }
 
 // pretty report with PWM info
@@ -209,7 +209,7 @@ inline void report_pin_state_extended(const pin_t pin, const bool ignore, const
   for (uint8_t x = 0; x < COUNT(pin_array); ++x)  {    // scan entire array and report all instances of this pin
     if (GET_ARRAY_PIN(x) == pin) {
       if (!found) {    // report digital and analog pin number only on the first time through
-        if (start_string) SERIAL_ECHOF(start_string);
+        if (start_string) SERIAL_ECHO(start_string);
         SERIAL_ECHOPGM("PIN: ");
         PRINT_PIN(pin);
         print_port(pin);
@@ -257,7 +257,7 @@ inline void report_pin_state_extended(const pin_t pin, const bool ignore, const
   } // end of for loop
 
   if (!found) {
-    if (start_string) SERIAL_ECHOF(start_string);
+    if (start_string) SERIAL_ECHO(start_string);
     SERIAL_ECHOPGM("PIN: ");
     PRINT_PIN(pin);
     print_port(pin);

commit 86c811660ebf0b3fcbae2f34273d4c9d0c22abc4
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:30:34 2023 -0500

    üßë‚Äçüíª Remove LOOP macros (#25917)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index a342d546c4..4d51de52c8 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -206,7 +206,7 @@ inline void report_pin_state_extended(const pin_t pin, const bool ignore, const
     return true;
   };
 
-  LOOP_L_N(x, COUNT(pin_array))  {    // scan entire array and report all instances of this pin
+  for (uint8_t x = 0; x < COUNT(pin_array); ++x)  {    // scan entire array and report all instances of this pin
     if (GET_ARRAY_PIN(x) == pin) {
       if (!found) {    // report digital and analog pin number only on the first time through
         if (start_string) SERIAL_ECHOF(start_string);

commit 2691167afe02fbbe74b0fdca2c28a49fac635741
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 14:26:02 2023 -0500

    üßë‚Äçüíª Dump BOTH and EITHER macros (#25908)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 3219b1b7a2..a342d546c4 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -100,7 +100,7 @@ const PinInfo pin_array[] PROGMEM = {
    */
 
   #if SERIAL_IN_USE(0)
-    #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
+    #if ANY(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_0, 0, true },
       { TXD_NAME_0, 1, true },
     #elif AVR_ATmega1284_FAMILY
@@ -113,7 +113,7 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #if SERIAL_IN_USE(1)
-    #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
+    #if ANY(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_1, 19, true },
       { TXD_NAME_1, 18, true },
     #elif AVR_ATmega1284_FAMILY
@@ -131,7 +131,7 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #if SERIAL_IN_USE(2)
-    #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
+    #if ANY(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_2, 17, true },
       { TXD_NAME_2, 16, true },
     #elif defined(TARGET_LPC1768)
@@ -146,7 +146,7 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #if SERIAL_IN_USE(3)
-    #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
+    #if ANY(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_3, 15, true },
       { TXD_NAME_3, 14, true },
     #elif defined(TARGET_LPC1768)

commit 99e38c40be66e6e36d05580d80d1bcaf43f71ee6
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Mon May 15 17:24:36 2023 -0400

    ü©π Ensure pin_is_protected is defined (#25829)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index cce3799981..3219b1b7a2 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -174,6 +174,8 @@ const PinInfo pin_array[] PROGMEM = {
   #define M43_NEVER_TOUCH(Q) false
 #endif
 
+bool pin_is_protected(const pin_t pin);
+
 static void print_input_or_output(const bool isout) {
   SERIAL_ECHOF(isout ? F("Output ") : F("Input  "));
 }

commit d17d86d6a5a29e29e4d8e811d9bd6e6a030b7597
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun May 14 18:32:59 2023 -0500

    üßë‚Äçüíª M43 updates

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 4a8928c1e5..cce3799981 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -175,11 +175,15 @@ const PinInfo pin_array[] PROGMEM = {
 #endif
 
 static void print_input_or_output(const bool isout) {
-  SERIAL_ECHOPGM_P(isout ? PSTR("Output = ") : PSTR("Input  = "));
+  SERIAL_ECHOF(isout ? F("Output ") : F("Input  "));
+}
+
+static void print_pin_state(const bool state) {
+  SERIAL_ECHOF(state ? F("HIGH") : F("LOW"));
 }
 
 // pretty report with PWM info
-inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool extended=false, FSTR_P const start_string=nullptr) {
+inline void report_pin_state_extended(const pin_t pin, const bool ignore, const bool extended=false, FSTR_P const start_string=nullptr) {
   char buffer[MAX_NAME_LENGTH + 1];   // for the sprintf statements
   bool found = false, multi_name_pin = false;
 
@@ -188,12 +192,12 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
       // Use FastIO for pins Teensy doesn't expose
       if (pin == 46) {
         print_input_or_output(IS_OUTPUT(46));
-        SERIAL_CHAR('0' + READ(46));
+        print_pin_state(READ(46));
         return false;
       }
       else if (pin == 47) {
         print_input_or_output(IS_OUTPUT(47));
-        SERIAL_CHAR('0' + READ(47));
+        print_pin_state(READ(47));
         return false;
       }
     #endif
@@ -230,14 +234,14 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
                                                // because this could interfere with inductive/capacitive
                                                // sensors (high impedance voltage divider) and with Pt100 amplifier
                 print_input_or_output(false);
-                SERIAL_ECHO(digitalRead_mod(pin));
+                print_pin_state(digitalRead_mod(pin));
               }
               else if (pwm_status(pin)) {
                 // do nothing
               }
               else {
                 print_input_or_output(true);
-                SERIAL_ECHO(digitalRead_mod(pin));
+                print_pin_state(digitalRead_mod(pin));
               }
             }
             if (!multi_name_pin && extended) pwm_details(pin);  // report PWM capabilities only on the first pass & only if doing an extended report
@@ -267,7 +271,7 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
         else if (GET_PINMODE(pin)) {
           SERIAL_ECHO_SP(MAX_NAME_LENGTH - 16);
           print_input_or_output(true);
-          SERIAL_ECHO(digitalRead_mod(pin));
+          print_pin_state(digitalRead_mod(pin));
         }
         else {
           if (IS_ANALOG(pin)) {
@@ -279,7 +283,7 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
           SERIAL_ECHO_SP(MAX_NAME_LENGTH - 16);   // add padding if not an analog pin
 
           print_input_or_output(false);
-          SERIAL_ECHO(digitalRead_mod(pin));
+          print_pin_state(digitalRead_mod(pin));
         }
         //if (!pwm_status(pin)) SERIAL_CHAR(' ');    // add padding if it's not a PWM pin
         if (extended) {

commit 4e1bfc4e0de1cbb09cdca0c2d72d92381688e108
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 23 09:31:38 2022 -0500

    üé® Misc. tweaks to HALs

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 25b883eee6..4a8928c1e5 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -206,7 +206,7 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
         if (start_string) SERIAL_ECHOF(start_string);
         SERIAL_ECHOPGM("PIN: ");
         PRINT_PIN(pin);
-        PRINT_PORT(pin);
+        print_port(pin);
         if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) PRINT_PIN_ANALOG(pin); // analog pin number
         else SERIAL_ECHO_SP(8);                                                 // add padding if not an analog pin
       }
@@ -254,7 +254,7 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
     if (start_string) SERIAL_ECHOF(start_string);
     SERIAL_ECHOPGM("PIN: ");
     PRINT_PIN(pin);
-    PRINT_PORT(pin);
+    print_port(pin);
     if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) PRINT_PIN_ANALOG(pin); // analog pin number
     else SERIAL_ECHO_SP(8);                                                 // add padding if not an analog pin
     SERIAL_ECHOPGM("<unused/unknown>");

commit d364babbc0cdb73337d86e2c4fd9170b46b7361a
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Apr 26 14:29:21 2023 -0500

    üßë‚Äçüíª Change HAL_PATH macro for easier HAL relocation (#25743)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 5b19ff1b2d..25b883eee6 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -168,7 +168,7 @@ const PinInfo pin_array[] PROGMEM = {
 
 };
 
-#include HAL_PATH(../HAL, pinsDebug.h)  // get the correct support file for this CPU
+#include HAL_PATH(.., pinsDebug.h)  // get the correct support file for this CPU
 
 #ifndef M43_NEVER_TOUCH
   #define M43_NEVER_TOUCH(Q) false

commit 81976c43609863d73b28d8af656802214e677557
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 17 23:00:26 2022 -0500

    üßë‚Äçüíª Pins and debug list cleanup (#24878)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index b938496915..5b19ff1b2d 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -45,7 +45,7 @@
 #define REPORT_NAME_ANALOG(COUNTER, NAME) _ADD_PIN(#NAME, COUNTER)
 
 #include "pinsDebug_list.h"
-#line 48
+#line 49
 
 // manually add pins that have names that are macros which don't play well with these macros
 #if ANY(AVR_ATmega2560_FAMILY, AVR_ATmega1284_FAMILY, ARDUINO_ARCH_SAM, TARGET_LPC1768)
@@ -164,7 +164,7 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #include "pinsDebug_list.h"
-  #line 167
+  #line 168
 
 };
 

commit e298266eff9a53dd0bdddf5488135681d09baa77
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Oct 17 21:41:22 2022 -0500

    üé® CONF_SERIAL_IS => SERIAL_IN_USE

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index b662f09ba9..b938496915 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -49,19 +49,19 @@
 
 // manually add pins that have names that are macros which don't play well with these macros
 #if ANY(AVR_ATmega2560_FAMILY, AVR_ATmega1284_FAMILY, ARDUINO_ARCH_SAM, TARGET_LPC1768)
-  #if CONF_SERIAL_IS(0)
+  #if SERIAL_IN_USE(0)
     static const char RXD_NAME_0[] PROGMEM = { "RXD0" };
     static const char TXD_NAME_0[] PROGMEM = { "TXD0" };
   #endif
-  #if CONF_SERIAL_IS(1)
+  #if SERIAL_IN_USE(1)
     static const char RXD_NAME_1[] PROGMEM = { "RXD1" };
     static const char TXD_NAME_1[] PROGMEM = { "TXD1" };
   #endif
-  #if CONF_SERIAL_IS(2)
+  #if SERIAL_IN_USE(2)
     static const char RXD_NAME_2[] PROGMEM = { "RXD2" };
     static const char TXD_NAME_2[] PROGMEM = { "TXD2" };
   #endif
-  #if CONF_SERIAL_IS(3)
+  #if SERIAL_IN_USE(3)
     static const char RXD_NAME_3[] PROGMEM = { "RXD3" };
     static const char TXD_NAME_3[] PROGMEM = { "TXD3" };
   #endif
@@ -99,7 +99,7 @@ const PinInfo pin_array[] PROGMEM = {
    *     2 bytes containing the digital/analog bool flag
    */
 
-  #if CONF_SERIAL_IS(0)
+  #if SERIAL_IN_USE(0)
     #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_0, 0, true },
       { TXD_NAME_0, 1, true },
@@ -112,7 +112,7 @@ const PinInfo pin_array[] PROGMEM = {
     #endif
   #endif
 
-  #if CONF_SERIAL_IS(1)
+  #if SERIAL_IN_USE(1)
     #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_1, 19, true },
       { TXD_NAME_1, 18, true },
@@ -130,7 +130,7 @@ const PinInfo pin_array[] PROGMEM = {
     #endif
   #endif
 
-  #if CONF_SERIAL_IS(2)
+  #if SERIAL_IN_USE(2)
     #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_2, 17, true },
       { TXD_NAME_2, 16, true },
@@ -145,7 +145,7 @@ const PinInfo pin_array[] PROGMEM = {
     #endif
   #endif
 
-  #if CONF_SERIAL_IS(3)
+  #if SERIAL_IN_USE(3)
     #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_3, 15, true },
       { TXD_NAME_3, 14, true },

commit 6b47db3a68668022aa096d6983c89df3f926dc30
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 22 20:34:00 2022 -0500

    üé® General cleanup, comments

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index e5db7f7b54..b662f09ba9 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -19,6 +19,7 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
+#pragma once
 
 #include "../inc/MarlinConfig.h"
 

commit 1dafd1887e40399faf16e3455e3670ed3acfac52
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Sep 27 13:46:42 2021 -0500

    üé® Apply F() to various reports

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index b384342335..e5db7f7b54 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -178,7 +178,7 @@ static void print_input_or_output(const bool isout) {
 }
 
 // pretty report with PWM info
-inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool extended=false, PGM_P const start_string=nullptr) {
+inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool extended=false, FSTR_P const start_string=nullptr) {
   char buffer[MAX_NAME_LENGTH + 1];   // for the sprintf statements
   bool found = false, multi_name_pin = false;
 
@@ -202,7 +202,7 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
   LOOP_L_N(x, COUNT(pin_array))  {    // scan entire array and report all instances of this pin
     if (GET_ARRAY_PIN(x) == pin) {
       if (!found) {    // report digital and analog pin number only on the first time through
-        if (start_string) SERIAL_ECHOPGM_P(start_string);
+        if (start_string) SERIAL_ECHOF(start_string);
         SERIAL_ECHOPGM("PIN: ");
         PRINT_PIN(pin);
         PRINT_PORT(pin);
@@ -211,7 +211,7 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
       }
       else {
         SERIAL_CHAR('.');
-        SERIAL_ECHO_SP(MULTI_NAME_PAD + (start_string ? strlen_P(start_string) : 0));  // add padding if not the first instance found
+        SERIAL_ECHO_SP(MULTI_NAME_PAD + (start_string ? strlen_P(FTOP(start_string)) : 0));  // add padding if not the first instance found
       }
       PRINT_ARRAY_NAME(x);
       if (extended) {
@@ -250,7 +250,7 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
   } // end of for loop
 
   if (!found) {
-    if (start_string) SERIAL_ECHOPGM_P(start_string);
+    if (start_string) SERIAL_ECHOF(start_string);
     SERIAL_ECHOPGM("PIN: ");
     PRINT_PIN(pin);
     PRINT_PORT(pin);

commit 323b38ee88dbf2a4691a20439dbb95a824822199
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 16 04:36:26 2021 -0500

    üí° Adjust headers, formatting

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index e29067268d..b384342335 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -2,6 +2,9 @@
  * Marlin 3D Printer Firmware
  * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
@@ -41,7 +44,7 @@
 #define REPORT_NAME_ANALOG(COUNTER, NAME) _ADD_PIN(#NAME, COUNTER)
 
 #include "pinsDebug_list.h"
-#line 45
+#line 48
 
 // manually add pins that have names that are macros which don't play well with these macros
 #if ANY(AVR_ATmega2560_FAMILY, AVR_ATmega1284_FAMILY, ARDUINO_ARCH_SAM, TARGET_LPC1768)
@@ -160,7 +163,7 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #include "pinsDebug_list.h"
-  #line 164
+  #line 167
 
 };
 

commit 104de60d0bbad1233455591842bc67cb4f006f30
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Sun Aug 22 22:47:37 2021 +0100

    üêõ Fix LPC176x M43 Pins Debugging (#22611)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 0c55232969..e29067268d 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -203,11 +203,8 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
         SERIAL_ECHOPGM("PIN: ");
         PRINT_PIN(pin);
         PRINT_PORT(pin);
-        if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) {
-          sprintf_P(buffer, PSTR(" (A%2d)  "), DIGITAL_PIN_TO_ANALOG_PIN(pin));    // analog pin number
-          SERIAL_ECHO(buffer);
-        }
-        else SERIAL_ECHO_SP(8);   // add padding if not an analog pin
+        if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) PRINT_PIN_ANALOG(pin); // analog pin number
+        else SERIAL_ECHO_SP(8);                                                 // add padding if not an analog pin
       }
       else {
         SERIAL_CHAR('.');
@@ -254,12 +251,8 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
     SERIAL_ECHOPGM("PIN: ");
     PRINT_PIN(pin);
     PRINT_PORT(pin);
-    if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) {
-      sprintf_P(buffer, PSTR(" (A%2d)  "), DIGITAL_PIN_TO_ANALOG_PIN(pin));    // analog pin number
-      SERIAL_ECHO(buffer);
-    }
-    else
-      SERIAL_ECHO_SP(8);   // add padding if not an analog pin
+    if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) PRINT_PIN_ANALOG(pin); // analog pin number
+    else SERIAL_ECHO_SP(8);                                                 // add padding if not an analog pin
     SERIAL_ECHOPGM("<unused/unknown>");
     if (extended) {
 

commit be6fbc76a1ab1618421315958480f6a1d6093533
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu May 6 22:39:34 2021 -0500

    Serial and pins debug cleanup
    
    - Rename some AVR / DUE / ESP32 serial types
    - Reduce two #error to one static_assert
    - Update AVR/DUE error messages

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 72e31b7b25..0c55232969 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -45,34 +45,22 @@
 
 // manually add pins that have names that are macros which don't play well with these macros
 #if ANY(AVR_ATmega2560_FAMILY, AVR_ATmega1284_FAMILY, ARDUINO_ARCH_SAM, TARGET_LPC1768)
-  #if SERIAL_PORT == 0
+  #if CONF_SERIAL_IS(0)
     static const char RXD_NAME_0[] PROGMEM = { "RXD0" };
     static const char TXD_NAME_0[] PROGMEM = { "TXD0" };
-  #elif SERIAL_PORT == 1
+  #endif
+  #if CONF_SERIAL_IS(1)
     static const char RXD_NAME_1[] PROGMEM = { "RXD1" };
     static const char TXD_NAME_1[] PROGMEM = { "TXD1" };
-  #elif SERIAL_PORT == 2
+  #endif
+  #if CONF_SERIAL_IS(2)
     static const char RXD_NAME_2[] PROGMEM = { "RXD2" };
     static const char TXD_NAME_2[] PROGMEM = { "TXD2" };
-  #elif SERIAL_PORT == 3
+  #endif
+  #if CONF_SERIAL_IS(3)
     static const char RXD_NAME_3[] PROGMEM = { "RXD3" };
     static const char TXD_NAME_3[] PROGMEM = { "TXD3" };
   #endif
-  #ifdef SERIAL_PORT_2
-    #if SERIAL_PORT_2 == 0
-      static const char RXD_NAME_0[] PROGMEM = { "RXD0" };
-      static const char TXD_NAME_0[] PROGMEM = { "TXD0" };
-    #elif SERIAL_PORT_2 == 1
-      static const char RXD_NAME_1[] PROGMEM = { "RXD1" };
-      static const char TXD_NAME_1[] PROGMEM = { "TXD1" };
-    #elif SERIAL_PORT_2 == 2
-      static const char RXD_NAME_2[] PROGMEM = { "RXD2" };
-      static const char TXD_NAME_2[] PROGMEM = { "TXD2" };
-    #elif SERIAL_PORT_2 == 3
-      static const char RXD_NAME_3[] PROGMEM = { "RXD3" };
-      static const char TXD_NAME_3[] PROGMEM = { "TXD3" };
-    #endif
-  #endif
 #endif
 
 /////////////////////////////////////////////////////////////////////////////
@@ -103,12 +91,11 @@ const PinInfo pin_array[] PROGMEM = {
    *  Each entry takes up 6 bytes in FLASH:
    *     2 byte pointer to location of the name string
    *     2 bytes containing the pin number
-   *         analog pin numbers were convereted to digital when the array was created
+   *         analog pin numbers were converted to digital when the array was created
    *     2 bytes containing the digital/analog bool flag
    */
 
-  // manually add pins ...
-  #if SERIAL_PORT == 0
+  #if CONF_SERIAL_IS(0)
     #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_0, 0, true },
       { TXD_NAME_0, 1, true },
@@ -119,7 +106,9 @@ const PinInfo pin_array[] PROGMEM = {
       { RXD_NAME_0, 3, true },
       { TXD_NAME_0, 2, true },
     #endif
-  #elif SERIAL_PORT == 1
+  #endif
+
+  #if CONF_SERIAL_IS(1)
     #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_1, 19, true },
       { TXD_NAME_1, 18, true },
@@ -135,7 +124,9 @@ const PinInfo pin_array[] PROGMEM = {
         { TXD_NAME_1, 15, true },
       #endif
     #endif
-  #elif SERIAL_PORT == 2
+  #endif
+
+  #if CONF_SERIAL_IS(2)
     #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_2, 17, true },
       { TXD_NAME_2, 16, true },
@@ -148,7 +139,9 @@ const PinInfo pin_array[] PROGMEM = {
         { TXD_NAME_2, 10, true },
       #endif
     #endif
-  #elif SERIAL_PORT == 3
+  #endif
+
+  #if CONF_SERIAL_IS(3)
     #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_3, 15, true },
       { TXD_NAME_3, 14, true },
@@ -166,68 +159,8 @@ const PinInfo pin_array[] PROGMEM = {
     #endif
   #endif
 
-  #ifdef SERIAL_PORT_2
-    #if SERIAL_PORT_2 == 0
-      #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
-        { RXD_NAME_0, 0, true },
-        { TXD_NAME_0, 1, true },
-      #elif AVR_ATmega1284_FAMILY
-        { RXD_NAME_0, 8, true },
-        { TXD_NAME_0, 9, true },
-      #elif defined(TARGET_LPC1768)           // TX P0_02  RX P0_03
-        { RXD_NAME_0, 3, true },
-        { TXD_NAME_0, 2, true },
-      #endif
-    #elif SERIAL_PORT_2 == 1
-      #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
-        { RXD_NAME_1, 19, true },
-        { TXD_NAME_1, 18, true },
-      #elif AVR_ATmega1284_FAMILY
-        { RXD_NAME_1, 10, true },
-        { TXD_NAME_1, 11, true },
-      #elif defined(TARGET_LPC1768)
-        #ifdef LPC_PINCFG_UART1_P2_00         // TX P2_00  RX P2_01
-          { RXD_NAME_1, 0x41, true },
-          { TXD_NAME_1, 0x40, true },
-        #else                                 // TX P0_15  RX P0_16
-          { RXD_NAME_1, 16, true },
-          { TXD_NAME_1, 15, true },
-        #endif
-      #endif
-    #elif SERIAL_PORT_2 == 2
-      #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
-        { RXD_NAME_2, 17, true },
-        { TXD_NAME_2, 16, true },
-      #elif defined(TARGET_LPC1768)
-        #ifdef LPC_PINCFG_UART2_P2_08         // TX P2_08  RX P2_09
-          { RXD_NAME_2, 0x49, true },
-          { TXD_NAME_2, 0x48, true },
-        #else                                 // TX P0_10  RX P0_11
-          { RXD_NAME_2, 11, true },
-          { TXD_NAME_2, 10, true },
-        #endif
-      #endif
-    #elif SERIAL_PORT_2 == 3
-      #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
-        { RXD_NAME_3, 15, true },
-        { TXD_NAME_3, 14, true },
-      #elif defined(TARGET_LPC1768)
-        #ifdef LPC_PINCFG_UART3_P0_25         // TX P0_25  RX P0_26
-          { RXD_NAME_3, 0x1A, true },
-          { TXD_NAME_3, 0x19, true },
-        #elif defined(LPC_PINCFG_UART3_P4_28) // TX P4_28  RX P4_29
-          { RXD_NAME_3, 0x9D, true },
-          { TXD_NAME_3, 0x9C, true },
-        #else                                 // TX P0_00  RX P0_01
-          { RXD_NAME_3, 1, true },
-          { TXD_NAME_3, 0, true },
-        #endif
-      #endif
-    #endif
-  #endif
-
   #include "pinsDebug_list.h"
-  #line 231
+  #line 164
 
 };
 

commit 3ea56ba4c72fb1e9c4bb4a896b8cf87361a48f4b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 5 04:30:52 2021 -0600

    Tweak tests, consolidate pins target validation (#21254)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index e2e56081b7..72e31b7b25 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -41,7 +41,7 @@
 #define REPORT_NAME_ANALOG(COUNTER, NAME) _ADD_PIN(#NAME, COUNTER)
 
 #include "pinsDebug_list.h"
-#line 46
+#line 45
 
 // manually add pins that have names that are macros which don't play well with these macros
 #if ANY(AVR_ATmega2560_FAMILY, AVR_ATmega1284_FAMILY, ARDUINO_ARCH_SAM, TARGET_LPC1768)
@@ -227,7 +227,7 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #include "pinsDebug_list.h"
-  #line 172
+  #line 231
 
 };
 

commit dd42831cba7334c5d106ba435bdb41b6135971bb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Feb 28 19:43:46 2021 -0600

    Serial macros cleanup

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 5f153cfa2b..e2e56081b7 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -238,7 +238,7 @@ const PinInfo pin_array[] PROGMEM = {
 #endif
 
 static void print_input_or_output(const bool isout) {
-  serialprintPGM(isout ? PSTR("Output = ") : PSTR("Input  = "));
+  SERIAL_ECHOPGM_P(isout ? PSTR("Output = ") : PSTR("Input  = "));
 }
 
 // pretty report with PWM info
@@ -266,8 +266,8 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
   LOOP_L_N(x, COUNT(pin_array))  {    // scan entire array and report all instances of this pin
     if (GET_ARRAY_PIN(x) == pin) {
       if (!found) {    // report digital and analog pin number only on the first time through
-        if (start_string) serialprintPGM(start_string);
-        serialprintPGM(PSTR("PIN: "));
+        if (start_string) SERIAL_ECHOPGM_P(start_string);
+        SERIAL_ECHOPGM("PIN: ");
         PRINT_PIN(pin);
         PRINT_PORT(pin);
         if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) {
@@ -317,8 +317,8 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
   } // end of for loop
 
   if (!found) {
-    if (start_string) serialprintPGM(start_string);
-    serialprintPGM(PSTR("PIN: "));
+    if (start_string) SERIAL_ECHOPGM_P(start_string);
+    SERIAL_ECHOPGM("PIN: ");
     PRINT_PIN(pin);
     PRINT_PORT(pin);
     if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) {

commit 4424645e04c9e75462d36de8f7a82e67cc9c262e
Author: qwewer0 <57561110+qwewer0@users.noreply.github.com>
Date:   Mon Sep 28 21:53:50 2020 +0200

    Multi-line comments cleanup (#19535)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 06a8144291..5f153cfa2b 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -31,7 +31,6 @@
  *
  *  Both passes use the same pin list.  The list contains two macro names. The
  *  actual macro definitions are changed depending on which pass is being done.
- *
  */
 
 // first pass - put the name strings into FLASH

commit 6634bedb258eb3ee7f59c3351f8472d32b323af8
Author: ellensp <ellensp@hotmail.com>
Date:   Thu Sep 24 09:03:07 2020 +1200

    Define UART pins for LPC debug based on LPC_PINCFG_UART (#19475)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 0766d818e7..06a8144291 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -45,7 +45,7 @@
 #line 46
 
 // manually add pins that have names that are macros which don't play well with these macros
-#if (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY || defined(ARDUINO_ARCH_SAM) || defined(TARGET_LPC1768))
+#if ANY(AVR_ATmega2560_FAMILY, AVR_ATmega1284_FAMILY, ARDUINO_ARCH_SAM, TARGET_LPC1768)
   #if SERIAL_PORT == 0
     static const char RXD_NAME_0[] PROGMEM = { "RXD0" };
     static const char TXD_NAME_0[] PROGMEM = { "TXD0" };
@@ -110,83 +110,119 @@ const PinInfo pin_array[] PROGMEM = {
 
   // manually add pins ...
   #if SERIAL_PORT == 0
-    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+    #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_0, 0, true },
       { TXD_NAME_0, 1, true },
     #elif AVR_ATmega1284_FAMILY
       { RXD_NAME_0, 8, true },
       { TXD_NAME_0, 9, true },
-    #elif defined(TARGET_LPC1768)
+    #elif defined(TARGET_LPC1768)           // TX P0_02  RX P0_03
       { RXD_NAME_0, 3, true },
       { TXD_NAME_0, 2, true },
     #endif
   #elif SERIAL_PORT == 1
-    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+    #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_1, 19, true },
       { TXD_NAME_1, 18, true },
     #elif AVR_ATmega1284_FAMILY
       { RXD_NAME_1, 10, true },
       { TXD_NAME_1, 11, true },
     #elif defined(TARGET_LPC1768)
-      { RXD_NAME_1, 16, true },
-      { TXD_NAME_1, 15, true },
+      #ifdef LPC_PINCFG_UART1_P2_00         // TX P2_00  RX P2_01
+        { RXD_NAME_1, 0x41, true },
+        { TXD_NAME_1, 0x40, true },
+      #else                                 // TX P0_15  RX P0_16
+        { RXD_NAME_1, 16, true },
+        { TXD_NAME_1, 15, true },
+      #endif
     #endif
   #elif SERIAL_PORT == 2
-    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+    #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_2, 17, true },
       { TXD_NAME_2, 16, true },
     #elif defined(TARGET_LPC1768)
-      { RXD_NAME_2, 11, true },
-      { TXD_NAME_2, 10, true },
+      #ifdef LPC_PINCFG_UART2_P2_08         // TX P2_08  RX P2_09
+        { RXD_NAME_2, 0x49, true },
+        { TXD_NAME_2, 0x48, true },
+      #else                                 // TX P0_10  RX P0_11
+        { RXD_NAME_2, 11, true },
+        { TXD_NAME_2, 10, true },
+      #endif
     #endif
   #elif SERIAL_PORT == 3
-    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+    #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
       { RXD_NAME_3, 15, true },
       { TXD_NAME_3, 14, true },
     #elif defined(TARGET_LPC1768)
-      { RXD_NAME_3, 1, true },
-      { TXD_NAME_3, 0, true },
+      #ifdef LPC_PINCFG_UART3_P0_25         // TX P0_25  RX P0_26
+        { RXD_NAME_3, 0x1A, true },
+        { TXD_NAME_3, 0x19, true },
+      #elif defined(LPC_PINCFG_UART3_P4_28) // TX P4_28  RX P4_29
+        { RXD_NAME_3, 0x9D, true },
+        { TXD_NAME_3, 0x9C, true },
+      #else                                 // TX P0_00  RX P0_01
+        { RXD_NAME_3, 1, true },
+        { TXD_NAME_3, 0, true },
+      #endif
     #endif
   #endif
 
   #ifdef SERIAL_PORT_2
     #if SERIAL_PORT_2 == 0
-      #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
         { RXD_NAME_0, 0, true },
         { TXD_NAME_0, 1, true },
       #elif AVR_ATmega1284_FAMILY
         { RXD_NAME_0, 8, true },
         { TXD_NAME_0, 9, true },
-      #elif defined(TARGET_LPC1768)
+      #elif defined(TARGET_LPC1768)           // TX P0_02  RX P0_03
         { RXD_NAME_0, 3, true },
         { TXD_NAME_0, 2, true },
       #endif
     #elif SERIAL_PORT_2 == 1
-      #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
         { RXD_NAME_1, 19, true },
         { TXD_NAME_1, 18, true },
       #elif AVR_ATmega1284_FAMILY
         { RXD_NAME_1, 10, true },
         { TXD_NAME_1, 11, true },
       #elif defined(TARGET_LPC1768)
-        { RXD_NAME_1, 16, true },
-        { TXD_NAME_1, 15, true },
+        #ifdef LPC_PINCFG_UART1_P2_00         // TX P2_00  RX P2_01
+          { RXD_NAME_1, 0x41, true },
+          { TXD_NAME_1, 0x40, true },
+        #else                                 // TX P0_15  RX P0_16
+          { RXD_NAME_1, 16, true },
+          { TXD_NAME_1, 15, true },
+        #endif
       #endif
     #elif SERIAL_PORT_2 == 2
-      #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
         { RXD_NAME_2, 17, true },
         { TXD_NAME_2, 16, true },
       #elif defined(TARGET_LPC1768)
-        { RXD_NAME_2, 11, true },
-        { TXD_NAME_2, 10, true },
+        #ifdef LPC_PINCFG_UART2_P2_08         // TX P2_08  RX P2_09
+          { RXD_NAME_2, 0x49, true },
+          { TXD_NAME_2, 0x48, true },
+        #else                                 // TX P0_10  RX P0_11
+          { RXD_NAME_2, 11, true },
+          { TXD_NAME_2, 10, true },
+        #endif
       #endif
     #elif SERIAL_PORT_2 == 3
-      #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      #if EITHER(AVR_ATmega2560_FAMILY, ARDUINO_ARCH_SAM)
         { RXD_NAME_3, 15, true },
         { TXD_NAME_3, 14, true },
       #elif defined(TARGET_LPC1768)
-        { RXD_NAME_3, 1, true },
-        { TXD_NAME_3, 0, true },
+        #ifdef LPC_PINCFG_UART3_P0_25         // TX P0_25  RX P0_26
+          { RXD_NAME_3, 0x1A, true },
+          { TXD_NAME_3, 0x19, true },
+        #elif defined(LPC_PINCFG_UART3_P4_28) // TX P4_28  RX P4_29
+          { RXD_NAME_3, 0x9D, true },
+          { TXD_NAME_3, 0x9C, true },
+        #else                                 // TX P0_00  RX P0_01
+          { RXD_NAME_3, 1, true },
+          { TXD_NAME_3, 0, true },
+        #endif
       #endif
     #endif
   #endif

commit 42fbd527f3bcc317ae6851aca5a45bdbf979de55
Author: Diego von Deschwanden <68632259+Diegovd@users.noreply.github.com>
Date:   Thu Jul 23 05:20:14 2020 +0200

    Fix links to secure sites (#18745)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index c08acd3836..0766d818e7 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -13,7 +13,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit 118bd2f8b2a1f81884cb55a8fc00b708a51aa15b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Mar 13 23:18:16 2020 -0500

    Apply loop shorthand macros (#17159)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index a2f2cd455f..c08acd3836 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -228,7 +228,7 @@ inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool e
     return true;
   };
 
-  for (uint8_t x = 0; x < COUNT(pin_array); x++)  {    // scan entire array and report all instances of this pin
+  LOOP_L_N(x, COUNT(pin_array))  {    // scan entire array and report all instances of this pin
     if (GET_ARRAY_PIN(x) == pin) {
       if (!found) {    // report digital and analog pin number only on the first time through
         if (start_string) serialprintPGM(start_string);

commit e9f451bffece18ac90b7c34e3b06e3cdace57911
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Mar 6 21:59:11 2020 -0600

    Pins debug followup

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 7fb9e808be..a2f2cd455f 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -207,7 +207,7 @@ static void print_input_or_output(const bool isout) {
 }
 
 // pretty report with PWM info
-inline void report_pin_state_extended(const pin_t pin, const bool ignore, const bool extended=false, PGM_P const start_string=nullptr) {
+inline void report_pin_state_extended(pin_t pin, const bool ignore, const bool extended=false, PGM_P const start_string=nullptr) {
   char buffer[MAX_NAME_LENGTH + 1];   // for the sprintf statements
   bool found = false, multi_name_pin = false;
 

commit ca4423ed2a8188bcd671ef59c25765e44e67fbcf
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Mar 5 17:56:17 2020 -0600

    Clean up pins debugging

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index f247c7cacf..7fb9e808be 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -207,17 +207,32 @@ static void print_input_or_output(const bool isout) {
 }
 
 // pretty report with PWM info
-inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = false, const char *start_string = "") {
+inline void report_pin_state_extended(const pin_t pin, const bool ignore, const bool extended=false, PGM_P const start_string=nullptr) {
   char buffer[MAX_NAME_LENGTH + 1];   // for the sprintf statements
   bool found = false, multi_name_pin = false;
 
+  auto alt_pin_echo = [](const pin_t &pin) {
+    #if AVR_AT90USB1286_FAMILY
+      // Use FastIO for pins Teensy doesn't expose
+      if (pin == 46) {
+        print_input_or_output(IS_OUTPUT(46));
+        SERIAL_CHAR('0' + READ(46));
+        return false;
+      }
+      else if (pin == 47) {
+        print_input_or_output(IS_OUTPUT(47));
+        SERIAL_CHAR('0' + READ(47));
+        return false;
+      }
+    #endif
+    return true;
+  };
+
   for (uint8_t x = 0; x < COUNT(pin_array); x++)  {    // scan entire array and report all instances of this pin
     if (GET_ARRAY_PIN(x) == pin) {
-      if (found) multi_name_pin = true;
-      found = true;
-      if (!multi_name_pin) {    // report digital and analog pin number only on the first time through
-        sprintf_P(buffer, PSTR("%sPIN: "), start_string);     // digital pin number
-        SERIAL_ECHO(buffer);
+      if (!found) {    // report digital and analog pin number only on the first time through
+        if (start_string) serialprintPGM(start_string);
+        serialprintPGM(PSTR("PIN: "));
         PRINT_PIN(pin);
         PRINT_PORT(pin);
         if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) {
@@ -228,27 +243,14 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
       }
       else {
         SERIAL_CHAR('.');
-        SERIAL_ECHO_SP(MULTI_NAME_PAD + strlen(start_string));  // add padding if not the first instance found
+        SERIAL_ECHO_SP(MULTI_NAME_PAD + (start_string ? strlen_P(start_string) : 0));  // add padding if not the first instance found
       }
       PRINT_ARRAY_NAME(x);
       if (extended) {
         if (pin_is_protected(pin) && !ignore)
           SERIAL_ECHOPGM("protected ");
         else {
-          #if AVR_AT90USB1286_FAMILY //Teensy IDEs don't know about these pins so must use FASTIO
-            if (pin == 46 || pin == 47) {
-              if (pin == 46) {
-                print_input_or_output(IS_OUTPUT(46));
-                SERIAL_CHAR('0' + READ(46));
-              }
-              else if (pin == 47) {
-                print_input_or_output(IS_OUTPUT(47));
-                SERIAL_CHAR('0' + READ(47));
-              }
-            }
-            else
-          #endif
-          {
+          if (alt_pin_echo(pin)) {
             if (!GET_ARRAY_IS_DIGITAL(x)) {
               sprintf_P(buffer, PSTR("Analog in = %5ld"), (long)analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
               SERIAL_ECHO(buffer);
@@ -274,12 +276,14 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
         }
       }
       SERIAL_EOL();
+      multi_name_pin = found;
+      found = true;
     }  // end of IF
   } // end of for loop
 
   if (!found) {
-    sprintf_P(buffer, PSTR("%sPIN: "), start_string);
-    SERIAL_ECHO(buffer);
+    if (start_string) serialprintPGM(start_string);
+    serialprintPGM(PSTR("PIN: "));
     PRINT_PIN(pin);
     PRINT_PORT(pin);
     if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) {
@@ -290,21 +294,8 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
       SERIAL_ECHO_SP(8);   // add padding if not an analog pin
     SERIAL_ECHOPGM("<unused/unknown>");
     if (extended) {
-      #if AVR_AT90USB1286_FAMILY  //Teensy IDEs don't know about these pins so must use FASTIO
-        if (pin == 46 || pin == 47) {
-          SERIAL_ECHO_SP(12);
-          if (pin == 46) {
-            print_input_or_output(IS_OUTPUT(46));
-            SERIAL_CHAR('0' + READ(46));
-          }
-          else {
-            print_input_or_output(IS_OUTPUT(47));
-            SERIAL_CHAR('0' + READ(47));
-          }
-        }
-        else
-      #endif
-      {
+
+      if (alt_pin_echo(pin)) {
         if (pwm_status(pin)) {
           // do nothing
         }

commit 70af080813f9f0ff387b2ed60ab65c18e6a89cfc
Author: ellensp <ellensp@hotmail.com>
Date:   Wed Feb 26 23:12:53 2020 +1300

    Add LPC1768 Serial ports for pinsDebug (#16980)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 2006bb8bc3..f247c7cacf 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -45,7 +45,7 @@
 #line 46
 
 // manually add pins that have names that are macros which don't play well with these macros
-#if (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY || defined(ARDUINO_ARCH_SAM))
+#if (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY || defined(ARDUINO_ARCH_SAM) || defined(TARGET_LPC1768))
   #if SERIAL_PORT == 0
     static const char RXD_NAME_0[] PROGMEM = { "RXD0" };
     static const char TXD_NAME_0[] PROGMEM = { "TXD0" };
@@ -116,6 +116,9 @@ const PinInfo pin_array[] PROGMEM = {
     #elif AVR_ATmega1284_FAMILY
       { RXD_NAME_0, 8, true },
       { TXD_NAME_0, 9, true },
+    #elif defined(TARGET_LPC1768)
+      { RXD_NAME_0, 3, true },
+      { TXD_NAME_0, 2, true },
     #endif
   #elif SERIAL_PORT == 1
     #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
@@ -124,16 +127,25 @@ const PinInfo pin_array[] PROGMEM = {
     #elif AVR_ATmega1284_FAMILY
       { RXD_NAME_1, 10, true },
       { TXD_NAME_1, 11, true },
+    #elif defined(TARGET_LPC1768)
+      { RXD_NAME_1, 16, true },
+      { TXD_NAME_1, 15, true },
     #endif
   #elif SERIAL_PORT == 2
     #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
       { RXD_NAME_2, 17, true },
       { TXD_NAME_2, 16, true },
+    #elif defined(TARGET_LPC1768)
+      { RXD_NAME_2, 11, true },
+      { TXD_NAME_2, 10, true },
     #endif
   #elif SERIAL_PORT == 3
     #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
       { RXD_NAME_3, 15, true },
       { TXD_NAME_3, 14, true },
+    #elif defined(TARGET_LPC1768)
+      { RXD_NAME_3, 1, true },
+      { TXD_NAME_3, 0, true },
     #endif
   #endif
 
@@ -145,6 +157,9 @@ const PinInfo pin_array[] PROGMEM = {
       #elif AVR_ATmega1284_FAMILY
         { RXD_NAME_0, 8, true },
         { TXD_NAME_0, 9, true },
+      #elif defined(TARGET_LPC1768)
+        { RXD_NAME_0, 3, true },
+        { TXD_NAME_0, 2, true },
       #endif
     #elif SERIAL_PORT_2 == 1
       #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
@@ -153,16 +168,25 @@ const PinInfo pin_array[] PROGMEM = {
       #elif AVR_ATmega1284_FAMILY
         { RXD_NAME_1, 10, true },
         { TXD_NAME_1, 11, true },
+      #elif defined(TARGET_LPC1768)
+        { RXD_NAME_1, 16, true },
+        { TXD_NAME_1, 15, true },
       #endif
     #elif SERIAL_PORT_2 == 2
       #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
         { RXD_NAME_2, 17, true },
         { TXD_NAME_2, 16, true },
+      #elif defined(TARGET_LPC1768)
+        { RXD_NAME_2, 11, true },
+        { TXD_NAME_2, 10, true },
       #endif
     #elif SERIAL_PORT_2 == 3
       #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
         { RXD_NAME_3, 15, true },
         { TXD_NAME_3, 14, true },
+      #elif defined(TARGET_LPC1768)
+        { RXD_NAME_3, 1, true },
+        { TXD_NAME_3, 0, true },
       #endif
     #endif
   #endif

commit 0268c1d02c33e6568aa579cfb9e4058603cbcb3c
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Tue Feb 4 01:24:11 2020 -0600

    STM32duino - Use SDIO for onboard SD (#16756)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 9e6159ee09..2006bb8bc3 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -168,7 +168,7 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #include "pinsDebug_list.h"
-  #line 98
+  #line 172
 
 };
 

commit bfad23d3e2e590b257ebe4317d7b14cc2dd3435c
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Feb 3 08:00:57 2020 -0600

    (c) 2020

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 1972c3ba94..9e6159ee09 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 4a71285c34e161b9f38079e40d8bac2861f8ff78
Author: ellensp <ellensp@hotmail.com>
Date:   Sun Jan 26 22:05:34 2020 +1300

    Fix Serial defines for M43 on AVR (#16649)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index d53b655837..1972c3ba94 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -137,31 +137,33 @@ const PinInfo pin_array[] PROGMEM = {
     #endif
   #endif
 
-  #if SERIAL_PORT_2 == 0
-    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
-      { RXD_NAME_0, 0, true },
-      { TXD_NAME_0, 1, true },
-    #elif AVR_ATmega1284_FAMILY
-      { RXD_NAME_0, 8, true },
-      { TXD_NAME_0, 9, true },
-    #endif
-  #elif SERIAL_PORT_2 == 1
-    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
-      { RXD_NAME_1, 19, true },
-      { TXD_NAME_1, 18, true },
-    #elif AVR_ATmega1284_FAMILY
-      { RXD_NAME_1, 10, true },
-      { TXD_NAME_1, 11, true },
-    #endif
-  #elif SERIAL_PORT_2 == 2
-    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
-      { RXD_NAME_2, 17, true },
-      { TXD_NAME_2, 16, true },
-    #endif
-  #elif SERIAL_PORT_2 == 3
-    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
-      { RXD_NAME_3, 15, true },
-      { TXD_NAME_3, 14, true },
+  #ifdef SERIAL_PORT_2
+    #if SERIAL_PORT_2 == 0
+      #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+        { RXD_NAME_0, 0, true },
+        { TXD_NAME_0, 1, true },
+      #elif AVR_ATmega1284_FAMILY
+        { RXD_NAME_0, 8, true },
+        { TXD_NAME_0, 9, true },
+      #endif
+    #elif SERIAL_PORT_2 == 1
+      #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+        { RXD_NAME_1, 19, true },
+        { TXD_NAME_1, 18, true },
+      #elif AVR_ATmega1284_FAMILY
+        { RXD_NAME_1, 10, true },
+        { TXD_NAME_1, 11, true },
+      #endif
+    #elif SERIAL_PORT_2 == 2
+      #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+        { RXD_NAME_2, 17, true },
+        { TXD_NAME_2, 16, true },
+      #endif
+    #elif SERIAL_PORT_2 == 3
+      #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+        { RXD_NAME_3, 15, true },
+        { TXD_NAME_3, 14, true },
+      #endif
     #endif
   #endif
 

commit 0e6ef65aec52980daeda09d7a6e8cd98b97f3806
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Jan 13 16:56:51 2020 -0600

    Clean up whitespace

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index caa08c1885..d53b655837 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -55,7 +55,7 @@
   #elif SERIAL_PORT == 2
     static const char RXD_NAME_2[] PROGMEM = { "RXD2" };
     static const char TXD_NAME_2[] PROGMEM = { "TXD2" };
-  #elif SERIAL_PORT == 3 
+  #elif SERIAL_PORT == 3
     static const char RXD_NAME_3[] PROGMEM = { "RXD3" };
     static const char TXD_NAME_3[] PROGMEM = { "TXD3" };
   #endif

commit d7aee3b7b69b8c2c56affa1cdf1953156de65ebf
Author: ellensp <ellensp@hotmail.com>
Date:   Sat Jan 4 12:40:56 2020 +1300

    Pins debugging AVR serial pins (#16437)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 23a1abe8b7..caa08c1885 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -45,9 +45,35 @@
 #line 46
 
 // manually add pins that have names that are macros which don't play well with these macros
-#if SERIAL_PORT == 0 && (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY || defined(ARDUINO_ARCH_SAM))
-  static const char RXD_NAME[] PROGMEM = { "RXD" };
-  static const char TXD_NAME[] PROGMEM = { "TXD" };
+#if (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY || defined(ARDUINO_ARCH_SAM))
+  #if SERIAL_PORT == 0
+    static const char RXD_NAME_0[] PROGMEM = { "RXD0" };
+    static const char TXD_NAME_0[] PROGMEM = { "TXD0" };
+  #elif SERIAL_PORT == 1
+    static const char RXD_NAME_1[] PROGMEM = { "RXD1" };
+    static const char TXD_NAME_1[] PROGMEM = { "TXD1" };
+  #elif SERIAL_PORT == 2
+    static const char RXD_NAME_2[] PROGMEM = { "RXD2" };
+    static const char TXD_NAME_2[] PROGMEM = { "TXD2" };
+  #elif SERIAL_PORT == 3 
+    static const char RXD_NAME_3[] PROGMEM = { "RXD3" };
+    static const char TXD_NAME_3[] PROGMEM = { "TXD3" };
+  #endif
+  #ifdef SERIAL_PORT_2
+    #if SERIAL_PORT_2 == 0
+      static const char RXD_NAME_0[] PROGMEM = { "RXD0" };
+      static const char TXD_NAME_0[] PROGMEM = { "TXD0" };
+    #elif SERIAL_PORT_2 == 1
+      static const char RXD_NAME_1[] PROGMEM = { "RXD1" };
+      static const char TXD_NAME_1[] PROGMEM = { "TXD1" };
+    #elif SERIAL_PORT_2 == 2
+      static const char RXD_NAME_2[] PROGMEM = { "RXD2" };
+      static const char TXD_NAME_2[] PROGMEM = { "TXD2" };
+    #elif SERIAL_PORT_2 == 3
+      static const char RXD_NAME_3[] PROGMEM = { "RXD3" };
+      static const char TXD_NAME_3[] PROGMEM = { "TXD3" };
+    #endif
+  #endif
 #endif
 
 /////////////////////////////////////////////////////////////////////////////
@@ -85,11 +111,57 @@ const PinInfo pin_array[] PROGMEM = {
   // manually add pins ...
   #if SERIAL_PORT == 0
     #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
-      { RXD_NAME, 0, true },
-      { TXD_NAME, 1, true },
+      { RXD_NAME_0, 0, true },
+      { TXD_NAME_0, 1, true },
+    #elif AVR_ATmega1284_FAMILY
+      { RXD_NAME_0, 8, true },
+      { TXD_NAME_0, 9, true },
+    #endif
+  #elif SERIAL_PORT == 1
+    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      { RXD_NAME_1, 19, true },
+      { TXD_NAME_1, 18, true },
     #elif AVR_ATmega1284_FAMILY
-      { RXD_NAME, 8, true },
-      { TXD_NAME, 9, true },
+      { RXD_NAME_1, 10, true },
+      { TXD_NAME_1, 11, true },
+    #endif
+  #elif SERIAL_PORT == 2
+    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      { RXD_NAME_2, 17, true },
+      { TXD_NAME_2, 16, true },
+    #endif
+  #elif SERIAL_PORT == 3
+    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      { RXD_NAME_3, 15, true },
+      { TXD_NAME_3, 14, true },
+    #endif
+  #endif
+
+  #if SERIAL_PORT_2 == 0
+    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      { RXD_NAME_0, 0, true },
+      { TXD_NAME_0, 1, true },
+    #elif AVR_ATmega1284_FAMILY
+      { RXD_NAME_0, 8, true },
+      { TXD_NAME_0, 9, true },
+    #endif
+  #elif SERIAL_PORT_2 == 1
+    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      { RXD_NAME_1, 19, true },
+      { TXD_NAME_1, 18, true },
+    #elif AVR_ATmega1284_FAMILY
+      { RXD_NAME_1, 10, true },
+      { TXD_NAME_1, 11, true },
+    #endif
+  #elif SERIAL_PORT_2 == 2
+    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      { RXD_NAME_2, 17, true },
+      { TXD_NAME_2, 16, true },
+    #endif
+  #elif SERIAL_PORT_2 == 3
+    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
+      { RXD_NAME_3, 15, true },
+      { TXD_NAME_3, 14, true },
     #endif
   #endif
 

commit e3660bca2591fad81589b2e4a3a7cf174bbc8eea
Author: Tim Moore <tim@youngmoores.com>
Date:   Sat Aug 3 18:57:56 2019 -0700

    Overlord printer thermistor (#14815)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 0421907771..23a1abe8b7 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -159,7 +159,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
               if (!GET_PINMODE(pin)) {
                 //pinMode(pin, INPUT_PULLUP);  // make sure input isn't floating - stopped doing this
                                                // because this could interfere with inductive/capacitive
-                                               // sensors (high impedance voltage divider) and with PT100 amplifier
+                                               // sensors (high impedance voltage divider) and with Pt100 amplifier
                 print_input_or_output(false);
                 SERIAL_ECHO(digitalRead_mod(pin));
               }

commit 1005f225f3d2ffba21fe970e2055ec16444fc8e3
Author: Giuliano Zaro <3684609+GMagician@users.noreply.github.com>
Date:   Mon Jul 22 04:44:03 2019 +0200

    Remove unused defines, fix typo (#14699)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 61f05c11b8..0421907771 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -117,7 +117,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
     if (GET_ARRAY_PIN(x) == pin) {
       if (found) multi_name_pin = true;
       found = true;
-      if (!multi_name_pin) {    // report digitial and analog pin number only on the first time through
+      if (!multi_name_pin) {    // report digital and analog pin number only on the first time through
         sprintf_P(buffer, PSTR("%sPIN: "), start_string);     // digital pin number
         SERIAL_ECHO(buffer);
         PRINT_PIN(pin);

commit a2ba0aaaacb38a680782a1ff7fd3e3a78f45fb6f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Jul 8 23:42:29 2019 -0500

    HAL include and other adjustments (#14525)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index e1f6b15734..61f05c11b8 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -17,6 +17,8 @@
  *
  */
 
+#include "../inc/MarlinConfig.h"
+
 #define MAX_NAME_LENGTH  39    // one place to specify the format of all the sources of names
                                // "-" left justify, "39" minimum width of name, pad with blanks
 
@@ -40,7 +42,7 @@
 #define REPORT_NAME_ANALOG(COUNTER, NAME) _ADD_PIN(#NAME, COUNTER)
 
 #include "pinsDebug_list.h"
-#line 47
+#line 46
 
 // manually add pins that have names that are macros which don't play well with these macros
 #if SERIAL_PORT == 0 && (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY || defined(ARDUINO_ARCH_SAM))
@@ -92,11 +94,10 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #include "pinsDebug_list.h"
-  #line 99
+  #line 98
 
 };
 
-
 #include HAL_PATH(../HAL, pinsDebug.h)  // get the correct support file for this CPU
 
 #ifndef M43_NEVER_TOUCH

commit dc02d0720df318045e3ca6cdf5f27e6c39525829
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Fri Jul 5 22:08:06 2019 -0500

    Pins Debugging for STM32 ‚Äî NEEDS TESTING (#14309)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 37a2e86812..e1f6b15734 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -121,7 +121,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
         SERIAL_ECHO(buffer);
         PRINT_PIN(pin);
         PRINT_PORT(pin);
-        if (IS_ANALOG(pin)) {
+        if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) {
           sprintf_P(buffer, PSTR(" (A%2d)  "), DIGITAL_PIN_TO_ANALOG_PIN(pin));    // analog pin number
           SERIAL_ECHO(buffer);
         }
@@ -183,7 +183,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
     SERIAL_ECHO(buffer);
     PRINT_PIN(pin);
     PRINT_PORT(pin);
-    if (IS_ANALOG(pin)) {
+    if (int8_t(DIGITAL_PIN_TO_ANALOG_PIN(pin)) >= 0) {
       sprintf_P(buffer, PSTR(" (A%2d)  "), DIGITAL_PIN_TO_ANALOG_PIN(pin));    // analog pin number
       SERIAL_ECHO(buffer);
     }
@@ -206,7 +206,10 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
         else
       #endif
       {
-        if (GET_PINMODE(pin)) {
+        if (pwm_status(pin)) {
+          // do nothing
+        }
+        else if (GET_PINMODE(pin)) {
           SERIAL_ECHO_SP(MAX_NAME_LENGTH - 16);
           print_input_or_output(true);
           SERIAL_ECHO(digitalRead_mod(pin));
@@ -224,7 +227,10 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
           SERIAL_ECHO(digitalRead_mod(pin));
         }
         //if (!pwm_status(pin)) SERIAL_CHAR(' ');    // add padding if it's not a PWM pin
-        if (extended) pwm_details(pin);  // report PWM capabilities only if doing an extended report
+        if (extended) {
+          SERIAL_ECHO_SP(MAX_NAME_LENGTH - 16);
+          pwm_details(pin);  // report PWM capabilities only if doing an extended report
+        }
       }
     }
     SERIAL_EOL();

commit 49027721e9cece37e2299ffeb41998e761af5269
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Fri Jun 28 22:50:03 2019 -0500

    Clean up some pinsDebug headers

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 7ffe0a589e..37a2e86812 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -2,9 +2,6 @@
  * Marlin 3D Printer Firmware
  * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
- * Based on Sprinter and grbl.
- * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
- *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or

commit 93cd66ac1146603e8a9911fceb3c63f4351f4d8e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Jun 27 23:57:50 2019 -0500

    Tweaky change from (C) to (c)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 2cf896abbb..7ffe0a589e 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -1,9 +1,9 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
- * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 9a56d901509b29f42d96fd46bd9b5e19ac8979e8
Author: Bob Kuhn <bob.kuhn@att.net>
Date:   Sat Apr 6 18:06:07 2019 -0500

    Fix M43 on LPC176x (#13587)
    
    The real fix. PR #13568 was wrong.

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index a8003fcd97..2cf896abbb 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -102,6 +102,9 @@ const PinInfo pin_array[] PROGMEM = {
 
 #include HAL_PATH(../HAL, pinsDebug.h)  // get the correct support file for this CPU
 
+#ifndef M43_NEVER_TOUCH
+  #define M43_NEVER_TOUCH(Q) false
+#endif
 
 static void print_input_or_output(const bool isout) {
   serialprintPGM(isout ? PSTR("Output = ") : PSTR("Input  = "));

commit e40636a7c1be913d59fac7d93dd959016d40d095
Author: Alexander Amelkin <mocbuhtig@amelkin.msk.ru>
Date:   Fri Mar 29 20:21:14 2019 +0300

    Replace digitalPinHasPWM with HAS_TIMER (#13520)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index cd963f87c4..a8003fcd97 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -139,11 +139,11 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
           #if AVR_AT90USB1286_FAMILY //Teensy IDEs don't know about these pins so must use FASTIO
             if (pin == 46 || pin == 47) {
               if (pin == 46) {
-                print_input_or_output(GET_OUTPUT(46));
+                print_input_or_output(IS_OUTPUT(46));
                 SERIAL_CHAR('0' + READ(46));
               }
               else if (pin == 47) {
-                print_input_or_output(GET_OUTPUT(47));
+                print_input_or_output(IS_OUTPUT(47));
                 SERIAL_CHAR('0' + READ(47));
               }
             }
@@ -195,11 +195,11 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
         if (pin == 46 || pin == 47) {
           SERIAL_ECHO_SP(12);
           if (pin == 46) {
-            print_input_or_output(GET_OUTPUT(46));
+            print_input_or_output(IS_OUTPUT(46));
             SERIAL_CHAR('0' + READ(46));
           }
           else {
-            print_input_or_output(GET_OUTPUT(47));
+            print_input_or_output(IS_OUTPUT(47));
             SERIAL_CHAR('0' + READ(47));
           }
         }

commit 0feeef26048883640b37ebe3994730f31ef6e922
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Feb 12 15:06:53 2019 -0600

    Update copyright in headers

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 792eb6db72..cd963f87c4 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -1,6 +1,6 @@
 /**
  * Marlin 3D Printer Firmware
- * Copyright (C) 2016, 2017 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ * Copyright (C) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
  *
  * Based on Sprinter and grbl.
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm

commit 6cf8d40f418833ac91774d84c806778ef4d6287d
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Dec 9 02:32:25 2018 -0600

    Fix some serial echos of pin states

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index d8d6966a7e..792eb6db72 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -140,11 +140,11 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
             if (pin == 46 || pin == 47) {
               if (pin == 46) {
                 print_input_or_output(GET_OUTPUT(46));
-                SERIAL_ECHO(READ(46));
+                SERIAL_CHAR('0' + READ(46));
               }
               else if (pin == 47) {
                 print_input_or_output(GET_OUTPUT(47));
-                SERIAL_ECHO(READ(47));
+                SERIAL_CHAR('0' + READ(47));
               }
             }
             else
@@ -196,11 +196,11 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
           SERIAL_ECHO_SP(12);
           if (pin == 46) {
             print_input_or_output(GET_OUTPUT(46));
-            SERIAL_ECHO(READ(46));
+            SERIAL_CHAR('0' + READ(46));
           }
           else {
             print_input_or_output(GET_OUTPUT(47));
-            SERIAL_ECHO(READ(47));
+            SERIAL_CHAR('0' + READ(47));
           }
         }
         else

commit c98623983774b9773800bc7dcef695c4bad81c0e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Nov 29 16:58:58 2018 -0600

    A single SERIAL_ECHO macro type (#12557)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 108a16b92f..d8d6966a7e 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -140,11 +140,11 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
             if (pin == 46 || pin == 47) {
               if (pin == 46) {
                 print_input_or_output(GET_OUTPUT(46));
-                SERIAL_PROTOCOL(READ(46));
+                SERIAL_ECHO(READ(46));
               }
               else if (pin == 47) {
                 print_input_or_output(GET_OUTPUT(47));
-                SERIAL_PROTOCOL(READ(47));
+                SERIAL_ECHO(READ(47));
               }
             }
             else
@@ -160,14 +160,14 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
                                                // because this could interfere with inductive/capacitive
                                                // sensors (high impedance voltage divider) and with PT100 amplifier
                 print_input_or_output(false);
-                SERIAL_PROTOCOL(digitalRead_mod(pin));
+                SERIAL_ECHO(digitalRead_mod(pin));
               }
               else if (pwm_status(pin)) {
                 // do nothing
               }
               else {
                 print_input_or_output(true);
-                SERIAL_PROTOCOL(digitalRead_mod(pin));
+                SERIAL_ECHO(digitalRead_mod(pin));
               }
             }
             if (!multi_name_pin && extended) pwm_details(pin);  // report PWM capabilities only on the first pass & only if doing an extended report
@@ -193,23 +193,23 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
     if (extended) {
       #if AVR_AT90USB1286_FAMILY  //Teensy IDEs don't know about these pins so must use FASTIO
         if (pin == 46 || pin == 47) {
-          SERIAL_PROTOCOL_SP(12);
+          SERIAL_ECHO_SP(12);
           if (pin == 46) {
             print_input_or_output(GET_OUTPUT(46));
-            SERIAL_PROTOCOL(READ(46));
+            SERIAL_ECHO(READ(46));
           }
           else {
             print_input_or_output(GET_OUTPUT(47));
-            SERIAL_PROTOCOL(READ(47));
+            SERIAL_ECHO(READ(47));
           }
         }
         else
       #endif
       {
         if (GET_PINMODE(pin)) {
-          SERIAL_PROTOCOL_SP(MAX_NAME_LENGTH - 16);
+          SERIAL_ECHO_SP(MAX_NAME_LENGTH - 16);
           print_input_or_output(true);
-          SERIAL_PROTOCOL(digitalRead_mod(pin));
+          SERIAL_ECHO(digitalRead_mod(pin));
         }
         else {
           if (IS_ANALOG(pin)) {
@@ -221,7 +221,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
           SERIAL_ECHO_SP(MAX_NAME_LENGTH - 16);   // add padding if not an analog pin
 
           print_input_or_output(false);
-          SERIAL_PROTOCOL(digitalRead_mod(pin));
+          SERIAL_ECHO(digitalRead_mod(pin));
         }
         //if (!pwm_status(pin)) SERIAL_CHAR(' ');    // add padding if it's not a PWM pin
         if (extended) pwm_details(pin);  // report PWM capabilities only if doing an extended report

commit 9c0e05552ea504b193ac45740040953a8473b93e
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 4 15:25:26 2018 -0600

    Suppress some compile warnings

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 7e8b07df83..108a16b92f 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -151,7 +151,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
           #endif
           {
             if (!GET_ARRAY_IS_DIGITAL(x)) {
-              sprintf_P(buffer, PSTR("Analog in = %5ld"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
+              sprintf_P(buffer, PSTR("Analog in = %5ld"), (long)analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
               SERIAL_ECHO(buffer);
             }
             else {
@@ -213,7 +213,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
         }
         else {
           if (IS_ANALOG(pin)) {
-            sprintf_P(buffer, PSTR("   Analog in = %5ld"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
+            sprintf_P(buffer, PSTR("   Analog in = %5ld"), (long)analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
             SERIAL_ECHO(buffer);
             SERIAL_ECHOPGM("   ");
           }

commit 11ac75edcb34a2f90b50ca134ff40839f8c29199
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Sep 30 23:44:33 2018 -0500

    Use PGM_P for PSTR pointers (#11977)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 2ec747cd44..7e8b07df83 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -67,7 +67,7 @@
 
 
 typedef struct {
-  const char * const name;
+  PGM_P const name;
   pin_t pin;
   bool is_digital;
 } PinInfo;

commit cc6d41e1d3446b54f219afbcf79ee7785079b6fb
Author: Chris Pepper <p3p@p3psoft.co.uk>
Date:   Fri Apr 13 02:25:08 2018 +0100

    Use a macro for HAL header redirection (#10380)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 394de46161..2ec747cd44 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -100,14 +100,13 @@ const PinInfo pin_array[] PROGMEM = {
 };
 
 
-#include "../HAL/HAL_pinsDebug.h"  // get the correct support file for this CPU
+#include HAL_PATH(../HAL, pinsDebug.h)  // get the correct support file for this CPU
 
 
 static void print_input_or_output(const bool isout) {
   serialprintPGM(isout ? PSTR("Output = ") : PSTR("Input  = "));
 }
 
-
 // pretty report with PWM info
 inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = false, const char *start_string = "") {
   char buffer[MAX_NAME_LENGTH + 1];   // for the sprintf statements

commit a97624dd81aee2b627eaa38997c60430d5c0880a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Mar 28 20:40:28 2018 -0500

    Allow pinsDebug "Analog in" long int

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index fd928c1f27..394de46161 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -152,7 +152,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
           #endif
           {
             if (!GET_ARRAY_IS_DIGITAL(x)) {
-              sprintf_P(buffer, PSTR("Analog in = %5d"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
+              sprintf_P(buffer, PSTR("Analog in = %5ld"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
               SERIAL_ECHO(buffer);
             }
             else {
@@ -214,7 +214,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
         }
         else {
           if (IS_ANALOG(pin)) {
-            sprintf_P(buffer, PSTR("   Analog in = %5d"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
+            sprintf_P(buffer, PSTR("   Analog in = %5ld"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
             SERIAL_ECHO(buffer);
             SERIAL_ECHOPGM("   ");
           }

commit e2df2864449ad64583d0ea9f0f9feaf82ee17a86
Author: Ben Lye <ben@lye.co.nz>
Date:   Thu Mar 1 10:51:36 2018 +0000

    Update pinsDebug.h (#9874)
    
    Fix display of analog input value.

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 45c15675d7..fd928c1f27 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -151,7 +151,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
             else
           #endif
           {
-            if (!GET_ARRAY_IS_DIGITAL(pin)) {
+            if (!GET_ARRAY_IS_DIGITAL(x)) {
               sprintf_P(buffer, PSTR("Analog in = %5d"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
               SERIAL_ECHO(buffer);
             }

commit a6563df705ea69c3da68d907b62ca4fbb3e0045f
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 18 02:25:32 2018 -0600

    Sync pinsDebug_list.h between 1.1.x and 2.0.x (#9693)

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 1e73ab900a..45c15675d7 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -39,8 +39,8 @@
 
 #define _ADD_PIN_2(PIN_NAME, ENTRY_NAME) static const char ENTRY_NAME[] PROGMEM = { PIN_NAME };
 #define _ADD_PIN(PIN_NAME, COUNTER) _ADD_PIN_2(PIN_NAME, entry_NAME_##COUNTER)
-#define REPORT_NAME_DIGITAL(NAME, COUNTER) _ADD_PIN(#NAME, COUNTER)
-#define REPORT_NAME_ANALOG(NAME, COUNTER) _ADD_PIN(#NAME, COUNTER)
+#define REPORT_NAME_DIGITAL(COUNTER, NAME) _ADD_PIN(#NAME, COUNTER)
+#define REPORT_NAME_ANALOG(COUNTER, NAME) _ADD_PIN(#NAME, COUNTER)
 
 #include "pinsDebug_list.h"
 #line 47
@@ -62,8 +62,8 @@
 
 #define _ADD_PIN_2(ENTRY_NAME, NAME, IS_DIGITAL) { ENTRY_NAME, NAME, IS_DIGITAL },
 #define _ADD_PIN(NAME, COUNTER, IS_DIGITAL) _ADD_PIN_2(entry_NAME_##COUNTER, NAME, IS_DIGITAL)
-#define REPORT_NAME_DIGITAL(NAME, COUNTER) _ADD_PIN(NAME, COUNTER, true)
-#define REPORT_NAME_ANALOG(NAME, COUNTER) _ADD_PIN(analogInputToDigitalPin(NAME), COUNTER, false)
+#define REPORT_NAME_DIGITAL(COUNTER, NAME) _ADD_PIN(NAME, COUNTER, true)
+#define REPORT_NAME_ANALOG(COUNTER, NAME) _ADD_PIN(analogInputToDigitalPin(NAME), COUNTER, false)
 
 
 typedef struct {

commit adb9ecf3cc64df9da9c6226e0612f14c7b19998e
Author: Bob-the-Kuhn <bob.kuhn@att.net>
Date:   Mon Jan 1 16:11:56 2018 -0600

    copy of PR #8990

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 4d7e903ffc..1e73ab900a 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -46,7 +46,7 @@
 #line 47
 
 // manually add pins that have names that are macros which don't play well with these macros
-#if SERIAL_PORT == 0 && (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY)
+#if SERIAL_PORT == 0 && (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY || defined(ARDUINO_ARCH_SAM))
   static const char RXD_NAME[] PROGMEM = { "RXD" };
   static const char TXD_NAME[] PROGMEM = { "TXD" };
 #endif
@@ -85,7 +85,7 @@ const PinInfo pin_array[] PROGMEM = {
 
   // manually add pins ...
   #if SERIAL_PORT == 0
-    #if AVR_ATmega2560_FAMILY
+    #if (AVR_ATmega2560_FAMILY || defined(ARDUINO_ARCH_SAM))
       { RXD_NAME, 0, true },
       { TXD_NAME, 1, true },
     #elif AVR_ATmega1284_FAMILY
@@ -130,7 +130,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
       }
       else {
         SERIAL_CHAR('.');
-        SERIAL_ECHO_SP(26 + strlen(start_string));  // add padding if not the first instance found
+        SERIAL_ECHO_SP(MULTI_NAME_PAD + strlen(start_string));  // add padding if not the first instance found
       }
       PRINT_ARRAY_NAME(x);
       if (extended) {

commit ba8bc7ea80a6d90b195bba8033ca23e80edfc69b
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Sun Nov 19 23:00:43 2017 -0600

    Cosmetic tweaks

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 7958f981a8..4d7e903ffc 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -43,7 +43,7 @@
 #define REPORT_NAME_ANALOG(NAME, COUNTER) _ADD_PIN(#NAME, COUNTER)
 
 #include "pinsDebug_list.h"
-#line 49
+#line 47
 
 // manually add pins that have names that are macros which don't play well with these macros
 #if SERIAL_PORT == 0 && (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY)
@@ -95,7 +95,7 @@ const PinInfo pin_array[] PROGMEM = {
   #endif
 
   #include "pinsDebug_list.h"
-  #line 101
+  #line 99
 
 };
 

commit 50b4f9cbf7ba1400c0207a2fdd1bd70a8df8fda5
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Sat Oct 28 19:44:54 2017 -0500

    LPC1768 Pin Mapping and M43 cleanup (#8119)
    
    * LPC1768 M43 cleanup
    
    * Update pinmapping.h to #define pins

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 037e79ddfb..7958f981a8 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -20,8 +20,8 @@
  *
  */
 
-#define MAX_NAME_LENGTH  35    // one place to specify the format of all the sources of names
-                               // "-" left justify, "35" minimum width of name, pad with blanks
+#define MAX_NAME_LENGTH  39    // one place to specify the format of all the sources of names
+                               // "-" left justify, "39" minimum width of name, pad with blanks
 
 /**
  *  This routine minimizes RAM usage by creating a FLASH resident array to
@@ -110,7 +110,7 @@ static void print_input_or_output(const bool isout) {
 
 // pretty report with PWM info
 inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = false, const char *start_string = "") {
-  char buffer[30];   // for the sprintf statements
+  char buffer[MAX_NAME_LENGTH + 1];   // for the sprintf statements
   bool found = false, multi_name_pin = false;
 
   for (uint8_t x = 0; x < COUNT(pin_array); x++)  {    // scan entire array and report all instances of this pin
@@ -151,7 +151,7 @@ inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = fa
             else
           #endif
           {
-            if (!GET_ARRAY_IS_DIGITAL(x)) {
+            if (!GET_ARRAY_IS_DIGITAL(pin)) {
               sprintf_P(buffer, PSTR("Analog in = %5d"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
               SERIAL_ECHO(buffer);
             }

commit 9e699811d25918fe64793824b2a2fdbccdf3b7bd
Author: Thomas Moore <tcm0116@users.noreply.github.com>
Date:   Thu Oct 26 13:37:26 2017 -0500

    Make LPC1768 pinmapping not specific to Re-ARM (#8063)
    
    * Merging early because of build failures.  See #8105
    
    * Make LPC1768 pinmapping not specific to Re-ARM
    
    * Add HAL_PIN_TYPE and LPC1768 pin features
    
    * M43 Updates
    
    * Move pin map into pinsDebug_LPC1768.h
    
    * Incorporate comments and M226
    
    * Fix persistent store compilation issues
    
    * Update pin features
    
    * Update MKS SBASE pins
    
    * Use native LPC1768 pin numbers in M42, M43, and M226

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 8957077903..037e79ddfb 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -68,7 +68,7 @@
 
 typedef struct {
   const char * const name;
-  uint8_t pin;
+  pin_t pin;
   bool is_digital;
 } PinInfo;
 
@@ -109,18 +109,18 @@ static void print_input_or_output(const bool isout) {
 
 
 // pretty report with PWM info
-inline void report_pin_state_extended(int8_t pin, bool ignore, bool extended = false, const char *start_string = "") {
+inline void report_pin_state_extended(pin_t pin, bool ignore, bool extended = false, const char *start_string = "") {
   char buffer[30];   // for the sprintf statements
   bool found = false, multi_name_pin = false;
 
   for (uint8_t x = 0; x < COUNT(pin_array); x++)  {    // scan entire array and report all instances of this pin
     if (GET_ARRAY_PIN(x) == pin) {
-      GET_PIN_INFO(pin);
       if (found) multi_name_pin = true;
       found = true;
       if (!multi_name_pin) {    // report digitial and analog pin number only on the first time through
-        sprintf_P(buffer, PSTR("%sPIN: %3d "), start_string, pin);     // digital pin number
+        sprintf_P(buffer, PSTR("%sPIN: "), start_string);     // digital pin number
         SERIAL_ECHO(buffer);
+        PRINT_PIN(pin);
         PRINT_PORT(pin);
         if (IS_ANALOG(pin)) {
           sprintf_P(buffer, PSTR(" (A%2d)  "), DIGITAL_PIN_TO_ANALOG_PIN(pin));    // analog pin number
@@ -180,8 +180,9 @@ inline void report_pin_state_extended(int8_t pin, bool ignore, bool extended = f
   } // end of for loop
 
   if (!found) {
-    sprintf_P(buffer, PSTR("%sPIN: %3d "), start_string, pin);
+    sprintf_P(buffer, PSTR("%sPIN: "), start_string);
     SERIAL_ECHO(buffer);
+    PRINT_PIN(pin);
     PRINT_PORT(pin);
     if (IS_ANALOG(pin)) {
       sprintf_P(buffer, PSTR(" (A%2d)  "), DIGITAL_PIN_TO_ANALOG_PIN(pin));    // analog pin number

commit 2e20c53c9d3f1ef29a51db9030dd10b2be8c65fb
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Mon Sep 18 05:55:09 2017 -0500

    Move endstop debug to Endstops

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index a061fc31bd..8957077903 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -20,8 +20,6 @@
  *
  */
 
-bool endstop_monitor_flag = false;
-
 #define MAX_NAME_LENGTH  35    // one place to specify the format of all the sources of names
                                // "-" left justify, "35" minimum width of name, pad with blanks
 

commit 82fff87e1658af870fdcf98a39deff8a285e2d69
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:32 2017 -0500

    Pins updates

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
index 8d0599ce69..a061fc31bd 100644
--- a/Marlin/src/pins/pinsDebug.h
+++ b/Marlin/src/pins/pinsDebug.h
@@ -102,7 +102,7 @@ const PinInfo pin_array[] PROGMEM = {
 };
 
 
-#include "src/HAL/HAL_pinsDebug.h"  // get the correct support file for this CPU
+#include "../HAL/HAL_pinsDebug.h"  // get the correct support file for this CPU
 
 
 static void print_input_or_output(const bool isout) {

commit 0b9a88d6cef62d70477dd9fd41f4a8ae022e920f
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Wed Sep 6 06:28:31 2017 -0500

    Move 'pins' files

diff --git a/Marlin/src/pins/pinsDebug.h b/Marlin/src/pins/pinsDebug.h
new file mode 100644
index 0000000000..8d0599ce69
--- /dev/null
+++ b/Marlin/src/pins/pinsDebug.h
@@ -0,0 +1,234 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016, 2017 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+bool endstop_monitor_flag = false;
+
+#define MAX_NAME_LENGTH  35    // one place to specify the format of all the sources of names
+                               // "-" left justify, "35" minimum width of name, pad with blanks
+
+/**
+ *  This routine minimizes RAM usage by creating a FLASH resident array to
+ *  store the pin names, pin numbers and analog/digital flag.
+ *
+ *  Creating the array in FLASH is a two pass process.  The first pass puts the
+ *  name strings into FLASH.  The second pass actually creates the array.
+ *
+ *  Both passes use the same pin list.  The list contains two macro names. The
+ *  actual macro definitions are changed depending on which pass is being done.
+ *
+ */
+
+// first pass - put the name strings into FLASH
+
+#define _ADD_PIN_2(PIN_NAME, ENTRY_NAME) static const char ENTRY_NAME[] PROGMEM = { PIN_NAME };
+#define _ADD_PIN(PIN_NAME, COUNTER) _ADD_PIN_2(PIN_NAME, entry_NAME_##COUNTER)
+#define REPORT_NAME_DIGITAL(NAME, COUNTER) _ADD_PIN(#NAME, COUNTER)
+#define REPORT_NAME_ANALOG(NAME, COUNTER) _ADD_PIN(#NAME, COUNTER)
+
+#include "pinsDebug_list.h"
+#line 49
+
+// manually add pins that have names that are macros which don't play well with these macros
+#if SERIAL_PORT == 0 && (AVR_ATmega2560_FAMILY || AVR_ATmega1284_FAMILY)
+  static const char RXD_NAME[] PROGMEM = { "RXD" };
+  static const char TXD_NAME[] PROGMEM = { "TXD" };
+#endif
+
+/////////////////////////////////////////////////////////////////////////////
+
+// second pass - create the array
+
+#undef _ADD_PIN_2
+#undef _ADD_PIN
+#undef REPORT_NAME_DIGITAL
+#undef REPORT_NAME_ANALOG
+
+#define _ADD_PIN_2(ENTRY_NAME, NAME, IS_DIGITAL) { ENTRY_NAME, NAME, IS_DIGITAL },
+#define _ADD_PIN(NAME, COUNTER, IS_DIGITAL) _ADD_PIN_2(entry_NAME_##COUNTER, NAME, IS_DIGITAL)
+#define REPORT_NAME_DIGITAL(NAME, COUNTER) _ADD_PIN(NAME, COUNTER, true)
+#define REPORT_NAME_ANALOG(NAME, COUNTER) _ADD_PIN(analogInputToDigitalPin(NAME), COUNTER, false)
+
+
+typedef struct {
+  const char * const name;
+  uint8_t pin;
+  bool is_digital;
+} PinInfo;
+
+const PinInfo pin_array[] PROGMEM = {
+
+  /**
+   *  [pin name]  [pin number]  [is digital or analog]  1 = digital, 0 = analog
+   *  Each entry takes up 6 bytes in FLASH:
+   *     2 byte pointer to location of the name string
+   *     2 bytes containing the pin number
+   *         analog pin numbers were convereted to digital when the array was created
+   *     2 bytes containing the digital/analog bool flag
+   */
+
+  // manually add pins ...
+  #if SERIAL_PORT == 0
+    #if AVR_ATmega2560_FAMILY
+      { RXD_NAME, 0, true },
+      { TXD_NAME, 1, true },
+    #elif AVR_ATmega1284_FAMILY
+      { RXD_NAME, 8, true },
+      { TXD_NAME, 9, true },
+    #endif
+  #endif
+
+  #include "pinsDebug_list.h"
+  #line 101
+
+};
+
+
+#include "src/HAL/HAL_pinsDebug.h"  // get the correct support file for this CPU
+
+
+static void print_input_or_output(const bool isout) {
+  serialprintPGM(isout ? PSTR("Output = ") : PSTR("Input  = "));
+}
+
+
+// pretty report with PWM info
+inline void report_pin_state_extended(int8_t pin, bool ignore, bool extended = false, const char *start_string = "") {
+  char buffer[30];   // for the sprintf statements
+  bool found = false, multi_name_pin = false;
+
+  for (uint8_t x = 0; x < COUNT(pin_array); x++)  {    // scan entire array and report all instances of this pin
+    if (GET_ARRAY_PIN(x) == pin) {
+      GET_PIN_INFO(pin);
+      if (found) multi_name_pin = true;
+      found = true;
+      if (!multi_name_pin) {    // report digitial and analog pin number only on the first time through
+        sprintf_P(buffer, PSTR("%sPIN: %3d "), start_string, pin);     // digital pin number
+        SERIAL_ECHO(buffer);
+        PRINT_PORT(pin);
+        if (IS_ANALOG(pin)) {
+          sprintf_P(buffer, PSTR(" (A%2d)  "), DIGITAL_PIN_TO_ANALOG_PIN(pin));    // analog pin number
+          SERIAL_ECHO(buffer);
+        }
+        else SERIAL_ECHO_SP(8);   // add padding if not an analog pin
+      }
+      else {
+        SERIAL_CHAR('.');
+        SERIAL_ECHO_SP(26 + strlen(start_string));  // add padding if not the first instance found
+      }
+      PRINT_ARRAY_NAME(x);
+      if (extended) {
+        if (pin_is_protected(pin) && !ignore)
+          SERIAL_ECHOPGM("protected ");
+        else {
+          #if AVR_AT90USB1286_FAMILY //Teensy IDEs don't know about these pins so must use FASTIO
+            if (pin == 46 || pin == 47) {
+              if (pin == 46) {
+                print_input_or_output(GET_OUTPUT(46));
+                SERIAL_PROTOCOL(READ(46));
+              }
+              else if (pin == 47) {
+                print_input_or_output(GET_OUTPUT(47));
+                SERIAL_PROTOCOL(READ(47));
+              }
+            }
+            else
+          #endif
+          {
+            if (!GET_ARRAY_IS_DIGITAL(x)) {
+              sprintf_P(buffer, PSTR("Analog in = %5d"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
+              SERIAL_ECHO(buffer);
+            }
+            else {
+              if (!GET_PINMODE(pin)) {
+                //pinMode(pin, INPUT_PULLUP);  // make sure input isn't floating - stopped doing this
+                                               // because this could interfere with inductive/capacitive
+                                               // sensors (high impedance voltage divider) and with PT100 amplifier
+                print_input_or_output(false);
+                SERIAL_PROTOCOL(digitalRead_mod(pin));
+              }
+              else if (pwm_status(pin)) {
+                // do nothing
+              }
+              else {
+                print_input_or_output(true);
+                SERIAL_PROTOCOL(digitalRead_mod(pin));
+              }
+            }
+            if (!multi_name_pin && extended) pwm_details(pin);  // report PWM capabilities only on the first pass & only if doing an extended report
+          }
+        }
+      }
+      SERIAL_EOL();
+    }  // end of IF
+  } // end of for loop
+
+  if (!found) {
+    sprintf_P(buffer, PSTR("%sPIN: %3d "), start_string, pin);
+    SERIAL_ECHO(buffer);
+    PRINT_PORT(pin);
+    if (IS_ANALOG(pin)) {
+      sprintf_P(buffer, PSTR(" (A%2d)  "), DIGITAL_PIN_TO_ANALOG_PIN(pin));    // analog pin number
+      SERIAL_ECHO(buffer);
+    }
+    else
+      SERIAL_ECHO_SP(8);   // add padding if not an analog pin
+    SERIAL_ECHOPGM("<unused/unknown>");
+    if (extended) {
+      #if AVR_AT90USB1286_FAMILY  //Teensy IDEs don't know about these pins so must use FASTIO
+        if (pin == 46 || pin == 47) {
+          SERIAL_PROTOCOL_SP(12);
+          if (pin == 46) {
+            print_input_or_output(GET_OUTPUT(46));
+            SERIAL_PROTOCOL(READ(46));
+          }
+          else {
+            print_input_or_output(GET_OUTPUT(47));
+            SERIAL_PROTOCOL(READ(47));
+          }
+        }
+        else
+      #endif
+      {
+        if (GET_PINMODE(pin)) {
+          SERIAL_PROTOCOL_SP(MAX_NAME_LENGTH - 16);
+          print_input_or_output(true);
+          SERIAL_PROTOCOL(digitalRead_mod(pin));
+        }
+        else {
+          if (IS_ANALOG(pin)) {
+            sprintf_P(buffer, PSTR("   Analog in = %5d"), analogRead(DIGITAL_PIN_TO_ANALOG_PIN(pin)));
+            SERIAL_ECHO(buffer);
+            SERIAL_ECHOPGM("   ");
+          }
+          else
+          SERIAL_ECHO_SP(MAX_NAME_LENGTH - 16);   // add padding if not an analog pin
+
+          print_input_or_output(false);
+          SERIAL_PROTOCOL(digitalRead_mod(pin));
+        }
+        //if (!pwm_status(pin)) SERIAL_CHAR(' ');    // add padding if it's not a PWM pin
+        if (extended) pwm_details(pin);  // report PWM capabilities only if doing an extended report
+      }
+    }
+    SERIAL_EOL();
+  }
+}
