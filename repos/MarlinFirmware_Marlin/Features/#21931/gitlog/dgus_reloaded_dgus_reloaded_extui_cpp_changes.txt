commit 521e7eafce4921a36532e0a89f2cc7417c2c4e21
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue May 21 15:42:56 2024 -0500

    üßë‚Äçüíª Clarify media "mounted"

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index fad878a212..9aeb06dba1 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -50,7 +50,7 @@ namespace ExtUI {
     screen.printerKilled(error, component);
   }
 
-  void onMediaInserted() { TERN_(HAS_MEDIA, screen.sdCardInserted()); }
+  void onMediaMounted()  { TERN_(HAS_MEDIA, screen.sdCardInserted()); }
   void onMediaError()    { TERN_(HAS_MEDIA, screen.sdCardError()); }
   void onMediaRemoved()  { TERN_(HAS_MEDIA, screen.sdCardRemoved()); }
 

commit 87e94f456348e944ba4487aed436c762dd718966
Author: Andrew <18502096+classicrocker883@users.noreply.github.com>
Date:   Mon Apr 1 16:05:11 2024 -0400

    üö∏ Update ProUI Plot graph - part 2 (#26563)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 1c62bee9d5..fad878a212 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -54,6 +54,10 @@ namespace ExtUI {
   void onMediaError()    { TERN_(HAS_MEDIA, screen.sdCardError()); }
   void onMediaRemoved()  { TERN_(HAS_MEDIA, screen.sdCardRemoved()); }
 
+  void onHeatingError(const heater_id_t header_id) {}
+  void onMinTempError(const heater_id_t header_id) {}
+  void onMaxTempError(const heater_id_t header_id) {}
+
   void onPlayTone(const uint16_t frequency, const uint16_t duration/*=0*/) {
     screen.playTone(frequency, duration);
   }
@@ -78,6 +82,26 @@ namespace ExtUI {
     screen.userConfirmRequired(msg);
   }
 
+  // For fancy LCDs include an icon ID, message, and translated button title
+  void onUserConfirmRequired(const int icon, const char * const cstr, FSTR_P const fBtn) {
+    onUserConfirmRequired(cstr);
+    UNUSED(icon); UNUSED(fBtn);
+  }
+  void onUserConfirmRequired(const int icon, FSTR_P const fstr, FSTR_P const fBtn) {
+    onUserConfirmRequired(fstr);
+    UNUSED(icon); UNUSED(fBtn);
+  }
+
+  #if ENABLED(ADVANCED_PAUSE_FEATURE)
+    void onPauseMode(
+      const PauseMessage message,
+      const PauseMode mode/*=PAUSE_MODE_SAME*/,
+      const uint8_t extruder/*=active_extruder*/
+    ) {
+      stdOnPauseMode(message, mode, extruder);
+    }
+  #endif
+
   void onStatusChanged(const char * const msg) {
     screen.setStatusMessage(msg);
   }
@@ -112,6 +136,9 @@ namespace ExtUI {
   #if HAS_LEVELING
     void onLevelingStart() {}
     void onLevelingDone() {}
+    #if ENABLED(PREHEAT_BEFORE_LEVELING)
+      celsius_t getLevelingBedTemp() { return LEVELING_BED_TEMP; }
+    #endif
   #endif
 
   #if HAS_MESH
@@ -125,6 +152,10 @@ namespace ExtUI {
     }
   #endif
 
+  #if ENABLED(PREVENT_COLD_EXTRUSION)
+    void onSetMinExtrusionTemp(const celsius_t) {}
+  #endif
+
   #if ENABLED(POWER_LOSS_RECOVERY)
     void onSetPowerLoss(const bool onoff) {
       // Called when power-loss is enabled/disabled
@@ -139,14 +170,29 @@ namespace ExtUI {
   #endif
 
   #if HAS_PID_HEATING
-    void onPIDTuning(const result_t rst) {
+    void onPIDTuning(const pidresult_t rst) {
       // Called for temperature PID tuning result
       screen.pidTuning(rst);
     }
+    void onStartM303(const int count, const heater_id_t hid, const celsius_t temp) {
+      // Called by M303 to update the UI
+    }
+  #endif
+
+  #if ENABLED(MPC_AUTOTUNE)
+    void onMPCTuning(const mpcresult_t rst) {
+      // Called for temperature PID tuning result
+    }
+  #endif
+
+  #if ENABLED(PLATFORM_M997_SUPPORT)
+    void onFirmwareFlash() {}
   #endif
 
   void onSteppersDisabled() {}
   void onSteppersEnabled() {}
+  void onAxisDisabled(const axis_t) {}
+  void onAxisEnabled(const axis_t) {}
 }
 
 #endif // DGUS_LCD_UI_RELOADED

commit 466282f322ae4f42a8f3db5e3c9765c38445fdc8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Mar 31 18:20:37 2024 -0500

    ü©π Misc. changes from ProUI / ExtUI updates (#26928)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 3e4911f765..1c62bee9d5 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -84,6 +84,7 @@ namespace ExtUI {
 
   void onHomingStart() {}
   void onHomingDone() {}
+
   void onPrintDone() {}
 
   void onFactoryReset() {
@@ -138,14 +139,14 @@ namespace ExtUI {
   #endif
 
   #if HAS_PID_HEATING
-    void onPidTuning(const result_t rst) {
+    void onPIDTuning(const result_t rst) {
       // Called for temperature PID tuning result
       screen.pidTuning(rst);
     }
   #endif
 
   void onSteppersDisabled() {}
-  void onSteppersEnabled()  {}
+  void onSteppersEnabled() {}
 }
 
 #endif // DGUS_LCD_UI_RELOADED

commit 22fc07d72ba08df8db9545da4286ccd2558ecf30
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 15:03:02 2023 -0500

    üßë‚Äçüíª ExtUI::onPlayTone optional duration

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 68e405776e..3e4911f765 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -54,7 +54,7 @@ namespace ExtUI {
   void onMediaError()    { TERN_(HAS_MEDIA, screen.sdCardError()); }
   void onMediaRemoved()  { TERN_(HAS_MEDIA, screen.sdCardRemoved()); }
 
-  void onPlayTone(const uint16_t frequency, const uint16_t duration) {
+  void onPlayTone(const uint16_t frequency, const uint16_t duration/*=0*/) {
     screen.playTone(frequency, duration);
   }
 

commit bd6eb832500478c9e3be55f1126d0139aa013bb0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Dec 1 09:19:13 2023 -0600

    ü©π Fix some minor issues

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 3434bdf8c3..68e405776e 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -21,7 +21,7 @@
  */
 
 /**
- * lcd/extui/dgus_e3s1pro/dgus_e3s1pro_extui.cpp
+ * lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
  */
 
 #include "../../../inc/MarlinConfigPre.h"

commit 229ea71421debe36fe77a371bab3c4b40ce38fe8
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 6 19:02:34 2023 -0500

    üìù Update dgus_e3s1pro comment

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 68e405776e..3434bdf8c3 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -21,7 +21,7 @@
  */
 
 /**
- * lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+ * lcd/extui/dgus_e3s1pro/dgus_e3s1pro_extui.cpp
  */
 
 #include "../../../inc/MarlinConfigPre.h"

commit c3694f1c038fa20ad749118b0a1c7aa88e3dd5f2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jun 14 17:24:50 2023 -0500

    üé® Lowercase methods, functions, data members (#25939)
    
    For: TFT, DGUS, MarlinUI, Anycubic, JyersUI, CrealityUI

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index e9e3940a08..68e405776e 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -50,7 +50,7 @@ namespace ExtUI {
     screen.printerKilled(error, component);
   }
 
-  void onMediaInserted() { TERN_(HAS_MEDIA, screen.sDCardInserted()); }
+  void onMediaInserted() { TERN_(HAS_MEDIA, screen.sdCardInserted()); }
   void onMediaError()    { TERN_(HAS_MEDIA, screen.sdCardError()); }
   void onMediaRemoved()  { TERN_(HAS_MEDIA, screen.sdCardRemoved()); }
 

commit bc385122e94d7eda79bdf1573a7c2071c4589da2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 13:34:13 2023 -0500

    üé® Lowercase method / data member names (#25914)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 6e8f2b0100..e9e3940a08 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -33,7 +33,7 @@
 
 namespace ExtUI {
 
-  void onStartup() { dgus_screen_handler.Init(); }
+  void onStartup() { screen.init(); }
 
   void onIdle() {
     static bool processing = false;
@@ -41,45 +41,45 @@ namespace ExtUI {
     // Prevent recursion
     if (!processing) {
       processing = true;
-      dgus_screen_handler.Loop();
+      screen.loop();
       processing = false;
     }
   }
 
   void onPrinterKilled(FSTR_P const error, FSTR_P const component) {
-    dgus_screen_handler.printerKilled(error, component);
+    screen.printerKilled(error, component);
   }
 
-  void onMediaInserted() { TERN_(HAS_MEDIA, dgus_screen_handler.SDCardInserted()); }
-  void onMediaError()    { TERN_(HAS_MEDIA, dgus_screen_handler.SDCardError()); }
-  void onMediaRemoved()  { TERN_(HAS_MEDIA, dgus_screen_handler.SDCardRemoved()); }
+  void onMediaInserted() { TERN_(HAS_MEDIA, screen.sDCardInserted()); }
+  void onMediaError()    { TERN_(HAS_MEDIA, screen.sdCardError()); }
+  void onMediaRemoved()  { TERN_(HAS_MEDIA, screen.sdCardRemoved()); }
 
   void onPlayTone(const uint16_t frequency, const uint16_t duration) {
-    dgus_screen_handler.PlayTone(frequency, duration);
+    screen.playTone(frequency, duration);
   }
 
   void onPrintTimerStarted() {
-    dgus_screen_handler.PrintTimerStarted();
+    screen.printTimerStarted();
   }
 
   void onPrintTimerPaused() {
-    dgus_screen_handler.PrintTimerPaused();
+    screen.printTimerPaused();
   }
 
   void onPrintTimerStopped() {
-    dgus_screen_handler.PrintTimerStopped();
+    screen.printTimerStopped();
   }
 
   void onFilamentRunout(const extruder_t extruder) {
-    dgus_screen_handler.filamentRunout(extruder);
+    screen.filamentRunout(extruder);
   }
 
   void onUserConfirmRequired(const char * const msg) {
-    dgus_screen_handler.UserConfirmRequired(msg);
+    screen.userConfirmRequired(msg);
   }
 
   void onStatusChanged(const char * const msg) {
-    dgus_screen_handler.SetStatusMessage(msg);
+    screen.setStatusMessage(msg);
   }
 
   void onHomingStart() {}
@@ -87,25 +87,25 @@ namespace ExtUI {
   void onPrintDone() {}
 
   void onFactoryReset() {
-    dgus_screen_handler.SettingsReset();
+    screen.settingsReset();
   }
 
   void onStoreSettings(char *buff) {
-    dgus_screen_handler.StoreSettings(buff);
+    screen.storeSettings(buff);
   }
 
   void onLoadSettings(const char *buff) {
-    dgus_screen_handler.LoadSettings(buff);
+    screen.loadSettings(buff);
   }
 
   void onPostprocessSettings() {}
 
   void onSettingsStored(const bool success) {
-    dgus_screen_handler.ConfigurationStoreWritten(success);
+    screen.configurationStoreWritten(success);
   }
 
   void onSettingsLoaded(const bool success) {
-    dgus_screen_handler.ConfigurationStoreRead(success);
+    screen.configurationStoreRead(success);
   }
 
   #if HAS_LEVELING
@@ -115,12 +115,12 @@ namespace ExtUI {
 
   #if HAS_MESH
     void onMeshUpdate(const int8_t xpos, const int8_t ypos, const_float_t zval) {
-      dgus_screen_handler.MeshUpdate(xpos, ypos);
+      screen.meshUpdate(xpos, ypos);
     }
 
     void onMeshUpdate(const int8_t xpos, const int8_t ypos, const probe_state_t state) {
       if (state == G29_POINT_FINISH)
-        dgus_screen_handler.MeshUpdate(xpos, ypos);
+        screen.meshUpdate(xpos, ypos);
     }
   #endif
 
@@ -133,14 +133,14 @@ namespace ExtUI {
     }
     void onPowerLossResume() {
       // Called on resume from power-loss
-      dgus_screen_handler.PowerLossResume();
+      screen.powerLossResume();
     }
   #endif
 
   #if HAS_PID_HEATING
     void onPidTuning(const result_t rst) {
       // Called for temperature PID tuning result
-      dgus_screen_handler.PidTuning(rst);
+      screen.pidTuning(rst);
     }
   #endif
 

commit 9e0dcd4a2b6d0262ee2b09170aff0c1f21d9175e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jun 1 16:53:02 2023 -0500

    üßë‚Äçüíª ExtUI::onLevelingStart/Done for all leveling (#25913)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 73dead1b56..6e8f2b0100 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -108,10 +108,12 @@ namespace ExtUI {
     dgus_screen_handler.ConfigurationStoreRead(success);
   }
 
-  #if HAS_MESH
+  #if HAS_LEVELING
     void onLevelingStart() {}
     void onLevelingDone() {}
+  #endif
 
+  #if HAS_MESH
     void onMeshUpdate(const int8_t xpos, const int8_t ypos, const_float_t zval) {
       dgus_screen_handler.MeshUpdate(xpos, ypos);
     }

commit 37d0f49a82cd2e4d91dce4e62671b266924eb2a7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 01:05:55 2023 -0500

    üßë‚Äçüíª Misc. ExtUI LCD cleanup (#25872)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 75ef5f5d66..73dead1b56 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -47,7 +47,7 @@ namespace ExtUI {
   }
 
   void onPrinterKilled(FSTR_P const error, FSTR_P const component) {
-    dgus_screen_handler.PrinterKilled(error, component);
+    dgus_screen_handler.printerKilled(error, component);
   }
 
   void onMediaInserted() { TERN_(HAS_MEDIA, dgus_screen_handler.SDCardInserted()); }
@@ -71,7 +71,7 @@ namespace ExtUI {
   }
 
   void onFilamentRunout(const extruder_t extruder) {
-    dgus_screen_handler.FilamentRunout(extruder);
+    dgus_screen_handler.filamentRunout(extruder);
   }
 
   void onUserConfirmRequired(const char * const msg) {

commit 5664c02d077e028f84a24efd96c2eebe97ce8763
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 22:43:09 2023 -0500

    üßë‚Äçüíª Generalize SDSUPPORT as HAS_MEDIA
    
    In preparation for single- and multi-volume refactoring.

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index fb8ef8cc84..75ef5f5d66 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -50,9 +50,9 @@ namespace ExtUI {
     dgus_screen_handler.PrinterKilled(error, component);
   }
 
-  void onMediaInserted() { TERN_(SDSUPPORT, dgus_screen_handler.SDCardInserted()); }
-  void onMediaError()    { TERN_(SDSUPPORT, dgus_screen_handler.SDCardError()); }
-  void onMediaRemoved()  { TERN_(SDSUPPORT, dgus_screen_handler.SDCardRemoved()); }
+  void onMediaInserted() { TERN_(HAS_MEDIA, dgus_screen_handler.SDCardInserted()); }
+  void onMediaError()    { TERN_(HAS_MEDIA, dgus_screen_handler.SDCardError()); }
+  void onMediaRemoved()  { TERN_(HAS_MEDIA, dgus_screen_handler.SDCardRemoved()); }
 
   void onPlayTone(const uint16_t frequency, const uint16_t duration) {
     dgus_screen_handler.PlayTone(frequency, duration);

commit 91b5015a8b3ec5efd1052fdf7208124ff8b4120b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 22 03:22:29 2023 -0500

    üßë‚Äçüíª ExtUI::onSetPowerLoss

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 9aecf65f98..fb8ef8cc84 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -100,11 +100,11 @@ namespace ExtUI {
 
   void onPostprocessSettings() {}
 
-  void onSettingsStored(bool success) {
+  void onSettingsStored(const bool success) {
     dgus_screen_handler.ConfigurationStoreWritten(success);
   }
 
-  void onSettingsLoaded(bool success) {
+  void onSettingsLoaded(const bool success) {
     dgus_screen_handler.ConfigurationStoreRead(success);
   }
 
@@ -123,6 +123,9 @@ namespace ExtUI {
   #endif
 
   #if ENABLED(POWER_LOSS_RECOVERY)
+    void onSetPowerLoss(const bool onoff) {
+      // Called when power-loss is enabled/disabled
+    }
     void onPowerLoss() {
       // Called when power-loss state is detected
     }

commit c950f0f5d1e6804365506d1718e0a4029fb232cf
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sun Feb 19 11:41:50 2023 -0600

    üßë‚Äçüíª ExtUI::onPowerLoss

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 1ff22da268..9aecf65f98 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -123,6 +123,9 @@ namespace ExtUI {
   #endif
 
   #if ENABLED(POWER_LOSS_RECOVERY)
+    void onPowerLoss() {
+      // Called when power-loss state is detected
+    }
     void onPowerLossResume() {
       // Called on resume from power-loss
       dgus_screen_handler.PowerLossResume();

commit c3fe4abd446336c50bdb892f08fa24a08f1bdda5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 7 22:59:25 2023 -0600

    üî® DGUS_LCD_UI version check

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index f6f2c0f89d..1ff22da268 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -26,7 +26,7 @@
 
 #include "../../../inc/MarlinConfigPre.h"
 
-#if ENABLED(DGUS_LCD_UI_RELOADED)
+#if DGUS_LCD_UI_RELOADED
 
 #include "../ui_api.h"
 #include "DGUSScreenHandler.h"

commit d6fcae40c4ded0901aae33f7a1a9d5049ab12b89
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Mar 29 03:38:25 2022 -0500

    üí• Rename ExtUI settings methods

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 5c330bd6b4..f6f2c0f89d 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -100,11 +100,11 @@ namespace ExtUI {
 
   void onPostprocessSettings() {}
 
-  void onConfigurationStoreWritten(bool success) {
+  void onSettingsStored(bool success) {
     dgus_screen_handler.ConfigurationStoreWritten(success);
   }
 
-  void onConfigurationStoreRead(bool success) {
+  void onSettingsLoaded(bool success) {
     dgus_screen_handler.ConfigurationStoreRead(success);
   }
 

commit 623c6b720b0d9b14934fb8ccb895d421ab043cc9
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Mar 12 15:58:28 2022 -0600

    üßë‚Äçüíª Add ExtUI::onLevelingDone, match DWIN to ExtUI

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 61b072a3f7..5c330bd6b4 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -83,8 +83,8 @@ namespace ExtUI {
   }
 
   void onHomingStart() {}
-  void onHomingComplete() {}
-  void onPrintFinished() {}
+  void onHomingDone() {}
+  void onPrintDone() {}
 
   void onFactoryReset() {
     dgus_screen_handler.SettingsReset();
@@ -109,7 +109,8 @@ namespace ExtUI {
   }
 
   #if HAS_MESH
-    void onMeshLevelingStart() {}
+    void onLevelingStart() {}
+    void onLevelingDone() {}
 
     void onMeshUpdate(const int8_t xpos, const int8_t ypos, const_float_t zval) {
       dgus_screen_handler.MeshUpdate(xpos, ypos);

commit 9d72cbf84b970e5060f8dceef7158b9ca8252856
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 15 15:07:47 2021 -0500

    üí° Update old gnu.org links

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index bf79661b42..61b072a3f7 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit 65b950a489c35b1d5547da3a504af4dad8cde3d7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Sep 28 20:15:52 2021 -0500

    üé® Apply F() to kill / sendinfoscreen

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
index 4d57fbd7e2..bf79661b42 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -46,7 +46,7 @@ namespace ExtUI {
     }
   }
 
-  void onPrinterKilled(PGM_P error, PGM_P component) {
+  void onPrinterKilled(FSTR_P const error, FSTR_P const component) {
     dgus_screen_handler.PrinterKilled(error, component);
   }
 

commit b0e798330d8f5ade4a230e0a91f05482d100bb97
Author: mrv96 <mrv96@users.noreply.github.com>
Date:   Tue Sep 7 02:51:04 2021 +0200

    ‚ú®Add DGUS_LCD_UI_RELOADED (#21931)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
new file mode 100644
index 0000000000..4d57fbd7e2
--- /dev/null
+++ b/Marlin/src/lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
@@ -0,0 +1,142 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * lcd/extui/dgus_reloaded/dgus_reloaded_extui.cpp
+ */
+
+#include "../../../inc/MarlinConfigPre.h"
+
+#if ENABLED(DGUS_LCD_UI_RELOADED)
+
+#include "../ui_api.h"
+#include "DGUSScreenHandler.h"
+
+namespace ExtUI {
+
+  void onStartup() { dgus_screen_handler.Init(); }
+
+  void onIdle() {
+    static bool processing = false;
+
+    // Prevent recursion
+    if (!processing) {
+      processing = true;
+      dgus_screen_handler.Loop();
+      processing = false;
+    }
+  }
+
+  void onPrinterKilled(PGM_P error, PGM_P component) {
+    dgus_screen_handler.PrinterKilled(error, component);
+  }
+
+  void onMediaInserted() { TERN_(SDSUPPORT, dgus_screen_handler.SDCardInserted()); }
+  void onMediaError()    { TERN_(SDSUPPORT, dgus_screen_handler.SDCardError()); }
+  void onMediaRemoved()  { TERN_(SDSUPPORT, dgus_screen_handler.SDCardRemoved()); }
+
+  void onPlayTone(const uint16_t frequency, const uint16_t duration) {
+    dgus_screen_handler.PlayTone(frequency, duration);
+  }
+
+  void onPrintTimerStarted() {
+    dgus_screen_handler.PrintTimerStarted();
+  }
+
+  void onPrintTimerPaused() {
+    dgus_screen_handler.PrintTimerPaused();
+  }
+
+  void onPrintTimerStopped() {
+    dgus_screen_handler.PrintTimerStopped();
+  }
+
+  void onFilamentRunout(const extruder_t extruder) {
+    dgus_screen_handler.FilamentRunout(extruder);
+  }
+
+  void onUserConfirmRequired(const char * const msg) {
+    dgus_screen_handler.UserConfirmRequired(msg);
+  }
+
+  void onStatusChanged(const char * const msg) {
+    dgus_screen_handler.SetStatusMessage(msg);
+  }
+
+  void onHomingStart() {}
+  void onHomingComplete() {}
+  void onPrintFinished() {}
+
+  void onFactoryReset() {
+    dgus_screen_handler.SettingsReset();
+  }
+
+  void onStoreSettings(char *buff) {
+    dgus_screen_handler.StoreSettings(buff);
+  }
+
+  void onLoadSettings(const char *buff) {
+    dgus_screen_handler.LoadSettings(buff);
+  }
+
+  void onPostprocessSettings() {}
+
+  void onConfigurationStoreWritten(bool success) {
+    dgus_screen_handler.ConfigurationStoreWritten(success);
+  }
+
+  void onConfigurationStoreRead(bool success) {
+    dgus_screen_handler.ConfigurationStoreRead(success);
+  }
+
+  #if HAS_MESH
+    void onMeshLevelingStart() {}
+
+    void onMeshUpdate(const int8_t xpos, const int8_t ypos, const_float_t zval) {
+      dgus_screen_handler.MeshUpdate(xpos, ypos);
+    }
+
+    void onMeshUpdate(const int8_t xpos, const int8_t ypos, const probe_state_t state) {
+      if (state == G29_POINT_FINISH)
+        dgus_screen_handler.MeshUpdate(xpos, ypos);
+    }
+  #endif
+
+  #if ENABLED(POWER_LOSS_RECOVERY)
+    void onPowerLossResume() {
+      // Called on resume from power-loss
+      dgus_screen_handler.PowerLossResume();
+    }
+  #endif
+
+  #if HAS_PID_HEATING
+    void onPidTuning(const result_t rst) {
+      // Called for temperature PID tuning result
+      dgus_screen_handler.PidTuning(rst);
+    }
+  #endif
+
+  void onSteppersDisabled() {}
+  void onSteppersEnabled()  {}
+}
+
+#endif // DGUS_LCD_UI_RELOADED
