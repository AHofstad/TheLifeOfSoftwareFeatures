commit bc385122e94d7eda79bdf1573a7c2071c4589da2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 13:34:13 2023 -0500

    üé® Lowercase method / data member names (#25914)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
index b81b142d84..9143b83554 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
+++ b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
@@ -26,78 +26,78 @@
 
 namespace DGUSRxHandler {
 
-  void ScreenChange(DGUS_VP &, void *);
+  void screenChange(DGUS_VP &, void *);
 
   #if HAS_MEDIA
-    void Scroll(DGUS_VP &, void *);
+    void scroll(DGUS_VP &, void *);
     void selectFile(DGUS_VP &, void *);
-    void PrintFile(DGUS_VP &, void *);
+    void printFile(DGUS_VP &, void *);
   #endif
 
-  void PrintAbort(DGUS_VP &, void *);
-  void PrintPause(DGUS_VP &, void *);
-  void PrintResume(DGUS_VP &, void *);
+  void printAbort(DGUS_VP &, void *);
+  void printPause(DGUS_VP &, void *);
+  void printResume(DGUS_VP &, void *);
 
-  void Feedrate(DGUS_VP &, void *);
-  void Flowrate(DGUS_VP &, void *);
-  void BabystepSet(DGUS_VP &, void *);
-  void Babystep(DGUS_VP &, void *);
+  void feedrate(DGUS_VP &, void *);
+  void flowrate(DGUS_VP &, void *);
+  void babystepSet(DGUS_VP &, void *);
+  void babystep(DGUS_VP &, void *);
 
-  void TempPreset(DGUS_VP &, void *);
-  void TempTarget(DGUS_VP &, void *);
-  void TempCool(DGUS_VP &, void *);
+  void tempPreset(DGUS_VP &, void *);
+  void tempTarget(DGUS_VP &, void *);
+  void tempCool(DGUS_VP &, void *);
 
-  void Steppers(DGUS_VP &, void *);
+  void steppers(DGUS_VP &, void *);
 
-  void ZOffset(DGUS_VP &, void *);
-  void ZOffsetStep(DGUS_VP &, void *);
-  void ZOffsetSetStep(DGUS_VP &, void *);
+  void zOffset(DGUS_VP &, void *);
+  void zOffsetStep(DGUS_VP &, void *);
+  void zOffsetSetStep(DGUS_VP &, void *);
 
-  void MoveToPoint(DGUS_VP &, void *);
+  void moveToPoint(DGUS_VP &, void *);
 
-  void Probe(DGUS_VP &, void *);
-  void DisableABL(DGUS_VP &, void *);
+  void probe(DGUS_VP &, void *);
+  void disableABL(DGUS_VP &, void *);
 
-  void FilamentSelect(DGUS_VP &, void *);
-  void FilamentLength(DGUS_VP &, void *);
-  void FilamentMove(DGUS_VP &, void *);
+  void filamentSelect(DGUS_VP &, void *);
+  void filamentLength(DGUS_VP &, void *);
+  void filamentMove(DGUS_VP &, void *);
 
-  void Home(DGUS_VP &, void *);
-  void Move(DGUS_VP &, void *);
-  void MoveStep(DGUS_VP &, void *);
-  void MoveSetStep(DGUS_VP &, void *);
+  void home(DGUS_VP &, void *);
+  void move(DGUS_VP &, void *);
+  void moveStep(DGUS_VP &, void *);
+  void moveSetStep(DGUS_VP &, void *);
 
-  void GcodeClear(DGUS_VP &, void *);
-  void GcodeExecute(DGUS_VP &, void *);
+  void gcodeClear(DGUS_VP &, void *);
+  void gcodeExecute(DGUS_VP &, void *);
 
-  void ResetEEPROM(DGUS_VP &, void *);
+  void resetEEPROM(DGUS_VP &, void *);
 
-  void SettingsExtra(DGUS_VP &, void *);
+  void settingsExtra(DGUS_VP &, void *);
 
-  void PIDSelect(DGUS_VP &, void *);
-  void PIDSetTemp(DGUS_VP &, void *);
-  void PIDRun(DGUS_VP &, void *);
+  void pidSelect(DGUS_VP &, void *);
+  void pidSetTemp(DGUS_VP &, void *);
+  void pidRun(DGUS_VP &, void *);
 
   #if ENABLED(POWER_LOSS_RECOVERY)
-    void PowerLossAbort(DGUS_VP &, void *);
-    void PowerLossResume(DGUS_VP &, void *);
+    void powerLossAbort(DGUS_VP &, void *);
+    void powerLossResume(DGUS_VP &, void *);
   #endif
 
-  void WaitAbort(DGUS_VP &, void *);
-  void WaitContinue(DGUS_VP &, void *);
+  void waitAbort(DGUS_VP &, void *);
+  void waitContinue(DGUS_VP &, void *);
 
-  void FanSpeed(DGUS_VP &, void *);
+  void fanSpeed(DGUS_VP &, void *);
 
-  void Volume(DGUS_VP &, void *);
+  void volume(DGUS_VP &, void *);
 
-  void Brightness(DGUS_VP &, void *);
+  void brightness(DGUS_VP &, void *);
 
-  void Debug(DGUS_VP &, void *);
+  void debug(DGUS_VP &, void *);
 
-  void StringToExtra(DGUS_VP &, void *);
+  void stringToExtra(DGUS_VP &, void *);
 
   template<typename T>
-  void IntegerToExtra(DGUS_VP &vp, void *data_ptr) {
+  void integerToExtra(DGUS_VP &vp, void *data_ptr) {
     if (!vp.size || !vp.extra) return;
     switch (vp.size) {
       default: return;
@@ -112,7 +112,7 @@ namespace DGUSRxHandler {
         break;
       }
       case 4: {
-        const uint32_t data = dgus_display.SwapBytes(*(uint32_t*)data_ptr);
+        const uint32_t data = dgus.swapBytes(*(uint32_t*)data_ptr);
         *(T*)vp.extra = (T)data;
         break;
       }

commit 37d0f49a82cd2e4d91dce4e62671b266924eb2a7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 01:05:55 2023 -0500

    üßë‚Äçüíª Misc. ExtUI LCD cleanup (#25872)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
index d6d5855b9d..b81b142d84 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
+++ b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
@@ -30,7 +30,7 @@ namespace DGUSRxHandler {
 
   #if HAS_MEDIA
     void Scroll(DGUS_VP &, void *);
-    void SelectFile(DGUS_VP &, void *);
+    void selectFile(DGUS_VP &, void *);
     void PrintFile(DGUS_VP &, void *);
   #endif
 

commit 5664c02d077e028f84a24efd96c2eebe97ce8763
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 22:43:09 2023 -0500

    üßë‚Äçüíª Generalize SDSUPPORT as HAS_MEDIA
    
    In preparation for single- and multi-volume refactoring.

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
index 4cad11fc0b..d6d5855b9d 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
+++ b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
@@ -28,7 +28,7 @@ namespace DGUSRxHandler {
 
   void ScreenChange(DGUS_VP &, void *);
 
-  #if ENABLED(SDSUPPORT)
+  #if HAS_MEDIA
     void Scroll(DGUS_VP &, void *);
     void SelectFile(DGUS_VP &, void *);
     void PrintFile(DGUS_VP &, void *);

commit 4ae9bf3b9d8c8f1c0be723e4ce163492b267fc87
Author: Protomosh <43253582+Protomosh@users.noreply.github.com>
Date:   Fri Aug 19 20:57:27 2022 +0300

    üêõ Fix DGUS Reloaded + STM32 (#24600)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
index c2e6e4308e..4cad11fc0b 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
+++ b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
@@ -107,7 +107,7 @@ namespace DGUSRxHandler {
         break;
       }
       case 2: {
-        const uint16_t data = Swap16(*(uint16_t*)data_ptr);
+        const uint16_t data = BE16_P(data_ptr);
         *(T*)vp.extra = (T)data;
         break;
       }

commit 9d72cbf84b970e5060f8dceef7158b9ca8252856
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 15 15:07:47 2021 -0500

    üí° Update old gnu.org links

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
index 593b2e3bb8..c2e6e4308e 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
+++ b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 #pragma once

commit 323b38ee88dbf2a4691a20439dbb95a824822199
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Thu Sep 16 04:36:26 2021 -0500

    üí° Adjust headers, formatting

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
index d092d3a5b7..593b2e3bb8 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
+++ b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
@@ -19,7 +19,6 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
-
 #pragma once
 
 #include "DGUSDisplay.h"

commit b0e798330d8f5ade4a230e0a91f05482d100bb97
Author: mrv96 <mrv96@users.noreply.github.com>
Date:   Tue Sep 7 02:51:04 2021 +0200

    ‚ú®Add DGUS_LCD_UI_RELOADED (#21931)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
new file mode 100644
index 0000000000..d092d3a5b7
--- /dev/null
+++ b/Marlin/src/lcd/extui/dgus_reloaded/DGUSRxHandler.h
@@ -0,0 +1,123 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#pragma once
+
+#include "DGUSDisplay.h"
+#include "definition/DGUS_VP.h"
+
+namespace DGUSRxHandler {
+
+  void ScreenChange(DGUS_VP &, void *);
+
+  #if ENABLED(SDSUPPORT)
+    void Scroll(DGUS_VP &, void *);
+    void SelectFile(DGUS_VP &, void *);
+    void PrintFile(DGUS_VP &, void *);
+  #endif
+
+  void PrintAbort(DGUS_VP &, void *);
+  void PrintPause(DGUS_VP &, void *);
+  void PrintResume(DGUS_VP &, void *);
+
+  void Feedrate(DGUS_VP &, void *);
+  void Flowrate(DGUS_VP &, void *);
+  void BabystepSet(DGUS_VP &, void *);
+  void Babystep(DGUS_VP &, void *);
+
+  void TempPreset(DGUS_VP &, void *);
+  void TempTarget(DGUS_VP &, void *);
+  void TempCool(DGUS_VP &, void *);
+
+  void Steppers(DGUS_VP &, void *);
+
+  void ZOffset(DGUS_VP &, void *);
+  void ZOffsetStep(DGUS_VP &, void *);
+  void ZOffsetSetStep(DGUS_VP &, void *);
+
+  void MoveToPoint(DGUS_VP &, void *);
+
+  void Probe(DGUS_VP &, void *);
+  void DisableABL(DGUS_VP &, void *);
+
+  void FilamentSelect(DGUS_VP &, void *);
+  void FilamentLength(DGUS_VP &, void *);
+  void FilamentMove(DGUS_VP &, void *);
+
+  void Home(DGUS_VP &, void *);
+  void Move(DGUS_VP &, void *);
+  void MoveStep(DGUS_VP &, void *);
+  void MoveSetStep(DGUS_VP &, void *);
+
+  void GcodeClear(DGUS_VP &, void *);
+  void GcodeExecute(DGUS_VP &, void *);
+
+  void ResetEEPROM(DGUS_VP &, void *);
+
+  void SettingsExtra(DGUS_VP &, void *);
+
+  void PIDSelect(DGUS_VP &, void *);
+  void PIDSetTemp(DGUS_VP &, void *);
+  void PIDRun(DGUS_VP &, void *);
+
+  #if ENABLED(POWER_LOSS_RECOVERY)
+    void PowerLossAbort(DGUS_VP &, void *);
+    void PowerLossResume(DGUS_VP &, void *);
+  #endif
+
+  void WaitAbort(DGUS_VP &, void *);
+  void WaitContinue(DGUS_VP &, void *);
+
+  void FanSpeed(DGUS_VP &, void *);
+
+  void Volume(DGUS_VP &, void *);
+
+  void Brightness(DGUS_VP &, void *);
+
+  void Debug(DGUS_VP &, void *);
+
+  void StringToExtra(DGUS_VP &, void *);
+
+  template<typename T>
+  void IntegerToExtra(DGUS_VP &vp, void *data_ptr) {
+    if (!vp.size || !vp.extra) return;
+    switch (vp.size) {
+      default: return;
+      case 1: {
+        const uint8_t data = *(uint8_t*)data_ptr;
+        *(T*)vp.extra = (T)data;
+        break;
+      }
+      case 2: {
+        const uint16_t data = Swap16(*(uint16_t*)data_ptr);
+        *(T*)vp.extra = (T)data;
+        break;
+      }
+      case 4: {
+        const uint32_t data = dgus_display.SwapBytes(*(uint32_t*)data_ptr);
+        *(T*)vp.extra = (T)data;
+        break;
+      }
+    }
+  }
+
+}
