commit bc385122e94d7eda79bdf1573a7c2071c4589da2
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Jun 2 13:34:13 2023 -0500

    🎨 Lowercase method / data member names (#25914)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index 69f792c45d..172cf98fe6 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -75,248 +75,248 @@ const struct DGUS_VP vp_list[] PROGMEM = {
 
   // READ-ONLY VARIABLES
 
-  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE,          &DGUSRxHandler::ScreenChange),
-  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_SD,       &DGUSRxHandler::ScreenChange),
-  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Idle,     &DGUSRxHandler::ScreenChange),
-  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Printing, &DGUSRxHandler::ScreenChange),
+  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE,          &DGUSRxHandler::screenChange),
+  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_SD,       &DGUSRxHandler::screenChange),
+  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Idle,     &DGUSRxHandler::screenChange),
+  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Printing, &DGUSRxHandler::screenChange),
 
   #if HAS_MEDIA
     VP_HELPER_RX(DGUS_Addr::SD_SelectFile,   &DGUSRxHandler::selectFile),
-    VP_HELPER_RX(DGUS_Addr::SD_Scroll,       &DGUSRxHandler::Scroll),
-    VP_HELPER_RX_NODATA(DGUS_Addr::SD_Print, &DGUSRxHandler::PrintFile),
+    VP_HELPER_RX(DGUS_Addr::SD_Scroll,       &DGUSRxHandler::scroll),
+    VP_HELPER_RX_NODATA(DGUS_Addr::SD_Print, &DGUSRxHandler::printFile),
   #endif
 
-  VP_HELPER_RX(DGUS_Addr::STATUS_Abort,  &DGUSRxHandler::PrintAbort),
-  VP_HELPER_RX(DGUS_Addr::STATUS_Pause,  &DGUSRxHandler::PrintPause),
-  VP_HELPER_RX(DGUS_Addr::STATUS_Resume, &DGUSRxHandler::PrintResume),
+  VP_HELPER_RX(DGUS_Addr::STATUS_Abort,  &DGUSRxHandler::printAbort),
+  VP_HELPER_RX(DGUS_Addr::STATUS_Pause,  &DGUSRxHandler::printPause),
+  VP_HELPER_RX(DGUS_Addr::STATUS_Resume, &DGUSRxHandler::printResume),
 
-  VP_HELPER_RX(DGUS_Addr::ADJUST_SetFeedrate,     &DGUSRxHandler::Feedrate),
-  VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_CUR, &DGUSRxHandler::Flowrate),
+  VP_HELPER_RX(DGUS_Addr::ADJUST_SetFeedrate,     &DGUSRxHandler::feedrate),
+  VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_CUR, &DGUSRxHandler::flowrate),
   #if HAS_MULTI_EXTRUDER
-    VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_E0,  &DGUSRxHandler::Flowrate),
-    VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_E1,  &DGUSRxHandler::Flowrate),
+    VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_E0,  &DGUSRxHandler::flowrate),
+    VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_E1,  &DGUSRxHandler::flowrate),
   #endif
-  VP_HELPER_RX(DGUS_Addr::ADJUST_SetBabystep,     &DGUSRxHandler::BabystepSet),
-  VP_HELPER_RX(DGUS_Addr::ADJUST_Babystep,        &DGUSRxHandler::Babystep),
+  VP_HELPER_RX(DGUS_Addr::ADJUST_SetBabystep,     &DGUSRxHandler::babystepSet),
+  VP_HELPER_RX(DGUS_Addr::ADJUST_Babystep,        &DGUSRxHandler::babystep),
 
-  VP_HELPER_RX(DGUS_Addr::TEMP_Preset,        &DGUSRxHandler::TempPreset),
-  VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_Bed, &DGUSRxHandler::TempTarget),
-  VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_H0,  &DGUSRxHandler::TempTarget),
+  VP_HELPER_RX(DGUS_Addr::TEMP_Preset,        &DGUSRxHandler::tempPreset),
+  VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_Bed, &DGUSRxHandler::tempTarget),
+  VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_H0,  &DGUSRxHandler::tempTarget),
   #if HAS_MULTI_HOTEND
-    VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_H1,  &DGUSRxHandler::TempTarget),
+    VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_H1,  &DGUSRxHandler::tempTarget),
   #endif
-  VP_HELPER_RX(DGUS_Addr::TEMP_Cool,          &DGUSRxHandler::TempCool),
+  VP_HELPER_RX(DGUS_Addr::TEMP_Cool,          &DGUSRxHandler::tempCool),
 
-  VP_HELPER_RX(DGUS_Addr::STEPPER_Control, &DGUSRxHandler::Steppers),
+  VP_HELPER_RX(DGUS_Addr::STEPPER_Control, &DGUSRxHandler::steppers),
 
-  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_Set,     &DGUSRxHandler::ZOffset),
-  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_Step,    &DGUSRxHandler::ZOffsetStep),
-  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_SetStep, &DGUSRxHandler::ZOffsetSetStep),
+  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_Set,     &DGUSRxHandler::zOffset),
+  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_Step,    &DGUSRxHandler::zOffsetStep),
+  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_SetStep, &DGUSRxHandler::zOffsetSetStep),
 
-  VP_HELPER_RX(DGUS_Addr::LEVEL_MANUAL_Point, &DGUSRxHandler::MoveToPoint),
+  VP_HELPER_RX(DGUS_Addr::LEVEL_MANUAL_Point, &DGUSRxHandler::moveToPoint),
 
-  VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Probe,   &DGUSRxHandler::Probe),
-  VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Disable, &DGUSRxHandler::DisableABL),
+  VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Probe,   &DGUSRxHandler::probe),
+  VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Disable, &DGUSRxHandler::disableABL),
 
-  VP_HELPER_RX(DGUS_Addr::FILAMENT_Select,    &DGUSRxHandler::FilamentSelect),
-  VP_HELPER_RX(DGUS_Addr::FILAMENT_SetLength, &DGUSRxHandler::FilamentLength),
-  VP_HELPER_RX(DGUS_Addr::FILAMENT_Move,      &DGUSRxHandler::FilamentMove),
+  VP_HELPER_RX(DGUS_Addr::FILAMENT_Select,    &DGUSRxHandler::filamentSelect),
+  VP_HELPER_RX(DGUS_Addr::FILAMENT_SetLength, &DGUSRxHandler::filamentLength),
+  VP_HELPER_RX(DGUS_Addr::FILAMENT_Move,      &DGUSRxHandler::filamentMove),
 
-  VP_HELPER_RX(DGUS_Addr::MOVE_Home,    &DGUSRxHandler::Home),
-  VP_HELPER_RX(DGUS_Addr::MOVE_SetX,    &DGUSRxHandler::Move),
-  VP_HELPER_RX(DGUS_Addr::MOVE_SetY,    &DGUSRxHandler::Move),
-  VP_HELPER_RX(DGUS_Addr::MOVE_SetZ,    &DGUSRxHandler::Move),
-  VP_HELPER_RX(DGUS_Addr::MOVE_Step,    &DGUSRxHandler::MoveStep),
-  VP_HELPER_RX(DGUS_Addr::MOVE_SetStep, &DGUSRxHandler::MoveSetStep),
+  VP_HELPER_RX(DGUS_Addr::MOVE_Home,    &DGUSRxHandler::home),
+  VP_HELPER_RX(DGUS_Addr::MOVE_SetX,    &DGUSRxHandler::move),
+  VP_HELPER_RX(DGUS_Addr::MOVE_SetY,    &DGUSRxHandler::move),
+  VP_HELPER_RX(DGUS_Addr::MOVE_SetZ,    &DGUSRxHandler::move),
+  VP_HELPER_RX(DGUS_Addr::MOVE_Step,    &DGUSRxHandler::moveStep),
+  VP_HELPER_RX(DGUS_Addr::MOVE_SetStep, &DGUSRxHandler::moveSetStep),
 
-  VP_HELPER_RX_NODATA(DGUS_Addr::GCODE_Clear,   &DGUSRxHandler::GcodeClear),
-  VP_HELPER_RX_NODATA(DGUS_Addr::GCODE_Execute, &DGUSRxHandler::GcodeExecute),
+  VP_HELPER_RX_NODATA(DGUS_Addr::GCODE_Clear,   &DGUSRxHandler::gcodeClear),
+  VP_HELPER_RX_NODATA(DGUS_Addr::GCODE_Execute, &DGUSRxHandler::gcodeExecute),
 
-  VP_HELPER_RX(DGUS_Addr::EEPROM_Reset, &DGUSRxHandler::ResetEEPROM),
+  VP_HELPER_RX(DGUS_Addr::EEPROM_Reset, &DGUSRxHandler::resetEEPROM),
 
-  VP_HELPER_RX(DGUS_Addr::SETTINGS2_Extra, &DGUSRxHandler::SettingsExtra),
+  VP_HELPER_RX(DGUS_Addr::SETTINGS2_Extra, &DGUSRxHandler::settingsExtra),
 
-  VP_HELPER_RX(DGUS_Addr::PID_Select,     &DGUSRxHandler::PIDSelect),
-  VP_HELPER_RX(DGUS_Addr::PID_SetTemp,    &DGUSRxHandler::PIDSetTemp),
-  VP_HELPER_RX_NODATA(DGUS_Addr::PID_Run, &DGUSRxHandler::PIDRun),
+  VP_HELPER_RX(DGUS_Addr::PID_Select,     &DGUSRxHandler::pidSelect),
+  VP_HELPER_RX(DGUS_Addr::PID_SetTemp,    &DGUSRxHandler::pidSetTemp),
+  VP_HELPER_RX_NODATA(DGUS_Addr::PID_Run, &DGUSRxHandler::pidRun),
 
   #if ENABLED(POWER_LOSS_RECOVERY)
-    VP_HELPER_RX(DGUS_Addr::POWERLOSS_Abort,  &DGUSRxHandler::PowerLossAbort),
-    VP_HELPER_RX(DGUS_Addr::POWERLOSS_Resume, &DGUSRxHandler::PowerLossResume),
+    VP_HELPER_RX(DGUS_Addr::POWERLOSS_Abort,  &DGUSRxHandler::powerLossAbort),
+    VP_HELPER_RX(DGUS_Addr::POWERLOSS_Resume, &DGUSRxHandler::powerLossResume),
   #endif
 
-  VP_HELPER_RX(DGUS_Addr::WAIT_Abort, &DGUSRxHandler::WaitAbort),
-  VP_HELPER_RX_NODATA(DGUS_Addr::WAIT_Continue, &DGUSRxHandler::WaitContinue),
+  VP_HELPER_RX(DGUS_Addr::WAIT_Abort, &DGUSRxHandler::waitAbort),
+  VP_HELPER_RX_NODATA(DGUS_Addr::WAIT_Continue, &DGUSRxHandler::waitContinue),
 
   // WRITE-ONLY VARIABLES
 
   #if HAS_MEDIA
-    VP_HELPER_TX(DGUS_Addr::SD_Type, &DGUSTxHandler::FileType),
+    VP_HELPER_TX(DGUS_Addr::SD_Type, &DGUSTxHandler::fileType),
     VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName0,
                       DGUS_FILENAME_LEN,
-                      &DGUSTxHandler::FileName),
+                      &DGUSTxHandler::fileName),
     VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName1,
                       DGUS_FILENAME_LEN,
-                      &DGUSTxHandler::FileName),
+                      &DGUSTxHandler::fileName),
     VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName2,
                       DGUS_FILENAME_LEN,
-                      &DGUSTxHandler::FileName),
+                      &DGUSTxHandler::fileName),
     VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName3,
                       DGUS_FILENAME_LEN,
-                      &DGUSTxHandler::FileName),
+                      &DGUSTxHandler::fileName),
     VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName4,
                       DGUS_FILENAME_LEN,
-                      &DGUSTxHandler::FileName),
-    VP_HELPER_TX(DGUS_Addr::SD_ScrollIcons, &DGUSTxHandler::ScrollIcons),
+                      &DGUSTxHandler::fileName),
+    VP_HELPER_TX(DGUS_Addr::SD_ScrollIcons, &DGUSTxHandler::scrollIcons),
     VP_HELPER_TX_SIZE(DGUS_Addr::SD_SelectedFileName,
                       DGUS_FILENAME_LEN,
-                      &DGUSTxHandler::SelectedFileName),
+                      &DGUSTxHandler::selectedFileName),
   #endif
 
   VP_HELPER_TX_AUTO(DGUS_Addr::STATUS_PositionZ,
                     nullptr,
-                    &DGUSTxHandler::PositionZ),
+                    &DGUSTxHandler::zPosition),
   VP_HELPER(DGUS_Addr::STATUS_Elapsed,
             DGUS_ELAPSED_LEN,
             VPFLAG_AUTOUPLOAD,
             nullptr,
             nullptr,
-            &DGUSTxHandler::Elapsed),
+            &DGUSTxHandler::elapsed),
   VP_HELPER_TX_AUTO(DGUS_Addr::STATUS_Percent,
                     nullptr,
-                    &DGUSTxHandler::Percent),
-  VP_HELPER_TX(DGUS_Addr::STATUS_Icons, &DGUSTxHandler::StatusIcons),
+                    &DGUSTxHandler::percent),
+  VP_HELPER_TX(DGUS_Addr::STATUS_Icons, &DGUSTxHandler::statusIcons),
 
   VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Feedrate,
                     &feedrate_percentage,
-                    &DGUSTxHandler::ExtraToInteger<int16_t>),
+                    &DGUSTxHandler::extraToInteger<int16_t>),
   VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Flowrate_CUR,
                     nullptr,
-                    &DGUSTxHandler::Flowrate),
+                    &DGUSTxHandler::flowrate),
   #if HAS_MULTI_EXTRUDER
     VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Flowrate_E0,
                       nullptr,
-                      &DGUSTxHandler::Flowrate),
+                      &DGUSTxHandler::flowrate),
     VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Flowrate_E1,
                       nullptr,
-                      &DGUSTxHandler::Flowrate),
+                      &DGUSTxHandler::flowrate),
   #endif
 
   VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_Bed,
                     &thermalManager.temp_bed.celsius,
-                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+                    (&DGUSTxHandler::extraToFixedPoint<float, 1>)),
   VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_Bed,
                     &thermalManager.temp_bed.target,
-                    &DGUSTxHandler::ExtraToInteger<int16_t>),
-  VP_HELPER_TX(DGUS_Addr::TEMP_Max_Bed, &DGUSTxHandler::TempMax),
+                    &DGUSTxHandler::extraToInteger<int16_t>),
+  VP_HELPER_TX(DGUS_Addr::TEMP_Max_Bed, &DGUSTxHandler::tempMax),
   VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_H0,
                     &thermalManager.temp_hotend[ExtUI::heater_t::H0].celsius,
-                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+                    (&DGUSTxHandler::extraToFixedPoint<float, 1>)),
   VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_H0,
                     &thermalManager.temp_hotend[ExtUI::heater_t::H0].target,
-                    &DGUSTxHandler::ExtraToInteger<int16_t>),
-  VP_HELPER_TX(DGUS_Addr::TEMP_Max_H0, &DGUSTxHandler::TempMax),
+                    &DGUSTxHandler::extraToInteger<int16_t>),
+  VP_HELPER_TX(DGUS_Addr::TEMP_Max_H0, &DGUSTxHandler::tempMax),
   #if HAS_MULTI_HOTEND
     VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_H1,
                       &thermalManager.temp_hotend[ExtUI::heater_t::H1].celsius,
-                     (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+                     (&DGUSTxHandler::extraToFixedPoint<float, 1>)),
     VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_H1,
                       &thermalManager.temp_hotend[ExtUI::heater_t::H1].target,
-                      &DGUSTxHandler::ExtraToInteger<int16_t>),
-    VP_HELPER_TX(DGUS_Addr::TEMP_Max_H1, &DGUSTxHandler::TempMax),
+                      &DGUSTxHandler::extraToInteger<int16_t>),
+    VP_HELPER_TX(DGUS_Addr::TEMP_Max_H1, &DGUSTxHandler::tempMax),
   #endif
 
   VP_HELPER_TX_AUTO(DGUS_Addr::STEPPER_Status,
                     nullptr,
-                    &DGUSTxHandler::StepperStatus),
+                    &DGUSTxHandler::stepperStatus),
 
   VP_HELPER_TX_AUTO(DGUS_Addr::LEVEL_OFFSET_Current,
                     &probe.offset.z,
-                    (&DGUSTxHandler::ExtraToFixedPoint<float, 2>)),
+                    (&DGUSTxHandler::extraToFixedPoint<float, 2>)),
   VP_HELPER_TX_EXTRA(DGUS_Addr::LEVEL_OFFSET_StepIcons,
                      &DGUSScreenHandler::offset_steps,
-                     &DGUSTxHandler::StepIcons),
+                     &DGUSTxHandler::stepIcons),
 
   VP_HELPER_TX_AUTO(DGUS_Addr::LEVEL_AUTO_DisableIcon,
                     nullptr,
-                    &DGUSTxHandler::ABLDisableIcon),
-  VP_HELPER_TX(DGUS_Addr::LEVEL_AUTO_Grid, &DGUSTxHandler::ABLGrid),
+                    &DGUSTxHandler::ablDisableIcon),
+  VP_HELPER_TX(DGUS_Addr::LEVEL_AUTO_Grid, &DGUSTxHandler::ablGrid),
 
   VP_HELPER_TX_EXTRA(DGUS_Addr::LEVEL_PROBING_Icons1,
                      &DGUSScreenHandler::probing_icons[0],
-                     &DGUSTxHandler::ExtraToInteger<uint16_t>),
+                     &DGUSTxHandler::extraToInteger<uint16_t>),
   VP_HELPER_TX_EXTRA(DGUS_Addr::LEVEL_PROBING_Icons2,
                      &DGUSScreenHandler::probing_icons[1],
-                     &DGUSTxHandler::ExtraToInteger<uint16_t>),
+                     &DGUSTxHandler::extraToInteger<uint16_t>),
 
-  VP_HELPER_TX(DGUS_Addr::FILAMENT_ExtruderIcons, &DGUSTxHandler::FilamentIcons),
+  VP_HELPER_TX(DGUS_Addr::FILAMENT_ExtruderIcons, &DGUSTxHandler::filamentIcons),
   VP_HELPER_TX_EXTRA(DGUS_Addr::FILAMENT_Length,
                      &DGUSScreenHandler::filament_length,
-                     &DGUSTxHandler::ExtraToInteger<uint16_t>),
+                     &DGUSTxHandler::extraToInteger<uint16_t>),
 
   VP_HELPER_TX_AUTO(DGUS_Addr::MOVE_CurrentX,
                     &current_position.x,
-                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+                    (&DGUSTxHandler::extraToFixedPoint<float, 1>)),
   VP_HELPER_TX_AUTO(DGUS_Addr::MOVE_CurrentY,
                     &current_position.y,
-                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+                    (&DGUSTxHandler::extraToFixedPoint<float, 1>)),
   VP_HELPER_TX_AUTO(DGUS_Addr::MOVE_CurrentZ,
                     &current_position.z,
-                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+                    (&DGUSTxHandler::extraToFixedPoint<float, 1>)),
   VP_HELPER_TX_EXTRA(DGUS_Addr::MOVE_StepIcons,
                      &DGUSScreenHandler::move_steps,
-                     &DGUSTxHandler::StepIcons),
+                     &DGUSTxHandler::stepIcons),
 
-  VP_HELPER_TX(DGUS_Addr::SETTINGS2_BLTouch, &DGUSTxHandler::BLTouch),
+  VP_HELPER_TX(DGUS_Addr::SETTINGS2_BLTouch, &DGUSTxHandler::blTouch),
 
-  VP_HELPER_TX(DGUS_Addr::PID_HeaterIcons, &DGUSTxHandler::PIDIcons),
+  VP_HELPER_TX(DGUS_Addr::PID_HeaterIcons, &DGUSTxHandler::pidIcons),
   VP_HELPER_TX_EXTRA(DGUS_Addr::PID_Temp,
                      &DGUSScreenHandler::pid_temp,
-                     &DGUSTxHandler::ExtraToInteger<uint16_t>),
+                     &DGUSTxHandler::extraToInteger<uint16_t>),
   VP_HELPER_DWORD(DGUS_Addr::PID_Kp,
                   VPFLAG_AUTOUPLOAD,
                   nullptr,
                   nullptr,
-                  &DGUSTxHandler::PIDKp),
+                  &DGUSTxHandler::pidKp),
   VP_HELPER_DWORD(DGUS_Addr::PID_Ki,
                   VPFLAG_AUTOUPLOAD,
                   nullptr,
                   nullptr,
-                  &DGUSTxHandler::PIDKi),
+                  &DGUSTxHandler::pidKi),
   VP_HELPER_DWORD(DGUS_Addr::PID_Kd,
                   VPFLAG_AUTOUPLOAD,
                   nullptr,
                   nullptr,
-                  &DGUSTxHandler::PIDKd),
+                  &DGUSTxHandler::pidKd),
 
   VP_HELPER(DGUS_Addr::INFOS_Machine,
             DGUS_MACHINE_LEN,
             VPFLAG_NONE,
             (void*)DGUS_MACHINENAME,
             nullptr,
-            &DGUSTxHandler::ExtraPGMToString),
+            &DGUSTxHandler::extraPGMToString),
   VP_HELPER_TX_SIZE(DGUS_Addr::INFOS_BuildVolume,
                     DGUS_BUILDVOLUME_LEN,
-                    &DGUSTxHandler::BuildVolume),
+                    &DGUSTxHandler::buildVolume),
   VP_HELPER(DGUS_Addr::INFOS_Version,
             DGUS_VERSION_LEN,
             VPFLAG_NONE,
             (void*)DGUS_MARLINVERSION,
             nullptr,
-            &DGUSTxHandler::ExtraPGMToString),
-  VP_HELPER_TX(DGUS_Addr::INFOS_TotalPrints, &DGUSTxHandler::TotalPrints),
-  VP_HELPER_TX(DGUS_Addr::INFOS_FinishedPrints, &DGUSTxHandler::FinishedPrints),
+            &DGUSTxHandler::extraPGMToString),
+  VP_HELPER_TX(DGUS_Addr::INFOS_TotalPrints, &DGUSTxHandler::totalPrints),
+  VP_HELPER_TX(DGUS_Addr::INFOS_FinishedPrints, &DGUSTxHandler::finishedPrints),
   VP_HELPER_TX_SIZE(DGUS_Addr::INFOS_PrintTime,
                     DGUS_PRINTTIME_LEN,
-                    &DGUSTxHandler::PrintTime),
+                    &DGUSTxHandler::printTime),
   VP_HELPER_TX_SIZE(DGUS_Addr::INFOS_LongestPrint,
                     DGUS_LONGESTPRINT_LEN,
-                    &DGUSTxHandler::LongestPrint),
+                    &DGUSTxHandler::longestPrint),
   VP_HELPER_TX_SIZE(DGUS_Addr::INFOS_FilamentUsed,
                     DGUS_FILAMENTUSED_LEN,
-                    &DGUSTxHandler::FilamentUsed),
+                    &DGUSTxHandler::filamentUsed),
 
-  VP_HELPER_TX(DGUS_Addr::WAIT_Icons, &DGUSTxHandler::WaitIcons),
+  VP_HELPER_TX(DGUS_Addr::WAIT_Icons, &DGUSTxHandler::waitIcons),
 
   // READ-WRITE VARIABLES
 
@@ -324,41 +324,41 @@ const struct DGUS_VP vp_list[] PROGMEM = {
             2,
             VPFLAG_AUTOUPLOAD,
             nullptr,
-            &DGUSRxHandler::FanSpeed,
-            &DGUSTxHandler::FanSpeed),
+            &DGUSRxHandler::fanSpeed,
+            &DGUSTxHandler::fanSpeed),
 
   VP_HELPER(DGUS_Addr::GCODE_Data,
             DGUS_GCODE_LEN,
             VPFLAG_RXSTRING,
             (void*)DGUSScreenHandler::gcode,
-            &DGUSRxHandler::StringToExtra,
-            &DGUSTxHandler::ExtraToString),
+            &DGUSRxHandler::stringToExtra,
+            &DGUSTxHandler::extraToString),
 
   VP_HELPER(DGUS_Addr::PID_Cycles,
             2,
             VPFLAG_NONE,
             &DGUSScreenHandler::pid_cycles,
-            &DGUSRxHandler::IntegerToExtra<uint8_t>,
-            &DGUSTxHandler::ExtraToInteger<uint8_t>),
+            &DGUSRxHandler::integerToExtra<uint8_t>,
+            &DGUSTxHandler::extraToInteger<uint8_t>),
 
   VP_HELPER(DGUS_Addr::VOLUME_Level,
             2,
             VPFLAG_NONE,
             nullptr,
-            &DGUSRxHandler::Volume,
-            &DGUSTxHandler::Volume),
+            &DGUSRxHandler::volume,
+            &DGUSTxHandler::volume),
 
   VP_HELPER(DGUS_Addr::BRIGHTNESS_Level,
             2,
             VPFLAG_NONE,
             nullptr,
-            &DGUSRxHandler::Brightness,
-            &DGUSTxHandler::Brightness),
+            &DGUSRxHandler::brightness,
+            &DGUSTxHandler::brightness),
 
   // SPECIAL CASES
 
-  VP_HELPER_TX(DGUS_Addr::STATUS_Percent_Complete, &DGUSTxHandler::Percent),
-  VP_HELPER_RX_NODATA(DGUS_Addr::INFOS_Debug, &DGUSRxHandler::Debug),
+  VP_HELPER_TX(DGUS_Addr::STATUS_Percent_Complete, &DGUSTxHandler::percent),
+  VP_HELPER_RX_NODATA(DGUS_Addr::INFOS_Debug, &DGUSRxHandler::debug),
 
   VP_HELPER((DGUS_Addr)0, 0, VPFLAG_NONE, nullptr, nullptr, nullptr)
 

commit 37d0f49a82cd2e4d91dce4e62671b266924eb2a7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed May 24 01:05:55 2023 -0500

    🧑‍💻 Misc. ExtUI LCD cleanup (#25872)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index cd5408e190..69f792c45d 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -81,7 +81,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
   VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Printing, &DGUSRxHandler::ScreenChange),
 
   #if HAS_MEDIA
-    VP_HELPER_RX(DGUS_Addr::SD_SelectFile,   &DGUSRxHandler::SelectFile),
+    VP_HELPER_RX(DGUS_Addr::SD_SelectFile,   &DGUSRxHandler::selectFile),
     VP_HELPER_RX(DGUS_Addr::SD_Scroll,       &DGUSRxHandler::Scroll),
     VP_HELPER_RX_NODATA(DGUS_Addr::SD_Print, &DGUSRxHandler::PrintFile),
   #endif

commit 5664c02d077e028f84a24efd96c2eebe97ce8763
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Apr 22 22:43:09 2023 -0500

    🧑‍💻 Generalize SDSUPPORT as HAS_MEDIA
    
    In preparation for single- and multi-volume refactoring.

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index 3f00dbb037..cd5408e190 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -80,7 +80,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
   VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Idle,     &DGUSRxHandler::ScreenChange),
   VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Printing, &DGUSRxHandler::ScreenChange),
 
-  #if ENABLED(SDSUPPORT)
+  #if HAS_MEDIA
     VP_HELPER_RX(DGUS_Addr::SD_SelectFile,   &DGUSRxHandler::SelectFile),
     VP_HELPER_RX(DGUS_Addr::SD_Scroll,       &DGUSRxHandler::Scroll),
     VP_HELPER_RX_NODATA(DGUS_Addr::SD_Print, &DGUSRxHandler::PrintFile),
@@ -150,7 +150,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
 
   // WRITE-ONLY VARIABLES
 
-  #if ENABLED(SDSUPPORT)
+  #if HAS_MEDIA
     VP_HELPER_TX(DGUS_Addr::SD_Type, &DGUSTxHandler::FileType),
     VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName0,
                       DGUS_FILENAME_LEN,

commit 9039e99df1b95f6a352fb1b2ae27f893b091cfe7
Author: Neo2003 <Neo2003@users.noreply.github.com>
Date:   Mon Mar 13 22:55:03 2023 +0100

    📺 DGUS_RELOADED 1.03 (#25490)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index 4def1c48f8..3f00dbb037 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -116,8 +116,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
   VP_HELPER_RX(DGUS_Addr::LEVEL_MANUAL_Point, &DGUSRxHandler::MoveToPoint),
 
   VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Probe,   &DGUSRxHandler::Probe),
-  VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Disable,
-                      &DGUSRxHandler::DisableABL),
+  VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Disable, &DGUSRxHandler::DisableABL),
 
   VP_HELPER_RX(DGUS_Addr::FILAMENT_Select,    &DGUSRxHandler::FilamentSelect),
   VP_HELPER_RX(DGUS_Addr::FILAMENT_SetLength, &DGUSRxHandler::FilamentLength),
@@ -205,14 +204,14 @@ const struct DGUS_VP vp_list[] PROGMEM = {
 
   VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_Bed,
                     &thermalManager.temp_bed.celsius,
-                    &DGUSTxHandler::ExtraToInteger<float>),
+                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
   VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_Bed,
                     &thermalManager.temp_bed.target,
                     &DGUSTxHandler::ExtraToInteger<int16_t>),
   VP_HELPER_TX(DGUS_Addr::TEMP_Max_Bed, &DGUSTxHandler::TempMax),
   VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_H0,
                     &thermalManager.temp_hotend[ExtUI::heater_t::H0].celsius,
-                    &DGUSTxHandler::ExtraToInteger<float>),
+                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
   VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_H0,
                     &thermalManager.temp_hotend[ExtUI::heater_t::H0].target,
                     &DGUSTxHandler::ExtraToInteger<int16_t>),
@@ -220,7 +219,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
   #if HAS_MULTI_HOTEND
     VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_H1,
                       &thermalManager.temp_hotend[ExtUI::heater_t::H1].celsius,
-                      &DGUSTxHandler::ExtraToInteger<float>),
+                     (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
     VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_H1,
                       &thermalManager.temp_hotend[ExtUI::heater_t::H1].target,
                       &DGUSTxHandler::ExtraToInteger<int16_t>),

commit cc31537ae3ca3be37ffb171540e7445f30827930
Author: albatorsssx <albator_ssx@hotmail.com>
Date:   Tue Mar 7 03:04:47 2023 +0100

    🌐 DGUS Reloaded non-accented French (#25443)
    
    Co-authored-by: Scott Lahteine <thinkyhead@users.noreply.github.com>

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index 4370a06d04..4def1c48f8 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -177,12 +177,12 @@ const struct DGUS_VP vp_list[] PROGMEM = {
   VP_HELPER_TX_AUTO(DGUS_Addr::STATUS_PositionZ,
                     nullptr,
                     &DGUSTxHandler::PositionZ),
-  VP_HELPER(DGUS_Addr::STATUS_Ellapsed,
+  VP_HELPER(DGUS_Addr::STATUS_Elapsed,
             DGUS_ELAPSED_LEN,
             VPFLAG_AUTOUPLOAD,
             nullptr,
             nullptr,
-            &DGUSTxHandler::Ellapsed),
+            &DGUSTxHandler::Elapsed),
   VP_HELPER_TX_AUTO(DGUS_Addr::STATUS_Percent,
                     nullptr,
                     &DGUSTxHandler::Percent),

commit 96bc084f3d791bc93265f217181986863e8e5fc7
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Feb 18 02:15:16 2023 -0600

    🎨 Misc. LCD cleanup (#25400)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index faa6a0d235..4370a06d04 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -178,7 +178,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
                     nullptr,
                     &DGUSTxHandler::PositionZ),
   VP_HELPER(DGUS_Addr::STATUS_Ellapsed,
-            DGUS_ELLAPSED_LEN,
+            DGUS_ELAPSED_LEN,
             VPFLAG_AUTOUPLOAD,
             nullptr,
             nullptr,

commit c3fe4abd446336c50bdb892f08fa24a08f1bdda5
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat Jan 7 22:59:25 2023 -0600

    🔨 DGUS_LCD_UI version check

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index e77aa45011..faa6a0d235 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -22,7 +22,7 @@
 
 #include "../../../../inc/MarlinConfigPre.h"
 
-#if ENABLED(DGUS_LCD_UI_RELOADED)
+#if DGUS_LCD_UI_RELOADED
 
 #include "DGUS_VPList.h"
 

commit aa2c6387e95bdab955499627e3890561842f0a6a
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Oct 26 21:54:43 2021 -0500

    🎨 Apply HAS_MULTI_HOTEND conditional

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index 27b6d9036c..e77aa45011 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -102,7 +102,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
   VP_HELPER_RX(DGUS_Addr::TEMP_Preset,        &DGUSRxHandler::TempPreset),
   VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_Bed, &DGUSRxHandler::TempTarget),
   VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_H0,  &DGUSRxHandler::TempTarget),
-  #if HOTENDS > 1
+  #if HAS_MULTI_HOTEND
     VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_H1,  &DGUSRxHandler::TempTarget),
   #endif
   VP_HELPER_RX(DGUS_Addr::TEMP_Cool,          &DGUSRxHandler::TempCool),
@@ -217,7 +217,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
                     &thermalManager.temp_hotend[ExtUI::heater_t::H0].target,
                     &DGUSTxHandler::ExtraToInteger<int16_t>),
   VP_HELPER_TX(DGUS_Addr::TEMP_Max_H0, &DGUSTxHandler::TempMax),
-  #if HOTENDS > 1
+  #if HAS_MULTI_HOTEND
     VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_H1,
                       &thermalManager.temp_hotend[ExtUI::heater_t::H1].celsius,
                       &DGUSTxHandler::ExtraToInteger<float>),

commit 9d72cbf84b970e5060f8dceef7158b9ca8252856
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Fri Oct 15 15:07:47 2021 -0500

    💡 Update old gnu.org links

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index 486f00f6ed..27b6d9036c 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -16,7 +16,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  *
  */
 

commit b88117d6364b8919a8a7df6c80d8132af98a6afc
Author: Scott Lahteine <github@thinkyhead.com>
Date:   Tue Sep 21 06:25:13 2021 -0500

    🎨 Fix L64xx enable, clean up conditionals

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
index 3f5690cfe7..486f00f6ed 100644
--- a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -92,7 +92,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
 
   VP_HELPER_RX(DGUS_Addr::ADJUST_SetFeedrate,     &DGUSRxHandler::Feedrate),
   VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_CUR, &DGUSRxHandler::Flowrate),
-  #if EXTRUDERS > 1
+  #if HAS_MULTI_EXTRUDER
     VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_E0,  &DGUSRxHandler::Flowrate),
     VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_E1,  &DGUSRxHandler::Flowrate),
   #endif
@@ -194,7 +194,7 @@ const struct DGUS_VP vp_list[] PROGMEM = {
   VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Flowrate_CUR,
                     nullptr,
                     &DGUSTxHandler::Flowrate),
-  #if EXTRUDERS > 1
+  #if HAS_MULTI_EXTRUDER
     VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Flowrate_E0,
                       nullptr,
                       &DGUSTxHandler::Flowrate),

commit b0e798330d8f5ade4a230e0a91f05482d100bb97
Author: mrv96 <mrv96@users.noreply.github.com>
Date:   Tue Sep 7 02:51:04 2021 +0200

    ✨Add DGUS_LCD_UI_RELOADED (#21931)

diff --git a/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
new file mode 100644
index 0000000000..3f5690cfe7
--- /dev/null
+++ b/Marlin/src/lcd/extui/dgus_reloaded/definition/DGUS_VPList.cpp
@@ -0,0 +1,368 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (c) 2021 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "../../../../inc/MarlinConfigPre.h"
+
+#if ENABLED(DGUS_LCD_UI_RELOADED)
+
+#include "DGUS_VPList.h"
+
+#include "../config/DGUS_Addr.h"
+#include "../DGUSScreenHandler.h"
+#include "../DGUSRxHandler.h"
+#include "../DGUSTxHandler.h"
+
+#include "../../ui_api.h"
+#include "../../../../module/probe.h"
+#include "../../../../module/motion.h"
+#include "../../../../module/temperature.h"
+
+const char DGUS_MACHINENAME[] PROGMEM = MACHINE_NAME;
+const char DGUS_MARLINVERSION[] PROGMEM = SHORT_BUILD_VERSION;
+
+#define VP_HELPER(ADDR, SIZE, FLAGS, EXTRA, RXHANDLER, TXHANDLER) \
+  { .addr = ADDR, \
+  .size = SIZE, \
+  .flags = FLAGS, \
+  .extra = EXTRA, \
+  .rx_handler = RXHANDLER, \
+  .tx_handler = TXHANDLER }
+
+#define VP_HELPER_WORD(ADDR, FLAGS, EXTRA, RXHANDLER, TXHANDLER) \
+  VP_HELPER(ADDR, 2, FLAGS, EXTRA, RXHANDLER, TXHANDLER)
+
+#define VP_HELPER_DWORD(ADDR, FLAGS, EXTRA, RXHANDLER, TXHANDLER) \
+  VP_HELPER(ADDR, 4, FLAGS, EXTRA, RXHANDLER, TXHANDLER)
+
+#define VP_HELPER_RX(ADDR, RXHANDLER) \
+  VP_HELPER_WORD(ADDR, VPFLAG_NONE, nullptr, RXHANDLER, nullptr)
+
+#define VP_HELPER_RX_NODATA(ADDR, RXHANDLER) \
+  VP_HELPER(ADDR, 0, VPFLAG_NONE, nullptr, RXHANDLER, nullptr)
+
+#define VP_HELPER_TX(ADDR, TXHANDLER) \
+  VP_HELPER_WORD(ADDR, VPFLAG_NONE, nullptr, nullptr, TXHANDLER)
+
+#define VP_HELPER_TX_SIZE(ADDR, SIZE, TXHANDLER) \
+  VP_HELPER(ADDR, SIZE, VPFLAG_NONE, nullptr, nullptr, TXHANDLER)
+
+#define VP_HELPER_TX_EXTRA(ADDR, EXTRA, TXHANDLER) \
+  VP_HELPER_WORD(ADDR, VPFLAG_NONE, EXTRA, nullptr, TXHANDLER)
+
+#define VP_HELPER_TX_AUTO(ADDR, EXTRA, TXHANDLER) \
+  VP_HELPER_WORD(ADDR, VPFLAG_AUTOUPLOAD, EXTRA, nullptr, TXHANDLER)
+
+const struct DGUS_VP vp_list[] PROGMEM = {
+
+  // READ-ONLY VARIABLES
+
+  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE,          &DGUSRxHandler::ScreenChange),
+  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_SD,       &DGUSRxHandler::ScreenChange),
+  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Idle,     &DGUSRxHandler::ScreenChange),
+  VP_HELPER_RX(DGUS_Addr::SCREENCHANGE_Printing, &DGUSRxHandler::ScreenChange),
+
+  #if ENABLED(SDSUPPORT)
+    VP_HELPER_RX(DGUS_Addr::SD_SelectFile,   &DGUSRxHandler::SelectFile),
+    VP_HELPER_RX(DGUS_Addr::SD_Scroll,       &DGUSRxHandler::Scroll),
+    VP_HELPER_RX_NODATA(DGUS_Addr::SD_Print, &DGUSRxHandler::PrintFile),
+  #endif
+
+  VP_HELPER_RX(DGUS_Addr::STATUS_Abort,  &DGUSRxHandler::PrintAbort),
+  VP_HELPER_RX(DGUS_Addr::STATUS_Pause,  &DGUSRxHandler::PrintPause),
+  VP_HELPER_RX(DGUS_Addr::STATUS_Resume, &DGUSRxHandler::PrintResume),
+
+  VP_HELPER_RX(DGUS_Addr::ADJUST_SetFeedrate,     &DGUSRxHandler::Feedrate),
+  VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_CUR, &DGUSRxHandler::Flowrate),
+  #if EXTRUDERS > 1
+    VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_E0,  &DGUSRxHandler::Flowrate),
+    VP_HELPER_RX(DGUS_Addr::ADJUST_SetFlowrate_E1,  &DGUSRxHandler::Flowrate),
+  #endif
+  VP_HELPER_RX(DGUS_Addr::ADJUST_SetBabystep,     &DGUSRxHandler::BabystepSet),
+  VP_HELPER_RX(DGUS_Addr::ADJUST_Babystep,        &DGUSRxHandler::Babystep),
+
+  VP_HELPER_RX(DGUS_Addr::TEMP_Preset,        &DGUSRxHandler::TempPreset),
+  VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_Bed, &DGUSRxHandler::TempTarget),
+  VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_H0,  &DGUSRxHandler::TempTarget),
+  #if HOTENDS > 1
+    VP_HELPER_RX(DGUS_Addr::TEMP_SetTarget_H1,  &DGUSRxHandler::TempTarget),
+  #endif
+  VP_HELPER_RX(DGUS_Addr::TEMP_Cool,          &DGUSRxHandler::TempCool),
+
+  VP_HELPER_RX(DGUS_Addr::STEPPER_Control, &DGUSRxHandler::Steppers),
+
+  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_Set,     &DGUSRxHandler::ZOffset),
+  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_Step,    &DGUSRxHandler::ZOffsetStep),
+  VP_HELPER_RX(DGUS_Addr::LEVEL_OFFSET_SetStep, &DGUSRxHandler::ZOffsetSetStep),
+
+  VP_HELPER_RX(DGUS_Addr::LEVEL_MANUAL_Point, &DGUSRxHandler::MoveToPoint),
+
+  VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Probe,   &DGUSRxHandler::Probe),
+  VP_HELPER_RX_NODATA(DGUS_Addr::LEVEL_AUTO_Disable,
+                      &DGUSRxHandler::DisableABL),
+
+  VP_HELPER_RX(DGUS_Addr::FILAMENT_Select,    &DGUSRxHandler::FilamentSelect),
+  VP_HELPER_RX(DGUS_Addr::FILAMENT_SetLength, &DGUSRxHandler::FilamentLength),
+  VP_HELPER_RX(DGUS_Addr::FILAMENT_Move,      &DGUSRxHandler::FilamentMove),
+
+  VP_HELPER_RX(DGUS_Addr::MOVE_Home,    &DGUSRxHandler::Home),
+  VP_HELPER_RX(DGUS_Addr::MOVE_SetX,    &DGUSRxHandler::Move),
+  VP_HELPER_RX(DGUS_Addr::MOVE_SetY,    &DGUSRxHandler::Move),
+  VP_HELPER_RX(DGUS_Addr::MOVE_SetZ,    &DGUSRxHandler::Move),
+  VP_HELPER_RX(DGUS_Addr::MOVE_Step,    &DGUSRxHandler::MoveStep),
+  VP_HELPER_RX(DGUS_Addr::MOVE_SetStep, &DGUSRxHandler::MoveSetStep),
+
+  VP_HELPER_RX_NODATA(DGUS_Addr::GCODE_Clear,   &DGUSRxHandler::GcodeClear),
+  VP_HELPER_RX_NODATA(DGUS_Addr::GCODE_Execute, &DGUSRxHandler::GcodeExecute),
+
+  VP_HELPER_RX(DGUS_Addr::EEPROM_Reset, &DGUSRxHandler::ResetEEPROM),
+
+  VP_HELPER_RX(DGUS_Addr::SETTINGS2_Extra, &DGUSRxHandler::SettingsExtra),
+
+  VP_HELPER_RX(DGUS_Addr::PID_Select,     &DGUSRxHandler::PIDSelect),
+  VP_HELPER_RX(DGUS_Addr::PID_SetTemp,    &DGUSRxHandler::PIDSetTemp),
+  VP_HELPER_RX_NODATA(DGUS_Addr::PID_Run, &DGUSRxHandler::PIDRun),
+
+  #if ENABLED(POWER_LOSS_RECOVERY)
+    VP_HELPER_RX(DGUS_Addr::POWERLOSS_Abort,  &DGUSRxHandler::PowerLossAbort),
+    VP_HELPER_RX(DGUS_Addr::POWERLOSS_Resume, &DGUSRxHandler::PowerLossResume),
+  #endif
+
+  VP_HELPER_RX(DGUS_Addr::WAIT_Abort, &DGUSRxHandler::WaitAbort),
+  VP_HELPER_RX_NODATA(DGUS_Addr::WAIT_Continue, &DGUSRxHandler::WaitContinue),
+
+  // WRITE-ONLY VARIABLES
+
+  #if ENABLED(SDSUPPORT)
+    VP_HELPER_TX(DGUS_Addr::SD_Type, &DGUSTxHandler::FileType),
+    VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName0,
+                      DGUS_FILENAME_LEN,
+                      &DGUSTxHandler::FileName),
+    VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName1,
+                      DGUS_FILENAME_LEN,
+                      &DGUSTxHandler::FileName),
+    VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName2,
+                      DGUS_FILENAME_LEN,
+                      &DGUSTxHandler::FileName),
+    VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName3,
+                      DGUS_FILENAME_LEN,
+                      &DGUSTxHandler::FileName),
+    VP_HELPER_TX_SIZE(DGUS_Addr::SD_FileName4,
+                      DGUS_FILENAME_LEN,
+                      &DGUSTxHandler::FileName),
+    VP_HELPER_TX(DGUS_Addr::SD_ScrollIcons, &DGUSTxHandler::ScrollIcons),
+    VP_HELPER_TX_SIZE(DGUS_Addr::SD_SelectedFileName,
+                      DGUS_FILENAME_LEN,
+                      &DGUSTxHandler::SelectedFileName),
+  #endif
+
+  VP_HELPER_TX_AUTO(DGUS_Addr::STATUS_PositionZ,
+                    nullptr,
+                    &DGUSTxHandler::PositionZ),
+  VP_HELPER(DGUS_Addr::STATUS_Ellapsed,
+            DGUS_ELLAPSED_LEN,
+            VPFLAG_AUTOUPLOAD,
+            nullptr,
+            nullptr,
+            &DGUSTxHandler::Ellapsed),
+  VP_HELPER_TX_AUTO(DGUS_Addr::STATUS_Percent,
+                    nullptr,
+                    &DGUSTxHandler::Percent),
+  VP_HELPER_TX(DGUS_Addr::STATUS_Icons, &DGUSTxHandler::StatusIcons),
+
+  VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Feedrate,
+                    &feedrate_percentage,
+                    &DGUSTxHandler::ExtraToInteger<int16_t>),
+  VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Flowrate_CUR,
+                    nullptr,
+                    &DGUSTxHandler::Flowrate),
+  #if EXTRUDERS > 1
+    VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Flowrate_E0,
+                      nullptr,
+                      &DGUSTxHandler::Flowrate),
+    VP_HELPER_TX_AUTO(DGUS_Addr::ADJUST_Flowrate_E1,
+                      nullptr,
+                      &DGUSTxHandler::Flowrate),
+  #endif
+
+  VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_Bed,
+                    &thermalManager.temp_bed.celsius,
+                    &DGUSTxHandler::ExtraToInteger<float>),
+  VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_Bed,
+                    &thermalManager.temp_bed.target,
+                    &DGUSTxHandler::ExtraToInteger<int16_t>),
+  VP_HELPER_TX(DGUS_Addr::TEMP_Max_Bed, &DGUSTxHandler::TempMax),
+  VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_H0,
+                    &thermalManager.temp_hotend[ExtUI::heater_t::H0].celsius,
+                    &DGUSTxHandler::ExtraToInteger<float>),
+  VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_H0,
+                    &thermalManager.temp_hotend[ExtUI::heater_t::H0].target,
+                    &DGUSTxHandler::ExtraToInteger<int16_t>),
+  VP_HELPER_TX(DGUS_Addr::TEMP_Max_H0, &DGUSTxHandler::TempMax),
+  #if HOTENDS > 1
+    VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Current_H1,
+                      &thermalManager.temp_hotend[ExtUI::heater_t::H1].celsius,
+                      &DGUSTxHandler::ExtraToInteger<float>),
+    VP_HELPER_TX_AUTO(DGUS_Addr::TEMP_Target_H1,
+                      &thermalManager.temp_hotend[ExtUI::heater_t::H1].target,
+                      &DGUSTxHandler::ExtraToInteger<int16_t>),
+    VP_HELPER_TX(DGUS_Addr::TEMP_Max_H1, &DGUSTxHandler::TempMax),
+  #endif
+
+  VP_HELPER_TX_AUTO(DGUS_Addr::STEPPER_Status,
+                    nullptr,
+                    &DGUSTxHandler::StepperStatus),
+
+  VP_HELPER_TX_AUTO(DGUS_Addr::LEVEL_OFFSET_Current,
+                    &probe.offset.z,
+                    (&DGUSTxHandler::ExtraToFixedPoint<float, 2>)),
+  VP_HELPER_TX_EXTRA(DGUS_Addr::LEVEL_OFFSET_StepIcons,
+                     &DGUSScreenHandler::offset_steps,
+                     &DGUSTxHandler::StepIcons),
+
+  VP_HELPER_TX_AUTO(DGUS_Addr::LEVEL_AUTO_DisableIcon,
+                    nullptr,
+                    &DGUSTxHandler::ABLDisableIcon),
+  VP_HELPER_TX(DGUS_Addr::LEVEL_AUTO_Grid, &DGUSTxHandler::ABLGrid),
+
+  VP_HELPER_TX_EXTRA(DGUS_Addr::LEVEL_PROBING_Icons1,
+                     &DGUSScreenHandler::probing_icons[0],
+                     &DGUSTxHandler::ExtraToInteger<uint16_t>),
+  VP_HELPER_TX_EXTRA(DGUS_Addr::LEVEL_PROBING_Icons2,
+                     &DGUSScreenHandler::probing_icons[1],
+                     &DGUSTxHandler::ExtraToInteger<uint16_t>),
+
+  VP_HELPER_TX(DGUS_Addr::FILAMENT_ExtruderIcons, &DGUSTxHandler::FilamentIcons),
+  VP_HELPER_TX_EXTRA(DGUS_Addr::FILAMENT_Length,
+                     &DGUSScreenHandler::filament_length,
+                     &DGUSTxHandler::ExtraToInteger<uint16_t>),
+
+  VP_HELPER_TX_AUTO(DGUS_Addr::MOVE_CurrentX,
+                    &current_position.x,
+                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+  VP_HELPER_TX_AUTO(DGUS_Addr::MOVE_CurrentY,
+                    &current_position.y,
+                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+  VP_HELPER_TX_AUTO(DGUS_Addr::MOVE_CurrentZ,
+                    &current_position.z,
+                    (&DGUSTxHandler::ExtraToFixedPoint<float, 1>)),
+  VP_HELPER_TX_EXTRA(DGUS_Addr::MOVE_StepIcons,
+                     &DGUSScreenHandler::move_steps,
+                     &DGUSTxHandler::StepIcons),
+
+  VP_HELPER_TX(DGUS_Addr::SETTINGS2_BLTouch, &DGUSTxHandler::BLTouch),
+
+  VP_HELPER_TX(DGUS_Addr::PID_HeaterIcons, &DGUSTxHandler::PIDIcons),
+  VP_HELPER_TX_EXTRA(DGUS_Addr::PID_Temp,
+                     &DGUSScreenHandler::pid_temp,
+                     &DGUSTxHandler::ExtraToInteger<uint16_t>),
+  VP_HELPER_DWORD(DGUS_Addr::PID_Kp,
+                  VPFLAG_AUTOUPLOAD,
+                  nullptr,
+                  nullptr,
+                  &DGUSTxHandler::PIDKp),
+  VP_HELPER_DWORD(DGUS_Addr::PID_Ki,
+                  VPFLAG_AUTOUPLOAD,
+                  nullptr,
+                  nullptr,
+                  &DGUSTxHandler::PIDKi),
+  VP_HELPER_DWORD(DGUS_Addr::PID_Kd,
+                  VPFLAG_AUTOUPLOAD,
+                  nullptr,
+                  nullptr,
+                  &DGUSTxHandler::PIDKd),
+
+  VP_HELPER(DGUS_Addr::INFOS_Machine,
+            DGUS_MACHINE_LEN,
+            VPFLAG_NONE,
+            (void*)DGUS_MACHINENAME,
+            nullptr,
+            &DGUSTxHandler::ExtraPGMToString),
+  VP_HELPER_TX_SIZE(DGUS_Addr::INFOS_BuildVolume,
+                    DGUS_BUILDVOLUME_LEN,
+                    &DGUSTxHandler::BuildVolume),
+  VP_HELPER(DGUS_Addr::INFOS_Version,
+            DGUS_VERSION_LEN,
+            VPFLAG_NONE,
+            (void*)DGUS_MARLINVERSION,
+            nullptr,
+            &DGUSTxHandler::ExtraPGMToString),
+  VP_HELPER_TX(DGUS_Addr::INFOS_TotalPrints, &DGUSTxHandler::TotalPrints),
+  VP_HELPER_TX(DGUS_Addr::INFOS_FinishedPrints, &DGUSTxHandler::FinishedPrints),
+  VP_HELPER_TX_SIZE(DGUS_Addr::INFOS_PrintTime,
+                    DGUS_PRINTTIME_LEN,
+                    &DGUSTxHandler::PrintTime),
+  VP_HELPER_TX_SIZE(DGUS_Addr::INFOS_LongestPrint,
+                    DGUS_LONGESTPRINT_LEN,
+                    &DGUSTxHandler::LongestPrint),
+  VP_HELPER_TX_SIZE(DGUS_Addr::INFOS_FilamentUsed,
+                    DGUS_FILAMENTUSED_LEN,
+                    &DGUSTxHandler::FilamentUsed),
+
+  VP_HELPER_TX(DGUS_Addr::WAIT_Icons, &DGUSTxHandler::WaitIcons),
+
+  // READ-WRITE VARIABLES
+
+  VP_HELPER(DGUS_Addr::FAN0_Speed,
+            2,
+            VPFLAG_AUTOUPLOAD,
+            nullptr,
+            &DGUSRxHandler::FanSpeed,
+            &DGUSTxHandler::FanSpeed),
+
+  VP_HELPER(DGUS_Addr::GCODE_Data,
+            DGUS_GCODE_LEN,
+            VPFLAG_RXSTRING,
+            (void*)DGUSScreenHandler::gcode,
+            &DGUSRxHandler::StringToExtra,
+            &DGUSTxHandler::ExtraToString),
+
+  VP_HELPER(DGUS_Addr::PID_Cycles,
+            2,
+            VPFLAG_NONE,
+            &DGUSScreenHandler::pid_cycles,
+            &DGUSRxHandler::IntegerToExtra<uint8_t>,
+            &DGUSTxHandler::ExtraToInteger<uint8_t>),
+
+  VP_HELPER(DGUS_Addr::VOLUME_Level,
+            2,
+            VPFLAG_NONE,
+            nullptr,
+            &DGUSRxHandler::Volume,
+            &DGUSTxHandler::Volume),
+
+  VP_HELPER(DGUS_Addr::BRIGHTNESS_Level,
+            2,
+            VPFLAG_NONE,
+            nullptr,
+            &DGUSRxHandler::Brightness,
+            &DGUSTxHandler::Brightness),
+
+  // SPECIAL CASES
+
+  VP_HELPER_TX(DGUS_Addr::STATUS_Percent_Complete, &DGUSTxHandler::Percent),
+  VP_HELPER_RX_NODATA(DGUS_Addr::INFOS_Debug, &DGUSRxHandler::Debug),
+
+  VP_HELPER((DGUS_Addr)0, 0, VPFLAG_NONE, nullptr, nullptr, nullptr)
+
+};
+
+#endif // DGUS_LCD_UI_RELOADED
